
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00027fd8  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00003c4c  08028188  08028188  00038188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 000021de  0802bdd4  0802bdd4  0003bdd4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 000000f0  0802dfb4  0802dfb4  0003dfb4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 0000052c  0802e0a4  0802e0a4  0003e0a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 00119030  0802e5d0  0802e5d0  0003e5d0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  08147600  08147600  00160168  2**0
                  CONTENTS
  8 .ARM          00000008  08147600  08147600  00157600  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  08147608  08147608  00160168  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  08147608  08147608  00157608  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000008  0814761c  0814761c  0015761c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         00000168  20000000  08147624  00160000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          0001428c  20000168  0814778c  00160168  2**3
                  ALLOC
 14 ._user_heap_stack 00001404  200143f4  0814778c  001643f4  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  00160168  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 00070800  d0000000  d0000000  00170000  2**2
                  ALLOC
 17 .comment      000000c2  00000000  00000000  00160198  2**0
                  CONTENTS, READONLY
 18 .debug_line   0008c082  00000000  00000000  0016025a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line_str 00000093  00000000  00000000  001ec2dc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_info   002418fe  00000000  00000000  001ec36f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_abbrev 0002cfb2  00000000  00000000  0042dc6d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_aranges 00004018  00000000  00000000  0045ac20  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_str    0011cb20  00000000  00000000  0045ec38  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_rnglists 00006f47  00000000  00000000  0057b758  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_loclists 0002d538  00000000  00000000  0058269f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_macro  00038db6  00000000  00000000  005afbd7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_frame  0000be80  00000000  00000000  005e8990  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000168 	.word	0x20000168
 80001cc:	00000000 	.word	0x00000000
 80001d0:	08028170 	.word	0x08028170

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	2000016c 	.word	0x2000016c
 80001ec:	08028170 	.word	0x08028170

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_uldivmod>:
 8000290:	b953      	cbnz	r3, 80002a8 <__aeabi_uldivmod+0x18>
 8000292:	b94a      	cbnz	r2, 80002a8 <__aeabi_uldivmod+0x18>
 8000294:	2900      	cmp	r1, #0
 8000296:	bf08      	it	eq
 8000298:	2800      	cmpeq	r0, #0
 800029a:	bf1c      	itt	ne
 800029c:	f04f 31ff 	movne.w	r1, #4294967295
 80002a0:	f04f 30ff 	movne.w	r0, #4294967295
 80002a4:	f000 b970 	b.w	8000588 <__aeabi_idiv0>
 80002a8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002ac:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002b0:	f000 f806 	bl	80002c0 <__udivmoddi4>
 80002b4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002b8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002bc:	b004      	add	sp, #16
 80002be:	4770      	bx	lr

080002c0 <__udivmoddi4>:
 80002c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002c4:	9e08      	ldr	r6, [sp, #32]
 80002c6:	460d      	mov	r5, r1
 80002c8:	4604      	mov	r4, r0
 80002ca:	460f      	mov	r7, r1
 80002cc:	2b00      	cmp	r3, #0
 80002ce:	d14a      	bne.n	8000366 <__udivmoddi4+0xa6>
 80002d0:	428a      	cmp	r2, r1
 80002d2:	4694      	mov	ip, r2
 80002d4:	d965      	bls.n	80003a2 <__udivmoddi4+0xe2>
 80002d6:	fab2 f382 	clz	r3, r2
 80002da:	b143      	cbz	r3, 80002ee <__udivmoddi4+0x2e>
 80002dc:	fa02 fc03 	lsl.w	ip, r2, r3
 80002e0:	f1c3 0220 	rsb	r2, r3, #32
 80002e4:	409f      	lsls	r7, r3
 80002e6:	fa20 f202 	lsr.w	r2, r0, r2
 80002ea:	4317      	orrs	r7, r2
 80002ec:	409c      	lsls	r4, r3
 80002ee:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 80002f2:	fa1f f58c 	uxth.w	r5, ip
 80002f6:	fbb7 f1fe 	udiv	r1, r7, lr
 80002fa:	0c22      	lsrs	r2, r4, #16
 80002fc:	fb0e 7711 	mls	r7, lr, r1, r7
 8000300:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 8000304:	fb01 f005 	mul.w	r0, r1, r5
 8000308:	4290      	cmp	r0, r2
 800030a:	d90a      	bls.n	8000322 <__udivmoddi4+0x62>
 800030c:	eb1c 0202 	adds.w	r2, ip, r2
 8000310:	f101 37ff 	add.w	r7, r1, #4294967295
 8000314:	f080 811c 	bcs.w	8000550 <__udivmoddi4+0x290>
 8000318:	4290      	cmp	r0, r2
 800031a:	f240 8119 	bls.w	8000550 <__udivmoddi4+0x290>
 800031e:	3902      	subs	r1, #2
 8000320:	4462      	add	r2, ip
 8000322:	1a12      	subs	r2, r2, r0
 8000324:	b2a4      	uxth	r4, r4
 8000326:	fbb2 f0fe 	udiv	r0, r2, lr
 800032a:	fb0e 2210 	mls	r2, lr, r0, r2
 800032e:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000332:	fb00 f505 	mul.w	r5, r0, r5
 8000336:	42a5      	cmp	r5, r4
 8000338:	d90a      	bls.n	8000350 <__udivmoddi4+0x90>
 800033a:	eb1c 0404 	adds.w	r4, ip, r4
 800033e:	f100 32ff 	add.w	r2, r0, #4294967295
 8000342:	f080 8107 	bcs.w	8000554 <__udivmoddi4+0x294>
 8000346:	42a5      	cmp	r5, r4
 8000348:	f240 8104 	bls.w	8000554 <__udivmoddi4+0x294>
 800034c:	4464      	add	r4, ip
 800034e:	3802      	subs	r0, #2
 8000350:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000354:	1b64      	subs	r4, r4, r5
 8000356:	2100      	movs	r1, #0
 8000358:	b11e      	cbz	r6, 8000362 <__udivmoddi4+0xa2>
 800035a:	40dc      	lsrs	r4, r3
 800035c:	2300      	movs	r3, #0
 800035e:	e9c6 4300 	strd	r4, r3, [r6]
 8000362:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000366:	428b      	cmp	r3, r1
 8000368:	d908      	bls.n	800037c <__udivmoddi4+0xbc>
 800036a:	2e00      	cmp	r6, #0
 800036c:	f000 80ed 	beq.w	800054a <__udivmoddi4+0x28a>
 8000370:	2100      	movs	r1, #0
 8000372:	e9c6 0500 	strd	r0, r5, [r6]
 8000376:	4608      	mov	r0, r1
 8000378:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800037c:	fab3 f183 	clz	r1, r3
 8000380:	2900      	cmp	r1, #0
 8000382:	d149      	bne.n	8000418 <__udivmoddi4+0x158>
 8000384:	42ab      	cmp	r3, r5
 8000386:	d302      	bcc.n	800038e <__udivmoddi4+0xce>
 8000388:	4282      	cmp	r2, r0
 800038a:	f200 80f8 	bhi.w	800057e <__udivmoddi4+0x2be>
 800038e:	1a84      	subs	r4, r0, r2
 8000390:	eb65 0203 	sbc.w	r2, r5, r3
 8000394:	2001      	movs	r0, #1
 8000396:	4617      	mov	r7, r2
 8000398:	2e00      	cmp	r6, #0
 800039a:	d0e2      	beq.n	8000362 <__udivmoddi4+0xa2>
 800039c:	e9c6 4700 	strd	r4, r7, [r6]
 80003a0:	e7df      	b.n	8000362 <__udivmoddi4+0xa2>
 80003a2:	b902      	cbnz	r2, 80003a6 <__udivmoddi4+0xe6>
 80003a4:	deff      	udf	#255	; 0xff
 80003a6:	fab2 f382 	clz	r3, r2
 80003aa:	2b00      	cmp	r3, #0
 80003ac:	f040 8090 	bne.w	80004d0 <__udivmoddi4+0x210>
 80003b0:	1a8a      	subs	r2, r1, r2
 80003b2:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80003b6:	fa1f fe8c 	uxth.w	lr, ip
 80003ba:	2101      	movs	r1, #1
 80003bc:	fbb2 f5f7 	udiv	r5, r2, r7
 80003c0:	fb07 2015 	mls	r0, r7, r5, r2
 80003c4:	0c22      	lsrs	r2, r4, #16
 80003c6:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80003ca:	fb0e f005 	mul.w	r0, lr, r5
 80003ce:	4290      	cmp	r0, r2
 80003d0:	d908      	bls.n	80003e4 <__udivmoddi4+0x124>
 80003d2:	eb1c 0202 	adds.w	r2, ip, r2
 80003d6:	f105 38ff 	add.w	r8, r5, #4294967295
 80003da:	d202      	bcs.n	80003e2 <__udivmoddi4+0x122>
 80003dc:	4290      	cmp	r0, r2
 80003de:	f200 80cb 	bhi.w	8000578 <__udivmoddi4+0x2b8>
 80003e2:	4645      	mov	r5, r8
 80003e4:	1a12      	subs	r2, r2, r0
 80003e6:	b2a4      	uxth	r4, r4
 80003e8:	fbb2 f0f7 	udiv	r0, r2, r7
 80003ec:	fb07 2210 	mls	r2, r7, r0, r2
 80003f0:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80003f4:	fb0e fe00 	mul.w	lr, lr, r0
 80003f8:	45a6      	cmp	lr, r4
 80003fa:	d908      	bls.n	800040e <__udivmoddi4+0x14e>
 80003fc:	eb1c 0404 	adds.w	r4, ip, r4
 8000400:	f100 32ff 	add.w	r2, r0, #4294967295
 8000404:	d202      	bcs.n	800040c <__udivmoddi4+0x14c>
 8000406:	45a6      	cmp	lr, r4
 8000408:	f200 80bb 	bhi.w	8000582 <__udivmoddi4+0x2c2>
 800040c:	4610      	mov	r0, r2
 800040e:	eba4 040e 	sub.w	r4, r4, lr
 8000412:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8000416:	e79f      	b.n	8000358 <__udivmoddi4+0x98>
 8000418:	f1c1 0720 	rsb	r7, r1, #32
 800041c:	408b      	lsls	r3, r1
 800041e:	fa22 fc07 	lsr.w	ip, r2, r7
 8000422:	ea4c 0c03 	orr.w	ip, ip, r3
 8000426:	fa05 f401 	lsl.w	r4, r5, r1
 800042a:	fa20 f307 	lsr.w	r3, r0, r7
 800042e:	40fd      	lsrs	r5, r7
 8000430:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000434:	4323      	orrs	r3, r4
 8000436:	fbb5 f8f9 	udiv	r8, r5, r9
 800043a:	fa1f fe8c 	uxth.w	lr, ip
 800043e:	fb09 5518 	mls	r5, r9, r8, r5
 8000442:	0c1c      	lsrs	r4, r3, #16
 8000444:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000448:	fb08 f50e 	mul.w	r5, r8, lr
 800044c:	42a5      	cmp	r5, r4
 800044e:	fa02 f201 	lsl.w	r2, r2, r1
 8000452:	fa00 f001 	lsl.w	r0, r0, r1
 8000456:	d90b      	bls.n	8000470 <__udivmoddi4+0x1b0>
 8000458:	eb1c 0404 	adds.w	r4, ip, r4
 800045c:	f108 3aff 	add.w	sl, r8, #4294967295
 8000460:	f080 8088 	bcs.w	8000574 <__udivmoddi4+0x2b4>
 8000464:	42a5      	cmp	r5, r4
 8000466:	f240 8085 	bls.w	8000574 <__udivmoddi4+0x2b4>
 800046a:	f1a8 0802 	sub.w	r8, r8, #2
 800046e:	4464      	add	r4, ip
 8000470:	1b64      	subs	r4, r4, r5
 8000472:	b29d      	uxth	r5, r3
 8000474:	fbb4 f3f9 	udiv	r3, r4, r9
 8000478:	fb09 4413 	mls	r4, r9, r3, r4
 800047c:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000480:	fb03 fe0e 	mul.w	lr, r3, lr
 8000484:	45a6      	cmp	lr, r4
 8000486:	d908      	bls.n	800049a <__udivmoddi4+0x1da>
 8000488:	eb1c 0404 	adds.w	r4, ip, r4
 800048c:	f103 35ff 	add.w	r5, r3, #4294967295
 8000490:	d26c      	bcs.n	800056c <__udivmoddi4+0x2ac>
 8000492:	45a6      	cmp	lr, r4
 8000494:	d96a      	bls.n	800056c <__udivmoddi4+0x2ac>
 8000496:	3b02      	subs	r3, #2
 8000498:	4464      	add	r4, ip
 800049a:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 800049e:	fba3 9502 	umull	r9, r5, r3, r2
 80004a2:	eba4 040e 	sub.w	r4, r4, lr
 80004a6:	42ac      	cmp	r4, r5
 80004a8:	46c8      	mov	r8, r9
 80004aa:	46ae      	mov	lr, r5
 80004ac:	d356      	bcc.n	800055c <__udivmoddi4+0x29c>
 80004ae:	d053      	beq.n	8000558 <__udivmoddi4+0x298>
 80004b0:	b156      	cbz	r6, 80004c8 <__udivmoddi4+0x208>
 80004b2:	ebb0 0208 	subs.w	r2, r0, r8
 80004b6:	eb64 040e 	sbc.w	r4, r4, lr
 80004ba:	fa04 f707 	lsl.w	r7, r4, r7
 80004be:	40ca      	lsrs	r2, r1
 80004c0:	40cc      	lsrs	r4, r1
 80004c2:	4317      	orrs	r7, r2
 80004c4:	e9c6 7400 	strd	r7, r4, [r6]
 80004c8:	4618      	mov	r0, r3
 80004ca:	2100      	movs	r1, #0
 80004cc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80004d0:	f1c3 0120 	rsb	r1, r3, #32
 80004d4:	fa02 fc03 	lsl.w	ip, r2, r3
 80004d8:	fa20 f201 	lsr.w	r2, r0, r1
 80004dc:	fa25 f101 	lsr.w	r1, r5, r1
 80004e0:	409d      	lsls	r5, r3
 80004e2:	432a      	orrs	r2, r5
 80004e4:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80004e8:	fa1f fe8c 	uxth.w	lr, ip
 80004ec:	fbb1 f0f7 	udiv	r0, r1, r7
 80004f0:	fb07 1510 	mls	r5, r7, r0, r1
 80004f4:	0c11      	lsrs	r1, r2, #16
 80004f6:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 80004fa:	fb00 f50e 	mul.w	r5, r0, lr
 80004fe:	428d      	cmp	r5, r1
 8000500:	fa04 f403 	lsl.w	r4, r4, r3
 8000504:	d908      	bls.n	8000518 <__udivmoddi4+0x258>
 8000506:	eb1c 0101 	adds.w	r1, ip, r1
 800050a:	f100 38ff 	add.w	r8, r0, #4294967295
 800050e:	d22f      	bcs.n	8000570 <__udivmoddi4+0x2b0>
 8000510:	428d      	cmp	r5, r1
 8000512:	d92d      	bls.n	8000570 <__udivmoddi4+0x2b0>
 8000514:	3802      	subs	r0, #2
 8000516:	4461      	add	r1, ip
 8000518:	1b49      	subs	r1, r1, r5
 800051a:	b292      	uxth	r2, r2
 800051c:	fbb1 f5f7 	udiv	r5, r1, r7
 8000520:	fb07 1115 	mls	r1, r7, r5, r1
 8000524:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000528:	fb05 f10e 	mul.w	r1, r5, lr
 800052c:	4291      	cmp	r1, r2
 800052e:	d908      	bls.n	8000542 <__udivmoddi4+0x282>
 8000530:	eb1c 0202 	adds.w	r2, ip, r2
 8000534:	f105 38ff 	add.w	r8, r5, #4294967295
 8000538:	d216      	bcs.n	8000568 <__udivmoddi4+0x2a8>
 800053a:	4291      	cmp	r1, r2
 800053c:	d914      	bls.n	8000568 <__udivmoddi4+0x2a8>
 800053e:	3d02      	subs	r5, #2
 8000540:	4462      	add	r2, ip
 8000542:	1a52      	subs	r2, r2, r1
 8000544:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000548:	e738      	b.n	80003bc <__udivmoddi4+0xfc>
 800054a:	4631      	mov	r1, r6
 800054c:	4630      	mov	r0, r6
 800054e:	e708      	b.n	8000362 <__udivmoddi4+0xa2>
 8000550:	4639      	mov	r1, r7
 8000552:	e6e6      	b.n	8000322 <__udivmoddi4+0x62>
 8000554:	4610      	mov	r0, r2
 8000556:	e6fb      	b.n	8000350 <__udivmoddi4+0x90>
 8000558:	4548      	cmp	r0, r9
 800055a:	d2a9      	bcs.n	80004b0 <__udivmoddi4+0x1f0>
 800055c:	ebb9 0802 	subs.w	r8, r9, r2
 8000560:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000564:	3b01      	subs	r3, #1
 8000566:	e7a3      	b.n	80004b0 <__udivmoddi4+0x1f0>
 8000568:	4645      	mov	r5, r8
 800056a:	e7ea      	b.n	8000542 <__udivmoddi4+0x282>
 800056c:	462b      	mov	r3, r5
 800056e:	e794      	b.n	800049a <__udivmoddi4+0x1da>
 8000570:	4640      	mov	r0, r8
 8000572:	e7d1      	b.n	8000518 <__udivmoddi4+0x258>
 8000574:	46d0      	mov	r8, sl
 8000576:	e77b      	b.n	8000470 <__udivmoddi4+0x1b0>
 8000578:	3d02      	subs	r5, #2
 800057a:	4462      	add	r2, ip
 800057c:	e732      	b.n	80003e4 <__udivmoddi4+0x124>
 800057e:	4608      	mov	r0, r1
 8000580:	e70a      	b.n	8000398 <__udivmoddi4+0xd8>
 8000582:	4464      	add	r4, ip
 8000584:	3802      	subs	r0, #2
 8000586:	e742      	b.n	800040e <__udivmoddi4+0x14e>

08000588 <__aeabi_idiv0>:
 8000588:	4770      	bx	lr
 800058a:	bf00      	nop

0800058c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 800058c:	f8df d034 	ldr.w	sp, [pc, #52]	; 80005c4 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000590:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000592:	e003      	b.n	800059c <LoopCopyDataInit>

08000594 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000594:	4b0c      	ldr	r3, [pc, #48]	; (80005c8 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000596:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000598:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 800059a:	3104      	adds	r1, #4

0800059c <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 800059c:	480b      	ldr	r0, [pc, #44]	; (80005cc <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 800059e:	4b0c      	ldr	r3, [pc, #48]	; (80005d0 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 80005a0:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 80005a2:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 80005a4:	d3f6      	bcc.n	8000594 <CopyDataInit>
  ldr  r2, =_sbss
 80005a6:	4a0b      	ldr	r2, [pc, #44]	; (80005d4 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 80005a8:	e002      	b.n	80005b0 <LoopFillZerobss>

080005aa <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 80005aa:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80005ac:	f842 3b04 	str.w	r3, [r2], #4

080005b0 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 80005b0:	4b09      	ldr	r3, [pc, #36]	; (80005d8 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 80005b2:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80005b4:	d3f9      	bcc.n	80005aa <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80005b6:	f007 f95b 	bl	8007870 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80005ba:	f027 f85d 	bl	8027678 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80005be:	f000 ff5f 	bl	8001480 <main>
  bx  lr    
 80005c2:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 80005c4:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 80005c8:	08147624 	.word	0x08147624
  ldr  r0, =_sdata
 80005cc:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80005d0:	20000168 	.word	0x20000168
  ldr  r2, =_sbss
 80005d4:	20000168 	.word	0x20000168
  ldr  r3, = _ebss
 80005d8:	200143f4 	.word	0x200143f4

080005dc <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80005dc:	e7fe      	b.n	80005dc <ADC_IRQHandler>
	...

080005e0 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 80005e0:	4770      	bx	lr
 80005e2:	bf00      	nop

080005e4 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 80005e4:	b508      	push	{r3, lr}
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
 80005e6:	f000 fd35 	bl	8001054 <touchgfx_components_init>
  touchgfx_init();
}
 80005ea:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  touchgfx_init();
 80005ee:	f000 bcbd 	b.w	8000f6c <touchgfx_init>
 80005f2:	bf00      	nop

080005f4 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 80005f4:	f000 bd30 	b.w	8001058 <touchgfx_taskEntry>

080005f8 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80005f8:	4770      	bx	lr

080005fa <_ZN20STM32TouchControllerD0Ev>:
 80005fa:	b510      	push	{r4, lr}
 80005fc:	2104      	movs	r1, #4
 80005fe:	4604      	mov	r4, r0
 8000600:	f025 ff45 	bl	802648e <_ZdlPvj>
 8000604:	4620      	mov	r0, r4
 8000606:	bd10      	pop	{r4, pc}

08000608 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 8000608:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 800060a:	4b0c      	ldr	r3, [pc, #48]	; (800063c <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 800060c:	4c0c      	ldr	r4, [pc, #48]	; (8000640 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 800060e:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 8000610:	4b0c      	ldr	r3, [pc, #48]	; (8000644 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000612:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 8000614:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000616:	6863      	ldr	r3, [r4, #4]
 8000618:	4798      	blx	r3
 800061a:	f640 0311 	movw	r3, #2065	; 0x811
 800061e:	4298      	cmp	r0, r3
 8000620:	d10a      	bne.n	8000638 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 8000622:	4d09      	ldr	r5, [pc, #36]	; (8000648 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 8000624:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 8000626:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 8000628:	2082      	movs	r0, #130	; 0x82
 800062a:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 800062c:	682b      	ldr	r3, [r5, #0]
 800062e:	2082      	movs	r0, #130	; 0x82
 8000630:	68db      	ldr	r3, [r3, #12]
 8000632:	4798      	blx	r3
 8000634:	2000      	movs	r0, #0
    }

    return ret;
}
 8000636:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8000638:	2001      	movs	r0, #1
 800063a:	e7fc      	b.n	8000636 <_Z11BSP_TS_Inittt+0x2e>
 800063c:	20000184 	.word	0x20000184
 8000640:	20000050 	.word	0x20000050
 8000644:	20000186 	.word	0x20000186
 8000648:	20000188 	.word	0x20000188

0800064c <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 800064c:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8000650:	20f0      	movs	r0, #240	; 0xf0
 8000652:	f7ff bfd9 	b.w	8000608 <_Z11BSP_TS_Inittt>
	...

08000658 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8000658:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 800065a:	4d33      	ldr	r5, [pc, #204]	; (8000728 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd0>)
 800065c:	682b      	ldr	r3, [r5, #0]
{
 800065e:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000660:	691b      	ldr	r3, [r3, #16]
 8000662:	2082      	movs	r0, #130	; 0x82
 8000664:	4798      	blx	r3
 8000666:	b280      	uxth	r0, r0
 8000668:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 800066a:	2800      	cmp	r0, #0
 800066c:	d04a      	beq.n	8000704 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xac>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 800066e:	682b      	ldr	r3, [r5, #0]
 8000670:	f10d 0206 	add.w	r2, sp, #6
 8000674:	695b      	ldr	r3, [r3, #20]
 8000676:	a901      	add	r1, sp, #4
 8000678:	2082      	movs	r0, #130	; 0x82
 800067a:	4798      	blx	r3

        //Ensures the coordinates is within the screen
        if (y > 3700)
 800067c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8000680:	f640 6274 	movw	r2, #3700	; 0xe74
 8000684:	4293      	cmp	r3, r2
 8000686:	d93f      	bls.n	8000708 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb0>
        {
            y = 3700;
 8000688:	f8ad 2006 	strh.w	r2, [sp, #6]

        /* Y value first correction */
        y -= 180;

        /* Y value second correction */
        y = 3520 - y;
 800068c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8000690:	1ad2      	subs	r2, r2, r3
 8000692:	b292      	uxth	r2, r2

        /* Y value third correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 8000694:	2a0a      	cmp	r2, #10
 8000696:	d93d      	bls.n	8000714 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>
        yr = y / 11;
 8000698:	230b      	movs	r3, #11
 800069a:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 800069e:	4b23      	ldr	r3, [pc, #140]	; (800072c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd4>)
 80006a0:	881b      	ldrh	r3, [r3, #0]
 80006a2:	429a      	cmp	r2, r3
 80006a4:	d901      	bls.n	80006aa <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
        {
            yr = TsYBoundary - 1;
 80006a6:	3b01      	subs	r3, #1
 80006a8:	b29a      	uxth	r2, r3
        {
        }
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 80006aa:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80006ae:	f640 31b8 	movw	r1, #3000	; 0xbb8
 80006b2:	428b      	cmp	r3, r1
 80006b4:	d830      	bhi.n	8000718 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>
        {
            x = 3870 - x;
 80006b6:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 80006ba:	330e      	adds	r3, #14
 80006bc:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 80006be:	210f      	movs	r1, #15
 80006c0:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 80006c4:	491a      	ldr	r1, [pc, #104]	; (8000730 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd8>)
 80006c6:	8809      	ldrh	r1, [r1, #0]
 80006c8:	428b      	cmp	r3, r1
 80006ca:	d901      	bls.n	80006d0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
        {
            xr = TsXBoundary - 1;
 80006cc:	3901      	subs	r1, #1
 80006ce:	b28b      	uxth	r3, r1
        else
        {
        }

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006d0:	4e18      	ldr	r6, [pc, #96]	; (8000734 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xdc>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006d2:	4d19      	ldr	r5, [pc, #100]	; (8000738 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe0>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006d4:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006d6:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006d8:	4283      	cmp	r3, r0
 80006da:	b281      	uxth	r1, r0
 80006dc:	bf8c      	ite	hi
 80006de:	1a59      	subhi	r1, r3, r1
 80006e0:	1ac9      	subls	r1, r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006e2:	b2b8      	uxth	r0, r7
 80006e4:	42ba      	cmp	r2, r7
 80006e6:	bf8c      	ite	hi
 80006e8:	1a10      	subhi	r0, r2, r0
 80006ea:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006ec:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006ee:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 80006f0:	4401      	add	r1, r0
 80006f2:	2905      	cmp	r1, #5
        {
            _x = x;
 80006f4:	bfc8      	it	gt
 80006f6:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 80006f8:	6833      	ldr	r3, [r6, #0]
            _y = y;
 80006fa:	bfc8      	it	gt
 80006fc:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 80006fe:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 8000700:	682b      	ldr	r3, [r5, #0]
 8000702:	80a3      	strh	r3, [r4, #4]
    }
}
 8000704:	b003      	add	sp, #12
 8000706:	bdf0      	pop	{r4, r5, r6, r7, pc}
        else if (y < 180)
 8000708:	2bb3      	cmp	r3, #179	; 0xb3
            y = 180;
 800070a:	bf9c      	itt	ls
 800070c:	23b4      	movls	r3, #180	; 0xb4
 800070e:	f8ad 3006 	strhls.w	r3, [sp, #6]
 8000712:	e7bb      	b.n	800068c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x34>
            yr = 0;
 8000714:	2200      	movs	r2, #0
 8000716:	e7c8      	b.n	80006aa <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
            x = 3800 - x;
 8000718:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 800071c:	3308      	adds	r3, #8
 800071e:	b29b      	uxth	r3, r3
        if (xr <= 0)
 8000720:	2b0e      	cmp	r3, #14
 8000722:	d8cc      	bhi.n	80006be <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x66>
            xr = 0;
 8000724:	2300      	movs	r3, #0
 8000726:	e7d3      	b.n	80006d0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
 8000728:	20000188 	.word	0x20000188
 800072c:	20000186 	.word	0x20000186
 8000730:	20000184 	.word	0x20000184
 8000734:	2000018c 	.word	0x2000018c
 8000738:	20000190 	.word	0x20000190

0800073c <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 800073c:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 800073e:	4668      	mov	r0, sp
{
 8000740:	460d      	mov	r5, r1
 8000742:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8000744:	f7ff ff88 	bl	8000658 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8000748:	f8bd 0000 	ldrh.w	r0, [sp]
 800074c:	b148      	cbz	r0, 8000762 <_ZN20STM32TouchController11sampleTouchERlS0_+0x26>
        x = state.X;
 800074e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8000752:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8000754:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000758:	6023      	str	r3, [r4, #0]
        sleep_timeout_value = 60;
 800075a:	4b03      	ldr	r3, [pc, #12]	; (8000768 <_ZN20STM32TouchController11sampleTouchERlS0_+0x2c>)
 800075c:	223c      	movs	r2, #60	; 0x3c
 800075e:	601a      	str	r2, [r3, #0]
        return true;
 8000760:	2001      	movs	r0, #1
}
 8000762:	b003      	add	sp, #12
 8000764:	bd30      	pop	{r4, r5, pc}
 8000766:	bf00      	nop
 8000768:	20000014 	.word	0x20000014

0800076c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 800076c:	b110      	cbz	r0, 8000774 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x8>
 800076e:	2802      	cmp	r0, #2
 8000770:	d009      	beq.n	8000786 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
 8000772:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8000774:	4b07      	ldr	r3, [pc, #28]	; (8000794 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8000776:	681a      	ldr	r2, [r3, #0]
 8000778:	fab2 f282 	clz	r2, r2
 800077c:	0952      	lsrs	r2, r2, #5
 800077e:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 8000780:	4805      	ldr	r0, [pc, #20]	; (8000798 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
 8000782:	f007 bba9 	b.w	8007ed8 <HAL_GPIO_WritePin>
 8000786:	4b03      	ldr	r3, [pc, #12]	; (8000794 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8000788:	689a      	ldr	r2, [r3, #8]
 800078a:	fab2 f282 	clz	r2, r2
 800078e:	0952      	lsrs	r2, r2, #5
 8000790:	2110      	movs	r1, #16
 8000792:	e7f5      	b.n	8000780 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x14>
 8000794:	20000194 	.word	0x20000194
 8000798:	40021000 	.word	0x40021000

0800079c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 800079c:	b110      	cbz	r0, 80007a4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x8>
 800079e:	2802      	cmp	r0, #2
 80007a0:	d009      	beq.n	80007b6 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
 80007a2:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 80007a4:	4b07      	ldr	r3, [pc, #28]	; (80007c4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 80007a6:	681a      	ldr	r2, [r3, #0]
 80007a8:	3a00      	subs	r2, #0
 80007aa:	bf18      	it	ne
 80007ac:	2201      	movne	r2, #1
 80007ae:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 80007b0:	4805      	ldr	r0, [pc, #20]	; (80007c8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
 80007b2:	f007 bb91 	b.w	8007ed8 <HAL_GPIO_WritePin>
 80007b6:	4b03      	ldr	r3, [pc, #12]	; (80007c4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 80007b8:	689a      	ldr	r2, [r3, #8]
 80007ba:	3a00      	subs	r2, #0
 80007bc:	bf18      	it	ne
 80007be:	2201      	movne	r2, #1
 80007c0:	2110      	movs	r1, #16
 80007c2:	e7f5      	b.n	80007b0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x14>
 80007c4:	20000194 	.word	0x20000194
 80007c8:	40021000 	.word	0x40021000

080007cc <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 80007cc:	b110      	cbz	r0, 80007d4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x8>
 80007ce:	2802      	cmp	r0, #2
 80007d0:	d004      	beq.n	80007dc <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
 80007d2:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80007d4:	2104      	movs	r1, #4
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 80007d6:	4802      	ldr	r0, [pc, #8]	; (80007e0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x14>)
 80007d8:	f007 bb82 	b.w	8007ee0 <HAL_GPIO_TogglePin>
 80007dc:	2110      	movs	r1, #16
 80007de:	e7fa      	b.n	80007d6 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xa>
 80007e0:	40021000 	.word	0x40021000

080007e4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 80007e4:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 80007e6:	b130      	cbz	r0, 80007f6 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
 80007e8:	2802      	cmp	r0, #2
 80007ea:	d009      	beq.n	8000800 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x1c>
 80007ec:	2000      	movs	r0, #0
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 80007ee:	1e43      	subs	r3, r0, #1
 80007f0:	4258      	negs	r0, r3
 80007f2:	4158      	adcs	r0, r3
 80007f4:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80007f6:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 80007f8:	4802      	ldr	r0, [pc, #8]	; (8000804 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x20>)
 80007fa:	f007 fb67 	bl	8007ecc <HAL_GPIO_ReadPin>
        break;
 80007fe:	e7f6      	b.n	80007ee <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0xa>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8000800:	2110      	movs	r1, #16
 8000802:	e7f9      	b.n	80007f8 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x14>
 8000804:	40021000 	.word	0x40021000

08000808 <_ZN8touchgfx4GPIO4initEv>:
{
 8000808:	b570      	push	{r4, r5, r6, lr}
 800080a:	4d08      	ldr	r5, [pc, #32]	; (800082c <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 800080c:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 800080e:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8000810:	b2e0      	uxtb	r0, r4
 8000812:	f7ff ffe7 	bl	80007e4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 8000816:	b118      	cbz	r0, 8000820 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 8000818:	682b      	ldr	r3, [r5, #0]
 800081a:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 800081c:	bf18      	it	ne
 800081e:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 8000820:	3401      	adds	r4, #1
 8000822:	2c05      	cmp	r4, #5
 8000824:	f105 0504 	add.w	r5, r5, #4
 8000828:	d1f2      	bne.n	8000810 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 800082a:	bd70      	pop	{r4, r5, r6, pc}
 800082c:	20000194 	.word	0x20000194

08000830 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8000830:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8000832:	f880 1078 	strb.w	r1, [r0, #120]	; 0x78
        displayOrientationChangeRequested = true;
 8000836:	f880 3079 	strb.w	r3, [r0, #121]	; 0x79
    }
 800083a:	4770      	bx	lr

0800083c <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 800083c:	2000      	movs	r0, #0
 800083e:	4770      	bx	lr

08000840 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000840:	4b03      	ldr	r3, [pc, #12]	; (8000850 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8000842:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000844:	3900      	subs	r1, #0
 8000846:	bf18      	it	ne
 8000848:	2101      	movne	r1, #1
 800084a:	7019      	strb	r1, [r3, #0]
    }
 800084c:	4770      	bx	lr
 800084e:	bf00      	nop
 8000850:	200137bb 	.word	0x200137bb

08000854 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8000854:	2000      	movs	r0, #0
 8000856:	4770      	bx	lr

08000858 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8000858:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800085a:	b10b      	cbz	r3, 8000860 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 800085c:	4608      	mov	r0, r1
 800085e:	4718      	bx	r3
        }
    }
 8000860:	4770      	bx	lr

08000862 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8000862:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8000866:	4770      	bx	lr

08000868 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8000868:	6840      	ldr	r0, [r0, #4]
 800086a:	6803      	ldr	r3, [r0, #0]
 800086c:	699b      	ldr	r3, [r3, #24]
 800086e:	4718      	bx	r3

08000870 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8000870:	4770      	bx	lr

08000872 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 8000872:	4770      	bx	lr

08000874 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8000874:	4770      	bx	lr
	...

08000878 <_ZN11TouchGFXHAL10initializeEv>:
LOCATION_PRAGMA("TouchGFX_Framebuffer")
uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE("TouchGFX_Framebuffer");
}

void TouchGFXHAL::initialize()
{
 8000878:	b510      	push	{r4, lr}
 800087a:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 800087c:	f000 fcd8 	bl	8001230 <_ZN20TouchGFXGeneratedHAL10initializeEv>

    // Add animation storage
    setAnimationStorage((void*)animationStorage);
 8000880:	6823      	ldr	r3, [r4, #0]
 8000882:	4903      	ldr	r1, [pc, #12]	; (8000890 <_ZN11TouchGFXHAL10initializeEv+0x18>)
 8000884:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8000888:	4620      	mov	r0, r4
}
 800088a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    setAnimationStorage((void*)animationStorage);
 800088e:	4718      	bx	r3
 8000890:	d0000000 	.word	0xd0000000

08000894 <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 8000894:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8000896:	6803      	ldr	r3, [r0, #0]
{
 8000898:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 800089a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800089e:	4798      	blx	r3
    enableInterrupts();
 80008a0:	6823      	ldr	r3, [r4, #0]
 80008a2:	4620      	mov	r0, r4
 80008a4:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80008a6:	4798      	blx	r3

    OSWrappers::waitForVSync();
 80008a8:	f000 f8ec 	bl	8000a84 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 80008ac:	6823      	ldr	r3, [r4, #0]
 80008ae:	4620      	mov	r0, r4
 80008b0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80008b2:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 80008b4:	2029      	movs	r0, #41	; 0x29
 80008b6:	f001 f8e5 	bl	8001a84 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 80008ba:	f000 f8e3 	bl	8000a84 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 80008be:	6823      	ldr	r3, [r4, #0]
 80008c0:	4620      	mov	r0, r4
 80008c2:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80008c4:	4798      	blx	r3
    for (;;)
 80008c6:	e7f8      	b.n	80008ba <_ZN11TouchGFXHAL9taskEntryEv+0x26>

080008c8 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 80008c8:	b510      	push	{r4, lr}
 80008ca:	4604      	mov	r4, r0
        swapFrameBuffers();
 80008cc:	f00e fe12 	bl	800f4f4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 80008d0:	6823      	ldr	r3, [r4, #0]
 80008d2:	4620      	mov	r0, r4
 80008d4:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 80008d8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 80008dc:	4718      	bx	r3

080008de <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 80008de:	f000 bc99 	b.w	8001214 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

080008e2 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 80008e2:	f000 bc9d 	b.w	8001220 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

080008e6 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 80008e6:	f000 bcc1 	b.w	800126c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

080008ea <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 80008ea:	f000 bc6f 	b.w	80011cc <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

080008ee <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 80008ee:	f000 bcc9 	b.w	8001284 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

080008f2 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 80008f2:	f000 bcd1 	b.w	8001298 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

080008f6 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 80008f6:	f000 bc73 	b.w	80011e0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

080008fa <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 80008fa:	f00e b867 	b.w	800e9cc <_ZN8touchgfx3HAL16flushFrameBufferEv>

080008fe <_ZN11TouchGFXHALD0Ev>:
 80008fe:	b510      	push	{r4, lr}
 8000900:	217c      	movs	r1, #124	; 0x7c
 8000902:	4604      	mov	r4, r0
 8000904:	f025 fdc3 	bl	802648e <_ZdlPvj>
 8000908:	4620      	mov	r0, r4
 800090a:	bd10      	pop	{r4, pc}

0800090c <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 800090c:	f890 307a 	ldrb.w	r3, [r0, #122]	; 0x7a
 8000910:	b11b      	cbz	r3, 800091a <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 8000912:	6840      	ldr	r0, [r0, #4]
 8000914:	6803      	ldr	r3, [r0, #0]
 8000916:	681b      	ldr	r3, [r3, #0]
 8000918:	4718      	bx	r3
    }
 800091a:	4618      	mov	r0, r3
 800091c:	4770      	bx	lr
	...

08000920 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 8000920:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 8000922:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 8000926:	f890 4078 	ldrb.w	r4, [r0, #120]	; 0x78
            if (DISPLAY_ROTATION == rotate0)
 800092a:	4b0c      	ldr	r3, [pc, #48]	; (800095c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 800092c:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 800092e:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 8000930:	d009      	beq.n	8000946 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 8000932:	b93a      	cbnz	r2, 8000944 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000934:	4a0a      	ldr	r2, [pc, #40]	; (8000960 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000936:	490b      	ldr	r1, [pc, #44]	; (8000964 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000938:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 800093a:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 800093c:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800093e:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 8000940:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 8000942:	701a      	strb	r2, [r3, #0]
    }
 8000944:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8000946:	2a00      	cmp	r2, #0
 8000948:	d0fc      	beq.n	8000944 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800094a:	4a05      	ldr	r2, [pc, #20]	; (8000960 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 800094c:	4905      	ldr	r1, [pc, #20]	; (8000964 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800094e:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000950:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 8000952:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000954:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8000956:	2200      	movs	r2, #0
 8000958:	e7f3      	b.n	8000942 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 800095a:	bf00      	nop
 800095c:	200137b4 	.word	0x200137b4
 8000960:	200137b0 	.word	0x200137b0
 8000964:	200137b2 	.word	0x200137b2

08000968 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8000968:	b570      	push	{r4, r5, r6, lr}
 800096a:	460d      	mov	r5, r1
 800096c:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 800096e:	b935      	cbnz	r5, 800097e <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 8000970:	4b09      	ldr	r3, [pc, #36]	; (8000998 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 8000972:	4a0a      	ldr	r2, [pc, #40]	; (800099c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8000974:	480a      	ldr	r0, [pc, #40]	; (80009a0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8000976:	f240 21d2 	movw	r1, #722	; 0x2d2
 800097a:	f026 fb79 	bl	8027070 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 800097e:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8000982:	4b08      	ldr	r3, [pc, #32]	; (80009a4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8000984:	3a00      	subs	r2, #0
 8000986:	bf18      	it	ne
 8000988:	2201      	movne	r2, #1
 800098a:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 800098c:	6803      	ldr	r3, [r0, #0]
    }
 800098e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 8000992:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8000996:	4718      	bx	r3
 8000998:	080281e0 	.word	0x080281e0
 800099c:	08028218 	.word	0x08028218
 80009a0:	08028266 	.word	0x08028266
 80009a4:	200137ba 	.word	0x200137ba

080009a8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 80009a8:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 80009aa:	4b09      	ldr	r3, [pc, #36]	; (80009d0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 80009ac:	881b      	ldrh	r3, [r3, #0]
 80009ae:	428b      	cmp	r3, r1
 80009b0:	d803      	bhi.n	80009ba <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 80009b2:	4b08      	ldr	r3, [pc, #32]	; (80009d4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 80009b4:	881b      	ldrh	r3, [r3, #0]
 80009b6:	4293      	cmp	r3, r2
 80009b8:	d905      	bls.n	80009c6 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 80009ba:	4b07      	ldr	r3, [pc, #28]	; (80009d8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 80009bc:	4a07      	ldr	r2, [pc, #28]	; (80009dc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 80009be:	4808      	ldr	r0, [pc, #32]	; (80009e0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 80009c0:	219e      	movs	r1, #158	; 0x9e
 80009c2:	f026 fb55 	bl	8027070 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 80009c6:	4b07      	ldr	r3, [pc, #28]	; (80009e4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 80009c8:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 80009ca:	4b07      	ldr	r3, [pc, #28]	; (80009e8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 80009cc:	801a      	strh	r2, [r3, #0]
    }
 80009ce:	bd08      	pop	{r3, pc}
 80009d0:	200137b0 	.word	0x200137b0
 80009d4:	200137b2 	.word	0x200137b2
 80009d8:	080282ab 	.word	0x080282ab
 80009dc:	0802830e 	.word	0x0802830e
 80009e0:	08028266 	.word	0x08028266
 80009e4:	200137b6 	.word	0x200137b6
 80009e8:	200137b8 	.word	0x200137b8

080009ec <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80009ec:	2101      	movs	r1, #1
{
 80009ee:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80009f0:	2200      	movs	r2, #0
 80009f2:	4608      	mov	r0, r1
 80009f4:	f00a fdf4 	bl	800b5e0 <osSemaphoreNew>
 80009f8:	4b0a      	ldr	r3, [pc, #40]	; (8000a24 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 80009fa:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 80009fc:	b928      	cbnz	r0, 8000a0a <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 80009fe:	4b0a      	ldr	r3, [pc, #40]	; (8000a28 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8000a00:	4a0a      	ldr	r2, [pc, #40]	; (8000a2c <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000a02:	2128      	movs	r1, #40	; 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000a04:	480a      	ldr	r0, [pc, #40]	; (8000a30 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8000a06:	f026 fb33 	bl	8027070 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000a0a:	2200      	movs	r2, #0
 8000a0c:	2104      	movs	r1, #4
 8000a0e:	2001      	movs	r0, #1
 8000a10:	f00a fe9a 	bl	800b748 <osMessageQueueNew>
 8000a14:	4b07      	ldr	r3, [pc, #28]	; (8000a34 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000a16:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000a18:	b918      	cbnz	r0, 8000a22 <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000a1a:	4b07      	ldr	r3, [pc, #28]	; (8000a38 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000a1c:	4a03      	ldr	r2, [pc, #12]	; (8000a2c <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000a1e:	212c      	movs	r1, #44	; 0x2c
 8000a20:	e7f0      	b.n	8000a04 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8000a22:	bd08      	pop	{r3, pc}
 8000a24:	200001a8 	.word	0x200001a8
 8000a28:	0802842c 	.word	0x0802842c
 8000a2c:	08028475 	.word	0x08028475
 8000a30:	080284a4 	.word	0x080284a4
 8000a34:	200001a4 	.word	0x200001a4
 8000a38:	0802851e 	.word	0x0802851e

08000a3c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000a3c:	4b02      	ldr	r3, [pc, #8]	; (8000a48 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8000a3e:	f04f 31ff 	mov.w	r1, #4294967295
 8000a42:	6818      	ldr	r0, [r3, #0]
 8000a44:	f00a be20 	b.w	800b688 <osSemaphoreAcquire>
 8000a48:	200001a8 	.word	0x200001a8

08000a4c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000a4c:	4b01      	ldr	r3, [pc, #4]	; (8000a54 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8000a4e:	6818      	ldr	r0, [r3, #0]
 8000a50:	f00a be4e 	b.w	800b6f0 <osSemaphoreRelease>
 8000a54:	200001a8 	.word	0x200001a8

08000a58 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000a58:	4b02      	ldr	r3, [pc, #8]	; (8000a64 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000a5a:	2100      	movs	r1, #0
 8000a5c:	6818      	ldr	r0, [r3, #0]
 8000a5e:	f00a be13 	b.w	800b688 <osSemaphoreAcquire>
 8000a62:	bf00      	nop
 8000a64:	200001a8 	.word	0x200001a8

08000a68 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8000a68:	f7ff bff0 	b.w	8000a4c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000a6c <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000a6c:	4803      	ldr	r0, [pc, #12]	; (8000a7c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8000a6e:	4904      	ldr	r1, [pc, #16]	; (8000a80 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8000a70:	6800      	ldr	r0, [r0, #0]
 8000a72:	2300      	movs	r3, #0
 8000a74:	461a      	mov	r2, r3
 8000a76:	f00a bea1 	b.w	800b7bc <osMessageQueuePut>
 8000a7a:	bf00      	nop
 8000a7c:	200001a4 	.word	0x200001a4
 8000a80:	20000004 	.word	0x20000004

08000a84 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000a84:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000a86:	4c08      	ldr	r4, [pc, #32]	; (8000aa8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000a88:	2300      	movs	r3, #0
 8000a8a:	461a      	mov	r2, r3
 8000a8c:	a901      	add	r1, sp, #4
 8000a8e:	6820      	ldr	r0, [r4, #0]
 8000a90:	f00a feca 	bl	800b828 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000a94:	6820      	ldr	r0, [r4, #0]
 8000a96:	f04f 33ff 	mov.w	r3, #4294967295
 8000a9a:	2200      	movs	r2, #0
 8000a9c:	a901      	add	r1, sp, #4
 8000a9e:	f00a fec3 	bl	800b828 <osMessageQueueGet>
}
 8000aa2:	b002      	add	sp, #8
 8000aa4:	bd10      	pop	{r4, pc}
 8000aa6:	bf00      	nop
 8000aa8:	200001a4 	.word	0x200001a4

08000aac <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8000aac:	6803      	ldr	r3, [r0, #0]
 8000aae:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000ab0:	4718      	bx	r3

08000ab2 <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 8000ab2:	2001      	movs	r0, #1
 8000ab4:	4770      	bx	lr

08000ab6 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 8000ab6:	6803      	ldr	r3, [r0, #0]
 8000ab8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8000aba:	4718      	bx	r3

08000abc <_ZN8STM32DMA10initializeEv>:
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void STM32DMA::initialize()
{
 8000abc:	b082      	sub	sp, #8
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000abe:	2300      	movs	r3, #0
 8000ac0:	9301      	str	r3, [sp, #4]
 8000ac2:	4b0d      	ldr	r3, [pc, #52]	; (8000af8 <_ZN8STM32DMA10initializeEv+0x3c>)
 8000ac4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000ac6:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8000aca:	631a      	str	r2, [r3, #48]	; 0x30
 8000acc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000ace:	f402 0200 	and.w	r2, r2, #8388608	; 0x800000
 8000ad2:	9201      	str	r2, [sp, #4]
 8000ad4:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 8000ad6:	691a      	ldr	r2, [r3, #16]
 8000ad8:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8000adc:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 8000ade:	691a      	ldr	r2, [r3, #16]
 8000ae0:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 8000ae4:	611a      	str	r2, [r3, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 8000ae6:	4b05      	ldr	r3, [pc, #20]	; (8000afc <_ZN8STM32DMA10initializeEv+0x40>)
 8000ae8:	4a05      	ldr	r2, [pc, #20]	; (8000b00 <_ZN8STM32DMA10initializeEv+0x44>)
 8000aea:	611a      	str	r2, [r3, #16]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000aec:	4b05      	ldr	r3, [pc, #20]	; (8000b04 <_ZN8STM32DMA10initializeEv+0x48>)
 8000aee:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000af2:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 8000af4:	b002      	add	sp, #8
 8000af6:	4770      	bx	lr
 8000af8:	40023800 	.word	0x40023800
 8000afc:	20002634 	.word	0x20002634
 8000b00:	08000b49 	.word	0x08000b49
 8000b04:	e000e100 	.word	0xe000e100

08000b08 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8000b08:	f240 30ef 	movw	r0, #1007	; 0x3ef
 8000b0c:	4770      	bx	lr
	...

08000b10 <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 8000b10:	4b05      	ldr	r3, [pc, #20]	; (8000b28 <_ZN8STM32DMAD1Ev+0x18>)
 8000b12:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000b14:	4b05      	ldr	r3, [pc, #20]	; (8000b2c <_ZN8STM32DMAD1Ev+0x1c>)
 8000b16:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000b1a:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8000b1e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000b22:	f3bf 8f6f 	isb	sy
}
 8000b26:	4770      	bx	lr
 8000b28:	080286e8 	.word	0x080286e8
 8000b2c:	e000e100 	.word	0xe000e100

08000b30 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8000b30:	b510      	push	{r4, lr}
 8000b32:	4604      	mov	r4, r0
}
 8000b34:	f44f 615a 	mov.w	r1, #3488	; 0xda0
 8000b38:	f7ff ffea 	bl	8000b10 <_ZN8STM32DMAD1Ev>
 8000b3c:	4620      	mov	r0, r4
 8000b3e:	f025 fca6 	bl	802648e <_ZdlPvj>
 8000b42:	4620      	mov	r0, r4
 8000b44:	bd10      	pop	{r4, pc}
	...

08000b48 <DMA2D_XferCpltCallback>:
        return instance;
 8000b48:	4b02      	ldr	r3, [pc, #8]	; (8000b54 <DMA2D_XferCpltCallback+0xc>)
 8000b4a:	681b      	ldr	r3, [r3, #0]
 8000b4c:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8000b4e:	6803      	ldr	r3, [r0, #0]
 8000b50:	695b      	ldr	r3, [r3, #20]
 8000b52:	4718      	bx	r3
 8000b54:	200137bc 	.word	0x200137bc

08000b58 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8000b58:	b570      	push	{r4, r5, r6, lr}
 8000b5a:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8000b5c:	4625      	mov	r5, r4
 8000b5e:	4b0a      	ldr	r3, [pc, #40]	; (8000b88 <_ZN8STM32DMAC1Ev+0x30>)
 8000b60:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8000b62:	2600      	movs	r6, #0
 8000b64:	6060      	str	r0, [r4, #4]
 8000b66:	7226      	strb	r6, [r4, #8]
 8000b68:	7266      	strb	r6, [r4, #9]
 8000b6a:	f845 3b20 	str.w	r3, [r5], #32
 8000b6e:	2260      	movs	r2, #96	; 0x60
 8000b70:	4629      	mov	r1, r5
 8000b72:	f00e fe17 	bl	800f7a4 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8000b76:	f504 635a 	add.w	r3, r4, #3488	; 0xda0
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8000b7a:	60ee      	str	r6, [r5, #12]
 8000b7c:	3524      	adds	r5, #36	; 0x24
 8000b7e:	42ab      	cmp	r3, r5
 8000b80:	d1fb      	bne.n	8000b7a <_ZN8STM32DMAC1Ev+0x22>
}
 8000b82:	4620      	mov	r0, r4
 8000b84:	bd70      	pop	{r4, r5, r6, pc}
 8000b86:	bf00      	nop
 8000b88:	080286e8 	.word	0x080286e8

08000b8c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8000b8c:	b508      	push	{r3, lr}
    switch (format)
 8000b8e:	290b      	cmp	r1, #11
 8000b90:	d80b      	bhi.n	8000baa <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1e>
 8000b92:	e8df f001 	tbb	[pc, r1]
 8000b96:	0612      	.short	0x0612
 8000b98:	0a0a0a10 	.word	0x0a0a0a10
 8000b9c:	0808080a 	.word	0x0808080a
 8000ba0:	0808      	.short	0x0808
 8000ba2:	2001      	movs	r0, #1
}
 8000ba4:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8000ba6:	2005      	movs	r0, #5
        break;
 8000ba8:	e7fc      	b.n	8000ba4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        assert(0 && "Unsupported Format!");
 8000baa:	4b05      	ldr	r3, [pc, #20]	; (8000bc0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8000bac:	4a05      	ldr	r2, [pc, #20]	; (8000bc4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8000bae:	4806      	ldr	r0, [pc, #24]	; (8000bc8 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x3c>)
 8000bb0:	2165      	movs	r1, #101	; 0x65
 8000bb2:	f026 fa5d 	bl	8027070 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8000bb6:	2000      	movs	r0, #0
 8000bb8:	e7f4      	b.n	8000ba4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000bba:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000bbc:	e7f2      	b.n	8000ba4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8000bbe:	bf00      	nop
 8000bc0:	08028560 	.word	0x08028560
 8000bc4:	0802857b 	.word	0x0802857b
 8000bc8:	080285c5 	.word	0x080285c5

08000bcc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8000bcc:	b508      	push	{r3, lr}
    switch (format)
 8000bce:	290a      	cmp	r1, #10
 8000bd0:	d809      	bhi.n	8000be6 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1a>
 8000bd2:	e8df f001 	tbb	[pc, r1]
 8000bd6:	0610      	.short	0x0610
 8000bd8:	0808080e 	.word	0x0808080e
 8000bdc:	06060608 	.word	0x06060608
 8000be0:	06          	.byte	0x06
 8000be1:	00          	.byte	0x00
 8000be2:	2001      	movs	r0, #1
}
 8000be4:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8000be6:	4b05      	ldr	r3, [pc, #20]	; (8000bfc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x30>)
 8000be8:	4a05      	ldr	r2, [pc, #20]	; (8000c00 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8000bea:	4806      	ldr	r0, [pc, #24]	; (8000c04 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8000bec:	2186      	movs	r1, #134	; 0x86
 8000bee:	f026 fa3f 	bl	8027070 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000bf2:	2000      	movs	r0, #0
 8000bf4:	e7f6      	b.n	8000be4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8000bf6:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000bf8:	e7f4      	b.n	8000be4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8000bfa:	bf00      	nop
 8000bfc:	08028560 	.word	0x08028560
 8000c00:	0802863d 	.word	0x0802863d
 8000c04:	080285c5 	.word	0x080285c5

08000c08 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32DMA::setupDataCopy(const BlitOp& blitOp)
{
 8000c08:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000c0c:	f891 801d 	ldrb.w	r8, [r1, #29]
{
 8000c10:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000c12:	4641      	mov	r1, r8
{
 8000c14:	4607      	mov	r7, r0
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000c16:	f7ff ffb9 	bl	8000b8c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c1a:	f894 901e 	ldrb.w	r9, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000c1e:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c20:	4649      	mov	r1, r9
 8000c22:	4638      	mov	r0, r7
 8000c24:	f7ff ffb2 	bl	8000b8c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c28:	4649      	mov	r1, r9
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c2a:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c2c:	4638      	mov	r0, r7
 8000c2e:	f7ff ffcd 	bl	8000bcc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c32:	8aa1      	ldrh	r1, [r4, #20]
 8000c34:	8b62      	ldrh	r2, [r4, #26]
 8000c36:	4b43      	ldr	r3, [pc, #268]	; (8000d44 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000c38:	1a52      	subs	r2, r2, r1
 8000c3a:	641a      	str	r2, [r3, #64]	; 0x40

    /* DMA2D BGOR register configuration */
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c3c:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration */
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8000c3e:	8b22      	ldrh	r2, [r4, #24]
 8000c40:	1a52      	subs	r2, r2, r1
 8000c42:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c44:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000c46:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c48:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000c4c:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c4e:	6920      	ldr	r0, [r4, #16]

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000c50:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c52:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000c54:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 8000c56:	6827      	ldr	r7, [r4, #0]
 8000c58:	2f80      	cmp	r7, #128	; 0x80
 8000c5a:	d028      	beq.n	8000cae <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa6>
 8000c5c:	7f22      	ldrb	r2, [r4, #28]
 8000c5e:	d80f      	bhi.n	8000c80 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x78>
 8000c60:	2f20      	cmp	r7, #32
 8000c62:	d065      	beq.n	8000d30 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8000c64:	2f40      	cmp	r7, #64	; 0x40
 8000c66:	d063      	beq.n	8000d30 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8000c68:	2f04      	cmp	r7, #4
 8000c6a:	d01a      	beq.n	8000ca2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9a>
        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
        break;
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000c6c:	4b35      	ldr	r3, [pc, #212]	; (8000d44 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000c6e:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 8000c72:	f445 3500 	orr.w	r5, r5, #131072	; 0x20000

        /* Perform pixel-format-conversion (PFC) If Bitmap format is not same format as framebuffer format */
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000c76:	45c8      	cmp	r8, r9
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000c78:	61dd      	str	r5, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000c7a:	d05f      	beq.n	8000d3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x134>
        {
            /* Start DMA2D : PFC Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8000c7c:	4a32      	ldr	r2, [pc, #200]	; (8000d48 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 8000c7e:	e044      	b.n	8000d0a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x102>
    switch (blitOp.operation)
 8000c80:	f5b7 7f80 	cmp.w	r7, #256	; 0x100
 8000c84:	d004      	beq.n	8000c90 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x88>
 8000c86:	f5b7 7f00 	cmp.w	r7, #512	; 0x200
 8000c8a:	d1ef      	bne.n	8000c6c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x64>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000c8c:	492f      	ldr	r1, [pc, #188]	; (8000d4c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
 8000c8e:	e000      	b.n	8000c92 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x8a>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000c90:	492f      	ldr	r1, [pc, #188]	; (8000d50 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000c92:	ea41 6202 	orr.w	r2, r1, r2, lsl #24
 8000c96:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 8000c98:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000c9a:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000c9c:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c9e:	6158      	str	r0, [r3, #20]
 8000ca0:	e032      	b.n	8000d08 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ca2:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 8000ca6:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000caa:	61da      	str	r2, [r3, #28]
 8000cac:	e7f6      	b.n	8000c9c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x94>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8000cae:	68a7      	ldr	r7, [r4, #8]
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8000cb0:	1d3a      	adds	r2, r7, #4
 8000cb2:	62da      	str	r2, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000cb4:	7f21      	ldrb	r1, [r4, #28]
            switch ((Bitmap::ClutFormat)palette->format)
 8000cb6:	783a      	ldrb	r2, [r7, #0]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000cb8:	ea45 6501 	orr.w	r5, r5, r1, lsl #24
 8000cbc:	f445 3500 	orr.w	r5, r5, #131072	; 0x20000
 8000cc0:	61dd      	str	r5, [r3, #28]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000cc2:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000cc4:	6158      	str	r0, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8000cc6:	b142      	cbz	r2, 8000cda <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd2>
 8000cc8:	2a01      	cmp	r2, #1
 8000cca:	d021      	beq.n	8000d10 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x108>
                assert(0 && "Unsupported format");
 8000ccc:	4b21      	ldr	r3, [pc, #132]	; (8000d54 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
 8000cce:	4a22      	ldr	r2, [pc, #136]	; (8000d58 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x150>)
 8000cd0:	4822      	ldr	r0, [pc, #136]	; (8000d5c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x154>)
 8000cd2:	f44f 7188 	mov.w	r1, #272	; 0x110
 8000cd6:	f026 f9cb 	bl	8027070 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000cda:	69da      	ldr	r2, [r3, #28]
 8000cdc:	8879      	ldrh	r1, [r7, #2]
 8000cde:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8000ce2:	3901      	subs	r1, #1
 8000ce4:	f022 0210 	bic.w	r2, r2, #16
 8000ce8:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8000cec:	61da      	str	r2, [r3, #28]
            bool blend = true;
 8000cee:	2101      	movs	r1, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8000cf0:	4b14      	ldr	r3, [pc, #80]	; (8000d44 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000cf2:	69da      	ldr	r2, [r3, #28]
 8000cf4:	f042 0220 	orr.w	r2, r2, #32
 8000cf8:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8000cfa:	69da      	ldr	r2, [r3, #28]
 8000cfc:	0692      	lsls	r2, r2, #26
 8000cfe:	d4fc      	bmi.n	8000cfa <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf2>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8000d00:	2210      	movs	r2, #16
 8000d02:	609a      	str	r2, [r3, #8]
            if (blend)
 8000d04:	2900      	cmp	r1, #0
 8000d06:	d0b9      	beq.n	8000c7c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x74>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000d08:	4a15      	ldr	r2, [pc, #84]	; (8000d60 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x158>)
        }
        else
        {
            /* Start DMA2D : M2M Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000d0a:	601a      	str	r2, [r3, #0]
        }
        break;
    }
}
 8000d0c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000d10:	69da      	ldr	r2, [r3, #28]
 8000d12:	8878      	ldrh	r0, [r7, #2]
 8000d14:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8000d18:	3801      	subs	r0, #1
 8000d1a:	f022 0210 	bic.w	r2, r2, #16
 8000d1e:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
                if (blitOp.alpha == 255)
 8000d22:	39ff      	subs	r1, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000d24:	f042 0210 	orr.w	r2, r2, #16
                if (blitOp.alpha == 255)
 8000d28:	bf18      	it	ne
 8000d2a:	2101      	movne	r1, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000d2c:	61da      	str	r2, [r3, #28]
                break;
 8000d2e:	e7df      	b.n	8000cf0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe8>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000d30:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 8000d34:	4b03      	ldr	r3, [pc, #12]	; (8000d44 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000d36:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000d3a:	e7b6      	b.n	8000caa <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa2>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000d3c:	f240 2201 	movw	r2, #513	; 0x201
 8000d40:	e7e3      	b.n	8000d0a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x102>
 8000d42:	bf00      	nop
 8000d44:	4002b000 	.word	0x4002b000
 8000d48:	00010201 	.word	0x00010201
 8000d4c:	00020009 	.word	0x00020009
 8000d50:	0002000a 	.word	0x0002000a
 8000d54:	08028688 	.word	0x08028688
 8000d58:	080286a2 	.word	0x080286a2
 8000d5c:	080285c5 	.word	0x080285c5
 8000d60:	00020201 	.word	0x00020201

08000d64 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 8000d64:	b538      	push	{r3, r4, r5, lr}
 8000d66:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000d68:	7f89      	ldrb	r1, [r1, #30]
 8000d6a:	f7ff ff2f 	bl	8000bcc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000d6e:	8aa5      	ldrh	r5, [r4, #20]
 8000d70:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000d72:	4b16      	ldr	r3, [pc, #88]	; (8000dcc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000d74:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000d76:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000d78:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
 8000d7c:	645a      	str	r2, [r3, #68]	; 0x44

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000d7e:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000d80:	63d9      	str	r1, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000d82:	1b52      	subs	r2, r2, r5
 8000d84:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8000d86:	6825      	ldr	r5, [r4, #0]
 8000d88:	2d08      	cmp	r5, #8
 8000d8a:	d10e      	bne.n	8000daa <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000d8c:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000d8e:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000d90:	6258      	str	r0, [r3, #36]	; 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000d92:	7f20      	ldrb	r0, [r4, #28]
 8000d94:	4a0e      	ldr	r2, [pc, #56]	; (8000dd0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8000d96:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8000d9a:	61da      	str	r2, [r3, #28]
 8000d9c:	68e2      	ldr	r2, [r4, #12]

        /* DMA2D FGCOLR register configuration */
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000d9e:	621a      	str	r2, [r3, #32]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000da0:	4a0c      	ldr	r2, [pc, #48]	; (8000dd4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000da2:	6159      	str	r1, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000da4:	60d9      	str	r1, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000da6:	601a      	str	r2, [r3, #0]
    }
}
 8000da8:	bd38      	pop	{r3, r4, r5, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8000daa:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000dac:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8000dae:	611a      	str	r2, [r3, #16]
 8000db0:	68e1      	ldr	r1, [r4, #12]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 8000db2:	0a0a      	lsrs	r2, r1, #8
 8000db4:	0948      	lsrs	r0, r1, #5
 8000db6:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8000dba:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8000dbe:	4302      	orrs	r2, r0
 8000dc0:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8000dc4:	430a      	orrs	r2, r1
 8000dc6:	639a      	str	r2, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000dc8:	4a03      	ldr	r2, [pc, #12]	; (8000dd8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 8000dca:	e7ec      	b.n	8000da6 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8000dcc:	4002b000 	.word	0x4002b000
 8000dd0:	00010009 	.word	0x00010009
 8000dd4:	00020201 	.word	0x00020201
 8000dd8:	00030201 	.word	0x00030201

08000ddc <_ZN8touchgfx5paint8tearDownEv>:
* @brief Waits until previous DMA drawing operation has finished
*/
void tearDown()
{
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000ddc:	4b03      	ldr	r3, [pc, #12]	; (8000dec <_ZN8touchgfx5paint8tearDownEv+0x10>)
 8000dde:	681a      	ldr	r2, [r3, #0]
 8000de0:	07d2      	lsls	r2, r2, #31
 8000de2:	d4fc      	bmi.n	8000dde <_ZN8touchgfx5paint8tearDownEv+0x2>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000de4:	2223      	movs	r2, #35	; 0x23
 8000de6:	609a      	str	r2, [r3, #8]
}
 8000de8:	4770      	bx	lr
 8000dea:	bf00      	nop
 8000dec:	4002b000 	.word	0x4002b000

08000df0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
*
* @brief Renders Canvas Widget chunks using DMA.
* This functions will not generate an interrupt, and will not affect the DMA queue.
*/
void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
 8000df0:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000df2:	4c0f      	ldr	r4, [pc, #60]	; (8000e30 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x40>)
 8000df4:	6825      	ldr	r5, [r4, #0]
 8000df6:	07ed      	lsls	r5, r5, #31
 8000df8:	d4fc      	bmi.n	8000df4 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000dfa:	2523      	movs	r5, #35	; 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000dfc:	0409      	lsls	r1, r1, #16
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000dfe:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000e00:	f041 0101 	orr.w	r1, r1, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000e04:	2502      	movs	r5, #2

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    if (alpha < 0xFF)
 8000e06:	2bff      	cmp	r3, #255	; 0xff
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000e08:	6365      	str	r5, [r4, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000e0a:	6461      	str	r1, [r4, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8000e0c:	63e0      	str	r0, [r4, #60]	; 0x3c
    if (alpha < 0xFF)
 8000e0e:	d00a      	beq.n	8000e26 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x36>
    {
        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000e10:	4908      	ldr	r1, [pc, #32]	; (8000e34 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x44>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000e12:	6265      	str	r5, [r4, #36]	; 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000e14:	ea41 6303 	orr.w	r3, r1, r3, lsl #24
 8000e18:	61e3      	str	r3, [r4, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000e1a:	4b07      	ldr	r3, [pc, #28]	; (8000e38 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
        WRITE_REG(DMA2D->FGCOLR, color);
 8000e1c:	6222      	str	r2, [r4, #32]
        WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
 8000e1e:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
 8000e20:	60e0      	str	r0, [r4, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, color565);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8000e22:	6023      	str	r3, [r4, #0]
    }
}
 8000e24:	bd30      	pop	{r4, r5, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000e26:	61e5      	str	r5, [r4, #28]
        WRITE_REG(DMA2D->OCOLR, color565);
 8000e28:	9b03      	ldr	r3, [sp, #12]
 8000e2a:	63a3      	str	r3, [r4, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8000e2c:	4b03      	ldr	r3, [pc, #12]	; (8000e3c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
 8000e2e:	e7f8      	b.n	8000e22 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x32>
 8000e30:	4002b000 	.word	0x4002b000
 8000e34:	00010009 	.word	0x00010009
 8000e38:	00020001 	.word	0x00020001
 8000e3c:	00030001 	.word	0x00030001

08000e40 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8000e40:	2001      	movs	r0, #1
 8000e42:	4770      	bx	lr

08000e44 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8000e44:	2038      	movs	r0, #56	; 0x38
 8000e46:	4770      	bx	lr

08000e48 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8000e48:	2338      	movs	r3, #56	; 0x38
 8000e4a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000e4e:	3008      	adds	r0, #8
 8000e50:	4770      	bx	lr

08000e52 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8000e52:	2338      	movs	r3, #56	; 0x38
 8000e54:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000e58:	3008      	adds	r0, #8
 8000e5a:	4770      	bx	lr

08000e5c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI34Measurement_Accurate_Display_2ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000e5c:	2001      	movs	r0, #1
 8000e5e:	4770      	bx	lr

08000e60 <_ZN8touchgfx9PartitionINS_4meta8TypeListI34Measurement_Accurate_Display_2ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000e60:	f241 30e4 	movw	r0, #5092	; 0x13e4
 8000e64:	4770      	bx	lr

08000e66 <_ZN8touchgfx9PartitionINS_4meta8TypeListI34Measurement_Accurate_Display_2ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000e66:	f241 33e4 	movw	r3, #5092	; 0x13e4
 8000e6a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000e6e:	3008      	adds	r0, #8
 8000e70:	4770      	bx	lr

08000e72 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI34Measurement_Accurate_Display_2ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000e72:	f241 33e4 	movw	r3, #5092	; 0x13e4
 8000e76:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000e7a:	3008      	adds	r0, #8
 8000e7c:	4770      	bx	lr

08000e7e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000e7e:	2001      	movs	r0, #1
 8000e80:	4770      	bx	lr

08000e82 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000e82:	2010      	movs	r0, #16
 8000e84:	4770      	bx	lr

08000e86 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000e86:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000e8a:	3008      	adds	r0, #8
 8000e8c:	4770      	bx	lr

08000e8e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000e8e:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000e92:	3008      	adds	r0, #8
 8000e94:	4770      	bx	lr

08000e96 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoMain_MenuScreenNoTransition();
 8000e96:	4608      	mov	r0, r1
 8000e98:	f001 bf60 	b.w	8002d5c <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>

08000e9c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8000e9c:	b510      	push	{r4, lr}
 8000e9e:	4b03      	ldr	r3, [pc, #12]	; (8000eac <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8000ea0:	6003      	str	r3, [r0, #0]
 8000ea2:	4604      	mov	r4, r0
 8000ea4:	f00d f91b 	bl	800e0de <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000ea8:	4620      	mov	r0, r4
 8000eaa:	bd10      	pop	{r4, pc}
 8000eac:	080287a0 	.word	0x080287a0

08000eb0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8000eb0:	b510      	push	{r4, lr}
 8000eb2:	4604      	mov	r4, r0
 8000eb4:	f7ff fff2 	bl	8000e9c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000eb8:	4620      	mov	r0, r4
 8000eba:	2140      	movs	r1, #64	; 0x40
 8000ebc:	f025 fae7 	bl	802648e <_ZdlPvj>
 8000ec0:	4620      	mov	r0, r4
 8000ec2:	bd10      	pop	{r4, pc}

08000ec4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI34Measurement_Accurate_Display_2ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000ec4:	b510      	push	{r4, lr}
 8000ec6:	4b03      	ldr	r3, [pc, #12]	; (8000ed4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI34Measurement_Accurate_Display_2ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000ec8:	6003      	str	r3, [r0, #0]
 8000eca:	4604      	mov	r4, r0
 8000ecc:	f00d f907 	bl	800e0de <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000ed0:	4620      	mov	r0, r4
 8000ed2:	bd10      	pop	{r4, pc}
 8000ed4:	0802876c 	.word	0x0802876c

08000ed8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI34Measurement_Accurate_Display_2ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000ed8:	b510      	push	{r4, lr}
 8000eda:	4604      	mov	r4, r0
 8000edc:	f7ff fff2 	bl	8000ec4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI34Measurement_Accurate_Display_2ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000ee0:	4620      	mov	r0, r4
 8000ee2:	f241 31ec 	movw	r1, #5100	; 0x13ec
 8000ee6:	f025 fad2 	bl	802648e <_ZdlPvj>
 8000eea:	4620      	mov	r0, r4
 8000eec:	bd10      	pop	{r4, pc}
	...

08000ef0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000ef0:	b510      	push	{r4, lr}
 8000ef2:	4b03      	ldr	r3, [pc, #12]	; (8000f00 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000ef4:	6003      	str	r3, [r0, #0]
 8000ef6:	4604      	mov	r4, r0
 8000ef8:	f00d f8f1 	bl	800e0de <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000efc:	4620      	mov	r0, r4
 8000efe:	bd10      	pop	{r4, pc}
 8000f00:	08028738 	.word	0x08028738

08000f04 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000f04:	b510      	push	{r4, lr}
 8000f06:	4604      	mov	r4, r0
 8000f08:	f7ff fff2 	bl	8000ef0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000f0c:	4620      	mov	r0, r4
 8000f0e:	2118      	movs	r1, #24
 8000f10:	f025 fabd 	bl	802648e <_ZdlPvj>
 8000f14:	4620      	mov	r0, r4
 8000f16:	bd10      	pop	{r4, pc}

08000f18 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8000f18:	b510      	push	{r4, lr}
 8000f1a:	4b09      	ldr	r3, [pc, #36]	; (8000f40 <_ZN12FrontendHeapD1Ev+0x28>)
 8000f1c:	6003      	str	r3, [r0, #0]
 8000f1e:	4604      	mov	r4, r0
 8000f20:	f500 50a0 	add.w	r0, r0, #5120	; 0x1400
 8000f24:	3018      	adds	r0, #24
 8000f26:	f7ff ffb9 	bl	8000e9c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000f2a:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8000f2e:	f7ff ffc9 	bl	8000ec4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI34Measurement_Accurate_Display_2ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000f32:	f104 0014 	add.w	r0, r4, #20
 8000f36:	f7ff ffdb 	bl	8000ef0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000f3a:	4620      	mov	r0, r4
 8000f3c:	bd10      	pop	{r4, pc}
 8000f3e:	bf00      	nop
 8000f40:	080287d4 	.word	0x080287d4

08000f44 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8000f44:	b508      	push	{r3, lr}
 8000f46:	4802      	ldr	r0, [pc, #8]	; (8000f50 <__tcf_0+0xc>)
 8000f48:	f7ff ffe6 	bl	8000f18 <_ZN12FrontendHeapD1Ev>
 8000f4c:	bd08      	pop	{r3, pc}
 8000f4e:	bf00      	nop
 8000f50:	200001b0 	.word	0x200001b0

08000f54 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8000f54:	b510      	push	{r4, lr}
 8000f56:	4604      	mov	r4, r0
 8000f58:	f7ff ffde 	bl	8000f18 <_ZN12FrontendHeapD1Ev>
 8000f5c:	4620      	mov	r0, r4
 8000f5e:	f241 51bc 	movw	r1, #5564	; 0x15bc
 8000f62:	f025 fa94 	bl	802648e <_ZdlPvj>
 8000f66:	4620      	mov	r0, r4
 8000f68:	bd10      	pop	{r4, pc}
	...

08000f6c <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8000f6c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8000f70:	f001 f97e 	bl	8002270 <_ZN14BitmapDatabase11getInstanceEv>
 8000f74:	4605      	mov	r5, r0
 8000f76:	f001 f97f 	bl	8002278 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8000f7a:	2400      	movs	r4, #0
 8000f7c:	4601      	mov	r1, r0
 8000f7e:	4623      	mov	r3, r4
 8000f80:	4628      	mov	r0, r5
 8000f82:	4622      	mov	r2, r4
 8000f84:	9400      	str	r4, [sp, #0]
 8000f86:	f015 ff2d 	bl	8016de4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8000f8a:	4b26      	ldr	r3, [pc, #152]	; (8001024 <touchgfx_init+0xb8>)
 8000f8c:	4a26      	ldr	r2, [pc, #152]	; (8001028 <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 8000f8e:	4d27      	ldr	r5, [pc, #156]	; (800102c <touchgfx_init+0xc0>)
 8000f90:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8000f92:	4620      	mov	r0, r4
 8000f94:	f005 fe1a 	bl	8006bcc <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8000f98:	4825      	ldr	r0, [pc, #148]	; (8001030 <touchgfx_init+0xc4>)
 8000f9a:	f015 fe8b 	bl	8016cb4 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8000f9e:	682b      	ldr	r3, [r5, #0]
 8000fa0:	f3bf 8f5b 	dmb	ish
 8000fa4:	07db      	lsls	r3, r3, #31
 8000fa6:	d436      	bmi.n	8001016 <touchgfx_init+0xaa>
 8000fa8:	4628      	mov	r0, r5
 8000faa:	f025 fa72 	bl	8026492 <__cxa_guard_acquire>
 8000fae:	b390      	cbz	r0, 8001016 <touchgfx_init+0xaa>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 8000fb0:	4c20      	ldr	r4, [pc, #128]	; (8001034 <touchgfx_init+0xc8>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8000fb2:	4b21      	ldr	r3, [pc, #132]	; (8001038 <touchgfx_init+0xcc>)
          screenStorage(scr),
          transitionStorage(tra),
 8000fb4:	4f21      	ldr	r7, [pc, #132]	; (800103c <touchgfx_init+0xd0>)
 8000fb6:	6023      	str	r3, [r4, #0]
          frontendApplication(app)
 8000fb8:	f504 56a3 	add.w	r6, r4, #5216	; 0x1460
        : presenterStorage(pres),
 8000fbc:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 8000fc0:	f104 082c 	add.w	r8, r4, #44	; 0x2c
        : presenterStorage(pres),
 8000fc4:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 8000fc6:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 8000fca:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 8000fcc:	6126      	str	r6, [r4, #16]
 8000fce:	f00d f887 	bl	800e0e0 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000fd2:	4b1b      	ldr	r3, [pc, #108]	; (8001040 <touchgfx_init+0xd4>)
 8000fd4:	6163      	str	r3, [r4, #20]
 8000fd6:	4640      	mov	r0, r8
 8000fd8:	f00d f882 	bl	800e0e0 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000fdc:	4b19      	ldr	r3, [pc, #100]	; (8001044 <touchgfx_init+0xd8>)
 8000fde:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000fe0:	4638      	mov	r0, r7
 8000fe2:	f00d f87d 	bl	800e0e0 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000fe6:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8000fea:	4a17      	ldr	r2, [pc, #92]	; (8001048 <touchgfx_init+0xdc>)
 8000fec:	f8c3 2418 	str.w	r2, [r3, #1048]	; 0x418
 8000ff0:	f503 608b 	add.w	r0, r3, #1112	; 0x458
 8000ff4:	f006 f91a 	bl	800722c <_ZN5ModelC1Ev>
 8000ff8:	4622      	mov	r2, r4
 8000ffa:	f1a6 0108 	sub.w	r1, r6, #8
 8000ffe:	4630      	mov	r0, r6
 8001000:	f005 fe9c 	bl	8006d3c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8001004:	4630      	mov	r0, r6
 8001006:	f001 fea9 	bl	8002d5c <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>
        static FrontendHeap instance;
 800100a:	4810      	ldr	r0, [pc, #64]	; (800104c <touchgfx_init+0xe0>)
 800100c:	f026 f84e 	bl	80270ac <atexit>
 8001010:	4628      	mov	r0, r5
 8001012:	f025 fa4a 	bl	80264aa <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8001016:	480e      	ldr	r0, [pc, #56]	; (8001050 <touchgfx_init+0xe4>)
}
 8001018:	b002      	add	sp, #8
 800101a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 800101e:	f7ff bc2b 	b.w	8000878 <_ZN11TouchGFXHAL10initializeEv>
 8001022:	bf00      	nop
 8001024:	20013820 	.word	0x20013820
 8001028:	2000258c 	.word	0x2000258c
 800102c:	200001ac 	.word	0x200001ac
 8001030:	20000008 	.word	0x20000008
 8001034:	200001b0 	.word	0x200001b0
 8001038:	080287d4 	.word	0x080287d4
 800103c:	200015c8 	.word	0x200015c8
 8001040:	08028738 	.word	0x08028738
 8001044:	0802876c 	.word	0x0802876c
 8001048:	080287a0 	.word	0x080287a0
 800104c:	08000f45 	.word	0x08000f45
 8001050:	20002510 	.word	0x20002510

08001054 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 8001054:	4770      	bx	lr
	...

08001058 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8001058:	4801      	ldr	r0, [pc, #4]	; (8001060 <touchgfx_taskEntry+0x8>)
 800105a:	f7ff bc1b 	b.w	8000894 <_ZN11TouchGFXHAL9taskEntryEv>
 800105e:	bf00      	nop
 8001060:	20002510 	.word	0x20002510

08001064 <_GLOBAL__sub_I_touchgfx_init>:
}
 8001064:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 8001066:	4e22      	ldr	r6, [pc, #136]	; (80010f0 <_GLOBAL__sub_I_touchgfx_init+0x8c>)
{
public:

    STM32TouchController() {}
 8001068:	4c22      	ldr	r4, [pc, #136]	; (80010f4 <_GLOBAL__sub_I_touchgfx_init+0x90>)
static LCD16bpp display;
 800106a:	4d23      	ldr	r5, [pc, #140]	; (80010f8 <_GLOBAL__sub_I_touchgfx_init+0x94>)
 800106c:	4b23      	ldr	r3, [pc, #140]	; (80010fc <_GLOBAL__sub_I_touchgfx_init+0x98>)
 800106e:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8001070:	4630      	mov	r0, r6
 8001072:	f7ff fd71 	bl	8000b58 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8001076:	4628      	mov	r0, r5
 8001078:	f01a f980 	bl	801b37c <_ZN8touchgfx8LCD16bppC1Ev>
        : dma(dmaInterface),
 800107c:	4b20      	ldr	r3, [pc, #128]	; (8001100 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 800107e:	4821      	ldr	r0, [pc, #132]	; (8001104 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
          touchController(touchCtrl),
 8001080:	60dc      	str	r4, [r3, #12]
          mcuInstrumentation(0),
 8001082:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 8001084:	f44f 7180 	mov.w	r1, #256	; 0x100
          auxiliaryLCD(0),
 8001088:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
          touchSampleRate(1),
 800108c:	491e      	ldr	r1, [pc, #120]	; (8001108 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 800108e:	861a      	strh	r2, [r3, #48]	; 0x30
          vSyncCompensationEnabled(false),
 8001090:	e9c3 121a 	strd	r1, r2, [r3, #104]	; 0x68
          requestedOrientation(ORIENTATION_LANDSCAPE),
 8001094:	491d      	ldr	r1, [pc, #116]	; (800110c <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 8001096:	6799      	str	r1, [r3, #120]	; 0x78
        instance = this;
 8001098:	491d      	ldr	r1, [pc, #116]	; (8001110 <_GLOBAL__sub_I_touchgfx_init+0xac>)
          useAuxiliaryLCD(false),
 800109a:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
        instance = this;
 800109e:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80010a0:	21f0      	movs	r1, #240	; 0xf0
 80010a2:	8001      	strh	r1, [r0, #0]
 80010a4:	481b      	ldr	r0, [pc, #108]	; (8001114 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          lastY(0),
 80010a6:	665a      	str	r2, [r3, #100]	; 0x64
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80010a8:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80010aa:	481b      	ldr	r0, [pc, #108]	; (8001118 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          updateMCULoad(0),
 80010ac:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80010b0:	f44f 71a0 	mov.w	r1, #320	; 0x140
          buttonController(0),
 80010b4:	e9c3 2204 	strd	r2, r2, [r3, #16]
 80010b8:	e9c3 2206 	strd	r2, r2, [r3, #24]
 80010bc:	e9c3 2208 	strd	r2, r2, [r3, #32]
 80010c0:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
          frameBuffer0(0),
 80010c4:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
          frameBuffer2(0),
 80010c8:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 80010cc:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
          lastX(0),
 80010d0:	e9c3 2217 	strd	r2, r2, [r3, #92]	; 0x5c
          cc_begin(0),
 80010d4:	675a      	str	r2, [r3, #116]	; 0x74
          lcdRef(display),
 80010d6:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80010da:	8001      	strh	r1, [r0, #0]
 80010dc:	480f      	ldr	r0, [pc, #60]	; (800111c <_GLOBAL__sub_I_touchgfx_init+0xb8>)
 80010de:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 80010e0:	490f      	ldr	r1, [pc, #60]	; (8001120 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 80010e2:	700a      	strb	r2, [r1, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 80010e4:	2201      	movs	r2, #1
 80010e6:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 80010ea:	4a0e      	ldr	r2, [pc, #56]	; (8001124 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 80010ec:	601a      	str	r2, [r3, #0]
}
 80010ee:	bd70      	pop	{r4, r5, r6, pc}
 80010f0:	20001770 	.word	0x20001770
 80010f4:	2000176c 	.word	0x2000176c
 80010f8:	20002590 	.word	0x20002590
 80010fc:	080281d0 	.word	0x080281d0
 8001100:	20002510 	.word	0x20002510
 8001104:	200137b0 	.word	0x200137b0
 8001108:	01000001 	.word	0x01000001
 800110c:	01010000 	.word	0x01010000
 8001110:	200137bc 	.word	0x200137bc
 8001114:	200137b6 	.word	0x200137b6
 8001118:	200137b2 	.word	0x200137b2
 800111c:	200137b8 	.word	0x200137b8
 8001120:	200137b4 	.word	0x200137b4
 8001124:	0802835c 	.word	0x0802835c

08001128 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 8001128:	4801      	ldr	r0, [pc, #4]	; (8001130 <_GLOBAL__sub_D_touchgfx_init+0x8>)
 800112a:	f7ff bcf1 	b.w	8000b10 <_ZN8STM32DMAD1Ev>
 800112e:	bf00      	nop
 8001130:	20001770 	.word	0x20001770

08001134 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8001134:	2000      	movs	r0, #0
 8001136:	4770      	bx	lr

08001138 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8001138:	8081      	strh	r1, [r0, #4]
    }
 800113a:	4770      	bx	lr

0800113c <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 800113c:	80c1      	strh	r1, [r0, #6]
    }
 800113e:	4770      	bx	lr

08001140 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8001140:	8101      	strh	r1, [r0, #8]
    }
 8001142:	4770      	bx	lr

08001144 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8001144:	8141      	strh	r1, [r0, #10]
    }
 8001146:	4770      	bx	lr

08001148 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8001148:	4770      	bx	lr

0800114a <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 800114a:	4770      	bx	lr

0800114c <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 800114c:	4770      	bx	lr

0800114e <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 800114e:	4770      	bx	lr

08001150 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8001150:	4770      	bx	lr

08001152 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8001152:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8001154:	88c4      	ldrh	r4, [r0, #6]
 8001156:	6803      	ldr	r3, [r0, #0]
 8001158:	1b12      	subs	r2, r2, r4
 800115a:	8884      	ldrh	r4, [r0, #4]
 800115c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800115e:	1b09      	subs	r1, r1, r4
 8001160:	b212      	sxth	r2, r2
    }
 8001162:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8001166:	b209      	sxth	r1, r1
 8001168:	4718      	bx	r3

0800116a <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 800116a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800116e:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8001170:	f04f 33ff 	mov.w	r3, #4294967295
 8001174:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8001176:	6813      	ldr	r3, [r2, #0]
 8001178:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 800117a:	6010      	str	r0, [r2, #0]
    }
 800117c:	4770      	bx	lr

0800117e <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 800117e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8001182:	b11a      	cbz	r2, 800118c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8001184:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8001188:	b102      	cbz	r2, 800118c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 800118a:	6018      	str	r0, [r3, #0]
        }
    }
 800118c:	4770      	bx	lr

0800118e <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 800118e:	2000      	movs	r0, #0
 8001190:	4770      	bx	lr

08001192 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 8001192:	888b      	ldrh	r3, [r1, #4]
 8001194:	8083      	strh	r3, [r0, #4]
        return true;
    }
 8001196:	2001      	movs	r0, #1
 8001198:	4770      	bx	lr

0800119a <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 800119a:	4770      	bx	lr

0800119c <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 800119c:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
 80011a0:	4770      	bx	lr

080011a2 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 80011a2:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 80011a6:	4770      	bx	lr

080011a8 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 80011a8:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80011aa:	2200      	movs	r2, #0
        return rect.width;
 80011ac:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 80011b0:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 80011b4:	8002      	strh	r2, [r0, #0]
 80011b6:	8042      	strh	r2, [r0, #2]
 80011b8:	8084      	strh	r4, [r0, #4]
 80011ba:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 80011bc:	bd10      	pop	{r4, pc}

080011be <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 80011be:	2200      	movs	r2, #0
 80011c0:	8002      	strh	r2, [r0, #0]
 80011c2:	8042      	strh	r2, [r0, #2]
 80011c4:	8082      	strh	r2, [r0, #4]
 80011c6:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 80011c8:	4770      	bx	lr
	...

080011cc <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80011cc:	4b03      	ldr	r3, [pc, #12]	; (80011dc <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 80011ce:	2290      	movs	r2, #144	; 0x90
 80011d0:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
 80011d4:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 80011d8:	4770      	bx	lr
 80011da:	bf00      	nop
 80011dc:	e000e100 	.word	0xe000e100

080011e0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 80011e0:	4a09      	ldr	r2, [pc, #36]	; (8001208 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 80011e2:	490a      	ldr	r1, [pc, #40]	; (800120c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 80011e4:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 80011e6:	480a      	ldr	r0, [pc, #40]	; (8001210 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 80011e8:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80011ec:	3b01      	subs	r3, #1
 80011ee:	b29b      	uxth	r3, r3
 80011f0:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 80011f2:	6911      	ldr	r1, [r2, #16]
 80011f4:	f3c1 010a 	ubfx	r1, r1, #0, #11
 80011f8:	3901      	subs	r1, #1
 80011fa:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 80011fc:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 80011fe:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8001200:	f043 0301 	orr.w	r3, r3, #1
 8001204:	6353      	str	r3, [r2, #52]	; 0x34
}
 8001206:	4770      	bx	lr
 8001208:	40016800 	.word	0x40016800
 800120c:	20002616 	.word	0x20002616
 8001210:	20002614 	.word	0x20002614

08001214 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8001214:	4b01      	ldr	r3, [pc, #4]	; (800121c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 8001216:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 800121a:	4770      	bx	lr
 800121c:	40016800 	.word	0x40016800

08001220 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001220:	4b02      	ldr	r3, [pc, #8]	; (800122c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001222:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001224:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001228:	625a      	str	r2, [r3, #36]	; 0x24
}
 800122a:	4770      	bx	lr
 800122c:	40016800 	.word	0x40016800

08001230 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8001230:	b570      	push	{r4, r5, r6, lr}
 8001232:	4604      	mov	r4, r0
    HAL::initialize();
 8001234:	f00d fc1f 	bl	800ea76 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 8001238:	6823      	ldr	r3, [r4, #0]
 800123a:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 800123c:	f012 fbc8 	bl	80139d0 <_ZN8touchgfx11Application11getInstanceEv>
 8001240:	4601      	mov	r1, r0
 8001242:	4620      	mov	r0, r4
 8001244:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8001246:	6823      	ldr	r3, [r4, #0]
 8001248:	4a05      	ldr	r2, [pc, #20]	; (8001260 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 800124a:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 800124e:	4620      	mov	r0, r4
 8001250:	46ac      	mov	ip, r5
 8001252:	2300      	movs	r3, #0
}
 8001254:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8001258:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 800125c:	4760      	bx	ip
 800125e:	bf00      	nop
 8001260:	d004b000 	.word	0xd004b000

08001264 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 8001264:	f00d bbee 	b.w	800ea44 <_ZN8touchgfx3HAL10beginFrameEv>

08001268 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 8001268:	f00d bbf8 	b.w	800ea5c <_ZN8touchgfx3HAL8endFrameEv>

0800126c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 800126c:	f00d bbb4 	b.w	800e9d8 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08001270 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 8001270:	f00d bd15 	b.w	800ec9e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

08001274 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 8001274:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8001278:	b112      	cbz	r2, 8001280 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 800127a:	6803      	ldr	r3, [r0, #0]
 800127c:	695b      	ldr	r3, [r3, #20]
 800127e:	4718      	bx	r3
    }
 8001280:	4770      	bx	lr
	...

08001284 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001284:	4b03      	ldr	r3, [pc, #12]	; (8001294 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 8001286:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800128a:	609a      	str	r2, [r3, #8]
 800128c:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8001290:	609a      	str	r2, [r3, #8]
}
 8001292:	4770      	bx	lr
 8001294:	e000e100 	.word	0xe000e100

08001298 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001298:	4b08      	ldr	r3, [pc, #32]	; (80012bc <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 800129a:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800129e:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80012a2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80012a6:	f3bf 8f6f 	isb	sy
 80012aa:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80012ae:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80012b2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80012b6:	f3bf 8f6f 	isb	sy
}
 80012ba:	4770      	bx	lr
 80012bc:	e000e100 	.word	0xe000e100

080012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 80012c0:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 80012c2:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80012c4:	4e12      	ldr	r6, [pc, #72]	; (8001310 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 80012c6:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 80012c8:	4b12      	ldr	r3, [pc, #72]	; (8001314 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 80012ca:	6003      	str	r3, [r0, #0]
 80012cc:	6833      	ldr	r3, [r6, #0]
 80012ce:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
    AbstractPainterRGB565()
 80012d2:	4605      	mov	r5, r0
 80012d4:	b10a      	cbz	r2, 80012da <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 80012d6:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80012d8:	b900      	cbnz	r0, 80012dc <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 80012da:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 80012dc:	6803      	ldr	r3, [r0, #0]
 80012de:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80012e0:	4798      	blx	r3
        return auxiliaryLCD;
 80012e2:	6833      	ldr	r3, [r6, #0]
 80012e4:	fab0 f480 	clz	r4, r0
 80012e8:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80012ea:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 80012ec:	b130      	cbz	r0, 80012fc <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 80012ee:	6803      	ldr	r3, [r0, #0]
 80012f0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80012f2:	4798      	blx	r3
 80012f4:	2800      	cmp	r0, #0
 80012f6:	bf08      	it	eq
 80012f8:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 80012fc:	b92c      	cbnz	r4, 800130a <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 80012fe:	4b06      	ldr	r3, [pc, #24]	; (8001318 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 8001300:	4a06      	ldr	r2, [pc, #24]	; (800131c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 8001302:	4807      	ldr	r0, [pc, #28]	; (8001320 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 8001304:	212c      	movs	r1, #44	; 0x2c
 8001306:	f025 feb3 	bl	8027070 <__assert_func>
    }
 800130a:	4628      	mov	r0, r5
 800130c:	bd70      	pop	{r4, r5, r6, pc}
 800130e:	bf00      	nop
 8001310:	200137bc 	.word	0x200137bc
 8001314:	080288e4 	.word	0x080288e4
 8001318:	080287e0 	.word	0x080287e0
 800131c:	0802883e 	.word	0x0802883e
 8001320:	08028877 	.word	0x08028877

08001324 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8001324:	b510      	push	{r4, lr}
        return instance;
 8001326:	4c14      	ldr	r4, [pc, #80]	; (8001378 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 8001328:	6823      	ldr	r3, [r4, #0]
 800132a:	b323      	cbz	r3, 8001376 <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 800132c:	4b13      	ldr	r3, [pc, #76]	; (800137c <HAL_LTDC_LineEventCallback+0x58>)
 800132e:	4a14      	ldr	r2, [pc, #80]	; (8001380 <HAL_LTDC_LineEventCallback+0x5c>)
 8001330:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001332:	8811      	ldrh	r1, [r2, #0]
 8001334:	428b      	cmp	r3, r1
 8001336:	d113      	bne.n	8001360 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8001338:	4b12      	ldr	r3, [pc, #72]	; (8001384 <HAL_LTDC_LineEventCallback+0x60>)
 800133a:	8819      	ldrh	r1, [r3, #0]
 800133c:	f008 fbe8 	bl	8009b10 <HAL_LTDC_ProgramLineEvent>
 8001340:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 8001342:	f892 306a 	ldrb.w	r3, [r2, #106]	; 0x6a
 8001346:	3301      	adds	r3, #1
 8001348:	f882 306a 	strb.w	r3, [r2, #106]	; 0x6a
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 800134c:	f7ff fb8e 	bl	8000a6c <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8001350:	6820      	ldr	r0, [r4, #0]
 8001352:	f00e f8cf 	bl	800f4f4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8001356:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 800135a:	2000      	movs	r0, #0
 800135c:	f7ff ba06 	b.w	800076c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 8001360:	f008 fbd6 	bl	8009b10 <HAL_LTDC_ProgramLineEvent>
        return instance;
 8001364:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 8001366:	6803      	ldr	r3, [r0, #0]
 8001368:	6a1b      	ldr	r3, [r3, #32]
 800136a:	4798      	blx	r3
    }
 800136c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8001370:	2000      	movs	r0, #0
 8001372:	f7ff ba13 	b.w	800079c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 8001376:	bd10      	pop	{r4, pc}
 8001378:	200137bc 	.word	0x200137bc
 800137c:	40016800 	.word	0x40016800
 8001380:	20002616 	.word	0x20002616
 8001384:	20002614 	.word	0x20002614

08001388 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 8001388:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 800138a:	2064      	movs	r0, #100	; 0x64
 800138c:	f00a f91a 	bl	800b5c4 <osDelay>
  for(;;)
 8001390:	e7fb      	b.n	800138a <StartDefaultTask+0x2>
 8001392:	bf00      	nop

08001394 <StartTimeoutTask>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartTimeoutTask */
void StartTimeoutTask(void *argument)
{
 8001394:	b580      	push	{r7, lr}
 8001396:	4c10      	ldr	r4, [pc, #64]	; (80013d8 <StartTimeoutTask+0x44>)
 8001398:	f8df 8048 	ldr.w	r8, [pc, #72]	; 80013e4 <StartTimeoutTask+0x50>
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);

	  if(sleep_timeout_value == 0)
	  {
		  sleep_timeout_value = 60;
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 800139c:	4f0f      	ldr	r7, [pc, #60]	; (80013dc <StartTimeoutTask+0x48>)
	  if(sleep_timeout_value > 60 && sleep_timeout_value < 0)
		  sleep_timeout_value = 60;


	  // Toggle onboard LED as heartbeat visual feedback
	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 800139e:	4e10      	ldr	r6, [pc, #64]	; (80013e0 <StartTimeoutTask+0x4c>)
	  sleep_timeout_value--;
 80013a0:	6820      	ldr	r0, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 80013a2:	2300      	movs	r3, #0
 80013a4:	461a      	mov	r2, r3
 80013a6:	4621      	mov	r1, r4
	  sleep_timeout_value--;
 80013a8:	1e45      	subs	r5, r0, #1
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 80013aa:	f8d8 0000 	ldr.w	r0, [r8]
	  sleep_timeout_value--;
 80013ae:	6025      	str	r5, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 80013b0:	f00a fa04 	bl	800b7bc <osMessageQueuePut>
	  if(sleep_timeout_value == 0)
 80013b4:	6822      	ldr	r2, [r4, #0]
		  sleep_timeout_value = 60;
 80013b6:	233c      	movs	r3, #60	; 0x3c
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80013b8:	4638      	mov	r0, r7
 80013ba:	2120      	movs	r1, #32
	  if(sleep_timeout_value == 0)
 80013bc:	b912      	cbnz	r2, 80013c4 <StartTimeoutTask+0x30>
		  sleep_timeout_value = 60;
 80013be:	6023      	str	r3, [r4, #0]
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80013c0:	f006 fd8a 	bl	8007ed8 <HAL_GPIO_WritePin>
	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 80013c4:	4630      	mov	r0, r6
 80013c6:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80013ca:	f006 fd89 	bl	8007ee0 <HAL_GPIO_TogglePin>

	  osDelay(1000);
 80013ce:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80013d2:	f00a f8f7 	bl	800b5c4 <osDelay>
	  sleep_timeout_value--;
 80013d6:	e7e3      	b.n	80013a0 <StartTimeoutTask+0xc>
 80013d8:	20000014 	.word	0x20000014
 80013dc:	40021000 	.word	0x40021000
 80013e0:	40021800 	.word	0x40021800
 80013e4:	20002620 	.word	0x20002620

080013e8 <SystemClock_Config>:
{
 80013e8:	b530      	push	{r4, r5, lr}
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80013ea:	2400      	movs	r4, #0
{
 80013ec:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80013ee:	e9cd 440a 	strd	r4, r4, [sp, #40]	; 0x28
 80013f2:	e9cd 440c 	strd	r4, r4, [sp, #48]	; 0x30
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80013f6:	e9cd 4403 	strd	r4, r4, [sp, #12]
 80013fa:	e9cd 4405 	strd	r4, r4, [sp, #20]
  __HAL_RCC_PWR_CLK_ENABLE();
 80013fe:	4a1e      	ldr	r2, [pc, #120]	; (8001478 <SystemClock_Config+0x90>)
 8001400:	9401      	str	r4, [sp, #4]
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001402:	9407      	str	r4, [sp, #28]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001404:	6c11      	ldr	r1, [r2, #64]	; 0x40
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001406:	4b1d      	ldr	r3, [pc, #116]	; (800147c <SystemClock_Config+0x94>)
  __HAL_RCC_PWR_CLK_ENABLE();
 8001408:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 800140c:	6411      	str	r1, [r2, #64]	; 0x40
 800140e:	6c12      	ldr	r2, [r2, #64]	; 0x40
 8001410:	f002 5280 	and.w	r2, r2, #268435456	; 0x10000000
 8001414:	9201      	str	r2, [sp, #4]
 8001416:	9a01      	ldr	r2, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001418:	9402      	str	r4, [sp, #8]
 800141a:	681a      	ldr	r2, [r3, #0]
 800141c:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8001420:	601a      	str	r2, [r3, #0]
 8001422:	681b      	ldr	r3, [r3, #0]
 8001424:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8001428:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 800142a:	2201      	movs	r2, #1
 800142c:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001430:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLM = 8;
 8001434:	2308      	movs	r3, #8
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8001436:	2502      	movs	r5, #2
  RCC_OscInitStruct.PLL.PLLM = 8;
 8001438:	9310      	str	r3, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800143a:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  RCC_OscInitStruct.PLL.PLLN = 336;
 800143e:	f44f 73a8 	mov.w	r3, #336	; 0x150
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001442:	e9cd 520e 	strd	r5, r2, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 8001446:	9311      	str	r3, [sp, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001448:	2202      	movs	r2, #2
 800144a:	2304      	movs	r3, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800144c:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 800144e:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001452:	9902      	ldr	r1, [sp, #8]
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001454:	f008 fb7e 	bl	8009b54 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001458:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800145a:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 800145e:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001462:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001466:	a803      	add	r0, sp, #12
 8001468:	2105      	movs	r1, #5
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 800146a:	e9cd 4205 	strd	r4, r2, [sp, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 800146e:	9307      	str	r3, [sp, #28]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001470:	f008 fd88 	bl	8009f84 <HAL_RCC_ClockConfig>
}
 8001474:	b015      	add	sp, #84	; 0x54
 8001476:	bd30      	pop	{r4, r5, pc}
 8001478:	40023800 	.word	0x40023800
 800147c:	40007000 	.word	0x40007000

08001480 <main>:
{
 8001480:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001484:	2400      	movs	r4, #0
{
 8001486:	b09d      	sub	sp, #116	; 0x74
  HAL_Init();
 8001488:	f006 fa00 	bl	800788c <HAL_Init>
  SystemClock_Config();
 800148c:	f7ff ffac 	bl	80013e8 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001490:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8001494:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001498:	4bc1      	ldr	r3, [pc, #772]	; (80017a0 <main+0x320>)
 800149a:	9400      	str	r4, [sp, #0]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800149c:	9413      	str	r4, [sp, #76]	; 0x4c
  __HAL_RCC_GPIOE_CLK_ENABLE();
 800149e:	6b19      	ldr	r1, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 80014a0:	48c0      	ldr	r0, [pc, #768]	; (80017a4 <main+0x324>)
  hi2c3.Instance = I2C3;
 80014a2:	4dc1      	ldr	r5, [pc, #772]	; (80017a8 <main+0x328>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014a4:	f041 0110 	orr.w	r1, r1, #16
 80014a8:	6319      	str	r1, [r3, #48]	; 0x30
 80014aa:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014ac:	f001 0110 	and.w	r1, r1, #16
 80014b0:	9100      	str	r1, [sp, #0]
 80014b2:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80014b4:	9401      	str	r4, [sp, #4]
 80014b6:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014b8:	f041 0120 	orr.w	r1, r1, #32
 80014bc:	6319      	str	r1, [r3, #48]	; 0x30
 80014be:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014c0:	f001 0120 	and.w	r1, r1, #32
 80014c4:	9101      	str	r1, [sp, #4]
 80014c6:	9901      	ldr	r1, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 80014c8:	9402      	str	r4, [sp, #8]
 80014ca:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014cc:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 80014d0:	6319      	str	r1, [r3, #48]	; 0x30
 80014d2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014d4:	f001 0180 	and.w	r1, r1, #128	; 0x80
 80014d8:	9102      	str	r1, [sp, #8]
 80014da:	9902      	ldr	r1, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80014dc:	9403      	str	r4, [sp, #12]
 80014de:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014e0:	f041 0104 	orr.w	r1, r1, #4
 80014e4:	6319      	str	r1, [r3, #48]	; 0x30
 80014e6:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014e8:	f001 0104 	and.w	r1, r1, #4
 80014ec:	9103      	str	r1, [sp, #12]
 80014ee:	9903      	ldr	r1, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80014f0:	9404      	str	r4, [sp, #16]
 80014f2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014f4:	f041 0101 	orr.w	r1, r1, #1
 80014f8:	6319      	str	r1, [r3, #48]	; 0x30
 80014fa:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014fc:	f001 0101 	and.w	r1, r1, #1
 8001500:	9104      	str	r1, [sp, #16]
 8001502:	9904      	ldr	r1, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001504:	9405      	str	r4, [sp, #20]
 8001506:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001508:	f041 0102 	orr.w	r1, r1, #2
 800150c:	6319      	str	r1, [r3, #48]	; 0x30
 800150e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001510:	f001 0102 	and.w	r1, r1, #2
 8001514:	9105      	str	r1, [sp, #20]
 8001516:	9905      	ldr	r1, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8001518:	9406      	str	r4, [sp, #24]
 800151a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800151c:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 8001520:	6319      	str	r1, [r3, #48]	; 0x30
 8001522:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001524:	f001 0140 	and.w	r1, r1, #64	; 0x40
 8001528:	9106      	str	r1, [sp, #24]
 800152a:	9906      	ldr	r1, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800152c:	9407      	str	r4, [sp, #28]
 800152e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001530:	f041 0108 	orr.w	r1, r1, #8
 8001534:	6319      	str	r1, [r3, #48]	; 0x30
 8001536:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001538:	f003 0308 	and.w	r3, r3, #8
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 800153c:	4622      	mov	r2, r4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800153e:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8001540:	2114      	movs	r1, #20
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001542:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8001544:	f006 fcc8 	bl	8007ed8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(POWER_ON_DEVICE_GPIO_Port, POWER_ON_DEVICE_Pin, GPIO_PIN_SET);
 8001548:	4896      	ldr	r0, [pc, #600]	; (80017a4 <main+0x324>)
 800154a:	2120      	movs	r1, #32
 800154c:	2201      	movs	r2, #1
 800154e:	f006 fcc3 	bl	8007ed8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001552:	4896      	ldr	r0, [pc, #600]	; (80017ac <main+0x32c>)
 8001554:	4622      	mov	r2, r4
 8001556:	2104      	movs	r1, #4
 8001558:	f006 fcbe 	bl	8007ed8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 800155c:	4894      	ldr	r0, [pc, #592]	; (80017b0 <main+0x330>)
 800155e:	4622      	mov	r2, r4
 8001560:	f44f 5140 	mov.w	r1, #12288	; 0x3000
 8001564:	f006 fcb8 	bl	8007ed8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(DEVICE_ON_GPIO_Port, DEVICE_ON_Pin, GPIO_PIN_SET);
 8001568:	2201      	movs	r2, #1
 800156a:	4892      	ldr	r0, [pc, #584]	; (80017b4 <main+0x334>)
 800156c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001570:	f006 fcb2 	bl	8007ed8 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001574:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001576:	f04f 0903 	mov.w	r9, #3
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin|FRAME_RATE_Pin;
 800157a:	2314      	movs	r3, #20
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800157c:	4889      	ldr	r0, [pc, #548]	; (80017a4 <main+0x324>)
 800157e:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 8001580:	f04f 0808 	mov.w	r8, #8
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001584:	e9cd 360f 	strd	r3, r6, [sp, #60]	; 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001588:	e9cd 4911 	strd	r4, r9, [sp, #68]	; 0x44
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800158c:	f006 fb60 	bl	8007c50 <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8001590:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8001594:	4883      	ldr	r0, [pc, #524]	; (80017a4 <main+0x324>)
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 8001596:	f8cd 803c 	str.w	r8, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 800159a:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 800159c:	9310      	str	r3, [sp, #64]	; 0x40
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800159e:	9411      	str	r4, [sp, #68]	; 0x44
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 80015a0:	f006 fb56 	bl	8007c50 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 80015a4:	2320      	movs	r3, #32
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 80015a6:	487f      	ldr	r0, [pc, #508]	; (80017a4 <main+0x324>)
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 80015a8:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 80015aa:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80015ac:	2702      	movs	r7, #2
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 80015ae:	f04f 0a04 	mov.w	sl, #4
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015b2:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80015b6:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 80015b8:	f006 fb4a 	bl	8007c50 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80015bc:	487b      	ldr	r0, [pc, #492]	; (80017ac <main+0x32c>)
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 80015be:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80015c2:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015c4:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80015c8:	9712      	str	r7, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80015ca:	f006 fb41 	bl	8007c50 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 80015ce:	f44f 5340 	mov.w	r3, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80015d2:	4877      	ldr	r0, [pc, #476]	; (80017b0 <main+0x330>)
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 80015d4:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80015d6:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015d8:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80015dc:	9712      	str	r7, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80015de:	f006 fb37 	bl	8007c50 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 80015e2:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80015e6:	4874      	ldr	r0, [pc, #464]	; (80017b8 <main+0x338>)
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 80015e8:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80015ea:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Alternate = GPIO_AF15_EVENTOUT;
 80015ec:	230f      	movs	r3, #15
 80015ee:	9313      	str	r3, [sp, #76]	; 0x4c
  GPIO_InitStruct.Pin = DEVICE_ON_Pin;
 80015f0:	f44f 5b00 	mov.w	fp, #8192	; 0x2000
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015f4:	e9cd 7410 	strd	r7, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80015f8:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80015fa:	f006 fb29 	bl	8007c50 <HAL_GPIO_Init>
  HAL_GPIO_Init(DEVICE_ON_GPIO_Port, &GPIO_InitStruct);
 80015fe:	486d      	ldr	r0, [pc, #436]	; (80017b4 <main+0x334>)
  GPIO_InitStruct.Pin = DEVICE_ON_Pin;
 8001600:	f8cd b03c 	str.w	fp, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEVICE_ON_GPIO_Port, &GPIO_InitStruct);
 8001604:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001606:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800160a:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(DEVICE_ON_GPIO_Port, &GPIO_InitStruct);
 800160c:	f006 fb20 	bl	8007c50 <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(EXTI3_IRQn, 5, 0);
 8001610:	4622      	mov	r2, r4
 8001612:	2105      	movs	r1, #5
 8001614:	2009      	movs	r0, #9
 8001616:	f006 f989 	bl	800792c <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI3_IRQn);
 800161a:	2009      	movs	r0, #9
 800161c:	f006 f9c4 	bl	80079a8 <HAL_NVIC_EnableIRQ>
  hcrc.Instance = CRC;
 8001620:	4866      	ldr	r0, [pc, #408]	; (80017bc <main+0x33c>)
 8001622:	4b67      	ldr	r3, [pc, #412]	; (80017c0 <main+0x340>)
 8001624:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8001626:	f006 f9cd 	bl	80079c4 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 800162a:	4966      	ldr	r1, [pc, #408]	; (80017c4 <main+0x344>)
 800162c:	4b66      	ldr	r3, [pc, #408]	; (80017c8 <main+0x348>)
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 800162e:	4628      	mov	r0, r5
  hi2c3.Init.ClockSpeed = 100000;
 8001630:	e9c5 1300 	strd	r1, r3, [r5]
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001634:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8001638:	612b      	str	r3, [r5, #16]
  hi2c3.Init.OwnAddress1 = 0;
 800163a:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c3.Init.OwnAddress2 = 0;
 800163e:	e9c5 4405 	strd	r4, r4, [r5, #20]
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001642:	e9c5 4407 	strd	r4, r4, [r5, #28]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001646:	f006 fead 	bl	80083a4 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 800164a:	2110      	movs	r1, #16
 800164c:	4628      	mov	r0, r5
 800164e:	f008 f875 	bl	800973c <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8001652:	4621      	mov	r1, r4
 8001654:	4628      	mov	r0, r5
 8001656:	f008 f891 	bl	800977c <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Init.Mode = SPI_MODE_MASTER;
 800165a:	f8df c184 	ldr.w	ip, [pc, #388]	; 80017e0 <main+0x360>
  hspi5.Instance = SPI5;
 800165e:	485b      	ldr	r0, [pc, #364]	; (80017cc <main+0x34c>)
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001660:	4d5b      	ldr	r5, [pc, #364]	; (80017d0 <main+0x350>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001662:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001664:	f44f 7382 	mov.w	r3, #260	; 0x104
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8001668:	f44f 7e00 	mov.w	lr, #512	; 0x200
  hspi5.Init.Mode = SPI_MODE_MASTER;
 800166c:	e9c0 c300 	strd	ip, r3, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8001670:	2318      	movs	r3, #24
 8001672:	e9c0 e306 	strd	lr, r3, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 8001676:	230a      	movs	r3, #10
 8001678:	62c3      	str	r3, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 800167a:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 800167e:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8001682:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8001686:	f008 ff6b 	bl	800a560 <HAL_SPI_Init>
  SdramTiming.ExitSelfRefreshDelay = 7;
 800168a:	2307      	movs	r3, #7
 800168c:	9310      	str	r3, [sp, #64]	; 0x40
  SdramTiming.RowCycleDelay = 7;
 800168e:	9312      	str	r3, [sp, #72]	; 0x48
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001690:	4b50      	ldr	r3, [pc, #320]	; (80017d4 <main+0x354>)
 8001692:	602b      	str	r3, [r5, #0]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8001694:	2040      	movs	r0, #64	; 0x40
 8001696:	f44f 73c0 	mov.w	r3, #384	; 0x180
 800169a:	e9c5 0305 	strd	r0, r3, [r5, #20]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 800169e:	f8c5 b028 	str.w	fp, [r5, #40]	; 0x28
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 80016a2:	f44f 6300 	mov.w	r3, #2048	; 0x800
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 80016a6:	f04f 0b10 	mov.w	fp, #16
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80016aa:	a90f      	add	r1, sp, #60	; 0x3c
 80016ac:	4628      	mov	r0, r5
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 80016ae:	622b      	str	r3, [r5, #32]
  hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 80016b0:	e9c5 6401 	strd	r6, r4, [r5, #4]
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 80016b4:	f8c5 a00c 	str.w	sl, [r5, #12]
  SdramTiming.RPDelay = 2;
 80016b8:	e9cd 9713 	strd	r9, r7, [sp, #76]	; 0x4c
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 80016bc:	61ec      	str	r4, [r5, #28]
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 80016be:	626c      	str	r4, [r5, #36]	; 0x24
  SdramTiming.SelfRefreshTime = 4;
 80016c0:	f8cd a044 	str.w	sl, [sp, #68]	; 0x44
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 80016c4:	f8c5 b010 	str.w	fp, [r5, #16]
  SdramTiming.LoadToActiveDelay = 2;
 80016c8:	970f      	str	r7, [sp, #60]	; 0x3c
  SdramTiming.RCDDelay = 2;
 80016ca:	9715      	str	r7, [sp, #84]	; 0x54
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80016cc:	f008 fe56 	bl	800a37c <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016d0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80016d4:	a90b      	add	r1, sp, #44	; 0x2c
 80016d6:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80016d8:	e9cd 680b 	strd	r6, r8, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 80016dc:	e9cd 640d 	strd	r6, r4, [sp, #52]	; 0x34
 __IO uint32_t tmpmrd =0;
 80016e0:	9408      	str	r4, [sp, #32]
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016e2:	f008 fe6d 	bl	800a3c0 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 80016e6:	4630      	mov	r0, r6
 80016e8:	f006 f8fc 	bl	80078e4 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016ec:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80016f0:	a90b      	add	r1, sp, #44	; 0x2c
 80016f2:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80016f4:	e9cd 780b 	strd	r7, r8, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 80016f8:	e9cd 640d 	strd	r6, r4, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016fc:	f008 fe60 	bl	800a3c0 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001700:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001704:	a90b      	add	r1, sp, #44	; 0x2c
 8001706:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001708:	e9cd 980b 	strd	r9, r8, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 800170c:	e9cd a40d 	strd	sl, r4, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001710:	f008 fe56 	bl	800a3c0 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 8001714:	f44f 730c 	mov.w	r3, #560	; 0x230
 8001718:	9308      	str	r3, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 800171a:	9b08      	ldr	r3, [sp, #32]
 800171c:	930e      	str	r3, [sp, #56]	; 0x38
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800171e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001722:	a90b      	add	r1, sp, #44	; 0x2c
 8001724:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001726:	e9cd a80b 	strd	sl, r8, [sp, #44]	; 0x2c
  Command->AutoRefreshNumber       = 1;
 800172a:	960d      	str	r6, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800172c:	f008 fe48 	bl	800a3c0 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 8001730:	4628      	mov	r0, r5
 8001732:	f240 516a 	movw	r1, #1386	; 0x56a
  hltdc.Instance = LTDC;
 8001736:	4d28      	ldr	r5, [pc, #160]	; (80017d8 <main+0x358>)
  htim1.Instance = TIM1;
 8001738:	f8df 80a8 	ldr.w	r8, [pc, #168]	; 80017e4 <main+0x364>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 800173c:	f008 fe5e 	bl	800a3fc <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8001740:	2234      	movs	r2, #52	; 0x34
 8001742:	4621      	mov	r1, r4
 8001744:	a80f      	add	r0, sp, #60	; 0x3c
 8001746:	f025 fe98 	bl	802747a <memset>
  hltdc.Instance = LTDC;
 800174a:	4b24      	ldr	r3, [pc, #144]	; (80017dc <main+0x35c>)
 800174c:	602b      	str	r3, [r5, #0]
  hltdc.Init.HorizontalSync = 9;
 800174e:	2309      	movs	r3, #9
 8001750:	616b      	str	r3, [r5, #20]
  hltdc.Init.AccumulatedHBP = 29;
 8001752:	231d      	movs	r3, #29
  hltdc.Init.AccumulatedVBP = 3;
 8001754:	f8c5 9020 	str.w	r9, [r5, #32]
  hltdc.Init.AccumulatedHBP = 29;
 8001758:	61eb      	str	r3, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 800175a:	f240 190d 	movw	r9, #269	; 0x10d
 800175e:	f240 1343 	movw	r3, #323	; 0x143
 8001762:	e9c5 9309 	strd	r9, r3, [r5, #36]	; 0x24
  hltdc.Init.Backcolor.Blue = 0;
 8001766:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.TotalHeigh = 327;
 8001768:	f240 1347 	movw	r3, #327	; 0x147
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 800176c:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 327;
 800176e:	f240 1a17 	movw	sl, #279	; 0x117
 8001772:	e9c5 a30b 	strd	sl, r3, [r5, #44]	; 0x2c
  hltdc.Init.VerticalSync = 1;
 8001776:	61ae      	str	r6, [r5, #24]
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 8001778:	e9c5 4401 	strd	r4, r4, [r5, #4]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 800177c:	e9c5 4403 	strd	r4, r4, [r5, #12]
  hltdc.Init.Backcolor.Red = 0;
 8001780:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001784:	f008 f81e 	bl	80097c4 <HAL_LTDC_Init>
  pLayerCfg.WindowX1 = 240;
 8001788:	23f0      	movs	r3, #240	; 0xf0
 800178a:	9310      	str	r3, [sp, #64]	; 0x40
  pLayerCfg.ImageWidth = 240;
 800178c:	9319      	str	r3, [sp, #100]	; 0x64
  pLayerCfg.WindowY1 = 320;
 800178e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8001792:	9312      	str	r3, [sp, #72]	; 0x48
  pLayerCfg.ImageHeight = 320;
 8001794:	931a      	str	r3, [sp, #104]	; 0x68
  pLayerCfg.Alpha = 255;
 8001796:	23ff      	movs	r3, #255	; 0xff
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001798:	f44f 6c80 	mov.w	ip, #1024	; 0x400
 800179c:	e024      	b.n	80017e8 <main+0x368>
 800179e:	bf00      	nop
 80017a0:	40023800 	.word	0x40023800
 80017a4:	40021000 	.word	0x40021000
 80017a8:	20002674 	.word	0x20002674
 80017ac:	40020800 	.word	0x40020800
 80017b0:	40020c00 	.word	0x40020c00
 80017b4:	40021800 	.word	0x40021800
 80017b8:	40020000 	.word	0x40020000
 80017bc:	2000262c 	.word	0x2000262c
 80017c0:	40023000 	.word	0x40023000
 80017c4:	40005c00 	.word	0x40005c00
 80017c8:	000186a0 	.word	0x000186a0
 80017cc:	200027a4 	.word	0x200027a4
 80017d0:	20002770 	.word	0x20002770
 80017d4:	a0000140 	.word	0xa0000140
 80017d8:	200026c8 	.word	0x200026c8
 80017dc:	40016800 	.word	0x40016800
 80017e0:	40015000 	.word	0x40015000
 80017e4:	200027fc 	.word	0x200027fc
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80017e8:	4622      	mov	r2, r4
 80017ea:	a90f      	add	r1, sp, #60	; 0x3c
 80017ec:	4628      	mov	r0, r5
  pLayerCfg.Alpha = 255;
 80017ee:	9314      	str	r3, [sp, #80]	; 0x50
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 80017f0:	2305      	movs	r3, #5
 80017f2:	e9cd c316 	strd	ip, r3, [sp, #88]	; 0x58
  LcdDrv = &ili9341_drv;
 80017f6:	4d4b      	ldr	r5, [pc, #300]	; (8001924 <main+0x4a4>)
  pLayerCfg.WindowX0 = 0;
 80017f8:	940f      	str	r4, [sp, #60]	; 0x3c
  pLayerCfg.WindowY0 = 0;
 80017fa:	9411      	str	r4, [sp, #68]	; 0x44
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 80017fc:	9713      	str	r7, [sp, #76]	; 0x4c
  pLayerCfg.Alpha0 = 0;
 80017fe:	9415      	str	r4, [sp, #84]	; 0x54
  pLayerCfg.FBStartAdress = 0;
 8001800:	9418      	str	r4, [sp, #96]	; 0x60
  pLayerCfg.Backcolor.Blue = 0;
 8001802:	f8ad 406c 	strh.w	r4, [sp, #108]	; 0x6c
  pLayerCfg.Backcolor.Red = 0;
 8001806:	f88d 406e 	strb.w	r4, [sp, #110]	; 0x6e
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 800180a:	f008 f8b1 	bl	8009970 <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 800180e:	4b46      	ldr	r3, [pc, #280]	; (8001928 <main+0x4a8>)
 8001810:	602b      	str	r3, [r5, #0]
  LcdDrv->Init();
 8001812:	681b      	ldr	r3, [r3, #0]
 8001814:	4798      	blx	r3
  LcdDrv->DisplayOff();
 8001816:	682b      	ldr	r3, [r5, #0]
  hdma2d.Instance = DMA2D;
 8001818:	4d44      	ldr	r5, [pc, #272]	; (800192c <main+0x4ac>)
  LcdDrv->DisplayOff();
 800181a:	68db      	ldr	r3, [r3, #12]
 800181c:	4798      	blx	r3
  hdma2d.Instance = DMA2D;
 800181e:	4b44      	ldr	r3, [pc, #272]	; (8001930 <main+0x4b0>)
 8001820:	602b      	str	r3, [r5, #0]
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 8001822:	e9c5 470a 	strd	r4, r7, [r5, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8001826:	e9c5 440c 	strd	r4, r4, [r5, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 800182a:	4628      	mov	r0, r5
  hdma2d.Init.ColorMode = DMA2D_OUTPUT_RGB565;
 800182c:	e9c5 4701 	strd	r4, r7, [r5, #4]
  hdma2d.Init.OutputOffset = 0;
 8001830:	60ec      	str	r4, [r5, #12]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001832:	f006 f8f1 	bl	8007a18 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8001836:	4631      	mov	r1, r6
 8001838:	4628      	mov	r0, r5
 800183a:	f006 f9b3 	bl	8007ba4 <HAL_DMA2D_ConfigLayer>
  htim1.Init.Period = 65535;
 800183e:	f64f 76ff 	movw	r6, #65535	; 0xffff
  htim1.Instance = TIM1;
 8001842:	4b3c      	ldr	r3, [pc, #240]	; (8001934 <main+0x4b4>)
  htim3.Instance = TIM3;
 8001844:	4d3c      	ldr	r5, [pc, #240]	; (8001938 <main+0x4b8>)
  htim1.Instance = TIM1;
 8001846:	f8c8 3000 	str.w	r3, [r8]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 800184a:	4640      	mov	r0, r8
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 800184c:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8001850:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001854:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001858:	e9c8 4401 	strd	r4, r4, [r8, #4]
  htim1.Init.RepetitionCounter = 0;
 800185c:	e9c8 4404 	strd	r4, r4, [r8, #16]
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 8001860:	9413      	str	r4, [sp, #76]	; 0x4c
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001862:	f8c8 4018 	str.w	r4, [r8, #24]
  htim1.Init.Period = 65535;
 8001866:	f8c8 600c 	str.w	r6, [r8, #12]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 800186a:	f009 fa69 	bl	800ad40 <HAL_TIM_Base_Init>
  if (HAL_TIM_SlaveConfigSynchro(&htim1, &sSlaveConfig) != HAL_OK)
 800186e:	a90f      	add	r1, sp, #60	; 0x3c
 8001870:	4640      	mov	r0, r8
  sSlaveConfig.InputTrigger = TIM_TS_ITR0;
 8001872:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  if (HAL_TIM_SlaveConfigSynchro(&htim1, &sSlaveConfig) != HAL_OK)
 8001876:	f009 fbdd 	bl	800b034 <HAL_TIM_SlaveConfigSynchro>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 800187a:	a90b      	add	r1, sp, #44	; 0x2c
 800187c:	4640      	mov	r0, r8
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800187e:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8001882:	f009 fd15 	bl	800b2b0 <HAL_TIMEx_MasterConfigSynchronization>
  htim3.Instance = TIM3;
 8001886:	4b2d      	ldr	r3, [pc, #180]	; (800193c <main+0x4bc>)
 8001888:	602b      	str	r3, [r5, #0]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 800188a:	4628      	mov	r0, r5
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 800188c:	e9c5 4401 	strd	r4, r4, [r5, #4]
  htim3.Init.Period = 65535;
 8001890:	60ee      	str	r6, [r5, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001892:	612c      	str	r4, [r5, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001894:	61ac      	str	r4, [r5, #24]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001896:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 800189a:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 800189e:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 80018a2:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
 80018a6:	9413      	str	r4, [sp, #76]	; 0x4c
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80018a8:	9409      	str	r4, [sp, #36]	; 0x24
 80018aa:	940a      	str	r4, [sp, #40]	; 0x28
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 80018ac:	f009 fa48 	bl	800ad40 <HAL_TIM_Base_Init>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80018b0:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 80018b4:	a90b      	add	r1, sp, #44	; 0x2c
 80018b6:	4628      	mov	r0, r5
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80018b8:	930b      	str	r3, [sp, #44]	; 0x2c
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 80018ba:	f009 fb0b 	bl	800aed4 <HAL_TIM_ConfigClockSource>
  if (HAL_TIM_SlaveConfigSynchro(&htim3, &sSlaveConfig) != HAL_OK)
 80018be:	a90f      	add	r1, sp, #60	; 0x3c
 80018c0:	4628      	mov	r0, r5
  sSlaveConfig.InputTrigger = TIM_TS_ITR0;
 80018c2:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  if (HAL_TIM_SlaveConfigSynchro(&htim3, &sSlaveConfig) != HAL_OK)
 80018c6:	f009 fbb5 	bl	800b034 <HAL_TIM_SlaveConfigSynchro>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80018ca:	a909      	add	r1, sp, #36	; 0x24
 80018cc:	4628      	mov	r0, r5
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80018ce:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80018d2:	f009 fced 	bl	800b2b0 <HAL_TIMEx_MasterConfigSynchronization>
  MX_TouchGFX_Init();
 80018d6:	f7fe fe85 	bl	80005e4 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 80018da:	f7fe fe81 	bl	80005e0 <MX_TouchGFX_PreOSInit>
  osKernelInitialize();
 80018de:	f009 fdf9 	bl	800b4d4 <osKernelInitialize>
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 80018e2:	4a17      	ldr	r2, [pc, #92]	; (8001940 <main+0x4c0>)
 80018e4:	4639      	mov	r1, r7
 80018e6:	4658      	mov	r0, fp
 80018e8:	f009 ff2e 	bl	800b748 <osMessageQueueNew>
 80018ec:	4b15      	ldr	r3, [pc, #84]	; (8001944 <main+0x4c4>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 80018ee:	4a16      	ldr	r2, [pc, #88]	; (8001948 <main+0x4c8>)
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 80018f0:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 80018f2:	4621      	mov	r1, r4
 80018f4:	4815      	ldr	r0, [pc, #84]	; (800194c <main+0x4cc>)
 80018f6:	f009 fe19 	bl	800b52c <osThreadNew>
 80018fa:	4b15      	ldr	r3, [pc, #84]	; (8001950 <main+0x4d0>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80018fc:	4a15      	ldr	r2, [pc, #84]	; (8001954 <main+0x4d4>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 80018fe:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001900:	4621      	mov	r1, r4
 8001902:	4815      	ldr	r0, [pc, #84]	; (8001958 <main+0x4d8>)
 8001904:	f009 fe12 	bl	800b52c <osThreadNew>
 8001908:	4b14      	ldr	r3, [pc, #80]	; (800195c <main+0x4dc>)
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 800190a:	4a15      	ldr	r2, [pc, #84]	; (8001960 <main+0x4e0>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 800190c:	4605      	mov	r5, r0
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 800190e:	4621      	mov	r1, r4
 8001910:	4814      	ldr	r0, [pc, #80]	; (8001964 <main+0x4e4>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001912:	601d      	str	r5, [r3, #0]
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8001914:	f009 fe0a 	bl	800b52c <osThreadNew>
 8001918:	4b13      	ldr	r3, [pc, #76]	; (8001968 <main+0x4e8>)
 800191a:	6018      	str	r0, [r3, #0]
  osKernelStart();
 800191c:	f009 fdec 	bl	800b4f8 <osKernelStart>
  while (1)
 8001920:	e7fe      	b.n	8001920 <main+0x4a0>
 8001922:	bf00      	nop
 8001924:	2000261c 	.word	0x2000261c
 8001928:	20000018 	.word	0x20000018
 800192c:	20002634 	.word	0x20002634
 8001930:	4002b000 	.word	0x4002b000
 8001934:	40010000 	.word	0x40010000
 8001938:	20002844 	.word	0x20002844
 800193c:	40000400 	.word	0x40000400
 8001940:	08028954 	.word	0x08028954
 8001944:	20002620 	.word	0x20002620
 8001948:	08028990 	.word	0x08028990
 800194c:	08001389 	.word	0x08001389
 8001950:	20002628 	.word	0x20002628
 8001954:	08028930 	.word	0x08028930
 8001958:	080005f5 	.word	0x080005f5
 800195c:	20002618 	.word	0x20002618
 8001960:	0802896c 	.word	0x0802896c
 8001964:	08001395 	.word	0x08001395
 8001968:	20002624 	.word	0x20002624

0800196c <IOE_Init>:
 800196c:	4770      	bx	lr
 800196e:	bf00      	nop

08001970 <IOE_ITConfig>:
 8001970:	4770      	bx	lr
 8001972:	bf00      	nop

08001974 <IOE_Write>:
{
 8001974:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8001976:	4c09      	ldr	r4, [pc, #36]	; (800199c <IOE_Write+0x28>)
{
 8001978:	b086      	sub	sp, #24
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 800197a:	6824      	ldr	r4, [r4, #0]
 800197c:	9402      	str	r4, [sp, #8]
{
 800197e:	4614      	mov	r4, r2
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8001980:	2301      	movs	r3, #1
 8001982:	f88d 4017 	strb.w	r4, [sp, #23]
 8001986:	f10d 0417 	add.w	r4, sp, #23
 800198a:	460a      	mov	r2, r1
 800198c:	9301      	str	r3, [sp, #4]
 800198e:	4601      	mov	r1, r0
 8001990:	9400      	str	r4, [sp, #0]
 8001992:	4803      	ldr	r0, [pc, #12]	; (80019a0 <IOE_Write+0x2c>)
 8001994:	f006 fdce 	bl	8008534 <HAL_I2C_Mem_Write>
}
 8001998:	b006      	add	sp, #24
 800199a:	bd10      	pop	{r4, pc}
 800199c:	2000000c 	.word	0x2000000c
 80019a0:	20002674 	.word	0x20002674

080019a4 <IOE_Read>:
{
 80019a4:	b500      	push	{lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80019a6:	4b0b      	ldr	r3, [pc, #44]	; (80019d4 <IOE_Read+0x30>)
{
 80019a8:	b087      	sub	sp, #28
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80019aa:	681b      	ldr	r3, [r3, #0]
 80019ac:	9302      	str	r3, [sp, #8]
{
 80019ae:	4684      	mov	ip, r0
 80019b0:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80019b2:	2301      	movs	r3, #1
 80019b4:	f10d 0117 	add.w	r1, sp, #23
  uint8_t value = 0;
 80019b8:	2000      	movs	r0, #0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80019ba:	e9cd 1300 	strd	r1, r3, [sp]
  uint8_t value = 0;
 80019be:	f88d 0017 	strb.w	r0, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80019c2:	4661      	mov	r1, ip
 80019c4:	4804      	ldr	r0, [pc, #16]	; (80019d8 <IOE_Read+0x34>)
 80019c6:	f006 fea7 	bl	8008718 <HAL_I2C_Mem_Read>
}
 80019ca:	f89d 0017 	ldrb.w	r0, [sp, #23]
 80019ce:	b007      	add	sp, #28
 80019d0:	f85d fb04 	ldr.w	pc, [sp], #4
 80019d4:	2000000c 	.word	0x2000000c
 80019d8:	20002674 	.word	0x20002674

080019dc <IOE_ReadMultiple>:
{
 80019dc:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 80019de:	4c09      	ldr	r4, [pc, #36]	; (8001a04 <IOE_ReadMultiple+0x28>)
{
 80019e0:	b084      	sub	sp, #16
 80019e2:	4684      	mov	ip, r0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 80019e4:	6820      	ldr	r0, [r4, #0]
 80019e6:	9002      	str	r0, [sp, #8]
 80019e8:	e9cd 2300 	strd	r2, r3, [sp]
 80019ec:	4806      	ldr	r0, [pc, #24]	; (8001a08 <IOE_ReadMultiple+0x2c>)
 80019ee:	460a      	mov	r2, r1
 80019f0:	2301      	movs	r3, #1
 80019f2:	4661      	mov	r1, ip
 80019f4:	f006 fe90 	bl	8008718 <HAL_I2C_Mem_Read>
}
 80019f8:	3800      	subs	r0, #0
 80019fa:	bf18      	it	ne
 80019fc:	2001      	movne	r0, #1
 80019fe:	b004      	add	sp, #16
 8001a00:	bd10      	pop	{r4, pc}
 8001a02:	bf00      	nop
 8001a04:	2000000c 	.word	0x2000000c
 8001a08:	20002674 	.word	0x20002674

08001a0c <IOE_Delay>:
 8001a0c:	f005 bf6a 	b.w	80078e4 <HAL_Delay>

08001a10 <LCD_IO_Init>:
{
 8001a10:	b508      	push	{r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a12:	4806      	ldr	r0, [pc, #24]	; (8001a2c <LCD_IO_Init+0x1c>)
 8001a14:	2200      	movs	r2, #0
 8001a16:	2104      	movs	r1, #4
 8001a18:	f006 fa5e 	bl	8007ed8 <HAL_GPIO_WritePin>
}
 8001a1c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a20:	4802      	ldr	r0, [pc, #8]	; (8001a2c <LCD_IO_Init+0x1c>)
 8001a22:	2201      	movs	r2, #1
 8001a24:	2104      	movs	r1, #4
 8001a26:	f006 ba57 	b.w	8007ed8 <HAL_GPIO_WritePin>
 8001a2a:	bf00      	nop
 8001a2c:	40020800 	.word	0x40020800

08001a30 <LCD_IO_WriteData>:
{
 8001a30:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a32:	4d10      	ldr	r5, [pc, #64]	; (8001a74 <LCD_IO_WriteData+0x44>)
{
 8001a34:	b083      	sub	sp, #12
 8001a36:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001a38:	2201      	movs	r2, #1
 8001a3a:	480f      	ldr	r0, [pc, #60]	; (8001a78 <LCD_IO_WriteData+0x48>)
 8001a3c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001a40:	f006 fa4a 	bl	8007ed8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a44:	4628      	mov	r0, r5
 8001a46:	2200      	movs	r2, #0
 8001a48:	2104      	movs	r1, #4
 8001a4a:	f006 fa45 	bl	8007ed8 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001a4e:	4b0b      	ldr	r3, [pc, #44]	; (8001a7c <LCD_IO_WriteData+0x4c>)
 8001a50:	480b      	ldr	r0, [pc, #44]	; (8001a80 <LCD_IO_WriteData+0x50>)
 8001a52:	681b      	ldr	r3, [r3, #0]
 8001a54:	f8ad 4006 	strh.w	r4, [sp, #6]
 8001a58:	f10d 0106 	add.w	r1, sp, #6
 8001a5c:	2201      	movs	r2, #1
 8001a5e:	f008 fde1 	bl	800a624 <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a62:	2201      	movs	r2, #1
 8001a64:	2104      	movs	r1, #4
 8001a66:	4628      	mov	r0, r5
}
 8001a68:	b003      	add	sp, #12
 8001a6a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a6e:	f006 ba33 	b.w	8007ed8 <HAL_GPIO_WritePin>
 8001a72:	bf00      	nop
 8001a74:	40020800 	.word	0x40020800
 8001a78:	40020c00 	.word	0x40020c00
 8001a7c:	20000010 	.word	0x20000010
 8001a80:	200027a4 	.word	0x200027a4

08001a84 <LCD_IO_WriteReg>:
{
 8001a84:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a86:	4d10      	ldr	r5, [pc, #64]	; (8001ac8 <LCD_IO_WriteReg+0x44>)
{
 8001a88:	b083      	sub	sp, #12
 8001a8a:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001a8c:	2200      	movs	r2, #0
 8001a8e:	480f      	ldr	r0, [pc, #60]	; (8001acc <LCD_IO_WriteReg+0x48>)
 8001a90:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001a94:	f006 fa20 	bl	8007ed8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a98:	4628      	mov	r0, r5
 8001a9a:	2200      	movs	r2, #0
 8001a9c:	2104      	movs	r1, #4
 8001a9e:	f006 fa1b 	bl	8007ed8 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001aa2:	4b0b      	ldr	r3, [pc, #44]	; (8001ad0 <LCD_IO_WriteReg+0x4c>)
 8001aa4:	480b      	ldr	r0, [pc, #44]	; (8001ad4 <LCD_IO_WriteReg+0x50>)
 8001aa6:	681b      	ldr	r3, [r3, #0]
  SPI5_Write(Reg);
 8001aa8:	f8ad 4006 	strh.w	r4, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001aac:	f10d 0106 	add.w	r1, sp, #6
 8001ab0:	2201      	movs	r2, #1
 8001ab2:	f008 fdb7 	bl	800a624 <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001ab6:	2201      	movs	r2, #1
 8001ab8:	2104      	movs	r1, #4
 8001aba:	4628      	mov	r0, r5
}
 8001abc:	b003      	add	sp, #12
 8001abe:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001ac2:	f006 ba09 	b.w	8007ed8 <HAL_GPIO_WritePin>
 8001ac6:	bf00      	nop
 8001ac8:	40020800 	.word	0x40020800
 8001acc:	40020c00 	.word	0x40020c00
 8001ad0:	20000010 	.word	0x20000010
 8001ad4:	200027a4 	.word	0x200027a4

08001ad8 <LCD_IO_ReadData>:
{
 8001ad8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001adc:	4e19      	ldr	r6, [pc, #100]	; (8001b44 <LCD_IO_ReadData+0x6c>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001ade:	4f1a      	ldr	r7, [pc, #104]	; (8001b48 <LCD_IO_ReadData+0x70>)
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001ae0:	f8df 9068 	ldr.w	r9, [pc, #104]	; 8001b4c <LCD_IO_ReadData+0x74>
 8001ae4:	f8df 8068 	ldr.w	r8, [pc, #104]	; 8001b50 <LCD_IO_ReadData+0x78>
{
 8001ae8:	b083      	sub	sp, #12
 8001aea:	460c      	mov	r4, r1
 8001aec:	4605      	mov	r5, r0
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001aee:	2200      	movs	r2, #0
 8001af0:	4630      	mov	r0, r6
 8001af2:	2104      	movs	r1, #4
 8001af4:	f006 f9f0 	bl	8007ed8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001af8:	4638      	mov	r0, r7
 8001afa:	2200      	movs	r2, #0
 8001afc:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001b00:	f006 f9ea 	bl	8007ed8 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001b04:	f8d9 3000 	ldr.w	r3, [r9]
 8001b08:	f8ad 5004 	strh.w	r5, [sp, #4]
 8001b0c:	a901      	add	r1, sp, #4
 8001b0e:	2201      	movs	r2, #1
 8001b10:	4640      	mov	r0, r8
 8001b12:	f008 fd87 	bl	800a624 <HAL_SPI_Transmit>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 8001b16:	f8d9 3000 	ldr.w	r3, [r9]
 8001b1a:	4622      	mov	r2, r4
 8001b1c:	a901      	add	r1, sp, #4
 8001b1e:	4640      	mov	r0, r8
 8001b20:	f009 f828 	bl	800ab74 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001b24:	4638      	mov	r0, r7
 8001b26:	2201      	movs	r2, #1
 8001b28:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 8001b2c:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001b2e:	f006 f9d3 	bl	8007ed8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001b32:	4630      	mov	r0, r6
 8001b34:	2201      	movs	r2, #1
 8001b36:	2104      	movs	r1, #4
 8001b38:	f006 f9ce 	bl	8007ed8 <HAL_GPIO_WritePin>
}
 8001b3c:	4620      	mov	r0, r4
 8001b3e:	b003      	add	sp, #12
 8001b40:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001b44:	40020800 	.word	0x40020800
 8001b48:	40020c00 	.word	0x40020c00
 8001b4c:	20000010 	.word	0x20000010
 8001b50:	200027a4 	.word	0x200027a4

08001b54 <LCD_Delay>:
  HAL_Delay(Delay);
 8001b54:	f005 bec6 	b.w	80078e4 <HAL_Delay>

08001b58 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8001b58:	4b03      	ldr	r3, [pc, #12]	; (8001b68 <HAL_TIM_PeriodElapsedCallback+0x10>)
 8001b5a:	6802      	ldr	r2, [r0, #0]
 8001b5c:	429a      	cmp	r2, r3
 8001b5e:	d000      	beq.n	8001b62 <HAL_TIM_PeriodElapsedCallback+0xa>
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8001b60:	4770      	bx	lr
    HAL_IncTick();
 8001b62:	f005 bead 	b.w	80078c0 <HAL_IncTick>
 8001b66:	bf00      	nop
 8001b68:	40001000 	.word	0x40001000

08001b6c <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8001b6c:	4770      	bx	lr
 8001b6e:	bf00      	nop

08001b70 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001b70:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001b72:	4b0e      	ldr	r3, [pc, #56]	; (8001bac <HAL_MspInit+0x3c>)
 8001b74:	2200      	movs	r2, #0
 8001b76:	9200      	str	r2, [sp, #0]
 8001b78:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001b7a:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8001b7e:	6459      	str	r1, [r3, #68]	; 0x44
 8001b80:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8001b82:	f400 4080 	and.w	r0, r0, #16384	; 0x4000
 8001b86:	9000      	str	r0, [sp, #0]
 8001b88:	9800      	ldr	r0, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001b8a:	9201      	str	r2, [sp, #4]
 8001b8c:	6c18      	ldr	r0, [r3, #64]	; 0x40
 8001b8e:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 8001b92:	6418      	str	r0, [r3, #64]	; 0x40
 8001b94:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001b96:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001b9a:	9301      	str	r3, [sp, #4]
 8001b9c:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001b9e:	210f      	movs	r1, #15
 8001ba0:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001ba4:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001ba6:	f005 bec1 	b.w	800792c <HAL_NVIC_SetPriority>
 8001baa:	bf00      	nop
 8001bac:	40023800 	.word	0x40023800

08001bb0 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8001bb0:	4b0b      	ldr	r3, [pc, #44]	; (8001be0 <HAL_CRC_MspInit+0x30>)
 8001bb2:	6802      	ldr	r2, [r0, #0]
 8001bb4:	429a      	cmp	r2, r3
 8001bb6:	d000      	beq.n	8001bba <HAL_CRC_MspInit+0xa>
 8001bb8:	4770      	bx	lr
{
 8001bba:	b082      	sub	sp, #8
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001bbc:	2200      	movs	r2, #0
 8001bbe:	9201      	str	r2, [sp, #4]
 8001bc0:	f8d3 2830 	ldr.w	r2, [r3, #2096]	; 0x830
 8001bc4:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001bc8:	f8c3 2830 	str.w	r2, [r3, #2096]	; 0x830
 8001bcc:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8001bd0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001bd2:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001bd6:	9301      	str	r3, [sp, #4]
 8001bd8:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8001bda:	b002      	add	sp, #8
 8001bdc:	4770      	bx	lr
 8001bde:	bf00      	nop
 8001be0:	40023000 	.word	0x40023000

08001be4 <HAL_DMA2D_MspInit>:
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
  if(hdma2d->Instance==DMA2D)
 8001be4:	4b0e      	ldr	r3, [pc, #56]	; (8001c20 <HAL_DMA2D_MspInit+0x3c>)
 8001be6:	6802      	ldr	r2, [r0, #0]
 8001be8:	429a      	cmp	r2, r3
 8001bea:	d000      	beq.n	8001bee <HAL_DMA2D_MspInit+0xa>
 8001bec:	4770      	bx	lr
{
 8001bee:	b500      	push	{lr}
 8001bf0:	b083      	sub	sp, #12
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001bf2:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 8001bf6:	2200      	movs	r2, #0
 8001bf8:	9201      	str	r2, [sp, #4]
 8001bfa:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001bfc:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8001c00:	6319      	str	r1, [r3, #48]	; 0x30
 8001c02:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c04:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001c08:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001c0a:	205a      	movs	r0, #90	; 0x5a
 8001c0c:	2105      	movs	r1, #5
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001c0e:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001c10:	f005 fe8c 	bl	800792c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001c14:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8001c16:	b003      	add	sp, #12
 8001c18:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001c1c:	f005 bec4 	b.w	80079a8 <HAL_NVIC_EnableIRQ>
 8001c20:	4002b000 	.word	0x4002b000

08001c24 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001c24:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hi2c->Instance==I2C3)
 8001c28:	4b2e      	ldr	r3, [pc, #184]	; (8001ce4 <HAL_I2C_MspInit+0xc0>)
 8001c2a:	6802      	ldr	r2, [r0, #0]
{
 8001c2c:	b08a      	sub	sp, #40	; 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001c2e:	2400      	movs	r4, #0
  if(hi2c->Instance==I2C3)
 8001c30:	429a      	cmp	r2, r3
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001c32:	e9cd 4404 	strd	r4, r4, [sp, #16]
 8001c36:	e9cd 4406 	strd	r4, r4, [sp, #24]
 8001c3a:	9408      	str	r4, [sp, #32]
  if(hi2c->Instance==I2C3)
 8001c3c:	d002      	beq.n	8001c44 <HAL_I2C_MspInit+0x20>
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 8001c3e:	b00a      	add	sp, #40	; 0x28
 8001c40:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001c44:	4d28      	ldr	r5, [pc, #160]	; (8001ce8 <HAL_I2C_MspInit+0xc4>)
 8001c46:	9401      	str	r4, [sp, #4]
 8001c48:	6b2b      	ldr	r3, [r5, #48]	; 0x30
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001c4a:	4828      	ldr	r0, [pc, #160]	; (8001cec <HAL_I2C_MspInit+0xc8>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001c4c:	f043 0304 	orr.w	r3, r3, #4
 8001c50:	632b      	str	r3, [r5, #48]	; 0x30
 8001c52:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001c54:	f003 0304 	and.w	r3, r3, #4
 8001c58:	9301      	str	r3, [sp, #4]
 8001c5a:	9b01      	ldr	r3, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001c5c:	9402      	str	r4, [sp, #8]
 8001c5e:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001c60:	f043 0301 	orr.w	r3, r3, #1
 8001c64:	632b      	str	r3, [r5, #48]	; 0x30
 8001c66:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001c68:	f003 0301 	and.w	r3, r3, #1
 8001c6c:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8001c6e:	f44f 7200 	mov.w	r2, #512	; 0x200
 8001c72:	f04f 0801 	mov.w	r8, #1
 8001c76:	f04f 0903 	mov.w	r9, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001c7a:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001c7c:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8001c7e:	2312      	movs	r3, #18
 8001c80:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8001c84:	e9cd 8906 	strd	r8, r9, [sp, #24]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001c88:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001c8a:	9608      	str	r6, [sp, #32]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001c8c:	f005 ffe0 	bl	8007c50 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001c90:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001c92:	f44f 7280 	mov.w	r2, #256	; 0x100
 8001c96:	2312      	movs	r3, #18
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001c98:	4815      	ldr	r0, [pc, #84]	; (8001cf0 <HAL_I2C_MspInit+0xcc>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001c9a:	9608      	str	r6, [sp, #32]
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001c9c:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8001ca0:	e9cd 8906 	strd	r8, r9, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001ca4:	f005 ffd4 	bl	8007c50 <HAL_GPIO_Init>
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001ca8:	9403      	str	r4, [sp, #12]
 8001caa:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8001cac:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001cb0:	642b      	str	r3, [r5, #64]	; 0x40
 8001cb2:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8001cb4:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001cb8:	4622      	mov	r2, r4
 8001cba:	2105      	movs	r1, #5
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001cbc:	9303      	str	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001cbe:	2048      	movs	r0, #72	; 0x48
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001cc0:	9b03      	ldr	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001cc2:	f005 fe33 	bl	800792c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(I2C3_EV_IRQn);
 8001cc6:	2048      	movs	r0, #72	; 0x48
 8001cc8:	f005 fe6e 	bl	80079a8 <HAL_NVIC_EnableIRQ>
    __HAL_RCC_I2C3_FORCE_RESET();
 8001ccc:	6a2b      	ldr	r3, [r5, #32]
 8001cce:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001cd2:	622b      	str	r3, [r5, #32]
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8001cd4:	6a2b      	ldr	r3, [r5, #32]
 8001cd6:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8001cda:	622b      	str	r3, [r5, #32]
}
 8001cdc:	b00a      	add	sp, #40	; 0x28
 8001cde:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 8001ce2:	bf00      	nop
 8001ce4:	40005c00 	.word	0x40005c00
 8001ce8:	40023800 	.word	0x40023800
 8001cec:	40020800 	.word	0x40020800
 8001cf0:	40020000 	.word	0x40020000

08001cf4 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001cf4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001cf8:	4604      	mov	r4, r0
 8001cfa:	b09a      	sub	sp, #104	; 0x68
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001cfc:	2100      	movs	r1, #0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001cfe:	2230      	movs	r2, #48	; 0x30
 8001d00:	a80e      	add	r0, sp, #56	; 0x38
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001d02:	e9cd 1108 	strd	r1, r1, [sp, #32]
 8001d06:	e9cd 110a 	strd	r1, r1, [sp, #40]	; 0x28
 8001d0a:	910c      	str	r1, [sp, #48]	; 0x30
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001d0c:	f025 fbb5 	bl	802747a <memset>
  if(hltdc->Instance==LTDC)
 8001d10:	4b67      	ldr	r3, [pc, #412]	; (8001eb0 <HAL_LTDC_MspInit+0x1bc>)
 8001d12:	6822      	ldr	r2, [r4, #0]
 8001d14:	429a      	cmp	r2, r3
 8001d16:	d002      	beq.n	8001d1e <HAL_LTDC_MspInit+0x2a>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001d18:	b01a      	add	sp, #104	; 0x68
 8001d1a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8001d1e:	23c0      	movs	r3, #192	; 0xc0
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001d20:	2108      	movs	r1, #8
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 8001d22:	2204      	movs	r2, #4
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8001d24:	9312      	str	r3, [sp, #72]	; 0x48
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001d26:	a80e      	add	r0, sp, #56	; 0x38
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001d28:	f44f 3300 	mov.w	r3, #131072	; 0x20000
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001d2c:	910e      	str	r1, [sp, #56]	; 0x38
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 8001d2e:	9214      	str	r2, [sp, #80]	; 0x50
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001d30:	9317      	str	r3, [sp, #92]	; 0x5c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001d32:	f008 f9f7 	bl	800a124 <HAL_RCCEx_PeriphCLKConfig>
 8001d36:	2800      	cmp	r0, #0
 8001d38:	f040 80b7 	bne.w	8001eaa <HAL_LTDC_MspInit+0x1b6>
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001d3c:	4b5d      	ldr	r3, [pc, #372]	; (8001eb4 <HAL_LTDC_MspInit+0x1c0>)
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d3e:	485e      	ldr	r0, [pc, #376]	; (8001eb8 <HAL_LTDC_MspInit+0x1c4>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001d40:	2400      	movs	r4, #0
 8001d42:	9401      	str	r4, [sp, #4]
 8001d44:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001d46:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001d4a:	645a      	str	r2, [r3, #68]	; 0x44
 8001d4c:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001d4e:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 8001d52:	9201      	str	r2, [sp, #4]
 8001d54:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001d56:	9402      	str	r4, [sp, #8]
 8001d58:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d5a:	f042 0220 	orr.w	r2, r2, #32
 8001d5e:	631a      	str	r2, [r3, #48]	; 0x30
 8001d60:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d62:	f002 0220 	and.w	r2, r2, #32
 8001d66:	9202      	str	r2, [sp, #8]
 8001d68:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001d6a:	9403      	str	r4, [sp, #12]
 8001d6c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d6e:	f042 0201 	orr.w	r2, r2, #1
 8001d72:	631a      	str	r2, [r3, #48]	; 0x30
 8001d74:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d76:	f002 0201 	and.w	r2, r2, #1
 8001d7a:	9203      	str	r2, [sp, #12]
 8001d7c:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001d7e:	9404      	str	r4, [sp, #16]
 8001d80:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d82:	f042 0202 	orr.w	r2, r2, #2
 8001d86:	631a      	str	r2, [r3, #48]	; 0x30
 8001d88:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d8a:	f002 0202 	and.w	r2, r2, #2
 8001d8e:	9204      	str	r2, [sp, #16]
 8001d90:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8001d92:	9405      	str	r4, [sp, #20]
 8001d94:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d96:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001d9a:	631a      	str	r2, [r3, #48]	; 0x30
 8001d9c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d9e:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001da2:	9205      	str	r2, [sp, #20]
 8001da4:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001da6:	9406      	str	r4, [sp, #24]
 8001da8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001daa:	f042 0204 	orr.w	r2, r2, #4
 8001dae:	631a      	str	r2, [r3, #48]	; 0x30
 8001db0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001db2:	f002 0204 	and.w	r2, r2, #4
 8001db6:	9206      	str	r2, [sp, #24]
 8001db8:	9a06      	ldr	r2, [sp, #24]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001dba:	9407      	str	r4, [sp, #28]
 8001dbc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001dbe:	f042 0208 	orr.w	r2, r2, #8
 8001dc2:	631a      	str	r2, [r3, #48]	; 0x30
 8001dc4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001dc6:	f003 0308 	and.w	r3, r3, #8
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8001dca:	2600      	movs	r6, #0
 8001dcc:	2702      	movs	r7, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001dce:	250e      	movs	r5, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001dd0:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001dd2:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8001dd4:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8001dd8:	2302      	movs	r3, #2
 8001dda:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001dde:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001de2:	9b07      	ldr	r3, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001de4:	950c      	str	r5, [sp, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001de6:	f005 ff33 	bl	8007c50 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001dea:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001dec:	f641 0258 	movw	r2, #6232	; 0x1858
 8001df0:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001df2:	4832      	ldr	r0, [pc, #200]	; (8001ebc <HAL_LTDC_MspInit+0x1c8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001df4:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001df6:	e9cd 2308 	strd	r2, r3, [sp, #32]
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001dfa:	f04f 0809 	mov.w	r8, #9
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001dfe:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001e02:	f005 ff25 	bl	8007c50 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e06:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8001e08:	2203      	movs	r2, #3
 8001e0a:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e0c:	482c      	ldr	r0, [pc, #176]	; (8001ec0 <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001e0e:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8001e12:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001e16:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e1a:	f005 ff19 	bl	8007c50 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e1e:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8001e20:	f44f 6270 	mov.w	r2, #3840	; 0xf00
 8001e24:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e26:	4826      	ldr	r0, [pc, #152]	; (8001ec0 <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001e28:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8001e2a:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001e2e:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e32:	f005 ff0d 	bl	8007c50 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e36:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8001e38:	f44f 620c 	mov.w	r2, #2240	; 0x8c0
 8001e3c:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e3e:	4821      	ldr	r0, [pc, #132]	; (8001ec4 <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001e40:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8001e42:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001e46:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e4a:	f005 ff01 	bl	8007c50 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e4e:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001e50:	22c0      	movs	r2, #192	; 0xc0
 8001e52:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e54:	481c      	ldr	r0, [pc, #112]	; (8001ec8 <HAL_LTDC_MspInit+0x1d4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001e56:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001e58:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001e5c:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e60:	f005 fef6 	bl	8007c50 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001e64:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001e66:	2208      	movs	r2, #8
 8001e68:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001e6a:	4818      	ldr	r0, [pc, #96]	; (8001ecc <HAL_LTDC_MspInit+0x1d8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001e6c:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001e6e:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001e72:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001e76:	f005 feeb 	bl	8007c50 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001e7a:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e7c:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001e7e:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e82:	4810      	ldr	r0, [pc, #64]	; (8001ec4 <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001e84:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001e88:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001e8c:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e90:	f005 fede 	bl	8007c50 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001e94:	4622      	mov	r2, r4
 8001e96:	2105      	movs	r1, #5
 8001e98:	2058      	movs	r0, #88	; 0x58
 8001e9a:	f005 fd47 	bl	800792c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001e9e:	2058      	movs	r0, #88	; 0x58
 8001ea0:	f005 fd82 	bl	80079a8 <HAL_NVIC_EnableIRQ>
}
 8001ea4:	b01a      	add	sp, #104	; 0x68
 8001ea6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      Error_Handler();
 8001eaa:	f7ff fe5f 	bl	8001b6c <Error_Handler>
 8001eae:	e745      	b.n	8001d3c <HAL_LTDC_MspInit+0x48>
 8001eb0:	40016800 	.word	0x40016800
 8001eb4:	40023800 	.word	0x40023800
 8001eb8:	40021400 	.word	0x40021400
 8001ebc:	40020000 	.word	0x40020000
 8001ec0:	40020400 	.word	0x40020400
 8001ec4:	40021800 	.word	0x40021800
 8001ec8:	40020800 	.word	0x40020800
 8001ecc:	40020c00 	.word	0x40020c00

08001ed0 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8001ed0:	b510      	push	{r4, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hspi->Instance==SPI5)
 8001ed2:	4a1b      	ldr	r2, [pc, #108]	; (8001f40 <HAL_SPI_MspInit+0x70>)
 8001ed4:	6801      	ldr	r1, [r0, #0]
{
 8001ed6:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001ed8:	2300      	movs	r3, #0
  if(hspi->Instance==SPI5)
 8001eda:	4291      	cmp	r1, r2
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001edc:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8001ee0:	e9cd 3304 	strd	r3, r3, [sp, #16]
 8001ee4:	9306      	str	r3, [sp, #24]
  if(hspi->Instance==SPI5)
 8001ee6:	d001      	beq.n	8001eec <HAL_SPI_MspInit+0x1c>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8001ee8:	b008      	add	sp, #32
 8001eea:	bd10      	pop	{r4, pc}
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001eec:	f502 4268 	add.w	r2, r2, #59392	; 0xe800
 8001ef0:	9300      	str	r3, [sp, #0]
 8001ef2:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8001ef4:	f440 1080 	orr.w	r0, r0, #1048576	; 0x100000
 8001ef8:	6450      	str	r0, [r2, #68]	; 0x44
 8001efa:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8001efc:	f400 1080 	and.w	r0, r0, #1048576	; 0x100000
 8001f00:	9000      	str	r0, [sp, #0]
 8001f02:	9800      	ldr	r0, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001f04:	9301      	str	r3, [sp, #4]
 8001f06:	6b13      	ldr	r3, [r2, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001f08:	480e      	ldr	r0, [pc, #56]	; (8001f44 <HAL_SPI_MspInit+0x74>)
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001f0a:	f043 0320 	orr.w	r3, r3, #32
 8001f0e:	6313      	str	r3, [r2, #48]	; 0x30
 8001f10:	6b13      	ldr	r3, [r2, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 8001f12:	ed9f 7b09 	vldr	d7, [pc, #36]	; 8001f38 <HAL_SPI_MspInit+0x68>
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001f16:	f003 0320 	and.w	r3, r3, #32
 8001f1a:	9301      	str	r3, [sp, #4]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001f1c:	2203      	movs	r2, #3
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001f1e:	2305      	movs	r3, #5
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001f20:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 8001f22:	ed8d 7b02 	vstr	d7, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001f26:	e9cd 2305 	strd	r2, r3, [sp, #20]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001f2a:	9c01      	ldr	r4, [sp, #4]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001f2c:	f005 fe90 	bl	8007c50 <HAL_GPIO_Init>
}
 8001f30:	b008      	add	sp, #32
 8001f32:	bd10      	pop	{r4, pc}
 8001f34:	f3af 8000 	nop.w
 8001f38:	00000380 	.word	0x00000380
 8001f3c:	00000002 	.word	0x00000002
 8001f40:	40015000 	.word	0x40015000
 8001f44:	40021400 	.word	0x40021400

08001f48 <HAL_TIM_Base_MspInit>:
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
  if(htim_base->Instance==TIM1)
 8001f48:	4a12      	ldr	r2, [pc, #72]	; (8001f94 <HAL_TIM_Base_MspInit+0x4c>)
 8001f4a:	6803      	ldr	r3, [r0, #0]
 8001f4c:	4293      	cmp	r3, r2
{
 8001f4e:	b082      	sub	sp, #8
  if(htim_base->Instance==TIM1)
 8001f50:	d012      	beq.n	8001f78 <HAL_TIM_Base_MspInit+0x30>
    __HAL_RCC_TIM1_CLK_ENABLE();
  /* USER CODE BEGIN TIM1_MspInit 1 */

  /* USER CODE END TIM1_MspInit 1 */
  }
  else if(htim_base->Instance==TIM3)
 8001f52:	4a11      	ldr	r2, [pc, #68]	; (8001f98 <HAL_TIM_Base_MspInit+0x50>)
 8001f54:	4293      	cmp	r3, r2
 8001f56:	d001      	beq.n	8001f5c <HAL_TIM_Base_MspInit+0x14>
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }

}
 8001f58:	b002      	add	sp, #8
 8001f5a:	4770      	bx	lr
    __HAL_RCC_TIM3_CLK_ENABLE();
 8001f5c:	4b0f      	ldr	r3, [pc, #60]	; (8001f9c <HAL_TIM_Base_MspInit+0x54>)
 8001f5e:	2200      	movs	r2, #0
 8001f60:	9201      	str	r2, [sp, #4]
 8001f62:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001f64:	f042 0202 	orr.w	r2, r2, #2
 8001f68:	641a      	str	r2, [r3, #64]	; 0x40
 8001f6a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001f6c:	f003 0302 	and.w	r3, r3, #2
 8001f70:	9301      	str	r3, [sp, #4]
 8001f72:	9b01      	ldr	r3, [sp, #4]
}
 8001f74:	b002      	add	sp, #8
 8001f76:	4770      	bx	lr
    __HAL_RCC_TIM1_CLK_ENABLE();
 8001f78:	4b08      	ldr	r3, [pc, #32]	; (8001f9c <HAL_TIM_Base_MspInit+0x54>)
 8001f7a:	2200      	movs	r2, #0
 8001f7c:	9200      	str	r2, [sp, #0]
 8001f7e:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001f80:	f042 0201 	orr.w	r2, r2, #1
 8001f84:	645a      	str	r2, [r3, #68]	; 0x44
 8001f86:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001f88:	f003 0301 	and.w	r3, r3, #1
 8001f8c:	9300      	str	r3, [sp, #0]
 8001f8e:	9b00      	ldr	r3, [sp, #0]
}
 8001f90:	b002      	add	sp, #8
 8001f92:	4770      	bx	lr
 8001f94:	40010000 	.word	0x40010000
 8001f98:	40000400 	.word	0x40000400
 8001f9c:	40023800 	.word	0x40023800

08001fa0 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001fa0:	b5f0      	push	{r4, r5, r6, r7, lr}
  if (FMC_Initialized) {
 8001fa2:	4b2b      	ldr	r3, [pc, #172]	; (8002050 <HAL_SDRAM_MspInit+0xb0>)
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001fa4:	b089      	sub	sp, #36	; 0x24
  if (FMC_Initialized) {
 8001fa6:	681c      	ldr	r4, [r3, #0]
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8001fa8:	2200      	movs	r2, #0
 8001faa:	9204      	str	r2, [sp, #16]
  if (FMC_Initialized) {
 8001fac:	2c00      	cmp	r4, #0
 8001fae:	d14c      	bne.n	800204a <HAL_SDRAM_MspInit+0xaa>
  FMC_Initialized = 1;
 8001fb0:	2701      	movs	r7, #1
  __HAL_RCC_FMC_CLK_ENABLE();
 8001fb2:	4a28      	ldr	r2, [pc, #160]	; (8002054 <HAL_SDRAM_MspInit+0xb4>)
 8001fb4:	9401      	str	r4, [sp, #4]
  FMC_Initialized = 1;
 8001fb6:	601f      	str	r7, [r3, #0]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001fb8:	6b93      	ldr	r3, [r2, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001fba:	4827      	ldr	r0, [pc, #156]	; (8002058 <HAL_SDRAM_MspInit+0xb8>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8001fbc:	433b      	orrs	r3, r7
 8001fbe:	6393      	str	r3, [r2, #56]	; 0x38
 8001fc0:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8001fc2:	403b      	ands	r3, r7
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001fc4:	2603      	movs	r6, #3
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001fc6:	250c      	movs	r5, #12
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8001fc8:	f64f 023f 	movw	r2, #63551	; 0xf83f
  __HAL_RCC_FMC_CLK_ENABLE();
 8001fcc:	9301      	str	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001fce:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8001fd0:	2302      	movs	r3, #2
 8001fd2:	e9cd 2302 	strd	r2, r3, [sp, #8]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001fd6:	e9cd 6505 	strd	r6, r5, [sp, #20]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001fda:	9b01      	ldr	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001fdc:	f005 fe38 	bl	8007c50 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001fe0:	481e      	ldr	r0, [pc, #120]	; (800205c <HAL_SDRAM_MspInit+0xbc>)
  GPIO_InitStruct.Pin = GPIO_PIN_0;
 8001fe2:	9702      	str	r7, [sp, #8]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001fe4:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001fe6:	2702      	movs	r7, #2
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001fe8:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001fec:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001ff0:	f005 fe2e 	bl	8007c50 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8001ff4:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001ff8:	4819      	ldr	r0, [pc, #100]	; (8002060 <HAL_SDRAM_MspInit+0xc0>)
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8001ffa:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001ffc:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001ffe:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002002:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002006:	f005 fe23 	bl	8007c50 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 800200a:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800200e:	4815      	ldr	r0, [pc, #84]	; (8002064 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8002010:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002012:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002014:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002018:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800201c:	f005 fe18 	bl	8007c50 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8002020:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002024:	4810      	ldr	r0, [pc, #64]	; (8002068 <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8002026:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002028:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800202a:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800202e:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002032:	f005 fe0d 	bl	8007c50 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8002036:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002038:	480c      	ldr	r0, [pc, #48]	; (800206c <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800203a:	9703      	str	r7, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800203c:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800203e:	e9cd 4604 	strd	r4, r6, [sp, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002042:	9506      	str	r5, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8002044:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002046:	f005 fe03 	bl	8007c50 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 800204a:	b009      	add	sp, #36	; 0x24
 800204c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800204e:	bf00      	nop
 8002050:	2000288c 	.word	0x2000288c
 8002054:	40023800 	.word	0x40023800
 8002058:	40021400 	.word	0x40021400
 800205c:	40020800 	.word	0x40020800
 8002060:	40021800 	.word	0x40021800
 8002064:	40021000 	.word	0x40021000
 8002068:	40020c00 	.word	0x40020c00
 800206c:	40020400 	.word	0x40020400

08002070 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8002070:	b570      	push	{r4, r5, r6, lr}
 8002072:	b088      	sub	sp, #32
  uint32_t              uwPrescalerValue = 0U;
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8002074:	4b23      	ldr	r3, [pc, #140]	; (8002104 <HAL_InitTick+0x94>)
 8002076:	2200      	movs	r2, #0
 8002078:	9202      	str	r2, [sp, #8]
 800207a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800207c:	f042 0210 	orr.w	r2, r2, #16
 8002080:	641a      	str	r2, [r3, #64]	; 0x40
 8002082:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002084:	f003 0310 	and.w	r3, r3, #16
 8002088:	9302      	str	r3, [sp, #8]
{
 800208a:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 800208c:	a901      	add	r1, sp, #4
 800208e:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8002090:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8002092:	f008 f825 	bl	800a0e0 <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 8002096:	9b06      	ldr	r3, [sp, #24]
 8002098:	b9d3      	cbnz	r3, 80020d0 <HAL_InitTick+0x60>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 800209a:	f008 f811 	bl	800a0c0 <HAL_RCC_GetPCLK1Freq>
 800209e:	4603      	mov	r3, r0
  {
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
  }

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 80020a0:	4a19      	ldr	r2, [pc, #100]	; (8002108 <HAL_InitTick+0x98>)

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 80020a2:	4c1a      	ldr	r4, [pc, #104]	; (800210c <HAL_InitTick+0x9c>)
 80020a4:	491a      	ldr	r1, [pc, #104]	; (8002110 <HAL_InitTick+0xa0>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 80020a6:	fba2 2303 	umull	r2, r3, r2, r3
 80020aa:	0c9b      	lsrs	r3, r3, #18
 80020ac:	3b01      	subs	r3, #1
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
  htim6.Init.Prescaler = uwPrescalerValue;
  htim6.Init.ClockDivision = 0;
 80020ae:	2200      	movs	r2, #0
  htim6.Init.Prescaler = uwPrescalerValue;
 80020b0:	e9c4 1300 	strd	r1, r3, [r4]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 80020b4:	4620      	mov	r0, r4
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 80020b6:	f240 33e7 	movw	r3, #999	; 0x3e7
  htim6.Init.ClockDivision = 0;
 80020ba:	6122      	str	r2, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 80020bc:	60a2      	str	r2, [r4, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80020be:	61a2      	str	r2, [r4, #24]
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 80020c0:	60e3      	str	r3, [r4, #12]
  status = HAL_TIM_Base_Init(&htim6);
 80020c2:	f008 fe3d 	bl	800ad40 <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 80020c6:	4606      	mov	r6, r0
 80020c8:	b130      	cbz	r0, 80020d8 <HAL_InitTick+0x68>
    }
  }

 /* Return function status */
  return status;
}
 80020ca:	4630      	mov	r0, r6
 80020cc:	b008      	add	sp, #32
 80020ce:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 80020d0:	f007 fff6 	bl	800a0c0 <HAL_RCC_GetPCLK1Freq>
 80020d4:	0043      	lsls	r3, r0, #1
 80020d6:	e7e3      	b.n	80020a0 <HAL_InitTick+0x30>
    status = HAL_TIM_Base_Start_IT(&htim6);
 80020d8:	4620      	mov	r0, r4
 80020da:	f008 febf 	bl	800ae5c <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 80020de:	4606      	mov	r6, r0
 80020e0:	2800      	cmp	r0, #0
 80020e2:	d1f2      	bne.n	80020ca <HAL_InitTick+0x5a>
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 80020e4:	2036      	movs	r0, #54	; 0x36
 80020e6:	f005 fc5f 	bl	80079a8 <HAL_NVIC_EnableIRQ>
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 80020ea:	2d0f      	cmp	r5, #15
 80020ec:	d901      	bls.n	80020f2 <HAL_InitTick+0x82>
        status = HAL_ERROR;
 80020ee:	2601      	movs	r6, #1
 80020f0:	e7eb      	b.n	80020ca <HAL_InitTick+0x5a>
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 80020f2:	4632      	mov	r2, r6
 80020f4:	4629      	mov	r1, r5
 80020f6:	2036      	movs	r0, #54	; 0x36
 80020f8:	f005 fc18 	bl	800792c <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 80020fc:	4b05      	ldr	r3, [pc, #20]	; (8002114 <HAL_InitTick+0xa4>)
 80020fe:	601d      	str	r5, [r3, #0]
 8002100:	e7e3      	b.n	80020ca <HAL_InitTick+0x5a>
 8002102:	bf00      	nop
 8002104:	40023800 	.word	0x40023800
 8002108:	431bde83 	.word	0x431bde83
 800210c:	20002890 	.word	0x20002890
 8002110:	40001000 	.word	0x40001000
 8002114:	20000080 	.word	0x20000080

08002118 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8002118:	4770      	bx	lr
 800211a:	bf00      	nop

0800211c <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800211c:	e7fe      	b.n	800211c <HardFault_Handler>
 800211e:	bf00      	nop

08002120 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002120:	e7fe      	b.n	8002120 <MemManage_Handler>
 8002122:	bf00      	nop

08002124 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8002124:	e7fe      	b.n	8002124 <BusFault_Handler>
 8002126:	bf00      	nop

08002128 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002128:	e7fe      	b.n	8002128 <UsageFault_Handler>
 800212a:	bf00      	nop

0800212c <DebugMon_Handler>:
 800212c:	4770      	bx	lr
 800212e:	bf00      	nop

08002130 <EXTI3_IRQHandler>:

/**
  * @brief This function handles EXTI line3 interrupt.
  */
void EXTI3_IRQHandler(void)
{
 8002130:	b508      	push	{r3, lr}
  /* USER CODE BEGIN EXTI3_IRQn 0 */

  HAL_Delay(200);
 8002132:	20c8      	movs	r0, #200	; 0xc8
 8002134:	f005 fbd6 	bl	80078e4 <HAL_Delay>
  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 8002138:	4804      	ldr	r0, [pc, #16]	; (800214c <EXTI3_IRQHandler+0x1c>)
 800213a:	2200      	movs	r2, #0
 800213c:	2120      	movs	r1, #32
 800213e:	f005 fecb 	bl	8007ed8 <HAL_GPIO_WritePin>
  /* USER CODE END EXTI3_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
  /* USER CODE BEGIN EXTI3_IRQn 1 */

  /* USER CODE END EXTI3_IRQn 1 */
}
 8002142:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
 8002146:	2008      	movs	r0, #8
 8002148:	f005 bed6 	b.w	8007ef8 <HAL_GPIO_EXTI_IRQHandler>
 800214c:	40021000 	.word	0x40021000

08002150 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8002150:	4801      	ldr	r0, [pc, #4]	; (8002158 <TIM6_DAC_IRQHandler+0x8>)
 8002152:	f009 b803 	b.w	800b15c <HAL_TIM_IRQHandler>
 8002156:	bf00      	nop
 8002158:	20002890 	.word	0x20002890

0800215c <I2C3_EV_IRQHandler>:
void I2C3_EV_IRQHandler(void)
{
  /* USER CODE BEGIN I2C3_EV_IRQn 0 */

  /* USER CODE END I2C3_EV_IRQn 0 */
  HAL_I2C_EV_IRQHandler(&hi2c3);
 800215c:	4801      	ldr	r0, [pc, #4]	; (8002164 <I2C3_EV_IRQHandler+0x8>)
 800215e:	f006 be2b 	b.w	8008db8 <HAL_I2C_EV_IRQHandler>
 8002162:	bf00      	nop
 8002164:	20002674 	.word	0x20002674

08002168 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8002168:	4801      	ldr	r0, [pc, #4]	; (8002170 <LTDC_IRQHandler+0x8>)
 800216a:	f007 bb9f 	b.w	80098ac <HAL_LTDC_IRQHandler>
 800216e:	bf00      	nop
 8002170:	200026c8 	.word	0x200026c8

08002174 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8002174:	4801      	ldr	r0, [pc, #4]	; (800217c <DMA2D_IRQHandler+0x8>)
 8002176:	f005 bc81 	b.w	8007a7c <HAL_DMA2D_IRQHandler>
 800217a:	bf00      	nop
 800217c:	20002634 	.word	0x20002634

08002180 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8002180:	2001      	movs	r0, #1
 8002182:	4770      	bx	lr

08002184 <_kill>:

int _kill(int pid, int sig)
{
 8002184:	b508      	push	{r3, lr}
	errno = EINVAL;
 8002186:	f025 fa71 	bl	802766c <__errno>
 800218a:	2316      	movs	r3, #22
 800218c:	6003      	str	r3, [r0, #0]
	return -1;
}
 800218e:	f04f 30ff 	mov.w	r0, #4294967295
 8002192:	bd08      	pop	{r3, pc}

08002194 <_exit>:

void _exit (int status)
{
 8002194:	b508      	push	{r3, lr}
	errno = EINVAL;
 8002196:	f025 fa69 	bl	802766c <__errno>
 800219a:	2316      	movs	r3, #22
 800219c:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 800219e:	e7fe      	b.n	800219e <_exit+0xa>

080021a0 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80021a0:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80021a2:	1e16      	subs	r6, r2, #0
 80021a4:	dd07      	ble.n	80021b6 <_read+0x16>
 80021a6:	460c      	mov	r4, r1
 80021a8:	198d      	adds	r5, r1, r6
	{
		*ptr++ = __io_getchar();
 80021aa:	f3af 8000 	nop.w
 80021ae:	f804 0b01 	strb.w	r0, [r4], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80021b2:	42a5      	cmp	r5, r4
 80021b4:	d1f9      	bne.n	80021aa <_read+0xa>
	}

return len;
}
 80021b6:	4630      	mov	r0, r6
 80021b8:	bd70      	pop	{r4, r5, r6, pc}
 80021ba:	bf00      	nop

080021bc <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80021bc:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80021be:	1e16      	subs	r6, r2, #0
 80021c0:	dd07      	ble.n	80021d2 <_write+0x16>
 80021c2:	460c      	mov	r4, r1
 80021c4:	198d      	adds	r5, r1, r6
	{
		__io_putchar(*ptr++);
 80021c6:	f814 0b01 	ldrb.w	r0, [r4], #1
 80021ca:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80021ce:	42ac      	cmp	r4, r5
 80021d0:	d1f9      	bne.n	80021c6 <_write+0xa>
	}
	return len;
}
 80021d2:	4630      	mov	r0, r6
 80021d4:	bd70      	pop	{r4, r5, r6, pc}
 80021d6:	bf00      	nop

080021d8 <_close>:

int _close(int file)
{
	return -1;
}
 80021d8:	f04f 30ff 	mov.w	r0, #4294967295
 80021dc:	4770      	bx	lr
 80021de:	bf00      	nop

080021e0 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 80021e0:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80021e4:	604b      	str	r3, [r1, #4]
	return 0;
}
 80021e6:	2000      	movs	r0, #0
 80021e8:	4770      	bx	lr
 80021ea:	bf00      	nop

080021ec <_isatty>:

int _isatty(int file)
{
	return 1;
}
 80021ec:	2001      	movs	r0, #1
 80021ee:	4770      	bx	lr

080021f0 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 80021f0:	2000      	movs	r0, #0
 80021f2:	4770      	bx	lr

080021f4 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 80021f4:	4a0b      	ldr	r2, [pc, #44]	; (8002224 <_sbrk+0x30>)
{
 80021f6:	b508      	push	{r3, lr}
 80021f8:	4603      	mov	r3, r0
	if (heap_end == 0)
 80021fa:	6810      	ldr	r0, [r2, #0]
 80021fc:	b128      	cbz	r0, 800220a <_sbrk+0x16>
		heap_end = &end;

	prev_heap_end = heap_end;
	if (heap_end + incr > stack_ptr)
 80021fe:	4403      	add	r3, r0
 8002200:	4669      	mov	r1, sp
 8002202:	428b      	cmp	r3, r1
 8002204:	d807      	bhi.n	8002216 <_sbrk+0x22>
	{
		errno = ENOMEM;
		return (caddr_t) -1;
	}

	heap_end += incr;
 8002206:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
}
 8002208:	bd08      	pop	{r3, pc}
		heap_end = &end;
 800220a:	4807      	ldr	r0, [pc, #28]	; (8002228 <_sbrk+0x34>)
 800220c:	6010      	str	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 800220e:	4403      	add	r3, r0
 8002210:	4669      	mov	r1, sp
 8002212:	428b      	cmp	r3, r1
 8002214:	d9f7      	bls.n	8002206 <_sbrk+0x12>
		errno = ENOMEM;
 8002216:	f025 fa29 	bl	802766c <__errno>
 800221a:	230c      	movs	r3, #12
 800221c:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 800221e:	f04f 30ff 	mov.w	r0, #4294967295
}
 8002222:	bd08      	pop	{r3, pc}
 8002224:	200028d8 	.word	0x200028d8
 8002228:	200143f8 	.word	0x200143f8

0800222c <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId SMALL = 2;     // verdana_10_4bpp
    static const touchgfx::FontId NORMAL_12 = 3; // verdana_12_4bpp
    static const uint16_t NUMBER_OF_FONTS = 4;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 800222c:	4770      	bx	lr

0800222e <_ZN23ApplicationFontProviderD0Ev>:
 800222e:	b510      	push	{r4, lr}
 8002230:	2104      	movs	r1, #4
 8002232:	4604      	mov	r4, r0
 8002234:	f024 f92b 	bl	802648e <_ZdlPvj>
 8002238:	4620      	mov	r0, r4
 800223a:	bd10      	pop	{r4, pc}

0800223c <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 800223c:	b508      	push	{r3, lr}
    switch (typography)
 800223e:	2903      	cmp	r1, #3
 8002240:	d813      	bhi.n	800226a <_ZN23ApplicationFontProvider7getFontEt+0x2e>
 8002242:	e8df f001 	tbb	[pc, r1]
 8002246:	0602      	.short	0x0602
 8002248:	0e0a      	.short	0x0e0a
    {
    case Typography::DEFAULT:
        // verdana_19_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 800224a:	f004 fd0b 	bl	8006c64 <_ZN17TypedTextDatabase8getFontsEv>
 800224e:	6800      	ldr	r0, [r0, #0]
        // verdana_12_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
    default:
        return 0;
    }
}
 8002250:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8002252:	f004 fd07 	bl	8006c64 <_ZN17TypedTextDatabase8getFontsEv>
 8002256:	6840      	ldr	r0, [r0, #4]
 8002258:	e7fa      	b.n	8002250 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 800225a:	f004 fd03 	bl	8006c64 <_ZN17TypedTextDatabase8getFontsEv>
 800225e:	6880      	ldr	r0, [r0, #8]
 8002260:	e7f6      	b.n	8002250 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 8002262:	f004 fcff 	bl	8006c64 <_ZN17TypedTextDatabase8getFontsEv>
 8002266:	68c0      	ldr	r0, [r0, #12]
 8002268:	e7f2      	b.n	8002250 <_ZN23ApplicationFontProvider7getFontEt+0x14>
    switch (typography)
 800226a:	2000      	movs	r0, #0
 800226c:	e7f0      	b.n	8002250 <_ZN23ApplicationFontProvider7getFontEt+0x14>
	...

08002270 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002270:	4800      	ldr	r0, [pc, #0]	; (8002274 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8002272:	4770      	bx	lr
 8002274:	080289c8 	.word	0x080289c8

08002278 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002278:	200d      	movs	r0, #13
 800227a:	4770      	bx	lr

0800227c <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 800227c:	b513      	push	{r0, r1, r4, lr}
 800227e:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8002280:	b151      	cbz	r1, 8002298 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002282:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8002284:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8002286:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800228a:	aa01      	add	r2, sp, #4
 800228c:	689c      	ldr	r4, [r3, #8]
 800228e:	f10d 0303 	add.w	r3, sp, #3
 8002292:	47a0      	blx	r4
        return glyph;
    }
 8002294:	b002      	add	sp, #8
 8002296:	bd10      	pop	{r4, pc}
            return 0;
 8002298:	4608      	mov	r0, r1
 800229a:	e7fb      	b.n	8002294 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

0800229c <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 800229c:	89c0      	ldrh	r0, [r0, #14]
 800229e:	4770      	bx	lr

080022a0 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 80022a0:	8a00      	ldrh	r0, [r0, #16]
 80022a2:	4770      	bx	lr

080022a4 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 80022a4:	88c0      	ldrh	r0, [r0, #6]
 80022a6:	4770      	bx	lr

080022a8 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 80022a8:	8880      	ldrh	r0, [r0, #4]
 80022aa:	4770      	bx	lr

080022ac <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 80022ac:	7a80      	ldrb	r0, [r0, #10]
    }
 80022ae:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 80022b2:	4770      	bx	lr

080022b4 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 80022b4:	7a80      	ldrb	r0, [r0, #10]
    }
 80022b6:	09c0      	lsrs	r0, r0, #7
 80022b8:	4770      	bx	lr

080022ba <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 80022ba:	4770      	bx	lr

080022bc <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 80022bc:	4770      	bx	lr

080022be <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 80022be:	4770      	bx	lr

080022c0 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 80022c0:	4770      	bx	lr

080022c2 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 80022c2:	4770      	bx	lr

080022c4 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 80022c4:	4770      	bx	lr

080022c6 <_ZN19CalibrationViewBase11setupScreenEv>:
}

void CalibrationViewBase::setupScreen()
{

}
 80022c6:	4770      	bx	lr

080022c8 <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type, typename T1>
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80022c8:	4770      	bx	lr

080022ca <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
     *
     * @param  t1 This value will be passed as the first argument in the function call.
     *
     * @see isValid
     */
    virtual void execute(T1 t1)
 80022ca:	b430      	push	{r4, r5}
    {
        (pobject->*pmemfun)(t1);
 80022cc:	68c2      	ldr	r2, [r0, #12]
 80022ce:	6844      	ldr	r4, [r0, #4]
 80022d0:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80022d2:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80022d4:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80022d8:	07d2      	lsls	r2, r2, #31
 80022da:	bf48      	it	mi
 80022dc:	5962      	ldrmi	r2, [r4, r5]
 80022de:	689b      	ldr	r3, [r3, #8]
    }
 80022e0:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80022e2:	bf48      	it	mi
 80022e4:	58d3      	ldrmi	r3, [r2, r3]
 80022e6:	4718      	bx	r3

080022e8 <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
     *
     * @return true if valid, false if not.
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 80022e8:	6843      	ldr	r3, [r0, #4]
 80022ea:	b12b      	cbz	r3, 80022f8 <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80022ec:	6883      	ldr	r3, [r0, #8]
 80022ee:	b92b      	cbnz	r3, 80022fc <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80022f0:	68c0      	ldr	r0, [r0, #12]
 80022f2:	f000 0001 	and.w	r0, r0, #1
 80022f6:	4770      	bx	lr
 80022f8:	4618      	mov	r0, r3
 80022fa:	4770      	bx	lr
 80022fc:	2001      	movs	r0, #1
    }
 80022fe:	4770      	bx	lr

08002300 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8002300:	b510      	push	{r4, lr}
    }
 8002302:	2108      	movs	r1, #8
    virtual ~TypedText()
 8002304:	4604      	mov	r4, r0
    }
 8002306:	f024 f8c2 	bl	802648e <_ZdlPvj>
 800230a:	4620      	mov	r0, r4
 800230c:	bd10      	pop	{r4, pc}

0800230e <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800230e:	b510      	push	{r4, lr}
 8002310:	2110      	movs	r1, #16
 8002312:	4604      	mov	r4, r0
 8002314:	f024 f8bb 	bl	802648e <_ZdlPvj>
 8002318:	4620      	mov	r0, r4
 800231a:	bd10      	pop	{r4, pc}

0800231c <_ZN19CalibrationViewBaseD1Ev>:
CalibrationViewBase::~CalibrationViewBase()
 800231c:	b510      	push	{r4, lr}
 800231e:	4b03      	ldr	r3, [pc, #12]	; (800232c <_ZN19CalibrationViewBaseD1Ev+0x10>)
 8002320:	6003      	str	r3, [r0, #0]
 8002322:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002324:	f00f fe52 	bl	8011fcc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002328:	4620      	mov	r0, r4
 800232a:	bd10      	pop	{r4, pc}
 800232c:	08028c28 	.word	0x08028c28

08002330 <_ZN19CalibrationViewBaseD0Ev>:
CalibrationViewBase::~CalibrationViewBase()
 8002330:	b507      	push	{r0, r1, r2, lr}
 8002332:	4b07      	ldr	r3, [pc, #28]	; (8002350 <_ZN19CalibrationViewBaseD0Ev+0x20>)
 8002334:	6003      	str	r3, [r0, #0]
 8002336:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002338:	f00f fe48 	bl	8011fcc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800233c:	9801      	ldr	r0, [sp, #4]
 800233e:	f241 01a4 	movw	r1, #4260	; 0x10a4
 8002342:	f024 f8a4 	bl	802648e <_ZdlPvj>
 8002346:	9801      	ldr	r0, [sp, #4]
 8002348:	b003      	add	sp, #12
 800234a:	f85d fb04 	ldr.w	pc, [sp], #4
 800234e:	bf00      	nop
 8002350:	08028c28 	.word	0x08028c28

08002354 <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void CalibrationViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8002354:	f500 70d6 	add.w	r0, r0, #428	; 0x1ac
 8002358:	4288      	cmp	r0, r1
{
 800235a:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 800235c:	d105      	bne.n	800236a <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~CalibrationViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800235e:	f011 fb37 	bl	80139d0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
    }
}
 8002362:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMain_MenuScreenWipeTransitionWest();
 8002366:	f000 bd09 	b.w	8002d7c <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
}
 800236a:	bd08      	pop	{r3, pc}

0800236c <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 800236c:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 800236e:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8002370:	4604      	mov	r4, r0
        setX(x);
 8002372:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 8002374:	4615      	mov	r5, r2
        setX(x);
 8002376:	4798      	blx	r3
        setY(y);
 8002378:	6823      	ldr	r3, [r4, #0]
 800237a:	4629      	mov	r1, r5
 800237c:	4620      	mov	r0, r4
 800237e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 8002380:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8002384:	4718      	bx	r3

08002386 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002386:	b570      	push	{r4, r5, r6, lr}
 8002388:	4604      	mov	r4, r0
 800238a:	461d      	mov	r5, r3
 800238c:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 8002390:	f7ff ffec 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8002394:	6823      	ldr	r3, [r4, #0]
 8002396:	4629      	mov	r1, r5
 8002398:	4620      	mov	r0, r4
 800239a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800239c:	4798      	blx	r3
        setHeight(height);
 800239e:	6823      	ldr	r3, [r4, #0]
 80023a0:	4631      	mov	r1, r6
 80023a2:	4620      	mov	r0, r4
 80023a4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 80023a6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 80023aa:	4718      	bx	r3

080023ac <_ZN8touchgfx6WidgetC1Ev>:
 80023ac:	2200      	movs	r2, #0
 80023ae:	e9c0 2201 	strd	r2, r2, [r0, #4]
 80023b2:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 80023b6:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 80023ba:	e9c0 2207 	strd	r2, r2, [r0, #28]
          touchable(false),
 80023be:	f44f 7280 	mov.w	r2, #256	; 0x100
 80023c2:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 80023c4:	4a01      	ldr	r2, [pc, #4]	; (80023cc <_ZN8touchgfx6WidgetC1Ev+0x20>)
 80023c6:	6002      	str	r2, [r0, #0]
 80023c8:	4770      	bx	lr
 80023ca:	bf00      	nop
 80023cc:	08028b98 	.word	0x08028b98

080023d0 <_ZN8touchgfx8TextAreaC1Ev>:
 *       the pointer remains valid when drawing.
 */
class TextArea : public Widget
{
public:
    TextArea()
 80023d0:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80023d2:	2226      	movs	r2, #38	; 0x26
    TextArea()
 80023d4:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80023d6:	2100      	movs	r1, #0
 80023d8:	f025 f84f 	bl	802747a <memset>
 80023dc:	4620      	mov	r0, r4
 80023de:	f7ff ffe5 	bl	80023ac <_ZN8touchgfx6WidgetC1Ev>
 80023e2:	4b0a      	ldr	r3, [pc, #40]	; (800240c <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 80023e4:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 80023e6:	4b0a      	ldr	r3, [pc, #40]	; (8002410 <_ZN8touchgfx8TextAreaC1Ev+0x40>)
 80023e8:	62a3      	str	r3, [r4, #40]	; 0x28
 80023ea:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80023ee:	85a3      	strh	r3, [r4, #44]	; 0x2c
 80023f0:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 80023f4:	2300      	movs	r3, #0
 80023f6:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80023fa:	f04f 32ff 	mov.w	r2, #4294967295
        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
              text(0)
 80023fe:	e9c4 2310 	strd	r2, r3, [r4, #64]	; 0x40
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002402:	8723      	strh	r3, [r4, #56]	; 0x38
 8002404:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
 8002406:	4620      	mov	r0, r4
 8002408:	bd10      	pop	{r4, pc}
 800240a:	bf00      	nop
 800240c:	0802b048 	.word	0x0802b048
 8002410:	08028c00 	.word	0x08028c00

08002414 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId < numberOfTypedTexts;
 8002414:	4b1a      	ldr	r3, [pc, #104]	; (8002480 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x6c>)
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 8002416:	b573      	push	{r0, r1, r4, r5, r6, lr}
    {
        if (typedText.hasValidId())
 8002418:	881b      	ldrh	r3, [r3, #0]
 800241a:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 800241c:	428b      	cmp	r3, r1
    void updateTextPosition()
 800241e:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 8002420:	d92b      	bls.n	800247a <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x66>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002422:	4b18      	ldr	r3, [pc, #96]	; (8002484 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
 8002424:	681b      	ldr	r3, [r3, #0]
 8002426:	b92b      	cbnz	r3, 8002434 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 8002428:	4b17      	ldr	r3, [pc, #92]	; (8002488 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 800242a:	4a18      	ldr	r2, [pc, #96]	; (800248c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 800242c:	4818      	ldr	r0, [pc, #96]	; (8002490 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 800242e:	216c      	movs	r1, #108	; 0x6c
 8002430:	f024 fe1e 	bl	8027070 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002434:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8002438:	4b16      	ldr	r3, [pc, #88]	; (8002494 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 800243a:	681b      	ldr	r3, [r3, #0]
 800243c:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 8002440:	4b15      	ldr	r3, [pc, #84]	; (8002498 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 8002442:	6818      	ldr	r0, [r3, #0]
 8002444:	f004 fbfe 	bl	8006c44 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8002448:	682b      	ldr	r3, [r5, #0]
 800244a:	9001      	str	r0, [sp, #4]
 800244c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800244e:	4628      	mov	r0, r5
 8002450:	4798      	blx	r3
 8002452:	682b      	ldr	r3, [r5, #0]
 8002454:	9901      	ldr	r1, [sp, #4]
 8002456:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8002458:	4604      	mov	r4, r0
 800245a:	4628      	mov	r0, r5
 800245c:	4798      	blx	r3
 800245e:	682b      	ldr	r3, [r5, #0]
 8002460:	9901      	ldr	r1, [sp, #4]
 8002462:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002464:	fb14 f400 	smulbb	r4, r4, r0
 8002468:	4628      	mov	r0, r5
 800246a:	4798      	blx	r3
 800246c:	b2a4      	uxth	r4, r4
 800246e:	1823      	adds	r3, r4, r0
 8002470:	b21b      	sxth	r3, r3
 8002472:	f8a6 3046 	strh.w	r3, [r6, #70]	; 0x46
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 8002476:	b002      	add	sp, #8
 8002478:	bd70      	pop	{r4, r5, r6, pc}
 800247a:	2300      	movs	r3, #0
 800247c:	e7f9      	b.n	8002472 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x5e>
 800247e:	bf00      	nop
 8002480:	20013818 	.word	0x20013818
 8002484:	20013814 	.word	0x20013814
 8002488:	08028acc 	.word	0x08028acc
 800248c:	08028b0e 	.word	0x08028b0e
 8002490:	08028b49 	.word	0x08028b49
 8002494:	2001381c 	.word	0x2001381c
 8002498:	20013820 	.word	0x20013820

0800249c <_ZN19CalibrationViewBaseC1Ev>:
CalibrationViewBase::CalibrationViewBase() :
 800249c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80024a0:	ed2d 8b04 	vpush	{d8-d9}
 80024a4:	4604      	mov	r4, r0
 80024a6:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &CalibrationViewBase::buttonCallbackHandler)
 80024a8:	46a3      	mov	fp, r4
template <class T>
class View : public Screen
{
public:
    View()
        : presenter(0)
 80024aa:	2500      	movs	r5, #0
 80024ac:	f012 ff10 	bl	80152d0 <_ZN8touchgfx6ScreenC1Ev>
 80024b0:	4bb4      	ldr	r3, [pc, #720]	; (8002784 <_ZN19CalibrationViewBaseC1Ev+0x2e8>)
 80024b2:	63e5      	str	r5, [r4, #60]	; 0x3c
 80024b4:	f84b 3b40 	str.w	r3, [fp], #64
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 80024b8:	2226      	movs	r2, #38	; 0x26
 80024ba:	4629      	mov	r1, r5
 80024bc:	4658      	mov	r0, fp
 80024be:	f024 ffdc 	bl	802747a <memset>
 80024c2:	4658      	mov	r0, fp
 80024c4:	f7ff ff72 	bl	80023ac <_ZN8touchgfx6WidgetC1Ev>
 80024c8:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 80024cc:	26ff      	movs	r6, #255	; 0xff
 80024ce:	4bae      	ldr	r3, [pc, #696]	; (8002788 <_ZN19CalibrationViewBaseC1Ev+0x2ec>)
 80024d0:	6423      	str	r3, [r4, #64]	; 0x40
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), bitmap(bmp), alpha(255)
 80024d2:	2226      	movs	r2, #38	; 0x26
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 80024d4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80024d8:	4629      	mov	r1, r5
 80024da:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
        : color(col)
 80024de:	66a5      	str	r5, [r4, #104]	; 0x68
 80024e0:	4650      	mov	r0, sl
 80024e2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80024e6:	f024 ffc8 	bl	802747a <memset>
 80024ea:	4650      	mov	r0, sl
 80024ec:	f7ff ff5e 	bl	80023ac <_ZN8touchgfx6WidgetC1Ev>
 80024f0:	4ba6      	ldr	r3, [pc, #664]	; (800278c <_ZN19CalibrationViewBaseC1Ev+0x2f0>)
 80024f2:	66e3      	str	r3, [r4, #108]	; 0x6c
 80024f4:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80024f8:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
    {
        Image::setBitmap(bmp);
 80024fc:	a90a      	add	r1, sp, #40	; 0x28
 80024fe:	f104 0798 	add.w	r7, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8002502:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8002506:	4650      	mov	r0, sl
 8002508:	f00e fd59 	bl	8010fbe <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800250c:	4638      	mov	r0, r7
 800250e:	f00d fc1f 	bl	800fd50 <_ZN8touchgfx4LineC1Ev>
 8002512:	f504 7384 	add.w	r3, r4, #264	; 0x108
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8002516:	4618      	mov	r0, r3
 8002518:	9303      	str	r3, [sp, #12]
 800251a:	f7fe fed1 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800251e:	4b9c      	ldr	r3, [pc, #624]	; (8002790 <_ZN19CalibrationViewBaseC1Ev+0x2f4>)
 8002520:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 8002524:	f504 798e 	add.w	r9, r4, #284	; 0x11c
 8002528:	3324      	adds	r3, #36	; 0x24
 800252a:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 800252e:	f8c4 5114 	str.w	r5, [r4, #276]	; 0x114
 8002532:	4648      	mov	r0, r9
 8002534:	f504 78b2 	add.w	r8, r4, #356	; 0x164
 8002538:	f7ff ff4a 	bl	80023d0 <_ZN8touchgfx8TextAreaC1Ev>
 800253c:	4640      	mov	r0, r8
 800253e:	f7ff ff47 	bl	80023d0 <_ZN8touchgfx8TextAreaC1Ev>
 8002542:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 8002546:	4618      	mov	r0, r3
 8002548:	ee08 3a10 	vmov	s16, r3
 800254c:	f00e fe78 	bl	8011240 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002550:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 8002554:	4618      	mov	r0, r3
 8002556:	ee08 3a90 	vmov	s17, r3
 800255a:	f00e fe71 	bl	8011240 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800255e:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 8002562:	4618      	mov	r0, r3
 8002564:	ee09 3a10 	vmov	s18, r3
 8002568:	f00e fe6a 	bl	8011240 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800256c:	4a89      	ldr	r2, [pc, #548]	; (8002794 <_ZN19CalibrationViewBaseC1Ev+0x2f8>)
 800256e:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8002572:	e9c3 2425 	strd	r2, r4, [r3, #148]	; 0x94
 8002576:	4a88      	ldr	r2, [pc, #544]	; (8002798 <_ZN19CalibrationViewBaseC1Ev+0x2fc>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8002578:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800257c:	e9c3 2527 	strd	r2, r5, [r3, #156]	; 0x9c
 8002580:	f504 7021 	add.w	r0, r4, #644	; 0x284
 8002584:	f00f fd18 	bl	8011fb8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8002588:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800258c:	462a      	mov	r2, r5
 800258e:	9300      	str	r3, [sp, #0]
 8002590:	4629      	mov	r1, r5
 8002592:	23f0      	movs	r3, #240	; 0xf0
 8002594:	4658      	mov	r0, fp
 8002596:	f7ff fef6 	bl	8002386 <_ZN8touchgfx8Drawable11setPositionEssss>
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 800259a:	1d26      	adds	r6, r4, #4
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 800259c:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80025a0:	66a3      	str	r3, [r4, #104]	; 0x68
 80025a2:	4659      	mov	r1, fp
 80025a4:	4630      	mov	r0, r6
 80025a6:	f00b ff7b 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80025aa:	462a      	mov	r2, r5
 80025ac:	4629      	mov	r1, r5
 80025ae:	4650      	mov	r0, sl
 80025b0:	f7ff fedc 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
 80025b4:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80025b6:	a90a      	add	r1, sp, #40	; 0x28
 80025b8:	4650      	mov	r0, sl
 80025ba:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80025be:	f00e fcfe 	bl	8010fbe <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80025c2:	4651      	mov	r1, sl
 80025c4:	4630      	mov	r0, r6
 80025c6:	f00b ff6b 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80025ca:	230a      	movs	r3, #10
 80025cc:	9300      	str	r3, [sp, #0]
 80025ce:	2232      	movs	r2, #50	; 0x32
 80025d0:	23f0      	movs	r3, #240	; 0xf0
 80025d2:	4629      	mov	r1, r5
 80025d4:	4638      	mov	r0, r7
 80025d6:	f7ff fed6 	bl	8002386 <_ZN8touchgfx8Drawable11setPositionEssss>
 80025da:	f04f 33ff 	mov.w	r3, #4294967295
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setStart(T x, T y)
    {
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80025de:	22a0      	movs	r2, #160	; 0xa0
 80025e0:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 80025e4:	f8a4 3118 	strh.w	r3, [r4, #280]	; 0x118
        canvasPainter = &painter;
 80025e8:	9b03      	ldr	r3, [sp, #12]
 80025ea:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 80025ee:	4611      	mov	r1, r2
 80025f0:	4638      	mov	r0, r7
 80025f2:	f00d fcc3 	bl	800ff7c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setEnd(T x, T y)
    {
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80025f6:	22a0      	movs	r2, #160	; 0xa0
 80025f8:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80025fc:	4638      	mov	r0, r7
 80025fe:	f00d fcc8 	bl	800ff92 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
     *
     * @note The area containing the Line is not invalidated.
     */
    void setLineWidth(CWRUtil::Q5 widthQ5)
    {
        if (lineWidthQ5 == widthQ5)
 8002602:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
 8002606:	2b20      	cmp	r3, #32
 8002608:	d005      	beq.n	8002616 <_ZN19CalibrationViewBaseC1Ev+0x17a>
        {
            return;
        }

        lineWidthQ5 = widthQ5;
 800260a:	2320      	movs	r3, #32
 800260c:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4

        updateCachedShape();
 8002610:	4638      	mov	r0, r7
 8002612:	f00d fbbd 	bl	800fd90 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8002616:	4638      	mov	r0, r7
 8002618:	2101      	movs	r1, #1
 800261a:	f00d fcc5 	bl	800ffa8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800261e:	4639      	mov	r1, r7
 8002620:	4630      	mov	r0, r6
 8002622:	f00b ff3d 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8002626:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 800262a:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 36);
 800262c:	2224      	movs	r2, #36	; 0x24
 800262e:	4648      	mov	r0, r9
        linespace = space;
 8002630:	f04f 0a00 	mov.w	sl, #0
 8002634:	2145      	movs	r1, #69	; 0x45
 8002636:	f7ff fe99 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800263a:	4649      	mov	r1, r9
 800263c:	4638      	mov	r0, r7
        color = newColor;
 800263e:	f8c4 514c 	str.w	r5, [r4, #332]	; 0x14c
        linespace = space;
 8002642:	f8a4 a150 	strh.w	sl, [r4, #336]	; 0x150
        boundingArea = calculateBoundingArea();
 8002646:	f00d fe45 	bl	80102d4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800264a:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 800264e:	f109 033c 	add.w	r3, r9, #60	; 0x3c
 8002652:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8002656:	f8df b144 	ldr.w	fp, [pc, #324]	; 800279c <_ZN19CalibrationViewBaseC1Ev+0x300>
 800265a:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 800265e:	2330      	movs	r3, #48	; 0x30
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y01G));
 8002660:	a90a      	add	r1, sp, #40	; 0x28
 8002662:	4648      	mov	r0, r9
 8002664:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002668:	f00e f8ce 	bl	8010808 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800266c:	4649      	mov	r1, r9
 800266e:	4630      	mov	r0, r6
 8002670:	f00b ff16 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(50, 12);
 8002674:	220c      	movs	r2, #12
 8002676:	4640      	mov	r0, r8
 8002678:	2132      	movs	r1, #50	; 0x32
 800267a:	f7ff fe77 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
 800267e:	4641      	mov	r1, r8
 8002680:	4638      	mov	r0, r7
        color = newColor;
 8002682:	f8c4 5194 	str.w	r5, [r4, #404]	; 0x194
        linespace = space;
 8002686:	f8a4 a198 	strh.w	sl, [r4, #408]	; 0x198
        boundingArea = calculateBoundingArea();
 800268a:	f00d fe23 	bl	80102d4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800268e:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8002692:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8002696:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800269a:	232f      	movs	r3, #47	; 0x2f
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2ABZ));
 800269c:	a90a      	add	r1, sp, #40	; 0x28
 800269e:	4640      	mov	r0, r8
 80026a0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80026a4:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 80026a8:	f00e f8ae 	bl	8010808 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80026ac:	4641      	mov	r1, r8
 80026ae:	4630      	mov	r0, r6
 80026b0:	f00b fef6 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 80026b4:	ee18 0a10 	vmov	r0, s16
 80026b8:	22f0      	movs	r2, #240	; 0xf0
 80026ba:	2121      	movs	r1, #33	; 0x21
 80026bc:	f7ff fe56 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
 80026c0:	f04f 0803 	mov.w	r8, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80026c4:	aa0a      	add	r2, sp, #40	; 0x28
 80026c6:	2702      	movs	r7, #2
 80026c8:	a909      	add	r1, sp, #36	; 0x24
 80026ca:	ee18 0a10 	vmov	r0, s16
 80026ce:	f8ad 8024 	strh.w	r8, [sp, #36]	; 0x24
 80026d2:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 80026d6:	f00e fa7c 	bl	8010bd2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80026da:	232e      	movs	r3, #46	; 0x2e
        updateTextPosition();
 80026dc:	ee18 0a10 	vmov	r0, s16
 80026e0:	f8a4 31e4 	strh.w	r3, [r4, #484]	; 0x1e4
 80026e4:	f7ff fe96 	bl	8002414 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 80026e8:	f504 5384 	add.w	r3, r4, #4224	; 0x1080
 80026ec:	3314      	adds	r3, #20
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 80026ee:	f8c4 31d4 	str.w	r3, [r4, #468]	; 0x1d4
 80026f2:	ee18 1a10 	vmov	r1, s16
 80026f6:	4630      	mov	r0, r6
        colorPressed = col;
 80026f8:	e9c4 557a 	strd	r5, r5, [r4, #488]	; 0x1e8
 80026fc:	f00b fed0 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8002700:	ee18 0a90 	vmov	r0, s17
 8002704:	22aa      	movs	r2, #170	; 0xaa
 8002706:	2121      	movs	r1, #33	; 0x21
 8002708:	f7ff fe30 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800270c:	aa0a      	add	r2, sp, #40	; 0x28
 800270e:	a909      	add	r1, sp, #36	; 0x24
 8002710:	ee18 0a90 	vmov	r0, s17
 8002714:	f8ad 8024 	strh.w	r8, [sp, #36]	; 0x24
 8002718:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 800271c:	f00e fa59 	bl	8010bd2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8002720:	232d      	movs	r3, #45	; 0x2d
 8002722:	f8a4 322c 	strh.w	r3, [r4, #556]	; 0x22c
        updateTextPosition();
 8002726:	ee18 0a90 	vmov	r0, s17
 800272a:	f7ff fe73 	bl	8002414 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 800272e:	ee18 1a90 	vmov	r1, s17
 8002732:	4630      	mov	r0, r6
        colorPressed = col;
 8002734:	e9c4 558c 	strd	r5, r5, [r4, #560]	; 0x230
 8002738:	f00b feb2 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 800273c:	ee19 0a10 	vmov	r0, s18
 8002740:	2264      	movs	r2, #100	; 0x64
 8002742:	2121      	movs	r1, #33	; 0x21
 8002744:	f7ff fe12 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002748:	aa0a      	add	r2, sp, #40	; 0x28
 800274a:	a909      	add	r1, sp, #36	; 0x24
 800274c:	ee19 0a10 	vmov	r0, s18
 8002750:	f8ad 8024 	strh.w	r8, [sp, #36]	; 0x24
 8002754:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 8002758:	f00e fa3b 	bl	8010bd2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800275c:	232c      	movs	r3, #44	; 0x2c
        updateTextPosition();
 800275e:	ee19 0a10 	vmov	r0, s18
 8002762:	f8a4 3274 	strh.w	r3, [r4, #628]	; 0x274
 8002766:	f7ff fe55 	bl	8002414 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 800276a:	4630      	mov	r0, r6
        colorPressed = col;
 800276c:	e9c4 559e 	strd	r5, r5, [r4, #632]	; 0x278
 8002770:	ee19 1a10 	vmov	r1, s18
 8002774:	f00b fe94 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002778:	4620      	mov	r0, r4
 800277a:	b00d      	add	sp, #52	; 0x34
 800277c:	ecbd 8b04 	vpop	{d8-d9}
 8002780:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002784:	08028c28 	.word	0x08028c28
 8002788:	0802b0d8 	.word	0x0802b0d8
 800278c:	0802b2a0 	.word	0x0802b2a0
 8002790:	0802ae0c 	.word	0x0802ae0c
 8002794:	08028c10 	.word	0x08028c10
 8002798:	08002355 	.word	0x08002355
 800279c:	08028c00 	.word	0x08028c00

080027a0 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 80027a0:	4770      	bx	lr

080027a2 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 80027a2:	4770      	bx	lr

080027a4 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 80027a4:	f500 7398 	add.w	r3, r0, #304	; 0x130
 80027a8:	6808      	ldr	r0, [r1, #0]
 80027aa:	6849      	ldr	r1, [r1, #4]
 80027ac:	c303      	stmia	r3!, {r0, r1}
    }
 80027ae:	4770      	bx	lr

080027b0 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 80027b0:	4770      	bx	lr

080027b2 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 80027b2:	4770      	bx	lr

080027b4 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 80027b4:	6041      	str	r1, [r0, #4]
    }
 80027b6:	4770      	bx	lr

080027b8 <_ZNK8touchgfx10Transition13FullSolidRect12getSolidRectEv>:
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
    {
    public:
        virtual Rect getSolidRect() const
 80027b8:	b510      	push	{r4, lr}
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80027ba:	2200      	movs	r2, #0
        {
            return Rect(0, 0, rect.width, rect.height);
 80027bc:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 80027c0:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 80027c4:	8002      	strh	r2, [r0, #0]
 80027c6:	8042      	strh	r2, [r0, #2]
 80027c8:	8084      	strh	r4, [r0, #4]
 80027ca:	80c1      	strh	r1, [r0, #6]
        }
 80027cc:	bd10      	pop	{r4, pc}

080027ce <_ZNK8touchgfx10Transition13FullSolidRect4drawERKNS_4RectE>:

        virtual void draw(const Rect& area) const
        {
        }
 80027ce:	4770      	bx	lr

080027d0 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 80027d0:	4770      	bx	lr
	...

080027d4 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80027d4:	4b06      	ldr	r3, [pc, #24]	; (80027f0 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 80027d6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80027da:	2300      	movs	r3, #0
 80027dc:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
// Main_Menu

void FrontendApplicationBase::gotoMain_MenuScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMain_MenuScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80027e0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80027e4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80027e8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140

    virtual void changeToStartScreen()
    {
        gotoMain_MenuScreenNoTransition();
    }
 80027ec:	4770      	bx	lr
 80027ee:	bf00      	nop
 80027f0:	08002b91 	.word	0x08002b91

080027f4 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 80027f4:	2301      	movs	r3, #1
 80027f6:	7203      	strb	r3, [r0, #8]
    }
 80027f8:	4770      	bx	lr

080027fa <_ZN8touchgfx10Transition13FullSolidRectD1Ev>:
    class FullSolidRect : public Widget
 80027fa:	4770      	bx	lr

080027fc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED1Ev>:
 * the given direction.  This transition only draws the pixels in the
 * framebuffer once, and never moves any pixels. It is therefore very
 * useful on MCUs with limited performance.
 */
template <Direction templateDirection>
class WipeTransition : public Transition
 80027fc:	4770      	bx	lr

080027fe <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
 80027fe:	4770      	bx	lr

08002800 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8002800:	4770      	bx	lr

08002802 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 8002802:	4770      	bx	lr

08002804 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE8tearDownEv>:
            // Synchronize framebuffers
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
        }
    }

    virtual void tearDown()
 8002804:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 8002806:	6840      	ldr	r0, [r0, #4]
 8002808:	6803      	ldr	r3, [r0, #0]
 800280a:	3110      	adds	r1, #16
 800280c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800280e:	4718      	bx	r3

08002810 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE4initEv>:
    }

    virtual void init()
 8002810:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 8002812:	6840      	ldr	r0, [r0, #4]
 8002814:	6803      	ldr	r3, [r0, #0]
 8002816:	3110      	adds	r1, #16
 8002818:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800281a:	4718      	bx	r3

0800281c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 800281c:	4770      	bx	lr

0800281e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
    virtual void tearDown()
 800281e:	4601      	mov	r1, r0
        screenContainer->remove(solid);
 8002820:	6840      	ldr	r0, [r0, #4]
 8002822:	6803      	ldr	r3, [r0, #0]
 8002824:	3110      	adds	r1, #16
 8002826:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8002828:	4718      	bx	r3

0800282a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    virtual void init()
 800282a:	4601      	mov	r1, r0
        screenContainer->add(solid);
 800282c:	6840      	ldr	r0, [r0, #4]
 800282e:	6803      	ldr	r3, [r0, #0]
 8002830:	3110      	adds	r1, #16
 8002832:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8002834:	4718      	bx	r3

08002836 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
    }
 8002836:	4770      	bx	lr

08002838 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8002838:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 800283a:	68c2      	ldr	r2, [r0, #12]
 800283c:	6841      	ldr	r1, [r0, #4]
 800283e:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8002840:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 8002842:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8002846:	07d2      	lsls	r2, r2, #31
 8002848:	bf48      	it	mi
 800284a:	590a      	ldrmi	r2, [r1, r4]
 800284c:	689b      	ldr	r3, [r3, #8]
    }
 800284e:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 8002852:	bf48      	it	mi
 8002854:	58d3      	ldrmi	r3, [r2, r3]
 8002856:	4718      	bx	r3

08002858 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8002858:	6843      	ldr	r3, [r0, #4]
 800285a:	b12b      	cbz	r3, 8002868 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 800285c:	6883      	ldr	r3, [r0, #8]
 800285e:	b92b      	cbnz	r3, 800286c <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8002860:	68c0      	ldr	r0, [r0, #12]
 8002862:	f000 0001 	and.w	r0, r0, #1
 8002866:	4770      	bx	lr
 8002868:	4618      	mov	r0, r3
 800286a:	4770      	bx	lr
 800286c:	2001      	movs	r0, #1
    }
 800286e:	4770      	bx	lr

08002870 <_ZN8touchgfx12NoTransitionD0Ev>:
 8002870:	b510      	push	{r4, lr}
 8002872:	210c      	movs	r1, #12
 8002874:	4604      	mov	r4, r0
 8002876:	f023 fe0a 	bl	802648e <_ZdlPvj>
 800287a:	4620      	mov	r0, r4
 800287c:	bd10      	pop	{r4, pc}

0800287e <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800287e:	b510      	push	{r4, lr}
 8002880:	2110      	movs	r1, #16
 8002882:	4604      	mov	r4, r0
 8002884:	f023 fe03 	bl	802648e <_ZdlPvj>
 8002888:	4620      	mov	r0, r4
 800288a:	bd10      	pop	{r4, pc}

0800288c <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 800288c:	b510      	push	{r4, lr}
 800288e:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 8002892:	4604      	mov	r4, r0
 8002894:	f023 fdfb 	bl	802648e <_ZdlPvj>
 8002898:	4620      	mov	r0, r4
 800289a:	bd10      	pop	{r4, pc}

0800289c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED0Ev>:
class WipeTransition : public Transition
 800289c:	b510      	push	{r4, lr}
 800289e:	2138      	movs	r1, #56	; 0x38
 80028a0:	4604      	mov	r4, r0
 80028a2:	f023 fdf4 	bl	802648e <_ZdlPvj>
 80028a6:	4620      	mov	r0, r4
 80028a8:	bd10      	pop	{r4, pc}

080028aa <_ZN8touchgfx10Transition13FullSolidRectD0Ev>:
 80028aa:	b510      	push	{r4, lr}
 80028ac:	2128      	movs	r1, #40	; 0x28
 80028ae:	4604      	mov	r4, r0
 80028b0:	f023 fded 	bl	802648e <_ZdlPvj>
 80028b4:	4620      	mov	r0, r4
 80028b6:	bd10      	pop	{r4, pc}

080028b8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
 80028b8:	b510      	push	{r4, lr}
 80028ba:	2138      	movs	r1, #56	; 0x38
 80028bc:	4604      	mov	r4, r0
 80028be:	f023 fde6 	bl	802648e <_ZdlPvj>
 80028c2:	4620      	mov	r0, r4
 80028c4:	bd10      	pop	{r4, pc}

080028c6 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 80028c6:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 80028c8:	f011 f882 	bl	80139d0 <_ZN8touchgfx11Application11getInstanceEv>
 80028cc:	6803      	ldr	r3, [r0, #0]
    }
 80028ce:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 80028d2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80028d4:	4718      	bx	r3
	...

080028d8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv>:
    virtual void handleTickEvent()
 80028d8:	b513      	push	{r0, r1, r4, lr}
 80028da:	4604      	mov	r4, r0
        animationCounter++;
 80028dc:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 80028de:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 80028e0:	3001      	adds	r0, #1
 80028e2:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 80028e4:	4298      	cmp	r0, r3
        animationCounter++;
 80028e6:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 80028e8:	d905      	bls.n	80028f6 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1e>
            done = true;
 80028ea:	2301      	movs	r3, #1
 80028ec:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 80028ee:	2300      	movs	r3, #0
 80028f0:	72a3      	strb	r3, [r4, #10]
    }
 80028f2:	b002      	add	sp, #8
 80028f4:	bd10      	pop	{r4, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80028f6:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80028fa:	2100      	movs	r1, #0
 80028fc:	f012 fe9a 	bl	8015634 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8002900:	f010 0201 	ands.w	r2, r0, #1
 8002904:	b283      	uxth	r3, r0
 8002906:	d12a      	bne.n	800295e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x86>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8002908:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800290a:	4a19      	ldr	r2, [pc, #100]	; (8002970 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x98>)
 800290c:	f9b4 000e 	ldrsh.w	r0, [r4, #14]
 8002910:	89e3      	ldrh	r3, [r4, #14]
 8002912:	8812      	ldrh	r2, [r2, #0]
        return rect.x;
 8002914:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
        rect.x = x;
 8002918:	82a0      	strh	r0, [r4, #20]
 800291a:	2000      	movs	r0, #0
 800291c:	1ad2      	subs	r2, r2, r3
 800291e:	f8ad 0002 	strh.w	r0, [sp, #2]
                screenContainer->invalidateRect(r);
 8002922:	6860      	ldr	r0, [r4, #4]
        rect.width = width;
 8002924:	8322      	strh	r2, [r4, #24]
                const uint16_t delta = calculatedValue - prevSolidPos;
 8002926:	1a5b      	subs	r3, r3, r1
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 8002928:	4a12      	ldr	r2, [pc, #72]	; (8002974 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x9c>)
 800292a:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 800292e:	6803      	ldr	r3, [r0, #0]
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 8002930:	f9b2 2000 	ldrsh.w	r2, [r2]
                screenContainer->invalidateRect(r);
 8002934:	691b      	ldr	r3, [r3, #16]
 8002936:	f8ad 1000 	strh.w	r1, [sp]
 800293a:	f8ad 2006 	strh.w	r2, [sp, #6]
 800293e:	4669      	mov	r1, sp
 8002940:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 8002942:	7aa3      	ldrb	r3, [r4, #10]
 8002944:	2b01      	cmp	r3, #1
 8002946:	d1d4      	bne.n	80028f2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
 8002948:	4b0b      	ldr	r3, [pc, #44]	; (8002978 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0xa0>)
 800294a:	781b      	ldrb	r3, [r3, #0]
 800294c:	2b00      	cmp	r3, #0
 800294e:	d0d0      	beq.n	80028f2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8002950:	f011 f83e 	bl	80139d0 <_ZN8touchgfx11Application11getInstanceEv>
    }
 8002954:	b002      	add	sp, #8
 8002956:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 800295a:	f011 b83f 	b.w	80139dc <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 800295e:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8002962:	2800      	cmp	r0, #0
 8002964:	bfd8      	it	le
 8002966:	460a      	movle	r2, r1
 8002968:	4413      	add	r3, r2
 800296a:	81e3      	strh	r3, [r4, #14]
 800296c:	e7cd      	b.n	800290a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x32>
 800296e:	bf00      	nop
 8002970:	200137b0 	.word	0x200137b0
 8002974:	200137b2 	.word	0x200137b2
 8002978:	200137ba 	.word	0x200137ba

0800297c <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 800297c:	b510      	push	{r4, lr}
 800297e:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8002980:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 8002984:	b158      	cbz	r0, 800299e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 8002986:	6803      	ldr	r3, [r0, #0]
 8002988:	68db      	ldr	r3, [r3, #12]
 800298a:	4798      	blx	r3
 800298c:	b138      	cbz	r0, 800299e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 800298e:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 8002992:	6803      	ldr	r3, [r0, #0]
 8002994:	689b      	ldr	r3, [r3, #8]
 8002996:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8002998:	2300      	movs	r3, #0
 800299a:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
    }
 800299e:	bd10      	pop	{r4, pc}

080029a0 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl()
{
 80029a0:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Shutting_OffView, Shutting_OffPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80029a4:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 80029a8:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80029aa:	68a8      	ldr	r0, [r5, #8]
 80029ac:	6803      	ldr	r3, [r0, #0]
 80029ae:	6a1b      	ldr	r3, [r3, #32]
 80029b0:	4798      	blx	r3
 80029b2:	2897      	cmp	r0, #151	; 0x97
 80029b4:	d805      	bhi.n	80029c2 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x22>
 80029b6:	4b46      	ldr	r3, [pc, #280]	; (8002ad0 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x130>)
 80029b8:	4a46      	ldr	r2, [pc, #280]	; (8002ad4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 80029ba:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80029bc:	4846      	ldr	r0, [pc, #280]	; (8002ad8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x138>)
 80029be:	f024 fb57 	bl	8027070 <__assert_func>
 80029c2:	6868      	ldr	r0, [r5, #4]
 80029c4:	6803      	ldr	r3, [r0, #0]
 80029c6:	6a1b      	ldr	r3, [r3, #32]
 80029c8:	4798      	blx	r3
 80029ca:	280f      	cmp	r0, #15
 80029cc:	d803      	bhi.n	80029d6 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x36>
 80029ce:	4b43      	ldr	r3, [pc, #268]	; (8002adc <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x13c>)
 80029d0:	4a40      	ldr	r2, [pc, #256]	; (8002ad4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 80029d2:	21a4      	movs	r1, #164	; 0xa4
 80029d4:	e7f2      	b.n	80029bc <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80029d6:	68e8      	ldr	r0, [r5, #12]
 80029d8:	6803      	ldr	r3, [r0, #0]
 80029da:	6a1b      	ldr	r3, [r3, #32]
 80029dc:	4798      	blx	r3
 80029de:	280b      	cmp	r0, #11
 80029e0:	d803      	bhi.n	80029ea <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x4a>
 80029e2:	4b3f      	ldr	r3, [pc, #252]	; (8002ae0 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x140>)
 80029e4:	4a3b      	ldr	r2, [pc, #236]	; (8002ad4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 80029e6:	21a5      	movs	r1, #165	; 0xa5
 80029e8:	e7e8      	b.n	80029bc <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    Application::getInstance()->clearAllTimerWidgets();
 80029ea:	f010 fff1 	bl	80139d0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80029ee:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8002ae8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x148>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 80029f2:	3004      	adds	r0, #4
 80029f4:	f011 f852 	bl	8013a9c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80029f8:	f8d9 0000 	ldr.w	r0, [r9]
 80029fc:	b110      	cbz	r0, 8002a04 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 80029fe:	6803      	ldr	r3, [r0, #0]
 8002a00:	68db      	ldr	r3, [r3, #12]
 8002a02:	4798      	blx	r3
    if (*currentTrans)
 8002a04:	f8d9 0000 	ldr.w	r0, [r9]
 8002a08:	b110      	cbz	r0, 8002a10 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 8002a0a:	6803      	ldr	r3, [r0, #0]
 8002a0c:	681b      	ldr	r3, [r3, #0]
 8002a0e:	4798      	blx	r3
    if (*currentScreen)
 8002a10:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 8002aec <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x14c>
 8002a14:	f8d8 0000 	ldr.w	r0, [r8]
 8002a18:	b110      	cbz	r0, 8002a20 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 8002a1a:	6803      	ldr	r3, [r0, #0]
 8002a1c:	695b      	ldr	r3, [r3, #20]
 8002a1e:	4798      	blx	r3
    if (*currentPresenter)
 8002a20:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8002a24:	b110      	cbz	r0, 8002a2c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 8002a26:	6803      	ldr	r3, [r0, #0]
 8002a28:	685b      	ldr	r3, [r3, #4]
 8002a2a:	4798      	blx	r3
    if (*currentScreen)
 8002a2c:	f8d8 0000 	ldr.w	r0, [r8]
 8002a30:	b110      	cbz	r0, 8002a38 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 8002a32:	6803      	ldr	r3, [r0, #0]
 8002a34:	681b      	ldr	r3, [r3, #0]
 8002a36:	4798      	blx	r3
    if (*currentPresenter)
 8002a38:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8002a3c:	b110      	cbz	r0, 8002a44 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 8002a3e:	6803      	ldr	r3, [r0, #0]
 8002a40:	689b      	ldr	r3, [r3, #8]
 8002a42:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002a44:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8002a46:	6803      	ldr	r3, [r0, #0]
 8002a48:	2100      	movs	r1, #0
 8002a4a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002a4c:	4798      	blx	r3
        : screenContainer(0), done(false)
 8002a4e:	f04f 0b00 	mov.w	fp, #0
 8002a52:	4b24      	ldr	r3, [pc, #144]	; (8002ae4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x144>)
 8002a54:	6003      	str	r3, [r0, #0]
 8002a56:	4604      	mov	r4, r0
 8002a58:	f8c0 b004 	str.w	fp, [r0, #4]
 8002a5c:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002a60:	68a8      	ldr	r0, [r5, #8]
 8002a62:	6803      	ldr	r3, [r0, #0]
 8002a64:	4659      	mov	r1, fp
 8002a66:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002a68:	4798      	blx	r3
 8002a6a:	4606      	mov	r6, r0
 8002a6c:	f004 fc72 	bl	8007354 <_ZN16Shutting_OffViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002a70:	6868      	ldr	r0, [r5, #4]
 8002a72:	6803      	ldr	r3, [r0, #0]
 8002a74:	4659      	mov	r1, fp
 8002a76:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002a78:	4798      	blx	r3
 8002a7a:	4631      	mov	r1, r6
 8002a7c:	4605      	mov	r5, r0
 8002a7e:	f004 fc45 	bl	800730c <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>
    *currentTrans = newTransition;
 8002a82:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8002a86:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8002a8a:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8002a8e:	b1e5      	cbz	r5, 8002aca <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x12a>
 8002a90:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8002a92:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002a96:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 8002a98:	f8c5 a008 	str.w	sl, [r5, #8]
 8002a9c:	4630      	mov	r0, r6
 8002a9e:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 8002aa0:	63f5      	str	r5, [r6, #60]	; 0x3c
 8002aa2:	4798      	blx	r3
    newPresenter->activate();
 8002aa4:	682b      	ldr	r3, [r5, #0]
 8002aa6:	4628      	mov	r0, r5
 8002aa8:	681b      	ldr	r3, [r3, #0]
 8002aaa:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002aac:	4621      	mov	r1, r4
 8002aae:	4630      	mov	r0, r6
 8002ab0:	f012 fdba 	bl	8015628 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002ab4:	6823      	ldr	r3, [r4, #0]
 8002ab6:	4620      	mov	r0, r4
 8002ab8:	691b      	ldr	r3, [r3, #16]
 8002aba:	4798      	blx	r3
    newTransition->invalidate();
 8002abc:	6823      	ldr	r3, [r4, #0]
 8002abe:	695b      	ldr	r3, [r3, #20]
 8002ac0:	4620      	mov	r0, r4
}
 8002ac2:	b001      	add	sp, #4
 8002ac4:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002ac8:	4718      	bx	r3
    model->bind(newPresenter);
 8002aca:	462b      	mov	r3, r5
 8002acc:	e7e1      	b.n	8002a92 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xf2>
 8002ace:	bf00      	nop
 8002ad0:	08028c54 	.word	0x08028c54
 8002ad4:	08028ce2 	.word	0x08028ce2
 8002ad8:	08028df0 	.word	0x08028df0
 8002adc:	08028e37 	.word	0x08028e37
 8002ae0:	08028eda 	.word	0x08028eda
 8002ae4:	08029f8c 	.word	0x08029f8c
 8002ae8:	20013804 	.word	0x20013804
 8002aec:	20013800 	.word	0x20013800

08002af0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 8002af0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8002af2:	4604      	mov	r4, r0
        animationCounter++;
 8002af4:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 8002af6:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 8002af8:	3001      	adds	r0, #1
 8002afa:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 8002afc:	4298      	cmp	r0, r3
        animationCounter++;
 8002afe:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 8002b00:	d905      	bls.n	8002b0e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1e>
            done = true;
 8002b02:	2301      	movs	r3, #1
 8002b04:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 8002b06:	2300      	movs	r3, #0
 8002b08:	72a3      	strb	r3, [r4, #10]
    }
 8002b0a:	b003      	add	sp, #12
 8002b0c:	bd30      	pop	{r4, r5, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8002b0e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8002b12:	2100      	movs	r1, #0
 8002b14:	f012 fd8e 	bl	8015634 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8002b18:	f010 0201 	ands.w	r2, r0, #1
 8002b1c:	b283      	uxth	r3, r0
 8002b1e:	d128      	bne.n	8002b72 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x82>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8002b20:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002b22:	4b18      	ldr	r3, [pc, #96]	; (8002b84 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>)
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8002b24:	4818      	ldr	r0, [pc, #96]	; (8002b88 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x98>)
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002b26:	8819      	ldrh	r1, [r3, #0]
                const uint16_t prevSolidWidth = solid.getWidth();
 8002b28:	8b25      	ldrh	r5, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002b2a:	89e3      	ldrh	r3, [r4, #14]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8002b2c:	f9b0 0000 	ldrsh.w	r0, [r0]
 8002b30:	f8ad 0006 	strh.w	r0, [sp, #6]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002b34:	1aca      	subs	r2, r1, r3
                screenContainer->invalidateRect(r);
 8002b36:	6860      	ldr	r0, [r4, #4]
                const uint16_t delta = prevSolidWidth - solid.getWidth();
 8002b38:	442b      	add	r3, r5
 8002b3a:	1a5b      	subs	r3, r3, r1
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002b3c:	b212      	sxth	r2, r2
 8002b3e:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 8002b42:	6803      	ldr	r3, [r0, #0]
 8002b44:	8322      	strh	r2, [r4, #24]
 8002b46:	f8ad 2000 	strh.w	r2, [sp]
 8002b4a:	2200      	movs	r2, #0
 8002b4c:	691b      	ldr	r3, [r3, #16]
 8002b4e:	f8ad 2002 	strh.w	r2, [sp, #2]
 8002b52:	4669      	mov	r1, sp
 8002b54:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 8002b56:	7aa3      	ldrb	r3, [r4, #10]
 8002b58:	2b01      	cmp	r3, #1
 8002b5a:	d1d6      	bne.n	8002b0a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
 8002b5c:	4b0b      	ldr	r3, [pc, #44]	; (8002b8c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x9c>)
 8002b5e:	781b      	ldrb	r3, [r3, #0]
 8002b60:	2b00      	cmp	r3, #0
 8002b62:	d0d2      	beq.n	8002b0a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8002b64:	f010 ff34 	bl	80139d0 <_ZN8touchgfx11Application11getInstanceEv>
    }
 8002b68:	b003      	add	sp, #12
 8002b6a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8002b6e:	f010 bf35 	b.w	80139dc <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8002b72:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8002b76:	2800      	cmp	r0, #0
 8002b78:	bfd8      	it	le
 8002b7a:	460a      	movle	r2, r1
 8002b7c:	4413      	add	r3, r2
 8002b7e:	81e3      	strh	r3, [r4, #14]
 8002b80:	e7cf      	b.n	8002b22 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x32>
 8002b82:	bf00      	nop
 8002b84:	200137b0 	.word	0x200137b0
 8002b88:	200137b2 	.word	0x200137b2
 8002b8c:	200137ba 	.word	0x200137ba

08002b90 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv>:
{
 8002b90:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002b94:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 8002b98:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002b9a:	68a8      	ldr	r0, [r5, #8]
 8002b9c:	6803      	ldr	r3, [r0, #0]
 8002b9e:	6a1b      	ldr	r3, [r3, #32]
 8002ba0:	4798      	blx	r3
 8002ba2:	f241 137b 	movw	r3, #4475	; 0x117b
 8002ba6:	4298      	cmp	r0, r3
 8002ba8:	d805      	bhi.n	8002bb6 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x26>
 8002baa:	4b46      	ldr	r3, [pc, #280]	; (8002cc4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x134>)
 8002bac:	4a46      	ldr	r2, [pc, #280]	; (8002cc8 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 8002bae:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002bb0:	4846      	ldr	r0, [pc, #280]	; (8002ccc <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x13c>)
 8002bb2:	f024 fa5d 	bl	8027070 <__assert_func>
 8002bb6:	6868      	ldr	r0, [r5, #4]
 8002bb8:	6803      	ldr	r3, [r0, #0]
 8002bba:	6a1b      	ldr	r3, [r3, #32]
 8002bbc:	4798      	blx	r3
 8002bbe:	280f      	cmp	r0, #15
 8002bc0:	d803      	bhi.n	8002bca <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x3a>
 8002bc2:	4b43      	ldr	r3, [pc, #268]	; (8002cd0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x140>)
 8002bc4:	4a40      	ldr	r2, [pc, #256]	; (8002cc8 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 8002bc6:	21a4      	movs	r1, #164	; 0xa4
 8002bc8:	e7f2      	b.n	8002bb0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002bca:	68e8      	ldr	r0, [r5, #12]
 8002bcc:	6803      	ldr	r3, [r0, #0]
 8002bce:	6a1b      	ldr	r3, [r3, #32]
 8002bd0:	4798      	blx	r3
 8002bd2:	280b      	cmp	r0, #11
 8002bd4:	d803      	bhi.n	8002bde <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x4e>
 8002bd6:	4b3f      	ldr	r3, [pc, #252]	; (8002cd4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x144>)
 8002bd8:	4a3b      	ldr	r2, [pc, #236]	; (8002cc8 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 8002bda:	21a5      	movs	r1, #165	; 0xa5
 8002bdc:	e7e8      	b.n	8002bb0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8002bde:	f010 fef7 	bl	80139d0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8002be2:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8002cdc <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x14c>
 8002be6:	3004      	adds	r0, #4
 8002be8:	f010 ff58 	bl	8013a9c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8002bec:	f8d9 0000 	ldr.w	r0, [r9]
 8002bf0:	b110      	cbz	r0, 8002bf8 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 8002bf2:	6803      	ldr	r3, [r0, #0]
 8002bf4:	68db      	ldr	r3, [r3, #12]
 8002bf6:	4798      	blx	r3
    if (*currentTrans)
 8002bf8:	f8d9 0000 	ldr.w	r0, [r9]
 8002bfc:	b110      	cbz	r0, 8002c04 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 8002bfe:	6803      	ldr	r3, [r0, #0]
 8002c00:	681b      	ldr	r3, [r3, #0]
 8002c02:	4798      	blx	r3
    if (*currentScreen)
 8002c04:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 8002ce0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x150>
 8002c08:	f8d8 0000 	ldr.w	r0, [r8]
 8002c0c:	b110      	cbz	r0, 8002c14 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8002c0e:	6803      	ldr	r3, [r0, #0]
 8002c10:	695b      	ldr	r3, [r3, #20]
 8002c12:	4798      	blx	r3
    if (*currentPresenter)
 8002c14:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8002c18:	b110      	cbz	r0, 8002c20 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->deactivate();
 8002c1a:	6803      	ldr	r3, [r0, #0]
 8002c1c:	685b      	ldr	r3, [r3, #4]
 8002c1e:	4798      	blx	r3
    if (*currentScreen)
 8002c20:	f8d8 0000 	ldr.w	r0, [r8]
 8002c24:	b110      	cbz	r0, 8002c2c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x9c>
        (*currentScreen)->~Screen();
 8002c26:	6803      	ldr	r3, [r0, #0]
 8002c28:	681b      	ldr	r3, [r3, #0]
 8002c2a:	4798      	blx	r3
    if (*currentPresenter)
 8002c2c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8002c30:	b110      	cbz	r0, 8002c38 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8002c32:	6803      	ldr	r3, [r0, #0]
 8002c34:	689b      	ldr	r3, [r3, #8]
 8002c36:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002c38:	68e8      	ldr	r0, [r5, #12]
 8002c3a:	6803      	ldr	r3, [r0, #0]
 8002c3c:	2100      	movs	r1, #0
 8002c3e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002c40:	4798      	blx	r3
 8002c42:	f04f 0b00 	mov.w	fp, #0
 8002c46:	4b24      	ldr	r3, [pc, #144]	; (8002cd8 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x148>)
 8002c48:	6003      	str	r3, [r0, #0]
 8002c4a:	4604      	mov	r4, r0
 8002c4c:	f8c0 b004 	str.w	fp, [r0, #4]
 8002c50:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002c54:	68a8      	ldr	r0, [r5, #8]
 8002c56:	6803      	ldr	r3, [r0, #0]
 8002c58:	4659      	mov	r1, fp
 8002c5a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002c5c:	4798      	blx	r3
 8002c5e:	4606      	mov	r6, r0
 8002c60:	f004 f8d4 	bl	8006e0c <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002c64:	6868      	ldr	r0, [r5, #4]
 8002c66:	6803      	ldr	r3, [r0, #0]
 8002c68:	4659      	mov	r1, fp
 8002c6a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002c6c:	4798      	blx	r3
 8002c6e:	4631      	mov	r1, r6
 8002c70:	4605      	mov	r5, r0
 8002c72:	f004 f8a5 	bl	8006dc0 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 8002c76:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8002c7a:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8002c7e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8002c82:	b1e5      	cbz	r5, 8002cbe <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x12e>
 8002c84:	1d2b      	adds	r3, r5, #4
 8002c86:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002c8a:	6833      	ldr	r3, [r6, #0]
 8002c8c:	f8c5 a008 	str.w	sl, [r5, #8]
 8002c90:	4630      	mov	r0, r6
 8002c92:	68db      	ldr	r3, [r3, #12]
 8002c94:	63f5      	str	r5, [r6, #60]	; 0x3c
 8002c96:	4798      	blx	r3
    newPresenter->activate();
 8002c98:	682b      	ldr	r3, [r5, #0]
 8002c9a:	4628      	mov	r0, r5
 8002c9c:	681b      	ldr	r3, [r3, #0]
 8002c9e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002ca0:	4621      	mov	r1, r4
 8002ca2:	4630      	mov	r0, r6
 8002ca4:	f012 fcc0 	bl	8015628 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002ca8:	6823      	ldr	r3, [r4, #0]
 8002caa:	4620      	mov	r0, r4
 8002cac:	691b      	ldr	r3, [r3, #16]
 8002cae:	4798      	blx	r3
    newTransition->invalidate();
 8002cb0:	6823      	ldr	r3, [r4, #0]
 8002cb2:	695b      	ldr	r3, [r3, #20]
 8002cb4:	4620      	mov	r0, r4
}
 8002cb6:	b001      	add	sp, #4
 8002cb8:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002cbc:	4718      	bx	r3
    model->bind(newPresenter);
 8002cbe:	462b      	mov	r3, r5
 8002cc0:	e7e1      	b.n	8002c86 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xf6>
 8002cc2:	bf00      	nop
 8002cc4:	08028c54 	.word	0x08028c54
 8002cc8:	08028f7d 	.word	0x08028f7d
 8002ccc:	08028df0 	.word	0x08028df0
 8002cd0:	08028e37 	.word	0x08028e37
 8002cd4:	08028eda 	.word	0x08028eda
 8002cd8:	08029f8c 	.word	0x08029f8c
 8002cdc:	20013804 	.word	0x20013804
 8002ce0:	20013800 	.word	0x20013800

08002ce4 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8002ce4:	4b04      	ldr	r3, [pc, #16]	; (8002cf8 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 8002ce6:	681b      	ldr	r3, [r3, #0]
 8002ce8:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8002cec:	b10a      	cbz	r2, 8002cf2 <_ZN8touchgfx3HAL3lcdEv+0xe>
 8002cee:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8002cf0:	b900      	cbnz	r0, 8002cf4 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 8002cf2:	6898      	ldr	r0, [r3, #8]
    }
 8002cf4:	4770      	bx	lr
 8002cf6:	bf00      	nop
 8002cf8:	200137bc 	.word	0x200137bc

08002cfc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8002cfc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002cfe:	4604      	mov	r4, r0
 8002d00:	4617      	mov	r7, r2
 8002d02:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 8002d04:	f010 ff98 	bl	8013c38 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8002d08:	4b10      	ldr	r3, [pc, #64]	; (8002d4c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
 8002d0a:	601c      	str	r4, [r3, #0]
      model(m)
 8002d0c:	4b10      	ldr	r3, [pc, #64]	; (8002d50 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 8002d0e:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 8002d10:	4b10      	ldr	r3, [pc, #64]	; (8002d54 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
        : currentPresenter(0),
 8002d12:	2500      	movs	r5, #0
 8002d14:	e9c4 3551 	strd	r3, r5, [r4, #324]	; 0x144
        return instance;
 8002d18:	4b0f      	ldr	r3, [pc, #60]	; (8002d58 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 8002d1a:	e9c4 5553 	strd	r5, r5, [r4, #332]	; 0x14c
 8002d1e:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8002d20:	6803      	ldr	r3, [r0, #0]
 8002d22:	2101      	movs	r1, #1
 8002d24:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 8002d26:	e9c4 554f 	strd	r5, r5, [r4, #316]	; 0x13c
      model(m)
 8002d2a:	e9c4 7655 	strd	r7, r6, [r4, #340]	; 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8002d2e:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8002d30:	4628      	mov	r0, r5
 8002d32:	f003 ff4b 	bl	8006bcc <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8002d36:	f7ff ffd5 	bl	8002ce4 <_ZN8touchgfx3HAL3lcdEv>
 8002d3a:	f01a f94e 	bl	801cfda <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 8002d3e:	f7ff ffd1 	bl	8002ce4 <_ZN8touchgfx3HAL3lcdEv>
 8002d42:	f01a f9c5 	bl	801d0d0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 8002d46:	4620      	mov	r0, r4
 8002d48:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002d4a:	bf00      	nop
 8002d4c:	20013810 	.word	0x20013810
 8002d50:	08029f38 	.word	0x08029f38
 8002d54:	08029f20 	.word	0x08029f20
 8002d58:	200137bc 	.word	0x200137bc

08002d5c <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002d5c:	4b06      	ldr	r3, [pc, #24]	; (8002d78 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv+0x1c>)
 8002d5e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8002d62:	2300      	movs	r3, #0
 8002d64:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8002d68:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8002d6c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8002d70:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8002d74:	4770      	bx	lr
 8002d76:	bf00      	nop
 8002d78:	08002b91 	.word	0x08002b91

08002d7c <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>:
 8002d7c:	4b06      	ldr	r3, [pc, #24]	; (8002d98 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv+0x1c>)
 8002d7e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8002d82:	2300      	movs	r3, #0
 8002d84:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8002d88:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8002d8c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8002d90:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8002d94:	4770      	bx	lr
 8002d96:	bf00      	nop
 8002d98:	08003201 	.word	0x08003201

08002d9c <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>:
 8002d9c:	4b06      	ldr	r3, [pc, #24]	; (8002db8 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv+0x1c>)
 8002d9e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8002da2:	2300      	movs	r3, #0
 8002da4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8002da8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8002dac:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8002db0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8002db4:	4770      	bx	lr
 8002db6:	bf00      	nop
 8002db8:	08003da5 	.word	0x08003da5

08002dbc <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>:
 8002dbc:	4b06      	ldr	r3, [pc, #24]	; (8002dd8 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv+0x1c>)
 8002dbe:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8002dc2:	2300      	movs	r3, #0
 8002dc4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8002dc8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8002dcc:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8002dd0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8002dd4:	4770      	bx	lr
 8002dd6:	bf00      	nop
 8002dd8:	080030c1 	.word	0x080030c1

08002ddc <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>:
 8002ddc:	4b06      	ldr	r3, [pc, #24]	; (8002df8 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv+0x1c>)
 8002dde:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8002de2:	2300      	movs	r3, #0
 8002de4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8002de8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8002dec:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8002df0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8002df4:	4770      	bx	lr
 8002df6:	bf00      	nop
 8002df8:	08003c65 	.word	0x08003c65

08002dfc <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>:
 8002dfc:	4b06      	ldr	r3, [pc, #24]	; (8002e18 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv+0x1c>)
 8002dfe:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8002e02:	2300      	movs	r3, #0
 8002e04:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8002e08:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8002e0c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8002e10:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8002e14:	4770      	bx	lr
 8002e16:	bf00      	nop
 8002e18:	08003b25 	.word	0x08003b25

08002e1c <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>:
 8002e1c:	4b06      	ldr	r3, [pc, #24]	; (8002e38 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv+0x1c>)
 8002e1e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8002e22:	2300      	movs	r3, #0
 8002e24:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8002e28:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8002e2c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8002e30:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8002e34:	4770      	bx	lr
 8002e36:	bf00      	nop
 8002e38:	080039e5 	.word	0x080039e5

08002e3c <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>:
 8002e3c:	4b06      	ldr	r3, [pc, #24]	; (8002e58 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv+0x1c>)
 8002e3e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8002e42:	2300      	movs	r3, #0
 8002e44:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8002e48:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8002e4c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8002e50:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8002e54:	4770      	bx	lr
 8002e56:	bf00      	nop
 8002e58:	080038a5 	.word	0x080038a5

08002e5c <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>:
 8002e5c:	4b06      	ldr	r3, [pc, #24]	; (8002e78 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv+0x1c>)
 8002e5e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8002e62:	2300      	movs	r3, #0
 8002e64:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8002e68:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8002e6c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8002e70:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8002e74:	4770      	bx	lr
 8002e76:	bf00      	nop
 8002e78:	08002f81 	.word	0x08002f81

08002e7c <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>:
 8002e7c:	4b06      	ldr	r3, [pc, #24]	; (8002e98 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv+0x1c>)
 8002e7e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8002e82:	2300      	movs	r3, #0
 8002e84:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8002e88:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8002e8c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8002e90:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8002e94:	4770      	bx	lr
 8002e96:	bf00      	nop
 8002e98:	08003765 	.word	0x08003765

08002e9c <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>:
 8002e9c:	4b06      	ldr	r3, [pc, #24]	; (8002eb8 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv+0x1c>)
 8002e9e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8002ea2:	2300      	movs	r3, #0
 8002ea4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8002ea8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8002eac:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8002eb0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8002eb4:	4770      	bx	lr
 8002eb6:	bf00      	nop
 8002eb8:	08003625 	.word	0x08003625

08002ebc <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv>:
 8002ebc:	4b06      	ldr	r3, [pc, #24]	; (8002ed8 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv+0x1c>)
 8002ebe:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8002ec2:	2300      	movs	r3, #0
 8002ec4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8002ec8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8002ecc:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8002ed0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8002ed4:	4770      	bx	lr
 8002ed6:	bf00      	nop
 8002ed8:	080034e5 	.word	0x080034e5

08002edc <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>:
 8002edc:	4b06      	ldr	r3, [pc, #24]	; (8002ef8 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv+0x1c>)
 8002ede:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8002ee2:	2300      	movs	r3, #0
 8002ee4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8002ee8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8002eec:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8002ef0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8002ef4:	4770      	bx	lr
 8002ef6:	bf00      	nop
 8002ef8:	080033a5 	.word	0x080033a5

08002efc <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>:
 8002efc:	4b06      	ldr	r3, [pc, #24]	; (8002f18 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv+0x1c>)
 8002efe:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8002f02:	2300      	movs	r3, #0
 8002f04:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8002f08:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8002f0c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8002f10:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8002f14:	4770      	bx	lr
 8002f16:	bf00      	nop
 8002f18:	080029a1 	.word	0x080029a1

08002f1c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>:
 8002f1c:	6803      	ldr	r3, [r0, #0]
 8002f1e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002f20:	4718      	bx	r3
	...

08002f24 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>:
          solid()
 8002f24:	4b12      	ldr	r3, [pc, #72]	; (8002f70 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 8002f26:	b513      	push	{r0, r1, r4, lr}
          solid()
 8002f28:	6003      	str	r3, [r0, #0]
 8002f2a:	f44f 7380 	mov.w	r3, #256	; 0x100
 8002f2e:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 8002f30:	4b10      	ldr	r3, [pc, #64]	; (8002f74 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 8002f32:	7241      	strb	r1, [r0, #9]
 8002f34:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8002f36:	4910      	ldr	r1, [pc, #64]	; (8002f78 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 8002f38:	4b10      	ldr	r3, [pc, #64]	; (8002f7c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8002f3a:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 8002f3e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8002f42:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 8002f44:	2200      	movs	r2, #0
 8002f46:	6042      	str	r2, [r0, #4]
 8002f48:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 8002f4a:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 8002f4c:	81c2      	strh	r2, [r0, #14]
          solid()
 8002f4e:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8002f52:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8002f56:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 8002f5a:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 8002f5e:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8002f60:	9100      	str	r1, [sp, #0]
 8002f62:	3010      	adds	r0, #16
 8002f64:	4611      	mov	r1, r2
 8002f66:	f7ff fa0e 	bl	8002386 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 8002f6a:	4620      	mov	r0, r4
 8002f6c:	b002      	add	sp, #8
 8002f6e:	bd10      	pop	{r4, pc}
 8002f70:	08029fd4 	.word	0x08029fd4
 8002f74:	08029eb8 	.word	0x08029eb8
 8002f78:	200137b2 	.word	0x200137b2
 8002f7c:	200137b0 	.word	0x200137b0

08002f80 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv>:
{
 8002f80:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002f84:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8002f88:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002f8a:	68a0      	ldr	r0, [r4, #8]
 8002f8c:	6803      	ldr	r3, [r0, #0]
 8002f8e:	6a1b      	ldr	r3, [r3, #32]
 8002f90:	4798      	blx	r3
 8002f92:	f241 03eb 	movw	r3, #4331	; 0x10eb
 8002f96:	4298      	cmp	r0, r3
 8002f98:	d805      	bhi.n	8002fa6 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x26>
 8002f9a:	4b42      	ldr	r3, [pc, #264]	; (80030a4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x124>)
 8002f9c:	4a42      	ldr	r2, [pc, #264]	; (80030a8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8002f9e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002fa0:	4842      	ldr	r0, [pc, #264]	; (80030ac <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x12c>)
 8002fa2:	f024 f865 	bl	8027070 <__assert_func>
 8002fa6:	6860      	ldr	r0, [r4, #4]
 8002fa8:	6803      	ldr	r3, [r0, #0]
 8002faa:	6a1b      	ldr	r3, [r3, #32]
 8002fac:	4798      	blx	r3
 8002fae:	280f      	cmp	r0, #15
 8002fb0:	d803      	bhi.n	8002fba <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x3a>
 8002fb2:	4b3f      	ldr	r3, [pc, #252]	; (80030b0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x130>)
 8002fb4:	4a3c      	ldr	r2, [pc, #240]	; (80030a8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8002fb6:	21a4      	movs	r1, #164	; 0xa4
 8002fb8:	e7f2      	b.n	8002fa0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002fba:	68e0      	ldr	r0, [r4, #12]
 8002fbc:	6803      	ldr	r3, [r0, #0]
 8002fbe:	6a1b      	ldr	r3, [r3, #32]
 8002fc0:	4798      	blx	r3
 8002fc2:	2837      	cmp	r0, #55	; 0x37
 8002fc4:	d803      	bhi.n	8002fce <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x4e>
 8002fc6:	4b3b      	ldr	r3, [pc, #236]	; (80030b4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x134>)
 8002fc8:	4a37      	ldr	r2, [pc, #220]	; (80030a8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8002fca:	21a5      	movs	r1, #165	; 0xa5
 8002fcc:	e7e8      	b.n	8002fa0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8002fce:	f010 fcff 	bl	80139d0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8002fd2:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80030b8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x138>
 8002fd6:	3004      	adds	r0, #4
 8002fd8:	f010 fd60 	bl	8013a9c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8002fdc:	f8d9 0000 	ldr.w	r0, [r9]
 8002fe0:	b110      	cbz	r0, 8002fe8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x68>
        (*currentTrans)->tearDown();
 8002fe2:	6803      	ldr	r3, [r0, #0]
 8002fe4:	68db      	ldr	r3, [r3, #12]
 8002fe6:	4798      	blx	r3
    if (*currentTrans)
 8002fe8:	f8d9 0000 	ldr.w	r0, [r9]
 8002fec:	b110      	cbz	r0, 8002ff4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x74>
        (*currentTrans)->~Transition();
 8002fee:	6803      	ldr	r3, [r0, #0]
 8002ff0:	681b      	ldr	r3, [r3, #0]
 8002ff2:	4798      	blx	r3
    if (*currentScreen)
 8002ff4:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80030bc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x13c>
 8002ff8:	f8d8 0000 	ldr.w	r0, [r8]
 8002ffc:	b110      	cbz	r0, 8003004 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8002ffe:	6803      	ldr	r3, [r0, #0]
 8003000:	695b      	ldr	r3, [r3, #20]
 8003002:	4798      	blx	r3
    if (*currentPresenter)
 8003004:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003008:	b110      	cbz	r0, 8003010 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x90>
        (*currentPresenter)->deactivate();
 800300a:	6803      	ldr	r3, [r0, #0]
 800300c:	685b      	ldr	r3, [r3, #4]
 800300e:	4798      	blx	r3
    if (*currentScreen)
 8003010:	f8d8 0000 	ldr.w	r0, [r8]
 8003014:	b110      	cbz	r0, 800301c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x9c>
        (*currentScreen)->~Screen();
 8003016:	6803      	ldr	r3, [r0, #0]
 8003018:	681b      	ldr	r3, [r3, #0]
 800301a:	4798      	blx	r3
    if (*currentPresenter)
 800301c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003020:	b110      	cbz	r0, 8003028 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8003022:	6803      	ldr	r3, [r0, #0]
 8003024:	689b      	ldr	r3, [r3, #8]
 8003026:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003028:	68e0      	ldr	r0, [r4, #12]
 800302a:	2100      	movs	r1, #0
 800302c:	f7ff ff76 	bl	8002f1c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8003030:	2114      	movs	r1, #20
 8003032:	4605      	mov	r5, r0
 8003034:	f7ff ff76 	bl	8002f24 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003038:	68a0      	ldr	r0, [r4, #8]
 800303a:	6803      	ldr	r3, [r0, #0]
 800303c:	2100      	movs	r1, #0
 800303e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003040:	4798      	blx	r3
 8003042:	4606      	mov	r6, r0
 8003044:	f003 ff9c 	bl	8006f80 <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003048:	6860      	ldr	r0, [r4, #4]
 800304a:	6803      	ldr	r3, [r0, #0]
 800304c:	2100      	movs	r1, #0
 800304e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003050:	4798      	blx	r3
 8003052:	4631      	mov	r1, r6
 8003054:	4604      	mov	r4, r0
 8003056:	f003 ff6d 	bl	8006f34 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 800305a:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800305e:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003062:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003066:	b1dc      	cbz	r4, 80030a0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x120>
 8003068:	1d23      	adds	r3, r4, #4
 800306a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800306e:	6833      	ldr	r3, [r6, #0]
 8003070:	f8c4 a008 	str.w	sl, [r4, #8]
 8003074:	4630      	mov	r0, r6
 8003076:	68db      	ldr	r3, [r3, #12]
 8003078:	63f4      	str	r4, [r6, #60]	; 0x3c
 800307a:	4798      	blx	r3
    newPresenter->activate();
 800307c:	6823      	ldr	r3, [r4, #0]
 800307e:	4620      	mov	r0, r4
 8003080:	681b      	ldr	r3, [r3, #0]
 8003082:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003084:	4629      	mov	r1, r5
 8003086:	4630      	mov	r0, r6
 8003088:	f012 face 	bl	8015628 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800308c:	682b      	ldr	r3, [r5, #0]
 800308e:	4628      	mov	r0, r5
 8003090:	691b      	ldr	r3, [r3, #16]
 8003092:	4798      	blx	r3
    newTransition->invalidate();
 8003094:	682b      	ldr	r3, [r5, #0]
 8003096:	4628      	mov	r0, r5
 8003098:	695b      	ldr	r3, [r3, #20]
}
 800309a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800309e:	4718      	bx	r3
    model->bind(newPresenter);
 80030a0:	4623      	mov	r3, r4
 80030a2:	e7e2      	b.n	800306a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xea>
 80030a4:	08028c54 	.word	0x08028c54
 80030a8:	08029085 	.word	0x08029085
 80030ac:	08028df0 	.word	0x08028df0
 80030b0:	08028e37 	.word	0x08028e37
 80030b4:	08028eda 	.word	0x08028eda
 80030b8:	20013804 	.word	0x20013804
 80030bc:	20013800 	.word	0x20013800

080030c0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv>:
{
 80030c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80030c4:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80030c8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80030ca:	68a0      	ldr	r0, [r4, #8]
 80030cc:	6803      	ldr	r3, [r0, #0]
 80030ce:	6a1b      	ldr	r3, [r3, #32]
 80030d0:	4798      	blx	r3
 80030d2:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 80030d6:	d205      	bcs.n	80030e4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x24>
 80030d8:	4b42      	ldr	r3, [pc, #264]	; (80031e4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x124>)
 80030da:	4a43      	ldr	r2, [pc, #268]	; (80031e8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 80030dc:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80030de:	4843      	ldr	r0, [pc, #268]	; (80031ec <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x12c>)
 80030e0:	f023 ffc6 	bl	8027070 <__assert_func>
 80030e4:	6860      	ldr	r0, [r4, #4]
 80030e6:	6803      	ldr	r3, [r0, #0]
 80030e8:	6a1b      	ldr	r3, [r3, #32]
 80030ea:	4798      	blx	r3
 80030ec:	280f      	cmp	r0, #15
 80030ee:	d803      	bhi.n	80030f8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x38>
 80030f0:	4b3f      	ldr	r3, [pc, #252]	; (80031f0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x130>)
 80030f2:	4a3d      	ldr	r2, [pc, #244]	; (80031e8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 80030f4:	21a4      	movs	r1, #164	; 0xa4
 80030f6:	e7f2      	b.n	80030de <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80030f8:	68e0      	ldr	r0, [r4, #12]
 80030fa:	6803      	ldr	r3, [r0, #0]
 80030fc:	6a1b      	ldr	r3, [r3, #32]
 80030fe:	4798      	blx	r3
 8003100:	2837      	cmp	r0, #55	; 0x37
 8003102:	d803      	bhi.n	800310c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x4c>
 8003104:	4b3b      	ldr	r3, [pc, #236]	; (80031f4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x134>)
 8003106:	4a38      	ldr	r2, [pc, #224]	; (80031e8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8003108:	21a5      	movs	r1, #165	; 0xa5
 800310a:	e7e8      	b.n	80030de <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 800310c:	f010 fc60 	bl	80139d0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003110:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80031f8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x138>
 8003114:	3004      	adds	r0, #4
 8003116:	f010 fcc1 	bl	8013a9c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800311a:	f8d9 0000 	ldr.w	r0, [r9]
 800311e:	b110      	cbz	r0, 8003126 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8003120:	6803      	ldr	r3, [r0, #0]
 8003122:	68db      	ldr	r3, [r3, #12]
 8003124:	4798      	blx	r3
    if (*currentTrans)
 8003126:	f8d9 0000 	ldr.w	r0, [r9]
 800312a:	b110      	cbz	r0, 8003132 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 800312c:	6803      	ldr	r3, [r0, #0]
 800312e:	681b      	ldr	r3, [r3, #0]
 8003130:	4798      	blx	r3
    if (*currentScreen)
 8003132:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 80031fc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x13c>
 8003136:	f8d8 0000 	ldr.w	r0, [r8]
 800313a:	b110      	cbz	r0, 8003142 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 800313c:	6803      	ldr	r3, [r0, #0]
 800313e:	695b      	ldr	r3, [r3, #20]
 8003140:	4798      	blx	r3
    if (*currentPresenter)
 8003142:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003146:	b110      	cbz	r0, 800314e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8003148:	6803      	ldr	r3, [r0, #0]
 800314a:	685b      	ldr	r3, [r3, #4]
 800314c:	4798      	blx	r3
    if (*currentScreen)
 800314e:	f8d8 0000 	ldr.w	r0, [r8]
 8003152:	b110      	cbz	r0, 800315a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8003154:	6803      	ldr	r3, [r0, #0]
 8003156:	681b      	ldr	r3, [r3, #0]
 8003158:	4798      	blx	r3
    if (*currentPresenter)
 800315a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800315e:	b110      	cbz	r0, 8003166 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8003160:	6803      	ldr	r3, [r0, #0]
 8003162:	689b      	ldr	r3, [r3, #8]
 8003164:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003166:	68e0      	ldr	r0, [r4, #12]
 8003168:	2100      	movs	r1, #0
 800316a:	f7ff fed7 	bl	8002f1c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 800316e:	2114      	movs	r1, #20
 8003170:	4605      	mov	r5, r0
 8003172:	f7ff fed7 	bl	8002f24 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003176:	68a0      	ldr	r0, [r4, #8]
 8003178:	6803      	ldr	r3, [r0, #0]
 800317a:	2100      	movs	r1, #0
 800317c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800317e:	4798      	blx	r3
 8003180:	4606      	mov	r6, r0
 8003182:	f003 fea3 	bl	8006ecc <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003186:	6860      	ldr	r0, [r4, #4]
 8003188:	6803      	ldr	r3, [r0, #0]
 800318a:	2100      	movs	r1, #0
 800318c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800318e:	4798      	blx	r3
 8003190:	4631      	mov	r1, r6
 8003192:	4604      	mov	r4, r0
 8003194:	f003 fe74 	bl	8006e80 <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 8003198:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800319c:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80031a0:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80031a4:	b1dc      	cbz	r4, 80031de <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x11e>
 80031a6:	1d23      	adds	r3, r4, #4
 80031a8:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80031ac:	6833      	ldr	r3, [r6, #0]
 80031ae:	f8c4 a008 	str.w	sl, [r4, #8]
 80031b2:	4630      	mov	r0, r6
 80031b4:	68db      	ldr	r3, [r3, #12]
 80031b6:	63f4      	str	r4, [r6, #60]	; 0x3c
 80031b8:	4798      	blx	r3
    newPresenter->activate();
 80031ba:	6823      	ldr	r3, [r4, #0]
 80031bc:	4620      	mov	r0, r4
 80031be:	681b      	ldr	r3, [r3, #0]
 80031c0:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80031c2:	4629      	mov	r1, r5
 80031c4:	4630      	mov	r0, r6
 80031c6:	f012 fa2f 	bl	8015628 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80031ca:	682b      	ldr	r3, [r5, #0]
 80031cc:	4628      	mov	r0, r5
 80031ce:	691b      	ldr	r3, [r3, #16]
 80031d0:	4798      	blx	r3
    newTransition->invalidate();
 80031d2:	682b      	ldr	r3, [r5, #0]
 80031d4:	4628      	mov	r0, r5
 80031d6:	695b      	ldr	r3, [r3, #20]
}
 80031d8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80031dc:	4718      	bx	r3
    model->bind(newPresenter);
 80031de:	4623      	mov	r3, r4
 80031e0:	e7e2      	b.n	80031a8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xe8>
 80031e2:	bf00      	nop
 80031e4:	08028c54 	.word	0x08028c54
 80031e8:	080291b5 	.word	0x080291b5
 80031ec:	08028df0 	.word	0x08028df0
 80031f0:	08028e37 	.word	0x08028e37
 80031f4:	08028eda 	.word	0x08028eda
 80031f8:	20013804 	.word	0x20013804
 80031fc:	20013800 	.word	0x20013800

08003200 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv>:
{
 8003200:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003204:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003208:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800320a:	68a0      	ldr	r0, [r4, #8]
 800320c:	6803      	ldr	r3, [r0, #0]
 800320e:	6a1b      	ldr	r3, [r3, #32]
 8003210:	4798      	blx	r3
 8003212:	f241 137b 	movw	r3, #4475	; 0x117b
 8003216:	4298      	cmp	r0, r3
 8003218:	d805      	bhi.n	8003226 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x26>
 800321a:	4b42      	ldr	r3, [pc, #264]	; (8003324 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x124>)
 800321c:	4a42      	ldr	r2, [pc, #264]	; (8003328 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 800321e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003220:	4842      	ldr	r0, [pc, #264]	; (800332c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x12c>)
 8003222:	f023 ff25 	bl	8027070 <__assert_func>
 8003226:	6860      	ldr	r0, [r4, #4]
 8003228:	6803      	ldr	r3, [r0, #0]
 800322a:	6a1b      	ldr	r3, [r3, #32]
 800322c:	4798      	blx	r3
 800322e:	280f      	cmp	r0, #15
 8003230:	d803      	bhi.n	800323a <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x3a>
 8003232:	4b3f      	ldr	r3, [pc, #252]	; (8003330 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x130>)
 8003234:	4a3c      	ldr	r2, [pc, #240]	; (8003328 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8003236:	21a4      	movs	r1, #164	; 0xa4
 8003238:	e7f2      	b.n	8003220 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800323a:	68e0      	ldr	r0, [r4, #12]
 800323c:	6803      	ldr	r3, [r0, #0]
 800323e:	6a1b      	ldr	r3, [r3, #32]
 8003240:	4798      	blx	r3
 8003242:	2837      	cmp	r0, #55	; 0x37
 8003244:	d803      	bhi.n	800324e <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x4e>
 8003246:	4b3b      	ldr	r3, [pc, #236]	; (8003334 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x134>)
 8003248:	4a37      	ldr	r2, [pc, #220]	; (8003328 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 800324a:	21a5      	movs	r1, #165	; 0xa5
 800324c:	e7e8      	b.n	8003220 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800324e:	f010 fbbf 	bl	80139d0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003252:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003338 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x138>
 8003256:	3004      	adds	r0, #4
 8003258:	f010 fc20 	bl	8013a9c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800325c:	f8d9 0000 	ldr.w	r0, [r9]
 8003260:	b110      	cbz	r0, 8003268 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x68>
        (*currentTrans)->tearDown();
 8003262:	6803      	ldr	r3, [r0, #0]
 8003264:	68db      	ldr	r3, [r3, #12]
 8003266:	4798      	blx	r3
    if (*currentTrans)
 8003268:	f8d9 0000 	ldr.w	r0, [r9]
 800326c:	b110      	cbz	r0, 8003274 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x74>
        (*currentTrans)->~Transition();
 800326e:	6803      	ldr	r3, [r0, #0]
 8003270:	681b      	ldr	r3, [r3, #0]
 8003272:	4798      	blx	r3
    if (*currentScreen)
 8003274:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 800333c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x13c>
 8003278:	f8d8 0000 	ldr.w	r0, [r8]
 800327c:	b110      	cbz	r0, 8003284 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800327e:	6803      	ldr	r3, [r0, #0]
 8003280:	695b      	ldr	r3, [r3, #20]
 8003282:	4798      	blx	r3
    if (*currentPresenter)
 8003284:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003288:	b110      	cbz	r0, 8003290 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x90>
        (*currentPresenter)->deactivate();
 800328a:	6803      	ldr	r3, [r0, #0]
 800328c:	685b      	ldr	r3, [r3, #4]
 800328e:	4798      	blx	r3
    if (*currentScreen)
 8003290:	f8d8 0000 	ldr.w	r0, [r8]
 8003294:	b110      	cbz	r0, 800329c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x9c>
        (*currentScreen)->~Screen();
 8003296:	6803      	ldr	r3, [r0, #0]
 8003298:	681b      	ldr	r3, [r3, #0]
 800329a:	4798      	blx	r3
    if (*currentPresenter)
 800329c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80032a0:	b110      	cbz	r0, 80032a8 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80032a2:	6803      	ldr	r3, [r0, #0]
 80032a4:	689b      	ldr	r3, [r3, #8]
 80032a6:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80032a8:	68e0      	ldr	r0, [r4, #12]
 80032aa:	2100      	movs	r1, #0
 80032ac:	f7ff fe36 	bl	8002f1c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 80032b0:	2114      	movs	r1, #20
 80032b2:	4605      	mov	r5, r0
 80032b4:	f7ff fe36 	bl	8002f24 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80032b8:	68a0      	ldr	r0, [r4, #8]
 80032ba:	6803      	ldr	r3, [r0, #0]
 80032bc:	2100      	movs	r1, #0
 80032be:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80032c0:	4798      	blx	r3
 80032c2:	4606      	mov	r6, r0
 80032c4:	f003 fda2 	bl	8006e0c <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80032c8:	6860      	ldr	r0, [r4, #4]
 80032ca:	6803      	ldr	r3, [r0, #0]
 80032cc:	2100      	movs	r1, #0
 80032ce:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80032d0:	4798      	blx	r3
 80032d2:	4631      	mov	r1, r6
 80032d4:	4604      	mov	r4, r0
 80032d6:	f003 fd73 	bl	8006dc0 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 80032da:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80032de:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80032e2:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80032e6:	b1dc      	cbz	r4, 8003320 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x120>
 80032e8:	1d23      	adds	r3, r4, #4
 80032ea:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80032ee:	6833      	ldr	r3, [r6, #0]
 80032f0:	f8c4 a008 	str.w	sl, [r4, #8]
 80032f4:	4630      	mov	r0, r6
 80032f6:	68db      	ldr	r3, [r3, #12]
 80032f8:	63f4      	str	r4, [r6, #60]	; 0x3c
 80032fa:	4798      	blx	r3
    newPresenter->activate();
 80032fc:	6823      	ldr	r3, [r4, #0]
 80032fe:	4620      	mov	r0, r4
 8003300:	681b      	ldr	r3, [r3, #0]
 8003302:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003304:	4629      	mov	r1, r5
 8003306:	4630      	mov	r0, r6
 8003308:	f012 f98e 	bl	8015628 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800330c:	682b      	ldr	r3, [r5, #0]
 800330e:	4628      	mov	r0, r5
 8003310:	691b      	ldr	r3, [r3, #16]
 8003312:	4798      	blx	r3
    newTransition->invalidate();
 8003314:	682b      	ldr	r3, [r5, #0]
 8003316:	4628      	mov	r0, r5
 8003318:	695b      	ldr	r3, [r3, #20]
}
 800331a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800331e:	4718      	bx	r3
    model->bind(newPresenter);
 8003320:	4623      	mov	r3, r4
 8003322:	e7e2      	b.n	80032ea <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xea>
 8003324:	08028c54 	.word	0x08028c54
 8003328:	080292d3 	.word	0x080292d3
 800332c:	08028df0 	.word	0x08028df0
 8003330:	08028e37 	.word	0x08028e37
 8003334:	08028eda 	.word	0x08028eda
 8003338:	20013804 	.word	0x20013804
 800333c:	20013800 	.word	0x20013800

08003340 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>:
 8003340:	6803      	ldr	r3, [r0, #0]
 8003342:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003344:	4718      	bx	r3
	...

08003348 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>:
          solid()
 8003348:	4b12      	ldr	r3, [pc, #72]	; (8003394 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 800334a:	b513      	push	{r0, r1, r4, lr}
          solid()
 800334c:	6003      	str	r3, [r0, #0]
 800334e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8003352:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 8003354:	4b10      	ldr	r3, [pc, #64]	; (8003398 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 8003356:	7241      	strb	r1, [r0, #9]
 8003358:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 800335a:	4910      	ldr	r1, [pc, #64]	; (800339c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 800335c:	4b10      	ldr	r3, [pc, #64]	; (80033a0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 800335e:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 8003362:	f9b3 3000 	ldrsh.w	r3, [r3]
 8003366:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 8003368:	2200      	movs	r2, #0
 800336a:	6042      	str	r2, [r0, #4]
 800336c:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 800336e:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 8003370:	81c2      	strh	r2, [r0, #14]
          solid()
 8003372:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8003376:	e9c0 2207 	strd	r2, r2, [r0, #28]
 800337a:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 800337e:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 8003382:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003384:	9100      	str	r1, [sp, #0]
 8003386:	3010      	adds	r0, #16
 8003388:	4611      	mov	r1, r2
 800338a:	f7fe fffc 	bl	8002386 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 800338e:	4620      	mov	r0, r4
 8003390:	b002      	add	sp, #8
 8003392:	bd10      	pop	{r4, pc}
 8003394:	08029fb0 	.word	0x08029fb0
 8003398:	08029eb8 	.word	0x08029eb8
 800339c:	200137b2 	.word	0x200137b2
 80033a0:	200137b0 	.word	0x200137b0

080033a4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv>:
{
 80033a4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Project_InfoView, Project_InfoPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80033a8:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80033ac:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80033ae:	68a0      	ldr	r0, [r4, #8]
 80033b0:	6803      	ldr	r3, [r0, #0]
 80033b2:	6a1b      	ldr	r3, [r3, #32]
 80033b4:	4798      	blx	r3
 80033b6:	f241 035b 	movw	r3, #4187	; 0x105b
 80033ba:	4298      	cmp	r0, r3
 80033bc:	d805      	bhi.n	80033ca <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x26>
 80033be:	4b42      	ldr	r3, [pc, #264]	; (80034c8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x124>)
 80033c0:	4a42      	ldr	r2, [pc, #264]	; (80034cc <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 80033c2:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80033c4:	4842      	ldr	r0, [pc, #264]	; (80034d0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x12c>)
 80033c6:	f023 fe53 	bl	8027070 <__assert_func>
 80033ca:	6860      	ldr	r0, [r4, #4]
 80033cc:	6803      	ldr	r3, [r0, #0]
 80033ce:	6a1b      	ldr	r3, [r3, #32]
 80033d0:	4798      	blx	r3
 80033d2:	280f      	cmp	r0, #15
 80033d4:	d803      	bhi.n	80033de <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x3a>
 80033d6:	4b3f      	ldr	r3, [pc, #252]	; (80034d4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x130>)
 80033d8:	4a3c      	ldr	r2, [pc, #240]	; (80034cc <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 80033da:	21a4      	movs	r1, #164	; 0xa4
 80033dc:	e7f2      	b.n	80033c4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80033de:	68e0      	ldr	r0, [r4, #12]
 80033e0:	6803      	ldr	r3, [r0, #0]
 80033e2:	6a1b      	ldr	r3, [r3, #32]
 80033e4:	4798      	blx	r3
 80033e6:	2837      	cmp	r0, #55	; 0x37
 80033e8:	d803      	bhi.n	80033f2 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x4e>
 80033ea:	4b3b      	ldr	r3, [pc, #236]	; (80034d8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x134>)
 80033ec:	4a37      	ldr	r2, [pc, #220]	; (80034cc <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 80033ee:	21a5      	movs	r1, #165	; 0xa5
 80033f0:	e7e8      	b.n	80033c4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80033f2:	f010 faed 	bl	80139d0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80033f6:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80034dc <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x138>
 80033fa:	3004      	adds	r0, #4
 80033fc:	f010 fb4e 	bl	8013a9c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003400:	f8d9 0000 	ldr.w	r0, [r9]
 8003404:	b110      	cbz	r0, 800340c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8003406:	6803      	ldr	r3, [r0, #0]
 8003408:	68db      	ldr	r3, [r3, #12]
 800340a:	4798      	blx	r3
    if (*currentTrans)
 800340c:	f8d9 0000 	ldr.w	r0, [r9]
 8003410:	b110      	cbz	r0, 8003418 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8003412:	6803      	ldr	r3, [r0, #0]
 8003414:	681b      	ldr	r3, [r3, #0]
 8003416:	4798      	blx	r3
    if (*currentScreen)
 8003418:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80034e0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x13c>
 800341c:	f8d8 0000 	ldr.w	r0, [r8]
 8003420:	b110      	cbz	r0, 8003428 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8003422:	6803      	ldr	r3, [r0, #0]
 8003424:	695b      	ldr	r3, [r3, #20]
 8003426:	4798      	blx	r3
    if (*currentPresenter)
 8003428:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800342c:	b110      	cbz	r0, 8003434 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800342e:	6803      	ldr	r3, [r0, #0]
 8003430:	685b      	ldr	r3, [r3, #4]
 8003432:	4798      	blx	r3
    if (*currentScreen)
 8003434:	f8d8 0000 	ldr.w	r0, [r8]
 8003438:	b110      	cbz	r0, 8003440 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 800343a:	6803      	ldr	r3, [r0, #0]
 800343c:	681b      	ldr	r3, [r3, #0]
 800343e:	4798      	blx	r3
    if (*currentPresenter)
 8003440:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003444:	b110      	cbz	r0, 800344c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8003446:	6803      	ldr	r3, [r0, #0]
 8003448:	689b      	ldr	r3, [r3, #8]
 800344a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800344c:	68e0      	ldr	r0, [r4, #12]
 800344e:	2100      	movs	r1, #0
 8003450:	f7ff ff76 	bl	8003340 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8003454:	2114      	movs	r1, #20
 8003456:	4605      	mov	r5, r0
 8003458:	f7ff ff76 	bl	8003348 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800345c:	68a0      	ldr	r0, [r4, #8]
 800345e:	6803      	ldr	r3, [r0, #0]
 8003460:	2100      	movs	r1, #0
 8003462:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003464:	4798      	blx	r3
 8003466:	4606      	mov	r6, r0
 8003468:	f003 ff34 	bl	80072d4 <_ZN16Project_InfoViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800346c:	6860      	ldr	r0, [r4, #4]
 800346e:	6803      	ldr	r3, [r0, #0]
 8003470:	2100      	movs	r1, #0
 8003472:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003474:	4798      	blx	r3
 8003476:	4631      	mov	r1, r6
 8003478:	4604      	mov	r4, r0
 800347a:	f003 ff05 	bl	8007288 <_ZN21Project_InfoPresenterC1ER16Project_InfoView>
    *currentTrans = newTransition;
 800347e:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003482:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003486:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800348a:	b1dc      	cbz	r4, 80034c4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x120>
 800348c:	1d23      	adds	r3, r4, #4
 800348e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003492:	6833      	ldr	r3, [r6, #0]
 8003494:	f8c4 a008 	str.w	sl, [r4, #8]
 8003498:	4630      	mov	r0, r6
 800349a:	68db      	ldr	r3, [r3, #12]
 800349c:	63f4      	str	r4, [r6, #60]	; 0x3c
 800349e:	4798      	blx	r3
    newPresenter->activate();
 80034a0:	6823      	ldr	r3, [r4, #0]
 80034a2:	4620      	mov	r0, r4
 80034a4:	681b      	ldr	r3, [r3, #0]
 80034a6:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80034a8:	4629      	mov	r1, r5
 80034aa:	4630      	mov	r0, r6
 80034ac:	f012 f8bc 	bl	8015628 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80034b0:	682b      	ldr	r3, [r5, #0]
 80034b2:	4628      	mov	r0, r5
 80034b4:	691b      	ldr	r3, [r3, #16]
 80034b6:	4798      	blx	r3
    newTransition->invalidate();
 80034b8:	682b      	ldr	r3, [r5, #0]
 80034ba:	4628      	mov	r0, r5
 80034bc:	695b      	ldr	r3, [r3, #20]
}
 80034be:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80034c2:	4718      	bx	r3
    model->bind(newPresenter);
 80034c4:	4623      	mov	r3, r4
 80034c6:	e7e2      	b.n	800348e <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xea>
 80034c8:	08028c54 	.word	0x08028c54
 80034cc:	080293ed 	.word	0x080293ed
 80034d0:	08028df0 	.word	0x08028df0
 80034d4:	08028e37 	.word	0x08028e37
 80034d8:	08028eda 	.word	0x08028eda
 80034dc:	20013804 	.word	0x20013804
 80034e0:	20013800 	.word	0x20013800

080034e4 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv>:
{
 80034e4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<CalibrationView, CalibrationPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80034e8:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80034ec:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80034ee:	68a0      	ldr	r0, [r4, #8]
 80034f0:	6803      	ldr	r3, [r0, #0]
 80034f2:	6a1b      	ldr	r3, [r3, #32]
 80034f4:	4798      	blx	r3
 80034f6:	f241 03a3 	movw	r3, #4259	; 0x10a3
 80034fa:	4298      	cmp	r0, r3
 80034fc:	d805      	bhi.n	800350a <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x26>
 80034fe:	4b42      	ldr	r3, [pc, #264]	; (8003608 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x124>)
 8003500:	4a42      	ldr	r2, [pc, #264]	; (800360c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 8003502:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003504:	4842      	ldr	r0, [pc, #264]	; (8003610 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x12c>)
 8003506:	f023 fdb3 	bl	8027070 <__assert_func>
 800350a:	6860      	ldr	r0, [r4, #4]
 800350c:	6803      	ldr	r3, [r0, #0]
 800350e:	6a1b      	ldr	r3, [r3, #32]
 8003510:	4798      	blx	r3
 8003512:	280f      	cmp	r0, #15
 8003514:	d803      	bhi.n	800351e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x3a>
 8003516:	4b3f      	ldr	r3, [pc, #252]	; (8003614 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x130>)
 8003518:	4a3c      	ldr	r2, [pc, #240]	; (800360c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 800351a:	21a4      	movs	r1, #164	; 0xa4
 800351c:	e7f2      	b.n	8003504 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800351e:	68e0      	ldr	r0, [r4, #12]
 8003520:	6803      	ldr	r3, [r0, #0]
 8003522:	6a1b      	ldr	r3, [r3, #32]
 8003524:	4798      	blx	r3
 8003526:	2837      	cmp	r0, #55	; 0x37
 8003528:	d803      	bhi.n	8003532 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x4e>
 800352a:	4b3b      	ldr	r3, [pc, #236]	; (8003618 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x134>)
 800352c:	4a37      	ldr	r2, [pc, #220]	; (800360c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 800352e:	21a5      	movs	r1, #165	; 0xa5
 8003530:	e7e8      	b.n	8003504 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8003532:	f010 fa4d 	bl	80139d0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003536:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 800361c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x138>
 800353a:	3004      	adds	r0, #4
 800353c:	f010 faae 	bl	8013a9c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003540:	f8d9 0000 	ldr.w	r0, [r9]
 8003544:	b110      	cbz	r0, 800354c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8003546:	6803      	ldr	r3, [r0, #0]
 8003548:	68db      	ldr	r3, [r3, #12]
 800354a:	4798      	blx	r3
    if (*currentTrans)
 800354c:	f8d9 0000 	ldr.w	r0, [r9]
 8003550:	b110      	cbz	r0, 8003558 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8003552:	6803      	ldr	r3, [r0, #0]
 8003554:	681b      	ldr	r3, [r3, #0]
 8003556:	4798      	blx	r3
    if (*currentScreen)
 8003558:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8003620 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x13c>
 800355c:	f8d8 0000 	ldr.w	r0, [r8]
 8003560:	b110      	cbz	r0, 8003568 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8003562:	6803      	ldr	r3, [r0, #0]
 8003564:	695b      	ldr	r3, [r3, #20]
 8003566:	4798      	blx	r3
    if (*currentPresenter)
 8003568:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800356c:	b110      	cbz	r0, 8003574 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800356e:	6803      	ldr	r3, [r0, #0]
 8003570:	685b      	ldr	r3, [r3, #4]
 8003572:	4798      	blx	r3
    if (*currentScreen)
 8003574:	f8d8 0000 	ldr.w	r0, [r8]
 8003578:	b110      	cbz	r0, 8003580 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 800357a:	6803      	ldr	r3, [r0, #0]
 800357c:	681b      	ldr	r3, [r3, #0]
 800357e:	4798      	blx	r3
    if (*currentPresenter)
 8003580:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003584:	b110      	cbz	r0, 800358c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8003586:	6803      	ldr	r3, [r0, #0]
 8003588:	689b      	ldr	r3, [r3, #8]
 800358a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800358c:	68e0      	ldr	r0, [r4, #12]
 800358e:	2100      	movs	r1, #0
 8003590:	f7ff fed6 	bl	8003340 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8003594:	2114      	movs	r1, #20
 8003596:	4605      	mov	r5, r0
 8003598:	f7ff fed6 	bl	8003348 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800359c:	68a0      	ldr	r0, [r4, #8]
 800359e:	6803      	ldr	r3, [r0, #0]
 80035a0:	2100      	movs	r1, #0
 80035a2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80035a4:	4798      	blx	r3
 80035a6:	4606      	mov	r6, r0
 80035a8:	f003 fba8 	bl	8006cfc <_ZN15CalibrationViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80035ac:	6860      	ldr	r0, [r4, #4]
 80035ae:	6803      	ldr	r3, [r0, #0]
 80035b0:	2100      	movs	r1, #0
 80035b2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80035b4:	4798      	blx	r3
 80035b6:	4631      	mov	r1, r6
 80035b8:	4604      	mov	r4, r0
 80035ba:	f003 fb79 	bl	8006cb0 <_ZN20CalibrationPresenterC1ER15CalibrationView>
    *currentTrans = newTransition;
 80035be:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80035c2:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80035c6:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80035ca:	b1dc      	cbz	r4, 8003604 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x120>
 80035cc:	1d23      	adds	r3, r4, #4
 80035ce:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80035d2:	6833      	ldr	r3, [r6, #0]
 80035d4:	f8c4 a008 	str.w	sl, [r4, #8]
 80035d8:	4630      	mov	r0, r6
 80035da:	68db      	ldr	r3, [r3, #12]
 80035dc:	63f4      	str	r4, [r6, #60]	; 0x3c
 80035de:	4798      	blx	r3
    newPresenter->activate();
 80035e0:	6823      	ldr	r3, [r4, #0]
 80035e2:	4620      	mov	r0, r4
 80035e4:	681b      	ldr	r3, [r3, #0]
 80035e6:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80035e8:	4629      	mov	r1, r5
 80035ea:	4630      	mov	r0, r6
 80035ec:	f012 f81c 	bl	8015628 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80035f0:	682b      	ldr	r3, [r5, #0]
 80035f2:	4628      	mov	r0, r5
 80035f4:	691b      	ldr	r3, [r3, #16]
 80035f6:	4798      	blx	r3
    newTransition->invalidate();
 80035f8:	682b      	ldr	r3, [r5, #0]
 80035fa:	4628      	mov	r0, r5
 80035fc:	695b      	ldr	r3, [r3, #20]
}
 80035fe:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003602:	4718      	bx	r3
    model->bind(newPresenter);
 8003604:	4623      	mov	r3, r4
 8003606:	e7e2      	b.n	80035ce <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0xea>
 8003608:	08028c54 	.word	0x08028c54
 800360c:	0802950d 	.word	0x0802950d
 8003610:	08028df0 	.word	0x08028df0
 8003614:	08028e37 	.word	0x08028e37
 8003618:	08028eda 	.word	0x08028eda
 800361c:	20013804 	.word	0x20013804
 8003620:	20013800 	.word	0x20013800

08003624 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv>:
{
 8003624:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_Display_2View, Measurement_Accurate_Display_2Presenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003628:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 800362c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800362e:	68a0      	ldr	r0, [r4, #8]
 8003630:	6803      	ldr	r3, [r0, #0]
 8003632:	6a1b      	ldr	r3, [r3, #32]
 8003634:	4798      	blx	r3
 8003636:	f241 33e3 	movw	r3, #5091	; 0x13e3
 800363a:	4298      	cmp	r0, r3
 800363c:	d805      	bhi.n	800364a <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x26>
 800363e:	4b42      	ldr	r3, [pc, #264]	; (8003748 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x124>)
 8003640:	4a42      	ldr	r2, [pc, #264]	; (800374c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 8003642:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003644:	4842      	ldr	r0, [pc, #264]	; (8003750 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x12c>)
 8003646:	f023 fd13 	bl	8027070 <__assert_func>
 800364a:	6860      	ldr	r0, [r4, #4]
 800364c:	6803      	ldr	r3, [r0, #0]
 800364e:	6a1b      	ldr	r3, [r3, #32]
 8003650:	4798      	blx	r3
 8003652:	280f      	cmp	r0, #15
 8003654:	d803      	bhi.n	800365e <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x3a>
 8003656:	4b3f      	ldr	r3, [pc, #252]	; (8003754 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x130>)
 8003658:	4a3c      	ldr	r2, [pc, #240]	; (800374c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 800365a:	21a4      	movs	r1, #164	; 0xa4
 800365c:	e7f2      	b.n	8003644 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800365e:	68e0      	ldr	r0, [r4, #12]
 8003660:	6803      	ldr	r3, [r0, #0]
 8003662:	6a1b      	ldr	r3, [r3, #32]
 8003664:	4798      	blx	r3
 8003666:	2837      	cmp	r0, #55	; 0x37
 8003668:	d803      	bhi.n	8003672 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x4e>
 800366a:	4b3b      	ldr	r3, [pc, #236]	; (8003758 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x134>)
 800366c:	4a37      	ldr	r2, [pc, #220]	; (800374c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 800366e:	21a5      	movs	r1, #165	; 0xa5
 8003670:	e7e8      	b.n	8003644 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8003672:	f010 f9ad 	bl	80139d0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003676:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 800375c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x138>
 800367a:	3004      	adds	r0, #4
 800367c:	f010 fa0e 	bl	8013a9c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003680:	f8d9 0000 	ldr.w	r0, [r9]
 8003684:	b110      	cbz	r0, 800368c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8003686:	6803      	ldr	r3, [r0, #0]
 8003688:	68db      	ldr	r3, [r3, #12]
 800368a:	4798      	blx	r3
    if (*currentTrans)
 800368c:	f8d9 0000 	ldr.w	r0, [r9]
 8003690:	b110      	cbz	r0, 8003698 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8003692:	6803      	ldr	r3, [r0, #0]
 8003694:	681b      	ldr	r3, [r3, #0]
 8003696:	4798      	blx	r3
    if (*currentScreen)
 8003698:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8003760 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x13c>
 800369c:	f8d8 0000 	ldr.w	r0, [r8]
 80036a0:	b110      	cbz	r0, 80036a8 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80036a2:	6803      	ldr	r3, [r0, #0]
 80036a4:	695b      	ldr	r3, [r3, #20]
 80036a6:	4798      	blx	r3
    if (*currentPresenter)
 80036a8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80036ac:	b110      	cbz	r0, 80036b4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80036ae:	6803      	ldr	r3, [r0, #0]
 80036b0:	685b      	ldr	r3, [r3, #4]
 80036b2:	4798      	blx	r3
    if (*currentScreen)
 80036b4:	f8d8 0000 	ldr.w	r0, [r8]
 80036b8:	b110      	cbz	r0, 80036c0 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80036ba:	6803      	ldr	r3, [r0, #0]
 80036bc:	681b      	ldr	r3, [r3, #0]
 80036be:	4798      	blx	r3
    if (*currentPresenter)
 80036c0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80036c4:	b110      	cbz	r0, 80036cc <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80036c6:	6803      	ldr	r3, [r0, #0]
 80036c8:	689b      	ldr	r3, [r3, #8]
 80036ca:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80036cc:	68e0      	ldr	r0, [r4, #12]
 80036ce:	2100      	movs	r1, #0
 80036d0:	f7ff fe36 	bl	8003340 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80036d4:	2114      	movs	r1, #20
 80036d6:	4605      	mov	r5, r0
 80036d8:	f7ff fe36 	bl	8003348 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80036dc:	68a0      	ldr	r0, [r4, #8]
 80036de:	6803      	ldr	r3, [r0, #0]
 80036e0:	2100      	movs	r1, #0
 80036e2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80036e4:	4798      	blx	r3
 80036e6:	4606      	mov	r6, r0
 80036e8:	f003 fcce 	bl	8007088 <_ZN34Measurement_Accurate_Display_2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80036ec:	6860      	ldr	r0, [r4, #4]
 80036ee:	6803      	ldr	r3, [r0, #0]
 80036f0:	2100      	movs	r1, #0
 80036f2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80036f4:	4798      	blx	r3
 80036f6:	4631      	mov	r1, r6
 80036f8:	4604      	mov	r4, r0
 80036fa:	f003 fc9f 	bl	800703c <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>
    *currentTrans = newTransition;
 80036fe:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003702:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003706:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800370a:	b1dc      	cbz	r4, 8003744 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x120>
 800370c:	1d23      	adds	r3, r4, #4
 800370e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003712:	6833      	ldr	r3, [r6, #0]
 8003714:	f8c4 a008 	str.w	sl, [r4, #8]
 8003718:	4630      	mov	r0, r6
 800371a:	68db      	ldr	r3, [r3, #12]
 800371c:	63f4      	str	r4, [r6, #60]	; 0x3c
 800371e:	4798      	blx	r3
    newPresenter->activate();
 8003720:	6823      	ldr	r3, [r4, #0]
 8003722:	4620      	mov	r0, r4
 8003724:	681b      	ldr	r3, [r3, #0]
 8003726:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003728:	4629      	mov	r1, r5
 800372a:	4630      	mov	r0, r6
 800372c:	f011 ff7c 	bl	8015628 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003730:	682b      	ldr	r3, [r5, #0]
 8003732:	4628      	mov	r0, r5
 8003734:	691b      	ldr	r3, [r3, #16]
 8003736:	4798      	blx	r3
    newTransition->invalidate();
 8003738:	682b      	ldr	r3, [r5, #0]
 800373a:	4628      	mov	r0, r5
 800373c:	695b      	ldr	r3, [r3, #20]
}
 800373e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003742:	4718      	bx	r3
    model->bind(newPresenter);
 8003744:	4623      	mov	r3, r4
 8003746:	e7e2      	b.n	800370e <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xea>
 8003748:	08028c54 	.word	0x08028c54
 800374c:	0802962b 	.word	0x0802962b
 8003750:	08028df0 	.word	0x08028df0
 8003754:	08028e37 	.word	0x08028e37
 8003758:	08028eda 	.word	0x08028eda
 800375c:	20013804 	.word	0x20013804
 8003760:	20013800 	.word	0x20013800

08003764 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv>:
{
 8003764:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_DisplayView, Measurement_Accurate_DisplayPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003768:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 800376c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800376e:	68a0      	ldr	r0, [r4, #8]
 8003770:	6803      	ldr	r3, [r0, #0]
 8003772:	6a1b      	ldr	r3, [r3, #32]
 8003774:	4798      	blx	r3
 8003776:	f241 33e3 	movw	r3, #5091	; 0x13e3
 800377a:	4298      	cmp	r0, r3
 800377c:	d805      	bhi.n	800378a <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x26>
 800377e:	4b42      	ldr	r3, [pc, #264]	; (8003888 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x124>)
 8003780:	4a42      	ldr	r2, [pc, #264]	; (800388c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 8003782:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003784:	4842      	ldr	r0, [pc, #264]	; (8003890 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x12c>)
 8003786:	f023 fc73 	bl	8027070 <__assert_func>
 800378a:	6860      	ldr	r0, [r4, #4]
 800378c:	6803      	ldr	r3, [r0, #0]
 800378e:	6a1b      	ldr	r3, [r3, #32]
 8003790:	4798      	blx	r3
 8003792:	280f      	cmp	r0, #15
 8003794:	d803      	bhi.n	800379e <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x3a>
 8003796:	4b3f      	ldr	r3, [pc, #252]	; (8003894 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x130>)
 8003798:	4a3c      	ldr	r2, [pc, #240]	; (800388c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 800379a:	21a4      	movs	r1, #164	; 0xa4
 800379c:	e7f2      	b.n	8003784 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800379e:	68e0      	ldr	r0, [r4, #12]
 80037a0:	6803      	ldr	r3, [r0, #0]
 80037a2:	6a1b      	ldr	r3, [r3, #32]
 80037a4:	4798      	blx	r3
 80037a6:	2837      	cmp	r0, #55	; 0x37
 80037a8:	d803      	bhi.n	80037b2 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x4e>
 80037aa:	4b3b      	ldr	r3, [pc, #236]	; (8003898 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x134>)
 80037ac:	4a37      	ldr	r2, [pc, #220]	; (800388c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 80037ae:	21a5      	movs	r1, #165	; 0xa5
 80037b0:	e7e8      	b.n	8003784 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80037b2:	f010 f90d 	bl	80139d0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80037b6:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 800389c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x138>
 80037ba:	3004      	adds	r0, #4
 80037bc:	f010 f96e 	bl	8013a9c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80037c0:	f8d9 0000 	ldr.w	r0, [r9]
 80037c4:	b110      	cbz	r0, 80037cc <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80037c6:	6803      	ldr	r3, [r0, #0]
 80037c8:	68db      	ldr	r3, [r3, #12]
 80037ca:	4798      	blx	r3
    if (*currentTrans)
 80037cc:	f8d9 0000 	ldr.w	r0, [r9]
 80037d0:	b110      	cbz	r0, 80037d8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80037d2:	6803      	ldr	r3, [r0, #0]
 80037d4:	681b      	ldr	r3, [r3, #0]
 80037d6:	4798      	blx	r3
    if (*currentScreen)
 80037d8:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80038a0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x13c>
 80037dc:	f8d8 0000 	ldr.w	r0, [r8]
 80037e0:	b110      	cbz	r0, 80037e8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80037e2:	6803      	ldr	r3, [r0, #0]
 80037e4:	695b      	ldr	r3, [r3, #20]
 80037e6:	4798      	blx	r3
    if (*currentPresenter)
 80037e8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80037ec:	b110      	cbz	r0, 80037f4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80037ee:	6803      	ldr	r3, [r0, #0]
 80037f0:	685b      	ldr	r3, [r3, #4]
 80037f2:	4798      	blx	r3
    if (*currentScreen)
 80037f4:	f8d8 0000 	ldr.w	r0, [r8]
 80037f8:	b110      	cbz	r0, 8003800 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80037fa:	6803      	ldr	r3, [r0, #0]
 80037fc:	681b      	ldr	r3, [r3, #0]
 80037fe:	4798      	blx	r3
    if (*currentPresenter)
 8003800:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003804:	b110      	cbz	r0, 800380c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8003806:	6803      	ldr	r3, [r0, #0]
 8003808:	689b      	ldr	r3, [r3, #8]
 800380a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800380c:	68e0      	ldr	r0, [r4, #12]
 800380e:	2100      	movs	r1, #0
 8003810:	f7ff fd96 	bl	8003340 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8003814:	2114      	movs	r1, #20
 8003816:	4605      	mov	r5, r0
 8003818:	f7ff fd96 	bl	8003348 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800381c:	68a0      	ldr	r0, [r4, #8]
 800381e:	6803      	ldr	r3, [r0, #0]
 8003820:	2100      	movs	r1, #0
 8003822:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003824:	4798      	blx	r3
 8003826:	4606      	mov	r6, r0
 8003828:	f003 fbec 	bl	8007004 <_ZN32Measurement_Accurate_DisplayViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800382c:	6860      	ldr	r0, [r4, #4]
 800382e:	6803      	ldr	r3, [r0, #0]
 8003830:	2100      	movs	r1, #0
 8003832:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003834:	4798      	blx	r3
 8003836:	4631      	mov	r1, r6
 8003838:	4604      	mov	r4, r0
 800383a:	f003 fbbd 	bl	8006fb8 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>
    *currentTrans = newTransition;
 800383e:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003842:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003846:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800384a:	b1dc      	cbz	r4, 8003884 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x120>
 800384c:	1d23      	adds	r3, r4, #4
 800384e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003852:	6833      	ldr	r3, [r6, #0]
 8003854:	f8c4 a008 	str.w	sl, [r4, #8]
 8003858:	4630      	mov	r0, r6
 800385a:	68db      	ldr	r3, [r3, #12]
 800385c:	63f4      	str	r4, [r6, #60]	; 0x3c
 800385e:	4798      	blx	r3
    newPresenter->activate();
 8003860:	6823      	ldr	r3, [r4, #0]
 8003862:	4620      	mov	r0, r4
 8003864:	681b      	ldr	r3, [r3, #0]
 8003866:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003868:	4629      	mov	r1, r5
 800386a:	4630      	mov	r0, r6
 800386c:	f011 fedc 	bl	8015628 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003870:	682b      	ldr	r3, [r5, #0]
 8003872:	4628      	mov	r0, r5
 8003874:	691b      	ldr	r3, [r3, #16]
 8003876:	4798      	blx	r3
    newTransition->invalidate();
 8003878:	682b      	ldr	r3, [r5, #0]
 800387a:	4628      	mov	r0, r5
 800387c:	695b      	ldr	r3, [r3, #20]
}
 800387e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003882:	4718      	bx	r3
    model->bind(newPresenter);
 8003884:	4623      	mov	r3, r4
 8003886:	e7e2      	b.n	800384e <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xea>
 8003888:	08028c54 	.word	0x08028c54
 800388c:	0802976f 	.word	0x0802976f
 8003890:	08028df0 	.word	0x08028df0
 8003894:	08028e37 	.word	0x08028e37
 8003898:	08028eda 	.word	0x08028eda
 800389c:	20013804 	.word	0x20013804
 80038a0:	20013800 	.word	0x20013800

080038a4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv>:
{
 80038a4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80038a8:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80038ac:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80038ae:	68a0      	ldr	r0, [r4, #8]
 80038b0:	6803      	ldr	r3, [r0, #0]
 80038b2:	6a1b      	ldr	r3, [r3, #32]
 80038b4:	4798      	blx	r3
 80038b6:	f241 03eb 	movw	r3, #4331	; 0x10eb
 80038ba:	4298      	cmp	r0, r3
 80038bc:	d805      	bhi.n	80038ca <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x26>
 80038be:	4b42      	ldr	r3, [pc, #264]	; (80039c8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x124>)
 80038c0:	4a42      	ldr	r2, [pc, #264]	; (80039cc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 80038c2:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80038c4:	4842      	ldr	r0, [pc, #264]	; (80039d0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x12c>)
 80038c6:	f023 fbd3 	bl	8027070 <__assert_func>
 80038ca:	6860      	ldr	r0, [r4, #4]
 80038cc:	6803      	ldr	r3, [r0, #0]
 80038ce:	6a1b      	ldr	r3, [r3, #32]
 80038d0:	4798      	blx	r3
 80038d2:	280f      	cmp	r0, #15
 80038d4:	d803      	bhi.n	80038de <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x3a>
 80038d6:	4b3f      	ldr	r3, [pc, #252]	; (80039d4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x130>)
 80038d8:	4a3c      	ldr	r2, [pc, #240]	; (80039cc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 80038da:	21a4      	movs	r1, #164	; 0xa4
 80038dc:	e7f2      	b.n	80038c4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80038de:	68e0      	ldr	r0, [r4, #12]
 80038e0:	6803      	ldr	r3, [r0, #0]
 80038e2:	6a1b      	ldr	r3, [r3, #32]
 80038e4:	4798      	blx	r3
 80038e6:	2837      	cmp	r0, #55	; 0x37
 80038e8:	d803      	bhi.n	80038f2 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x4e>
 80038ea:	4b3b      	ldr	r3, [pc, #236]	; (80039d8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x134>)
 80038ec:	4a37      	ldr	r2, [pc, #220]	; (80039cc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 80038ee:	21a5      	movs	r1, #165	; 0xa5
 80038f0:	e7e8      	b.n	80038c4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80038f2:	f010 f86d 	bl	80139d0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80038f6:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80039dc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x138>
 80038fa:	3004      	adds	r0, #4
 80038fc:	f010 f8ce 	bl	8013a9c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003900:	f8d9 0000 	ldr.w	r0, [r9]
 8003904:	b110      	cbz	r0, 800390c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8003906:	6803      	ldr	r3, [r0, #0]
 8003908:	68db      	ldr	r3, [r3, #12]
 800390a:	4798      	blx	r3
    if (*currentTrans)
 800390c:	f8d9 0000 	ldr.w	r0, [r9]
 8003910:	b110      	cbz	r0, 8003918 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8003912:	6803      	ldr	r3, [r0, #0]
 8003914:	681b      	ldr	r3, [r3, #0]
 8003916:	4798      	blx	r3
    if (*currentScreen)
 8003918:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80039e0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x13c>
 800391c:	f8d8 0000 	ldr.w	r0, [r8]
 8003920:	b110      	cbz	r0, 8003928 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8003922:	6803      	ldr	r3, [r0, #0]
 8003924:	695b      	ldr	r3, [r3, #20]
 8003926:	4798      	blx	r3
    if (*currentPresenter)
 8003928:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800392c:	b110      	cbz	r0, 8003934 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800392e:	6803      	ldr	r3, [r0, #0]
 8003930:	685b      	ldr	r3, [r3, #4]
 8003932:	4798      	blx	r3
    if (*currentScreen)
 8003934:	f8d8 0000 	ldr.w	r0, [r8]
 8003938:	b110      	cbz	r0, 8003940 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 800393a:	6803      	ldr	r3, [r0, #0]
 800393c:	681b      	ldr	r3, [r3, #0]
 800393e:	4798      	blx	r3
    if (*currentPresenter)
 8003940:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003944:	b110      	cbz	r0, 800394c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8003946:	6803      	ldr	r3, [r0, #0]
 8003948:	689b      	ldr	r3, [r3, #8]
 800394a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800394c:	68e0      	ldr	r0, [r4, #12]
 800394e:	2100      	movs	r1, #0
 8003950:	f7ff fcf6 	bl	8003340 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8003954:	2114      	movs	r1, #20
 8003956:	4605      	mov	r5, r0
 8003958:	f7ff fcf6 	bl	8003348 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800395c:	68a0      	ldr	r0, [r4, #8]
 800395e:	6803      	ldr	r3, [r0, #0]
 8003960:	2100      	movs	r1, #0
 8003962:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003964:	4798      	blx	r3
 8003966:	4606      	mov	r6, r0
 8003968:	f003 fb0a 	bl	8006f80 <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800396c:	6860      	ldr	r0, [r4, #4]
 800396e:	6803      	ldr	r3, [r0, #0]
 8003970:	2100      	movs	r1, #0
 8003972:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003974:	4798      	blx	r3
 8003976:	4631      	mov	r1, r6
 8003978:	4604      	mov	r4, r0
 800397a:	f003 fadb 	bl	8006f34 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 800397e:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003982:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003986:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800398a:	b1dc      	cbz	r4, 80039c4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x120>
 800398c:	1d23      	adds	r3, r4, #4
 800398e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003992:	6833      	ldr	r3, [r6, #0]
 8003994:	f8c4 a008 	str.w	sl, [r4, #8]
 8003998:	4630      	mov	r0, r6
 800399a:	68db      	ldr	r3, [r3, #12]
 800399c:	63f4      	str	r4, [r6, #60]	; 0x3c
 800399e:	4798      	blx	r3
    newPresenter->activate();
 80039a0:	6823      	ldr	r3, [r4, #0]
 80039a2:	4620      	mov	r0, r4
 80039a4:	681b      	ldr	r3, [r3, #0]
 80039a6:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80039a8:	4629      	mov	r1, r5
 80039aa:	4630      	mov	r0, r6
 80039ac:	f011 fe3c 	bl	8015628 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80039b0:	682b      	ldr	r3, [r5, #0]
 80039b2:	4628      	mov	r0, r5
 80039b4:	691b      	ldr	r3, [r3, #16]
 80039b6:	4798      	blx	r3
    newTransition->invalidate();
 80039b8:	682b      	ldr	r3, [r5, #0]
 80039ba:	4628      	mov	r0, r5
 80039bc:	695b      	ldr	r3, [r3, #20]
}
 80039be:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80039c2:	4718      	bx	r3
    model->bind(newPresenter);
 80039c4:	4623      	mov	r3, r4
 80039c6:	e7e2      	b.n	800398e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xea>
 80039c8:	08028c54 	.word	0x08028c54
 80039cc:	080298af 	.word	0x080298af
 80039d0:	08028df0 	.word	0x08028df0
 80039d4:	08028e37 	.word	0x08028e37
 80039d8:	08028eda 	.word	0x08028eda
 80039dc:	20013804 	.word	0x20013804
 80039e0:	20013800 	.word	0x20013800

080039e4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv>:
{
 80039e4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_3PView, Measurement_Single_Display_3PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80039e8:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80039ec:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80039ee:	68a0      	ldr	r0, [r4, #8]
 80039f0:	6803      	ldr	r3, [r0, #0]
 80039f2:	6a1b      	ldr	r3, [r3, #32]
 80039f4:	4798      	blx	r3
 80039f6:	f241 33e3 	movw	r3, #5091	; 0x13e3
 80039fa:	4298      	cmp	r0, r3
 80039fc:	d805      	bhi.n	8003a0a <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x26>
 80039fe:	4b42      	ldr	r3, [pc, #264]	; (8003b08 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x124>)
 8003a00:	4a42      	ldr	r2, [pc, #264]	; (8003b0c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 8003a02:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003a04:	4842      	ldr	r0, [pc, #264]	; (8003b10 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x12c>)
 8003a06:	f023 fb33 	bl	8027070 <__assert_func>
 8003a0a:	6860      	ldr	r0, [r4, #4]
 8003a0c:	6803      	ldr	r3, [r0, #0]
 8003a0e:	6a1b      	ldr	r3, [r3, #32]
 8003a10:	4798      	blx	r3
 8003a12:	280f      	cmp	r0, #15
 8003a14:	d803      	bhi.n	8003a1e <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x3a>
 8003a16:	4b3f      	ldr	r3, [pc, #252]	; (8003b14 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x130>)
 8003a18:	4a3c      	ldr	r2, [pc, #240]	; (8003b0c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 8003a1a:	21a4      	movs	r1, #164	; 0xa4
 8003a1c:	e7f2      	b.n	8003a04 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003a1e:	68e0      	ldr	r0, [r4, #12]
 8003a20:	6803      	ldr	r3, [r0, #0]
 8003a22:	6a1b      	ldr	r3, [r3, #32]
 8003a24:	4798      	blx	r3
 8003a26:	2837      	cmp	r0, #55	; 0x37
 8003a28:	d803      	bhi.n	8003a32 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x4e>
 8003a2a:	4b3b      	ldr	r3, [pc, #236]	; (8003b18 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x134>)
 8003a2c:	4a37      	ldr	r2, [pc, #220]	; (8003b0c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 8003a2e:	21a5      	movs	r1, #165	; 0xa5
 8003a30:	e7e8      	b.n	8003a04 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8003a32:	f00f ffcd 	bl	80139d0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003a36:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003b1c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x138>
 8003a3a:	3004      	adds	r0, #4
 8003a3c:	f010 f82e 	bl	8013a9c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003a40:	f8d9 0000 	ldr.w	r0, [r9]
 8003a44:	b110      	cbz	r0, 8003a4c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8003a46:	6803      	ldr	r3, [r0, #0]
 8003a48:	68db      	ldr	r3, [r3, #12]
 8003a4a:	4798      	blx	r3
    if (*currentTrans)
 8003a4c:	f8d9 0000 	ldr.w	r0, [r9]
 8003a50:	b110      	cbz	r0, 8003a58 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8003a52:	6803      	ldr	r3, [r0, #0]
 8003a54:	681b      	ldr	r3, [r3, #0]
 8003a56:	4798      	blx	r3
    if (*currentScreen)
 8003a58:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8003b20 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x13c>
 8003a5c:	f8d8 0000 	ldr.w	r0, [r8]
 8003a60:	b110      	cbz	r0, 8003a68 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8003a62:	6803      	ldr	r3, [r0, #0]
 8003a64:	695b      	ldr	r3, [r3, #20]
 8003a66:	4798      	blx	r3
    if (*currentPresenter)
 8003a68:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003a6c:	b110      	cbz	r0, 8003a74 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8003a6e:	6803      	ldr	r3, [r0, #0]
 8003a70:	685b      	ldr	r3, [r3, #4]
 8003a72:	4798      	blx	r3
    if (*currentScreen)
 8003a74:	f8d8 0000 	ldr.w	r0, [r8]
 8003a78:	b110      	cbz	r0, 8003a80 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8003a7a:	6803      	ldr	r3, [r0, #0]
 8003a7c:	681b      	ldr	r3, [r3, #0]
 8003a7e:	4798      	blx	r3
    if (*currentPresenter)
 8003a80:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003a84:	b110      	cbz	r0, 8003a8c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8003a86:	6803      	ldr	r3, [r0, #0]
 8003a88:	689b      	ldr	r3, [r3, #8]
 8003a8a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003a8c:	68e0      	ldr	r0, [r4, #12]
 8003a8e:	2100      	movs	r1, #0
 8003a90:	f7ff fc56 	bl	8003340 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8003a94:	2114      	movs	r1, #20
 8003a96:	4605      	mov	r5, r0
 8003a98:	f7ff fc56 	bl	8003348 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003a9c:	68a0      	ldr	r0, [r4, #8]
 8003a9e:	6803      	ldr	r3, [r0, #0]
 8003aa0:	2100      	movs	r1, #0
 8003aa2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003aa4:	4798      	blx	r3
 8003aa6:	4606      	mov	r6, r0
 8003aa8:	f003 fbb4 	bl	8007214 <_ZN33Measurement_Single_Display_3PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003aac:	6860      	ldr	r0, [r4, #4]
 8003aae:	6803      	ldr	r3, [r0, #0]
 8003ab0:	2100      	movs	r1, #0
 8003ab2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003ab4:	4798      	blx	r3
 8003ab6:	4631      	mov	r1, r6
 8003ab8:	4604      	mov	r4, r0
 8003aba:	f003 fb85 	bl	80071c8 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>
    *currentTrans = newTransition;
 8003abe:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003ac2:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003ac6:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003aca:	b1dc      	cbz	r4, 8003b04 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x120>
 8003acc:	1d23      	adds	r3, r4, #4
 8003ace:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003ad2:	6833      	ldr	r3, [r6, #0]
 8003ad4:	f8c4 a008 	str.w	sl, [r4, #8]
 8003ad8:	4630      	mov	r0, r6
 8003ada:	68db      	ldr	r3, [r3, #12]
 8003adc:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003ade:	4798      	blx	r3
    newPresenter->activate();
 8003ae0:	6823      	ldr	r3, [r4, #0]
 8003ae2:	4620      	mov	r0, r4
 8003ae4:	681b      	ldr	r3, [r3, #0]
 8003ae6:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003ae8:	4629      	mov	r1, r5
 8003aea:	4630      	mov	r0, r6
 8003aec:	f011 fd9c 	bl	8015628 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003af0:	682b      	ldr	r3, [r5, #0]
 8003af2:	4628      	mov	r0, r5
 8003af4:	691b      	ldr	r3, [r3, #16]
 8003af6:	4798      	blx	r3
    newTransition->invalidate();
 8003af8:	682b      	ldr	r3, [r5, #0]
 8003afa:	4628      	mov	r0, r5
 8003afc:	695b      	ldr	r3, [r3, #20]
}
 8003afe:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003b02:	4718      	bx	r3
    model->bind(newPresenter);
 8003b04:	4623      	mov	r3, r4
 8003b06:	e7e2      	b.n	8003ace <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xea>
 8003b08:	08028c54 	.word	0x08028c54
 8003b0c:	080299df 	.word	0x080299df
 8003b10:	08028df0 	.word	0x08028df0
 8003b14:	08028e37 	.word	0x08028e37
 8003b18:	08028eda 	.word	0x08028eda
 8003b1c:	20013804 	.word	0x20013804
 8003b20:	20013800 	.word	0x20013800

08003b24 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv>:
{
 8003b24:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_1PView, Measurement_Single_Display_1PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003b28:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003b2c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003b2e:	68a0      	ldr	r0, [r4, #8]
 8003b30:	6803      	ldr	r3, [r0, #0]
 8003b32:	6a1b      	ldr	r3, [r3, #32]
 8003b34:	4798      	blx	r3
 8003b36:	f241 33e3 	movw	r3, #5091	; 0x13e3
 8003b3a:	4298      	cmp	r0, r3
 8003b3c:	d805      	bhi.n	8003b4a <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x26>
 8003b3e:	4b42      	ldr	r3, [pc, #264]	; (8003c48 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x124>)
 8003b40:	4a42      	ldr	r2, [pc, #264]	; (8003c4c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8003b42:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003b44:	4842      	ldr	r0, [pc, #264]	; (8003c50 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x12c>)
 8003b46:	f023 fa93 	bl	8027070 <__assert_func>
 8003b4a:	6860      	ldr	r0, [r4, #4]
 8003b4c:	6803      	ldr	r3, [r0, #0]
 8003b4e:	6a1b      	ldr	r3, [r3, #32]
 8003b50:	4798      	blx	r3
 8003b52:	280f      	cmp	r0, #15
 8003b54:	d803      	bhi.n	8003b5e <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x3a>
 8003b56:	4b3f      	ldr	r3, [pc, #252]	; (8003c54 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x130>)
 8003b58:	4a3c      	ldr	r2, [pc, #240]	; (8003c4c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8003b5a:	21a4      	movs	r1, #164	; 0xa4
 8003b5c:	e7f2      	b.n	8003b44 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003b5e:	68e0      	ldr	r0, [r4, #12]
 8003b60:	6803      	ldr	r3, [r0, #0]
 8003b62:	6a1b      	ldr	r3, [r3, #32]
 8003b64:	4798      	blx	r3
 8003b66:	2837      	cmp	r0, #55	; 0x37
 8003b68:	d803      	bhi.n	8003b72 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x4e>
 8003b6a:	4b3b      	ldr	r3, [pc, #236]	; (8003c58 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x134>)
 8003b6c:	4a37      	ldr	r2, [pc, #220]	; (8003c4c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8003b6e:	21a5      	movs	r1, #165	; 0xa5
 8003b70:	e7e8      	b.n	8003b44 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8003b72:	f00f ff2d 	bl	80139d0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003b76:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003c5c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x138>
 8003b7a:	3004      	adds	r0, #4
 8003b7c:	f00f ff8e 	bl	8013a9c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003b80:	f8d9 0000 	ldr.w	r0, [r9]
 8003b84:	b110      	cbz	r0, 8003b8c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8003b86:	6803      	ldr	r3, [r0, #0]
 8003b88:	68db      	ldr	r3, [r3, #12]
 8003b8a:	4798      	blx	r3
    if (*currentTrans)
 8003b8c:	f8d9 0000 	ldr.w	r0, [r9]
 8003b90:	b110      	cbz	r0, 8003b98 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8003b92:	6803      	ldr	r3, [r0, #0]
 8003b94:	681b      	ldr	r3, [r3, #0]
 8003b96:	4798      	blx	r3
    if (*currentScreen)
 8003b98:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8003c60 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x13c>
 8003b9c:	f8d8 0000 	ldr.w	r0, [r8]
 8003ba0:	b110      	cbz	r0, 8003ba8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8003ba2:	6803      	ldr	r3, [r0, #0]
 8003ba4:	695b      	ldr	r3, [r3, #20]
 8003ba6:	4798      	blx	r3
    if (*currentPresenter)
 8003ba8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003bac:	b110      	cbz	r0, 8003bb4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8003bae:	6803      	ldr	r3, [r0, #0]
 8003bb0:	685b      	ldr	r3, [r3, #4]
 8003bb2:	4798      	blx	r3
    if (*currentScreen)
 8003bb4:	f8d8 0000 	ldr.w	r0, [r8]
 8003bb8:	b110      	cbz	r0, 8003bc0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8003bba:	6803      	ldr	r3, [r0, #0]
 8003bbc:	681b      	ldr	r3, [r3, #0]
 8003bbe:	4798      	blx	r3
    if (*currentPresenter)
 8003bc0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003bc4:	b110      	cbz	r0, 8003bcc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8003bc6:	6803      	ldr	r3, [r0, #0]
 8003bc8:	689b      	ldr	r3, [r3, #8]
 8003bca:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003bcc:	68e0      	ldr	r0, [r4, #12]
 8003bce:	2100      	movs	r1, #0
 8003bd0:	f7ff fbb6 	bl	8003340 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8003bd4:	2114      	movs	r1, #20
 8003bd6:	4605      	mov	r5, r0
 8003bd8:	f7ff fbb6 	bl	8003348 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003bdc:	68a0      	ldr	r0, [r4, #8]
 8003bde:	6803      	ldr	r3, [r0, #0]
 8003be0:	2100      	movs	r1, #0
 8003be2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003be4:	4798      	blx	r3
 8003be6:	4606      	mov	r6, r0
 8003be8:	f003 fad2 	bl	8007190 <_ZN33Measurement_Single_Display_1PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003bec:	6860      	ldr	r0, [r4, #4]
 8003bee:	6803      	ldr	r3, [r0, #0]
 8003bf0:	2100      	movs	r1, #0
 8003bf2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003bf4:	4798      	blx	r3
 8003bf6:	4631      	mov	r1, r6
 8003bf8:	4604      	mov	r4, r0
 8003bfa:	f003 faa3 	bl	8007144 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>
    *currentTrans = newTransition;
 8003bfe:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003c02:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003c06:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003c0a:	b1dc      	cbz	r4, 8003c44 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x120>
 8003c0c:	1d23      	adds	r3, r4, #4
 8003c0e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003c12:	6833      	ldr	r3, [r6, #0]
 8003c14:	f8c4 a008 	str.w	sl, [r4, #8]
 8003c18:	4630      	mov	r0, r6
 8003c1a:	68db      	ldr	r3, [r3, #12]
 8003c1c:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003c1e:	4798      	blx	r3
    newPresenter->activate();
 8003c20:	6823      	ldr	r3, [r4, #0]
 8003c22:	4620      	mov	r0, r4
 8003c24:	681b      	ldr	r3, [r3, #0]
 8003c26:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003c28:	4629      	mov	r1, r5
 8003c2a:	4630      	mov	r0, r6
 8003c2c:	f011 fcfc 	bl	8015628 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003c30:	682b      	ldr	r3, [r5, #0]
 8003c32:	4628      	mov	r0, r5
 8003c34:	691b      	ldr	r3, [r3, #16]
 8003c36:	4798      	blx	r3
    newTransition->invalidate();
 8003c38:	682b      	ldr	r3, [r5, #0]
 8003c3a:	4628      	mov	r0, r5
 8003c3c:	695b      	ldr	r3, [r3, #20]
}
 8003c3e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003c42:	4718      	bx	r3
    model->bind(newPresenter);
 8003c44:	4623      	mov	r3, r4
 8003c46:	e7e2      	b.n	8003c0e <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xea>
 8003c48:	08028c54 	.word	0x08028c54
 8003c4c:	08029b21 	.word	0x08029b21
 8003c50:	08028df0 	.word	0x08028df0
 8003c54:	08028e37 	.word	0x08028e37
 8003c58:	08028eda 	.word	0x08028eda
 8003c5c:	20013804 	.word	0x20013804
 8003c60:	20013800 	.word	0x20013800

08003c64 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv>:
{
 8003c64:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_SingleView, Measurement_SinglePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003c68:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003c6c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003c6e:	68a0      	ldr	r0, [r4, #8]
 8003c70:	6803      	ldr	r3, [r0, #0]
 8003c72:	6a1b      	ldr	r3, [r3, #32]
 8003c74:	4798      	blx	r3
 8003c76:	f241 03eb 	movw	r3, #4331	; 0x10eb
 8003c7a:	4298      	cmp	r0, r3
 8003c7c:	d805      	bhi.n	8003c8a <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x26>
 8003c7e:	4b42      	ldr	r3, [pc, #264]	; (8003d88 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x124>)
 8003c80:	4a42      	ldr	r2, [pc, #264]	; (8003d8c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8003c82:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003c84:	4842      	ldr	r0, [pc, #264]	; (8003d90 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x12c>)
 8003c86:	f023 f9f3 	bl	8027070 <__assert_func>
 8003c8a:	6860      	ldr	r0, [r4, #4]
 8003c8c:	6803      	ldr	r3, [r0, #0]
 8003c8e:	6a1b      	ldr	r3, [r3, #32]
 8003c90:	4798      	blx	r3
 8003c92:	280f      	cmp	r0, #15
 8003c94:	d803      	bhi.n	8003c9e <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x3a>
 8003c96:	4b3f      	ldr	r3, [pc, #252]	; (8003d94 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x130>)
 8003c98:	4a3c      	ldr	r2, [pc, #240]	; (8003d8c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8003c9a:	21a4      	movs	r1, #164	; 0xa4
 8003c9c:	e7f2      	b.n	8003c84 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003c9e:	68e0      	ldr	r0, [r4, #12]
 8003ca0:	6803      	ldr	r3, [r0, #0]
 8003ca2:	6a1b      	ldr	r3, [r3, #32]
 8003ca4:	4798      	blx	r3
 8003ca6:	2837      	cmp	r0, #55	; 0x37
 8003ca8:	d803      	bhi.n	8003cb2 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x4e>
 8003caa:	4b3b      	ldr	r3, [pc, #236]	; (8003d98 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x134>)
 8003cac:	4a37      	ldr	r2, [pc, #220]	; (8003d8c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8003cae:	21a5      	movs	r1, #165	; 0xa5
 8003cb0:	e7e8      	b.n	8003c84 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8003cb2:	f00f fe8d 	bl	80139d0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003cb6:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003d9c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x138>
 8003cba:	3004      	adds	r0, #4
 8003cbc:	f00f feee 	bl	8013a9c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003cc0:	f8d9 0000 	ldr.w	r0, [r9]
 8003cc4:	b110      	cbz	r0, 8003ccc <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8003cc6:	6803      	ldr	r3, [r0, #0]
 8003cc8:	68db      	ldr	r3, [r3, #12]
 8003cca:	4798      	blx	r3
    if (*currentTrans)
 8003ccc:	f8d9 0000 	ldr.w	r0, [r9]
 8003cd0:	b110      	cbz	r0, 8003cd8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8003cd2:	6803      	ldr	r3, [r0, #0]
 8003cd4:	681b      	ldr	r3, [r3, #0]
 8003cd6:	4798      	blx	r3
    if (*currentScreen)
 8003cd8:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8003da0 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x13c>
 8003cdc:	f8d8 0000 	ldr.w	r0, [r8]
 8003ce0:	b110      	cbz	r0, 8003ce8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8003ce2:	6803      	ldr	r3, [r0, #0]
 8003ce4:	695b      	ldr	r3, [r3, #20]
 8003ce6:	4798      	blx	r3
    if (*currentPresenter)
 8003ce8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003cec:	b110      	cbz	r0, 8003cf4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8003cee:	6803      	ldr	r3, [r0, #0]
 8003cf0:	685b      	ldr	r3, [r3, #4]
 8003cf2:	4798      	blx	r3
    if (*currentScreen)
 8003cf4:	f8d8 0000 	ldr.w	r0, [r8]
 8003cf8:	b110      	cbz	r0, 8003d00 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8003cfa:	6803      	ldr	r3, [r0, #0]
 8003cfc:	681b      	ldr	r3, [r3, #0]
 8003cfe:	4798      	blx	r3
    if (*currentPresenter)
 8003d00:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003d04:	b110      	cbz	r0, 8003d0c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8003d06:	6803      	ldr	r3, [r0, #0]
 8003d08:	689b      	ldr	r3, [r3, #8]
 8003d0a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003d0c:	68e0      	ldr	r0, [r4, #12]
 8003d0e:	2100      	movs	r1, #0
 8003d10:	f7ff fb16 	bl	8003340 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8003d14:	2114      	movs	r1, #20
 8003d16:	4605      	mov	r5, r0
 8003d18:	f7ff fb16 	bl	8003348 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003d1c:	68a0      	ldr	r0, [r4, #8]
 8003d1e:	6803      	ldr	r3, [r0, #0]
 8003d20:	2100      	movs	r1, #0
 8003d22:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003d24:	4798      	blx	r3
 8003d26:	4606      	mov	r6, r0
 8003d28:	f003 f9f0 	bl	800710c <_ZN22Measurement_SingleViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003d2c:	6860      	ldr	r0, [r4, #4]
 8003d2e:	6803      	ldr	r3, [r0, #0]
 8003d30:	2100      	movs	r1, #0
 8003d32:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003d34:	4798      	blx	r3
 8003d36:	4631      	mov	r1, r6
 8003d38:	4604      	mov	r4, r0
 8003d3a:	f003 f9c1 	bl	80070c0 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>
    *currentTrans = newTransition;
 8003d3e:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003d42:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003d46:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003d4a:	b1dc      	cbz	r4, 8003d84 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x120>
 8003d4c:	1d23      	adds	r3, r4, #4
 8003d4e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003d52:	6833      	ldr	r3, [r6, #0]
 8003d54:	f8c4 a008 	str.w	sl, [r4, #8]
 8003d58:	4630      	mov	r0, r6
 8003d5a:	68db      	ldr	r3, [r3, #12]
 8003d5c:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003d5e:	4798      	blx	r3
    newPresenter->activate();
 8003d60:	6823      	ldr	r3, [r4, #0]
 8003d62:	4620      	mov	r0, r4
 8003d64:	681b      	ldr	r3, [r3, #0]
 8003d66:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003d68:	4629      	mov	r1, r5
 8003d6a:	4630      	mov	r0, r6
 8003d6c:	f011 fc5c 	bl	8015628 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003d70:	682b      	ldr	r3, [r5, #0]
 8003d72:	4628      	mov	r0, r5
 8003d74:	691b      	ldr	r3, [r3, #16]
 8003d76:	4798      	blx	r3
    newTransition->invalidate();
 8003d78:	682b      	ldr	r3, [r5, #0]
 8003d7a:	4628      	mov	r0, r5
 8003d7c:	695b      	ldr	r3, [r3, #20]
}
 8003d7e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003d82:	4718      	bx	r3
    model->bind(newPresenter);
 8003d84:	4623      	mov	r3, r4
 8003d86:	e7e2      	b.n	8003d4e <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xea>
 8003d88:	08028c54 	.word	0x08028c54
 8003d8c:	08029c63 	.word	0x08029c63
 8003d90:	08028df0 	.word	0x08028df0
 8003d94:	08028e37 	.word	0x08028e37
 8003d98:	08028eda 	.word	0x08028eda
 8003d9c:	20013804 	.word	0x20013804
 8003da0:	20013800 	.word	0x20013800

08003da4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv>:
{
 8003da4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003da8:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003dac:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003dae:	68a0      	ldr	r0, [r4, #8]
 8003db0:	6803      	ldr	r3, [r0, #0]
 8003db2:	6a1b      	ldr	r3, [r3, #32]
 8003db4:	4798      	blx	r3
 8003db6:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8003dba:	d205      	bcs.n	8003dc8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x24>
 8003dbc:	4b42      	ldr	r3, [pc, #264]	; (8003ec8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x124>)
 8003dbe:	4a43      	ldr	r2, [pc, #268]	; (8003ecc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8003dc0:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003dc2:	4843      	ldr	r0, [pc, #268]	; (8003ed0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x12c>)
 8003dc4:	f023 f954 	bl	8027070 <__assert_func>
 8003dc8:	6860      	ldr	r0, [r4, #4]
 8003dca:	6803      	ldr	r3, [r0, #0]
 8003dcc:	6a1b      	ldr	r3, [r3, #32]
 8003dce:	4798      	blx	r3
 8003dd0:	280f      	cmp	r0, #15
 8003dd2:	d803      	bhi.n	8003ddc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x38>
 8003dd4:	4b3f      	ldr	r3, [pc, #252]	; (8003ed4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x130>)
 8003dd6:	4a3d      	ldr	r2, [pc, #244]	; (8003ecc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8003dd8:	21a4      	movs	r1, #164	; 0xa4
 8003dda:	e7f2      	b.n	8003dc2 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003ddc:	68e0      	ldr	r0, [r4, #12]
 8003dde:	6803      	ldr	r3, [r0, #0]
 8003de0:	6a1b      	ldr	r3, [r3, #32]
 8003de2:	4798      	blx	r3
 8003de4:	2837      	cmp	r0, #55	; 0x37
 8003de6:	d803      	bhi.n	8003df0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x4c>
 8003de8:	4b3b      	ldr	r3, [pc, #236]	; (8003ed8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x134>)
 8003dea:	4a38      	ldr	r2, [pc, #224]	; (8003ecc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8003dec:	21a5      	movs	r1, #165	; 0xa5
 8003dee:	e7e8      	b.n	8003dc2 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8003df0:	f00f fdee 	bl	80139d0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003df4:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003edc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x138>
 8003df8:	3004      	adds	r0, #4
 8003dfa:	f00f fe4f 	bl	8013a9c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003dfe:	f8d9 0000 	ldr.w	r0, [r9]
 8003e02:	b110      	cbz	r0, 8003e0a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8003e04:	6803      	ldr	r3, [r0, #0]
 8003e06:	68db      	ldr	r3, [r3, #12]
 8003e08:	4798      	blx	r3
    if (*currentTrans)
 8003e0a:	f8d9 0000 	ldr.w	r0, [r9]
 8003e0e:	b110      	cbz	r0, 8003e16 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8003e10:	6803      	ldr	r3, [r0, #0]
 8003e12:	681b      	ldr	r3, [r3, #0]
 8003e14:	4798      	blx	r3
    if (*currentScreen)
 8003e16:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8003ee0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x13c>
 8003e1a:	f8d8 0000 	ldr.w	r0, [r8]
 8003e1e:	b110      	cbz	r0, 8003e26 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8003e20:	6803      	ldr	r3, [r0, #0]
 8003e22:	695b      	ldr	r3, [r3, #20]
 8003e24:	4798      	blx	r3
    if (*currentPresenter)
 8003e26:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003e2a:	b110      	cbz	r0, 8003e32 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8003e2c:	6803      	ldr	r3, [r0, #0]
 8003e2e:	685b      	ldr	r3, [r3, #4]
 8003e30:	4798      	blx	r3
    if (*currentScreen)
 8003e32:	f8d8 0000 	ldr.w	r0, [r8]
 8003e36:	b110      	cbz	r0, 8003e3e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8003e38:	6803      	ldr	r3, [r0, #0]
 8003e3a:	681b      	ldr	r3, [r3, #0]
 8003e3c:	4798      	blx	r3
    if (*currentPresenter)
 8003e3e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003e42:	b110      	cbz	r0, 8003e4a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8003e44:	6803      	ldr	r3, [r0, #0]
 8003e46:	689b      	ldr	r3, [r3, #8]
 8003e48:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003e4a:	68e0      	ldr	r0, [r4, #12]
 8003e4c:	2100      	movs	r1, #0
 8003e4e:	f7ff fa77 	bl	8003340 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8003e52:	2114      	movs	r1, #20
 8003e54:	4605      	mov	r5, r0
 8003e56:	f7ff fa77 	bl	8003348 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003e5a:	68a0      	ldr	r0, [r4, #8]
 8003e5c:	6803      	ldr	r3, [r0, #0]
 8003e5e:	2100      	movs	r1, #0
 8003e60:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003e62:	4798      	blx	r3
 8003e64:	4606      	mov	r6, r0
 8003e66:	f003 f831 	bl	8006ecc <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003e6a:	6860      	ldr	r0, [r4, #4]
 8003e6c:	6803      	ldr	r3, [r0, #0]
 8003e6e:	2100      	movs	r1, #0
 8003e70:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003e72:	4798      	blx	r3
 8003e74:	4631      	mov	r1, r6
 8003e76:	4604      	mov	r4, r0
 8003e78:	f003 f802 	bl	8006e80 <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 8003e7c:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003e80:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003e84:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003e88:	b1dc      	cbz	r4, 8003ec2 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x11e>
 8003e8a:	1d23      	adds	r3, r4, #4
 8003e8c:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003e90:	6833      	ldr	r3, [r6, #0]
 8003e92:	f8c4 a008 	str.w	sl, [r4, #8]
 8003e96:	4630      	mov	r0, r6
 8003e98:	68db      	ldr	r3, [r3, #12]
 8003e9a:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003e9c:	4798      	blx	r3
    newPresenter->activate();
 8003e9e:	6823      	ldr	r3, [r4, #0]
 8003ea0:	4620      	mov	r0, r4
 8003ea2:	681b      	ldr	r3, [r3, #0]
 8003ea4:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003ea6:	4629      	mov	r1, r5
 8003ea8:	4630      	mov	r0, r6
 8003eaa:	f011 fbbd 	bl	8015628 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003eae:	682b      	ldr	r3, [r5, #0]
 8003eb0:	4628      	mov	r0, r5
 8003eb2:	691b      	ldr	r3, [r3, #16]
 8003eb4:	4798      	blx	r3
    newTransition->invalidate();
 8003eb6:	682b      	ldr	r3, [r5, #0]
 8003eb8:	4628      	mov	r0, r5
 8003eba:	695b      	ldr	r3, [r3, #20]
}
 8003ebc:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003ec0:	4718      	bx	r3
    model->bind(newPresenter);
 8003ec2:	4623      	mov	r3, r4
 8003ec4:	e7e2      	b.n	8003e8c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xe8>
 8003ec6:	bf00      	nop
 8003ec8:	08028c54 	.word	0x08028c54
 8003ecc:	08029d8f 	.word	0x08029d8f
 8003ed0:	08028df0 	.word	0x08028df0
 8003ed4:	08028e37 	.word	0x08028e37
 8003ed8:	08028eda 	.word	0x08028eda
 8003edc:	20013804 	.word	0x20013804
 8003ee0:	20013800 	.word	0x20013800

08003ee4 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 8003ee4:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8003ee6:	4770      	bx	lr

08003ee8 <_ZN8touchgfx8TextArea8setWidthEs>:
    virtual void setWidth(int16_t width)
 8003ee8:	b530      	push	{r4, r5, lr}
        boundingArea = calculateBoundingArea();
 8003eea:	6803      	ldr	r3, [r0, #0]
 8003eec:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 8003eee:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8003ef0:	466d      	mov	r5, sp
 8003ef2:	4601      	mov	r1, r0
 8003ef4:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setWidth(int16_t width)
 8003ef8:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8003efa:	4628      	mov	r0, r5
 8003efc:	4798      	blx	r3
 8003efe:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003f02:	343c      	adds	r4, #60	; 0x3c
 8003f04:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8003f08:	b005      	add	sp, #20
 8003f0a:	bd30      	pop	{r4, r5, pc}

08003f0c <_ZN8touchgfx8TextArea9setHeightEs>:
    virtual void setHeight(int16_t height)
 8003f0c:	b530      	push	{r4, r5, lr}
        boundingArea = calculateBoundingArea();
 8003f0e:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 8003f10:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 8003f12:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8003f14:	466d      	mov	r5, sp
 8003f16:	4601      	mov	r1, r0
 8003f18:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setHeight(int16_t height)
 8003f1c:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8003f1e:	4628      	mov	r0, r5
 8003f20:	4798      	blx	r3
 8003f22:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003f26:	343c      	adds	r4, #60	; 0x3c
 8003f28:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8003f2c:	b005      	add	sp, #20
 8003f2e:	bd30      	pop	{r4, r5, pc}

08003f30 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 8003f30:	2200      	movs	r2, #0
 8003f32:	8002      	strh	r2, [r0, #0]
 8003f34:	8042      	strh	r2, [r0, #2]
 8003f36:	8082      	strh	r2, [r0, #4]
 8003f38:	80c2      	strh	r2, [r0, #6]
    }
 8003f3a:	4770      	bx	lr

08003f3c <_ZN8touchgfx8TextArea8setAlphaEh>:
        alpha = newAlpha;
 8003f3c:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 8003f40:	4770      	bx	lr

08003f42 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8003f42:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 8003f44:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8003f46:	4604      	mov	r4, r0
        setX(x);
 8003f48:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8003f4a:	4615      	mov	r5, r2
        setX(x);
 8003f4c:	4798      	blx	r3
        setBaselineY(baselineY);
 8003f4e:	6823      	ldr	r3, [r4, #0]
 8003f50:	4629      	mov	r1, r5
 8003f52:	4620      	mov	r0, r4
 8003f54:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 8003f56:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 8003f5a:	4718      	bx	r3

08003f5c <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
    }
 8003f5c:	2000      	movs	r0, #0
 8003f5e:	4770      	bx	lr

08003f60 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 8003f60:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8003f62:	4770      	bx	lr

08003f64 <_ZN21Gauge_with_ValuesBaseD1Ev>:
}

Gauge_with_ValuesBase::~Gauge_with_ValuesBase()
{

}
 8003f64:	4770      	bx	lr

08003f66 <_ZN21Gauge_with_ValuesBase10initializeEv>:

void Gauge_with_ValuesBase::initialize()
{

}
 8003f66:	4770      	bx	lr

08003f68 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 8003f68:	4770      	bx	lr

08003f6a <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 8003f6a:	b510      	push	{r4, lr}
 8003f6c:	214c      	movs	r1, #76	; 0x4c
 8003f6e:	4604      	mov	r4, r0
 8003f70:	f022 fa8d 	bl	802648e <_ZdlPvj>
 8003f74:	4620      	mov	r0, r4
 8003f76:	bd10      	pop	{r4, pc}

08003f78 <_ZN21Gauge_with_ValuesBaseD0Ev>:
Gauge_with_ValuesBase::~Gauge_with_ValuesBase()
 8003f78:	b510      	push	{r4, lr}
}
 8003f7a:	f44f 7162 	mov.w	r1, #904	; 0x388
Gauge_with_ValuesBase::~Gauge_with_ValuesBase()
 8003f7e:	4604      	mov	r4, r0
}
 8003f80:	f022 fa85 	bl	802648e <_ZdlPvj>
 8003f84:	4620      	mov	r0, r4
 8003f86:	bd10      	pop	{r4, pc}

08003f88 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
    virtual void invalidateContent() const
 8003f88:	b508      	push	{r3, lr}
        Widget::invalidateContent();
 8003f8a:	f7fd f973 	bl	8001274 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 8003f8e:	bd08      	pop	{r3, pc}

08003f90 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8003f90:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 8003f92:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8003f94:	6b5e      	ldr	r6, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003f96:	4b12      	ldr	r3, [pc, #72]	; (8003fe0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 8003f98:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 8003f9a:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8003f9c:	b28d      	uxth	r5, r1
 8003f9e:	b92b      	cbnz	r3, 8003fac <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 8003fa0:	4b10      	ldr	r3, [pc, #64]	; (8003fe4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 8003fa2:	4a11      	ldr	r2, [pc, #68]	; (8003fe8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8003fa4:	216c      	movs	r1, #108	; 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003fa6:	4811      	ldr	r0, [pc, #68]	; (8003fec <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 8003fa8:	f023 f862 	bl	8027070 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8003fac:	4910      	ldr	r1, [pc, #64]	; (8003ff0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 8003fae:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003fb0:	8809      	ldrh	r1, [r1, #0]
 8003fb2:	4291      	cmp	r1, r2
 8003fb4:	d803      	bhi.n	8003fbe <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 8003fb6:	4b0f      	ldr	r3, [pc, #60]	; (8003ff4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 8003fb8:	4a0b      	ldr	r2, [pc, #44]	; (8003fe8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8003fba:	216d      	movs	r1, #109	; 0x6d
 8003fbc:	e7f3      	b.n	8003fa6 <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 8003fbe:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8003fc2:	4b0d      	ldr	r3, [pc, #52]	; (8003ff8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 8003fc4:	681b      	ldr	r3, [r3, #0]
 8003fc6:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8003fca:	6803      	ldr	r3, [r0, #0]
 8003fcc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003fce:	4798      	blx	r3
 8003fd0:	1a28      	subs	r0, r5, r0
 8003fd2:	b201      	sxth	r1, r0
 8003fd4:	4633      	mov	r3, r6
 8003fd6:	4620      	mov	r0, r4
    }
 8003fd8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8003fdc:	4718      	bx	r3
 8003fde:	bf00      	nop
 8003fe0:	20013814 	.word	0x20013814
 8003fe4:	08028acc 	.word	0x08028acc
 8003fe8:	08028b0e 	.word	0x08028b0e
 8003fec:	08028b49 	.word	0x08028b49
 8003ff0:	20013818 	.word	0x20013818
 8003ff4:	08029ff0 	.word	0x08029ff0
 8003ff8:	2001381c 	.word	0x2001381c

08003ffc <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 8003ffc:	2200      	movs	r2, #0
 8003ffe:	f04f 31ff 	mov.w	r1, #4294967295
 8004002:	e9c0 2100 	strd	r2, r1, [r0]
              text(0)
 8004006:	6082      	str	r2, [r0, #8]
    }
 8004008:	4770      	bx	lr
	...

0800400c <_ZN21Gauge_with_ValuesBaseC1Ev>:
Gauge_with_ValuesBase::Gauge_with_ValuesBase()
 800400c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
          touchable(false),
 8004010:	f44f 7380 	mov.w	r3, #256	; 0x100
 8004014:	4680      	mov	r8, r0
 8004016:	2600      	movs	r6, #0
 8004018:	ed2d 8b02 	vpush	{d8}
 800401c:	8483      	strh	r3, [r0, #36]	; 0x24
 800401e:	4bb2      	ldr	r3, [pc, #712]	; (80042e8 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2dc>)
          firstChild(0)
 8004020:	6286      	str	r6, [r0, #40]	; 0x28
 8004022:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8004026:	e9c0 6603 	strd	r6, r6, [r0, #12]
          nextSibling(0),
 800402a:	e9c0 6605 	strd	r6, r6, [r0, #20]
          cachedAbsX(0),
 800402e:	e9c0 6607 	strd	r6, r6, [r0, #28]
 8004032:	f848 3b2c 	str.w	r3, [r8], #44
 8004036:	b08b      	sub	sp, #44	; 0x2c
 8004038:	4604      	mov	r4, r0
 800403a:	4640      	mov	r0, r8
 800403c:	f7fe f9c8 	bl	80023d0 <_ZN8touchgfx8TextAreaC1Ev>
 8004040:	f104 0374 	add.w	r3, r4, #116	; 0x74
 8004044:	f104 0bbc 	add.w	fp, r4, #188	; 0xbc
 8004048:	4618      	mov	r0, r3
 800404a:	9303      	str	r3, [sp, #12]
 800404c:	f504 7a82 	add.w	sl, r4, #260	; 0x104
 8004050:	f7fe f9be 	bl	80023d0 <_ZN8touchgfx8TextAreaC1Ev>
 8004054:	4658      	mov	r0, fp
 8004056:	f7fe f9bb 	bl	80023d0 <_ZN8touchgfx8TextAreaC1Ev>
 800405a:	f504 79a8 	add.w	r9, r4, #336	; 0x150
        : TextAreaWithWildcardBase(), wc1(0)
 800405e:	4da3      	ldr	r5, [pc, #652]	; (80042ec <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e0>)
        : TextArea()
 8004060:	4650      	mov	r0, sl
 8004062:	f7fe f9b5 	bl	80023d0 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8004066:	f8c4 5104 	str.w	r5, [r4, #260]	; 0x104
 800406a:	f8c4 614c 	str.w	r6, [r4, #332]	; 0x14c
        : TextArea()
 800406e:	4648      	mov	r0, r9
 8004070:	f7fe f9ae 	bl	80023d0 <_ZN8touchgfx8TextAreaC1Ev>
 8004074:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
 8004078:	f504 77f4 	add.w	r7, r4, #488	; 0x1e8
 800407c:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 800407e:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
 8004082:	f8c4 6198 	str.w	r6, [r4, #408]	; 0x198
 8004086:	ee08 3a10 	vmov	s16, r3
        : TextArea()
 800408a:	f7fe f9a1 	bl	80023d0 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 800408e:	f8c4 519c 	str.w	r5, [r4, #412]	; 0x19c
 8004092:	f8c4 61e4 	str.w	r6, [r4, #484]	; 0x1e4
 8004096:	4638      	mov	r0, r7
 8004098:	f00c fc54 	bl	8010944 <_ZN8touchgfx5GaugeC1Ev>
        rect.width = width;
 800409c:	4a94      	ldr	r2, [pc, #592]	; (80042f0 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e4>)
 800409e:	60a2      	str	r2, [r4, #8]
    textArea4_2.setXY(217, 109);
 80040a0:	4640      	mov	r0, r8
 80040a2:	226d      	movs	r2, #109	; 0x6d
 80040a4:	21d9      	movs	r1, #217	; 0xd9
        boundingArea = calculateBoundingArea();
 80040a6:	ad04      	add	r5, sp, #16
 80040a8:	f7fe f960 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80040ac:	f04f 33ff 	mov.w	r3, #4294967295
 80040b0:	65e3      	str	r3, [r4, #92]	; 0x5c
        boundingArea = calculateBoundingArea();
 80040b2:	4641      	mov	r1, r8
 80040b4:	4628      	mov	r0, r5
        linespace = space;
 80040b6:	f8a4 6060 	strh.w	r6, [r4, #96]	; 0x60
        boundingArea = calculateBoundingArea();
 80040ba:	f00c f90b 	bl	80102d4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80040be:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80040c2:	f104 0c68 	add.w	ip, r4, #104	; 0x68
 80040c6:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
        : typedTextId(id)
 80040ca:	4b8a      	ldr	r3, [pc, #552]	; (80042f4 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 80040cc:	9308      	str	r3, [sp, #32]
 80040ce:	2215      	movs	r2, #21
    textArea4_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D6CM));
 80040d0:	a908      	add	r1, sp, #32
 80040d2:	4640      	mov	r0, r8
 80040d4:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 80040d8:	f00c fb96 	bl	8010808 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea4_2);
 80040dc:	4641      	mov	r1, r8
 80040de:	4620      	mov	r0, r4
 80040e0:	f00a f9de 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_1.setXY(0, 109);
 80040e4:	9b03      	ldr	r3, [sp, #12]
 80040e6:	4631      	mov	r1, r6
 80040e8:	4618      	mov	r0, r3
 80040ea:	226d      	movs	r2, #109	; 0x6d
 80040ec:	f7fe f93e 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
 80040f0:	9b03      	ldr	r3, [sp, #12]
        linespace = space;
 80040f2:	f8a4 60a8 	strh.w	r6, [r4, #168]	; 0xa8
        color = newColor;
 80040f6:	f04f 32ff 	mov.w	r2, #4294967295
 80040fa:	f8c4 20a4 	str.w	r2, [r4, #164]	; 0xa4
        boundingArea = calculateBoundingArea();
 80040fe:	4619      	mov	r1, r3
 8004100:	4628      	mov	r0, r5
 8004102:	f00c f8e7 	bl	80102d4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004106:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800410a:	4b7a      	ldr	r3, [pc, #488]	; (80042f4 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 800410c:	9308      	str	r3, [sp, #32]
    textArea4_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YENI));
 800410e:	9b03      	ldr	r3, [sp, #12]
 8004110:	f104 0cb0 	add.w	ip, r4, #176	; 0xb0
 8004114:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 8004118:	2216      	movs	r2, #22
 800411a:	a908      	add	r1, sp, #32
 800411c:	4618      	mov	r0, r3
 800411e:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 8004122:	f00c fb71 	bl	8010808 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea4_1);
 8004126:	9b03      	ldr	r3, [sp, #12]
 8004128:	4620      	mov	r0, r4
 800412a:	4619      	mov	r1, r3
 800412c:	f00a f9b8 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4.setXY(113, 0);
 8004130:	4632      	mov	r2, r6
 8004132:	4658      	mov	r0, fp
 8004134:	2171      	movs	r1, #113	; 0x71
 8004136:	f7fe f919 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800413a:	f04f 32ff 	mov.w	r2, #4294967295
 800413e:	f8c4 20ec 	str.w	r2, [r4, #236]	; 0xec
        boundingArea = calculateBoundingArea();
 8004142:	4659      	mov	r1, fp
 8004144:	4628      	mov	r0, r5
        linespace = space;
 8004146:	f8a4 60f0 	strh.w	r6, [r4, #240]	; 0xf0
        boundingArea = calculateBoundingArea();
 800414a:	f00c f8c3 	bl	80102d4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800414e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004152:	f104 03f8 	add.w	r3, r4, #248	; 0xf8
 8004156:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800415a:	4b66      	ldr	r3, [pc, #408]	; (80042f4 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 800415c:	9308      	str	r3, [sp, #32]
    textArea4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Z8XU));
 800415e:	a908      	add	r1, sp, #32
 8004160:	2317      	movs	r3, #23
 8004162:	4658      	mov	r0, fp
 8004164:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8004168:	f00c fb4e 	bl	8010808 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea4);
 800416c:	4659      	mov	r1, fp
 800416e:	4620      	mov	r0, r4
 8004170:	f00a f996 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5.setXY(76, 124);
 8004174:	4650      	mov	r0, sl
 8004176:	227c      	movs	r2, #124	; 0x7c
 8004178:	214c      	movs	r1, #76	; 0x4c
 800417a:	f7fe f8f7 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
 800417e:	f8d4 3104 	ldr.w	r3, [r4, #260]	; 0x104
        linespace = space;
 8004182:	f8a4 6138 	strh.w	r6, [r4, #312]	; 0x138
        color = newColor;
 8004186:	f04f 32ff 	mov.w	r2, #4294967295
 800418a:	f8c4 2134 	str.w	r2, [r4, #308]	; 0x134
        boundingArea = calculateBoundingArea();
 800418e:	4651      	mov	r1, sl
 8004190:	4628      	mov	r0, r5
 8004192:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8004196:	4798      	blx	r3
 8004198:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800419c:	f504 73a0 	add.w	r3, r4, #320	; 0x140
 80041a0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80041a4:	4b53      	ldr	r3, [pc, #332]	; (80042f4 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 80041a6:	9308      	str	r3, [sp, #32]
    textArea5.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RQ3J));
 80041a8:	a908      	add	r1, sp, #32
 80041aa:	2314      	movs	r3, #20
 80041ac:	4650      	mov	r0, sl
 80041ae:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80041b2:	f00c fb29 	bl	8010808 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea5);
 80041b6:	4651      	mov	r1, sl
 80041b8:	4620      	mov	r0, r4
 80041ba:	f00a f971 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5_1.setXY(86, 139);
 80041be:	4648      	mov	r0, r9
 80041c0:	228b      	movs	r2, #139	; 0x8b
 80041c2:	2156      	movs	r1, #86	; 0x56
 80041c4:	f7fe f8d2 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
 80041c8:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
        linespace = space;
 80041cc:	f8a4 6184 	strh.w	r6, [r4, #388]	; 0x184
        color = newColor;
 80041d0:	f04f 32ff 	mov.w	r2, #4294967295
 80041d4:	f8c4 2180 	str.w	r2, [r4, #384]	; 0x180
        boundingArea = calculateBoundingArea();
 80041d8:	4649      	mov	r1, r9
 80041da:	4628      	mov	r0, r5
 80041dc:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80041e0:	4798      	blx	r3
 80041e2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80041e6:	f504 73c6 	add.w	r3, r4, #396	; 0x18c
 80041ea:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80041ee:	4b41      	ldr	r3, [pc, #260]	; (80042f4 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 80041f0:	9308      	str	r3, [sp, #32]
    textArea5_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_54VS));
 80041f2:	a908      	add	r1, sp, #32
 80041f4:	2313      	movs	r3, #19
 80041f6:	4648      	mov	r0, r9
 80041f8:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80041fc:	f00c fb04 	bl	8010808 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea5_1);
 8004200:	4649      	mov	r1, r9
 8004202:	4620      	mov	r0, r4
 8004204:	f00a f94c 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5_2.setXY(86, 154);
 8004208:	ee18 0a10 	vmov	r0, s16
 800420c:	229a      	movs	r2, #154	; 0x9a
 800420e:	2156      	movs	r1, #86	; 0x56
 8004210:	f7fe f8ac 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
 8004214:	f8d4 319c 	ldr.w	r3, [r4, #412]	; 0x19c
        linespace = space;
 8004218:	f8a4 61d0 	strh.w	r6, [r4, #464]	; 0x1d0
        color = newColor;
 800421c:	f04f 32ff 	mov.w	r2, #4294967295
        boundingArea = calculateBoundingArea();
 8004220:	ee18 1a10 	vmov	r1, s16
        color = newColor;
 8004224:	f8c4 21cc 	str.w	r2, [r4, #460]	; 0x1cc
        boundingArea = calculateBoundingArea();
 8004228:	4628      	mov	r0, r5
 800422a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800422e:	4798      	blx	r3
 8004230:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004234:	f504 73ec 	add.w	r3, r4, #472	; 0x1d8
 8004238:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800423c:	2512      	movs	r5, #18
 800423e:	4b2d      	ldr	r3, [pc, #180]	; (80042f4 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8004240:	9308      	str	r3, [sp, #32]
    textArea5_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UKDF));
 8004242:	ee18 0a10 	vmov	r0, s16
 8004246:	a908      	add	r1, sp, #32
 8004248:	f8ad 5024 	strh.w	r5, [sp, #36]	; 0x24
 800424c:	f00c fadc 	bl	8010808 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea5_2);
 8004250:	ee18 1a10 	vmov	r1, s16
 8004254:	4620      	mov	r0, r4
 8004256:	f00a f923 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800425a:	2304      	movs	r3, #4
    gauge1.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 800425c:	a908      	add	r1, sp, #32
 800425e:	4638      	mov	r0, r7
 8004260:	f8ad 3020 	strh.w	r3, [sp, #32]
 8004264:	f00a f8ae 	bl	800e3c4 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
        setXY(x, y);
 8004268:	462a      	mov	r2, r5
 800426a:	4638      	mov	r0, r7
 800426c:	211c      	movs	r1, #28
 800426e:	f7fe f87d 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8004272:	f8d4 31e8 	ldr.w	r3, [r4, #488]	; 0x1e8
 8004276:	4638      	mov	r0, r7
 8004278:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800427a:	21b8      	movs	r1, #184	; 0xb8
 800427c:	4798      	blx	r3
        setHeight(height);
 800427e:	f8d4 31e8 	ldr.w	r3, [r4, #488]	; 0x1e8
 8004282:	4638      	mov	r0, r7
 8004284:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004286:	216a      	movs	r1, #106	; 0x6a
 8004288:	4798      	blx	r3
    gauge1.setCenter(92, 92);
 800428a:	225c      	movs	r2, #92	; 0x5c
 800428c:	4611      	mov	r1, r2
 800428e:	4638      	mov	r0, r7
 8004290:	f00c fc03 	bl	8010a9a <_ZN8touchgfx5Gauge9setCenterEii>
    gauge1.setStartEndAngle(-90, 90);
 8004294:	4638      	mov	r0, r7
 8004296:	225a      	movs	r2, #90	; 0x5a
 8004298:	f06f 0159 	mvn.w	r1, #89	; 0x59
 800429c:	f00c fc82 	bl	8010ba4 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    gauge1.setRange(-90, 90);
 80042a0:	4633      	mov	r3, r6
 80042a2:	225a      	movs	r2, #90	; 0x5a
 80042a4:	4638      	mov	r0, r7
 80042a6:	9600      	str	r6, [sp, #0]
 80042a8:	f06f 0159 	mvn.w	r1, #89	; 0x59
 80042ac:	f009 ff37 	bl	800e11e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    gauge1.setValue(0);
 80042b0:	4631      	mov	r1, r6
 80042b2:	4638      	mov	r0, r7
 80042b4:	f00c fc20 	bl	8010af8 <_ZN8touchgfx5Gauge8setValueEi>
    gauge1.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 80042b8:	2335      	movs	r3, #53	; 0x35
 80042ba:	2208      	movs	r2, #8
 80042bc:	4638      	mov	r0, r7
 80042be:	2105      	movs	r1, #5
 80042c0:	f00c fbd6 	bl	8010a70 <_ZN8touchgfx5Gauge9setNeedleEtss>
    gauge1.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 80042c4:	4638      	mov	r0, r7
 80042c6:	2101      	movs	r1, #1
 80042c8:	f00c fb74 	bl	80109b4 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    gauge1.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 80042cc:	4638      	mov	r0, r7
 80042ce:	2101      	movs	r1, #1
 80042d0:	f00c fb73 	bl	80109ba <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    add(gauge1);
 80042d4:	4620      	mov	r0, r4
 80042d6:	4639      	mov	r1, r7
 80042d8:	f00a f8e2 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80042dc:	4620      	mov	r0, r4
 80042de:	b00b      	add	sp, #44	; 0x2c
 80042e0:	ecbd 8b02 	vpop	{d8}
 80042e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80042e8:	0802a0c8 	.word	0x0802a0c8
 80042ec:	0802a038 	.word	0x0802a038
 80042f0:	00a900f0 	.word	0x00a900f0
 80042f4:	08028c00 	.word	0x08028c00

080042f8 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 80042f8:	6a40      	ldr	r0, [r0, #36]	; 0x24
 80042fa:	4770      	bx	lr

080042fc <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 80042fc:	6a80      	ldr	r0, [r0, #40]	; 0x28
 80042fe:	4770      	bx	lr

08004300 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8004300:	4770      	bx	lr

08004302 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8004302:	888b      	ldrh	r3, [r1, #4]
 8004304:	69c0      	ldr	r0, [r0, #28]
 8004306:	680a      	ldr	r2, [r1, #0]
 8004308:	0adb      	lsrs	r3, r3, #11
 800430a:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 800430e:	4410      	add	r0, r2
 8004310:	4770      	bx	lr

08004312 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8004312:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 8004314:	b1c2      	cbz	r2, 8004348 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8004316:	7b13      	ldrb	r3, [r2, #12]
 8004318:	b1b3      	cbz	r3, 8004348 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 800431a:	7b54      	ldrb	r4, [r2, #13]
 800431c:	7ad2      	ldrb	r2, [r2, #11]
 800431e:	0224      	lsls	r4, r4, #8
 8004320:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8004324:	4314      	orrs	r4, r2
 8004326:	6a02      	ldr	r2, [r0, #32]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8004328:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 800432a:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 800432e:	8813      	ldrh	r3, [r2, #0]
 8004330:	428b      	cmp	r3, r1
 8004332:	d102      	bne.n	800433a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8004334:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 8004338:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 800433a:	d805      	bhi.n	8004348 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 800433c:	3801      	subs	r0, #1
 800433e:	b280      	uxth	r0, r0
 8004340:	3204      	adds	r2, #4
 8004342:	2800      	cmp	r0, #0
 8004344:	d1f3      	bne.n	800432e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8004346:	e7f7      	b.n	8004338 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8004348:	2000      	movs	r0, #0
 800434a:	e7f5      	b.n	8004338 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

0800434c <_ZN8touchgfx13GeneratedFontD0Ev>:
 800434c:	b510      	push	{r4, lr}
 800434e:	212c      	movs	r1, #44	; 0x2c
 8004350:	4604      	mov	r4, r0
 8004352:	f022 f89c 	bl	802648e <_ZdlPvj>
 8004356:	4620      	mov	r0, r4
 8004358:	bd10      	pop	{r4, pc}
	...

0800435c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 800435c:	b530      	push	{r4, r5, lr}
 800435e:	b08b      	sub	sp, #44	; 0x2c
 8004360:	4604      	mov	r4, r0
      arabicTable(formsTable)
 8004362:	f8bd 5060 	ldrh.w	r5, [sp, #96]	; 0x60
 8004366:	9508      	str	r5, [sp, #32]
 8004368:	f8bd 505c 	ldrh.w	r5, [sp, #92]	; 0x5c
 800436c:	9507      	str	r5, [sp, #28]
 800436e:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8004372:	9506      	str	r5, [sp, #24]
 8004374:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
 8004378:	9505      	str	r5, [sp, #20]
 800437a:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 800437e:	9504      	str	r5, [sp, #16]
 8004380:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8004384:	9503      	str	r5, [sp, #12]
 8004386:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 800438a:	9502      	str	r5, [sp, #8]
 800438c:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 8004390:	9501      	str	r5, [sp, #4]
 8004392:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 8004396:	9500      	str	r5, [sp, #0]
 8004398:	f010 fcb0 	bl	8014cfc <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 800439c:	4b06      	ldr	r3, [pc, #24]	; (80043b8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 800439e:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 80043a0:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80043a2:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 80043a4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80043a6:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 80043a8:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80043aa:	6263      	str	r3, [r4, #36]	; 0x24
      arabicTable(formsTable)
 80043ac:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80043ae:	62a3      	str	r3, [r4, #40]	; 0x28
}
 80043b0:	4620      	mov	r0, r4
 80043b2:	b00b      	add	sp, #44	; 0x2c
 80043b4:	bd30      	pop	{r4, r5, pc}
 80043b6:	bf00      	nop
 80043b8:	0802a15c 	.word	0x0802a15c

080043bc <_ZN17Main_MenuViewBase11setupScreenEv>:
}

void Main_MenuViewBase::setupScreen()
{

}
 80043bc:	4770      	bx	lr

080043be <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80043be:	4770      	bx	lr

080043c0 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80043c0:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80043c2:	68c2      	ldr	r2, [r0, #12]
 80043c4:	6844      	ldr	r4, [r0, #4]
 80043c6:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80043c8:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80043ca:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80043ce:	07d2      	lsls	r2, r2, #31
 80043d0:	bf48      	it	mi
 80043d2:	5962      	ldrmi	r2, [r4, r5]
 80043d4:	689b      	ldr	r3, [r3, #8]
    }
 80043d6:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80043d8:	bf48      	it	mi
 80043da:	58d3      	ldrmi	r3, [r2, r3]
 80043dc:	4718      	bx	r3

080043de <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80043de:	6843      	ldr	r3, [r0, #4]
 80043e0:	b12b      	cbz	r3, 80043ee <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80043e2:	6883      	ldr	r3, [r0, #8]
 80043e4:	b92b      	cbnz	r3, 80043f2 <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80043e6:	68c0      	ldr	r0, [r0, #12]
 80043e8:	f000 0001 	and.w	r0, r0, #1
 80043ec:	4770      	bx	lr
 80043ee:	4618      	mov	r0, r3
 80043f0:	4770      	bx	lr
 80043f2:	2001      	movs	r0, #1
    }
 80043f4:	4770      	bx	lr

080043f6 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80043f6:	b510      	push	{r4, lr}
 80043f8:	2110      	movs	r1, #16
 80043fa:	4604      	mov	r4, r0
 80043fc:	f022 f847 	bl	802648e <_ZdlPvj>
 8004400:	4620      	mov	r0, r4
 8004402:	bd10      	pop	{r4, pc}

08004404 <_ZN17Main_MenuViewBaseD1Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 8004404:	b510      	push	{r4, lr}
 8004406:	4b03      	ldr	r3, [pc, #12]	; (8004414 <_ZN17Main_MenuViewBaseD1Ev+0x10>)
 8004408:	6003      	str	r3, [r0, #0]
 800440a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800440c:	f00d fdde 	bl	8011fcc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8004410:	4620      	mov	r0, r4
 8004412:	bd10      	pop	{r4, pc}
 8004414:	0802a210 	.word	0x0802a210

08004418 <_ZN17Main_MenuViewBaseD0Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 8004418:	b507      	push	{r0, r1, r2, lr}
 800441a:	4b07      	ldr	r3, [pc, #28]	; (8004438 <_ZN17Main_MenuViewBaseD0Ev+0x20>)
 800441c:	6003      	str	r3, [r0, #0]
 800441e:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8004420:	f00d fdd4 	bl	8011fcc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8004424:	9801      	ldr	r0, [sp, #4]
 8004426:	f241 117c 	movw	r1, #4476	; 0x117c
 800442a:	f022 f830 	bl	802648e <_ZdlPvj>
 800442e:	9801      	ldr	r0, [sp, #4]
 8004430:	b003      	add	sp, #12
 8004432:	f85d fb04 	ldr.w	pc, [sp], #4
 8004436:	bf00      	nop
 8004438:	0802a210 	.word	0x0802a210

0800443c <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Main_MenuViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 800443c:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel1)
 800443e:	f500 7334 	add.w	r3, r0, #720	; 0x2d0
 8004442:	4299      	cmp	r1, r3
{
 8004444:	4604      	mov	r4, r0
 8004446:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel1)
 8004448:	d103      	bne.n	8004452 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Main_MenuViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800444a:	f00f fac1 	bl	80139d0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel1 clicked change screen to Measurement
        //Go to Measurement with screen transition towards East
        application().gotoMeasurementScreenWipeTransitionEast();
 800444e:	f7fe fca5 	bl	8002d9c <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 8004452:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8004456:	429d      	cmp	r5, r3
 8004458:	d103      	bne.n	8004462 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 800445a:	f00f fab9 	bl	80139d0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel2 clicked change screen to Calibration
        //Go to Calibration with screen transition towards East
        application().gotoCalibrationScreenWipeTransitionEast();
 800445e:	f7fe fd2d 	bl	8002ebc <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel3)
 8004462:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8004466:	429d      	cmp	r5, r3
 8004468:	d103      	bne.n	8004472 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x36>
 800446a:	f00f fab1 	bl	80139d0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction3
        //When buttonWithLabel3 clicked change screen to Project_Info
        //Go to Project_Info with screen transition towards East
        application().gotoProject_InfoScreenWipeTransitionEast();
 800446e:	f7fe fd35 	bl	8002edc <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithIcon1)
 8004472:	f504 7446 	add.w	r4, r4, #792	; 0x318
 8004476:	42a5      	cmp	r5, r4
 8004478:	d10a      	bne.n	8004490 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x54>
    {
        //Interaction4
        //When buttonWithIcon1 clicked execute C++ code
        //Execute C++ code
        #ifndef SIMULATOR
        HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 800447a:	4806      	ldr	r0, [pc, #24]	; (8004494 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x58>)
 800447c:	2200      	movs	r2, #0
 800447e:	2120      	movs	r1, #32
 8004480:	f003 fd2a 	bl	8007ed8 <HAL_GPIO_WritePin>
 8004484:	f00f faa4 	bl	80139d0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction5
        //When buttonWithIcon1 clicked change screen to Shutting_Off
        //Go to Shutting_Off with no screen transition
        application().gotoShutting_OffScreenNoTransition();
    }
}
 8004488:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoShutting_OffScreenNoTransition();
 800448c:	f7fe bd36 	b.w	8002efc <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8004490:	bd38      	pop	{r3, r4, r5, pc}
 8004492:	bf00      	nop
 8004494:	40021000 	.word	0x40021000

08004498 <_ZN17Main_MenuViewBaseC1Ev>:
Main_MenuViewBase::Main_MenuViewBase() :
 8004498:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800449c:	ed2d 8b06 	vpush	{d8-d10}
 80044a0:	4604      	mov	r4, r0
 80044a2:	b08f      	sub	sp, #60	; 0x3c
    buttonCallback(this, &Main_MenuViewBase::buttonCallbackHandler)
 80044a4:	46a3      	mov	fp, r4
        : presenter(0)
 80044a6:	2500      	movs	r5, #0
 80044a8:	f010 ff12 	bl	80152d0 <_ZN8touchgfx6ScreenC1Ev>
 80044ac:	4b6a      	ldr	r3, [pc, #424]	; (8004658 <_ZN17Main_MenuViewBaseC1Ev+0x1c0>)
 80044ae:	63e5      	str	r5, [r4, #60]	; 0x3c
 80044b0:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 80044b4:	2226      	movs	r2, #38	; 0x26
 80044b6:	4629      	mov	r1, r5
 80044b8:	4658      	mov	r0, fp
 80044ba:	f022 ffde 	bl	802747a <memset>
 80044be:	4658      	mov	r0, fp
 80044c0:	f7fd ff74 	bl	80023ac <_ZN8touchgfx6WidgetC1Ev>
 80044c4:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 80044c8:	26ff      	movs	r6, #255	; 0xff
 80044ca:	4b64      	ldr	r3, [pc, #400]	; (800465c <_ZN17Main_MenuViewBaseC1Ev+0x1c4>)
 80044cc:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80044ce:	2226      	movs	r2, #38	; 0x26
 80044d0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80044d4:	4629      	mov	r1, r5
 80044d6:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80044da:	4650      	mov	r0, sl
        : color(col)
 80044dc:	66a5      	str	r5, [r4, #104]	; 0x68
 80044de:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80044e2:	f022 ffca 	bl	802747a <memset>
 80044e6:	4650      	mov	r0, sl
 80044e8:	f7fd ff60 	bl	80023ac <_ZN8touchgfx6WidgetC1Ev>
 80044ec:	4b5c      	ldr	r3, [pc, #368]	; (8004660 <_ZN17Main_MenuViewBaseC1Ev+0x1c8>)
 80044ee:	66e3      	str	r3, [r4, #108]	; 0x6c
 80044f0:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 80044f4:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80044f8:	a90c      	add	r1, sp, #48	; 0x30
 80044fa:	4650      	mov	r0, sl
 80044fc:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8004500:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8004504:	f00c fd5b 	bl	8010fbe <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8004508:	4648      	mov	r0, r9
 800450a:	f7fd ff61 	bl	80023d0 <_ZN8touchgfx8TextAreaC1Ev>
 800450e:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 8004512:	4b54      	ldr	r3, [pc, #336]	; (8004664 <_ZN17Main_MenuViewBaseC1Ev+0x1cc>)
 8004514:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8004518:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 800451c:	4638      	mov	r0, r7
 800451e:	f00b fc17 	bl	800fd50 <_ZN8touchgfx4LineC1Ev>
 8004522:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8004526:	4618      	mov	r0, r3
 8004528:	9303      	str	r3, [sp, #12]
 800452a:	f7fc fec9 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800452e:	4b4e      	ldr	r3, [pc, #312]	; (8004668 <_ZN17Main_MenuViewBaseC1Ev+0x1d0>)
 8004530:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8004534:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 8004538:	3324      	adds	r3, #36	; 0x24
 800453a:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 800453e:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8004542:	4640      	mov	r0, r8
 8004544:	f7fd ff44 	bl	80023d0 <_ZN8touchgfx8TextAreaC1Ev>
 8004548:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 800454c:	4618      	mov	r0, r3
 800454e:	ee08 3a10 	vmov	s16, r3
 8004552:	f7fd ff3d 	bl	80023d0 <_ZN8touchgfx8TextAreaC1Ev>
 8004556:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 800455a:	4618      	mov	r0, r3
 800455c:	ee08 3a90 	vmov	s17, r3
 8004560:	f7fd ff36 	bl	80023d0 <_ZN8touchgfx8TextAreaC1Ev>
 8004564:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8004568:	4618      	mov	r0, r3
 800456a:	ee09 3a10 	vmov	s18, r3
 800456e:	f00c fe67 	bl	8011240 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8004572:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8004576:	4618      	mov	r0, r3
 8004578:	ee09 3a90 	vmov	s19, r3
 800457c:	f00c fe60 	bl	8011240 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8004580:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8004584:	4618      	mov	r0, r3
 8004586:	ee0a 3a10 	vmov	s20, r3
 800458a:	f00c fe59 	bl	8011240 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800458e:	f504 7346 	add.w	r3, r4, #792	; 0x318
 8004592:	4618      	mov	r0, r3
 8004594:	ee0a 3a90 	vmov	s21, r3
 8004598:	f00c fcea 	bl	8010f70 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800459c:	4a33      	ldr	r2, [pc, #204]	; (800466c <_ZN17Main_MenuViewBaseC1Ev+0x1d4>)
 800459e:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80045a2:	e9c3 245b 	strd	r2, r4, [r3, #364]	; 0x16c
 80045a6:	4a32      	ldr	r2, [pc, #200]	; (8004670 <_ZN17Main_MenuViewBaseC1Ev+0x1d8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80045a8:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80045ac:	e9c3 255d 	strd	r2, r5, [r3, #372]	; 0x174
 80045b0:	f504 7057 	add.w	r0, r4, #860	; 0x35c
 80045b4:	f00d fd00 	bl	8011fb8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80045b8:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80045bc:	462a      	mov	r2, r5
 80045be:	4658      	mov	r0, fp
 80045c0:	9300      	str	r3, [sp, #0]
 80045c2:	4629      	mov	r1, r5
 80045c4:	23f0      	movs	r3, #240	; 0xf0
 80045c6:	f7fd fede 	bl	8002386 <_ZN8touchgfx8Drawable11setPositionEssss>
 80045ca:	1d26      	adds	r6, r4, #4
        color = newColor;
 80045cc:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80045d0:	66a3      	str	r3, [r4, #104]	; 0x68
 80045d2:	4659      	mov	r1, fp
 80045d4:	4630      	mov	r0, r6
 80045d6:	f009 ff63 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80045da:	462a      	mov	r2, r5
 80045dc:	4650      	mov	r0, sl
 80045de:	4629      	mov	r1, r5
 80045e0:	f7fd fec4 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
 80045e4:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80045e6:	4650      	mov	r0, sl
 80045e8:	a90c      	add	r1, sp, #48	; 0x30
 80045ea:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80045ee:	f00c fce6 	bl	8010fbe <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80045f2:	4651      	mov	r1, sl
 80045f4:	4630      	mov	r0, r6
 80045f6:	f009 ff53 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(86, 308);
 80045fa:	f44f 729a 	mov.w	r2, #308	; 0x134
 80045fe:	2156      	movs	r1, #86	; 0x56
 8004600:	4648      	mov	r0, r9
 8004602:	f7fd feb3 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
 8004606:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 800460a:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 800460e:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8004612:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8004616:	4650      	mov	r0, sl
 8004618:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 800461c:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8004620:	4649      	mov	r1, r9
 8004622:	4798      	blx	r3
 8004624:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8004628:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 800462c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004630:	4b10      	ldr	r3, [pc, #64]	; (8004674 <_ZN17Main_MenuViewBaseC1Ev+0x1dc>)
 8004632:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_UQO1).getText());
 8004634:	f504 7a55 	add.w	sl, r4, #852	; 0x354
 8004638:	b92b      	cbnz	r3, 8004646 <_ZN17Main_MenuViewBaseC1Ev+0x1ae>
 800463a:	4b0f      	ldr	r3, [pc, #60]	; (8004678 <_ZN17Main_MenuViewBaseC1Ev+0x1e0>)
 800463c:	4a0f      	ldr	r2, [pc, #60]	; (800467c <_ZN17Main_MenuViewBaseC1Ev+0x1e4>)
 800463e:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004640:	480f      	ldr	r0, [pc, #60]	; (8004680 <_ZN17Main_MenuViewBaseC1Ev+0x1e8>)
 8004642:	f022 fd15 	bl	8027070 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8004646:	4b0f      	ldr	r3, [pc, #60]	; (8004684 <_ZN17Main_MenuViewBaseC1Ev+0x1ec>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004648:	881b      	ldrh	r3, [r3, #0]
 800464a:	2b10      	cmp	r3, #16
 800464c:	d81e      	bhi.n	800468c <_ZN17Main_MenuViewBaseC1Ev+0x1f4>
 800464e:	4b0e      	ldr	r3, [pc, #56]	; (8004688 <_ZN17Main_MenuViewBaseC1Ev+0x1f0>)
 8004650:	4a0a      	ldr	r2, [pc, #40]	; (800467c <_ZN17Main_MenuViewBaseC1Ev+0x1e4>)
 8004652:	2161      	movs	r1, #97	; 0x61
 8004654:	e7f4      	b.n	8004640 <_ZN17Main_MenuViewBaseC1Ev+0x1a8>
 8004656:	bf00      	nop
 8004658:	0802a210 	.word	0x0802a210
 800465c:	0802b0d8 	.word	0x0802b0d8
 8004660:	0802b2a0 	.word	0x0802b2a0
 8004664:	0802a038 	.word	0x0802a038
 8004668:	0802ae0c 	.word	0x0802ae0c
 800466c:	0802a1f8 	.word	0x0802a1f8
 8004670:	0800443d 	.word	0x0800443d
 8004674:	20013814 	.word	0x20013814
 8004678:	08028acc 	.word	0x08028acc
 800467c:	0802a1b4 	.word	0x0802a1b4
 8004680:	08028b49 	.word	0x08028b49
 8004684:	20013818 	.word	0x20013818
 8004688:	08029ff0 	.word	0x08029ff0
        return texts->getText(typedTextId);
 800468c:	4ba4      	ldr	r3, [pc, #656]	; (8004920 <_ZN17Main_MenuViewBaseC1Ev+0x488>)
 800468e:	2110      	movs	r1, #16
 8004690:	6818      	ldr	r0, [r3, #0]
 8004692:	f002 fad7 	bl	8006c44 <_ZNK8touchgfx5Texts7getTextEt>
 8004696:	4aa3      	ldr	r2, [pc, #652]	; (8004924 <_ZN17Main_MenuViewBaseC1Ev+0x48c>)
 8004698:	4603      	mov	r3, r0
 800469a:	2104      	movs	r1, #4
 800469c:	4650      	mov	r0, sl
 800469e:	f012 fafb 	bl	8016c98 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3.resizeToCurrentText();
 80046a2:	4648      	mov	r0, r9
        wc1 = value;
 80046a4:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 80046a8:	f00c f88e 	bl	80107c8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80046ac:	4b9e      	ldr	r3, [pc, #632]	; (8004928 <_ZN17Main_MenuViewBaseC1Ev+0x490>)
 80046ae:	930c      	str	r3, [sp, #48]	; 0x30
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2SIJ));
 80046b0:	a90c      	add	r1, sp, #48	; 0x30
 80046b2:	2311      	movs	r3, #17
 80046b4:	4648      	mov	r0, r9
 80046b6:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80046ba:	f00c f8a5 	bl	8010808 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80046be:	4649      	mov	r1, r9
 80046c0:	4630      	mov	r0, r6
 80046c2:	f009 feed 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80046c6:	230a      	movs	r3, #10
 80046c8:	9300      	str	r3, [sp, #0]
 80046ca:	2232      	movs	r2, #50	; 0x32
 80046cc:	23f0      	movs	r3, #240	; 0xf0
 80046ce:	4629      	mov	r1, r5
 80046d0:	4638      	mov	r0, r7
 80046d2:	f7fd fe58 	bl	8002386 <_ZN8touchgfx8Drawable11setPositionEssss>
 80046d6:	9b03      	ldr	r3, [sp, #12]
 80046d8:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80046dc:	22a0      	movs	r2, #160	; 0xa0
 80046de:	4611      	mov	r1, r2
 80046e0:	4638      	mov	r0, r7
 80046e2:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 80046e6:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 80046ea:	f00b fc47 	bl	800ff7c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80046ee:	22a0      	movs	r2, #160	; 0xa0
 80046f0:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80046f4:	4638      	mov	r0, r7
 80046f6:	f00b fc4c 	bl	800ff92 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80046fa:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 80046fe:	2b20      	cmp	r3, #32
 8004700:	d005      	beq.n	800470e <_ZN17Main_MenuViewBaseC1Ev+0x276>
        lineWidthQ5 = widthQ5;
 8004702:	2320      	movs	r3, #32
 8004704:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8004708:	4638      	mov	r0, r7
 800470a:	f00b fb41 	bl	800fd90 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800470e:	4638      	mov	r0, r7
 8004710:	2101      	movs	r1, #1
 8004712:	f00b fc49 	bl	800ffa8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8004716:	4639      	mov	r1, r7
 8004718:	4630      	mov	r0, r6
 800471a:	ad04      	add	r5, sp, #16
        color = newColor;
 800471c:	f04f 37ff 	mov.w	r7, #4294967295
        linespace = space;
 8004720:	f04f 0a00 	mov.w	sl, #0
 8004724:	f009 febc 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 36);
 8004728:	2224      	movs	r2, #36	; 0x24
 800472a:	4640      	mov	r0, r8
 800472c:	2145      	movs	r1, #69	; 0x45
 800472e:	f7fd fe1d 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8004732:	4641      	mov	r1, r8
 8004734:	4628      	mov	r0, r5
        color = newColor;
 8004736:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 800473a:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 800473e:	f00b fdc9 	bl	80102d4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004742:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6D7Z));
 8004746:	f10d 0930 	add.w	r9, sp, #48	; 0x30
 800474a:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 800474e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004752:	f8df b1d4 	ldr.w	fp, [pc, #468]	; 8004928 <_ZN17Main_MenuViewBaseC1Ev+0x490>
 8004756:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 800475a:	2336      	movs	r3, #54	; 0x36
 800475c:	4649      	mov	r1, r9
 800475e:	4640      	mov	r0, r8
 8004760:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8004764:	f00c f850 	bl	8010808 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004768:	4641      	mov	r1, r8
 800476a:	4630      	mov	r0, r6
 800476c:	f009 fe98 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(50, 12);
 8004770:	ee18 0a10 	vmov	r0, s16
 8004774:	220c      	movs	r2, #12
 8004776:	2132      	movs	r1, #50	; 0x32
 8004778:	f7fd fdf8 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
 800477c:	ee18 1a10 	vmov	r1, s16
 8004780:	4628      	mov	r0, r5
        color = newColor;
 8004782:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 8004786:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 800478a:	f00b fda3 	bl	80102d4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800478e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004792:	ee18 3a10 	vmov	r3, s16
 8004796:	333c      	adds	r3, #60	; 0x3c
 8004798:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800479c:	2337      	movs	r3, #55	; 0x37
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9K1W));
 800479e:	ee18 0a10 	vmov	r0, s16
 80047a2:	4649      	mov	r1, r9
 80047a4:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80047a8:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 80047ac:	f00c f82c 	bl	8010808 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80047b0:	ee18 1a10 	vmov	r1, s16
 80047b4:	4630      	mov	r0, r6
 80047b6:	f009 fe73 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(88, 60);
 80047ba:	ee18 0a90 	vmov	r0, s17
 80047be:	223c      	movs	r2, #60	; 0x3c
 80047c0:	2158      	movs	r1, #88	; 0x58
 80047c2:	f7fd fdd3 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
 80047c6:	ee18 1a90 	vmov	r1, s17
 80047ca:	4628      	mov	r0, r5
        color = newColor;
 80047cc:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 80047d0:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 80047d4:	f00b fd7e 	bl	80102d4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80047d8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80047dc:	ee18 3a90 	vmov	r3, s17
 80047e0:	333c      	adds	r3, #60	; 0x3c
 80047e2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L4HV));
 80047e6:	ee18 0a90 	vmov	r0, s17
 80047ea:	4649      	mov	r1, r9
 80047ec:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 80047f0:	f8ad a034 	strh.w	sl, [sp, #52]	; 0x34
 80047f4:	f00c f808 	bl	8010808 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80047f8:	ee18 1a90 	vmov	r1, s17
 80047fc:	4630      	mov	r0, r6
 80047fe:	f009 fe4f 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8004802:	ee19 0a10 	vmov	r0, s18
 8004806:	22f0      	movs	r2, #240	; 0xf0
 8004808:	2121      	movs	r1, #33	; 0x21
 800480a:	f7fd fdaf 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
 800480e:	f04f 0b03 	mov.w	fp, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8004812:	464a      	mov	r2, r9
 8004814:	f04f 0802 	mov.w	r8, #2
 8004818:	a90b      	add	r1, sp, #44	; 0x2c
 800481a:	ee19 0a10 	vmov	r0, s18
 800481e:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8004822:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
    buttonWithLabel3.setAction(buttonCallback);
 8004826:	f504 558b 	add.w	r5, r4, #4448	; 0x1160
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800482a:	f00c f9d2 	bl	8010bd2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800482e:	2338      	movs	r3, #56	; 0x38
 8004830:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8004834:	350c      	adds	r5, #12
        updateTextPosition();
 8004836:	ee19 0a10 	vmov	r0, s18
 800483a:	f7fd fdeb 	bl	8002414 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 800483e:	ee19 1a10 	vmov	r1, s18
 8004842:	4630      	mov	r0, r6
        colorPressed = col;
 8004844:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
 8004848:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 800484c:	f009 fe28 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8004850:	ee19 0a90 	vmov	r0, s19
 8004854:	22aa      	movs	r2, #170	; 0xaa
 8004856:	2121      	movs	r1, #33	; 0x21
 8004858:	f7fd fd88 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800485c:	464a      	mov	r2, r9
 800485e:	a90b      	add	r1, sp, #44	; 0x2c
 8004860:	ee19 0a90 	vmov	r0, s19
 8004864:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8004868:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 800486c:	f00c f9b1 	bl	8010bd2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8004870:	2339      	movs	r3, #57	; 0x39
 8004872:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8004876:	ee19 0a90 	vmov	r0, s19
 800487a:	f7fd fdcb 	bl	8002414 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 800487e:	ee19 1a90 	vmov	r1, s19
 8004882:	4630      	mov	r0, r6
        colorPressed = col;
 8004884:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 8004888:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 800488c:	f009 fe08 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8004890:	ee1a 0a10 	vmov	r0, s20
 8004894:	2264      	movs	r2, #100	; 0x64
 8004896:	2121      	movs	r1, #33	; 0x21
 8004898:	f7fd fd68 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800489c:	464a      	mov	r2, r9
 800489e:	a90b      	add	r1, sp, #44	; 0x2c
 80048a0:	ee1a 0a10 	vmov	r0, s20
 80048a4:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 80048a8:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 80048ac:	f00c f991 	bl	8010bd2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80048b0:	233a      	movs	r3, #58	; 0x3a
 80048b2:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
        updateTextPosition();
 80048b6:	ee1a 0a10 	vmov	r0, s20
 80048ba:	f7fd fdab 	bl	8002414 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80048be:	ee1a 1a10 	vmov	r1, s20
 80048c2:	4630      	mov	r0, r6
        colorPressed = col;
 80048c4:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 80048c8:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 80048cc:	f009 fde8 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon1.setXY(198, 5);
 80048d0:	ee1a 0a90 	vmov	r0, s21
 80048d4:	2205      	movs	r2, #5
 80048d6:	21c6      	movs	r1, #198	; 0xc6
 80048d8:	f7fd fd48 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
 80048dc:	2301      	movs	r3, #1
 80048de:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80048e2:	230a      	movs	r3, #10
    buttonWithIcon1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID));
 80048e4:	ee1a 0a90 	vmov	r0, s21
 80048e8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80048ec:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80048f0:	aa0a      	add	r2, sp, #40	; 0x28
 80048f2:	ab0b      	add	r3, sp, #44	; 0x2c
 80048f4:	a909      	add	r1, sp, #36	; 0x24
 80048f6:	f8cd 9000 	str.w	r9, [sp]
 80048fa:	f8ad a024 	strh.w	sl, [sp, #36]	; 0x24
 80048fe:	f00c faa2 	bl	8010e46 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8004902:	4630      	mov	r0, r6
 8004904:	ee1a 1a90 	vmov	r1, s21
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
    {
        iconX = x;
 8004908:	f8c4 a350 	str.w	sl, [r4, #848]	; 0x350
 800490c:	f8c4 5340 	str.w	r5, [r4, #832]	; 0x340
 8004910:	f009 fdc6 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8004914:	4620      	mov	r0, r4
 8004916:	b00f      	add	sp, #60	; 0x3c
 8004918:	ecbd 8b06 	vpop	{d8-d10}
 800491c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004920:	20013820 	.word	0x20013820
 8004924:	0802a1ec 	.word	0x0802a1ec
 8004928:	08028c00 	.word	0x08028c00

0800492c <_ZN19MeasurementViewBase11setupScreenEv>:
}

void MeasurementViewBase::setupScreen()
{

}
 800492c:	4770      	bx	lr

0800492e <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800492e:	4770      	bx	lr

08004930 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8004930:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8004932:	68c2      	ldr	r2, [r0, #12]
 8004934:	6844      	ldr	r4, [r0, #4]
 8004936:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8004938:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800493a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800493e:	07d2      	lsls	r2, r2, #31
 8004940:	bf48      	it	mi
 8004942:	5962      	ldrmi	r2, [r4, r5]
 8004944:	689b      	ldr	r3, [r3, #8]
    }
 8004946:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8004948:	bf48      	it	mi
 800494a:	58d3      	ldrmi	r3, [r2, r3]
 800494c:	4718      	bx	r3

0800494e <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800494e:	6843      	ldr	r3, [r0, #4]
 8004950:	b12b      	cbz	r3, 800495e <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8004952:	6883      	ldr	r3, [r0, #8]
 8004954:	b92b      	cbnz	r3, 8004962 <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8004956:	68c0      	ldr	r0, [r0, #12]
 8004958:	f000 0001 	and.w	r0, r0, #1
 800495c:	4770      	bx	lr
 800495e:	4618      	mov	r0, r3
 8004960:	4770      	bx	lr
 8004962:	2001      	movs	r0, #1
    }
 8004964:	4770      	bx	lr

08004966 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8004966:	b510      	push	{r4, lr}
 8004968:	2110      	movs	r1, #16
 800496a:	4604      	mov	r4, r0
 800496c:	f021 fd8f 	bl	802648e <_ZdlPvj>
 8004970:	4620      	mov	r0, r4
 8004972:	bd10      	pop	{r4, pc}

08004974 <_ZN19MeasurementViewBaseD1Ev>:
MeasurementViewBase::~MeasurementViewBase()
 8004974:	b510      	push	{r4, lr}
 8004976:	4b03      	ldr	r3, [pc, #12]	; (8004984 <_ZN19MeasurementViewBaseD1Ev+0x10>)
 8004978:	6003      	str	r3, [r0, #0]
 800497a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800497c:	f00d fb26 	bl	8011fcc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8004980:	4620      	mov	r0, r4
 8004982:	bd10      	pop	{r4, pc}
 8004984:	0802a25c 	.word	0x0802a25c

08004988 <_ZN19MeasurementViewBaseD0Ev>:
MeasurementViewBase::~MeasurementViewBase()
 8004988:	b507      	push	{r0, r1, r2, lr}
 800498a:	4b07      	ldr	r3, [pc, #28]	; (80049a8 <_ZN19MeasurementViewBaseD0Ev+0x20>)
 800498c:	6003      	str	r3, [r0, #0]
 800498e:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8004990:	f00d fb1c 	bl	8011fcc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8004994:	9801      	ldr	r0, [sp, #4]
 8004996:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 800499a:	f021 fd78 	bl	802648e <_ZdlPvj>
 800499e:	9801      	ldr	r0, [sp, #4]
 80049a0:	b003      	add	sp, #12
 80049a2:	f85d fb04 	ldr.w	pc, [sp], #4
 80049a6:	bf00      	nop
 80049a8:	0802a25c 	.word	0x0802a25c

080049ac <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void MeasurementViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 80049ac:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 80049ae:	f500 7310 	add.w	r3, r0, #576	; 0x240
 80049b2:	4299      	cmp	r1, r3
{
 80049b4:	4604      	mov	r4, r0
 80049b6:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 80049b8:	d103      	bne.n	80049c2 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~MeasurementViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80049ba:	f00f f809 	bl	80139d0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
 80049be:	f7fe f9dd 	bl	8002d7c <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 80049c2:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80049c6:	429d      	cmp	r5, r3
 80049c8:	d103      	bne.n	80049d2 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 80049ca:	f00f f801 	bl	80139d0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 80049ce:	f7fe fa05 	bl	8002ddc <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 80049d2:	f504 7422 	add.w	r4, r4, #648	; 0x288
 80049d6:	42a5      	cmp	r5, r4
 80049d8:	d105      	bne.n	80049e6 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 80049da:	f00e fff9 	bl	80139d0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards East
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
    }
}
 80049de:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
 80049e2:	f7fe ba2b 	b.w	8002e3c <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>
}
 80049e6:	bd38      	pop	{r3, r4, r5, pc}

080049e8 <_ZN19MeasurementViewBaseC1Ev>:
MeasurementViewBase::MeasurementViewBase() :
 80049e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80049ec:	ed2d 8b06 	vpush	{d8-d10}
 80049f0:	4604      	mov	r4, r0
 80049f2:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &MeasurementViewBase::buttonCallbackHandler)
 80049f4:	46a3      	mov	fp, r4
 80049f6:	2500      	movs	r5, #0
 80049f8:	f010 fc6a 	bl	80152d0 <_ZN8touchgfx6ScreenC1Ev>
 80049fc:	4b66      	ldr	r3, [pc, #408]	; (8004b98 <_ZN19MeasurementViewBaseC1Ev+0x1b0>)
 80049fe:	63e5      	str	r5, [r4, #60]	; 0x3c
 8004a00:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8004a04:	2226      	movs	r2, #38	; 0x26
 8004a06:	4629      	mov	r1, r5
 8004a08:	4658      	mov	r0, fp
 8004a0a:	f022 fd36 	bl	802747a <memset>
 8004a0e:	4658      	mov	r0, fp
 8004a10:	f7fd fccc 	bl	80023ac <_ZN8touchgfx6WidgetC1Ev>
 8004a14:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8004a18:	26ff      	movs	r6, #255	; 0xff
 8004a1a:	4b60      	ldr	r3, [pc, #384]	; (8004b9c <_ZN19MeasurementViewBaseC1Ev+0x1b4>)
 8004a1c:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8004a1e:	2226      	movs	r2, #38	; 0x26
 8004a20:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8004a24:	4629      	mov	r1, r5
 8004a26:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8004a2a:	4650      	mov	r0, sl
 8004a2c:	66a5      	str	r5, [r4, #104]	; 0x68
 8004a2e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8004a32:	f022 fd22 	bl	802747a <memset>
 8004a36:	4650      	mov	r0, sl
 8004a38:	f7fd fcb8 	bl	80023ac <_ZN8touchgfx6WidgetC1Ev>
 8004a3c:	4b58      	ldr	r3, [pc, #352]	; (8004ba0 <_ZN19MeasurementViewBaseC1Ev+0x1b8>)
 8004a3e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8004a40:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8004a44:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8004a48:	a90a      	add	r1, sp, #40	; 0x28
 8004a4a:	4650      	mov	r0, sl
 8004a4c:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8004a50:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8004a54:	f00c fab3 	bl	8010fbe <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8004a58:	4648      	mov	r0, r9
 8004a5a:	f7fd fcb9 	bl	80023d0 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8004a5e:	4b51      	ldr	r3, [pc, #324]	; (8004ba4 <_ZN19MeasurementViewBaseC1Ev+0x1bc>)
 8004a60:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8004a64:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8004a68:	4618      	mov	r0, r3
 8004a6a:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8004a6e:	f504 7796 	add.w	r7, r4, #300	; 0x12c
 8004a72:	ee08 3a90 	vmov	s17, r3
 8004a76:	f7fd fcab 	bl	80023d0 <_ZN8touchgfx8TextAreaC1Ev>
 8004a7a:	4638      	mov	r0, r7
 8004a7c:	f00b f968 	bl	800fd50 <_ZN8touchgfx4LineC1Ev>
 8004a80:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8004a84:	4618      	mov	r0, r3
 8004a86:	9303      	str	r3, [sp, #12]
 8004a88:	f7fc fc1a 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8004a8c:	4b46      	ldr	r3, [pc, #280]	; (8004ba8 <_ZN19MeasurementViewBaseC1Ev+0x1c0>)
 8004a8e:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 8004a92:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 8004a96:	3324      	adds	r3, #36	; 0x24
 8004a98:	f8c4 31a4 	str.w	r3, [r4, #420]	; 0x1a4
 8004a9c:	f8c4 51a8 	str.w	r5, [r4, #424]	; 0x1a8
 8004aa0:	4640      	mov	r0, r8
 8004aa2:	f7fd fc95 	bl	80023d0 <_ZN8touchgfx8TextAreaC1Ev>
 8004aa6:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8004aaa:	4618      	mov	r0, r3
 8004aac:	ee08 3a10 	vmov	s16, r3
 8004ab0:	f7fd fc8e 	bl	80023d0 <_ZN8touchgfx8TextAreaC1Ev>
 8004ab4:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8004ab8:	4618      	mov	r0, r3
 8004aba:	ee09 3a10 	vmov	s18, r3
 8004abe:	f00c fbbf 	bl	8011240 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8004ac2:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8004ac6:	4618      	mov	r0, r3
 8004ac8:	ee09 3a90 	vmov	s19, r3
 8004acc:	f00c fbb8 	bl	8011240 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8004ad0:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8004ad4:	4618      	mov	r0, r3
 8004ad6:	ee0a 3a10 	vmov	s20, r3
 8004ada:	f00c fbb1 	bl	8011240 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8004ade:	4a33      	ldr	r2, [pc, #204]	; (8004bac <_ZN19MeasurementViewBaseC1Ev+0x1c4>)
 8004ae0:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8004ae4:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8004ae8:	4a31      	ldr	r2, [pc, #196]	; (8004bb0 <_ZN19MeasurementViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8004aea:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8004aee:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8004af2:	f504 7048 	add.w	r0, r4, #800	; 0x320
 8004af6:	f00d fa5f 	bl	8011fb8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8004afa:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8004afe:	462a      	mov	r2, r5
 8004b00:	4658      	mov	r0, fp
 8004b02:	9300      	str	r3, [sp, #0]
 8004b04:	4629      	mov	r1, r5
 8004b06:	23f0      	movs	r3, #240	; 0xf0
 8004b08:	f7fd fc3d 	bl	8002386 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004b0c:	1d26      	adds	r6, r4, #4
        color = newColor;
 8004b0e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8004b12:	66a3      	str	r3, [r4, #104]	; 0x68
 8004b14:	4659      	mov	r1, fp
 8004b16:	4630      	mov	r0, r6
 8004b18:	f009 fcc2 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8004b1c:	462a      	mov	r2, r5
 8004b1e:	4650      	mov	r0, sl
 8004b20:	4629      	mov	r1, r5
 8004b22:	f7fd fc23 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
 8004b26:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8004b28:	4650      	mov	r0, sl
 8004b2a:	a90a      	add	r1, sp, #40	; 0x28
 8004b2c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8004b30:	f00c fa45 	bl	8010fbe <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8004b34:	4651      	mov	r1, sl
 8004b36:	4630      	mov	r0, r6
 8004b38:	f009 fcb2 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8004b3c:	f44f 729a 	mov.w	r2, #308	; 0x134
 8004b40:	2156      	movs	r1, #86	; 0x56
 8004b42:	4648      	mov	r0, r9
 8004b44:	f7fd fc12 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004b48:	f04f 33ff 	mov.w	r3, #4294967295
 8004b4c:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8004b50:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8004b54:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8004b58:	f10d 0b10 	add.w	fp, sp, #16
 8004b5c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8004b60:	4649      	mov	r1, r9
 8004b62:	4658      	mov	r0, fp
 8004b64:	4798      	blx	r3
 8004b66:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8004b6a:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8004b6e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004b72:	4b10      	ldr	r3, [pc, #64]	; (8004bb4 <_ZN19MeasurementViewBaseC1Ev+0x1cc>)
 8004b74:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_0CQH).getText());
 8004b76:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8004b7a:	b92b      	cbnz	r3, 8004b88 <_ZN19MeasurementViewBaseC1Ev+0x1a0>
 8004b7c:	4b0e      	ldr	r3, [pc, #56]	; (8004bb8 <_ZN19MeasurementViewBaseC1Ev+0x1d0>)
 8004b7e:	4a0f      	ldr	r2, [pc, #60]	; (8004bbc <_ZN19MeasurementViewBaseC1Ev+0x1d4>)
 8004b80:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004b82:	480f      	ldr	r0, [pc, #60]	; (8004bc0 <_ZN19MeasurementViewBaseC1Ev+0x1d8>)
 8004b84:	f022 fa74 	bl	8027070 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8004b88:	4b0e      	ldr	r3, [pc, #56]	; (8004bc4 <_ZN19MeasurementViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004b8a:	881b      	ldrh	r3, [r3, #0]
 8004b8c:	2b01      	cmp	r3, #1
 8004b8e:	d81d      	bhi.n	8004bcc <_ZN19MeasurementViewBaseC1Ev+0x1e4>
 8004b90:	4b0d      	ldr	r3, [pc, #52]	; (8004bc8 <_ZN19MeasurementViewBaseC1Ev+0x1e0>)
 8004b92:	4a0a      	ldr	r2, [pc, #40]	; (8004bbc <_ZN19MeasurementViewBaseC1Ev+0x1d4>)
 8004b94:	2161      	movs	r1, #97	; 0x61
 8004b96:	e7f4      	b.n	8004b82 <_ZN19MeasurementViewBaseC1Ev+0x19a>
 8004b98:	0802a25c 	.word	0x0802a25c
 8004b9c:	0802b0d8 	.word	0x0802b0d8
 8004ba0:	0802b2a0 	.word	0x0802b2a0
 8004ba4:	0802a038 	.word	0x0802a038
 8004ba8:	0802ae0c 	.word	0x0802ae0c
 8004bac:	0802a244 	.word	0x0802a244
 8004bb0:	080049ad 	.word	0x080049ad
 8004bb4:	20013814 	.word	0x20013814
 8004bb8:	08028acc 	.word	0x08028acc
 8004bbc:	0802a1b4 	.word	0x0802a1b4
 8004bc0:	08028b49 	.word	0x08028b49
 8004bc4:	20013818 	.word	0x20013818
 8004bc8:	08029ff0 	.word	0x08029ff0
        return texts->getText(typedTextId);
 8004bcc:	4b95      	ldr	r3, [pc, #596]	; (8004e24 <_ZN19MeasurementViewBaseC1Ev+0x43c>)
 8004bce:	2101      	movs	r1, #1
 8004bd0:	6818      	ldr	r0, [r3, #0]
 8004bd2:	f002 f837 	bl	8006c44 <_ZNK8touchgfx5Texts7getTextEt>
 8004bd6:	4a94      	ldr	r2, [pc, #592]	; (8004e28 <_ZN19MeasurementViewBaseC1Ev+0x440>)
 8004bd8:	4603      	mov	r3, r0
 8004bda:	2104      	movs	r1, #4
 8004bdc:	4650      	mov	r0, sl
 8004bde:	f012 f85b 	bl	8016c98 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8004be2:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea3_1.resizeToCurrentText();
 8004be6:	4648      	mov	r0, r9
 8004be8:	f00b fdee 	bl	80107c8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004bec:	f8df a23c 	ldr.w	sl, [pc, #572]	; 8004e2c <_ZN19MeasurementViewBaseC1Ev+0x444>
 8004bf0:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8004bf4:	2302      	movs	r3, #2
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TOET));
 8004bf6:	a90a      	add	r1, sp, #40	; 0x28
 8004bf8:	4648      	mov	r0, r9
 8004bfa:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8004bfe:	f00b fe03 	bl	8010808 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004c02:	4649      	mov	r1, r9
 8004c04:	4630      	mov	r0, r6
 8004c06:	f009 fc4b 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(57, 60);
 8004c0a:	223c      	movs	r2, #60	; 0x3c
 8004c0c:	ee18 0a90 	vmov	r0, s17
 8004c10:	2139      	movs	r1, #57	; 0x39
 8004c12:	f7fd fbab 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004c16:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8004c1a:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 8004c1e:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8004c22:	4658      	mov	r0, fp
        linespace = space;
 8004c24:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 8004c28:	f00b fb54 	bl	80102d4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004c2c:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8004c30:	f504 7390 	add.w	r3, r4, #288	; 0x120
 8004c34:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004c38:	230f      	movs	r3, #15
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q8CP));
 8004c3a:	ee18 0a90 	vmov	r0, s17
 8004c3e:	a90a      	add	r1, sp, #40	; 0x28
 8004c40:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8004c44:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8004c48:	f00b fdde 	bl	8010808 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004c4c:	ee18 1a90 	vmov	r1, s17
 8004c50:	4630      	mov	r0, r6
 8004c52:	f009 fc25 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8004c56:	230a      	movs	r3, #10
 8004c58:	9300      	str	r3, [sp, #0]
 8004c5a:	2232      	movs	r2, #50	; 0x32
 8004c5c:	23f0      	movs	r3, #240	; 0xf0
 8004c5e:	4629      	mov	r1, r5
 8004c60:	4638      	mov	r0, r7
 8004c62:	f7fd fb90 	bl	8002386 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004c66:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8004c6a:	22a0      	movs	r2, #160	; 0xa0
 8004c6c:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8004c70:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 8004c74:	9b03      	ldr	r3, [sp, #12]
 8004c76:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8004c7a:	4611      	mov	r1, r2
 8004c7c:	4638      	mov	r0, r7
 8004c7e:	f00b f97d 	bl	800ff7c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8004c82:	22a0      	movs	r2, #160	; 0xa0
 8004c84:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8004c88:	4638      	mov	r0, r7
 8004c8a:	f00b f982 	bl	800ff92 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8004c8e:	f8d4 3168 	ldr.w	r3, [r4, #360]	; 0x168
 8004c92:	2b20      	cmp	r3, #32
 8004c94:	d005      	beq.n	8004ca2 <_ZN19MeasurementViewBaseC1Ev+0x2ba>
        lineWidthQ5 = widthQ5;
 8004c96:	2320      	movs	r3, #32
 8004c98:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
        updateCachedShape();
 8004c9c:	4638      	mov	r0, r7
 8004c9e:	f00b f877 	bl	800fd90 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8004ca2:	4638      	mov	r0, r7
 8004ca4:	2101      	movs	r1, #1
 8004ca6:	f00b f97f 	bl	800ffa8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8004caa:	4639      	mov	r1, r7
 8004cac:	4630      	mov	r0, r6
 8004cae:	f009 fbf7 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8004cb2:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 8004cb6:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 36);
 8004cb8:	2224      	movs	r2, #36	; 0x24
 8004cba:	4640      	mov	r0, r8
        linespace = space;
 8004cbc:	f04f 0a00 	mov.w	sl, #0
 8004cc0:	2145      	movs	r1, #69	; 0x45
 8004cc2:	f7fd fb53 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8004cc6:	4641      	mov	r1, r8
 8004cc8:	4638      	mov	r0, r7
        color = newColor;
 8004cca:	f8c4 51e0 	str.w	r5, [r4, #480]	; 0x1e0
        linespace = space;
 8004cce:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8004cd2:	f00b faff 	bl	80102d4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004cd6:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8004cda:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8004cde:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004ce2:	f8df 9148 	ldr.w	r9, [pc, #328]	; 8004e2c <_ZN19MeasurementViewBaseC1Ev+0x444>
 8004ce6:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8004cea:	2334      	movs	r3, #52	; 0x34
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_V2L5));
 8004cec:	a90a      	add	r1, sp, #40	; 0x28
 8004cee:	4640      	mov	r0, r8
 8004cf0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8004cf4:	f00b fd88 	bl	8010808 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004cf8:	4641      	mov	r1, r8
 8004cfa:	4630      	mov	r0, r6
 8004cfc:	f009 fbd0 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(50, 12);
 8004d00:	ee18 0a10 	vmov	r0, s16
 8004d04:	220c      	movs	r2, #12
 8004d06:	2132      	movs	r1, #50	; 0x32
 8004d08:	f7fd fb30 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
 8004d0c:	ee18 1a10 	vmov	r1, s16
 8004d10:	4638      	mov	r0, r7
        color = newColor;
 8004d12:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
        linespace = space;
 8004d16:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8004d1a:	f00b fadb 	bl	80102d4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004d1e:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8004d22:	ee18 3a10 	vmov	r3, s16
 8004d26:	333c      	adds	r3, #60	; 0x3c
 8004d28:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004d2c:	2335      	movs	r3, #53	; 0x35
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FIV6));
 8004d2e:	ee18 0a10 	vmov	r0, s16
 8004d32:	a90a      	add	r1, sp, #40	; 0x28
 8004d34:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8004d38:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8004d3c:	f00b fd64 	bl	8010808 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004d40:	ee18 1a10 	vmov	r1, s16
 8004d44:	4630      	mov	r0, r6
 8004d46:	f009 fbab 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8004d4a:	ee19 0a10 	vmov	r0, s18
 8004d4e:	22f0      	movs	r2, #240	; 0xf0
 8004d50:	2121      	movs	r1, #33	; 0x21
 8004d52:	f7fd fb0b 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
 8004d56:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8004d5a:	aa0a      	add	r2, sp, #40	; 0x28
 8004d5c:	f04f 0802 	mov.w	r8, #2
 8004d60:	a909      	add	r1, sp, #36	; 0x24
 8004d62:	ee19 0a10 	vmov	r0, s18
 8004d66:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8004d6a:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8004d6e:	f504 5789 	add.w	r7, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8004d72:	f00b ff2e 	bl	8010bd2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8004d76:	2333      	movs	r3, #51	; 0x33
 8004d78:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8004d7c:	3710      	adds	r7, #16
        updateTextPosition();
 8004d7e:	ee19 0a10 	vmov	r0, s18
 8004d82:	f7fd fb47 	bl	8002414 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8004d86:	ee19 1a10 	vmov	r1, s18
 8004d8a:	4630      	mov	r0, r6
        colorPressed = col;
 8004d8c:	e9c4 559f 	strd	r5, r5, [r4, #636]	; 0x27c
 8004d90:	f8c4 7268 	str.w	r7, [r4, #616]	; 0x268
 8004d94:	f009 fb84 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8004d98:	ee19 0a90 	vmov	r0, s19
 8004d9c:	22aa      	movs	r2, #170	; 0xaa
 8004d9e:	2121      	movs	r1, #33	; 0x21
 8004da0:	f7fd fae4 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8004da4:	aa0a      	add	r2, sp, #40	; 0x28
 8004da6:	a909      	add	r1, sp, #36	; 0x24
 8004da8:	ee19 0a90 	vmov	r0, s19
 8004dac:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8004db0:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8004db4:	f00b ff0d 	bl	8010bd2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8004db8:	2332      	movs	r3, #50	; 0x32
 8004dba:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8004dbe:	ee19 0a90 	vmov	r0, s19
 8004dc2:	f7fd fb27 	bl	8002414 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8004dc6:	ee19 1a90 	vmov	r1, s19
 8004dca:	4630      	mov	r0, r6
        colorPressed = col;
 8004dcc:	e9c4 55b1 	strd	r5, r5, [r4, #708]	; 0x2c4
 8004dd0:	f8c4 72b0 	str.w	r7, [r4, #688]	; 0x2b0
 8004dd4:	f009 fb64 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8004dd8:	ee1a 0a10 	vmov	r0, s20
 8004ddc:	2264      	movs	r2, #100	; 0x64
 8004dde:	2121      	movs	r1, #33	; 0x21
 8004de0:	f7fd fac4 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8004de4:	aa0a      	add	r2, sp, #40	; 0x28
 8004de6:	a909      	add	r1, sp, #36	; 0x24
 8004de8:	ee1a 0a10 	vmov	r0, s20
 8004dec:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8004df0:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8004df4:	f00b feed 	bl	8010bd2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8004df8:	2331      	movs	r3, #49	; 0x31
        updateTextPosition();
 8004dfa:	ee1a 0a10 	vmov	r0, s20
 8004dfe:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8004e02:	f7fd fb07 	bl	8002414 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8004e06:	4630      	mov	r0, r6
        colorPressed = col;
 8004e08:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
 8004e0c:	ee1a 1a10 	vmov	r1, s20
 8004e10:	f8c4 72f8 	str.w	r7, [r4, #760]	; 0x2f8
 8004e14:	f009 fb44 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8004e18:	4620      	mov	r0, r4
 8004e1a:	b00d      	add	sp, #52	; 0x34
 8004e1c:	ecbd 8b06 	vpop	{d8-d10}
 8004e20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004e24:	20013820 	.word	0x20013820
 8004e28:	0802a1ec 	.word	0x0802a1ec
 8004e2c:	08028c00 	.word	0x08028c00

08004e30 <_ZN28Measurement_AccurateViewBase11setupScreenEv>:
}

void Measurement_AccurateViewBase::setupScreen()
{

}
 8004e30:	4770      	bx	lr

08004e32 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8004e32:	4770      	bx	lr

08004e34 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8004e34:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8004e36:	68c2      	ldr	r2, [r0, #12]
 8004e38:	6844      	ldr	r4, [r0, #4]
 8004e3a:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8004e3c:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8004e3e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8004e42:	07d2      	lsls	r2, r2, #31
 8004e44:	bf48      	it	mi
 8004e46:	5962      	ldrmi	r2, [r4, r5]
 8004e48:	689b      	ldr	r3, [r3, #8]
    }
 8004e4a:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8004e4c:	bf48      	it	mi
 8004e4e:	58d3      	ldrmi	r3, [r2, r3]
 8004e50:	4718      	bx	r3

08004e52 <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8004e52:	6843      	ldr	r3, [r0, #4]
 8004e54:	b12b      	cbz	r3, 8004e62 <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8004e56:	6883      	ldr	r3, [r0, #8]
 8004e58:	b92b      	cbnz	r3, 8004e66 <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8004e5a:	68c0      	ldr	r0, [r0, #12]
 8004e5c:	f000 0001 	and.w	r0, r0, #1
 8004e60:	4770      	bx	lr
 8004e62:	4618      	mov	r0, r3
 8004e64:	4770      	bx	lr
 8004e66:	2001      	movs	r0, #1
    }
 8004e68:	4770      	bx	lr

08004e6a <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8004e6a:	b510      	push	{r4, lr}
 8004e6c:	2110      	movs	r1, #16
 8004e6e:	4604      	mov	r4, r0
 8004e70:	f021 fb0d 	bl	802648e <_ZdlPvj>
 8004e74:	4620      	mov	r0, r4
 8004e76:	bd10      	pop	{r4, pc}

08004e78 <_ZN28Measurement_AccurateViewBaseD1Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 8004e78:	b510      	push	{r4, lr}
 8004e7a:	4b03      	ldr	r3, [pc, #12]	; (8004e88 <_ZN28Measurement_AccurateViewBaseD1Ev+0x10>)
 8004e7c:	6003      	str	r3, [r0, #0]
 8004e7e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8004e80:	f00d f8a4 	bl	8011fcc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8004e84:	4620      	mov	r0, r4
 8004e86:	bd10      	pop	{r4, pc}
 8004e88:	0802a2a8 	.word	0x0802a2a8

08004e8c <_ZN28Measurement_AccurateViewBaseD0Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 8004e8c:	b507      	push	{r0, r1, r2, lr}
 8004e8e:	4b07      	ldr	r3, [pc, #28]	; (8004eac <_ZN28Measurement_AccurateViewBaseD0Ev+0x20>)
 8004e90:	6003      	str	r3, [r0, #0]
 8004e92:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8004e94:	f00d f89a 	bl	8011fcc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8004e98:	9801      	ldr	r0, [sp, #4]
 8004e9a:	f241 01ec 	movw	r1, #4332	; 0x10ec
 8004e9e:	f021 faf6 	bl	802648e <_ZdlPvj>
 8004ea2:	9801      	ldr	r0, [sp, #4]
 8004ea4:	b003      	add	sp, #12
 8004ea6:	f85d fb04 	ldr.w	pc, [sp], #4
 8004eaa:	bf00      	nop
 8004eac:	0802a2a8 	.word	0x0802a2a8

08004eb0 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_AccurateViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8004eb0:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8004eb2:	f500 73fa 	add.w	r3, r0, #500	; 0x1f4
 8004eb6:	4299      	cmp	r1, r3
{
 8004eb8:	4604      	mov	r4, r0
 8004eba:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8004ebc:	d103      	bne.n	8004ec6 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_AccurateViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8004ebe:	f00e fd87 	bl	80139d0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 8004ec2:	f7fd ff7b 	bl	8002dbc <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel2)
 8004ec6:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 8004eca:	429d      	cmp	r5, r3
 8004ecc:	d103      	bne.n	8004ed6 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8004ece:	f00e fd7f 	bl	80139d0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel2 clicked change screen to Measurement_Accurate_Display_2
        //Go to Measurement_Accurate_Display_2 with screen transition towards East
        application().gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEast();
 8004ed2:	f7fd ffe3 	bl	8002e9c <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel1)
 8004ed6:	f504 7421 	add.w	r4, r4, #644	; 0x284
 8004eda:	42a5      	cmp	r5, r4
 8004edc:	d105      	bne.n	8004eea <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8004ede:	f00e fd77 	bl	80139d0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel1 clicked change screen to Measurement_Accurate_Display
        //Go to Measurement_Accurate_Display with screen transition towards East
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
    }
}
 8004ee2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
 8004ee6:	f7fd bfc9 	b.w	8002e7c <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>
}
 8004eea:	bd38      	pop	{r3, r4, r5, pc}

08004eec <_ZN28Measurement_AccurateViewBaseC1Ev>:
Measurement_AccurateViewBase::Measurement_AccurateViewBase() :
 8004eec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004ef0:	ed2d 8b04 	vpush	{d8-d9}
 8004ef4:	4604      	mov	r4, r0
 8004ef6:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_AccurateViewBase::buttonCallbackHandler)
 8004ef8:	46a3      	mov	fp, r4
 8004efa:	2500      	movs	r5, #0
 8004efc:	f010 f9e8 	bl	80152d0 <_ZN8touchgfx6ScreenC1Ev>
 8004f00:	4bcd      	ldr	r3, [pc, #820]	; (8005238 <_ZN28Measurement_AccurateViewBaseC1Ev+0x34c>)
 8004f02:	63e5      	str	r5, [r4, #60]	; 0x3c
 8004f04:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8004f08:	2226      	movs	r2, #38	; 0x26
 8004f0a:	4629      	mov	r1, r5
 8004f0c:	4658      	mov	r0, fp
 8004f0e:	f022 fab4 	bl	802747a <memset>
 8004f12:	4658      	mov	r0, fp
 8004f14:	f7fd fa4a 	bl	80023ac <_ZN8touchgfx6WidgetC1Ev>
 8004f18:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8004f1c:	26ff      	movs	r6, #255	; 0xff
 8004f1e:	4bc7      	ldr	r3, [pc, #796]	; (800523c <_ZN28Measurement_AccurateViewBaseC1Ev+0x350>)
 8004f20:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8004f22:	2226      	movs	r2, #38	; 0x26
 8004f24:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8004f28:	4629      	mov	r1, r5
 8004f2a:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8004f2e:	66a5      	str	r5, [r4, #104]	; 0x68
 8004f30:	4650      	mov	r0, sl
 8004f32:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8004f36:	f022 faa0 	bl	802747a <memset>
 8004f3a:	4650      	mov	r0, sl
 8004f3c:	f7fd fa36 	bl	80023ac <_ZN8touchgfx6WidgetC1Ev>
 8004f40:	4bbf      	ldr	r3, [pc, #764]	; (8005240 <_ZN28Measurement_AccurateViewBaseC1Ev+0x354>)
 8004f42:	66e3      	str	r3, [r4, #108]	; 0x6c
 8004f44:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8004f48:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8004f4c:	a90a      	add	r1, sp, #40	; 0x28
 8004f4e:	f104 0798 	add.w	r7, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8004f52:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8004f56:	4650      	mov	r0, sl
 8004f58:	f00c f831 	bl	8010fbe <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8004f5c:	4638      	mov	r0, r7
 8004f5e:	f00a fef7 	bl	800fd50 <_ZN8touchgfx4LineC1Ev>
 8004f62:	f504 7384 	add.w	r3, r4, #264	; 0x108
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8004f66:	4618      	mov	r0, r3
 8004f68:	9303      	str	r3, [sp, #12]
 8004f6a:	f7fc f9a9 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8004f6e:	4bb5      	ldr	r3, [pc, #724]	; (8005244 <_ZN28Measurement_AccurateViewBaseC1Ev+0x358>)
 8004f70:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 8004f74:	f504 798e 	add.w	r9, r4, #284	; 0x11c
 8004f78:	3324      	adds	r3, #36	; 0x24
 8004f7a:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 8004f7e:	f8c4 5114 	str.w	r5, [r4, #276]	; 0x114
 8004f82:	4648      	mov	r0, r9
 8004f84:	f504 78b2 	add.w	r8, r4, #356	; 0x164
 8004f88:	f7fd fa22 	bl	80023d0 <_ZN8touchgfx8TextAreaC1Ev>
 8004f8c:	4640      	mov	r0, r8
 8004f8e:	f7fd fa1f 	bl	80023d0 <_ZN8touchgfx8TextAreaC1Ev>
 8004f92:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 8004f96:	4618      	mov	r0, r3
 8004f98:	ee08 3a10 	vmov	s16, r3
 8004f9c:	f7fd fa18 	bl	80023d0 <_ZN8touchgfx8TextAreaC1Ev>
 8004fa0:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 8004fa4:	4618      	mov	r0, r3
 8004fa6:	ee08 3a90 	vmov	s17, r3
 8004faa:	f00c f949 	bl	8011240 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8004fae:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 8004fb2:	4618      	mov	r0, r3
 8004fb4:	ee09 3a10 	vmov	s18, r3
 8004fb8:	f00c f942 	bl	8011240 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8004fbc:	f504 7321 	add.w	r3, r4, #644	; 0x284
 8004fc0:	4618      	mov	r0, r3
 8004fc2:	ee09 3a90 	vmov	s19, r3
 8004fc6:	f00c f93b 	bl	8011240 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8004fca:	4a9f      	ldr	r2, [pc, #636]	; (8005248 <_ZN28Measurement_AccurateViewBaseC1Ev+0x35c>)
 8004fcc:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8004fd0:	e9c3 2437 	strd	r2, r4, [r3, #220]	; 0xdc
 8004fd4:	4a9d      	ldr	r2, [pc, #628]	; (800524c <_ZN28Measurement_AccurateViewBaseC1Ev+0x360>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8004fd6:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8004fda:	e9c3 2539 	strd	r2, r5, [r3, #228]	; 0xe4
 8004fde:	f504 7033 	add.w	r0, r4, #716	; 0x2cc
 8004fe2:	f00c ffe9 	bl	8011fb8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8004fe6:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8004fea:	462a      	mov	r2, r5
 8004fec:	9300      	str	r3, [sp, #0]
 8004fee:	4629      	mov	r1, r5
 8004ff0:	23f0      	movs	r3, #240	; 0xf0
 8004ff2:	4658      	mov	r0, fp
 8004ff4:	f7fd f9c7 	bl	8002386 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004ff8:	1d26      	adds	r6, r4, #4
        color = newColor;
 8004ffa:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8004ffe:	66a3      	str	r3, [r4, #104]	; 0x68
 8005000:	4659      	mov	r1, fp
 8005002:	4630      	mov	r0, r6
 8005004:	f009 fa4c 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8005008:	462a      	mov	r2, r5
 800500a:	4629      	mov	r1, r5
 800500c:	4650      	mov	r0, sl
 800500e:	f7fd f9ad 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
 8005012:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8005014:	a90a      	add	r1, sp, #40	; 0x28
 8005016:	4650      	mov	r0, sl
 8005018:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800501c:	f00b ffcf 	bl	8010fbe <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8005020:	4651      	mov	r1, sl
 8005022:	4630      	mov	r0, r6
 8005024:	f009 fa3c 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8005028:	230a      	movs	r3, #10
 800502a:	9300      	str	r3, [sp, #0]
 800502c:	2232      	movs	r2, #50	; 0x32
 800502e:	23f0      	movs	r3, #240	; 0xf0
 8005030:	4629      	mov	r1, r5
 8005032:	4638      	mov	r0, r7
 8005034:	f7fd f9a7 	bl	8002386 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005038:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800503c:	22a0      	movs	r2, #160	; 0xa0
 800503e:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        color565 = LCD16bpp::getNativeColor(painterColor);
 8005042:	f8a4 3118 	strh.w	r3, [r4, #280]	; 0x118
 8005046:	9b03      	ldr	r3, [sp, #12]
 8005048:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 800504c:	4611      	mov	r1, r2
 800504e:	4638      	mov	r0, r7
 8005050:	f00a ff94 	bl	800ff7c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005054:	22a0      	movs	r2, #160	; 0xa0
 8005056:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800505a:	4638      	mov	r0, r7
 800505c:	f00a ff99 	bl	800ff92 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8005060:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
 8005064:	2b20      	cmp	r3, #32
 8005066:	d005      	beq.n	8005074 <_ZN28Measurement_AccurateViewBaseC1Ev+0x188>
        lineWidthQ5 = widthQ5;
 8005068:	2320      	movs	r3, #32
 800506a:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
        updateCachedShape();
 800506e:	4638      	mov	r0, r7
 8005070:	f00a fe8e 	bl	800fd90 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8005074:	4638      	mov	r0, r7
 8005076:	2101      	movs	r1, #1
 8005078:	f00a ff96 	bl	800ffa8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800507c:	4639      	mov	r1, r7
 800507e:	4630      	mov	r0, r6
 8005080:	ad04      	add	r5, sp, #16
        color = newColor;
 8005082:	f04f 37ff 	mov.w	r7, #4294967295
 8005086:	f009 fa0b 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 800508a:	f04f 0b00 	mov.w	fp, #0
    textArea2.setXY(69, 36);
 800508e:	2224      	movs	r2, #36	; 0x24
 8005090:	4648      	mov	r0, r9
 8005092:	2145      	movs	r1, #69	; 0x45
 8005094:	f7fd f96a 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8005098:	4649      	mov	r1, r9
 800509a:	4628      	mov	r0, r5
        color = newColor;
 800509c:	f8c4 714c 	str.w	r7, [r4, #332]	; 0x14c
        linespace = space;
 80050a0:	f8a4 b150 	strh.w	fp, [r4, #336]	; 0x150
        boundingArea = calculateBoundingArea();
 80050a4:	f00b f916 	bl	80102d4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80050a8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80050ac:	f109 033c 	add.w	r3, r9, #60	; 0x3c
 80050b0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80050b4:	f8df a198 	ldr.w	sl, [pc, #408]	; 8005250 <_ZN28Measurement_AccurateViewBaseC1Ev+0x364>
 80050b8:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 80050bc:	2322      	movs	r3, #34	; 0x22
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UWMX));
 80050be:	a90a      	add	r1, sp, #40	; 0x28
 80050c0:	4648      	mov	r0, r9
 80050c2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80050c6:	f00b fb9f 	bl	8010808 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80050ca:	4649      	mov	r1, r9
 80050cc:	4630      	mov	r0, r6
 80050ce:	f009 f9e7 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(50, 12);
 80050d2:	220c      	movs	r2, #12
 80050d4:	4640      	mov	r0, r8
 80050d6:	2132      	movs	r1, #50	; 0x32
 80050d8:	f7fd f948 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
 80050dc:	4641      	mov	r1, r8
 80050de:	4628      	mov	r0, r5
        color = newColor;
 80050e0:	f8c4 7194 	str.w	r7, [r4, #404]	; 0x194
        linespace = space;
 80050e4:	f8a4 b198 	strh.w	fp, [r4, #408]	; 0x198
        boundingArea = calculateBoundingArea();
 80050e8:	f00b f8f4 	bl	80102d4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80050ec:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80050f0:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 80050f4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80050f8:	f04f 0921 	mov.w	r9, #33	; 0x21
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1X41));
 80050fc:	a90a      	add	r1, sp, #40	; 0x28
 80050fe:	4640      	mov	r0, r8
 8005100:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8005104:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 8005108:	f00b fb7e 	bl	8010808 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800510c:	4641      	mov	r1, r8
 800510e:	4630      	mov	r0, r6
 8005110:	f009 f9c6 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(33, 60);
 8005114:	ee18 0a10 	vmov	r0, s16
 8005118:	223c      	movs	r2, #60	; 0x3c
 800511a:	4649      	mov	r1, r9
 800511c:	f7fd f926 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
 8005120:	ee18 1a10 	vmov	r1, s16
 8005124:	4628      	mov	r0, r5
        color = newColor;
 8005126:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 800512a:	f8a4 b1e0 	strh.w	fp, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 800512e:	f00b f8d1 	bl	80102d4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005132:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005136:	ee18 3a10 	vmov	r3, s16
 800513a:	333c      	adds	r3, #60	; 0x3c
 800513c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005140:	230b      	movs	r3, #11
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D7H9));
 8005142:	ee18 0a10 	vmov	r0, s16
 8005146:	a90a      	add	r1, sp, #40	; 0x28
 8005148:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800514c:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8005150:	f00b fb5a 	bl	8010808 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005154:	ee18 1a10 	vmov	r1, s16
 8005158:	4630      	mov	r0, r6
 800515a:	f009 f9a1 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 800515e:	ee18 0a90 	vmov	r0, s17
 8005162:	4649      	mov	r1, r9
 8005164:	22f0      	movs	r2, #240	; 0xf0
 8005166:	f7fd f901 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
 800516a:	f04f 0a03 	mov.w	sl, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800516e:	aa0a      	add	r2, sp, #40	; 0x28
 8005170:	f04f 0802 	mov.w	r8, #2
 8005174:	a909      	add	r1, sp, #36	; 0x24
 8005176:	ee18 0a90 	vmov	r0, s17
 800517a:	f8ad a024 	strh.w	sl, [sp, #36]	; 0x24
 800517e:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8005182:	f504 5586 	add.w	r5, r4, #4288	; 0x10c0
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005186:	f00b fd24 	bl	8010bd2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800518a:	2320      	movs	r3, #32
 800518c:	f8a4 322c 	strh.w	r3, [r4, #556]	; 0x22c
    buttonWithLabel3.setAction(buttonCallback);
 8005190:	351c      	adds	r5, #28
        updateTextPosition();
 8005192:	ee18 0a90 	vmov	r0, s17
 8005196:	f7fd f93d 	bl	8002414 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 800519a:	ee18 1a90 	vmov	r1, s17
 800519e:	4630      	mov	r0, r6
        colorPressed = col;
 80051a0:	e9c4 778c 	strd	r7, r7, [r4, #560]	; 0x230
 80051a4:	f8c4 521c 	str.w	r5, [r4, #540]	; 0x21c
 80051a8:	f009 f97a 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 80051ac:	ee19 0a10 	vmov	r0, s18
 80051b0:	4649      	mov	r1, r9
 80051b2:	22aa      	movs	r2, #170	; 0xaa
 80051b4:	f7fd f8da 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80051b8:	aa0a      	add	r2, sp, #40	; 0x28
 80051ba:	a909      	add	r1, sp, #36	; 0x24
 80051bc:	ee19 0a10 	vmov	r0, s18
 80051c0:	f8ad a024 	strh.w	sl, [sp, #36]	; 0x24
 80051c4:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 80051c8:	f00b fd03 	bl	8010bd2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80051cc:	231f      	movs	r3, #31
 80051ce:	f8a4 3274 	strh.w	r3, [r4, #628]	; 0x274
        updateTextPosition();
 80051d2:	ee19 0a10 	vmov	r0, s18
 80051d6:	f7fd f91d 	bl	8002414 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80051da:	ee19 1a10 	vmov	r1, s18
 80051de:	4630      	mov	r0, r6
        colorPressed = col;
 80051e0:	e9c4 779e 	strd	r7, r7, [r4, #632]	; 0x278
 80051e4:	f8c4 5264 	str.w	r5, [r4, #612]	; 0x264
 80051e8:	f009 f95a 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 80051ec:	ee19 0a90 	vmov	r0, s19
 80051f0:	4649      	mov	r1, r9
 80051f2:	2264      	movs	r2, #100	; 0x64
 80051f4:	f7fd f8ba 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80051f8:	aa0a      	add	r2, sp, #40	; 0x28
 80051fa:	a909      	add	r1, sp, #36	; 0x24
 80051fc:	ee19 0a90 	vmov	r0, s19
 8005200:	f8ad a024 	strh.w	sl, [sp, #36]	; 0x24
 8005204:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8005208:	f00b fce3 	bl	8010bd2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800520c:	231e      	movs	r3, #30
        updateTextPosition();
 800520e:	ee19 0a90 	vmov	r0, s19
 8005212:	f8a4 32bc 	strh.w	r3, [r4, #700]	; 0x2bc
 8005216:	f7fd f8fd 	bl	8002414 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 800521a:	4630      	mov	r0, r6
        colorPressed = col;
 800521c:	e9c4 77b0 	strd	r7, r7, [r4, #704]	; 0x2c0
 8005220:	ee19 1a90 	vmov	r1, s19
 8005224:	f8c4 52ac 	str.w	r5, [r4, #684]	; 0x2ac
 8005228:	f009 f93a 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800522c:	4620      	mov	r0, r4
 800522e:	b00d      	add	sp, #52	; 0x34
 8005230:	ecbd 8b04 	vpop	{d8-d9}
 8005234:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005238:	0802a2a8 	.word	0x0802a2a8
 800523c:	0802b0d8 	.word	0x0802b0d8
 8005240:	0802b2a0 	.word	0x0802b2a0
 8005244:	0802ae0c 	.word	0x0802ae0c
 8005248:	0802a290 	.word	0x0802a290
 800524c:	08004eb1 	.word	0x08004eb1
 8005250:	08028c00 	.word	0x08028c00

08005254 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005254:	4770      	bx	lr

08005256 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8005256:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005258:	68c2      	ldr	r2, [r0, #12]
 800525a:	6844      	ldr	r4, [r0, #4]
 800525c:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800525e:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8005260:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8005264:	07d2      	lsls	r2, r2, #31
 8005266:	bf48      	it	mi
 8005268:	5962      	ldrmi	r2, [r4, r5]
 800526a:	689b      	ldr	r3, [r3, #8]
    }
 800526c:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800526e:	bf48      	it	mi
 8005270:	58d3      	ldrmi	r3, [r2, r3]
 8005272:	4718      	bx	r3

08005274 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8005274:	6843      	ldr	r3, [r0, #4]
 8005276:	b12b      	cbz	r3, 8005284 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8005278:	6883      	ldr	r3, [r0, #8]
 800527a:	b92b      	cbnz	r3, 8005288 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800527c:	68c0      	ldr	r0, [r0, #12]
 800527e:	f000 0001 	and.w	r0, r0, #1
 8005282:	4770      	bx	lr
 8005284:	4618      	mov	r0, r3
 8005286:	4770      	bx	lr
 8005288:	2001      	movs	r0, #1
    }
 800528a:	4770      	bx	lr

0800528c <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800528c:	b510      	push	{r4, lr}
 800528e:	2110      	movs	r1, #16
 8005290:	4604      	mov	r4, r0
 8005292:	f021 f8fc 	bl	802648e <_ZdlPvj>
 8005296:	4620      	mov	r0, r4
 8005298:	bd10      	pop	{r4, pc}

0800529a <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Measurement_Accurate_DisplayViewBase::setupScreen()
{
    gauge_with_Values1.initialize();
 800529a:	f500 700f 	add.w	r0, r0, #572	; 0x23c
 800529e:	f001 bd77 	b.w	8006d90 <_ZN17Gauge_with_Values10initializeEv>

080052a2 <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
}

void Measurement_Accurate_DisplayViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 80052a2:	3098      	adds	r0, #152	; 0x98
 80052a4:	4288      	cmp	r0, r1
{
 80052a6:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 80052a8:	d105      	bne.n	80052b6 <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_DisplayViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80052aa:	f00e fb91 	bl	80139d0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 80052ae:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 80052b2:	f7fd bdd3 	b.w	8002e5c <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 80052b6:	bd08      	pop	{r3, pc}

080052b8 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 80052b8:	b510      	push	{r4, lr}
 80052ba:	4b07      	ldr	r3, [pc, #28]	; (80052d8 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev+0x20>)
 80052bc:	6003      	str	r3, [r0, #0]
 80052be:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80052c0:	f00c fe84 	bl	8011fcc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>

class Gauge_with_Values : public Gauge_with_ValuesBase
{
public:
    Gauge_with_Values();
    virtual ~Gauge_with_Values() {}
 80052c4:	4b05      	ldr	r3, [pc, #20]	; (80052dc <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev+0x24>)
 80052c6:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
 80052ca:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 80052ce:	f7fe fe49 	bl	8003f64 <_ZN21Gauge_with_ValuesBaseD1Ev>
}
 80052d2:	4620      	mov	r0, r4
 80052d4:	bd10      	pop	{r4, pc}
 80052d6:	bf00      	nop
 80052d8:	0802a2f4 	.word	0x0802a2f4
 80052dc:	0802a770 	.word	0x0802a770

080052e0 <_ZN36Measurement_Accurate_DisplayViewBaseD0Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 80052e0:	b510      	push	{r4, lr}
 80052e2:	4604      	mov	r4, r0
}
 80052e4:	f7ff ffe8 	bl	80052b8 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>
 80052e8:	4620      	mov	r0, r4
 80052ea:	f241 31e4 	movw	r1, #5092	; 0x13e4
 80052ee:	f021 f8ce 	bl	802648e <_ZdlPvj>
 80052f2:	4620      	mov	r0, r4
 80052f4:	bd10      	pop	{r4, pc}
	...

080052f8 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>:
Measurement_Accurate_DisplayViewBase::Measurement_Accurate_DisplayViewBase() :
 80052f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80052fc:	ed2d 8b04 	vpush	{d8-d9}
 8005300:	4604      	mov	r4, r0
 8005302:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_DisplayViewBase::buttonCallbackHandler)
 8005304:	46a1      	mov	r9, r4
 8005306:	2500      	movs	r5, #0
 8005308:	f00f ffe2 	bl	80152d0 <_ZN8touchgfx6ScreenC1Ev>
 800530c:	4bac      	ldr	r3, [pc, #688]	; (80055c0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2c8>)
 800530e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8005310:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8005314:	2226      	movs	r2, #38	; 0x26
 8005316:	4629      	mov	r1, r5
 8005318:	4648      	mov	r0, r9
 800531a:	f022 f8ae 	bl	802747a <memset>
 800531e:	4648      	mov	r0, r9
 8005320:	f7fd f844 	bl	80023ac <_ZN8touchgfx6WidgetC1Ev>
 8005324:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8005328:	26ff      	movs	r6, #255	; 0xff
 800532a:	4ba6      	ldr	r3, [pc, #664]	; (80055c4 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2cc>)
 800532c:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800532e:	2226      	movs	r2, #38	; 0x26
 8005330:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8005334:	4629      	mov	r1, r5
 8005336:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800533a:	4640      	mov	r0, r8
 800533c:	66a5      	str	r5, [r4, #104]	; 0x68
 800533e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005342:	f022 f89a 	bl	802747a <memset>
 8005346:	4640      	mov	r0, r8
 8005348:	f7fd f830 	bl	80023ac <_ZN8touchgfx6WidgetC1Ev>
 800534c:	4b9e      	ldr	r3, [pc, #632]	; (80055c8 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2d0>)
 800534e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8005350:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8005354:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8005358:	a90a      	add	r1, sp, #40	; 0x28
 800535a:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 800535c:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8005360:	f00b fe2d 	bl	8010fbe <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8005364:	f104 0398 	add.w	r3, r4, #152	; 0x98
 8005368:	4618      	mov	r0, r3
 800536a:	ee08 3a10 	vmov	s16, r3
 800536e:	f00b ff67 	bl	8011240 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005372:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8005376:	f504 7794 	add.w	r7, r4, #296	; 0x128
 800537a:	4618      	mov	r0, r3
 800537c:	ee08 3a90 	vmov	s17, r3
 8005380:	f7fd f826 	bl	80023d0 <_ZN8touchgfx8TextAreaC1Ev>
 8005384:	4638      	mov	r0, r7
 8005386:	f00a fce3 	bl	800fd50 <_ZN8touchgfx4LineC1Ev>
 800538a:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800538e:	4618      	mov	r0, r3
 8005390:	9303      	str	r3, [sp, #12]
 8005392:	f7fb ff95 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8005396:	4b8d      	ldr	r3, [pc, #564]	; (80055cc <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2d4>)
 8005398:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 800539c:	f504 7bd6 	add.w	fp, r4, #428	; 0x1ac
 80053a0:	3324      	adds	r3, #36	; 0x24
 80053a2:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 80053a6:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 80053aa:	4658      	mov	r0, fp
 80053ac:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 80053b0:	f7fd f80e 	bl	80023d0 <_ZN8touchgfx8TextAreaC1Ev>
 80053b4:	4650      	mov	r0, sl
 80053b6:	f7fd f80b 	bl	80023d0 <_ZN8touchgfx8TextAreaC1Ev>
 80053ba:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 80053be:	4618      	mov	r0, r3
 80053c0:	ee09 3a10 	vmov	s18, r3
 80053c4:	f001 fcda 	bl	8006d7c <_ZN17Gauge_with_ValuesC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80053c8:	4a81      	ldr	r2, [pc, #516]	; (80055d0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2d8>)
 80053ca:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80053ce:	e9c3 24f5 	strd	r2, r4, [r3, #980]	; 0x3d4
 80053d2:	4a80      	ldr	r2, [pc, #512]	; (80055d4 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2dc>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80053d4:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80053d8:	e9c3 25f7 	strd	r2, r5, [r3, #988]	; 0x3dc
 80053dc:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 80053e0:	f00c fdea 	bl	8011fb8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80053e4:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80053e8:	462a      	mov	r2, r5
 80053ea:	4648      	mov	r0, r9
 80053ec:	9300      	str	r3, [sp, #0]
 80053ee:	4629      	mov	r1, r5
 80053f0:	23f0      	movs	r3, #240	; 0xf0
 80053f2:	f7fc ffc8 	bl	8002386 <_ZN8touchgfx8Drawable11setPositionEssss>
 80053f6:	1d26      	adds	r6, r4, #4
        color = newColor;
 80053f8:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80053fc:	66a3      	str	r3, [r4, #104]	; 0x68
 80053fe:	4649      	mov	r1, r9
 8005400:	4630      	mov	r0, r6
 8005402:	f009 f84d 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8005406:	462a      	mov	r2, r5
 8005408:	4640      	mov	r0, r8
 800540a:	4629      	mov	r1, r5
 800540c:	f7fc ffae 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
 8005410:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8005412:	4640      	mov	r0, r8
 8005414:	a90a      	add	r1, sp, #40	; 0x28
 8005416:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800541a:	f00b fdd0 	bl	8010fbe <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800541e:	4641      	mov	r1, r8
 8005420:	4630      	mov	r0, r6
 8005422:	f009 f83d 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8005426:	ee18 0a10 	vmov	r0, s16
 800542a:	f240 1201 	movw	r2, #257	; 0x101
 800542e:	2121      	movs	r1, #33	; 0x21
 8005430:	f7fc ff9c 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
 8005434:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005436:	aa0a      	add	r2, sp, #40	; 0x28
 8005438:	a909      	add	r1, sp, #36	; 0x24
 800543a:	ee18 0a10 	vmov	r0, s16
 800543e:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8005442:	2302      	movs	r3, #2
 8005444:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005448:	f00b fbc3 	bl	8010bd2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800544c:	2307      	movs	r3, #7
        updateTextPosition();
 800544e:	ee18 0a10 	vmov	r0, s16
 8005452:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 8005456:	f7fc ffdd 	bl	8002414 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 800545a:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 800545e:	3314      	adds	r3, #20
        color = col;
 8005460:	f04f 39ff 	mov.w	r9, #4294967295
 8005464:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8005468:	ee18 1a10 	vmov	r1, s16
 800546c:	4630      	mov	r0, r6
        colorPressed = col;
 800546e:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 8005472:	f009 f815 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005476:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(23, 60);
 800547a:	223c      	movs	r2, #60	; 0x3c
 800547c:	ee18 0a90 	vmov	r0, s17
 8005480:	2117      	movs	r1, #23
 8005482:	f7fc ff73 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
 8005486:	ee18 1a90 	vmov	r1, s17
 800548a:	4640      	mov	r0, r8
        color = newColor;
 800548c:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 8005490:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8005494:	f00a ff1e 	bl	80102d4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005498:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800549c:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 80054a0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80054a4:	4b4c      	ldr	r3, [pc, #304]	; (80055d8 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2e0>)
 80054a6:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZR32));
 80054a8:	ee18 0a90 	vmov	r0, s17
 80054ac:	2308      	movs	r3, #8
 80054ae:	a90a      	add	r1, sp, #40	; 0x28
 80054b0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80054b4:	f00b f9a8 	bl	8010808 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80054b8:	ee18 1a90 	vmov	r1, s17
 80054bc:	4630      	mov	r0, r6
 80054be:	f008 ffef 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80054c2:	230a      	movs	r3, #10
 80054c4:	9300      	str	r3, [sp, #0]
 80054c6:	2232      	movs	r2, #50	; 0x32
 80054c8:	23f0      	movs	r3, #240	; 0xf0
 80054ca:	4629      	mov	r1, r5
 80054cc:	4638      	mov	r0, r7
 80054ce:	f7fc ff5a 	bl	8002386 <_ZN8touchgfx8Drawable11setPositionEssss>
 80054d2:	9b03      	ldr	r3, [sp, #12]
 80054d4:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80054d8:	22a0      	movs	r2, #160	; 0xa0
 80054da:	4611      	mov	r1, r2
 80054dc:	4638      	mov	r0, r7
 80054de:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 80054e2:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 80054e6:	f00a fd49 	bl	800ff7c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80054ea:	22a0      	movs	r2, #160	; 0xa0
 80054ec:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80054f0:	4638      	mov	r0, r7
 80054f2:	f00a fd4e 	bl	800ff92 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80054f6:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 80054fa:	2b20      	cmp	r3, #32
 80054fc:	d005      	beq.n	800550a <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x212>
        lineWidthQ5 = widthQ5;
 80054fe:	2320      	movs	r3, #32
 8005500:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 8005504:	4638      	mov	r0, r7
 8005506:	f00a fc43 	bl	800fd90 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800550a:	4638      	mov	r0, r7
 800550c:	2101      	movs	r1, #1
 800550e:	f00a fd4b 	bl	800ffa8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8005512:	4639      	mov	r1, r7
 8005514:	4630      	mov	r0, r6
 8005516:	f008 ffc3 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 800551a:	2500      	movs	r5, #0
    textArea2.setXY(69, 36);
 800551c:	2224      	movs	r2, #36	; 0x24
 800551e:	4658      	mov	r0, fp
        color = newColor;
 8005520:	f04f 39ff 	mov.w	r9, #4294967295
 8005524:	2145      	movs	r1, #69	; 0x45
 8005526:	f7fc ff21 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800552a:	4659      	mov	r1, fp
 800552c:	4640      	mov	r0, r8
        color = newColor;
 800552e:	f8c4 91dc 	str.w	r9, [r4, #476]	; 0x1dc
        linespace = space;
 8005532:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8005536:	f00a fecd 	bl	80102d4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800553a:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800553e:	f10b 033c 	add.w	r3, fp, #60	; 0x3c
 8005542:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005546:	4f24      	ldr	r7, [pc, #144]	; (80055d8 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2e0>)
 8005548:	970a      	str	r7, [sp, #40]	; 0x28
 800554a:	2309      	movs	r3, #9
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_K7UP));
 800554c:	a90a      	add	r1, sp, #40	; 0x28
 800554e:	4658      	mov	r0, fp
 8005550:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005554:	f00b f958 	bl	8010808 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005558:	4659      	mov	r1, fp
 800555a:	4630      	mov	r0, r6
 800555c:	f008 ffa0 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(50, 12);
 8005560:	220c      	movs	r2, #12
 8005562:	4650      	mov	r0, sl
 8005564:	2132      	movs	r1, #50	; 0x32
 8005566:	f7fc ff01 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
 800556a:	4651      	mov	r1, sl
 800556c:	4640      	mov	r0, r8
        color = newColor;
 800556e:	f8c4 9224 	str.w	r9, [r4, #548]	; 0x224
        linespace = space;
 8005572:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 8005576:	f00a fead 	bl	80102d4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800557a:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800557e:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 8005582:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005586:	230a      	movs	r3, #10
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0GAY));
 8005588:	a90a      	add	r1, sp, #40	; 0x28
 800558a:	4650      	mov	r0, sl
 800558c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005590:	970a      	str	r7, [sp, #40]	; 0x28
 8005592:	f00b f939 	bl	8010808 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005596:	4651      	mov	r1, sl
 8005598:	4630      	mov	r0, r6
 800559a:	f008 ff81 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge_with_Values1.setXY(0, 78);
 800559e:	ee19 0a10 	vmov	r0, s18
 80055a2:	224e      	movs	r2, #78	; 0x4e
 80055a4:	4629      	mov	r1, r5
 80055a6:	f7fc fee1 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
 80055aa:	4630      	mov	r0, r6
 80055ac:	ee19 1a10 	vmov	r1, s18
 80055b0:	f008 ff76 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80055b4:	4620      	mov	r0, r4
 80055b6:	b00d      	add	sp, #52	; 0x34
 80055b8:	ecbd 8b04 	vpop	{d8-d9}
 80055bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80055c0:	0802a2f4 	.word	0x0802a2f4
 80055c4:	0802b0d8 	.word	0x0802b0d8
 80055c8:	0802b2a0 	.word	0x0802b2a0
 80055cc:	0802ae0c 	.word	0x0802ae0c
 80055d0:	0802a2dc 	.word	0x0802a2dc
 80055d4:	080052a3 	.word	0x080052a3
 80055d8:	08028c00 	.word	0x08028c00

080055dc <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80055dc:	4770      	bx	lr

080055de <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80055de:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80055e0:	68c2      	ldr	r2, [r0, #12]
 80055e2:	6844      	ldr	r4, [r0, #4]
 80055e4:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80055e6:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80055e8:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80055ec:	07d2      	lsls	r2, r2, #31
 80055ee:	bf48      	it	mi
 80055f0:	5962      	ldrmi	r2, [r4, r5]
 80055f2:	689b      	ldr	r3, [r3, #8]
    }
 80055f4:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80055f6:	bf48      	it	mi
 80055f8:	58d3      	ldrmi	r3, [r2, r3]
 80055fa:	4718      	bx	r3

080055fc <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80055fc:	6843      	ldr	r3, [r0, #4]
 80055fe:	b12b      	cbz	r3, 800560c <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8005600:	6883      	ldr	r3, [r0, #8]
 8005602:	b92b      	cbnz	r3, 8005610 <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8005604:	68c0      	ldr	r0, [r0, #12]
 8005606:	f000 0001 	and.w	r0, r0, #1
 800560a:	4770      	bx	lr
 800560c:	4618      	mov	r0, r3
 800560e:	4770      	bx	lr
 8005610:	2001      	movs	r0, #1
    }
 8005612:	4770      	bx	lr

08005614 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005614:	b510      	push	{r4, lr}
 8005616:	2110      	movs	r1, #16
 8005618:	4604      	mov	r4, r0
 800561a:	f020 ff38 	bl	802648e <_ZdlPvj>
 800561e:	4620      	mov	r0, r4
 8005620:	bd10      	pop	{r4, pc}

08005622 <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Measurement_Accurate_Display_2ViewBase::setupScreen()
{
    gauge_with_Values1.initialize();
 8005622:	f500 700f 	add.w	r0, r0, #572	; 0x23c
 8005626:	f001 bbb3 	b.w	8006d90 <_ZN17Gauge_with_Values10initializeEv>

0800562a <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
}

void Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 800562a:	3098      	adds	r0, #152	; 0x98
 800562c:	4288      	cmp	r0, r1
{
 800562e:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8005630:	d105      	bne.n	800563e <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_Display_2ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8005632:	f00e f9cd 	bl	80139d0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 8005636:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 800563a:	f7fd bc0f 	b.w	8002e5c <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 800563e:	bd08      	pop	{r3, pc}

08005640 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 8005640:	b510      	push	{r4, lr}
 8005642:	4b07      	ldr	r3, [pc, #28]	; (8005660 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev+0x20>)
 8005644:	6003      	str	r3, [r0, #0]
 8005646:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005648:	f00c fcc0 	bl	8011fcc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
 800564c:	4b05      	ldr	r3, [pc, #20]	; (8005664 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev+0x24>)
 800564e:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
 8005652:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8005656:	f7fe fc85 	bl	8003f64 <_ZN21Gauge_with_ValuesBaseD1Ev>
}
 800565a:	4620      	mov	r0, r4
 800565c:	bd10      	pop	{r4, pc}
 800565e:	bf00      	nop
 8005660:	0802a340 	.word	0x0802a340
 8005664:	0802a770 	.word	0x0802a770

08005668 <_ZN38Measurement_Accurate_Display_2ViewBaseD0Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 8005668:	b510      	push	{r4, lr}
 800566a:	4604      	mov	r4, r0
}
 800566c:	f7ff ffe8 	bl	8005640 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>
 8005670:	4620      	mov	r0, r4
 8005672:	f241 31e4 	movw	r1, #5092	; 0x13e4
 8005676:	f020 ff0a 	bl	802648e <_ZdlPvj>
 800567a:	4620      	mov	r0, r4
 800567c:	bd10      	pop	{r4, pc}
	...

08005680 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>:
Measurement_Accurate_Display_2ViewBase::Measurement_Accurate_Display_2ViewBase() :
 8005680:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005684:	ed2d 8b04 	vpush	{d8-d9}
 8005688:	4604      	mov	r4, r0
 800568a:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler)
 800568c:	46a1      	mov	r9, r4
 800568e:	2500      	movs	r5, #0
 8005690:	f00f fe1e 	bl	80152d0 <_ZN8touchgfx6ScreenC1Ev>
 8005694:	4bac      	ldr	r3, [pc, #688]	; (8005948 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2c8>)
 8005696:	63e5      	str	r5, [r4, #60]	; 0x3c
 8005698:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 800569c:	2226      	movs	r2, #38	; 0x26
 800569e:	4629      	mov	r1, r5
 80056a0:	4648      	mov	r0, r9
 80056a2:	f021 feea 	bl	802747a <memset>
 80056a6:	4648      	mov	r0, r9
 80056a8:	f7fc fe80 	bl	80023ac <_ZN8touchgfx6WidgetC1Ev>
 80056ac:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 80056b0:	26ff      	movs	r6, #255	; 0xff
 80056b2:	4ba6      	ldr	r3, [pc, #664]	; (800594c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2cc>)
 80056b4:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80056b6:	2226      	movs	r2, #38	; 0x26
 80056b8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80056bc:	4629      	mov	r1, r5
 80056be:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80056c2:	4640      	mov	r0, r8
 80056c4:	66a5      	str	r5, [r4, #104]	; 0x68
 80056c6:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80056ca:	f021 fed6 	bl	802747a <memset>
 80056ce:	4640      	mov	r0, r8
 80056d0:	f7fc fe6c 	bl	80023ac <_ZN8touchgfx6WidgetC1Ev>
 80056d4:	4b9e      	ldr	r3, [pc, #632]	; (8005950 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2d0>)
 80056d6:	66e3      	str	r3, [r4, #108]	; 0x6c
 80056d8:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80056dc:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80056e0:	a90a      	add	r1, sp, #40	; 0x28
 80056e2:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 80056e4:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80056e8:	f00b fc69 	bl	8010fbe <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80056ec:	f104 0398 	add.w	r3, r4, #152	; 0x98
 80056f0:	4618      	mov	r0, r3
 80056f2:	ee08 3a10 	vmov	s16, r3
 80056f6:	f00b fda3 	bl	8011240 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80056fa:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 80056fe:	f504 7794 	add.w	r7, r4, #296	; 0x128
 8005702:	4618      	mov	r0, r3
 8005704:	ee08 3a90 	vmov	s17, r3
 8005708:	f7fc fe62 	bl	80023d0 <_ZN8touchgfx8TextAreaC1Ev>
 800570c:	4638      	mov	r0, r7
 800570e:	f00a fb1f 	bl	800fd50 <_ZN8touchgfx4LineC1Ev>
 8005712:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8005716:	4618      	mov	r0, r3
 8005718:	9303      	str	r3, [sp, #12]
 800571a:	f7fb fdd1 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800571e:	4b8d      	ldr	r3, [pc, #564]	; (8005954 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2d4>)
 8005720:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 8005724:	f504 7bd6 	add.w	fp, r4, #428	; 0x1ac
 8005728:	3324      	adds	r3, #36	; 0x24
 800572a:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 800572e:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 8005732:	4658      	mov	r0, fp
 8005734:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 8005738:	f7fc fe4a 	bl	80023d0 <_ZN8touchgfx8TextAreaC1Ev>
 800573c:	4650      	mov	r0, sl
 800573e:	f7fc fe47 	bl	80023d0 <_ZN8touchgfx8TextAreaC1Ev>
 8005742:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 8005746:	4618      	mov	r0, r3
 8005748:	ee09 3a10 	vmov	s18, r3
 800574c:	f001 fb16 	bl	8006d7c <_ZN17Gauge_with_ValuesC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8005750:	4a81      	ldr	r2, [pc, #516]	; (8005958 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2d8>)
 8005752:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8005756:	e9c3 24f5 	strd	r2, r4, [r3, #980]	; 0x3d4
 800575a:	4a80      	ldr	r2, [pc, #512]	; (800595c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2dc>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800575c:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8005760:	e9c3 25f7 	strd	r2, r5, [r3, #988]	; 0x3dc
 8005764:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 8005768:	f00c fc26 	bl	8011fb8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800576c:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8005770:	462a      	mov	r2, r5
 8005772:	4648      	mov	r0, r9
 8005774:	9300      	str	r3, [sp, #0]
 8005776:	4629      	mov	r1, r5
 8005778:	23f0      	movs	r3, #240	; 0xf0
 800577a:	f7fc fe04 	bl	8002386 <_ZN8touchgfx8Drawable11setPositionEssss>
 800577e:	1d26      	adds	r6, r4, #4
        color = newColor;
 8005780:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8005784:	66a3      	str	r3, [r4, #104]	; 0x68
 8005786:	4649      	mov	r1, r9
 8005788:	4630      	mov	r0, r6
 800578a:	f008 fe89 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 800578e:	462a      	mov	r2, r5
 8005790:	4640      	mov	r0, r8
 8005792:	4629      	mov	r1, r5
 8005794:	f7fc fdea 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
 8005798:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800579a:	4640      	mov	r0, r8
 800579c:	a90a      	add	r1, sp, #40	; 0x28
 800579e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80057a2:	f00b fc0c 	bl	8010fbe <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80057a6:	4641      	mov	r1, r8
 80057a8:	4630      	mov	r0, r6
 80057aa:	f008 fe79 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 80057ae:	ee18 0a10 	vmov	r0, s16
 80057b2:	f240 1201 	movw	r2, #257	; 0x101
 80057b6:	2121      	movs	r1, #33	; 0x21
 80057b8:	f7fc fdd8 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
 80057bc:	f04f 0803 	mov.w	r8, #3
 80057c0:	2302      	movs	r3, #2
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80057c2:	aa0a      	add	r2, sp, #40	; 0x28
 80057c4:	a909      	add	r1, sp, #36	; 0x24
 80057c6:	ee18 0a10 	vmov	r0, s16
 80057ca:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80057ce:	f8ad 8024 	strh.w	r8, [sp, #36]	; 0x24
 80057d2:	f00b f9fe 	bl	8010bd2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        updateTextPosition();
 80057d6:	ee18 0a10 	vmov	r0, s16
class TypedText
 80057da:	f8a4 80d0 	strh.w	r8, [r4, #208]	; 0xd0
 80057de:	f7fc fe19 	bl	8002414 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 80057e2:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 80057e6:	3314      	adds	r3, #20
        color = col;
 80057e8:	f04f 39ff 	mov.w	r9, #4294967295
 80057ec:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 80057f0:	ee18 1a10 	vmov	r1, s16
 80057f4:	4630      	mov	r0, r6
        colorPressed = col;
 80057f6:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 80057fa:	f008 fe51 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80057fe:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(23, 60);
 8005802:	223c      	movs	r2, #60	; 0x3c
 8005804:	ee18 0a90 	vmov	r0, s17
 8005808:	2117      	movs	r1, #23
 800580a:	f7fc fdaf 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
 800580e:	ee18 1a90 	vmov	r1, s17
 8005812:	4640      	mov	r0, r8
        color = newColor;
 8005814:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 8005818:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 800581c:	f00a fd5a 	bl	80102d4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005820:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8005824:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8005828:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 800582c:	4b4c      	ldr	r3, [pc, #304]	; (8005960 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2e0>)
 800582e:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TF2A));
 8005830:	ee18 0a90 	vmov	r0, s17
 8005834:	2304      	movs	r3, #4
 8005836:	a90a      	add	r1, sp, #40	; 0x28
 8005838:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800583c:	f00a ffe4 	bl	8010808 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005840:	ee18 1a90 	vmov	r1, s17
 8005844:	4630      	mov	r0, r6
 8005846:	f008 fe2b 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 800584a:	230a      	movs	r3, #10
 800584c:	9300      	str	r3, [sp, #0]
 800584e:	2232      	movs	r2, #50	; 0x32
 8005850:	23f0      	movs	r3, #240	; 0xf0
 8005852:	4629      	mov	r1, r5
 8005854:	4638      	mov	r0, r7
 8005856:	f7fc fd96 	bl	8002386 <_ZN8touchgfx8Drawable11setPositionEssss>
 800585a:	9b03      	ldr	r3, [sp, #12]
 800585c:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005860:	22a0      	movs	r2, #160	; 0xa0
 8005862:	4611      	mov	r1, r2
 8005864:	4638      	mov	r0, r7
 8005866:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 800586a:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 800586e:	f00a fb85 	bl	800ff7c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005872:	22a0      	movs	r2, #160	; 0xa0
 8005874:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8005878:	4638      	mov	r0, r7
 800587a:	f00a fb8a 	bl	800ff92 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800587e:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 8005882:	2b20      	cmp	r3, #32
 8005884:	d005      	beq.n	8005892 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x212>
        lineWidthQ5 = widthQ5;
 8005886:	2320      	movs	r3, #32
 8005888:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 800588c:	4638      	mov	r0, r7
 800588e:	f00a fa7f 	bl	800fd90 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8005892:	4638      	mov	r0, r7
 8005894:	2101      	movs	r1, #1
 8005896:	f00a fb87 	bl	800ffa8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800589a:	4639      	mov	r1, r7
 800589c:	4630      	mov	r0, r6
 800589e:	f008 fdff 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 80058a2:	2500      	movs	r5, #0
    textArea2.setXY(69, 36);
 80058a4:	2224      	movs	r2, #36	; 0x24
 80058a6:	4658      	mov	r0, fp
        color = newColor;
 80058a8:	f04f 39ff 	mov.w	r9, #4294967295
 80058ac:	2145      	movs	r1, #69	; 0x45
 80058ae:	f7fc fd5d 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80058b2:	4659      	mov	r1, fp
 80058b4:	4640      	mov	r0, r8
        color = newColor;
 80058b6:	f8c4 91dc 	str.w	r9, [r4, #476]	; 0x1dc
        linespace = space;
 80058ba:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 80058be:	f00a fd09 	bl	80102d4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80058c2:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80058c6:	f10b 033c 	add.w	r3, fp, #60	; 0x3c
 80058ca:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80058ce:	4f24      	ldr	r7, [pc, #144]	; (8005960 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2e0>)
 80058d0:	970a      	str	r7, [sp, #40]	; 0x28
 80058d2:	2305      	movs	r3, #5
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_A08K));
 80058d4:	a90a      	add	r1, sp, #40	; 0x28
 80058d6:	4658      	mov	r0, fp
 80058d8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80058dc:	f00a ff94 	bl	8010808 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80058e0:	4659      	mov	r1, fp
 80058e2:	4630      	mov	r0, r6
 80058e4:	f008 fddc 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(50, 12);
 80058e8:	220c      	movs	r2, #12
 80058ea:	4650      	mov	r0, sl
 80058ec:	2132      	movs	r1, #50	; 0x32
 80058ee:	f7fc fd3d 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
 80058f2:	4651      	mov	r1, sl
 80058f4:	4640      	mov	r0, r8
        color = newColor;
 80058f6:	f8c4 9224 	str.w	r9, [r4, #548]	; 0x224
        linespace = space;
 80058fa:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 80058fe:	f00a fce9 	bl	80102d4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005902:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8005906:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 800590a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800590e:	2306      	movs	r3, #6
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IJWA));
 8005910:	a90a      	add	r1, sp, #40	; 0x28
 8005912:	4650      	mov	r0, sl
 8005914:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005918:	970a      	str	r7, [sp, #40]	; 0x28
 800591a:	f00a ff75 	bl	8010808 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800591e:	4651      	mov	r1, sl
 8005920:	4630      	mov	r0, r6
 8005922:	f008 fdbd 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge_with_Values1.setXY(0, 78);
 8005926:	ee19 0a10 	vmov	r0, s18
 800592a:	224e      	movs	r2, #78	; 0x4e
 800592c:	4629      	mov	r1, r5
 800592e:	f7fc fd1d 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
 8005932:	4630      	mov	r0, r6
 8005934:	ee19 1a10 	vmov	r1, s18
 8005938:	f008 fdb2 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800593c:	4620      	mov	r0, r4
 800593e:	b00d      	add	sp, #52	; 0x34
 8005940:	ecbd 8b04 	vpop	{d8-d9}
 8005944:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005948:	0802a340 	.word	0x0802a340
 800594c:	0802b0d8 	.word	0x0802b0d8
 8005950:	0802b2a0 	.word	0x0802b2a0
 8005954:	0802ae0c 	.word	0x0802ae0c
 8005958:	0802a328 	.word	0x0802a328
 800595c:	0800562b 	.word	0x0800562b
 8005960:	08028c00 	.word	0x08028c00

08005964 <_ZN26Measurement_SingleViewBase11setupScreenEv>:
}

void Measurement_SingleViewBase::setupScreen()
{

}
 8005964:	4770      	bx	lr

08005966 <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005966:	4770      	bx	lr

08005968 <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8005968:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800596a:	68c2      	ldr	r2, [r0, #12]
 800596c:	6844      	ldr	r4, [r0, #4]
 800596e:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8005970:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8005972:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8005976:	07d2      	lsls	r2, r2, #31
 8005978:	bf48      	it	mi
 800597a:	5962      	ldrmi	r2, [r4, r5]
 800597c:	689b      	ldr	r3, [r3, #8]
    }
 800597e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005980:	bf48      	it	mi
 8005982:	58d3      	ldrmi	r3, [r2, r3]
 8005984:	4718      	bx	r3

08005986 <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8005986:	6843      	ldr	r3, [r0, #4]
 8005988:	b12b      	cbz	r3, 8005996 <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800598a:	6883      	ldr	r3, [r0, #8]
 800598c:	b92b      	cbnz	r3, 800599a <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800598e:	68c0      	ldr	r0, [r0, #12]
 8005990:	f000 0001 	and.w	r0, r0, #1
 8005994:	4770      	bx	lr
 8005996:	4618      	mov	r0, r3
 8005998:	4770      	bx	lr
 800599a:	2001      	movs	r0, #1
    }
 800599c:	4770      	bx	lr

0800599e <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800599e:	b510      	push	{r4, lr}
 80059a0:	2110      	movs	r1, #16
 80059a2:	4604      	mov	r4, r0
 80059a4:	f020 fd73 	bl	802648e <_ZdlPvj>
 80059a8:	4620      	mov	r0, r4
 80059aa:	bd10      	pop	{r4, pc}

080059ac <_ZN26Measurement_SingleViewBaseD1Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 80059ac:	b510      	push	{r4, lr}
 80059ae:	4b03      	ldr	r3, [pc, #12]	; (80059bc <_ZN26Measurement_SingleViewBaseD1Ev+0x10>)
 80059b0:	6003      	str	r3, [r0, #0]
 80059b2:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80059b4:	f00c fb0a 	bl	8011fcc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80059b8:	4620      	mov	r0, r4
 80059ba:	bd10      	pop	{r4, pc}
 80059bc:	0802a38c 	.word	0x0802a38c

080059c0 <_ZN26Measurement_SingleViewBaseD0Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 80059c0:	b507      	push	{r0, r1, r2, lr}
 80059c2:	4b07      	ldr	r3, [pc, #28]	; (80059e0 <_ZN26Measurement_SingleViewBaseD0Ev+0x20>)
 80059c4:	6003      	str	r3, [r0, #0]
 80059c6:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80059c8:	f00c fb00 	bl	8011fcc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80059cc:	9801      	ldr	r0, [sp, #4]
 80059ce:	f241 01ec 	movw	r1, #4332	; 0x10ec
 80059d2:	f020 fd5c 	bl	802648e <_ZdlPvj>
 80059d6:	9801      	ldr	r0, [sp, #4]
 80059d8:	b003      	add	sp, #12
 80059da:	f85d fb04 	ldr.w	pc, [sp], #4
 80059de:	bf00      	nop
 80059e0:	0802a38c 	.word	0x0802a38c

080059e4 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_SingleViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 80059e4:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 80059e6:	f500 73fa 	add.w	r3, r0, #500	; 0x1f4
 80059ea:	4299      	cmp	r1, r3
{
 80059ec:	4604      	mov	r4, r0
 80059ee:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 80059f0:	d103      	bne.n	80059fa <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_SingleViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80059f2:	f00d ffed 	bl	80139d0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 80059f6:	f7fd f9e1 	bl	8002dbc <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 80059fa:	f504 7321 	add.w	r3, r4, #644	; 0x284
 80059fe:	429d      	cmp	r5, r3
 8005a00:	d103      	bne.n	8005a0a <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8005a02:	f00d ffe5 	bl	80139d0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Measurement_Single_Display_1P
        //Go to Measurement_Single_Display_1P with screen transition towards East
        application().gotoMeasurement_Single_Display_1PScreenWipeTransitionEast();
 8005a06:	f7fd f9f9 	bl	8002dfc <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 8005a0a:	f504 740f 	add.w	r4, r4, #572	; 0x23c
 8005a0e:	42a5      	cmp	r5, r4
 8005a10:	d105      	bne.n	8005a1e <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8005a12:	f00d ffdd 	bl	80139d0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Measurement_Single_Display_3P
        //Go to Measurement_Single_Display_3P with screen transition towards East
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
    }
}
 8005a16:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
 8005a1a:	f7fd b9ff 	b.w	8002e1c <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>
}
 8005a1e:	bd38      	pop	{r3, r4, r5, pc}

08005a20 <_ZN26Measurement_SingleViewBaseC1Ev>:
Measurement_SingleViewBase::Measurement_SingleViewBase() :
 8005a20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005a24:	ed2d 8b04 	vpush	{d8-d9}
 8005a28:	4604      	mov	r4, r0
 8005a2a:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_SingleViewBase::buttonCallbackHandler)
 8005a2c:	46a2      	mov	sl, r4
 8005a2e:	2500      	movs	r5, #0
 8005a30:	f00f fc4e 	bl	80152d0 <_ZN8touchgfx6ScreenC1Ev>
 8005a34:	4bcd      	ldr	r3, [pc, #820]	; (8005d6c <_ZN26Measurement_SingleViewBaseC1Ev+0x34c>)
 8005a36:	63e5      	str	r5, [r4, #60]	; 0x3c
 8005a38:	f84a 3b40 	str.w	r3, [sl], #64
        : Widget(), alpha(255), color(0)
 8005a3c:	2226      	movs	r2, #38	; 0x26
 8005a3e:	4629      	mov	r1, r5
 8005a40:	4650      	mov	r0, sl
 8005a42:	f021 fd1a 	bl	802747a <memset>
 8005a46:	4650      	mov	r0, sl
 8005a48:	f7fc fcb0 	bl	80023ac <_ZN8touchgfx6WidgetC1Ev>
 8005a4c:	f104 096c 	add.w	r9, r4, #108	; 0x6c
 8005a50:	26ff      	movs	r6, #255	; 0xff
 8005a52:	4bc7      	ldr	r3, [pc, #796]	; (8005d70 <_ZN26Measurement_SingleViewBaseC1Ev+0x350>)
 8005a54:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8005a56:	2226      	movs	r2, #38	; 0x26
 8005a58:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8005a5c:	4629      	mov	r1, r5
 8005a5e:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8005a62:	4648      	mov	r0, r9
 8005a64:	66a5      	str	r5, [r4, #104]	; 0x68
 8005a66:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005a6a:	f021 fd06 	bl	802747a <memset>
 8005a6e:	4648      	mov	r0, r9
 8005a70:	f7fc fc9c 	bl	80023ac <_ZN8touchgfx6WidgetC1Ev>
 8005a74:	4bbf      	ldr	r3, [pc, #764]	; (8005d74 <_ZN26Measurement_SingleViewBaseC1Ev+0x354>)
 8005a76:	66e3      	str	r3, [r4, #108]	; 0x6c
 8005a78:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8005a7c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8005a80:	a90a      	add	r1, sp, #40	; 0x28
 8005a82:	4648      	mov	r0, r9
        : Widget(), bitmap(bmp), alpha(255)
 8005a84:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8005a88:	f00b fa99 	bl	8010fbe <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8005a8c:	f104 0398 	add.w	r3, r4, #152	; 0x98
 8005a90:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8005a94:	4618      	mov	r0, r3
 8005a96:	ee08 3a10 	vmov	s16, r3
 8005a9a:	f7fc fc99 	bl	80023d0 <_ZN8touchgfx8TextAreaC1Ev>
 8005a9e:	4638      	mov	r0, r7
 8005aa0:	f00a f956 	bl	800fd50 <_ZN8touchgfx4LineC1Ev>
 8005aa4:	f504 73a8 	add.w	r3, r4, #336	; 0x150
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8005aa8:	4618      	mov	r0, r3
 8005aaa:	9303      	str	r3, [sp, #12]
 8005aac:	f7fb fc08 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8005ab0:	4bb1      	ldr	r3, [pc, #708]	; (8005d78 <_ZN26Measurement_SingleViewBaseC1Ev+0x358>)
 8005ab2:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
 8005ab6:	f504 78b2 	add.w	r8, r4, #356	; 0x164
 8005aba:	3324      	adds	r3, #36	; 0x24
 8005abc:	f8c4 3158 	str.w	r3, [r4, #344]	; 0x158
 8005ac0:	f8c4 515c 	str.w	r5, [r4, #348]	; 0x15c
 8005ac4:	4640      	mov	r0, r8
 8005ac6:	f504 7bd6 	add.w	fp, r4, #428	; 0x1ac
 8005aca:	f7fc fc81 	bl	80023d0 <_ZN8touchgfx8TextAreaC1Ev>
 8005ace:	4658      	mov	r0, fp
 8005ad0:	f7fc fc7e 	bl	80023d0 <_ZN8touchgfx8TextAreaC1Ev>
 8005ad4:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 8005ad8:	4618      	mov	r0, r3
 8005ada:	ee08 3a90 	vmov	s17, r3
 8005ade:	f00b fbaf 	bl	8011240 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005ae2:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 8005ae6:	4618      	mov	r0, r3
 8005ae8:	ee09 3a10 	vmov	s18, r3
 8005aec:	f00b fba8 	bl	8011240 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005af0:	f504 7321 	add.w	r3, r4, #644	; 0x284
 8005af4:	4618      	mov	r0, r3
 8005af6:	ee09 3a90 	vmov	s19, r3
 8005afa:	f00b fba1 	bl	8011240 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8005afe:	4a9f      	ldr	r2, [pc, #636]	; (8005d7c <_ZN26Measurement_SingleViewBaseC1Ev+0x35c>)
 8005b00:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8005b04:	e9c3 2437 	strd	r2, r4, [r3, #220]	; 0xdc
 8005b08:	4a9d      	ldr	r2, [pc, #628]	; (8005d80 <_ZN26Measurement_SingleViewBaseC1Ev+0x360>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8005b0a:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8005b0e:	e9c3 2539 	strd	r2, r5, [r3, #228]	; 0xe4
 8005b12:	f504 7033 	add.w	r0, r4, #716	; 0x2cc
 8005b16:	f00c fa4f 	bl	8011fb8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8005b1a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8005b1e:	462a      	mov	r2, r5
 8005b20:	4650      	mov	r0, sl
 8005b22:	9300      	str	r3, [sp, #0]
 8005b24:	4629      	mov	r1, r5
 8005b26:	23f0      	movs	r3, #240	; 0xf0
 8005b28:	f7fc fc2d 	bl	8002386 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005b2c:	1d26      	adds	r6, r4, #4
        color = newColor;
 8005b2e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8005b32:	66a3      	str	r3, [r4, #104]	; 0x68
 8005b34:	4651      	mov	r1, sl
 8005b36:	4630      	mov	r0, r6
 8005b38:	f008 fcb2 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8005b3c:	462a      	mov	r2, r5
 8005b3e:	4648      	mov	r0, r9
 8005b40:	4629      	mov	r1, r5
 8005b42:	f7fc fc13 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
 8005b46:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8005b48:	4648      	mov	r0, r9
 8005b4a:	a90a      	add	r1, sp, #40	; 0x28
 8005b4c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005b50:	f00b fa35 	bl	8010fbe <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8005b54:	4649      	mov	r1, r9
 8005b56:	4630      	mov	r0, r6
 8005b58:	f008 fca2 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8005b5c:	f04f 39ff 	mov.w	r9, #4294967295
    textArea3.setXY(41, 60);
 8005b60:	223c      	movs	r2, #60	; 0x3c
 8005b62:	ee18 0a10 	vmov	r0, s16
 8005b66:	2129      	movs	r1, #41	; 0x29
        boundingArea = calculateBoundingArea();
 8005b68:	f10d 0a10 	add.w	sl, sp, #16
 8005b6c:	f7fc fbfe 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
 8005b70:	ee18 1a10 	vmov	r1, s16
 8005b74:	4650      	mov	r0, sl
        color = newColor;
 8005b76:	f8c4 90c8 	str.w	r9, [r4, #200]	; 0xc8
        linespace = space;
 8005b7a:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8005b7e:	f00a fba9 	bl	80102d4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005b82:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8005b86:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8005b8a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005b8e:	4b7d      	ldr	r3, [pc, #500]	; (8005d84 <_ZN26Measurement_SingleViewBaseC1Ev+0x364>)
 8005b90:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1QNY));
 8005b92:	ee18 0a10 	vmov	r0, s16
 8005b96:	230e      	movs	r3, #14
 8005b98:	a90a      	add	r1, sp, #40	; 0x28
 8005b9a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005b9e:	f00a fe33 	bl	8010808 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005ba2:	ee18 1a10 	vmov	r1, s16
 8005ba6:	4630      	mov	r0, r6
 8005ba8:	f008 fc7a 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8005bac:	230a      	movs	r3, #10
 8005bae:	9300      	str	r3, [sp, #0]
 8005bb0:	2232      	movs	r2, #50	; 0x32
 8005bb2:	23f0      	movs	r3, #240	; 0xf0
 8005bb4:	4629      	mov	r1, r5
 8005bb6:	4638      	mov	r0, r7
 8005bb8:	f7fc fbe5 	bl	8002386 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005bbc:	9b03      	ldr	r3, [sp, #12]
 8005bbe:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005bc2:	22a0      	movs	r2, #160	; 0xa0
 8005bc4:	4611      	mov	r1, r2
 8005bc6:	4638      	mov	r0, r7
 8005bc8:	f8c4 915c 	str.w	r9, [r4, #348]	; 0x15c
        color565 = LCD16bpp::getNativeColor(painterColor);
 8005bcc:	f8a4 9160 	strh.w	r9, [r4, #352]	; 0x160
 8005bd0:	f00a f9d4 	bl	800ff7c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005bd4:	22a0      	movs	r2, #160	; 0xa0
 8005bd6:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8005bda:	4638      	mov	r0, r7
 8005bdc:	f00a f9d9 	bl	800ff92 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8005be0:	f8d4 311c 	ldr.w	r3, [r4, #284]	; 0x11c
 8005be4:	2b20      	cmp	r3, #32
 8005be6:	d005      	beq.n	8005bf4 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d4>
        lineWidthQ5 = widthQ5;
 8005be8:	2320      	movs	r3, #32
 8005bea:	f8c4 311c 	str.w	r3, [r4, #284]	; 0x11c
        updateCachedShape();
 8005bee:	4638      	mov	r0, r7
 8005bf0:	f00a f8ce 	bl	800fd90 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8005bf4:	4638      	mov	r0, r7
 8005bf6:	2101      	movs	r1, #1
 8005bf8:	f00a f9d6 	bl	800ffa8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8005bfc:	4639      	mov	r1, r7
 8005bfe:	4630      	mov	r0, r6
 8005c00:	f008 fc4e 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8005c04:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 8005c08:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 36);
 8005c0a:	2224      	movs	r2, #36	; 0x24
 8005c0c:	4640      	mov	r0, r8
        linespace = space;
 8005c0e:	f04f 0a00 	mov.w	sl, #0
 8005c12:	2145      	movs	r1, #69	; 0x45
 8005c14:	f7fc fbaa 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8005c18:	4641      	mov	r1, r8
 8005c1a:	4638      	mov	r0, r7
        color = newColor;
 8005c1c:	f8c4 5194 	str.w	r5, [r4, #404]	; 0x194
        linespace = space;
 8005c20:	f8a4 a198 	strh.w	sl, [r4, #408]	; 0x198
        boundingArea = calculateBoundingArea();
 8005c24:	f00a fb56 	bl	80102d4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005c28:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8005c2c:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8005c30:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005c34:	f8df 914c 	ldr.w	r9, [pc, #332]	; 8005d84 <_ZN26Measurement_SingleViewBaseC1Ev+0x364>
 8005c38:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8005c3c:	2327      	movs	r3, #39	; 0x27
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T0FJ));
 8005c3e:	a90a      	add	r1, sp, #40	; 0x28
 8005c40:	4640      	mov	r0, r8
 8005c42:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005c46:	f00a fddf 	bl	8010808 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005c4a:	4641      	mov	r1, r8
 8005c4c:	4630      	mov	r0, r6
 8005c4e:	f008 fc27 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(50, 12);
 8005c52:	220c      	movs	r2, #12
 8005c54:	4658      	mov	r0, fp
 8005c56:	2132      	movs	r1, #50	; 0x32
 8005c58:	f7fc fb88 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
 8005c5c:	4659      	mov	r1, fp
 8005c5e:	4638      	mov	r0, r7
        color = newColor;
 8005c60:	f8c4 51dc 	str.w	r5, [r4, #476]	; 0x1dc
        linespace = space;
 8005c64:	f8a4 a1e0 	strh.w	sl, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8005c68:	f00a fb34 	bl	80102d4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005c6c:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8005c70:	f10b 033c 	add.w	r3, fp, #60	; 0x3c
 8005c74:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005c78:	2326      	movs	r3, #38	; 0x26
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3BUV));
 8005c7a:	a90a      	add	r1, sp, #40	; 0x28
 8005c7c:	4658      	mov	r0, fp
 8005c7e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005c82:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8005c86:	f00a fdbf 	bl	8010808 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005c8a:	4659      	mov	r1, fp
 8005c8c:	4630      	mov	r0, r6
 8005c8e:	f008 fc07 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8005c92:	ee18 0a90 	vmov	r0, s17
 8005c96:	22f0      	movs	r2, #240	; 0xf0
 8005c98:	2121      	movs	r1, #33	; 0x21
 8005c9a:	f7fc fb67 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
 8005c9e:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005ca2:	aa0a      	add	r2, sp, #40	; 0x28
 8005ca4:	f04f 0802 	mov.w	r8, #2
 8005ca8:	a909      	add	r1, sp, #36	; 0x24
 8005caa:	ee18 0a90 	vmov	r0, s17
 8005cae:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005cb2:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8005cb6:	f504 5786 	add.w	r7, r4, #4288	; 0x10c0
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005cba:	f00a ff8a 	bl	8010bd2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8005cbe:	2325      	movs	r3, #37	; 0x25
 8005cc0:	f8a4 322c 	strh.w	r3, [r4, #556]	; 0x22c
    buttonWithLabel3.setAction(buttonCallback);
 8005cc4:	371c      	adds	r7, #28
        updateTextPosition();
 8005cc6:	ee18 0a90 	vmov	r0, s17
 8005cca:	f7fc fba3 	bl	8002414 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005cce:	ee18 1a90 	vmov	r1, s17
 8005cd2:	4630      	mov	r0, r6
        colorPressed = col;
 8005cd4:	e9c4 558c 	strd	r5, r5, [r4, #560]	; 0x230
 8005cd8:	f8c4 721c 	str.w	r7, [r4, #540]	; 0x21c
 8005cdc:	f008 fbe0 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8005ce0:	ee19 0a10 	vmov	r0, s18
 8005ce4:	22aa      	movs	r2, #170	; 0xaa
 8005ce6:	2121      	movs	r1, #33	; 0x21
 8005ce8:	f7fc fb40 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005cec:	aa0a      	add	r2, sp, #40	; 0x28
 8005cee:	a909      	add	r1, sp, #36	; 0x24
 8005cf0:	ee19 0a10 	vmov	r0, s18
 8005cf4:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005cf8:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8005cfc:	f00a ff69 	bl	8010bd2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005d00:	2324      	movs	r3, #36	; 0x24
 8005d02:	f8a4 3274 	strh.w	r3, [r4, #628]	; 0x274
        updateTextPosition();
 8005d06:	ee19 0a10 	vmov	r0, s18
 8005d0a:	f7fc fb83 	bl	8002414 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005d0e:	ee19 1a10 	vmov	r1, s18
 8005d12:	4630      	mov	r0, r6
        colorPressed = col;
 8005d14:	e9c4 559e 	strd	r5, r5, [r4, #632]	; 0x278
 8005d18:	f8c4 7264 	str.w	r7, [r4, #612]	; 0x264
 8005d1c:	f008 fbc0 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8005d20:	ee19 0a90 	vmov	r0, s19
 8005d24:	2264      	movs	r2, #100	; 0x64
 8005d26:	2121      	movs	r1, #33	; 0x21
 8005d28:	f7fc fb20 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005d2c:	aa0a      	add	r2, sp, #40	; 0x28
 8005d2e:	a909      	add	r1, sp, #36	; 0x24
 8005d30:	ee19 0a90 	vmov	r0, s19
 8005d34:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005d38:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8005d3c:	f00a ff49 	bl	8010bd2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005d40:	2323      	movs	r3, #35	; 0x23
        updateTextPosition();
 8005d42:	ee19 0a90 	vmov	r0, s19
 8005d46:	f8a4 32bc 	strh.w	r3, [r4, #700]	; 0x2bc
 8005d4a:	f7fc fb63 	bl	8002414 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005d4e:	4630      	mov	r0, r6
        colorPressed = col;
 8005d50:	e9c4 55b0 	strd	r5, r5, [r4, #704]	; 0x2c0
 8005d54:	ee19 1a90 	vmov	r1, s19
 8005d58:	f8c4 72ac 	str.w	r7, [r4, #684]	; 0x2ac
 8005d5c:	f008 fba0 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8005d60:	4620      	mov	r0, r4
 8005d62:	b00d      	add	sp, #52	; 0x34
 8005d64:	ecbd 8b04 	vpop	{d8-d9}
 8005d68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005d6c:	0802a38c 	.word	0x0802a38c
 8005d70:	0802b0d8 	.word	0x0802b0d8
 8005d74:	0802b2a0 	.word	0x0802b2a0
 8005d78:	0802ae0c 	.word	0x0802ae0c
 8005d7c:	0802a374 	.word	0x0802a374
 8005d80:	080059e5 	.word	0x080059e5
 8005d84:	08028c00 	.word	0x08028c00

08005d88 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005d88:	4770      	bx	lr

08005d8a <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8005d8a:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005d8c:	68c2      	ldr	r2, [r0, #12]
 8005d8e:	6844      	ldr	r4, [r0, #4]
 8005d90:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8005d92:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8005d94:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8005d98:	07d2      	lsls	r2, r2, #31
 8005d9a:	bf48      	it	mi
 8005d9c:	5962      	ldrmi	r2, [r4, r5]
 8005d9e:	689b      	ldr	r3, [r3, #8]
    }
 8005da0:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005da2:	bf48      	it	mi
 8005da4:	58d3      	ldrmi	r3, [r2, r3]
 8005da6:	4718      	bx	r3

08005da8 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8005da8:	6843      	ldr	r3, [r0, #4]
 8005daa:	b12b      	cbz	r3, 8005db8 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8005dac:	6883      	ldr	r3, [r0, #8]
 8005dae:	b92b      	cbnz	r3, 8005dbc <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8005db0:	68c0      	ldr	r0, [r0, #12]
 8005db2:	f000 0001 	and.w	r0, r0, #1
 8005db6:	4770      	bx	lr
 8005db8:	4618      	mov	r0, r3
 8005dba:	4770      	bx	lr
 8005dbc:	2001      	movs	r0, #1
    }
 8005dbe:	4770      	bx	lr

08005dc0 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005dc0:	b510      	push	{r4, lr}
 8005dc2:	2110      	movs	r1, #16
 8005dc4:	4604      	mov	r4, r0
 8005dc6:	f020 fb62 	bl	802648e <_ZdlPvj>
 8005dca:	4620      	mov	r0, r4
 8005dcc:	bd10      	pop	{r4, pc}

08005dce <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Measurement_Single_Display_1PViewBase::setupScreen()
{
    gauge_with_Values1.initialize();
 8005dce:	f500 700f 	add.w	r0, r0, #572	; 0x23c
 8005dd2:	f000 bfdd 	b.w	8006d90 <_ZN17Gauge_with_Values10initializeEv>

08005dd6 <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
}

void Measurement_Single_Display_1PViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8005dd6:	f500 70fa 	add.w	r0, r0, #500	; 0x1f4
 8005dda:	4288      	cmp	r0, r1
{
 8005ddc:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8005dde:	d105      	bne.n	8005dec <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_Single_Display_1PViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8005de0:	f00d fdf6 	bl	80139d0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}
 8005de4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8005de8:	f7fc bff8 	b.w	8002ddc <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 8005dec:	bd08      	pop	{r3, pc}
	...

08005df0 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 8005df0:	b510      	push	{r4, lr}
 8005df2:	4b07      	ldr	r3, [pc, #28]	; (8005e10 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev+0x20>)
 8005df4:	6003      	str	r3, [r0, #0]
 8005df6:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005df8:	f00c f8e8 	bl	8011fcc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
 8005dfc:	4b05      	ldr	r3, [pc, #20]	; (8005e14 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev+0x24>)
 8005dfe:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
 8005e02:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8005e06:	f7fe f8ad 	bl	8003f64 <_ZN21Gauge_with_ValuesBaseD1Ev>
}
 8005e0a:	4620      	mov	r0, r4
 8005e0c:	bd10      	pop	{r4, pc}
 8005e0e:	bf00      	nop
 8005e10:	0802a3d8 	.word	0x0802a3d8
 8005e14:	0802a770 	.word	0x0802a770

08005e18 <_ZN37Measurement_Single_Display_1PViewBaseD0Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 8005e18:	b510      	push	{r4, lr}
 8005e1a:	4604      	mov	r4, r0
}
 8005e1c:	f7ff ffe8 	bl	8005df0 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>
 8005e20:	4620      	mov	r0, r4
 8005e22:	f241 31e4 	movw	r1, #5092	; 0x13e4
 8005e26:	f020 fb32 	bl	802648e <_ZdlPvj>
 8005e2a:	4620      	mov	r0, r4
 8005e2c:	bd10      	pop	{r4, pc}
	...

08005e30 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>:
Measurement_Single_Display_1PViewBase::Measurement_Single_Display_1PViewBase() :
 8005e30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005e34:	ed2d 8b04 	vpush	{d8-d9}
 8005e38:	4604      	mov	r4, r0
 8005e3a:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Single_Display_1PViewBase::buttonCallbackHandler)
 8005e3c:	46a2      	mov	sl, r4
 8005e3e:	2500      	movs	r5, #0
 8005e40:	f00f fa46 	bl	80152d0 <_ZN8touchgfx6ScreenC1Ev>
 8005e44:	4baf      	ldr	r3, [pc, #700]	; (8006104 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d4>)
 8005e46:	63e5      	str	r5, [r4, #60]	; 0x3c
 8005e48:	f84a 3b40 	str.w	r3, [sl], #64
        : Widget(), alpha(255), color(0)
 8005e4c:	2226      	movs	r2, #38	; 0x26
 8005e4e:	4629      	mov	r1, r5
 8005e50:	4650      	mov	r0, sl
 8005e52:	f021 fb12 	bl	802747a <memset>
 8005e56:	4650      	mov	r0, sl
 8005e58:	f7fc faa8 	bl	80023ac <_ZN8touchgfx6WidgetC1Ev>
 8005e5c:	f104 096c 	add.w	r9, r4, #108	; 0x6c
 8005e60:	26ff      	movs	r6, #255	; 0xff
 8005e62:	4ba9      	ldr	r3, [pc, #676]	; (8006108 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d8>)
 8005e64:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8005e66:	2226      	movs	r2, #38	; 0x26
 8005e68:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8005e6c:	4629      	mov	r1, r5
 8005e6e:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8005e72:	4648      	mov	r0, r9
 8005e74:	66a5      	str	r5, [r4, #104]	; 0x68
 8005e76:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005e7a:	f021 fafe 	bl	802747a <memset>
 8005e7e:	4648      	mov	r0, r9
 8005e80:	f7fc fa94 	bl	80023ac <_ZN8touchgfx6WidgetC1Ev>
 8005e84:	4ba1      	ldr	r3, [pc, #644]	; (800610c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2dc>)
 8005e86:	66e3      	str	r3, [r4, #108]	; 0x6c
 8005e88:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8005e8c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8005e90:	a90a      	add	r1, sp, #40	; 0x28
 8005e92:	4648      	mov	r0, r9
        : Widget(), bitmap(bmp), alpha(255)
 8005e94:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8005e98:	f00b f891 	bl	8010fbe <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8005e9c:	f104 0398 	add.w	r3, r4, #152	; 0x98
 8005ea0:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8005ea4:	4618      	mov	r0, r3
 8005ea6:	ee08 3a10 	vmov	s16, r3
 8005eaa:	f7fc fa91 	bl	80023d0 <_ZN8touchgfx8TextAreaC1Ev>
 8005eae:	4638      	mov	r0, r7
 8005eb0:	f009 ff4e 	bl	800fd50 <_ZN8touchgfx4LineC1Ev>
 8005eb4:	f504 73a8 	add.w	r3, r4, #336	; 0x150
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8005eb8:	4618      	mov	r0, r3
 8005eba:	9303      	str	r3, [sp, #12]
 8005ebc:	f7fb fa00 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8005ec0:	4b93      	ldr	r3, [pc, #588]	; (8006110 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e0>)
 8005ec2:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
 8005ec6:	f504 78b2 	add.w	r8, r4, #356	; 0x164
 8005eca:	3324      	adds	r3, #36	; 0x24
 8005ecc:	f8c4 3158 	str.w	r3, [r4, #344]	; 0x158
 8005ed0:	f8c4 515c 	str.w	r5, [r4, #348]	; 0x15c
 8005ed4:	4640      	mov	r0, r8
 8005ed6:	f504 7bd6 	add.w	fp, r4, #428	; 0x1ac
 8005eda:	f7fc fa79 	bl	80023d0 <_ZN8touchgfx8TextAreaC1Ev>
 8005ede:	4658      	mov	r0, fp
 8005ee0:	f7fc fa76 	bl	80023d0 <_ZN8touchgfx8TextAreaC1Ev>
 8005ee4:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 8005ee8:	4618      	mov	r0, r3
 8005eea:	ee08 3a90 	vmov	s17, r3
 8005eee:	f00b f9a7 	bl	8011240 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005ef2:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 8005ef6:	4618      	mov	r0, r3
 8005ef8:	ee09 3a10 	vmov	s18, r3
 8005efc:	f000 ff3e 	bl	8006d7c <_ZN17Gauge_with_ValuesC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8005f00:	4a84      	ldr	r2, [pc, #528]	; (8006114 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e4>)
 8005f02:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8005f06:	e9c3 24f5 	strd	r2, r4, [r3, #980]	; 0x3d4
 8005f0a:	4a83      	ldr	r2, [pc, #524]	; (8006118 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8005f0c:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8005f10:	e9c3 25f7 	strd	r2, r5, [r3, #988]	; 0x3dc
 8005f14:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 8005f18:	f00c f84e 	bl	8011fb8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8005f1c:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8005f20:	462a      	mov	r2, r5
 8005f22:	4650      	mov	r0, sl
 8005f24:	9300      	str	r3, [sp, #0]
 8005f26:	4629      	mov	r1, r5
 8005f28:	23f0      	movs	r3, #240	; 0xf0
 8005f2a:	f7fc fa2c 	bl	8002386 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005f2e:	1d26      	adds	r6, r4, #4
        color = newColor;
 8005f30:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8005f34:	66a3      	str	r3, [r4, #104]	; 0x68
 8005f36:	4651      	mov	r1, sl
 8005f38:	4630      	mov	r0, r6
 8005f3a:	f008 fab1 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8005f3e:	462a      	mov	r2, r5
 8005f40:	4648      	mov	r0, r9
 8005f42:	4629      	mov	r1, r5
 8005f44:	f7fc fa12 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
 8005f48:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8005f4a:	4648      	mov	r0, r9
 8005f4c:	a90a      	add	r1, sp, #40	; 0x28
 8005f4e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005f52:	f00b f834 	bl	8010fbe <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8005f56:	4649      	mov	r1, r9
 8005f58:	4630      	mov	r0, r6
 8005f5a:	f008 faa1 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8005f5e:	f04f 39ff 	mov.w	r9, #4294967295
    textArea3.setXY(31, 60);
 8005f62:	223c      	movs	r2, #60	; 0x3c
 8005f64:	ee18 0a10 	vmov	r0, s16
 8005f68:	211f      	movs	r1, #31
        boundingArea = calculateBoundingArea();
 8005f6a:	f10d 0a10 	add.w	sl, sp, #16
 8005f6e:	f7fc f9fd 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
 8005f72:	ee18 1a10 	vmov	r1, s16
 8005f76:	4650      	mov	r0, sl
        color = newColor;
 8005f78:	f8c4 90c8 	str.w	r9, [r4, #200]	; 0xc8
        linespace = space;
 8005f7c:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8005f80:	f00a f9a8 	bl	80102d4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005f84:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8005f88:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8005f8c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8005f90:	4b62      	ldr	r3, [pc, #392]	; (800611c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2ec>)
 8005f92:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_M3QF));
 8005f94:	ee18 0a10 	vmov	r0, s16
 8005f98:	230d      	movs	r3, #13
 8005f9a:	a90a      	add	r1, sp, #40	; 0x28
 8005f9c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005fa0:	f00a fc32 	bl	8010808 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005fa4:	ee18 1a10 	vmov	r1, s16
 8005fa8:	4630      	mov	r0, r6
 8005faa:	f008 fa79 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8005fae:	230a      	movs	r3, #10
 8005fb0:	9300      	str	r3, [sp, #0]
 8005fb2:	2232      	movs	r2, #50	; 0x32
 8005fb4:	23f0      	movs	r3, #240	; 0xf0
 8005fb6:	4629      	mov	r1, r5
 8005fb8:	4638      	mov	r0, r7
 8005fba:	f7fc f9e4 	bl	8002386 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005fbe:	9b03      	ldr	r3, [sp, #12]
 8005fc0:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005fc4:	22a0      	movs	r2, #160	; 0xa0
 8005fc6:	4611      	mov	r1, r2
 8005fc8:	4638      	mov	r0, r7
 8005fca:	f8c4 915c 	str.w	r9, [r4, #348]	; 0x15c
        color565 = LCD16bpp::getNativeColor(painterColor);
 8005fce:	f8a4 9160 	strh.w	r9, [r4, #352]	; 0x160
 8005fd2:	f009 ffd3 	bl	800ff7c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005fd6:	22a0      	movs	r2, #160	; 0xa0
 8005fd8:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8005fdc:	4638      	mov	r0, r7
 8005fde:	f009 ffd8 	bl	800ff92 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8005fe2:	f8d4 311c 	ldr.w	r3, [r4, #284]	; 0x11c
 8005fe6:	2b20      	cmp	r3, #32
 8005fe8:	d005      	beq.n	8005ff6 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x1c6>
        lineWidthQ5 = widthQ5;
 8005fea:	2320      	movs	r3, #32
 8005fec:	f8c4 311c 	str.w	r3, [r4, #284]	; 0x11c
        updateCachedShape();
 8005ff0:	4638      	mov	r0, r7
 8005ff2:	f009 fecd 	bl	800fd90 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8005ff6:	4638      	mov	r0, r7
 8005ff8:	2101      	movs	r1, #1
 8005ffa:	f009 ffd5 	bl	800ffa8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8005ffe:	4639      	mov	r1, r7
 8006000:	4630      	mov	r0, r6
 8006002:	f008 fa4d 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006006:	ad04      	add	r5, sp, #16
        color = newColor;
 8006008:	f04f 37ff 	mov.w	r7, #4294967295
        linespace = space;
 800600c:	f04f 0900 	mov.w	r9, #0
    textArea2.setXY(69, 36);
 8006010:	2224      	movs	r2, #36	; 0x24
 8006012:	4640      	mov	r0, r8
 8006014:	2145      	movs	r1, #69	; 0x45
 8006016:	f7fc f9a9 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800601a:	4641      	mov	r1, r8
 800601c:	4628      	mov	r0, r5
        color = newColor;
 800601e:	f8c4 7194 	str.w	r7, [r4, #404]	; 0x194
        linespace = space;
 8006022:	f8a4 9198 	strh.w	r9, [r4, #408]	; 0x198
        boundingArea = calculateBoundingArea();
 8006026:	f00a f955 	bl	80102d4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800602a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800602e:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8006032:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006036:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 800611c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2ec>
 800603a:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 800603e:	231a      	movs	r3, #26
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9O3K));
 8006040:	a90a      	add	r1, sp, #40	; 0x28
 8006042:	4640      	mov	r0, r8
 8006044:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006048:	f00a fbde 	bl	8010808 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800604c:	4641      	mov	r1, r8
 800604e:	4630      	mov	r0, r6
 8006050:	f008 fa26 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(50, 12);
 8006054:	220c      	movs	r2, #12
 8006056:	4658      	mov	r0, fp
 8006058:	2132      	movs	r1, #50	; 0x32
 800605a:	f7fc f987 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
 800605e:	4659      	mov	r1, fp
 8006060:	4628      	mov	r0, r5
        color = newColor;
 8006062:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 8006066:	f8a4 91e0 	strh.w	r9, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 800606a:	f00a f933 	bl	80102d4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800606e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006072:	f10b 033c 	add.w	r3, fp, #60	; 0x3c
 8006076:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800607a:	2319      	movs	r3, #25
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T27V));
 800607c:	a90a      	add	r1, sp, #40	; 0x28
 800607e:	4658      	mov	r0, fp
 8006080:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006084:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8006088:	f00a fbbe 	bl	8010808 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800608c:	4659      	mov	r1, fp
 800608e:	4630      	mov	r0, r6
 8006090:	f008 fa06 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 256);
 8006094:	ee18 0a90 	vmov	r0, s17
 8006098:	f44f 7280 	mov.w	r2, #256	; 0x100
 800609c:	2121      	movs	r1, #33	; 0x21
 800609e:	f7fc f965 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
 80060a2:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80060a4:	aa0a      	add	r2, sp, #40	; 0x28
 80060a6:	a909      	add	r1, sp, #36	; 0x24
 80060a8:	ee18 0a90 	vmov	r0, s17
 80060ac:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80060b0:	2302      	movs	r3, #2
 80060b2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80060b6:	f00a fd8c 	bl	8010bd2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80060ba:	2318      	movs	r3, #24
        updateTextPosition();
 80060bc:	ee18 0a90 	vmov	r0, s17
 80060c0:	f8a4 322c 	strh.w	r3, [r4, #556]	; 0x22c
 80060c4:	f7fc f9a6 	bl	8002414 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 80060c8:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 80060cc:	3314      	adds	r3, #20
 80060ce:	f8c4 321c 	str.w	r3, [r4, #540]	; 0x21c
 80060d2:	ee18 1a90 	vmov	r1, s17
 80060d6:	4630      	mov	r0, r6
        colorPressed = col;
 80060d8:	e9c4 778c 	strd	r7, r7, [r4, #560]	; 0x230
 80060dc:	f008 f9e0 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge_with_Values1.setXY(0, 78);
 80060e0:	ee19 0a10 	vmov	r0, s18
 80060e4:	224e      	movs	r2, #78	; 0x4e
 80060e6:	4649      	mov	r1, r9
 80060e8:	f7fc f940 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
 80060ec:	4630      	mov	r0, r6
 80060ee:	ee19 1a10 	vmov	r1, s18
 80060f2:	f008 f9d5 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80060f6:	4620      	mov	r0, r4
 80060f8:	b00d      	add	sp, #52	; 0x34
 80060fa:	ecbd 8b04 	vpop	{d8-d9}
 80060fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006102:	bf00      	nop
 8006104:	0802a3d8 	.word	0x0802a3d8
 8006108:	0802b0d8 	.word	0x0802b0d8
 800610c:	0802b2a0 	.word	0x0802b2a0
 8006110:	0802ae0c 	.word	0x0802ae0c
 8006114:	0802a3c0 	.word	0x0802a3c0
 8006118:	08005dd7 	.word	0x08005dd7
 800611c:	08028c00 	.word	0x08028c00

08006120 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006120:	4770      	bx	lr

08006122 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006122:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006124:	68c2      	ldr	r2, [r0, #12]
 8006126:	6844      	ldr	r4, [r0, #4]
 8006128:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800612a:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800612c:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006130:	07d2      	lsls	r2, r2, #31
 8006132:	bf48      	it	mi
 8006134:	5962      	ldrmi	r2, [r4, r5]
 8006136:	689b      	ldr	r3, [r3, #8]
    }
 8006138:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800613a:	bf48      	it	mi
 800613c:	58d3      	ldrmi	r3, [r2, r3]
 800613e:	4718      	bx	r3

08006140 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006140:	6843      	ldr	r3, [r0, #4]
 8006142:	b12b      	cbz	r3, 8006150 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006144:	6883      	ldr	r3, [r0, #8]
 8006146:	b92b      	cbnz	r3, 8006154 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006148:	68c0      	ldr	r0, [r0, #12]
 800614a:	f000 0001 	and.w	r0, r0, #1
 800614e:	4770      	bx	lr
 8006150:	4618      	mov	r0, r3
 8006152:	4770      	bx	lr
 8006154:	2001      	movs	r0, #1
    }
 8006156:	4770      	bx	lr

08006158 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006158:	b510      	push	{r4, lr}
 800615a:	2110      	movs	r1, #16
 800615c:	4604      	mov	r4, r0
 800615e:	f020 f996 	bl	802648e <_ZdlPvj>
 8006162:	4620      	mov	r0, r4
 8006164:	bd10      	pop	{r4, pc}

08006166 <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Measurement_Single_Display_3PViewBase::setupScreen()
{
    gauge_with_Values1.initialize();
 8006166:	f500 700f 	add.w	r0, r0, #572	; 0x23c
 800616a:	f000 be11 	b.w	8006d90 <_ZN17Gauge_with_Values10initializeEv>

0800616e <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
}

void Measurement_Single_Display_3PViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 800616e:	f500 70fa 	add.w	r0, r0, #500	; 0x1f4
 8006172:	4288      	cmp	r0, r1
{
 8006174:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8006176:	d105      	bne.n	8006184 <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_Single_Display_3PViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006178:	f00d fc2a 	bl	80139d0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}
 800617c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8006180:	f7fc be2c 	b.w	8002ddc <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 8006184:	bd08      	pop	{r3, pc}
	...

08006188 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 8006188:	b510      	push	{r4, lr}
 800618a:	4b07      	ldr	r3, [pc, #28]	; (80061a8 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev+0x20>)
 800618c:	6003      	str	r3, [r0, #0]
 800618e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006190:	f00b ff1c 	bl	8011fcc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
 8006194:	4b05      	ldr	r3, [pc, #20]	; (80061ac <_ZN37Measurement_Single_Display_3PViewBaseD1Ev+0x24>)
 8006196:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
 800619a:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 800619e:	f7fd fee1 	bl	8003f64 <_ZN21Gauge_with_ValuesBaseD1Ev>
}
 80061a2:	4620      	mov	r0, r4
 80061a4:	bd10      	pop	{r4, pc}
 80061a6:	bf00      	nop
 80061a8:	0802a424 	.word	0x0802a424
 80061ac:	0802a770 	.word	0x0802a770

080061b0 <_ZN37Measurement_Single_Display_3PViewBaseD0Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 80061b0:	b510      	push	{r4, lr}
 80061b2:	4604      	mov	r4, r0
}
 80061b4:	f7ff ffe8 	bl	8006188 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>
 80061b8:	4620      	mov	r0, r4
 80061ba:	f241 31e4 	movw	r1, #5092	; 0x13e4
 80061be:	f020 f966 	bl	802648e <_ZdlPvj>
 80061c2:	4620      	mov	r0, r4
 80061c4:	bd10      	pop	{r4, pc}
	...

080061c8 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>:
Measurement_Single_Display_3PViewBase::Measurement_Single_Display_3PViewBase() :
 80061c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80061cc:	ed2d 8b04 	vpush	{d8-d9}
 80061d0:	4604      	mov	r4, r0
 80061d2:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Single_Display_3PViewBase::buttonCallbackHandler)
 80061d4:	46a3      	mov	fp, r4
 80061d6:	2500      	movs	r5, #0
 80061d8:	f00f f87a 	bl	80152d0 <_ZN8touchgfx6ScreenC1Ev>
 80061dc:	4bae      	ldr	r3, [pc, #696]	; (8006498 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2d0>)
 80061de:	63e5      	str	r5, [r4, #60]	; 0x3c
 80061e0:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 80061e4:	2226      	movs	r2, #38	; 0x26
 80061e6:	4629      	mov	r1, r5
 80061e8:	4658      	mov	r0, fp
 80061ea:	f021 f946 	bl	802747a <memset>
 80061ee:	4658      	mov	r0, fp
 80061f0:	f7fc f8dc 	bl	80023ac <_ZN8touchgfx6WidgetC1Ev>
 80061f4:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 80061f8:	26ff      	movs	r6, #255	; 0xff
 80061fa:	4ba8      	ldr	r3, [pc, #672]	; (800649c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2d4>)
 80061fc:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80061fe:	2226      	movs	r2, #38	; 0x26
 8006200:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006204:	4629      	mov	r1, r5
 8006206:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800620a:	66a5      	str	r5, [r4, #104]	; 0x68
 800620c:	4650      	mov	r0, sl
 800620e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006212:	f021 f932 	bl	802747a <memset>
 8006216:	4650      	mov	r0, sl
 8006218:	f7fc f8c8 	bl	80023ac <_ZN8touchgfx6WidgetC1Ev>
 800621c:	4ba0      	ldr	r3, [pc, #640]	; (80064a0 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2d8>)
 800621e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006220:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006224:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006228:	a90a      	add	r1, sp, #40	; 0x28
 800622a:	f104 0798 	add.w	r7, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 800622e:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006232:	4650      	mov	r0, sl
 8006234:	f00a fec3 	bl	8010fbe <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006238:	4638      	mov	r0, r7
 800623a:	f009 fd89 	bl	800fd50 <_ZN8touchgfx4LineC1Ev>
 800623e:	f504 7384 	add.w	r3, r4, #264	; 0x108
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006242:	4618      	mov	r0, r3
 8006244:	9303      	str	r3, [sp, #12]
 8006246:	f7fb f83b 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800624a:	4b96      	ldr	r3, [pc, #600]	; (80064a4 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2dc>)
 800624c:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 8006250:	f504 798e 	add.w	r9, r4, #284	; 0x11c
 8006254:	3324      	adds	r3, #36	; 0x24
 8006256:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 800625a:	f8c4 5114 	str.w	r5, [r4, #276]	; 0x114
 800625e:	4648      	mov	r0, r9
 8006260:	f504 78b2 	add.w	r8, r4, #356	; 0x164
 8006264:	f7fc f8b4 	bl	80023d0 <_ZN8touchgfx8TextAreaC1Ev>
 8006268:	4640      	mov	r0, r8
 800626a:	f7fc f8b1 	bl	80023d0 <_ZN8touchgfx8TextAreaC1Ev>
 800626e:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 8006272:	4618      	mov	r0, r3
 8006274:	ee08 3a10 	vmov	s16, r3
 8006278:	f7fc f8aa 	bl	80023d0 <_ZN8touchgfx8TextAreaC1Ev>
 800627c:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 8006280:	4618      	mov	r0, r3
 8006282:	ee08 3a90 	vmov	s17, r3
 8006286:	f00a ffdb 	bl	8011240 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800628a:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 800628e:	4618      	mov	r0, r3
 8006290:	ee09 3a10 	vmov	s18, r3
 8006294:	f000 fd72 	bl	8006d7c <_ZN17Gauge_with_ValuesC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006298:	4a83      	ldr	r2, [pc, #524]	; (80064a8 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2e0>)
 800629a:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800629e:	e9c3 24f5 	strd	r2, r4, [r3, #980]	; 0x3d4
 80062a2:	4a82      	ldr	r2, [pc, #520]	; (80064ac <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2e4>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80062a4:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80062a8:	e9c3 25f7 	strd	r2, r5, [r3, #988]	; 0x3dc
 80062ac:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 80062b0:	f00b fe82 	bl	8011fb8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80062b4:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80062b8:	462a      	mov	r2, r5
 80062ba:	9300      	str	r3, [sp, #0]
 80062bc:	4629      	mov	r1, r5
 80062be:	23f0      	movs	r3, #240	; 0xf0
 80062c0:	4658      	mov	r0, fp
 80062c2:	f7fc f860 	bl	8002386 <_ZN8touchgfx8Drawable11setPositionEssss>
 80062c6:	1d26      	adds	r6, r4, #4
        color = newColor;
 80062c8:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80062cc:	66a3      	str	r3, [r4, #104]	; 0x68
 80062ce:	4659      	mov	r1, fp
 80062d0:	4630      	mov	r0, r6
 80062d2:	f008 f8e5 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80062d6:	462a      	mov	r2, r5
 80062d8:	4629      	mov	r1, r5
 80062da:	4650      	mov	r0, sl
 80062dc:	f7fc f846 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
 80062e0:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80062e2:	a90a      	add	r1, sp, #40	; 0x28
 80062e4:	4650      	mov	r0, sl
 80062e6:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80062ea:	f00a fe68 	bl	8010fbe <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80062ee:	4651      	mov	r1, sl
 80062f0:	4630      	mov	r0, r6
 80062f2:	f008 f8d5 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80062f6:	230a      	movs	r3, #10
 80062f8:	9300      	str	r3, [sp, #0]
 80062fa:	2232      	movs	r2, #50	; 0x32
 80062fc:	23f0      	movs	r3, #240	; 0xf0
 80062fe:	4629      	mov	r1, r5
 8006300:	4638      	mov	r0, r7
 8006302:	f7fc f840 	bl	8002386 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006306:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800630a:	22a0      	movs	r2, #160	; 0xa0
 800630c:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006310:	f8a4 3118 	strh.w	r3, [r4, #280]	; 0x118
 8006314:	9b03      	ldr	r3, [sp, #12]
 8006316:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 800631a:	4611      	mov	r1, r2
 800631c:	4638      	mov	r0, r7
 800631e:	f009 fe2d 	bl	800ff7c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006322:	22a0      	movs	r2, #160	; 0xa0
 8006324:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006328:	4638      	mov	r0, r7
 800632a:	f009 fe32 	bl	800ff92 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800632e:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
 8006332:	2b20      	cmp	r3, #32
 8006334:	d005      	beq.n	8006342 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x17a>
        lineWidthQ5 = widthQ5;
 8006336:	2320      	movs	r3, #32
 8006338:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
        updateCachedShape();
 800633c:	4638      	mov	r0, r7
 800633e:	f009 fd27 	bl	800fd90 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006342:	4638      	mov	r0, r7
 8006344:	2101      	movs	r1, #1
 8006346:	f009 fe2f 	bl	800ffa8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800634a:	4639      	mov	r1, r7
 800634c:	4630      	mov	r0, r6
 800634e:	ad04      	add	r5, sp, #16
 8006350:	f008 f8a6 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8006354:	f04f 3aff 	mov.w	sl, #4294967295
        linespace = space;
 8006358:	2700      	movs	r7, #0
    textArea2.setXY(69, 36);
 800635a:	2224      	movs	r2, #36	; 0x24
 800635c:	4648      	mov	r0, r9
 800635e:	2145      	movs	r1, #69	; 0x45
 8006360:	f7fc f804 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006364:	4649      	mov	r1, r9
 8006366:	4628      	mov	r0, r5
        color = newColor;
 8006368:	f8c4 a14c 	str.w	sl, [r4, #332]	; 0x14c
        linespace = space;
 800636c:	f8a4 7150 	strh.w	r7, [r4, #336]	; 0x150
        boundingArea = calculateBoundingArea();
 8006370:	f009 ffb0 	bl	80102d4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006374:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006378:	f109 033c 	add.w	r3, r9, #60	; 0x3c
 800637c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8006380:	f8df b12c 	ldr.w	fp, [pc, #300]	; 80064b0 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2e8>
 8006384:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8006388:	231d      	movs	r3, #29
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DCTT));
 800638a:	a90a      	add	r1, sp, #40	; 0x28
 800638c:	4648      	mov	r0, r9
 800638e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006392:	f00a fa39 	bl	8010808 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006396:	4649      	mov	r1, r9
 8006398:	4630      	mov	r0, r6
 800639a:	f008 f881 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(31, 60);
 800639e:	223c      	movs	r2, #60	; 0x3c
 80063a0:	4640      	mov	r0, r8
 80063a2:	211f      	movs	r1, #31
 80063a4:	f7fb ffe2 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
 80063a8:	4641      	mov	r1, r8
 80063aa:	4628      	mov	r0, r5
        color = newColor;
 80063ac:	f8c4 a194 	str.w	sl, [r4, #404]	; 0x194
        linespace = space;
 80063b0:	f8a4 7198 	strh.w	r7, [r4, #408]	; 0x198
        boundingArea = calculateBoundingArea();
 80063b4:	f009 ff8e 	bl	80102d4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80063b8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80063bc:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 80063c0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80063c4:	f04f 090c 	mov.w	r9, #12
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0LJ7));
 80063c8:	a90a      	add	r1, sp, #40	; 0x28
 80063ca:	4640      	mov	r0, r8
 80063cc:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 80063d0:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 80063d4:	f00a fa18 	bl	8010808 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80063d8:	4641      	mov	r1, r8
 80063da:	4630      	mov	r0, r6
 80063dc:	f008 f860 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(50, 12);
 80063e0:	464a      	mov	r2, r9
 80063e2:	ee18 0a10 	vmov	r0, s16
 80063e6:	2132      	movs	r1, #50	; 0x32
 80063e8:	f7fb ffc0 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
 80063ec:	ee18 1a10 	vmov	r1, s16
 80063f0:	4628      	mov	r0, r5
        color = newColor;
 80063f2:	f8c4 a1dc 	str.w	sl, [r4, #476]	; 0x1dc
        linespace = space;
 80063f6:	f8a4 71e0 	strh.w	r7, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 80063fa:	f009 ff6b 	bl	80102d4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80063fe:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006402:	ee18 3a10 	vmov	r3, s16
 8006406:	333c      	adds	r3, #60	; 0x3c
 8006408:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800640c:	231c      	movs	r3, #28
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SPOY));
 800640e:	ee18 0a10 	vmov	r0, s16
 8006412:	a90a      	add	r1, sp, #40	; 0x28
 8006414:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006418:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 800641c:	f00a f9f4 	bl	8010808 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006420:	ee18 1a10 	vmov	r1, s16
 8006424:	4630      	mov	r0, r6
 8006426:	f008 f83b 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 800642a:	ee18 0a90 	vmov	r0, s17
 800642e:	f240 1201 	movw	r2, #257	; 0x101
 8006432:	2121      	movs	r1, #33	; 0x21
 8006434:	f7fb ff9a 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
 8006438:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800643a:	aa0a      	add	r2, sp, #40	; 0x28
 800643c:	a909      	add	r1, sp, #36	; 0x24
 800643e:	ee18 0a90 	vmov	r0, s17
 8006442:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8006446:	2302      	movs	r3, #2
 8006448:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800644c:	f00a fbc1 	bl	8010bd2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006450:	231b      	movs	r3, #27
        updateTextPosition();
 8006452:	ee18 0a90 	vmov	r0, s17
 8006456:	f8a4 322c 	strh.w	r3, [r4, #556]	; 0x22c
 800645a:	f7fb ffdb 	bl	8002414 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 800645e:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 8006462:	3314      	adds	r3, #20
 8006464:	f8c4 321c 	str.w	r3, [r4, #540]	; 0x21c
 8006468:	ee18 1a90 	vmov	r1, s17
 800646c:	4630      	mov	r0, r6
        colorPressed = col;
 800646e:	e9c4 aa8c 	strd	sl, sl, [r4, #560]	; 0x230
 8006472:	f008 f815 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge_with_Values1.setXY(0, 78);
 8006476:	ee19 0a10 	vmov	r0, s18
 800647a:	224e      	movs	r2, #78	; 0x4e
 800647c:	4639      	mov	r1, r7
 800647e:	f7fb ff75 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
 8006482:	4630      	mov	r0, r6
 8006484:	ee19 1a10 	vmov	r1, s18
 8006488:	f008 f80a 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800648c:	4620      	mov	r0, r4
 800648e:	b00d      	add	sp, #52	; 0x34
 8006490:	ecbd 8b04 	vpop	{d8-d9}
 8006494:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006498:	0802a424 	.word	0x0802a424
 800649c:	0802b0d8 	.word	0x0802b0d8
 80064a0:	0802b2a0 	.word	0x0802b2a0
 80064a4:	0802ae0c 	.word	0x0802ae0c
 80064a8:	0802a40c 	.word	0x0802a40c
 80064ac:	0800616f 	.word	0x0800616f
 80064b0:	08028c00 	.word	0x08028c00

080064b4 <_ZN20Project_InfoViewBase11setupScreenEv>:
}

void Project_InfoViewBase::setupScreen()
{

}
 80064b4:	4770      	bx	lr

080064b6 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80064b6:	4770      	bx	lr

080064b8 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80064b8:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80064ba:	68c2      	ldr	r2, [r0, #12]
 80064bc:	6844      	ldr	r4, [r0, #4]
 80064be:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80064c0:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80064c2:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80064c6:	07d2      	lsls	r2, r2, #31
 80064c8:	bf48      	it	mi
 80064ca:	5962      	ldrmi	r2, [r4, r5]
 80064cc:	689b      	ldr	r3, [r3, #8]
    }
 80064ce:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80064d0:	bf48      	it	mi
 80064d2:	58d3      	ldrmi	r3, [r2, r3]
 80064d4:	4718      	bx	r3

080064d6 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80064d6:	6843      	ldr	r3, [r0, #4]
 80064d8:	b12b      	cbz	r3, 80064e6 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80064da:	6883      	ldr	r3, [r0, #8]
 80064dc:	b92b      	cbnz	r3, 80064ea <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80064de:	68c0      	ldr	r0, [r0, #12]
 80064e0:	f000 0001 	and.w	r0, r0, #1
 80064e4:	4770      	bx	lr
 80064e6:	4618      	mov	r0, r3
 80064e8:	4770      	bx	lr
 80064ea:	2001      	movs	r0, #1
    }
 80064ec:	4770      	bx	lr

080064ee <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80064ee:	b510      	push	{r4, lr}
 80064f0:	2110      	movs	r1, #16
 80064f2:	4604      	mov	r4, r0
 80064f4:	f01f ffcb 	bl	802648e <_ZdlPvj>
 80064f8:	4620      	mov	r0, r4
 80064fa:	bd10      	pop	{r4, pc}

080064fc <_ZN20Project_InfoViewBaseD1Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 80064fc:	b510      	push	{r4, lr}
 80064fe:	4b03      	ldr	r3, [pc, #12]	; (800650c <_ZN20Project_InfoViewBaseD1Ev+0x10>)
 8006500:	6003      	str	r3, [r0, #0]
 8006502:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006504:	f00b fd62 	bl	8011fcc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006508:	4620      	mov	r0, r4
 800650a:	bd10      	pop	{r4, pc}
 800650c:	0802a470 	.word	0x0802a470

08006510 <_ZN20Project_InfoViewBaseD0Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 8006510:	b507      	push	{r0, r1, r2, lr}
 8006512:	4b07      	ldr	r3, [pc, #28]	; (8006530 <_ZN20Project_InfoViewBaseD0Ev+0x20>)
 8006514:	6003      	str	r3, [r0, #0]
 8006516:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006518:	f00b fd58 	bl	8011fcc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800651c:	9801      	ldr	r0, [sp, #4]
 800651e:	f241 015c 	movw	r1, #4188	; 0x105c
 8006522:	f01f ffb4 	bl	802648e <_ZdlPvj>
 8006526:	9801      	ldr	r0, [sp, #4]
 8006528:	b003      	add	sp, #12
 800652a:	f85d fb04 	ldr.w	pc, [sp], #4
 800652e:	bf00      	nop
 8006530:	0802a470 	.word	0x0802a470

08006534 <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Project_InfoViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8006534:	f500 708e 	add.w	r0, r0, #284	; 0x11c
 8006538:	4288      	cmp	r0, r1
{
 800653a:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 800653c:	d105      	bne.n	800654a <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Project_InfoViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800653e:	f00d fa47 	bl	80139d0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
    }
}
 8006542:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMain_MenuScreenWipeTransitionWest();
 8006546:	f7fc bc19 	b.w	8002d7c <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
}
 800654a:	bd08      	pop	{r3, pc}

0800654c <_ZN20Project_InfoViewBaseC1Ev>:
Project_InfoViewBase::Project_InfoViewBase() :
 800654c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006550:	ed2d 8b02 	vpush	{d8}
 8006554:	4604      	mov	r4, r0
 8006556:	b08d      	sub	sp, #52	; 0x34
 8006558:	f00e feba 	bl	80152d0 <_ZN8touchgfx6ScreenC1Ev>
    buttonCallback(this, &Project_InfoViewBase::buttonCallbackHandler)
 800655c:	4622      	mov	r2, r4
 800655e:	2500      	movs	r5, #0
 8006560:	4ba3      	ldr	r3, [pc, #652]	; (80067f0 <_ZN20Project_InfoViewBaseC1Ev+0x2a4>)
 8006562:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006564:	f842 3b40 	str.w	r3, [r2], #64
 8006568:	ee08 2a10 	vmov	s16, r2
        : Widget(), alpha(255), color(0)
 800656c:	4629      	mov	r1, r5
 800656e:	2226      	movs	r2, #38	; 0x26
 8006570:	ee18 0a10 	vmov	r0, s16
 8006574:	f020 ff81 	bl	802747a <memset>
 8006578:	ee18 0a10 	vmov	r0, s16
 800657c:	f7fb ff16 	bl	80023ac <_ZN8touchgfx6WidgetC1Ev>
 8006580:	f104 0b6c 	add.w	fp, r4, #108	; 0x6c
 8006584:	26ff      	movs	r6, #255	; 0xff
 8006586:	4b9b      	ldr	r3, [pc, #620]	; (80067f4 <_ZN20Project_InfoViewBaseC1Ev+0x2a8>)
 8006588:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800658a:	2226      	movs	r2, #38	; 0x26
 800658c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006590:	4629      	mov	r1, r5
 8006592:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006596:	66a5      	str	r5, [r4, #104]	; 0x68
 8006598:	4658      	mov	r0, fp
 800659a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800659e:	f020 ff6c 	bl	802747a <memset>
 80065a2:	4658      	mov	r0, fp
 80065a4:	f7fb ff02 	bl	80023ac <_ZN8touchgfx6WidgetC1Ev>
 80065a8:	4b93      	ldr	r3, [pc, #588]	; (80067f8 <_ZN20Project_InfoViewBaseC1Ev+0x2ac>)
 80065aa:	66e3      	str	r3, [r4, #108]	; 0x6c
 80065ac:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80065b0:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80065b4:	a90a      	add	r1, sp, #40	; 0x28
 80065b6:	f104 0798 	add.w	r7, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 80065ba:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80065be:	4658      	mov	r0, fp
 80065c0:	f00a fcfd 	bl	8010fbe <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80065c4:	4638      	mov	r0, r7
 80065c6:	f009 fbc3 	bl	800fd50 <_ZN8touchgfx4LineC1Ev>
 80065ca:	f504 7384 	add.w	r3, r4, #264	; 0x108
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80065ce:	4618      	mov	r0, r3
 80065d0:	9303      	str	r3, [sp, #12]
 80065d2:	f7fa fe75 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80065d6:	4b89      	ldr	r3, [pc, #548]	; (80067fc <_ZN20Project_InfoViewBaseC1Ev+0x2b0>)
 80065d8:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 80065dc:	3324      	adds	r3, #36	; 0x24
 80065de:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 80065e2:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 80065e6:	4618      	mov	r0, r3
 80065e8:	f8c4 5114 	str.w	r5, [r4, #276]	; 0x114
 80065ec:	f504 7ab2 	add.w	sl, r4, #356	; 0x164
 80065f0:	ee08 3a90 	vmov	s17, r3
 80065f4:	f504 79d6 	add.w	r9, r4, #428	; 0x1ac
 80065f8:	f00a fe22 	bl	8011240 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80065fc:	4650      	mov	r0, sl
 80065fe:	f7fb fee7 	bl	80023d0 <_ZN8touchgfx8TextAreaC1Ev>
 8006602:	f504 78fa 	add.w	r8, r4, #500	; 0x1f4
 8006606:	4648      	mov	r0, r9
 8006608:	f7fb fee2 	bl	80023d0 <_ZN8touchgfx8TextAreaC1Ev>
 800660c:	4640      	mov	r0, r8
 800660e:	f7fb fedf 	bl	80023d0 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006612:	4a7b      	ldr	r2, [pc, #492]	; (8006800 <_ZN20Project_InfoViewBaseC1Ev+0x2b4>)
 8006614:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006618:	e9c3 2413 	strd	r2, r4, [r3, #76]	; 0x4c
 800661c:	4a79      	ldr	r2, [pc, #484]	; (8006804 <_ZN20Project_InfoViewBaseC1Ev+0x2b8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800661e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006622:	e9c3 2515 	strd	r2, r5, [r3, #84]	; 0x54
 8006626:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 800662a:	f00b fcc5 	bl	8011fb8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800662e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006632:	462a      	mov	r2, r5
 8006634:	ee18 0a10 	vmov	r0, s16
 8006638:	9300      	str	r3, [sp, #0]
 800663a:	4629      	mov	r1, r5
 800663c:	23f0      	movs	r3, #240	; 0xf0
 800663e:	f7fb fea2 	bl	8002386 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006642:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006644:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006648:	66a3      	str	r3, [r4, #104]	; 0x68
 800664a:	ee18 1a10 	vmov	r1, s16
 800664e:	4630      	mov	r0, r6
 8006650:	f007 ff26 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006654:	462a      	mov	r2, r5
 8006656:	4629      	mov	r1, r5
 8006658:	4658      	mov	r0, fp
 800665a:	f7fb fe87 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
 800665e:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006660:	a90a      	add	r1, sp, #40	; 0x28
 8006662:	4658      	mov	r0, fp
 8006664:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006668:	f00a fca9 	bl	8010fbe <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800666c:	4659      	mov	r1, fp
 800666e:	4630      	mov	r0, r6
 8006670:	f007 ff16 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006674:	230a      	movs	r3, #10
 8006676:	9300      	str	r3, [sp, #0]
 8006678:	2232      	movs	r2, #50	; 0x32
 800667a:	23f0      	movs	r3, #240	; 0xf0
 800667c:	4629      	mov	r1, r5
 800667e:	4638      	mov	r0, r7
 8006680:	f7fb fe81 	bl	8002386 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006684:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006688:	22a0      	movs	r2, #160	; 0xa0
 800668a:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        color565 = LCD16bpp::getNativeColor(painterColor);
 800668e:	f8a4 3118 	strh.w	r3, [r4, #280]	; 0x118
 8006692:	9b03      	ldr	r3, [sp, #12]
 8006694:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8006698:	4611      	mov	r1, r2
 800669a:	4638      	mov	r0, r7
 800669c:	f009 fc6e 	bl	800ff7c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80066a0:	22a0      	movs	r2, #160	; 0xa0
 80066a2:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80066a6:	4638      	mov	r0, r7
 80066a8:	f009 fc73 	bl	800ff92 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80066ac:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
 80066b0:	2b20      	cmp	r3, #32
 80066b2:	d005      	beq.n	80066c0 <_ZN20Project_InfoViewBaseC1Ev+0x174>
        lineWidthQ5 = widthQ5;
 80066b4:	2320      	movs	r3, #32
 80066b6:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
        updateCachedShape();
 80066ba:	4638      	mov	r0, r7
 80066bc:	f009 fb68 	bl	800fd90 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80066c0:	4638      	mov	r0, r7
 80066c2:	2101      	movs	r1, #1
 80066c4:	f009 fc70 	bl	800ffa8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80066c8:	4639      	mov	r1, r7
 80066ca:	4630      	mov	r0, r6
 80066cc:	f007 fee8 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 80066d0:	ee18 0a90 	vmov	r0, s17
 80066d4:	22f0      	movs	r2, #240	; 0xf0
 80066d6:	2121      	movs	r1, #33	; 0x21
 80066d8:	f7fb fe48 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
 80066dc:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80066de:	aa0a      	add	r2, sp, #40	; 0x28
 80066e0:	a909      	add	r1, sp, #36	; 0x24
 80066e2:	ee18 0a90 	vmov	r0, s17
 80066e6:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80066ea:	2302      	movs	r3, #2
 80066ec:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80066f0:	f00a fa6f 	bl	8010bd2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80066f4:	2328      	movs	r3, #40	; 0x28
        updateTextPosition();
 80066f6:	ee18 0a90 	vmov	r0, s17
 80066fa:	f8a4 3154 	strh.w	r3, [r4, #340]	; 0x154
 80066fe:	f7fb fe89 	bl	8002414 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8006702:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
        color = col;
 8006706:	f04f 37ff 	mov.w	r7, #4294967295
 800670a:	330c      	adds	r3, #12
 800670c:	f8c4 3144 	str.w	r3, [r4, #324]	; 0x144
 8006710:	ee18 1a90 	vmov	r1, s17
 8006714:	4630      	mov	r0, r6
        colorPressed = col;
 8006716:	e9c4 7756 	strd	r7, r7, [r4, #344]	; 0x158
 800671a:	f007 fec1 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800671e:	ad04      	add	r5, sp, #16
        linespace = space;
 8006720:	f04f 0b00 	mov.w	fp, #0
    textArea3.setXY(5, 91);
 8006724:	225b      	movs	r2, #91	; 0x5b
 8006726:	4650      	mov	r0, sl
 8006728:	2105      	movs	r1, #5
 800672a:	f7fb fe1f 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800672e:	4651      	mov	r1, sl
 8006730:	4628      	mov	r0, r5
        color = newColor;
 8006732:	f8c4 7194 	str.w	r7, [r4, #404]	; 0x194
        linespace = space;
 8006736:	f8a4 b198 	strh.w	fp, [r4, #408]	; 0x198
        boundingArea = calculateBoundingArea();
 800673a:	f009 fdcb 	bl	80102d4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800673e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006742:	f10a 0c3c 	add.w	ip, sl, #60	; 0x3c
 8006746:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
        : typedTextId(id)
 800674a:	4b2f      	ldr	r3, [pc, #188]	; (8006808 <_ZN20Project_InfoViewBaseC1Ev+0x2bc>)
 800674c:	930a      	str	r3, [sp, #40]	; 0x28
 800674e:	2229      	movs	r2, #41	; 0x29
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9J9T));
 8006750:	a90a      	add	r1, sp, #40	; 0x28
 8006752:	4650      	mov	r0, sl
 8006754:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8006758:	f00a f856 	bl	8010808 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800675c:	4651      	mov	r1, sl
 800675e:	4630      	mov	r0, r6
 8006760:	f007 fe9e 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 36);
 8006764:	2224      	movs	r2, #36	; 0x24
 8006766:	4648      	mov	r0, r9
 8006768:	2145      	movs	r1, #69	; 0x45
 800676a:	f7fb fdff 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
 800676e:	4649      	mov	r1, r9
 8006770:	4628      	mov	r0, r5
        color = newColor;
 8006772:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 8006776:	f8a4 b1e0 	strh.w	fp, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 800677a:	f009 fdab 	bl	80102d4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800677e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006782:	f109 0c3c 	add.w	ip, r9, #60	; 0x3c
 8006786:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 800678a:	4b1f      	ldr	r3, [pc, #124]	; (8006808 <_ZN20Project_InfoViewBaseC1Ev+0x2bc>)
 800678c:	930a      	str	r3, [sp, #40]	; 0x28
 800678e:	222b      	movs	r2, #43	; 0x2b
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8N0V));
 8006790:	a90a      	add	r1, sp, #40	; 0x28
 8006792:	4648      	mov	r0, r9
 8006794:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8006798:	f00a f836 	bl	8010808 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800679c:	4649      	mov	r1, r9
 800679e:	4630      	mov	r0, r6
 80067a0:	f007 fe7e 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(50, 12);
 80067a4:	220c      	movs	r2, #12
 80067a6:	4640      	mov	r0, r8
 80067a8:	2132      	movs	r1, #50	; 0x32
 80067aa:	f7fb fddf 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
 80067ae:	4641      	mov	r1, r8
 80067b0:	4628      	mov	r0, r5
        color = newColor;
 80067b2:	f8c4 7224 	str.w	r7, [r4, #548]	; 0x224
        linespace = space;
 80067b6:	f8a4 b228 	strh.w	fp, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 80067ba:	f009 fd8b 	bl	80102d4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80067be:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80067c2:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 80067c6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80067ca:	4b0f      	ldr	r3, [pc, #60]	; (8006808 <_ZN20Project_InfoViewBaseC1Ev+0x2bc>)
 80067cc:	930a      	str	r3, [sp, #40]	; 0x28
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SSFQ));
 80067ce:	a90a      	add	r1, sp, #40	; 0x28
 80067d0:	232a      	movs	r3, #42	; 0x2a
 80067d2:	4640      	mov	r0, r8
 80067d4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80067d8:	f00a f816 	bl	8010808 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80067dc:	4630      	mov	r0, r6
 80067de:	4641      	mov	r1, r8
 80067e0:	f007 fe5e 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80067e4:	4620      	mov	r0, r4
 80067e6:	b00d      	add	sp, #52	; 0x34
 80067e8:	ecbd 8b02 	vpop	{d8}
 80067ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80067f0:	0802a470 	.word	0x0802a470
 80067f4:	0802b0d8 	.word	0x0802b0d8
 80067f8:	0802b2a0 	.word	0x0802b2a0
 80067fc:	0802ae0c 	.word	0x0802ae0c
 8006800:	0802a458 	.word	0x0802a458
 8006804:	08006535 	.word	0x08006535
 8006808:	08028c00 	.word	0x08028c00

0800680c <_ZN20Shutting_OffViewBaseD1Ev>:
}

Shutting_OffViewBase::~Shutting_OffViewBase()
{

}
 800680c:	4770      	bx	lr

0800680e <_ZN20Shutting_OffViewBase11setupScreenEv>:

void Shutting_OffViewBase::setupScreen()
{

}
 800680e:	4770      	bx	lr

08006810 <_ZN20Shutting_OffViewBaseD0Ev>:
Shutting_OffViewBase::~Shutting_OffViewBase()
 8006810:	b510      	push	{r4, lr}
}
 8006812:	2198      	movs	r1, #152	; 0x98
Shutting_OffViewBase::~Shutting_OffViewBase()
 8006814:	4604      	mov	r4, r0
}
 8006816:	f01f fe3a 	bl	802648e <_ZdlPvj>
 800681a:	4620      	mov	r0, r4
 800681c:	bd10      	pop	{r4, pc}
	...

08006820 <_ZN20Shutting_OffViewBaseC1Ev>:
Shutting_OffViewBase::Shutting_OffViewBase()
 8006820:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8006824:	4604      	mov	r4, r0
 8006826:	4626      	mov	r6, r4
 8006828:	f00e fd52 	bl	80152d0 <_ZN8touchgfx6ScreenC1Ev>
 800682c:	2500      	movs	r5, #0
 800682e:	4b2e      	ldr	r3, [pc, #184]	; (80068e8 <_ZN20Shutting_OffViewBaseC1Ev+0xc8>)
 8006830:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006832:	f846 3b40 	str.w	r3, [r6], #64
        : Widget(), alpha(255), color(0)
 8006836:	4b2d      	ldr	r3, [pc, #180]	; (80068ec <_ZN20Shutting_OffViewBaseC1Ev+0xcc>)
          cachedAbsX(0),
 8006838:	6625      	str	r5, [r4, #96]	; 0x60
        : x(0), y(0), width(0), height(0)
 800683a:	e9c4 3510 	strd	r3, r5, [r4, #64]	; 0x40
          touchable(false),
 800683e:	f44f 7280 	mov.w	r2, #256	; 0x100
 8006842:	23ff      	movs	r3, #255	; 0xff
 8006844:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 8006848:	f8a4 2064 	strh.w	r2, [r4, #100]	; 0x64
 800684c:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
 8006850:	f8a4 2090 	strh.w	r2, [r4, #144]	; 0x90
 8006854:	f64f 73ff 	movw	r3, #65535	; 0xffff
        : Widget(), bitmap(bmp), alpha(255)
 8006858:	4a25      	ldr	r2, [pc, #148]	; (80068f0 <_ZN20Shutting_OffViewBaseC1Ev+0xd0>)
 800685a:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 800685e:	f884 3094 	strb.w	r3, [r4, #148]	; 0x94
 8006862:	66e2      	str	r2, [r4, #108]	; 0x6c
        Image::setBitmap(bmp);
 8006864:	a901      	add	r1, sp, #4
 8006866:	4638      	mov	r0, r7
 8006868:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
          parent(0),
 800686c:	e9c4 5514 	strd	r5, r5, [r4, #80]	; 0x50
          nextDrawChainElement(0),
 8006870:	e9c4 5516 	strd	r5, r5, [r4, #88]	; 0x58
 8006874:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
 8006878:	e9c4 551e 	strd	r5, r5, [r4, #120]	; 0x78
          nextSibling(0),
 800687c:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
          cachedAbsX(0),
 8006880:	e9c4 5522 	strd	r5, r5, [r4, #136]	; 0x88
        : color(col)
 8006884:	66a5      	str	r5, [r4, #104]	; 0x68
 8006886:	f8ad 3004 	strh.w	r3, [sp, #4]
 800688a:	f00a fb98 	bl	8010fbe <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        setXY(x, y);
 800688e:	462a      	mov	r2, r5
 8006890:	4629      	mov	r1, r5
 8006892:	4630      	mov	r0, r6
 8006894:	f7fb fd6a 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8006898:	4630      	mov	r0, r6
 800689a:	21f0      	movs	r1, #240	; 0xf0
 800689c:	f7fa fc50 	bl	8001140 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 80068a0:	4630      	mov	r0, r6
 80068a2:	f44f 71a0 	mov.w	r1, #320	; 0x140
 80068a6:	f7fa fc4d 	bl	8001144 <_ZN8touchgfx8Drawable9setHeightEs>
 80068aa:	f104 0804 	add.w	r8, r4, #4
        color = newColor;
 80068ae:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80068b2:	66a3      	str	r3, [r4, #104]	; 0x68
 80068b4:	4631      	mov	r1, r6
 80068b6:	4640      	mov	r0, r8
 80068b8:	f007 fdf2 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(-3, 0);
 80068bc:	462a      	mov	r2, r5
 80068be:	4638      	mov	r0, r7
 80068c0:	f06f 0102 	mvn.w	r1, #2
 80068c4:	f7fb fd52 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
 80068c8:	230b      	movs	r3, #11
    image1.setBitmap(touchgfx::Bitmap(BITMAP_SHUTDOWN_ID));
 80068ca:	a901      	add	r1, sp, #4
 80068cc:	4638      	mov	r0, r7
 80068ce:	f8ad 3004 	strh.w	r3, [sp, #4]
 80068d2:	f00a fb74 	bl	8010fbe <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80068d6:	4640      	mov	r0, r8
 80068d8:	4639      	mov	r1, r7
 80068da:	f007 fde1 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80068de:	4620      	mov	r0, r4
 80068e0:	b002      	add	sp, #8
 80068e2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80068e6:	bf00      	nop
 80068e8:	0802a4a4 	.word	0x0802a4a4
 80068ec:	0802b0d8 	.word	0x0802b0d8
 80068f0:	0802b2a0 	.word	0x0802b2a0

080068f4 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80068f4:	4770      	bx	lr
	...

080068f8 <_Z23getFont_verdana_10_4bppv>:
{
 80068f8:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80068fa:	4d17      	ldr	r5, [pc, #92]	; (8006958 <_Z23getFont_verdana_10_4bppv+0x60>)
 80068fc:	682c      	ldr	r4, [r5, #0]
 80068fe:	f3bf 8f5b 	dmb	ish
 8006902:	f014 0401 	ands.w	r4, r4, #1
{
 8006906:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8006908:	d122      	bne.n	8006950 <_Z23getFont_verdana_10_4bppv+0x58>
 800690a:	4628      	mov	r0, r5
 800690c:	f01f fdc1 	bl	8026492 <__cxa_guard_acquire>
 8006910:	b1f0      	cbz	r0, 8006950 <_Z23getFont_verdana_10_4bppv+0x58>
 8006912:	233f      	movs	r3, #63	; 0x3f
 8006914:	9309      	str	r3, [sp, #36]	; 0x24
 8006916:	4b11      	ldr	r3, [pc, #68]	; (800695c <_Z23getFont_verdana_10_4bppv+0x64>)
 8006918:	9308      	str	r3, [sp, #32]
 800691a:	4b11      	ldr	r3, [pc, #68]	; (8006960 <_Z23getFont_verdana_10_4bppv+0x68>)
 800691c:	9307      	str	r3, [sp, #28]
 800691e:	2301      	movs	r3, #1
 8006920:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8006924:	9304      	str	r3, [sp, #16]
 8006926:	2304      	movs	r3, #4
 8006928:	e9cd 4302 	strd	r4, r3, [sp, #8]
 800692c:	230a      	movs	r3, #10
 800692e:	490d      	ldr	r1, [pc, #52]	; (8006964 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8006930:	9300      	str	r3, [sp, #0]
 8006932:	225f      	movs	r2, #95	; 0x5f
 8006934:	230c      	movs	r3, #12
 8006936:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 800693a:	480b      	ldr	r0, [pc, #44]	; (8006968 <_Z23getFont_verdana_10_4bppv+0x70>)
 800693c:	940a      	str	r4, [sp, #40]	; 0x28
 800693e:	9401      	str	r4, [sp, #4]
 8006940:	f7fd fd0c 	bl	800435c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8006944:	4809      	ldr	r0, [pc, #36]	; (800696c <_Z23getFont_verdana_10_4bppv+0x74>)
 8006946:	f020 fbb1 	bl	80270ac <atexit>
 800694a:	4628      	mov	r0, r5
 800694c:	f01f fdad 	bl	80264aa <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8006950:	4805      	ldr	r0, [pc, #20]	; (8006968 <_Z23getFont_verdana_10_4bppv+0x70>)
 8006952:	b00f      	add	sp, #60	; 0x3c
 8006954:	bd30      	pop	{r4, r5, pc}
 8006956:	bf00      	nop
 8006958:	200028dc 	.word	0x200028dc
 800695c:	0802dfb4 	.word	0x0802dfb4
 8006960:	0802e094 	.word	0x0802e094
 8006964:	0802d638 	.word	0x0802d638
 8006968:	200028e0 	.word	0x200028e0
 800696c:	080068f5 	.word	0x080068f5

08006970 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_12_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_12_4bpp();

touchgfx::GeneratedFont& getFont_verdana_12_4bpp()
{
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 30, 15, 12, 0, 0, 4, 1, 0, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8006970:	4770      	bx	lr
	...

08006974 <_Z23getFont_verdana_12_4bppv>:
{
 8006974:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 30, 15, 12, 0, 0, 4, 1, 0, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8006976:	4d17      	ldr	r5, [pc, #92]	; (80069d4 <_Z23getFont_verdana_12_4bppv+0x60>)
 8006978:	682c      	ldr	r4, [r5, #0]
 800697a:	f3bf 8f5b 	dmb	ish
 800697e:	f014 0401 	ands.w	r4, r4, #1
{
 8006982:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 30, 15, 12, 0, 0, 4, 1, 0, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8006984:	d122      	bne.n	80069cc <_Z23getFont_verdana_12_4bppv+0x58>
 8006986:	4628      	mov	r0, r5
 8006988:	f01f fd83 	bl	8026492 <__cxa_guard_acquire>
 800698c:	b1f0      	cbz	r0, 80069cc <_Z23getFont_verdana_12_4bppv+0x58>
 800698e:	233f      	movs	r3, #63	; 0x3f
 8006990:	9309      	str	r3, [sp, #36]	; 0x24
 8006992:	4b11      	ldr	r3, [pc, #68]	; (80069d8 <_Z23getFont_verdana_12_4bppv+0x64>)
 8006994:	9308      	str	r3, [sp, #32]
 8006996:	4b11      	ldr	r3, [pc, #68]	; (80069dc <_Z23getFont_verdana_12_4bppv+0x68>)
 8006998:	9307      	str	r3, [sp, #28]
 800699a:	2301      	movs	r3, #1
 800699c:	e9cd 4305 	strd	r4, r3, [sp, #20]
 80069a0:	9304      	str	r3, [sp, #16]
 80069a2:	2304      	movs	r3, #4
 80069a4:	e9cd 4302 	strd	r4, r3, [sp, #8]
 80069a8:	230c      	movs	r3, #12
 80069aa:	490d      	ldr	r1, [pc, #52]	; (80069e0 <_Z23getFont_verdana_12_4bppv+0x6c>)
 80069ac:	9300      	str	r3, [sp, #0]
 80069ae:	221e      	movs	r2, #30
 80069b0:	230f      	movs	r3, #15
 80069b2:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 80069b6:	480b      	ldr	r0, [pc, #44]	; (80069e4 <_Z23getFont_verdana_12_4bppv+0x70>)
 80069b8:	940a      	str	r4, [sp, #40]	; 0x28
 80069ba:	9401      	str	r4, [sp, #4]
 80069bc:	f7fd fcce 	bl	800435c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80069c0:	4809      	ldr	r0, [pc, #36]	; (80069e8 <_Z23getFont_verdana_12_4bppv+0x74>)
 80069c2:	f020 fb73 	bl	80270ac <atexit>
 80069c6:	4628      	mov	r0, r5
 80069c8:	f01f fd6f 	bl	80264aa <__cxa_guard_release>
    return verdana_12_4bpp;
}
 80069cc:	4805      	ldr	r0, [pc, #20]	; (80069e4 <_Z23getFont_verdana_12_4bppv+0x70>)
 80069ce:	b00f      	add	sp, #60	; 0x3c
 80069d0:	bd30      	pop	{r4, r5, pc}
 80069d2:	bf00      	nop
 80069d4:	2000290c 	.word	0x2000290c
 80069d8:	0802dfe8 	.word	0x0802dfe8
 80069dc:	0802e098 	.word	0x0802e098
 80069e0:	0802db6c 	.word	0x0802db6c
 80069e4:	20002910 	.word	0x20002910
 80069e8:	08006971 	.word	0x08006971

080069ec <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_19_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_19_4bpp();

touchgfx::GeneratedFont& getFont_verdana_19_4bpp()
{
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 47, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 80069ec:	4770      	bx	lr
	...

080069f0 <_Z23getFont_verdana_19_4bppv>:
{
 80069f0:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 47, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 80069f2:	4d17      	ldr	r5, [pc, #92]	; (8006a50 <_Z23getFont_verdana_19_4bppv+0x60>)
 80069f4:	682c      	ldr	r4, [r5, #0]
 80069f6:	f3bf 8f5b 	dmb	ish
 80069fa:	f014 0401 	ands.w	r4, r4, #1
{
 80069fe:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 47, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 8006a00:	d122      	bne.n	8006a48 <_Z23getFont_verdana_19_4bppv+0x58>
 8006a02:	4628      	mov	r0, r5
 8006a04:	f01f fd45 	bl	8026492 <__cxa_guard_acquire>
 8006a08:	b1f0      	cbz	r0, 8006a48 <_Z23getFont_verdana_19_4bppv+0x58>
 8006a0a:	233f      	movs	r3, #63	; 0x3f
 8006a0c:	9309      	str	r3, [sp, #36]	; 0x24
 8006a0e:	4b11      	ldr	r3, [pc, #68]	; (8006a54 <_Z23getFont_verdana_19_4bppv+0x64>)
 8006a10:	9308      	str	r3, [sp, #32]
 8006a12:	4b11      	ldr	r3, [pc, #68]	; (8006a58 <_Z23getFont_verdana_19_4bppv+0x68>)
 8006a14:	9307      	str	r3, [sp, #28]
 8006a16:	2301      	movs	r3, #1
 8006a18:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8006a1c:	9304      	str	r3, [sp, #16]
 8006a1e:	2304      	movs	r3, #4
 8006a20:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8006a24:	2313      	movs	r3, #19
 8006a26:	490d      	ldr	r1, [pc, #52]	; (8006a5c <_Z23getFont_verdana_19_4bppv+0x6c>)
 8006a28:	9300      	str	r3, [sp, #0]
 8006a2a:	222f      	movs	r2, #47	; 0x2f
 8006a2c:	2317      	movs	r3, #23
 8006a2e:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8006a32:	480b      	ldr	r0, [pc, #44]	; (8006a60 <_Z23getFont_verdana_19_4bppv+0x70>)
 8006a34:	940a      	str	r4, [sp, #40]	; 0x28
 8006a36:	9401      	str	r4, [sp, #4]
 8006a38:	f7fd fc90 	bl	800435c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8006a3c:	4809      	ldr	r0, [pc, #36]	; (8006a64 <_Z23getFont_verdana_19_4bppv+0x74>)
 8006a3e:	f020 fb35 	bl	80270ac <atexit>
 8006a42:	4628      	mov	r0, r5
 8006a44:	f01f fd31 	bl	80264aa <__cxa_guard_release>
    return verdana_19_4bpp;
}
 8006a48:	4805      	ldr	r0, [pc, #20]	; (8006a60 <_Z23getFont_verdana_19_4bppv+0x70>)
 8006a4a:	b00f      	add	sp, #60	; 0x3c
 8006a4c:	bd30      	pop	{r4, r5, pc}
 8006a4e:	bf00      	nop
 8006a50:	2000293c 	.word	0x2000293c
 8006a54:	0802dfec 	.word	0x0802dfec
 8006a58:	0802e09c 	.word	0x0802e09c
 8006a5c:	0802dd10 	.word	0x0802dd10
 8006a60:	20002940 	.word	0x20002940
 8006a64:	080069ed 	.word	0x080069ed

08006a68 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8006a68:	4770      	bx	lr
	...

08006a6c <_Z23getFont_verdana_40_4bppv>:
{
 8006a6c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8006a6e:	4d16      	ldr	r5, [pc, #88]	; (8006ac8 <_Z23getFont_verdana_40_4bppv+0x5c>)
 8006a70:	682c      	ldr	r4, [r5, #0]
 8006a72:	f3bf 8f5b 	dmb	ish
 8006a76:	f014 0401 	ands.w	r4, r4, #1
{
 8006a7a:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8006a7c:	d120      	bne.n	8006ac0 <_Z23getFont_verdana_40_4bppv+0x54>
 8006a7e:	4628      	mov	r0, r5
 8006a80:	f01f fd07 	bl	8026492 <__cxa_guard_acquire>
 8006a84:	b1e0      	cbz	r0, 8006ac0 <_Z23getFont_verdana_40_4bppv+0x54>
 8006a86:	233f      	movs	r3, #63	; 0x3f
 8006a88:	9309      	str	r3, [sp, #36]	; 0x24
 8006a8a:	4b10      	ldr	r3, [pc, #64]	; (8006acc <_Z23getFont_verdana_40_4bppv+0x60>)
 8006a8c:	9308      	str	r3, [sp, #32]
 8006a8e:	4b10      	ldr	r3, [pc, #64]	; (8006ad0 <_Z23getFont_verdana_40_4bppv+0x64>)
 8006a90:	4910      	ldr	r1, [pc, #64]	; (8006ad4 <_Z23getFont_verdana_40_4bppv+0x68>)
 8006a92:	4811      	ldr	r0, [pc, #68]	; (8006ad8 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8006a94:	940a      	str	r4, [sp, #40]	; 0x28
 8006a96:	2201      	movs	r2, #1
 8006a98:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8006a9c:	2304      	movs	r3, #4
 8006a9e:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8006aa2:	2328      	movs	r3, #40	; 0x28
 8006aa4:	9300      	str	r3, [sp, #0]
 8006aa6:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8006aaa:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8006aae:	9405      	str	r4, [sp, #20]
 8006ab0:	f7fd fc54 	bl	800435c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8006ab4:	4809      	ldr	r0, [pc, #36]	; (8006adc <_Z23getFont_verdana_40_4bppv+0x70>)
 8006ab6:	f020 faf9 	bl	80270ac <atexit>
 8006aba:	4628      	mov	r0, r5
 8006abc:	f01f fcf5 	bl	80264aa <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8006ac0:	4805      	ldr	r0, [pc, #20]	; (8006ad8 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8006ac2:	b00f      	add	sp, #60	; 0x3c
 8006ac4:	bd30      	pop	{r4, r5, pc}
 8006ac6:	bf00      	nop
 8006ac8:	2000296c 	.word	0x2000296c
 8006acc:	0802e090 	.word	0x0802e090
 8006ad0:	0802e0a0 	.word	0x0802e0a0
 8006ad4:	0802dfa4 	.word	0x0802dfa4
 8006ad8:	20002970 	.word	0x20002970
 8006adc:	08006a69 	.word	0x08006a69

08006ae0 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8006ae0:	2000      	movs	r0, #0
 8006ae2:	4770      	bx	lr

08006ae4 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 8006ae4:	2000      	movs	r0, #0
 8006ae6:	4770      	bx	lr

08006ae8 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8006ae8:	b40e      	push	{r1, r2, r3}
 8006aea:	b503      	push	{r0, r1, lr}
 8006aec:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8006aee:	2100      	movs	r1, #0
{
 8006af0:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8006af4:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8006af6:	f00d ff29 	bl	801494c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8006afa:	b002      	add	sp, #8
 8006afc:	f85d eb04 	ldr.w	lr, [sp], #4
 8006b00:	b003      	add	sp, #12
 8006b02:	4770      	bx	lr

08006b04 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8006b04:	b40c      	push	{r2, r3}
 8006b06:	b507      	push	{r0, r1, r2, lr}
 8006b08:	ab04      	add	r3, sp, #16
 8006b0a:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8006b0e:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8006b10:	f00d ff1c 	bl	801494c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8006b14:	b003      	add	sp, #12
 8006b16:	f85d eb04 	ldr.w	lr, [sp], #4
 8006b1a:	b002      	add	sp, #8
 8006b1c:	4770      	bx	lr
	...

08006b20 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8006b20:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 8006b22:	b510      	push	{r4, lr}
 8006b24:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8006b26:	b373      	cbz	r3, 8006b86 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8006b28:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 8006b2a:	b92b      	cbnz	r3, 8006b38 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8006b2c:	4b18      	ldr	r3, [pc, #96]	; (8006b90 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8006b2e:	4a19      	ldr	r2, [pc, #100]	; (8006b94 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8006b30:	21c5      	movs	r1, #197	; 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8006b32:	4819      	ldr	r0, [pc, #100]	; (8006b98 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8006b34:	f020 fa9c 	bl	8027070 <__assert_func>
            return buffer[pos];
 8006b38:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8006b3a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8006b3e:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 8006b40:	b30b      	cbz	r3, 8006b86 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8006b42:	f00f fb00 	bl	8016146 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8006b46:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8006b48:	2b01      	cmp	r3, #1
 8006b4a:	d803      	bhi.n	8006b54 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8006b4c:	4b13      	ldr	r3, [pc, #76]	; (8006b9c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8006b4e:	4a14      	ldr	r2, [pc, #80]	; (8006ba0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8006b50:	21cb      	movs	r1, #203	; 0xcb
 8006b52:	e7ee      	b.n	8006b32 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8006b54:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8006b56:	1c53      	adds	r3, r2, #1
 8006b58:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8006b5a:	2b09      	cmp	r3, #9
 8006b5c:	4619      	mov	r1, r3
 8006b5e:	bf88      	it	hi
 8006b60:	f1a3 010a 	subhi.w	r1, r3, #10
 8006b64:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8006b68:	f640 103f 	movw	r0, #2367	; 0x93f
 8006b6c:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 8006b6e:	4281      	cmp	r1, r0
 8006b70:	d109      	bne.n	8006b86 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 8006b72:	2b0a      	cmp	r3, #10
 8006b74:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8006b78:	bf28      	it	cs
 8006b7a:	2300      	movcs	r3, #0

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8006b7c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8006b80:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 8006b82:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 8006b84:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8006b86:	4620      	mov	r0, r4
}
 8006b88:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8006b8c:	f00f b9de 	b.w	8015f4c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8006b90:	0802a4d0 	.word	0x0802a4d0
 8006b94:	0802a4d9 	.word	0x0802a4d9
 8006b98:	0802a584 	.word	0x0802a584
 8006b9c:	0802a5ce 	.word	0x0802a5ce
 8006ba0:	0802a5dc 	.word	0x0802a5dc

08006ba4 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8006ba4:	f00f b999 	b.w	8015eda <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08006ba8 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8006ba8:	b510      	push	{r4, lr}
 8006baa:	b086      	sub	sp, #24
 8006bac:	ac02      	add	r4, sp, #8
 8006bae:	e884 0006 	stmia.w	r4, {r1, r2}
 8006bb2:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8006bb4:	ab0a      	add	r3, sp, #40	; 0x28
 8006bb6:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8006bb8:	9301      	str	r3, [sp, #4]
 8006bba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006bbc:	9300      	str	r3, [sp, #0]
 8006bbe:	4621      	mov	r1, r4
 8006bc0:	9b08      	ldr	r3, [sp, #32]
 8006bc2:	f00c fa87 	bl	80130d4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 8006bc6:	b006      	add	sp, #24
 8006bc8:	bd10      	pop	{r4, pc}
	...

08006bcc <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8006bcc:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8006bce:	bb18      	cbnz	r0, 8006c18 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8006bd0:	4b12      	ldr	r3, [pc, #72]	; (8006c1c <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8006bd2:	4813      	ldr	r0, [pc, #76]	; (8006c20 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8006bd4:	681c      	ldr	r4, [r3, #0]
 8006bd6:	4913      	ldr	r1, [pc, #76]	; (8006c24 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8006bd8:	b1b4      	cbz	r4, 8006c08 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8006bda:	6822      	ldr	r2, [r4, #0]
 8006bdc:	4422      	add	r2, r4
 8006bde:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8006be0:	6862      	ldr	r2, [r4, #4]
 8006be2:	4422      	add	r2, r4
 8006be4:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8006be6:	68a2      	ldr	r2, [r4, #8]
 8006be8:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8006bea:	4b0f      	ldr	r3, [pc, #60]	; (8006c28 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8006bec:	2200      	movs	r2, #0
 8006bee:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8006bf0:	f000 f838 	bl	8006c64 <_ZN17TypedTextDatabase8getFontsEv>
 8006bf4:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8006bf6:	f000 f833 	bl	8006c60 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8006bfa:	4b0c      	ldr	r3, [pc, #48]	; (8006c2c <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8006bfc:	601c      	str	r4, [r3, #0]
        fonts = f;
 8006bfe:	4b0c      	ldr	r3, [pc, #48]	; (8006c30 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8006c00:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8006c02:	4b0c      	ldr	r3, [pc, #48]	; (8006c34 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8006c04:	8018      	strh	r0, [r3, #0]
    }
}
 8006c06:	e007      	b.n	8006c18 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8006c08:	4b0b      	ldr	r3, [pc, #44]	; (8006c38 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8006c0a:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8006c0c:	4b0b      	ldr	r3, [pc, #44]	; (8006c3c <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8006c0e:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8006c10:	4b0b      	ldr	r3, [pc, #44]	; (8006c40 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8006c12:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8006c14:	2c00      	cmp	r4, #0
 8006c16:	d1e8      	bne.n	8006bea <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8006c18:	bd38      	pop	{r3, r4, r5, pc}
 8006c1a:	bf00      	nop
 8006c1c:	2000299c 	.word	0x2000299c
 8006c20:	200029a0 	.word	0x200029a0
 8006c24:	200029a4 	.word	0x200029a4
 8006c28:	200029a8 	.word	0x200029a8
 8006c2c:	20013814 	.word	0x20013814
 8006c30:	2001381c 	.word	0x2001381c
 8006c34:	20013818 	.word	0x20013818
 8006c38:	0802e190 	.word	0x0802e190
 8006c3c:	0802e0a4 	.word	0x0802e0a4
 8006c40:	0802e5cc 	.word	0x0802e5cc

08006c44 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8006c44:	4b04      	ldr	r3, [pc, #16]	; (8006c58 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8006c46:	681b      	ldr	r3, [r3, #0]
 8006c48:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8006c4c:	4b03      	ldr	r3, [pc, #12]	; (8006c5c <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 8006c4e:	681b      	ldr	r3, [r3, #0]
}
 8006c50:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8006c54:	4770      	bx	lr
 8006c56:	bf00      	nop
 8006c58:	200029a4 	.word	0x200029a4
 8006c5c:	200029a0 	.word	0x200029a0

08006c60 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8006c60:	203b      	movs	r0, #59	; 0x3b
 8006c62:	4770      	bx	lr

08006c64 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8006c64:	4800      	ldr	r0, [pc, #0]	; (8006c68 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8006c66:	4770      	bx	lr
 8006c68:	200029ac 	.word	0x200029ac

08006c6c <_GLOBAL__sub_I_touchgfx_fonts>:
    case 3:
        touchgfx_fonts[3] = &(getFont_verdana_12_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8006c6c:	b510      	push	{r4, lr}
    &(getFont_verdana_19_4bpp()),
 8006c6e:	f7ff febf 	bl	80069f0 <_Z23getFont_verdana_19_4bppv>
};
 8006c72:	4c06      	ldr	r4, [pc, #24]	; (8006c8c <_GLOBAL__sub_I_touchgfx_fonts+0x20>)
 8006c74:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 8006c76:	f7ff fef9 	bl	8006a6c <_Z23getFont_verdana_40_4bppv>
};
 8006c7a:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp()),
 8006c7c:	f7ff fe3c 	bl	80068f8 <_Z23getFont_verdana_10_4bppv>
};
 8006c80:	60a0      	str	r0, [r4, #8]
    &(getFont_verdana_12_4bpp())
 8006c82:	f7ff fe77 	bl	8006974 <_Z23getFont_verdana_12_4bppv>
};
 8006c86:	60e0      	str	r0, [r4, #12]
} // namespace TypedTextDatabase
 8006c88:	bd10      	pop	{r4, pc}
 8006c8a:	bf00      	nop
 8006c8c:	200029ac 	.word	0x200029ac

08006c90 <_ZN20CalibrationPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~CalibrationPresenter() {}
 8006c90:	4770      	bx	lr

08006c92 <_ZThn4_N20CalibrationPresenterD1Ev>:
 8006c92:	3804      	subs	r0, #4
 8006c94:	4770      	bx	lr

08006c96 <_ZN20CalibrationPresenter10deactivateEv>:
}

void CalibrationPresenter::activate()
{

}
 8006c96:	4770      	bx	lr

08006c98 <_ZN20CalibrationPresenter15setTimeoutValueEi>:
}

void CalibrationPresenter::setTimeoutValue(int value)
{

}
 8006c98:	4770      	bx	lr

08006c9a <_ZN20CalibrationPresenterD0Ev>:
 8006c9a:	b510      	push	{r4, lr}
 8006c9c:	2110      	movs	r1, #16
 8006c9e:	4604      	mov	r4, r0
 8006ca0:	f01f fbf5 	bl	802648e <_ZdlPvj>
 8006ca4:	4620      	mov	r0, r4
 8006ca6:	bd10      	pop	{r4, pc}

08006ca8 <_ZThn4_N20CalibrationPresenterD0Ev>:
 8006ca8:	f1a0 0004 	sub.w	r0, r0, #4
 8006cac:	e7f5      	b.n	8006c9a <_ZN20CalibrationPresenterD0Ev>

08006cae <_ZThn4_N20CalibrationPresenter15setTimeoutValueEi>:
 8006cae:	4770      	bx	lr

08006cb0 <_ZN20CalibrationPresenterC1ER15CalibrationView>:
CalibrationPresenter::CalibrationPresenter(CalibrationView& v)
 8006cb0:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 8006cb2:	2200      	movs	r2, #0
 8006cb4:	6082      	str	r2, [r0, #8]
    : view(v)
 8006cb6:	4a04      	ldr	r2, [pc, #16]	; (8006cc8 <_ZN20CalibrationPresenterC1ER15CalibrationView+0x18>)
 8006cb8:	60c1      	str	r1, [r0, #12]
 8006cba:	f102 0408 	add.w	r4, r2, #8
 8006cbe:	3224      	adds	r2, #36	; 0x24
 8006cc0:	6004      	str	r4, [r0, #0]
 8006cc2:	6042      	str	r2, [r0, #4]
}
 8006cc4:	bd10      	pop	{r4, pc}
 8006cc6:	bf00      	nop
 8006cc8:	0802a6b0 	.word	0x0802a6b0

08006ccc <_ZN15CalibrationView14tearDownScreenEv>:
}

void CalibrationView::tearDownScreen()
{
    CalibrationViewBase::tearDownScreen();
}
 8006ccc:	4770      	bx	lr
	...

08006cd0 <_ZN15CalibrationViewD1Ev>:

class CalibrationView : public CalibrationViewBase
{
public:
    CalibrationView();
    virtual ~CalibrationView() {}
 8006cd0:	b510      	push	{r4, lr}
 8006cd2:	4b03      	ldr	r3, [pc, #12]	; (8006ce0 <_ZN15CalibrationViewD1Ev+0x10>)
 8006cd4:	6003      	str	r3, [r0, #0]
 8006cd6:	4604      	mov	r4, r0
 8006cd8:	f7fb fb20 	bl	800231c <_ZN19CalibrationViewBaseD1Ev>
 8006cdc:	4620      	mov	r0, r4
 8006cde:	bd10      	pop	{r4, pc}
 8006ce0:	0802a6e8 	.word	0x0802a6e8

08006ce4 <_ZN15CalibrationViewD0Ev>:
 8006ce4:	b510      	push	{r4, lr}
 8006ce6:	4604      	mov	r4, r0
 8006ce8:	f7ff fff2 	bl	8006cd0 <_ZN15CalibrationViewD1Ev>
 8006cec:	4620      	mov	r0, r4
 8006cee:	f241 01a4 	movw	r1, #4260	; 0x10a4
 8006cf2:	f01f fbcc 	bl	802648e <_ZdlPvj>
 8006cf6:	4620      	mov	r0, r4
 8006cf8:	bd10      	pop	{r4, pc}
	...

08006cfc <_ZN15CalibrationViewC1Ev>:
CalibrationView::CalibrationView()
 8006cfc:	b510      	push	{r4, lr}
 8006cfe:	4604      	mov	r4, r0
 8006d00:	f7fb fbcc 	bl	800249c <_ZN19CalibrationViewBaseC1Ev>
 8006d04:	4b01      	ldr	r3, [pc, #4]	; (8006d0c <_ZN15CalibrationViewC1Ev+0x10>)
 8006d06:	6023      	str	r3, [r4, #0]
}
 8006d08:	4620      	mov	r0, r4
 8006d0a:	bd10      	pop	{r4, pc}
 8006d0c:	0802a6e8 	.word	0x0802a6e8

08006d10 <_ZN15CalibrationView11setupScreenEv>:
    CalibrationViewBase::setupScreen();
 8006d10:	f7fb bad9 	b.w	80022c6 <_ZN19CalibrationViewBase11setupScreenEv>

08006d14 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8006d14:	4770      	bx	lr

08006d16 <_ZN19FrontendApplicationD0Ev>:
 8006d16:	b510      	push	{r4, lr}
 8006d18:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 8006d1c:	4604      	mov	r4, r0
 8006d1e:	f01f fbb6 	bl	802648e <_ZdlPvj>
 8006d22:	4620      	mov	r0, r4
 8006d24:	bd10      	pop	{r4, pc}

08006d26 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8006d26:	b510      	push	{r4, lr}
 8006d28:	4604      	mov	r4, r0
    {
        model.tick();
 8006d2a:	f8d0 0158 	ldr.w	r0, [r0, #344]	; 0x158
 8006d2e:	f000 fa83 	bl	8007238 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8006d32:	4620      	mov	r0, r4
    }
 8006d34:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8006d38:	f00c bf0e 	b.w	8013b58 <_ZN8touchgfx11Application15handleTickEventEv>

08006d3c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8006d3c:	b510      	push	{r4, lr}
 8006d3e:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8006d40:	f7fb ffdc 	bl	8002cfc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8006d44:	4b01      	ldr	r3, [pc, #4]	; (8006d4c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 8006d46:	6023      	str	r3, [r4, #0]
{

}
 8006d48:	4620      	mov	r0, r4
 8006d4a:	bd10      	pop	{r4, pc}
 8006d4c:	0802a71c 	.word	0x0802a71c

08006d50 <_ZN17Gauge_with_ValuesD1Ev>:
 8006d50:	b510      	push	{r4, lr}
 8006d52:	4b03      	ldr	r3, [pc, #12]	; (8006d60 <_ZN17Gauge_with_ValuesD1Ev+0x10>)
 8006d54:	6003      	str	r3, [r0, #0]
 8006d56:	4604      	mov	r4, r0
 8006d58:	f7fd f904 	bl	8003f64 <_ZN21Gauge_with_ValuesBaseD1Ev>
 8006d5c:	4620      	mov	r0, r4
 8006d5e:	bd10      	pop	{r4, pc}
 8006d60:	0802a770 	.word	0x0802a770

08006d64 <_ZN17Gauge_with_ValuesD0Ev>:
 8006d64:	b510      	push	{r4, lr}
 8006d66:	4604      	mov	r4, r0
 8006d68:	f7ff fff2 	bl	8006d50 <_ZN17Gauge_with_ValuesD1Ev>
 8006d6c:	4620      	mov	r0, r4
 8006d6e:	f44f 7162 	mov.w	r1, #904	; 0x388
 8006d72:	f01f fb8c 	bl	802648e <_ZdlPvj>
 8006d76:	4620      	mov	r0, r4
 8006d78:	bd10      	pop	{r4, pc}
	...

08006d7c <_ZN17Gauge_with_ValuesC1Ev>:
#include <gui/containers/Gauge_with_Values.hpp>

Gauge_with_Values::Gauge_with_Values()
 8006d7c:	b510      	push	{r4, lr}
 8006d7e:	4604      	mov	r4, r0
 8006d80:	f7fd f944 	bl	800400c <_ZN21Gauge_with_ValuesBaseC1Ev>
 8006d84:	4b01      	ldr	r3, [pc, #4]	; (8006d8c <_ZN17Gauge_with_ValuesC1Ev+0x10>)
 8006d86:	6023      	str	r3, [r4, #0]
{

}
 8006d88:	4620      	mov	r0, r4
 8006d8a:	bd10      	pop	{r4, pc}
 8006d8c:	0802a770 	.word	0x0802a770

08006d90 <_ZN17Gauge_with_Values10initializeEv>:

void Gauge_with_Values::initialize()
{
    Gauge_with_ValuesBase::initialize();
 8006d90:	f7fd b8e9 	b.w	8003f66 <_ZN21Gauge_with_ValuesBase10initializeEv>

08006d94 <_ZN18Main_MenuPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Main_MenuPresenter() {}
 8006d94:	4770      	bx	lr

08006d96 <_ZThn4_N18Main_MenuPresenterD1Ev>:
 8006d96:	3804      	subs	r0, #4
 8006d98:	4770      	bx	lr

08006d9a <_ZN18Main_MenuPresenter10deactivateEv>:
}

void Main_MenuPresenter::activate()
{

}
 8006d9a:	4770      	bx	lr

08006d9c <_ZN18Main_MenuPresenter15setTimeoutValueEi>:

}

void Main_MenuPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8006d9c:	68c0      	ldr	r0, [r0, #12]
 8006d9e:	6803      	ldr	r3, [r0, #0]
 8006da0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006da2:	4718      	bx	r3

08006da4 <_ZThn4_N18Main_MenuPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8006da4:	f1a0 0004 	sub.w	r0, r0, #4
 8006da8:	f7ff bff8 	b.w	8006d9c <_ZN18Main_MenuPresenter15setTimeoutValueEi>

08006dac <_ZN18Main_MenuPresenterD0Ev>:
    virtual ~Main_MenuPresenter() {}
 8006dac:	b510      	push	{r4, lr}
 8006dae:	2110      	movs	r1, #16
 8006db0:	4604      	mov	r4, r0
 8006db2:	f01f fb6c 	bl	802648e <_ZdlPvj>
 8006db6:	4620      	mov	r0, r4
 8006db8:	bd10      	pop	{r4, pc}

08006dba <_ZThn4_N18Main_MenuPresenterD0Ev>:
 8006dba:	f1a0 0004 	sub.w	r0, r0, #4
 8006dbe:	e7f5      	b.n	8006dac <_ZN18Main_MenuPresenterD0Ev>

08006dc0 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>:
Main_MenuPresenter::Main_MenuPresenter(Main_MenuView& v)
 8006dc0:	b510      	push	{r4, lr}
 8006dc2:	2200      	movs	r2, #0
 8006dc4:	6082      	str	r2, [r0, #8]
    : view(v)
 8006dc6:	4a04      	ldr	r2, [pc, #16]	; (8006dd8 <_ZN18Main_MenuPresenterC1ER13Main_MenuView+0x18>)
 8006dc8:	60c1      	str	r1, [r0, #12]
 8006dca:	f102 0408 	add.w	r4, r2, #8
 8006dce:	3224      	adds	r2, #36	; 0x24
 8006dd0:	6004      	str	r4, [r0, #0]
 8006dd2:	6042      	str	r2, [r0, #4]
}
 8006dd4:	bd10      	pop	{r4, pc}
 8006dd6:	bf00      	nop
 8006dd8:	0802a7fc 	.word	0x0802a7fc

08006ddc <_ZN13Main_MenuView14tearDownScreenEv>:
}

void Main_MenuView::tearDownScreen()
{
    Main_MenuViewBase::tearDownScreen();
}
 8006ddc:	4770      	bx	lr
	...

08006de0 <_ZN13Main_MenuViewD1Ev>:

class Main_MenuView : public Main_MenuViewBase
{
public:
    Main_MenuView();
    virtual ~Main_MenuView() {}
 8006de0:	b510      	push	{r4, lr}
 8006de2:	4b03      	ldr	r3, [pc, #12]	; (8006df0 <_ZN13Main_MenuViewD1Ev+0x10>)
 8006de4:	6003      	str	r3, [r0, #0]
 8006de6:	4604      	mov	r4, r0
 8006de8:	f7fd fb0c 	bl	8004404 <_ZN17Main_MenuViewBaseD1Ev>
 8006dec:	4620      	mov	r0, r4
 8006dee:	bd10      	pop	{r4, pc}
 8006df0:	0802a838 	.word	0x0802a838

08006df4 <_ZN13Main_MenuViewD0Ev>:
 8006df4:	b510      	push	{r4, lr}
 8006df6:	4604      	mov	r4, r0
 8006df8:	f7ff fff2 	bl	8006de0 <_ZN13Main_MenuViewD1Ev>
 8006dfc:	4620      	mov	r0, r4
 8006dfe:	f241 117c 	movw	r1, #4476	; 0x117c
 8006e02:	f01f fb44 	bl	802648e <_ZdlPvj>
 8006e06:	4620      	mov	r0, r4
 8006e08:	bd10      	pop	{r4, pc}
	...

08006e0c <_ZN13Main_MenuViewC1Ev>:
Main_MenuView::Main_MenuView()
 8006e0c:	b510      	push	{r4, lr}
 8006e0e:	4604      	mov	r4, r0
 8006e10:	f7fd fb42 	bl	8004498 <_ZN17Main_MenuViewBaseC1Ev>
 8006e14:	4b01      	ldr	r3, [pc, #4]	; (8006e1c <_ZN13Main_MenuViewC1Ev+0x10>)
 8006e16:	6023      	str	r3, [r4, #0]
}
 8006e18:	4620      	mov	r0, r4
 8006e1a:	bd10      	pop	{r4, pc}
 8006e1c:	0802a838 	.word	0x0802a838

08006e20 <_ZN13Main_MenuView11setupScreenEv>:
    Main_MenuViewBase::setupScreen();
 8006e20:	f7fd bacc 	b.w	80043bc <_ZN17Main_MenuViewBase11setupScreenEv>

08006e24 <_ZN13Main_MenuView15setTimeoutValueEi>:

void Main_MenuView::setTimeoutValue(int value)
{
 8006e24:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%d", value);
 8006e26:	4a0a      	ldr	r2, [pc, #40]	; (8006e50 <_ZN13Main_MenuView15setTimeoutValueEi+0x2c>)
{
 8006e28:	4605      	mov	r5, r0
 8006e2a:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%d", value);
 8006e2c:	460b      	mov	r3, r1
 8006e2e:	f500 7055 	add.w	r0, r0, #852	; 0x354
 8006e32:	2104      	movs	r1, #4
 8006e34:	f00f ff30 	bl	8016c98 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3.invalidate();
 8006e38:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8006e3c:	f00d feb0 	bl	8014ba0 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8006e40:	b92c      	cbnz	r4, 8006e4e <_ZN13Main_MenuView15setTimeoutValueEi+0x2a>
 8006e42:	f00c fdc5 	bl	80139d0 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8006e46:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8006e4a:	f7fc b857 	b.w	8002efc <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8006e4e:	bd38      	pop	{r3, r4, r5, pc}
 8006e50:	0802a82c 	.word	0x0802a82c

08006e54 <_ZN20MeasurementPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MeasurementPresenter() {}
 8006e54:	4770      	bx	lr

08006e56 <_ZThn4_N20MeasurementPresenterD1Ev>:
 8006e56:	3804      	subs	r0, #4
 8006e58:	4770      	bx	lr

08006e5a <_ZN20MeasurementPresenter10deactivateEv>:
}

void MeasurementPresenter::activate()
{

}
 8006e5a:	4770      	bx	lr

08006e5c <_ZN20MeasurementPresenter15setTimeoutValueEi>:

}

void MeasurementPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8006e5c:	68c0      	ldr	r0, [r0, #12]
 8006e5e:	6803      	ldr	r3, [r0, #0]
 8006e60:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006e62:	4718      	bx	r3

08006e64 <_ZThn4_N20MeasurementPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8006e64:	f1a0 0004 	sub.w	r0, r0, #4
 8006e68:	f7ff bff8 	b.w	8006e5c <_ZN20MeasurementPresenter15setTimeoutValueEi>

08006e6c <_ZN20MeasurementPresenterD0Ev>:
    virtual ~MeasurementPresenter() {}
 8006e6c:	b510      	push	{r4, lr}
 8006e6e:	2110      	movs	r1, #16
 8006e70:	4604      	mov	r4, r0
 8006e72:	f01f fb0c 	bl	802648e <_ZdlPvj>
 8006e76:	4620      	mov	r0, r4
 8006e78:	bd10      	pop	{r4, pc}

08006e7a <_ZThn4_N20MeasurementPresenterD0Ev>:
 8006e7a:	f1a0 0004 	sub.w	r0, r0, #4
 8006e7e:	e7f5      	b.n	8006e6c <_ZN20MeasurementPresenterD0Ev>

08006e80 <_ZN20MeasurementPresenterC1ER15MeasurementView>:
MeasurementPresenter::MeasurementPresenter(MeasurementView& v)
 8006e80:	b510      	push	{r4, lr}
 8006e82:	2200      	movs	r2, #0
 8006e84:	6082      	str	r2, [r0, #8]
    : view(v)
 8006e86:	4a04      	ldr	r2, [pc, #16]	; (8006e98 <_ZN20MeasurementPresenterC1ER15MeasurementView+0x18>)
 8006e88:	60c1      	str	r1, [r0, #12]
 8006e8a:	f102 0408 	add.w	r4, r2, #8
 8006e8e:	3224      	adds	r2, #36	; 0x24
 8006e90:	6004      	str	r4, [r0, #0]
 8006e92:	6042      	str	r2, [r0, #4]
}
 8006e94:	bd10      	pop	{r4, pc}
 8006e96:	bf00      	nop
 8006e98:	0802a868 	.word	0x0802a868

08006e9c <_ZN15MeasurementView14tearDownScreenEv>:
}

void MeasurementView::tearDownScreen()
{
    MeasurementViewBase::tearDownScreen();
}
 8006e9c:	4770      	bx	lr
	...

08006ea0 <_ZN15MeasurementViewD1Ev>:

class MeasurementView : public MeasurementViewBase
{
public:
    MeasurementView();
    virtual ~MeasurementView() {}
 8006ea0:	b510      	push	{r4, lr}
 8006ea2:	4b03      	ldr	r3, [pc, #12]	; (8006eb0 <_ZN15MeasurementViewD1Ev+0x10>)
 8006ea4:	6003      	str	r3, [r0, #0]
 8006ea6:	4604      	mov	r4, r0
 8006ea8:	f7fd fd64 	bl	8004974 <_ZN19MeasurementViewBaseD1Ev>
 8006eac:	4620      	mov	r0, r4
 8006eae:	bd10      	pop	{r4, pc}
 8006eb0:	0802a8a0 	.word	0x0802a8a0

08006eb4 <_ZN15MeasurementViewD0Ev>:
 8006eb4:	b510      	push	{r4, lr}
 8006eb6:	4604      	mov	r4, r0
 8006eb8:	f7ff fff2 	bl	8006ea0 <_ZN15MeasurementViewD1Ev>
 8006ebc:	4620      	mov	r0, r4
 8006ebe:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8006ec2:	f01f fae4 	bl	802648e <_ZdlPvj>
 8006ec6:	4620      	mov	r0, r4
 8006ec8:	bd10      	pop	{r4, pc}
	...

08006ecc <_ZN15MeasurementViewC1Ev>:
MeasurementView::MeasurementView()
 8006ecc:	b510      	push	{r4, lr}
 8006ece:	4604      	mov	r4, r0
 8006ed0:	f7fd fd8a 	bl	80049e8 <_ZN19MeasurementViewBaseC1Ev>
 8006ed4:	4b01      	ldr	r3, [pc, #4]	; (8006edc <_ZN15MeasurementViewC1Ev+0x10>)
 8006ed6:	6023      	str	r3, [r4, #0]
}
 8006ed8:	4620      	mov	r0, r4
 8006eda:	bd10      	pop	{r4, pc}
 8006edc:	0802a8a0 	.word	0x0802a8a0

08006ee0 <_ZN15MeasurementView11setupScreenEv>:
    MeasurementViewBase::setupScreen();
 8006ee0:	f7fd bd24 	b.w	800492c <_ZN19MeasurementViewBase11setupScreenEv>

08006ee4 <_ZN15MeasurementView15setTimeoutValueEi>:

void MeasurementView::setTimeoutValue(int value)
{
 8006ee4:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8006ee6:	4a0a      	ldr	r2, [pc, #40]	; (8006f10 <_ZN15MeasurementView15setTimeoutValueEi+0x2c>)
{
 8006ee8:	4605      	mov	r5, r0
 8006eea:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8006eec:	460b      	mov	r3, r1
 8006eee:	f500 7046 	add.w	r0, r0, #792	; 0x318
 8006ef2:	2104      	movs	r1, #4
 8006ef4:	f00f fed0 	bl	8016c98 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8006ef8:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8006efc:	f00d fe50 	bl	8014ba0 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8006f00:	b92c      	cbnz	r4, 8006f0e <_ZN15MeasurementView15setTimeoutValueEi+0x2a>
 8006f02:	f00c fd65 	bl	80139d0 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8006f06:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8006f0a:	f7fb bff7 	b.w	8002efc <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8006f0e:	bd38      	pop	{r3, r4, r5, pc}
 8006f10:	0802a82c 	.word	0x0802a82c

08006f14 <_ZN29Measurement_AccuratePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_AccuratePresenter() {}
 8006f14:	4770      	bx	lr

08006f16 <_ZThn4_N29Measurement_AccuratePresenterD1Ev>:
 8006f16:	3804      	subs	r0, #4
 8006f18:	4770      	bx	lr

08006f1a <_ZN29Measurement_AccuratePresenter10deactivateEv>:
}

void Measurement_AccuratePresenter::activate()
{

}
 8006f1a:	4770      	bx	lr

08006f1c <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>:
}

void Measurement_AccuratePresenter::setTimeoutValue(int value)
{

}
 8006f1c:	4770      	bx	lr

08006f1e <_ZN29Measurement_AccuratePresenterD0Ev>:
 8006f1e:	b510      	push	{r4, lr}
 8006f20:	2110      	movs	r1, #16
 8006f22:	4604      	mov	r4, r0
 8006f24:	f01f fab3 	bl	802648e <_ZdlPvj>
 8006f28:	4620      	mov	r0, r4
 8006f2a:	bd10      	pop	{r4, pc}

08006f2c <_ZThn4_N29Measurement_AccuratePresenterD0Ev>:
 8006f2c:	f1a0 0004 	sub.w	r0, r0, #4
 8006f30:	e7f5      	b.n	8006f1e <_ZN29Measurement_AccuratePresenterD0Ev>

08006f32 <_ZThn4_N29Measurement_AccuratePresenter15setTimeoutValueEi>:
 8006f32:	4770      	bx	lr

08006f34 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>:
Measurement_AccuratePresenter::Measurement_AccuratePresenter(Measurement_AccurateView& v)
 8006f34:	b510      	push	{r4, lr}
 8006f36:	2200      	movs	r2, #0
 8006f38:	6082      	str	r2, [r0, #8]
    : view(v)
 8006f3a:	4a04      	ldr	r2, [pc, #16]	; (8006f4c <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView+0x18>)
 8006f3c:	60c1      	str	r1, [r0, #12]
 8006f3e:	f102 0408 	add.w	r4, r2, #8
 8006f42:	3224      	adds	r2, #36	; 0x24
 8006f44:	6004      	str	r4, [r0, #0]
 8006f46:	6042      	str	r2, [r0, #4]
}
 8006f48:	bd10      	pop	{r4, pc}
 8006f4a:	bf00      	nop
 8006f4c:	0802a8d0 	.word	0x0802a8d0

08006f50 <_ZN24Measurement_AccurateView14tearDownScreenEv>:
}

void Measurement_AccurateView::tearDownScreen()
{
    Measurement_AccurateViewBase::tearDownScreen();
}
 8006f50:	4770      	bx	lr
	...

08006f54 <_ZN24Measurement_AccurateViewD1Ev>:

class Measurement_AccurateView : public Measurement_AccurateViewBase
{
public:
    Measurement_AccurateView();
    virtual ~Measurement_AccurateView() {}
 8006f54:	b510      	push	{r4, lr}
 8006f56:	4b03      	ldr	r3, [pc, #12]	; (8006f64 <_ZN24Measurement_AccurateViewD1Ev+0x10>)
 8006f58:	6003      	str	r3, [r0, #0]
 8006f5a:	4604      	mov	r4, r0
 8006f5c:	f7fd ff8c 	bl	8004e78 <_ZN28Measurement_AccurateViewBaseD1Ev>
 8006f60:	4620      	mov	r0, r4
 8006f62:	bd10      	pop	{r4, pc}
 8006f64:	0802a908 	.word	0x0802a908

08006f68 <_ZN24Measurement_AccurateViewD0Ev>:
 8006f68:	b510      	push	{r4, lr}
 8006f6a:	4604      	mov	r4, r0
 8006f6c:	f7ff fff2 	bl	8006f54 <_ZN24Measurement_AccurateViewD1Ev>
 8006f70:	4620      	mov	r0, r4
 8006f72:	f241 01ec 	movw	r1, #4332	; 0x10ec
 8006f76:	f01f fa8a 	bl	802648e <_ZdlPvj>
 8006f7a:	4620      	mov	r0, r4
 8006f7c:	bd10      	pop	{r4, pc}
	...

08006f80 <_ZN24Measurement_AccurateViewC1Ev>:
Measurement_AccurateView::Measurement_AccurateView()
 8006f80:	b510      	push	{r4, lr}
 8006f82:	4604      	mov	r4, r0
 8006f84:	f7fd ffb2 	bl	8004eec <_ZN28Measurement_AccurateViewBaseC1Ev>
 8006f88:	4b01      	ldr	r3, [pc, #4]	; (8006f90 <_ZN24Measurement_AccurateViewC1Ev+0x10>)
 8006f8a:	6023      	str	r3, [r4, #0]
}
 8006f8c:	4620      	mov	r0, r4
 8006f8e:	bd10      	pop	{r4, pc}
 8006f90:	0802a908 	.word	0x0802a908

08006f94 <_ZN24Measurement_AccurateView11setupScreenEv>:
    Measurement_AccurateViewBase::setupScreen();
 8006f94:	f7fd bf4c 	b.w	8004e30 <_ZN28Measurement_AccurateViewBase11setupScreenEv>

08006f98 <_ZN37Measurement_Accurate_DisplayPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_DisplayPresenter() {}
 8006f98:	4770      	bx	lr

08006f9a <_ZThn4_N37Measurement_Accurate_DisplayPresenterD1Ev>:
 8006f9a:	3804      	subs	r0, #4
 8006f9c:	4770      	bx	lr

08006f9e <_ZN37Measurement_Accurate_DisplayPresenter10deactivateEv>:
}

void Measurement_Accurate_DisplayPresenter::activate()
{

}
 8006f9e:	4770      	bx	lr

08006fa0 <_ZN37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
}

void Measurement_Accurate_DisplayPresenter::setTimeoutValue(int value)
{

}
 8006fa0:	4770      	bx	lr

08006fa2 <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>:
 8006fa2:	b510      	push	{r4, lr}
 8006fa4:	2110      	movs	r1, #16
 8006fa6:	4604      	mov	r4, r0
 8006fa8:	f01f fa71 	bl	802648e <_ZdlPvj>
 8006fac:	4620      	mov	r0, r4
 8006fae:	bd10      	pop	{r4, pc}

08006fb0 <_ZThn4_N37Measurement_Accurate_DisplayPresenterD0Ev>:
 8006fb0:	f1a0 0004 	sub.w	r0, r0, #4
 8006fb4:	e7f5      	b.n	8006fa2 <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>

08006fb6 <_ZThn4_N37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
 8006fb6:	4770      	bx	lr

08006fb8 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>:
Measurement_Accurate_DisplayPresenter::Measurement_Accurate_DisplayPresenter(Measurement_Accurate_DisplayView& v)
 8006fb8:	b510      	push	{r4, lr}
 8006fba:	2200      	movs	r2, #0
 8006fbc:	6082      	str	r2, [r0, #8]
    : view(v)
 8006fbe:	4a04      	ldr	r2, [pc, #16]	; (8006fd0 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView+0x18>)
 8006fc0:	60c1      	str	r1, [r0, #12]
 8006fc2:	f102 0408 	add.w	r4, r2, #8
 8006fc6:	3224      	adds	r2, #36	; 0x24
 8006fc8:	6004      	str	r4, [r0, #0]
 8006fca:	6042      	str	r2, [r0, #4]
}
 8006fcc:	bd10      	pop	{r4, pc}
 8006fce:	bf00      	nop
 8006fd0:	0802a934 	.word	0x0802a934

08006fd4 <_ZN32Measurement_Accurate_DisplayView14tearDownScreenEv>:
}

void Measurement_Accurate_DisplayView::tearDownScreen()
{
    Measurement_Accurate_DisplayViewBase::tearDownScreen();
}
 8006fd4:	4770      	bx	lr
	...

08006fd8 <_ZN32Measurement_Accurate_DisplayViewD1Ev>:

class Measurement_Accurate_DisplayView : public Measurement_Accurate_DisplayViewBase
{
public:
    Measurement_Accurate_DisplayView();
    virtual ~Measurement_Accurate_DisplayView() {}
 8006fd8:	b510      	push	{r4, lr}
 8006fda:	4b03      	ldr	r3, [pc, #12]	; (8006fe8 <_ZN32Measurement_Accurate_DisplayViewD1Ev+0x10>)
 8006fdc:	6003      	str	r3, [r0, #0]
 8006fde:	4604      	mov	r4, r0
 8006fe0:	f7fe f96a 	bl	80052b8 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>
 8006fe4:	4620      	mov	r0, r4
 8006fe6:	bd10      	pop	{r4, pc}
 8006fe8:	0802a96c 	.word	0x0802a96c

08006fec <_ZN32Measurement_Accurate_DisplayViewD0Ev>:
 8006fec:	b510      	push	{r4, lr}
 8006fee:	4604      	mov	r4, r0
 8006ff0:	f7ff fff2 	bl	8006fd8 <_ZN32Measurement_Accurate_DisplayViewD1Ev>
 8006ff4:	4620      	mov	r0, r4
 8006ff6:	f241 31e4 	movw	r1, #5092	; 0x13e4
 8006ffa:	f01f fa48 	bl	802648e <_ZdlPvj>
 8006ffe:	4620      	mov	r0, r4
 8007000:	bd10      	pop	{r4, pc}
	...

08007004 <_ZN32Measurement_Accurate_DisplayViewC1Ev>:
Measurement_Accurate_DisplayView::Measurement_Accurate_DisplayView()
 8007004:	b510      	push	{r4, lr}
 8007006:	4604      	mov	r4, r0
 8007008:	f7fe f976 	bl	80052f8 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>
 800700c:	4b01      	ldr	r3, [pc, #4]	; (8007014 <_ZN32Measurement_Accurate_DisplayViewC1Ev+0x10>)
 800700e:	6023      	str	r3, [r4, #0]
}
 8007010:	4620      	mov	r0, r4
 8007012:	bd10      	pop	{r4, pc}
 8007014:	0802a96c 	.word	0x0802a96c

08007018 <_ZN32Measurement_Accurate_DisplayView11setupScreenEv>:
    Measurement_Accurate_DisplayViewBase::setupScreen();
 8007018:	f7fe b93f 	b.w	800529a <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>

0800701c <_ZN39Measurement_Accurate_Display_2PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_Display_2Presenter() {}
 800701c:	4770      	bx	lr

0800701e <_ZThn4_N39Measurement_Accurate_Display_2PresenterD1Ev>:
 800701e:	3804      	subs	r0, #4
 8007020:	4770      	bx	lr

08007022 <_ZN39Measurement_Accurate_Display_2Presenter10deactivateEv>:
}

void Measurement_Accurate_Display_2Presenter::activate()
{

}
 8007022:	4770      	bx	lr

08007024 <_ZN39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
}

void Measurement_Accurate_Display_2Presenter::setTimeoutValue(int value)
{

}
 8007024:	4770      	bx	lr

08007026 <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>:
 8007026:	b510      	push	{r4, lr}
 8007028:	2110      	movs	r1, #16
 800702a:	4604      	mov	r4, r0
 800702c:	f01f fa2f 	bl	802648e <_ZdlPvj>
 8007030:	4620      	mov	r0, r4
 8007032:	bd10      	pop	{r4, pc}

08007034 <_ZThn4_N39Measurement_Accurate_Display_2PresenterD0Ev>:
 8007034:	f1a0 0004 	sub.w	r0, r0, #4
 8007038:	e7f5      	b.n	8007026 <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>

0800703a <_ZThn4_N39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
 800703a:	4770      	bx	lr

0800703c <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>:
Measurement_Accurate_Display_2Presenter::Measurement_Accurate_Display_2Presenter(Measurement_Accurate_Display_2View& v)
 800703c:	b510      	push	{r4, lr}
 800703e:	2200      	movs	r2, #0
 8007040:	6082      	str	r2, [r0, #8]
    : view(v)
 8007042:	4a04      	ldr	r2, [pc, #16]	; (8007054 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View+0x18>)
 8007044:	60c1      	str	r1, [r0, #12]
 8007046:	f102 0408 	add.w	r4, r2, #8
 800704a:	3224      	adds	r2, #36	; 0x24
 800704c:	6004      	str	r4, [r0, #0]
 800704e:	6042      	str	r2, [r0, #4]
}
 8007050:	bd10      	pop	{r4, pc}
 8007052:	bf00      	nop
 8007054:	0802a998 	.word	0x0802a998

08007058 <_ZN34Measurement_Accurate_Display_2View14tearDownScreenEv>:
}

void Measurement_Accurate_Display_2View::tearDownScreen()
{
    Measurement_Accurate_Display_2ViewBase::tearDownScreen();
}
 8007058:	4770      	bx	lr
	...

0800705c <_ZN34Measurement_Accurate_Display_2ViewD1Ev>:

class Measurement_Accurate_Display_2View : public Measurement_Accurate_Display_2ViewBase
{
public:
    Measurement_Accurate_Display_2View();
    virtual ~Measurement_Accurate_Display_2View() {}
 800705c:	b510      	push	{r4, lr}
 800705e:	4b03      	ldr	r3, [pc, #12]	; (800706c <_ZN34Measurement_Accurate_Display_2ViewD1Ev+0x10>)
 8007060:	6003      	str	r3, [r0, #0]
 8007062:	4604      	mov	r4, r0
 8007064:	f7fe faec 	bl	8005640 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>
 8007068:	4620      	mov	r0, r4
 800706a:	bd10      	pop	{r4, pc}
 800706c:	0802a9d0 	.word	0x0802a9d0

08007070 <_ZN34Measurement_Accurate_Display_2ViewD0Ev>:
 8007070:	b510      	push	{r4, lr}
 8007072:	4604      	mov	r4, r0
 8007074:	f7ff fff2 	bl	800705c <_ZN34Measurement_Accurate_Display_2ViewD1Ev>
 8007078:	4620      	mov	r0, r4
 800707a:	f241 31e4 	movw	r1, #5092	; 0x13e4
 800707e:	f01f fa06 	bl	802648e <_ZdlPvj>
 8007082:	4620      	mov	r0, r4
 8007084:	bd10      	pop	{r4, pc}
	...

08007088 <_ZN34Measurement_Accurate_Display_2ViewC1Ev>:
Measurement_Accurate_Display_2View::Measurement_Accurate_Display_2View()
 8007088:	b510      	push	{r4, lr}
 800708a:	4604      	mov	r4, r0
 800708c:	f7fe faf8 	bl	8005680 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>
 8007090:	4b01      	ldr	r3, [pc, #4]	; (8007098 <_ZN34Measurement_Accurate_Display_2ViewC1Ev+0x10>)
 8007092:	6023      	str	r3, [r4, #0]
}
 8007094:	4620      	mov	r0, r4
 8007096:	bd10      	pop	{r4, pc}
 8007098:	0802a9d0 	.word	0x0802a9d0

0800709c <_ZN34Measurement_Accurate_Display_2View11setupScreenEv>:
    Measurement_Accurate_Display_2ViewBase::setupScreen();
 800709c:	f7fe bac1 	b.w	8005622 <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>

080070a0 <_ZN27Measurement_SinglePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_SinglePresenter() {}
 80070a0:	4770      	bx	lr

080070a2 <_ZThn4_N27Measurement_SinglePresenterD1Ev>:
 80070a2:	3804      	subs	r0, #4
 80070a4:	4770      	bx	lr

080070a6 <_ZN27Measurement_SinglePresenter10deactivateEv>:
}

void Measurement_SinglePresenter::activate()
{

}
 80070a6:	4770      	bx	lr

080070a8 <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>:
}

void Measurement_SinglePresenter::setTimeoutValue(int value)
{

}
 80070a8:	4770      	bx	lr

080070aa <_ZN27Measurement_SinglePresenterD0Ev>:
 80070aa:	b510      	push	{r4, lr}
 80070ac:	2110      	movs	r1, #16
 80070ae:	4604      	mov	r4, r0
 80070b0:	f01f f9ed 	bl	802648e <_ZdlPvj>
 80070b4:	4620      	mov	r0, r4
 80070b6:	bd10      	pop	{r4, pc}

080070b8 <_ZThn4_N27Measurement_SinglePresenterD0Ev>:
 80070b8:	f1a0 0004 	sub.w	r0, r0, #4
 80070bc:	e7f5      	b.n	80070aa <_ZN27Measurement_SinglePresenterD0Ev>

080070be <_ZThn4_N27Measurement_SinglePresenter15setTimeoutValueEi>:
 80070be:	4770      	bx	lr

080070c0 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>:
Measurement_SinglePresenter::Measurement_SinglePresenter(Measurement_SingleView& v)
 80070c0:	b510      	push	{r4, lr}
 80070c2:	2200      	movs	r2, #0
 80070c4:	6082      	str	r2, [r0, #8]
    : view(v)
 80070c6:	4a04      	ldr	r2, [pc, #16]	; (80070d8 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView+0x18>)
 80070c8:	60c1      	str	r1, [r0, #12]
 80070ca:	f102 0408 	add.w	r4, r2, #8
 80070ce:	3224      	adds	r2, #36	; 0x24
 80070d0:	6004      	str	r4, [r0, #0]
 80070d2:	6042      	str	r2, [r0, #4]
}
 80070d4:	bd10      	pop	{r4, pc}
 80070d6:	bf00      	nop
 80070d8:	0802a9fc 	.word	0x0802a9fc

080070dc <_ZN22Measurement_SingleView14tearDownScreenEv>:
}

void Measurement_SingleView::tearDownScreen()
{
    Measurement_SingleViewBase::tearDownScreen();
}
 80070dc:	4770      	bx	lr
	...

080070e0 <_ZN22Measurement_SingleViewD1Ev>:

class Measurement_SingleView : public Measurement_SingleViewBase
{
public:
    Measurement_SingleView();
    virtual ~Measurement_SingleView() {}
 80070e0:	b510      	push	{r4, lr}
 80070e2:	4b03      	ldr	r3, [pc, #12]	; (80070f0 <_ZN22Measurement_SingleViewD1Ev+0x10>)
 80070e4:	6003      	str	r3, [r0, #0]
 80070e6:	4604      	mov	r4, r0
 80070e8:	f7fe fc60 	bl	80059ac <_ZN26Measurement_SingleViewBaseD1Ev>
 80070ec:	4620      	mov	r0, r4
 80070ee:	bd10      	pop	{r4, pc}
 80070f0:	0802aa34 	.word	0x0802aa34

080070f4 <_ZN22Measurement_SingleViewD0Ev>:
 80070f4:	b510      	push	{r4, lr}
 80070f6:	4604      	mov	r4, r0
 80070f8:	f7ff fff2 	bl	80070e0 <_ZN22Measurement_SingleViewD1Ev>
 80070fc:	4620      	mov	r0, r4
 80070fe:	f241 01ec 	movw	r1, #4332	; 0x10ec
 8007102:	f01f f9c4 	bl	802648e <_ZdlPvj>
 8007106:	4620      	mov	r0, r4
 8007108:	bd10      	pop	{r4, pc}
	...

0800710c <_ZN22Measurement_SingleViewC1Ev>:
Measurement_SingleView::Measurement_SingleView()
 800710c:	b510      	push	{r4, lr}
 800710e:	4604      	mov	r4, r0
 8007110:	f7fe fc86 	bl	8005a20 <_ZN26Measurement_SingleViewBaseC1Ev>
 8007114:	4b01      	ldr	r3, [pc, #4]	; (800711c <_ZN22Measurement_SingleViewC1Ev+0x10>)
 8007116:	6023      	str	r3, [r4, #0]
}
 8007118:	4620      	mov	r0, r4
 800711a:	bd10      	pop	{r4, pc}
 800711c:	0802aa34 	.word	0x0802aa34

08007120 <_ZN22Measurement_SingleView11setupScreenEv>:
    Measurement_SingleViewBase::setupScreen();
 8007120:	f7fe bc20 	b.w	8005964 <_ZN26Measurement_SingleViewBase11setupScreenEv>

08007124 <_ZN38Measurement_Single_Display_1PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_1PPresenter() {}
 8007124:	4770      	bx	lr

08007126 <_ZThn4_N38Measurement_Single_Display_1PPresenterD1Ev>:
 8007126:	3804      	subs	r0, #4
 8007128:	4770      	bx	lr

0800712a <_ZN38Measurement_Single_Display_1PPresenter10deactivateEv>:
}

void Measurement_Single_Display_1PPresenter::activate()
{

}
 800712a:	4770      	bx	lr

0800712c <_ZN38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_1PPresenter::setTimeoutValue(int value)
{

}
 800712c:	4770      	bx	lr

0800712e <_ZN38Measurement_Single_Display_1PPresenterD0Ev>:
 800712e:	b510      	push	{r4, lr}
 8007130:	2110      	movs	r1, #16
 8007132:	4604      	mov	r4, r0
 8007134:	f01f f9ab 	bl	802648e <_ZdlPvj>
 8007138:	4620      	mov	r0, r4
 800713a:	bd10      	pop	{r4, pc}

0800713c <_ZThn4_N38Measurement_Single_Display_1PPresenterD0Ev>:
 800713c:	f1a0 0004 	sub.w	r0, r0, #4
 8007140:	e7f5      	b.n	800712e <_ZN38Measurement_Single_Display_1PPresenterD0Ev>

08007142 <_ZThn4_N38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
 8007142:	4770      	bx	lr

08007144 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>:
Measurement_Single_Display_1PPresenter::Measurement_Single_Display_1PPresenter(Measurement_Single_Display_1PView& v)
 8007144:	b510      	push	{r4, lr}
 8007146:	2200      	movs	r2, #0
 8007148:	6082      	str	r2, [r0, #8]
    : view(v)
 800714a:	4a04      	ldr	r2, [pc, #16]	; (800715c <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView+0x18>)
 800714c:	60c1      	str	r1, [r0, #12]
 800714e:	f102 0408 	add.w	r4, r2, #8
 8007152:	3224      	adds	r2, #36	; 0x24
 8007154:	6004      	str	r4, [r0, #0]
 8007156:	6042      	str	r2, [r0, #4]
}
 8007158:	bd10      	pop	{r4, pc}
 800715a:	bf00      	nop
 800715c:	0802aa60 	.word	0x0802aa60

08007160 <_ZN33Measurement_Single_Display_1PView14tearDownScreenEv>:
}

void Measurement_Single_Display_1PView::tearDownScreen()
{
    Measurement_Single_Display_1PViewBase::tearDownScreen();
}
 8007160:	4770      	bx	lr
	...

08007164 <_ZN33Measurement_Single_Display_1PViewD1Ev>:

class Measurement_Single_Display_1PView : public Measurement_Single_Display_1PViewBase
{
public:
    Measurement_Single_Display_1PView();
    virtual ~Measurement_Single_Display_1PView() {}
 8007164:	b510      	push	{r4, lr}
 8007166:	4b03      	ldr	r3, [pc, #12]	; (8007174 <_ZN33Measurement_Single_Display_1PViewD1Ev+0x10>)
 8007168:	6003      	str	r3, [r0, #0]
 800716a:	4604      	mov	r4, r0
 800716c:	f7fe fe40 	bl	8005df0 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>
 8007170:	4620      	mov	r0, r4
 8007172:	bd10      	pop	{r4, pc}
 8007174:	0802aa98 	.word	0x0802aa98

08007178 <_ZN33Measurement_Single_Display_1PViewD0Ev>:
 8007178:	b510      	push	{r4, lr}
 800717a:	4604      	mov	r4, r0
 800717c:	f7ff fff2 	bl	8007164 <_ZN33Measurement_Single_Display_1PViewD1Ev>
 8007180:	4620      	mov	r0, r4
 8007182:	f241 31e4 	movw	r1, #5092	; 0x13e4
 8007186:	f01f f982 	bl	802648e <_ZdlPvj>
 800718a:	4620      	mov	r0, r4
 800718c:	bd10      	pop	{r4, pc}
	...

08007190 <_ZN33Measurement_Single_Display_1PViewC1Ev>:
Measurement_Single_Display_1PView::Measurement_Single_Display_1PView()
 8007190:	b510      	push	{r4, lr}
 8007192:	4604      	mov	r4, r0
 8007194:	f7fe fe4c 	bl	8005e30 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>
 8007198:	4b01      	ldr	r3, [pc, #4]	; (80071a0 <_ZN33Measurement_Single_Display_1PViewC1Ev+0x10>)
 800719a:	6023      	str	r3, [r4, #0]
}
 800719c:	4620      	mov	r0, r4
 800719e:	bd10      	pop	{r4, pc}
 80071a0:	0802aa98 	.word	0x0802aa98

080071a4 <_ZN33Measurement_Single_Display_1PView11setupScreenEv>:
    Measurement_Single_Display_1PViewBase::setupScreen();
 80071a4:	f7fe be13 	b.w	8005dce <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>

080071a8 <_ZN38Measurement_Single_Display_3PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_3PPresenter() {}
 80071a8:	4770      	bx	lr

080071aa <_ZThn4_N38Measurement_Single_Display_3PPresenterD1Ev>:
 80071aa:	3804      	subs	r0, #4
 80071ac:	4770      	bx	lr

080071ae <_ZN38Measurement_Single_Display_3PPresenter10deactivateEv>:
}

void Measurement_Single_Display_3PPresenter::activate()
{

}
 80071ae:	4770      	bx	lr

080071b0 <_ZN38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_3PPresenter::setTimeoutValue(int value)
{

}
 80071b0:	4770      	bx	lr

080071b2 <_ZN38Measurement_Single_Display_3PPresenterD0Ev>:
 80071b2:	b510      	push	{r4, lr}
 80071b4:	2110      	movs	r1, #16
 80071b6:	4604      	mov	r4, r0
 80071b8:	f01f f969 	bl	802648e <_ZdlPvj>
 80071bc:	4620      	mov	r0, r4
 80071be:	bd10      	pop	{r4, pc}

080071c0 <_ZThn4_N38Measurement_Single_Display_3PPresenterD0Ev>:
 80071c0:	f1a0 0004 	sub.w	r0, r0, #4
 80071c4:	e7f5      	b.n	80071b2 <_ZN38Measurement_Single_Display_3PPresenterD0Ev>

080071c6 <_ZThn4_N38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
 80071c6:	4770      	bx	lr

080071c8 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>:
Measurement_Single_Display_3PPresenter::Measurement_Single_Display_3PPresenter(Measurement_Single_Display_3PView& v)
 80071c8:	b510      	push	{r4, lr}
 80071ca:	2200      	movs	r2, #0
 80071cc:	6082      	str	r2, [r0, #8]
    : view(v)
 80071ce:	4a04      	ldr	r2, [pc, #16]	; (80071e0 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView+0x18>)
 80071d0:	60c1      	str	r1, [r0, #12]
 80071d2:	f102 0408 	add.w	r4, r2, #8
 80071d6:	3224      	adds	r2, #36	; 0x24
 80071d8:	6004      	str	r4, [r0, #0]
 80071da:	6042      	str	r2, [r0, #4]
}
 80071dc:	bd10      	pop	{r4, pc}
 80071de:	bf00      	nop
 80071e0:	0802aac4 	.word	0x0802aac4

080071e4 <_ZN33Measurement_Single_Display_3PView14tearDownScreenEv>:
}

void Measurement_Single_Display_3PView::tearDownScreen()
{
    Measurement_Single_Display_3PViewBase::tearDownScreen();
}
 80071e4:	4770      	bx	lr
	...

080071e8 <_ZN33Measurement_Single_Display_3PViewD1Ev>:

class Measurement_Single_Display_3PView : public Measurement_Single_Display_3PViewBase
{
public:
    Measurement_Single_Display_3PView();
    virtual ~Measurement_Single_Display_3PView() {}
 80071e8:	b510      	push	{r4, lr}
 80071ea:	4b03      	ldr	r3, [pc, #12]	; (80071f8 <_ZN33Measurement_Single_Display_3PViewD1Ev+0x10>)
 80071ec:	6003      	str	r3, [r0, #0]
 80071ee:	4604      	mov	r4, r0
 80071f0:	f7fe ffca 	bl	8006188 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>
 80071f4:	4620      	mov	r0, r4
 80071f6:	bd10      	pop	{r4, pc}
 80071f8:	0802aafc 	.word	0x0802aafc

080071fc <_ZN33Measurement_Single_Display_3PViewD0Ev>:
 80071fc:	b510      	push	{r4, lr}
 80071fe:	4604      	mov	r4, r0
 8007200:	f7ff fff2 	bl	80071e8 <_ZN33Measurement_Single_Display_3PViewD1Ev>
 8007204:	4620      	mov	r0, r4
 8007206:	f241 31e4 	movw	r1, #5092	; 0x13e4
 800720a:	f01f f940 	bl	802648e <_ZdlPvj>
 800720e:	4620      	mov	r0, r4
 8007210:	bd10      	pop	{r4, pc}
	...

08007214 <_ZN33Measurement_Single_Display_3PViewC1Ev>:
Measurement_Single_Display_3PView::Measurement_Single_Display_3PView()
 8007214:	b510      	push	{r4, lr}
 8007216:	4604      	mov	r4, r0
 8007218:	f7fe ffd6 	bl	80061c8 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>
 800721c:	4b01      	ldr	r3, [pc, #4]	; (8007224 <_ZN33Measurement_Single_Display_3PViewC1Ev+0x10>)
 800721e:	6023      	str	r3, [r4, #0]
}
 8007220:	4620      	mov	r0, r4
 8007222:	bd10      	pop	{r4, pc}
 8007224:	0802aafc 	.word	0x0802aafc

08007228 <_ZN33Measurement_Single_Display_3PView11setupScreenEv>:
    Measurement_Single_Display_3PViewBase::setupScreen();
 8007228:	f7fe bf9d 	b.w	8006166 <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>

0800722c <_ZN5ModelC1Ev>:
}
#endif



Model::Model() : modelListener(0), Timeout_Value(60)
 800722c:	2100      	movs	r1, #0
 800722e:	223c      	movs	r2, #60	; 0x3c
 8007230:	e9c0 1200 	strd	r1, r2, [r0]
{

}
 8007234:	4770      	bx	lr
	...

08007238 <_ZN5Model4tickEv>:

void Model::tick()
{
 8007238:	b570      	push	{r4, r5, r6, lr}
#ifndef SIMULATOR

	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 800723a:	4d0a      	ldr	r5, [pc, #40]	; (8007264 <_ZN5Model4tickEv+0x2c>)
{
 800723c:	4604      	mov	r4, r0
	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 800723e:	6828      	ldr	r0, [r5, #0]
 8007240:	f004 fb26 	bl	800b890 <osMessageQueueGetCount>
 8007244:	b168      	cbz	r0, 8007262 <_ZN5Model4tickEv+0x2a>
	{
		if(osMessageQueueGet(TimeoutQueueHandle, &Timeout_Value, 0, 0) == osOK)
 8007246:	2300      	movs	r3, #0
 8007248:	6828      	ldr	r0, [r5, #0]
 800724a:	461a      	mov	r2, r3
 800724c:	1d21      	adds	r1, r4, #4
 800724e:	f004 faeb 	bl	800b828 <osMessageQueueGet>
 8007252:	b930      	cbnz	r0, 8007262 <_ZN5Model4tickEv+0x2a>
		{
			modelListener->setTimeoutValue(Timeout_Value);
 8007254:	6820      	ldr	r0, [r4, #0]
 8007256:	6861      	ldr	r1, [r4, #4]
 8007258:	6803      	ldr	r3, [r0, #0]
		}
	}
#endif
}
 800725a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			modelListener->setTimeoutValue(Timeout_Value);
 800725e:	689b      	ldr	r3, [r3, #8]
 8007260:	4718      	bx	r3
}
 8007262:	bd70      	pop	{r4, r5, r6, pc}
 8007264:	20002620 	.word	0x20002620

08007268 <_ZN21Project_InfoPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Project_InfoPresenter() {}
 8007268:	4770      	bx	lr

0800726a <_ZThn4_N21Project_InfoPresenterD1Ev>:
 800726a:	3804      	subs	r0, #4
 800726c:	4770      	bx	lr

0800726e <_ZN21Project_InfoPresenter10deactivateEv>:
}

void Project_InfoPresenter::activate()
{

}
 800726e:	4770      	bx	lr

08007270 <_ZN21Project_InfoPresenter15setTimeoutValueEi>:
}

void Project_InfoPresenter::setTimeoutValue(int value)
{

}
 8007270:	4770      	bx	lr

08007272 <_ZN21Project_InfoPresenterD0Ev>:
 8007272:	b510      	push	{r4, lr}
 8007274:	2110      	movs	r1, #16
 8007276:	4604      	mov	r4, r0
 8007278:	f01f f909 	bl	802648e <_ZdlPvj>
 800727c:	4620      	mov	r0, r4
 800727e:	bd10      	pop	{r4, pc}

08007280 <_ZThn4_N21Project_InfoPresenterD0Ev>:
 8007280:	f1a0 0004 	sub.w	r0, r0, #4
 8007284:	e7f5      	b.n	8007272 <_ZN21Project_InfoPresenterD0Ev>

08007286 <_ZThn4_N21Project_InfoPresenter15setTimeoutValueEi>:
 8007286:	4770      	bx	lr

08007288 <_ZN21Project_InfoPresenterC1ER16Project_InfoView>:
Project_InfoPresenter::Project_InfoPresenter(Project_InfoView& v)
 8007288:	b510      	push	{r4, lr}
 800728a:	2200      	movs	r2, #0
 800728c:	6082      	str	r2, [r0, #8]
    : view(v)
 800728e:	4a04      	ldr	r2, [pc, #16]	; (80072a0 <_ZN21Project_InfoPresenterC1ER16Project_InfoView+0x18>)
 8007290:	60c1      	str	r1, [r0, #12]
 8007292:	f102 0408 	add.w	r4, r2, #8
 8007296:	3224      	adds	r2, #36	; 0x24
 8007298:	6004      	str	r4, [r0, #0]
 800729a:	6042      	str	r2, [r0, #4]
}
 800729c:	bd10      	pop	{r4, pc}
 800729e:	bf00      	nop
 80072a0:	0802ab28 	.word	0x0802ab28

080072a4 <_ZN16Project_InfoView14tearDownScreenEv>:
}

void Project_InfoView::tearDownScreen()
{
    Project_InfoViewBase::tearDownScreen();
}
 80072a4:	4770      	bx	lr
	...

080072a8 <_ZN16Project_InfoViewD1Ev>:

class Project_InfoView : public Project_InfoViewBase
{
public:
    Project_InfoView();
    virtual ~Project_InfoView() {}
 80072a8:	b510      	push	{r4, lr}
 80072aa:	4b03      	ldr	r3, [pc, #12]	; (80072b8 <_ZN16Project_InfoViewD1Ev+0x10>)
 80072ac:	6003      	str	r3, [r0, #0]
 80072ae:	4604      	mov	r4, r0
 80072b0:	f7ff f924 	bl	80064fc <_ZN20Project_InfoViewBaseD1Ev>
 80072b4:	4620      	mov	r0, r4
 80072b6:	bd10      	pop	{r4, pc}
 80072b8:	0802ab60 	.word	0x0802ab60

080072bc <_ZN16Project_InfoViewD0Ev>:
 80072bc:	b510      	push	{r4, lr}
 80072be:	4604      	mov	r4, r0
 80072c0:	f7ff fff2 	bl	80072a8 <_ZN16Project_InfoViewD1Ev>
 80072c4:	4620      	mov	r0, r4
 80072c6:	f241 015c 	movw	r1, #4188	; 0x105c
 80072ca:	f01f f8e0 	bl	802648e <_ZdlPvj>
 80072ce:	4620      	mov	r0, r4
 80072d0:	bd10      	pop	{r4, pc}
	...

080072d4 <_ZN16Project_InfoViewC1Ev>:
Project_InfoView::Project_InfoView()
 80072d4:	b510      	push	{r4, lr}
 80072d6:	4604      	mov	r4, r0
 80072d8:	f7ff f938 	bl	800654c <_ZN20Project_InfoViewBaseC1Ev>
 80072dc:	4b01      	ldr	r3, [pc, #4]	; (80072e4 <_ZN16Project_InfoViewC1Ev+0x10>)
 80072de:	6023      	str	r3, [r4, #0]
}
 80072e0:	4620      	mov	r0, r4
 80072e2:	bd10      	pop	{r4, pc}
 80072e4:	0802ab60 	.word	0x0802ab60

080072e8 <_ZN16Project_InfoView11setupScreenEv>:
    Project_InfoViewBase::setupScreen();
 80072e8:	f7ff b8e4 	b.w	80064b4 <_ZN20Project_InfoViewBase11setupScreenEv>

080072ec <_ZN21Shutting_OffPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Shutting_OffPresenter() {}
 80072ec:	4770      	bx	lr

080072ee <_ZThn4_N21Shutting_OffPresenterD1Ev>:
 80072ee:	3804      	subs	r0, #4
 80072f0:	4770      	bx	lr

080072f2 <_ZN21Shutting_OffPresenter10deactivateEv>:
}

void Shutting_OffPresenter::activate()
{

}
 80072f2:	4770      	bx	lr

080072f4 <_ZN21Shutting_OffPresenter15setTimeoutValueEi>:
}

void Shutting_OffPresenter::setTimeoutValue(int value)
{

}
 80072f4:	4770      	bx	lr

080072f6 <_ZN21Shutting_OffPresenterD0Ev>:
 80072f6:	b510      	push	{r4, lr}
 80072f8:	2110      	movs	r1, #16
 80072fa:	4604      	mov	r4, r0
 80072fc:	f01f f8c7 	bl	802648e <_ZdlPvj>
 8007300:	4620      	mov	r0, r4
 8007302:	bd10      	pop	{r4, pc}

08007304 <_ZThn4_N21Shutting_OffPresenterD0Ev>:
 8007304:	f1a0 0004 	sub.w	r0, r0, #4
 8007308:	e7f5      	b.n	80072f6 <_ZN21Shutting_OffPresenterD0Ev>

0800730a <_ZThn4_N21Shutting_OffPresenter15setTimeoutValueEi>:
 800730a:	4770      	bx	lr

0800730c <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>:
Shutting_OffPresenter::Shutting_OffPresenter(Shutting_OffView& v)
 800730c:	b510      	push	{r4, lr}
 800730e:	2200      	movs	r2, #0
 8007310:	6082      	str	r2, [r0, #8]
    : view(v)
 8007312:	4a04      	ldr	r2, [pc, #16]	; (8007324 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView+0x18>)
 8007314:	60c1      	str	r1, [r0, #12]
 8007316:	f102 0408 	add.w	r4, r2, #8
 800731a:	3224      	adds	r2, #36	; 0x24
 800731c:	6004      	str	r4, [r0, #0]
 800731e:	6042      	str	r2, [r0, #4]
}
 8007320:	bd10      	pop	{r4, pc}
 8007322:	bf00      	nop
 8007324:	0802ab8c 	.word	0x0802ab8c

08007328 <_ZN16Shutting_OffView14tearDownScreenEv>:
}

void Shutting_OffView::tearDownScreen()
{
    Shutting_OffViewBase::tearDownScreen();
}
 8007328:	4770      	bx	lr
	...

0800732c <_ZN16Shutting_OffViewD1Ev>:

class Shutting_OffView : public Shutting_OffViewBase
{
public:
    Shutting_OffView();
    virtual ~Shutting_OffView() {}
 800732c:	b510      	push	{r4, lr}
 800732e:	4b03      	ldr	r3, [pc, #12]	; (800733c <_ZN16Shutting_OffViewD1Ev+0x10>)
 8007330:	6003      	str	r3, [r0, #0]
 8007332:	4604      	mov	r4, r0
 8007334:	f7ff fa6a 	bl	800680c <_ZN20Shutting_OffViewBaseD1Ev>
 8007338:	4620      	mov	r0, r4
 800733a:	bd10      	pop	{r4, pc}
 800733c:	0802abc4 	.word	0x0802abc4

08007340 <_ZN16Shutting_OffViewD0Ev>:
 8007340:	b510      	push	{r4, lr}
 8007342:	4604      	mov	r4, r0
 8007344:	f7ff fff2 	bl	800732c <_ZN16Shutting_OffViewD1Ev>
 8007348:	4620      	mov	r0, r4
 800734a:	2198      	movs	r1, #152	; 0x98
 800734c:	f01f f89f 	bl	802648e <_ZdlPvj>
 8007350:	4620      	mov	r0, r4
 8007352:	bd10      	pop	{r4, pc}

08007354 <_ZN16Shutting_OffViewC1Ev>:
Shutting_OffView::Shutting_OffView()
 8007354:	b510      	push	{r4, lr}
 8007356:	4604      	mov	r4, r0
 8007358:	f7ff fa62 	bl	8006820 <_ZN20Shutting_OffViewBaseC1Ev>
 800735c:	4b01      	ldr	r3, [pc, #4]	; (8007364 <_ZN16Shutting_OffViewC1Ev+0x10>)
 800735e:	6023      	str	r3, [r4, #0]
}
 8007360:	4620      	mov	r0, r4
 8007362:	bd10      	pop	{r4, pc}
 8007364:	0802abc4 	.word	0x0802abc4

08007368 <_ZN16Shutting_OffView11setupScreenEv>:
    Shutting_OffViewBase::setupScreen();
 8007368:	f7ff ba51 	b.w	800680e <_ZN20Shutting_OffViewBase11setupScreenEv>

0800736c <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 800736c:	20f0      	movs	r0, #240	; 0xf0
 800736e:	4770      	bx	lr

08007370 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 8007370:	f44f 70a0 	mov.w	r0, #320	; 0x140
 8007374:	4770      	bx	lr
 8007376:	bf00      	nop

08007378 <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 8007378:	2029      	movs	r0, #41	; 0x29
 800737a:	f7fa bb83 	b.w	8001a84 <LCD_IO_WriteReg>
 800737e:	bf00      	nop

08007380 <ili9341_DisplayOff>:
 8007380:	2028      	movs	r0, #40	; 0x28
 8007382:	f7fa bb7f 	b.w	8001a84 <LCD_IO_WriteReg>
 8007386:	bf00      	nop

08007388 <ili9341_Init>:
{
 8007388:	b508      	push	{r3, lr}
  LCD_IO_Init();
 800738a:	f7fa fb41 	bl	8001a10 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 800738e:	20ca      	movs	r0, #202	; 0xca
 8007390:	f7fa fb78 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007394:	20c3      	movs	r0, #195	; 0xc3
 8007396:	f7fa fb4b 	bl	8001a30 <LCD_IO_WriteData>
 800739a:	2008      	movs	r0, #8
 800739c:	f7fa fb48 	bl	8001a30 <LCD_IO_WriteData>
 80073a0:	2050      	movs	r0, #80	; 0x50
 80073a2:	f7fa fb45 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80073a6:	20cf      	movs	r0, #207	; 0xcf
 80073a8:	f7fa fb6c 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80073ac:	2000      	movs	r0, #0
 80073ae:	f7fa fb3f 	bl	8001a30 <LCD_IO_WriteData>
 80073b2:	20c1      	movs	r0, #193	; 0xc1
 80073b4:	f7fa fb3c 	bl	8001a30 <LCD_IO_WriteData>
 80073b8:	2030      	movs	r0, #48	; 0x30
 80073ba:	f7fa fb39 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80073be:	20ed      	movs	r0, #237	; 0xed
 80073c0:	f7fa fb60 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80073c4:	2064      	movs	r0, #100	; 0x64
 80073c6:	f7fa fb33 	bl	8001a30 <LCD_IO_WriteData>
 80073ca:	2003      	movs	r0, #3
 80073cc:	f7fa fb30 	bl	8001a30 <LCD_IO_WriteData>
 80073d0:	2012      	movs	r0, #18
 80073d2:	f7fa fb2d 	bl	8001a30 <LCD_IO_WriteData>
 80073d6:	2081      	movs	r0, #129	; 0x81
 80073d8:	f7fa fb2a 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80073dc:	20e8      	movs	r0, #232	; 0xe8
 80073de:	f7fa fb51 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80073e2:	2085      	movs	r0, #133	; 0x85
 80073e4:	f7fa fb24 	bl	8001a30 <LCD_IO_WriteData>
 80073e8:	2000      	movs	r0, #0
 80073ea:	f7fa fb21 	bl	8001a30 <LCD_IO_WriteData>
 80073ee:	2078      	movs	r0, #120	; 0x78
 80073f0:	f7fa fb1e 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80073f4:	20cb      	movs	r0, #203	; 0xcb
 80073f6:	f7fa fb45 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80073fa:	2039      	movs	r0, #57	; 0x39
 80073fc:	f7fa fb18 	bl	8001a30 <LCD_IO_WriteData>
 8007400:	202c      	movs	r0, #44	; 0x2c
 8007402:	f7fa fb15 	bl	8001a30 <LCD_IO_WriteData>
 8007406:	2000      	movs	r0, #0
 8007408:	f7fa fb12 	bl	8001a30 <LCD_IO_WriteData>
 800740c:	2034      	movs	r0, #52	; 0x34
 800740e:	f7fa fb0f 	bl	8001a30 <LCD_IO_WriteData>
 8007412:	2002      	movs	r0, #2
 8007414:	f7fa fb0c 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007418:	20f7      	movs	r0, #247	; 0xf7
 800741a:	f7fa fb33 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800741e:	2020      	movs	r0, #32
 8007420:	f7fa fb06 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007424:	20ea      	movs	r0, #234	; 0xea
 8007426:	f7fa fb2d 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800742a:	2000      	movs	r0, #0
 800742c:	f7fa fb00 	bl	8001a30 <LCD_IO_WriteData>
 8007430:	2000      	movs	r0, #0
 8007432:	f7fa fafd 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007436:	20b1      	movs	r0, #177	; 0xb1
 8007438:	f7fa fb24 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800743c:	2000      	movs	r0, #0
 800743e:	f7fa faf7 	bl	8001a30 <LCD_IO_WriteData>
 8007442:	201b      	movs	r0, #27
 8007444:	f7fa faf4 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007448:	20b6      	movs	r0, #182	; 0xb6
 800744a:	f7fa fb1b 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800744e:	200a      	movs	r0, #10
 8007450:	f7fa faee 	bl	8001a30 <LCD_IO_WriteData>
 8007454:	20a2      	movs	r0, #162	; 0xa2
 8007456:	f7fa faeb 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800745a:	20c0      	movs	r0, #192	; 0xc0
 800745c:	f7fa fb12 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007460:	2010      	movs	r0, #16
 8007462:	f7fa fae5 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007466:	20c1      	movs	r0, #193	; 0xc1
 8007468:	f7fa fb0c 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800746c:	2010      	movs	r0, #16
 800746e:	f7fa fadf 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007472:	20c5      	movs	r0, #197	; 0xc5
 8007474:	f7fa fb06 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007478:	2045      	movs	r0, #69	; 0x45
 800747a:	f7fa fad9 	bl	8001a30 <LCD_IO_WriteData>
 800747e:	2015      	movs	r0, #21
 8007480:	f7fa fad6 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007484:	20c7      	movs	r0, #199	; 0xc7
 8007486:	f7fa fafd 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800748a:	2090      	movs	r0, #144	; 0x90
 800748c:	f7fa fad0 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007490:	2036      	movs	r0, #54	; 0x36
 8007492:	f7fa faf7 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007496:	20c8      	movs	r0, #200	; 0xc8
 8007498:	f7fa faca 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800749c:	20f2      	movs	r0, #242	; 0xf2
 800749e:	f7fa faf1 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80074a2:	2000      	movs	r0, #0
 80074a4:	f7fa fac4 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80074a8:	20b0      	movs	r0, #176	; 0xb0
 80074aa:	f7fa faeb 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80074ae:	20c2      	movs	r0, #194	; 0xc2
 80074b0:	f7fa fabe 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80074b4:	20b6      	movs	r0, #182	; 0xb6
 80074b6:	f7fa fae5 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80074ba:	200a      	movs	r0, #10
 80074bc:	f7fa fab8 	bl	8001a30 <LCD_IO_WriteData>
 80074c0:	20a7      	movs	r0, #167	; 0xa7
 80074c2:	f7fa fab5 	bl	8001a30 <LCD_IO_WriteData>
 80074c6:	2027      	movs	r0, #39	; 0x27
 80074c8:	f7fa fab2 	bl	8001a30 <LCD_IO_WriteData>
 80074cc:	2004      	movs	r0, #4
 80074ce:	f7fa faaf 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80074d2:	202a      	movs	r0, #42	; 0x2a
 80074d4:	f7fa fad6 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80074d8:	2000      	movs	r0, #0
 80074da:	f7fa faa9 	bl	8001a30 <LCD_IO_WriteData>
 80074de:	2000      	movs	r0, #0
 80074e0:	f7fa faa6 	bl	8001a30 <LCD_IO_WriteData>
 80074e4:	2000      	movs	r0, #0
 80074e6:	f7fa faa3 	bl	8001a30 <LCD_IO_WriteData>
 80074ea:	20ef      	movs	r0, #239	; 0xef
 80074ec:	f7fa faa0 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80074f0:	202b      	movs	r0, #43	; 0x2b
 80074f2:	f7fa fac7 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80074f6:	2000      	movs	r0, #0
 80074f8:	f7fa fa9a 	bl	8001a30 <LCD_IO_WriteData>
 80074fc:	2000      	movs	r0, #0
 80074fe:	f7fa fa97 	bl	8001a30 <LCD_IO_WriteData>
 8007502:	2001      	movs	r0, #1
 8007504:	f7fa fa94 	bl	8001a30 <LCD_IO_WriteData>
 8007508:	203f      	movs	r0, #63	; 0x3f
 800750a:	f7fa fa91 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800750e:	20f6      	movs	r0, #246	; 0xf6
 8007510:	f7fa fab8 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007514:	2001      	movs	r0, #1
 8007516:	f7fa fa8b 	bl	8001a30 <LCD_IO_WriteData>
 800751a:	2000      	movs	r0, #0
 800751c:	f7fa fa88 	bl	8001a30 <LCD_IO_WriteData>
 8007520:	2006      	movs	r0, #6
 8007522:	f7fa fa85 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007526:	202c      	movs	r0, #44	; 0x2c
 8007528:	f7fa faac 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_Delay(200);
 800752c:	20c8      	movs	r0, #200	; 0xc8
 800752e:	f7fa fb11 	bl	8001b54 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8007532:	2026      	movs	r0, #38	; 0x26
 8007534:	f7fa faa6 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007538:	2001      	movs	r0, #1
 800753a:	f7fa fa79 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800753e:	20e0      	movs	r0, #224	; 0xe0
 8007540:	f7fa faa0 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007544:	200f      	movs	r0, #15
 8007546:	f7fa fa73 	bl	8001a30 <LCD_IO_WriteData>
 800754a:	2029      	movs	r0, #41	; 0x29
 800754c:	f7fa fa70 	bl	8001a30 <LCD_IO_WriteData>
 8007550:	2024      	movs	r0, #36	; 0x24
 8007552:	f7fa fa6d 	bl	8001a30 <LCD_IO_WriteData>
 8007556:	200c      	movs	r0, #12
 8007558:	f7fa fa6a 	bl	8001a30 <LCD_IO_WriteData>
 800755c:	200e      	movs	r0, #14
 800755e:	f7fa fa67 	bl	8001a30 <LCD_IO_WriteData>
 8007562:	2009      	movs	r0, #9
 8007564:	f7fa fa64 	bl	8001a30 <LCD_IO_WriteData>
 8007568:	204e      	movs	r0, #78	; 0x4e
 800756a:	f7fa fa61 	bl	8001a30 <LCD_IO_WriteData>
 800756e:	2078      	movs	r0, #120	; 0x78
 8007570:	f7fa fa5e 	bl	8001a30 <LCD_IO_WriteData>
 8007574:	203c      	movs	r0, #60	; 0x3c
 8007576:	f7fa fa5b 	bl	8001a30 <LCD_IO_WriteData>
 800757a:	2009      	movs	r0, #9
 800757c:	f7fa fa58 	bl	8001a30 <LCD_IO_WriteData>
 8007580:	2013      	movs	r0, #19
 8007582:	f7fa fa55 	bl	8001a30 <LCD_IO_WriteData>
 8007586:	2005      	movs	r0, #5
 8007588:	f7fa fa52 	bl	8001a30 <LCD_IO_WriteData>
 800758c:	2017      	movs	r0, #23
 800758e:	f7fa fa4f 	bl	8001a30 <LCD_IO_WriteData>
 8007592:	2011      	movs	r0, #17
 8007594:	f7fa fa4c 	bl	8001a30 <LCD_IO_WriteData>
 8007598:	2000      	movs	r0, #0
 800759a:	f7fa fa49 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800759e:	20e1      	movs	r0, #225	; 0xe1
 80075a0:	f7fa fa70 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80075a4:	2000      	movs	r0, #0
 80075a6:	f7fa fa43 	bl	8001a30 <LCD_IO_WriteData>
 80075aa:	2016      	movs	r0, #22
 80075ac:	f7fa fa40 	bl	8001a30 <LCD_IO_WriteData>
 80075b0:	201b      	movs	r0, #27
 80075b2:	f7fa fa3d 	bl	8001a30 <LCD_IO_WriteData>
 80075b6:	2004      	movs	r0, #4
 80075b8:	f7fa fa3a 	bl	8001a30 <LCD_IO_WriteData>
 80075bc:	2011      	movs	r0, #17
 80075be:	f7fa fa37 	bl	8001a30 <LCD_IO_WriteData>
 80075c2:	2007      	movs	r0, #7
 80075c4:	f7fa fa34 	bl	8001a30 <LCD_IO_WriteData>
 80075c8:	2031      	movs	r0, #49	; 0x31
 80075ca:	f7fa fa31 	bl	8001a30 <LCD_IO_WriteData>
 80075ce:	2033      	movs	r0, #51	; 0x33
 80075d0:	f7fa fa2e 	bl	8001a30 <LCD_IO_WriteData>
 80075d4:	2042      	movs	r0, #66	; 0x42
 80075d6:	f7fa fa2b 	bl	8001a30 <LCD_IO_WriteData>
 80075da:	2005      	movs	r0, #5
 80075dc:	f7fa fa28 	bl	8001a30 <LCD_IO_WriteData>
 80075e0:	200c      	movs	r0, #12
 80075e2:	f7fa fa25 	bl	8001a30 <LCD_IO_WriteData>
 80075e6:	200a      	movs	r0, #10
 80075e8:	f7fa fa22 	bl	8001a30 <LCD_IO_WriteData>
 80075ec:	2028      	movs	r0, #40	; 0x28
 80075ee:	f7fa fa1f 	bl	8001a30 <LCD_IO_WriteData>
 80075f2:	202f      	movs	r0, #47	; 0x2f
 80075f4:	f7fa fa1c 	bl	8001a30 <LCD_IO_WriteData>
 80075f8:	200f      	movs	r0, #15
 80075fa:	f7fa fa19 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80075fe:	2011      	movs	r0, #17
 8007600:	f7fa fa40 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8007604:	20c8      	movs	r0, #200	; 0xc8
 8007606:	f7fa faa5 	bl	8001b54 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 800760a:	2029      	movs	r0, #41	; 0x29
 800760c:	f7fa fa3a 	bl	8001a84 <LCD_IO_WriteReg>
}
 8007610:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 8007614:	202c      	movs	r0, #44	; 0x2c
 8007616:	f7fa ba35 	b.w	8001a84 <LCD_IO_WriteReg>
 800761a:	bf00      	nop

0800761c <ili9341_ReadID>:
{
 800761c:	b508      	push	{r3, lr}
  LCD_IO_Init();
 800761e:	f7fa f9f7 	bl	8001a10 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 8007622:	2103      	movs	r1, #3
 8007624:	20d3      	movs	r0, #211	; 0xd3
 8007626:	f7fa fa57 	bl	8001ad8 <LCD_IO_ReadData>
}
 800762a:	b280      	uxth	r0, r0
 800762c:	bd08      	pop	{r3, pc}
 800762e:	bf00      	nop

08007630 <stmpe811_TS_ClearIT>:
  * @retval None
  */
void stmpe811_ClearGlobalIT(uint16_t DeviceAddr, uint8_t Source)
{
  /* Write 1 to the bits that have to be cleared */
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 8007630:	221f      	movs	r2, #31
 8007632:	210b      	movs	r1, #11
 8007634:	b2c0      	uxtb	r0, r0
 8007636:	f7fa b99d 	b.w	8001974 <IOE_Write>
 800763a:	bf00      	nop

0800763c <stmpe811_Reset>:
{
 800763c:	b510      	push	{r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 800763e:	b2c4      	uxtb	r4, r0
 8007640:	2202      	movs	r2, #2
 8007642:	2103      	movs	r1, #3
 8007644:	4620      	mov	r0, r4
 8007646:	f7fa f995 	bl	8001974 <IOE_Write>
  IOE_Delay(10); 
 800764a:	200a      	movs	r0, #10
 800764c:	f7fa f9de 	bl	8001a0c <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8007650:	4620      	mov	r0, r4
 8007652:	2200      	movs	r2, #0
 8007654:	2103      	movs	r1, #3
 8007656:	f7fa f98d 	bl	8001974 <IOE_Write>
}
 800765a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 800765e:	2002      	movs	r0, #2
 8007660:	f7fa b9d4 	b.w	8001a0c <IOE_Delay>

08007664 <stmpe811_ReadID>:
{
 8007664:	b510      	push	{r4, lr}
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8007666:	b2c4      	uxtb	r4, r0
  IOE_Init(); 
 8007668:	f7fa f980 	bl	800196c <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800766c:	2100      	movs	r1, #0
 800766e:	4620      	mov	r0, r4
 8007670:	f7fa f998 	bl	80019a4 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8007674:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8007676:	4603      	mov	r3, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8007678:	4620      	mov	r0, r4
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800767a:	461c      	mov	r4, r3
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 800767c:	f7fa f992 	bl	80019a4 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8007680:	ea40 2004 	orr.w	r0, r0, r4, lsl #8
}
 8007684:	b280      	uxth	r0, r0
 8007686:	bd10      	pop	{r4, pc}

08007688 <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 8007688:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 800768a:	b2c4      	uxtb	r4, r0
 800768c:	2140      	movs	r1, #64	; 0x40
 800768e:	4620      	mov	r0, r4
 8007690:	f7fa f988 	bl	80019a4 <IOE_Read>
  
  if(state > 0)
 8007694:	0603      	lsls	r3, r0, #24
 8007696:	d40b      	bmi.n	80076b0 <stmpe811_TS_DetectTouch+0x28>
    }
  }
  else
  {
    /* Reset FIFO */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8007698:	4620      	mov	r0, r4
 800769a:	2201      	movs	r2, #1
 800769c:	214b      	movs	r1, #75	; 0x4b
 800769e:	f7fa f969 	bl	8001974 <IOE_Write>
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 80076a2:	4620      	mov	r0, r4
 80076a4:	2200      	movs	r2, #0
 80076a6:	214b      	movs	r1, #75	; 0x4b
 80076a8:	f7fa f964 	bl	8001974 <IOE_Write>
  uint8_t ret = 0;
 80076ac:	2000      	movs	r0, #0
  }
  
  return ret;
}
 80076ae:	bd10      	pop	{r4, pc}
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 80076b0:	214c      	movs	r1, #76	; 0x4c
 80076b2:	4620      	mov	r0, r4
 80076b4:	f7fa f976 	bl	80019a4 <IOE_Read>
      ret = 1;
 80076b8:	3800      	subs	r0, #0
 80076ba:	bf18      	it	ne
 80076bc:	2001      	movne	r0, #1
}
 80076be:	bd10      	pop	{r4, pc}

080076c0 <stmpe811_TS_ITStatus>:
  * @brief  Configure the selected source to generate a global interrupt or not
  * @param  DeviceAddr: Device address on communication Bus.    
  * @retval TS interrupts status
  */
uint8_t stmpe811_TS_ITStatus(uint16_t DeviceAddr)
{
 80076c0:	b508      	push	{r3, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 80076c2:	210b      	movs	r1, #11
 80076c4:	b2c0      	uxtb	r0, r0
 80076c6:	f7fa f96d 	bl	80019a4 <IOE_Read>
  /* Return TS interrupts status */
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
}
 80076ca:	f000 001f 	and.w	r0, r0, #31
 80076ce:	bd08      	pop	{r3, pc}

080076d0 <stmpe811_TS_GetXY>:
{
 80076d0:	b570      	push	{r4, r5, r6, lr}
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 80076d2:	2304      	movs	r3, #4
{
 80076d4:	b082      	sub	sp, #8
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 80076d6:	b2c4      	uxtb	r4, r0
{
 80076d8:	4615      	mov	r5, r2
 80076da:	460e      	mov	r6, r1
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 80076dc:	eb0d 0203 	add.w	r2, sp, r3
 80076e0:	21d7      	movs	r1, #215	; 0xd7
 80076e2:	4620      	mov	r0, r4
 80076e4:	f7fa f97a 	bl	80019dc <IOE_ReadMultiple>
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 80076e8:	9b01      	ldr	r3, [sp, #4]
 80076ea:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 80076ec:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 80076ee:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 80076f2:	8032      	strh	r2, [r6, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 80076f4:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 80076f6:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 80076f8:	2201      	movs	r2, #1
 80076fa:	214b      	movs	r1, #75	; 0x4b
 80076fc:	f7fa f93a 	bl	8001974 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8007700:	2200      	movs	r2, #0
 8007702:	214b      	movs	r1, #75	; 0x4b
 8007704:	4620      	mov	r0, r4
 8007706:	f7fa f935 	bl	8001974 <IOE_Write>
}
 800770a:	b002      	add	sp, #8
 800770c:	bd70      	pop	{r4, r5, r6, pc}
 800770e:	bf00      	nop

08007710 <stmpe811_TS_Start>:
{
 8007710:	b538      	push	{r3, r4, r5, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8007712:	b2c4      	uxtb	r4, r0
 8007714:	2104      	movs	r1, #4
 8007716:	4620      	mov	r0, r4
 8007718:	f7fa f944 	bl	80019a4 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 800771c:	2104      	movs	r1, #4
 800771e:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8007722:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8007724:	4620      	mov	r0, r4
 8007726:	f7fa f925 	bl	8001974 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 800772a:	2117      	movs	r1, #23
 800772c:	4620      	mov	r0, r4
 800772e:	f7fa f939 	bl	80019a4 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8007732:	2117      	movs	r1, #23
 8007734:	f000 020f 	and.w	r2, r0, #15
 8007738:	4620      	mov	r0, r4
 800773a:	f7fa f91b 	bl	8001974 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 800773e:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 8007742:	4620      	mov	r0, r4
 8007744:	2104      	movs	r1, #4
 8007746:	f7fa f915 	bl	8001974 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 800774a:	2249      	movs	r2, #73	; 0x49
 800774c:	2120      	movs	r1, #32
 800774e:	4620      	mov	r0, r4
 8007750:	f7fa f910 	bl	8001974 <IOE_Write>
  IOE_Delay(2); 
 8007754:	2002      	movs	r0, #2
 8007756:	f7fa f959 	bl	8001a0c <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 800775a:	4620      	mov	r0, r4
 800775c:	2201      	movs	r2, #1
 800775e:	2121      	movs	r1, #33	; 0x21
 8007760:	f7fa f908 	bl	8001974 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 8007764:	4620      	mov	r0, r4
 8007766:	229a      	movs	r2, #154	; 0x9a
 8007768:	2141      	movs	r1, #65	; 0x41
 800776a:	f7fa f903 	bl	8001974 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 800776e:	4620      	mov	r0, r4
 8007770:	2201      	movs	r2, #1
 8007772:	214a      	movs	r1, #74	; 0x4a
 8007774:	f7fa f8fe 	bl	8001974 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8007778:	4620      	mov	r0, r4
 800777a:	2201      	movs	r2, #1
 800777c:	214b      	movs	r1, #75	; 0x4b
 800777e:	f7fa f8f9 	bl	8001974 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8007782:	4620      	mov	r0, r4
 8007784:	2200      	movs	r2, #0
 8007786:	214b      	movs	r1, #75	; 0x4b
 8007788:	f7fa f8f4 	bl	8001974 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 800778c:	4620      	mov	r0, r4
 800778e:	2201      	movs	r2, #1
 8007790:	2156      	movs	r1, #86	; 0x56
 8007792:	f7fa f8ef 	bl	8001974 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 8007796:	4620      	mov	r0, r4
 8007798:	2201      	movs	r2, #1
 800779a:	2158      	movs	r1, #88	; 0x58
 800779c:	f7fa f8ea 	bl	8001974 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 80077a0:	4620      	mov	r0, r4
 80077a2:	2201      	movs	r2, #1
 80077a4:	2140      	movs	r1, #64	; 0x40
 80077a6:	f7fa f8e5 	bl	8001974 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 80077aa:	4620      	mov	r0, r4
 80077ac:	22ff      	movs	r2, #255	; 0xff
 80077ae:	210b      	movs	r1, #11
 80077b0:	f7fa f8e0 	bl	8001974 <IOE_Write>
}
 80077b4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Delay(2); 
 80077b8:	2002      	movs	r0, #2
 80077ba:	f7fa b927 	b.w	8001a0c <IOE_Delay>
 80077be:	bf00      	nop

080077c0 <stmpe811_TS_DisableIT>:
{
 80077c0:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 80077c2:	b2c4      	uxtb	r4, r0
 80077c4:	2109      	movs	r1, #9
 80077c6:	4620      	mov	r0, r4
 80077c8:	f7fa f8ec 	bl	80019a4 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 80077cc:	2109      	movs	r1, #9
 80077ce:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 80077d2:	4620      	mov	r0, r4
 80077d4:	f7fa f8ce 	bl	8001974 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80077d8:	210a      	movs	r1, #10
 80077da:	4620      	mov	r0, r4
 80077dc:	f7fa f8e2 	bl	80019a4 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80077e0:	210a      	movs	r1, #10
 80077e2:	f000 02e0 	and.w	r2, r0, #224	; 0xe0
 80077e6:	4620      	mov	r0, r4
}
 80077e8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80077ec:	f7fa b8c2 	b.w	8001974 <IOE_Write>

080077f0 <stmpe811_TS_EnableIT>:
{
 80077f0:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80077f2:	b2c4      	uxtb	r4, r0
  IOE_ITConfig();
 80077f4:	f7fa f8bc 	bl	8001970 <IOE_ITConfig>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80077f8:	210a      	movs	r1, #10
 80077fa:	4620      	mov	r0, r4
 80077fc:	f7fa f8d2 	bl	80019a4 <IOE_Read>
  tmp |= Source; 
 8007800:	f040 001f 	orr.w	r0, r0, #31
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8007804:	b2c2      	uxtb	r2, r0
 8007806:	210a      	movs	r1, #10
 8007808:	4620      	mov	r0, r4
 800780a:	f7fa f8b3 	bl	8001974 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 800780e:	2109      	movs	r1, #9
 8007810:	4620      	mov	r0, r4
 8007812:	f7fa f8c7 	bl	80019a4 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 8007816:	f040 0001 	orr.w	r0, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 800781a:	b2c2      	uxtb	r2, r0
 800781c:	2109      	movs	r1, #9
 800781e:	4620      	mov	r0, r4
}
 8007820:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8007824:	f7fa b8a6 	b.w	8001974 <IOE_Write>

08007828 <stmpe811_Init>:
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 8007828:	4a10      	ldr	r2, [pc, #64]	; (800786c <stmpe811_Init+0x44>)
 800782a:	7813      	ldrb	r3, [r2, #0]
 800782c:	4298      	cmp	r0, r3
 800782e:	d004      	beq.n	800783a <stmpe811_Init+0x12>
 8007830:	7851      	ldrb	r1, [r2, #1]
 8007832:	4288      	cmp	r0, r1
 8007834:	d001      	beq.n	800783a <stmpe811_Init+0x12>
 8007836:	b113      	cbz	r3, 800783e <stmpe811_Init+0x16>
 8007838:	b101      	cbz	r1, 800783c <stmpe811_Init+0x14>
 800783a:	4770      	bx	lr
 800783c:	2301      	movs	r3, #1
{
 800783e:	b510      	push	{r4, lr}
      stmpe811[empty] = DeviceAddr;
 8007840:	b2c4      	uxtb	r4, r0
 8007842:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 8007844:	f7fa f892 	bl	800196c <IOE_Init>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8007848:	2202      	movs	r2, #2
 800784a:	2103      	movs	r1, #3
 800784c:	4620      	mov	r0, r4
 800784e:	f7fa f891 	bl	8001974 <IOE_Write>
  IOE_Delay(10); 
 8007852:	200a      	movs	r0, #10
 8007854:	f7fa f8da 	bl	8001a0c <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8007858:	4620      	mov	r0, r4
 800785a:	2200      	movs	r2, #0
 800785c:	2103      	movs	r1, #3
 800785e:	f7fa f889 	bl	8001974 <IOE_Write>
}
 8007862:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8007866:	2002      	movs	r0, #2
 8007868:	f7fa b8d0 	b.w	8001a0c <IOE_Delay>
 800786c:	200029bc 	.word	0x200029bc

08007870 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8007870:	4b05      	ldr	r3, [pc, #20]	; (8007888 <SystemInit+0x18>)
 8007872:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8007876:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800787a:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 800787e:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8007882:	6099      	str	r1, [r3, #8]
#endif
}
 8007884:	4770      	bx	lr
 8007886:	bf00      	nop
 8007888:	e000ed00 	.word	0xe000ed00

0800788c <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 800788c:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 800788e:	4b0b      	ldr	r3, [pc, #44]	; (80078bc <HAL_Init+0x30>)
 8007890:	681a      	ldr	r2, [r3, #0]
 8007892:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8007896:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8007898:	681a      	ldr	r2, [r3, #0]
 800789a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800789e:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 80078a0:	681a      	ldr	r2, [r3, #0]
 80078a2:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80078a6:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 80078a8:	2003      	movs	r0, #3
 80078aa:	f000 f82d 	bl	8007908 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 80078ae:	2000      	movs	r0, #0
 80078b0:	f7fa fbde 	bl	8002070 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 80078b4:	f7fa f95c 	bl	8001b70 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 80078b8:	2000      	movs	r0, #0
 80078ba:	bd08      	pop	{r3, pc}
 80078bc:	40023c00 	.word	0x40023c00

080078c0 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 80078c0:	4a03      	ldr	r2, [pc, #12]	; (80078d0 <HAL_IncTick+0x10>)
 80078c2:	4b04      	ldr	r3, [pc, #16]	; (80078d4 <HAL_IncTick+0x14>)
 80078c4:	6811      	ldr	r1, [r2, #0]
 80078c6:	781b      	ldrb	r3, [r3, #0]
 80078c8:	440b      	add	r3, r1
 80078ca:	6013      	str	r3, [r2, #0]
}
 80078cc:	4770      	bx	lr
 80078ce:	bf00      	nop
 80078d0:	200029c0 	.word	0x200029c0
 80078d4:	2000007c 	.word	0x2000007c

080078d8 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 80078d8:	4b01      	ldr	r3, [pc, #4]	; (80078e0 <HAL_GetTick+0x8>)
 80078da:	6818      	ldr	r0, [r3, #0]
}
 80078dc:	4770      	bx	lr
 80078de:	bf00      	nop
 80078e0:	200029c0 	.word	0x200029c0

080078e4 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 80078e4:	b538      	push	{r3, r4, r5, lr}
 80078e6:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 80078e8:	f7ff fff6 	bl	80078d8 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 80078ec:	1c63      	adds	r3, r4, #1
  uint32_t tickstart = HAL_GetTick();
 80078ee:	4605      	mov	r5, r0
  if (wait < HAL_MAX_DELAY)
 80078f0:	d002      	beq.n	80078f8 <HAL_Delay+0x14>
  {
    wait += (uint32_t)(uwTickFreq);
 80078f2:	4b04      	ldr	r3, [pc, #16]	; (8007904 <HAL_Delay+0x20>)
 80078f4:	781b      	ldrb	r3, [r3, #0]
 80078f6:	441c      	add	r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 80078f8:	f7ff ffee 	bl	80078d8 <HAL_GetTick>
 80078fc:	1b43      	subs	r3, r0, r5
 80078fe:	42a3      	cmp	r3, r4
 8007900:	d3fa      	bcc.n	80078f8 <HAL_Delay+0x14>
  {
  }
}
 8007902:	bd38      	pop	{r3, r4, r5, pc}
 8007904:	2000007c 	.word	0x2000007c

08007908 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8007908:	4907      	ldr	r1, [pc, #28]	; (8007928 <HAL_NVIC_SetPriorityGrouping+0x20>)
 800790a:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800790c:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800790e:	f64f 00ff 	movw	r0, #63743	; 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8007912:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8007916:	4002      	ands	r2, r0
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8007918:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 800791a:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 800791e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 8007922:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8007924:	4770      	bx	lr
 8007926:	bf00      	nop
 8007928:	e000ed00 	.word	0xe000ed00

0800792c <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 800792c:	4b1c      	ldr	r3, [pc, #112]	; (80079a0 <HAL_NVIC_SetPriority+0x74>)
 800792e:	68db      	ldr	r3, [r3, #12]
 8007930:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8007934:	b500      	push	{lr}
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8007936:	f1c3 0e07 	rsb	lr, r3, #7
 800793a:	f1be 0f04 	cmp.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800793e:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8007942:	bf28      	it	cs
 8007944:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8007948:	f1bc 0f06 	cmp.w	ip, #6
 800794c:	d91b      	bls.n	8007986 <HAL_NVIC_SetPriority+0x5a>
 800794e:	3b03      	subs	r3, #3

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8007950:	f04f 3cff 	mov.w	ip, #4294967295
 8007954:	fa0c fc03 	lsl.w	ip, ip, r3
 8007958:	ea22 020c 	bic.w	r2, r2, ip
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800795c:	f04f 3cff 	mov.w	ip, #4294967295
 8007960:	fa0c fc0e 	lsl.w	ip, ip, lr
 8007964:	ea21 010c 	bic.w	r1, r1, ip
 8007968:	4099      	lsls	r1, r3
  if ((int32_t)(IRQn) >= 0)
 800796a:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800796c:	ea41 0102 	orr.w	r1, r1, r2
  if ((int32_t)(IRQn) >= 0)
 8007970:	db0c      	blt.n	800798c <HAL_NVIC_SetPriority+0x60>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8007972:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 8007976:	0109      	lsls	r1, r1, #4
 8007978:	f500 4061 	add.w	r0, r0, #57600	; 0xe100
 800797c:	b2c9      	uxtb	r1, r1
 800797e:	f880 1300 	strb.w	r1, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8007982:	f85d fb04 	ldr.w	pc, [sp], #4
 8007986:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8007988:	4613      	mov	r3, r2
 800798a:	e7e7      	b.n	800795c <HAL_NVIC_SetPriority+0x30>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800798c:	4b05      	ldr	r3, [pc, #20]	; (80079a4 <HAL_NVIC_SetPriority+0x78>)
 800798e:	f000 000f 	and.w	r0, r0, #15
 8007992:	0109      	lsls	r1, r1, #4
 8007994:	4403      	add	r3, r0
 8007996:	b2c9      	uxtb	r1, r1
 8007998:	7619      	strb	r1, [r3, #24]
 800799a:	f85d fb04 	ldr.w	pc, [sp], #4
 800799e:	bf00      	nop
 80079a0:	e000ed00 	.word	0xe000ed00
 80079a4:	e000ecfc 	.word	0xe000ecfc

080079a8 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 80079a8:	2800      	cmp	r0, #0
 80079aa:	db07      	blt.n	80079bc <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80079ac:	0941      	lsrs	r1, r0, #5
 80079ae:	4a04      	ldr	r2, [pc, #16]	; (80079c0 <HAL_NVIC_EnableIRQ+0x18>)
 80079b0:	f000 001f 	and.w	r0, r0, #31
 80079b4:	2301      	movs	r3, #1
 80079b6:	4083      	lsls	r3, r0
 80079b8:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 80079bc:	4770      	bx	lr
 80079be:	bf00      	nop
 80079c0:	e000e100 	.word	0xe000e100

080079c4 <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 80079c4:	b180      	cbz	r0, 80079e8 <HAL_CRC_Init+0x24>
{
 80079c6:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 80079c8:	7943      	ldrb	r3, [r0, #5]
 80079ca:	4604      	mov	r4, r0
 80079cc:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80079d0:	b11b      	cbz	r3, 80079da <HAL_CRC_Init+0x16>
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 80079d2:	2301      	movs	r3, #1
 80079d4:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 80079d6:	2000      	movs	r0, #0
}
 80079d8:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
 80079da:	7102      	strb	r2, [r0, #4]
    HAL_CRC_MspInit(hcrc);
 80079dc:	f7fa f8e8 	bl	8001bb0 <HAL_CRC_MspInit>
  hcrc->State = HAL_CRC_STATE_READY;
 80079e0:	2301      	movs	r3, #1
 80079e2:	7163      	strb	r3, [r4, #5]
  return HAL_OK;
 80079e4:	2000      	movs	r0, #0
}
 80079e6:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80079e8:	2001      	movs	r0, #1
}
 80079ea:	4770      	bx	lr

080079ec <HAL_DMA_Abort_IT>:
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
  if(hdma->State != HAL_DMA_STATE_BUSY)
 80079ec:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 80079f0:	2b02      	cmp	r3, #2
 80079f2:	d003      	beq.n	80079fc <HAL_DMA_Abort_IT+0x10>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 80079f4:	2380      	movs	r3, #128	; 0x80
 80079f6:	6543      	str	r3, [r0, #84]	; 0x54
    return HAL_ERROR;
 80079f8:	2001      	movs	r0, #1
 80079fa:	4770      	bx	lr
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 80079fc:	6802      	ldr	r2, [r0, #0]
    hdma->State = HAL_DMA_STATE_ABORT;
 80079fe:	2305      	movs	r3, #5
 8007a00:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
    __HAL_DMA_DISABLE(hdma);
 8007a04:	6813      	ldr	r3, [r2, #0]
 8007a06:	f023 0301 	bic.w	r3, r3, #1
  }

  return HAL_OK;
 8007a0a:	2000      	movs	r0, #0
    __HAL_DMA_DISABLE(hdma);
 8007a0c:	6013      	str	r3, [r2, #0]
}
 8007a0e:	4770      	bx	lr

08007a10 <HAL_DMA_GetState>:
  *               the configuration information for the specified DMA Stream.
  * @retval HAL state
  */
HAL_DMA_StateTypeDef HAL_DMA_GetState(DMA_HandleTypeDef *hdma)
{
  return hdma->State;
 8007a10:	f890 0035 	ldrb.w	r0, [r0, #53]	; 0x35
}
 8007a14:	4770      	bx	lr
 8007a16:	bf00      	nop

08007a18 <HAL_DMA2D_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 8007a18:	b348      	cbz	r0, 8007a6e <HAL_DMA2D_Init+0x56>
{
 8007a1a:	b510      	push	{r4, lr}

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 8007a1c:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8007a20:	4604      	mov	r4, r0
 8007a22:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8007a26:	b1eb      	cbz	r3, 8007a64 <HAL_DMA2D_Init+0x4c>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8007a28:	6822      	ldr	r2, [r4, #0]
 8007a2a:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8007a2c:	2302      	movs	r3, #2
 8007a2e:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8007a32:	6813      	ldr	r3, [r2, #0]
 8007a34:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8007a38:	430b      	orrs	r3, r1
 8007a3a:	6013      	str	r3, [r2, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8007a3c:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8007a3e:	68a1      	ldr	r1, [r4, #8]
 8007a40:	f023 0307 	bic.w	r3, r3, #7
 8007a44:	430b      	orrs	r3, r1
 8007a46:	6353      	str	r3, [r2, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8007a48:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8007a4a:	68e1      	ldr	r1, [r4, #12]
 8007a4c:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8007a50:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8007a54:	430b      	orrs	r3, r1
 8007a56:	6413      	str	r3, [r2, #64]	; 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8007a58:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8007a5a:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8007a5c:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8007a5e:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

  return HAL_OK;
}
 8007a62:	bd10      	pop	{r4, pc}
    hdma2d->Lock = HAL_UNLOCKED;
 8007a64:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    HAL_DMA2D_MspInit(hdma2d);
 8007a68:	f7fa f8bc 	bl	8001be4 <HAL_DMA2D_MspInit>
 8007a6c:	e7dc      	b.n	8007a28 <HAL_DMA2D_Init+0x10>
    return HAL_ERROR;
 8007a6e:	2001      	movs	r0, #1
}
 8007a70:	4770      	bx	lr
 8007a72:	bf00      	nop

08007a74 <HAL_DMA2D_LineEventCallback>:
 8007a74:	4770      	bx	lr
 8007a76:	bf00      	nop

08007a78 <HAL_DMA2D_CLUTLoadingCpltCallback>:
 8007a78:	4770      	bx	lr
 8007a7a:	bf00      	nop

08007a7c <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8007a7c:	6803      	ldr	r3, [r0, #0]
{
 8007a7e:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8007a80:	685d      	ldr	r5, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 8007a82:	681e      	ldr	r6, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8007a84:	07ea      	lsls	r2, r5, #31
{
 8007a86:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8007a88:	d501      	bpl.n	8007a8e <HAL_DMA2D_IRQHandler+0x12>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 8007a8a:	05f1      	lsls	r1, r6, #23
 8007a8c:	d457      	bmi.n	8007b3e <HAL_DMA2D_IRQHandler+0xc2>
        hdma2d->XferErrorCallback(hdma2d);
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 8007a8e:	06aa      	lsls	r2, r5, #26
 8007a90:	d501      	bpl.n	8007a96 <HAL_DMA2D_IRQHandler+0x1a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 8007a92:	04b3      	lsls	r3, r6, #18
 8007a94:	d43c      	bmi.n	8007b10 <HAL_DMA2D_IRQHandler+0x94>
        hdma2d->XferErrorCallback(hdma2d);
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8007a96:	0728      	lsls	r0, r5, #28
 8007a98:	d501      	bpl.n	8007a9e <HAL_DMA2D_IRQHandler+0x22>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8007a9a:	0531      	lsls	r1, r6, #20
 8007a9c:	d421      	bmi.n	8007ae2 <HAL_DMA2D_IRQHandler+0x66>
        hdma2d->XferErrorCallback(hdma2d);
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8007a9e:	076a      	lsls	r2, r5, #29
 8007aa0:	d501      	bpl.n	8007aa6 <HAL_DMA2D_IRQHandler+0x2a>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 8007aa2:	0573      	lsls	r3, r6, #21
 8007aa4:	d473      	bmi.n	8007b8e <HAL_DMA2D_IRQHandler+0x112>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8007aa6:	07a8      	lsls	r0, r5, #30
 8007aa8:	d501      	bpl.n	8007aae <HAL_DMA2D_IRQHandler+0x32>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 8007aaa:	05b1      	lsls	r1, r6, #22
 8007aac:	d404      	bmi.n	8007ab8 <HAL_DMA2D_IRQHandler+0x3c>
        hdma2d->XferCpltCallback(hdma2d);
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 8007aae:	06ea      	lsls	r2, r5, #27
 8007ab0:	d501      	bpl.n	8007ab6 <HAL_DMA2D_IRQHandler+0x3a>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8007ab2:	04f3      	lsls	r3, r6, #19
 8007ab4:	d458      	bmi.n	8007b68 <HAL_DMA2D_IRQHandler+0xec>
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 8007ab6:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 8007ab8:	6823      	ldr	r3, [r4, #0]
 8007aba:	681a      	ldr	r2, [r3, #0]
 8007abc:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8007ac0:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8007ac2:	2202      	movs	r2, #2
 8007ac4:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8007ac6:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8007ac8:	63e2      	str	r2, [r4, #60]	; 0x3c
      if (hdma2d->XferCpltCallback != NULL)
 8007aca:	6923      	ldr	r3, [r4, #16]
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8007acc:	2201      	movs	r2, #1
 8007ace:	f884 2039 	strb.w	r2, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8007ad2:	2200      	movs	r2, #0
 8007ad4:	f884 2038 	strb.w	r2, [r4, #56]	; 0x38
      if (hdma2d->XferCpltCallback != NULL)
 8007ad8:	2b00      	cmp	r3, #0
 8007ada:	d0e8      	beq.n	8007aae <HAL_DMA2D_IRQHandler+0x32>
        hdma2d->XferCpltCallback(hdma2d);
 8007adc:	4620      	mov	r0, r4
 8007ade:	4798      	blx	r3
 8007ae0:	e7e5      	b.n	8007aae <HAL_DMA2D_IRQHandler+0x32>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 8007ae2:	6823      	ldr	r3, [r4, #0]
 8007ae4:	681a      	ldr	r2, [r3, #0]
 8007ae6:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8007aea:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8007aec:	2208      	movs	r2, #8
 8007aee:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8007af0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
      if (hdma2d->XferErrorCallback != NULL)
 8007af2:	6962      	ldr	r2, [r4, #20]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8007af4:	f043 0304 	orr.w	r3, r3, #4
 8007af8:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8007afa:	2104      	movs	r1, #4
      __HAL_UNLOCK(hdma2d);
 8007afc:	2300      	movs	r3, #0
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8007afe:	f884 1039 	strb.w	r1, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8007b02:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      if (hdma2d->XferErrorCallback != NULL)
 8007b06:	2a00      	cmp	r2, #0
 8007b08:	d0c9      	beq.n	8007a9e <HAL_DMA2D_IRQHandler+0x22>
        hdma2d->XferErrorCallback(hdma2d);
 8007b0a:	4620      	mov	r0, r4
 8007b0c:	4790      	blx	r2
 8007b0e:	e7c6      	b.n	8007a9e <HAL_DMA2D_IRQHandler+0x22>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 8007b10:	6823      	ldr	r3, [r4, #0]
 8007b12:	681a      	ldr	r2, [r3, #0]
 8007b14:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8007b18:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 8007b1a:	2220      	movs	r2, #32
 8007b1c:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8007b1e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
      if (hdma2d->XferErrorCallback != NULL)
 8007b20:	6962      	ldr	r2, [r4, #20]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8007b22:	f043 0302 	orr.w	r3, r3, #2
 8007b26:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8007b28:	2104      	movs	r1, #4
      __HAL_UNLOCK(hdma2d);
 8007b2a:	2300      	movs	r3, #0
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8007b2c:	f884 1039 	strb.w	r1, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8007b30:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      if (hdma2d->XferErrorCallback != NULL)
 8007b34:	2a00      	cmp	r2, #0
 8007b36:	d0ae      	beq.n	8007a96 <HAL_DMA2D_IRQHandler+0x1a>
        hdma2d->XferErrorCallback(hdma2d);
 8007b38:	4620      	mov	r0, r4
 8007b3a:	4790      	blx	r2
 8007b3c:	e7ab      	b.n	8007a96 <HAL_DMA2D_IRQHandler+0x1a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 8007b3e:	681a      	ldr	r2, [r3, #0]
 8007b40:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8007b44:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 8007b46:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 8007b48:	2101      	movs	r1, #1
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 8007b4a:	f042 0201 	orr.w	r2, r2, #1
 8007b4e:	63c2      	str	r2, [r0, #60]	; 0x3c
      if (hdma2d->XferErrorCallback != NULL)
 8007b50:	6942      	ldr	r2, [r0, #20]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 8007b52:	6099      	str	r1, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8007b54:	2304      	movs	r3, #4
 8007b56:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8007b5a:	2300      	movs	r3, #0
 8007b5c:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
      if (hdma2d->XferErrorCallback != NULL)
 8007b60:	2a00      	cmp	r2, #0
 8007b62:	d094      	beq.n	8007a8e <HAL_DMA2D_IRQHandler+0x12>
        hdma2d->XferErrorCallback(hdma2d);
 8007b64:	4790      	blx	r2
 8007b66:	e792      	b.n	8007a8e <HAL_DMA2D_IRQHandler+0x12>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8007b68:	6823      	ldr	r3, [r4, #0]
 8007b6a:	681a      	ldr	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8007b6c:	2010      	movs	r0, #16
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8007b6e:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8007b72:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8007b74:	6098      	str	r0, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8007b76:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8007b78:	63e2      	str	r2, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8007b7a:	2101      	movs	r1, #1
      __HAL_UNLOCK(hdma2d);
 8007b7c:	2300      	movs	r3, #0
 8007b7e:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8007b82:	f884 1039 	strb.w	r1, [r4, #57]	; 0x39
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8007b86:	4620      	mov	r0, r4
 8007b88:	f7ff ff76 	bl	8007a78 <HAL_DMA2D_CLUTLoadingCpltCallback>
}
 8007b8c:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8007b8e:	6823      	ldr	r3, [r4, #0]
 8007b90:	681a      	ldr	r2, [r3, #0]
 8007b92:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8007b96:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8007b98:	2204      	movs	r2, #4
 8007b9a:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
 8007b9c:	4620      	mov	r0, r4
 8007b9e:	f7ff ff69 	bl	8007a74 <HAL_DMA2D_LineEventCallback>
 8007ba2:	e780      	b.n	8007aa6 <HAL_DMA2D_IRQHandler+0x2a>

08007ba4 <HAL_DMA2D_ConfigLayer>:
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 8007ba4:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 8007ba8:	2b01      	cmp	r3, #1
 8007baa:	d04d      	beq.n	8007c48 <HAL_DMA2D_ConfigLayer+0xa4>
 8007bac:	2201      	movs	r2, #1

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8007bae:	2302      	movs	r3, #2
{
 8007bb0:	b470      	push	{r4, r5, r6}

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8007bb2:	eb00 1c01 	add.w	ip, r0, r1, lsl #4
  __HAL_LOCK(hdma2d);
 8007bb6:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8007bba:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8007bbe:	e9dc 2307 	ldrd	r2, r3, [ip, #28]
 8007bc2:	ea42 4303 	orr.w	r3, r2, r3, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8007bc6:	3a09      	subs	r2, #9
 8007bc8:	2a01      	cmp	r2, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 8007bca:	f8dc 2024 	ldr.w	r2, [ip, #36]	; 0x24
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8007bce:	d91d      	bls.n	8007c0c <HAL_DMA2D_ConfigLayer+0x68>
  }
  else
  {
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 8007bd0:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
  }

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 8007bd4:	b189      	cbz	r1, 8007bfa <HAL_DMA2D_ConfigLayer+0x56>
  else
  {


    /* Write DMA2D FGPFCCR register */
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8007bd6:	6801      	ldr	r1, [r0, #0]
 8007bd8:	4a1c      	ldr	r2, [pc, #112]	; (8007c4c <HAL_DMA2D_ConfigLayer+0xa8>)
 8007bda:	69cd      	ldr	r5, [r1, #28]

    /* DMA2D FGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8007bdc:	f8dc 4018 	ldr.w	r4, [ip, #24]
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8007be0:	402a      	ands	r2, r5
 8007be2:	431a      	orrs	r2, r3
 8007be4:	61ca      	str	r2, [r1, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8007be6:	610c      	str	r4, [r1, #16]
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 8007be8:	2300      	movs	r3, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8007bea:	2201      	movs	r2, #1
 8007bec:	f880 2039 	strb.w	r2, [r0, #57]	; 0x39
  __HAL_UNLOCK(hdma2d);
 8007bf0:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38

  return HAL_OK;
}
 8007bf4:	bc70      	pop	{r4, r5, r6}
  return HAL_OK;
 8007bf6:	4618      	mov	r0, r3
}
 8007bf8:	4770      	bx	lr
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8007bfa:	6801      	ldr	r1, [r0, #0]
 8007bfc:	4a13      	ldr	r2, [pc, #76]	; (8007c4c <HAL_DMA2D_ConfigLayer+0xa8>)
 8007bfe:	6a4c      	ldr	r4, [r1, #36]	; 0x24
 8007c00:	4022      	ands	r2, r4
 8007c02:	431a      	orrs	r2, r3
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8007c04:	6984      	ldr	r4, [r0, #24]
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8007c06:	624a      	str	r2, [r1, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8007c08:	618c      	str	r4, [r1, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8007c0a:	e7ed      	b.n	8007be8 <HAL_DMA2D_ConfigLayer+0x44>
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 8007c0c:	f002 447f 	and.w	r4, r2, #4278190080	; 0xff000000
 8007c10:	4323      	orrs	r3, r4
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 8007c12:	b961      	cbnz	r1, 8007c2e <HAL_DMA2D_ConfigLayer+0x8a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8007c14:	6801      	ldr	r1, [r0, #0]
 8007c16:	4a0d      	ldr	r2, [pc, #52]	; (8007c4c <HAL_DMA2D_ConfigLayer+0xa8>)
 8007c18:	6a4c      	ldr	r4, [r1, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8007c1a:	6985      	ldr	r5, [r0, #24]
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8007c1c:	4022      	ands	r2, r4
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 8007c1e:	6a44      	ldr	r4, [r0, #36]	; 0x24
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8007c20:	431a      	orrs	r2, r3
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 8007c22:	f024 447f 	bic.w	r4, r4, #4278190080	; 0xff000000
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8007c26:	624a      	str	r2, [r1, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8007c28:	618d      	str	r5, [r1, #24]
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 8007c2a:	628c      	str	r4, [r1, #40]	; 0x28
 8007c2c:	e7dc      	b.n	8007be8 <HAL_DMA2D_ConfigLayer+0x44>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8007c2e:	6804      	ldr	r4, [r0, #0]
 8007c30:	4906      	ldr	r1, [pc, #24]	; (8007c4c <HAL_DMA2D_ConfigLayer+0xa8>)
 8007c32:	69e6      	ldr	r6, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8007c34:	f8dc 5018 	ldr.w	r5, [ip, #24]
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8007c38:	4031      	ands	r1, r6
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 8007c3a:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8007c3e:	4319      	orrs	r1, r3
 8007c40:	61e1      	str	r1, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8007c42:	6125      	str	r5, [r4, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 8007c44:	6222      	str	r2, [r4, #32]
 8007c46:	e7cf      	b.n	8007be8 <HAL_DMA2D_ConfigLayer+0x44>
  __HAL_LOCK(hdma2d);
 8007c48:	2002      	movs	r0, #2
}
 8007c4a:	4770      	bx	lr
 8007c4c:	00fcfff0 	.word	0x00fcfff0

08007c50 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8007c50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  for(position = 0U; position < GPIO_NUMBER; position++)
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8007c54:	2200      	movs	r2, #0
 8007c56:	680c      	ldr	r4, [r1, #0]
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8007c58:	f8df a260 	ldr.w	sl, [pc, #608]	; 8007ebc <HAL_GPIO_Init+0x26c>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8007c5c:	4e90      	ldr	r6, [pc, #576]	; (8007ea0 <HAL_GPIO_Init+0x250>)
{
 8007c5e:	b085      	sub	sp, #20
  for(position = 0U; position < GPIO_NUMBER; position++)
 8007c60:	4613      	mov	r3, r2
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8007c62:	4689      	mov	r9, r1
 8007c64:	e005      	b.n	8007c72 <HAL_GPIO_Init+0x22>
  for(position = 0U; position < GPIO_NUMBER; position++)
 8007c66:	3301      	adds	r3, #1
 8007c68:	2b10      	cmp	r3, #16
 8007c6a:	f102 0202 	add.w	r2, r2, #2
 8007c6e:	f000 8095 	beq.w	8007d9c <HAL_GPIO_Init+0x14c>
    ioposition = 0x01U << position;
 8007c72:	2101      	movs	r1, #1
 8007c74:	4099      	lsls	r1, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8007c76:	ea01 0b04 	and.w	fp, r1, r4
    if(iocurrent == ioposition)
 8007c7a:	43a1      	bics	r1, r4
 8007c7c:	d1f3      	bne.n	8007c66 <HAL_GPIO_Init+0x16>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8007c7e:	f8d9 c004 	ldr.w	ip, [r9, #4]
 8007c82:	f00c 0103 	and.w	r1, ip, #3
 8007c86:	1e4d      	subs	r5, r1, #1
 8007c88:	2d01      	cmp	r5, #1
 8007c8a:	f240 808a 	bls.w	8007da2 <HAL_GPIO_Init+0x152>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8007c8e:	2903      	cmp	r1, #3
 8007c90:	f040 80ca 	bne.w	8007e28 <HAL_GPIO_Init+0x1d8>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8007c94:	4091      	lsls	r1, r2
 8007c96:	43cd      	mvns	r5, r1
      temp = GPIOx->MODER;
 8007c98:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8007c9a:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8007c9c:	4329      	orrs	r1, r5
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8007c9e:	f41c 3f40 	tst.w	ip, #196608	; 0x30000
      GPIOx->MODER = temp;
 8007ca2:	6001      	str	r1, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8007ca4:	d0df      	beq.n	8007c66 <HAL_GPIO_Init+0x16>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8007ca6:	2100      	movs	r1, #0
 8007ca8:	9103      	str	r1, [sp, #12]
 8007caa:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 8007cae:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8007cb2:	f8ca 1044 	str.w	r1, [sl, #68]	; 0x44
 8007cb6:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 8007cba:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 8007cbe:	9103      	str	r1, [sp, #12]
 8007cc0:	9903      	ldr	r1, [sp, #12]
        temp = SYSCFG->EXTICR[position >> 2U];
 8007cc2:	f023 0103 	bic.w	r1, r3, #3
 8007cc6:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 8007cca:	f501 319c 	add.w	r1, r1, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8007cce:	f003 0703 	and.w	r7, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 8007cd2:	688d      	ldr	r5, [r1, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8007cd4:	00bf      	lsls	r7, r7, #2
 8007cd6:	f04f 0e0f 	mov.w	lr, #15
 8007cda:	fa0e fe07 	lsl.w	lr, lr, r7
 8007cde:	ea25 080e 	bic.w	r8, r5, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8007ce2:	4d70      	ldr	r5, [pc, #448]	; (8007ea4 <HAL_GPIO_Init+0x254>)
 8007ce4:	42a8      	cmp	r0, r5
 8007ce6:	d02e      	beq.n	8007d46 <HAL_GPIO_Init+0xf6>
 8007ce8:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8007cec:	42a8      	cmp	r0, r5
 8007cee:	f000 809f 	beq.w	8007e30 <HAL_GPIO_Init+0x1e0>
 8007cf2:	4d6d      	ldr	r5, [pc, #436]	; (8007ea8 <HAL_GPIO_Init+0x258>)
 8007cf4:	42a8      	cmp	r0, r5
 8007cf6:	f000 80a2 	beq.w	8007e3e <HAL_GPIO_Init+0x1ee>
 8007cfa:	4d6c      	ldr	r5, [pc, #432]	; (8007eac <HAL_GPIO_Init+0x25c>)
 8007cfc:	42a8      	cmp	r0, r5
 8007cfe:	f000 80a5 	beq.w	8007e4c <HAL_GPIO_Init+0x1fc>
 8007d02:	4d6b      	ldr	r5, [pc, #428]	; (8007eb0 <HAL_GPIO_Init+0x260>)
 8007d04:	42a8      	cmp	r0, r5
 8007d06:	f000 80a8 	beq.w	8007e5a <HAL_GPIO_Init+0x20a>
 8007d0a:	4d6a      	ldr	r5, [pc, #424]	; (8007eb4 <HAL_GPIO_Init+0x264>)
 8007d0c:	42a8      	cmp	r0, r5
 8007d0e:	f000 80b2 	beq.w	8007e76 <HAL_GPIO_Init+0x226>
 8007d12:	4d69      	ldr	r5, [pc, #420]	; (8007eb8 <HAL_GPIO_Init+0x268>)
 8007d14:	42a8      	cmp	r0, r5
 8007d16:	f000 80b5 	beq.w	8007e84 <HAL_GPIO_Init+0x234>
 8007d1a:	f8df e1a4 	ldr.w	lr, [pc, #420]	; 8007ec0 <HAL_GPIO_Init+0x270>
 8007d1e:	4570      	cmp	r0, lr
 8007d20:	f000 80a2 	beq.w	8007e68 <HAL_GPIO_Init+0x218>
 8007d24:	f8df e19c 	ldr.w	lr, [pc, #412]	; 8007ec4 <HAL_GPIO_Init+0x274>
 8007d28:	4570      	cmp	r0, lr
 8007d2a:	f000 80b2 	beq.w	8007e92 <HAL_GPIO_Init+0x242>
 8007d2e:	f8df e198 	ldr.w	lr, [pc, #408]	; 8007ec8 <HAL_GPIO_Init+0x278>
 8007d32:	4570      	cmp	r0, lr
 8007d34:	bf0c      	ite	eq
 8007d36:	f04f 0e09 	moveq.w	lr, #9
 8007d3a:	f04f 0e0a 	movne.w	lr, #10
 8007d3e:	fa0e f707 	lsl.w	r7, lr, r7
 8007d42:	ea48 0807 	orr.w	r8, r8, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 8007d46:	f8c1 8008 	str.w	r8, [r1, #8]
        temp = EXTI->RTSR;
 8007d4a:	68b1      	ldr	r1, [r6, #8]
        temp &= ~((uint32_t)iocurrent);
 8007d4c:	ea6f 050b 	mvn.w	r5, fp
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 8007d50:	f41c 1f80 	tst.w	ip, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 8007d54:	bf0c      	ite	eq
 8007d56:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 8007d58:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->RTSR = temp;
 8007d5c:	60b1      	str	r1, [r6, #8]

        temp = EXTI->FTSR;
 8007d5e:	68f1      	ldr	r1, [r6, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 8007d60:	f41c 1f00 	tst.w	ip, #2097152	; 0x200000
        temp &= ~((uint32_t)iocurrent);
 8007d64:	bf0c      	ite	eq
 8007d66:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 8007d68:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->FTSR = temp;
 8007d6c:	60f1      	str	r1, [r6, #12]

        temp = EXTI->EMR;
 8007d6e:	6871      	ldr	r1, [r6, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8007d70:	f41c 3f00 	tst.w	ip, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 8007d74:	bf0c      	ite	eq
 8007d76:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 8007d78:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->EMR = temp;
 8007d7c:	6071      	str	r1, [r6, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8007d7e:	6831      	ldr	r1, [r6, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8007d80:	f41c 3f80 	tst.w	ip, #65536	; 0x10000
  for(position = 0U; position < GPIO_NUMBER; position++)
 8007d84:	f103 0301 	add.w	r3, r3, #1
        temp &= ~((uint32_t)iocurrent);
 8007d88:	bf0c      	ite	eq
 8007d8a:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 8007d8c:	ea4b 0101 	orrne.w	r1, fp, r1
  for(position = 0U; position < GPIO_NUMBER; position++)
 8007d90:	2b10      	cmp	r3, #16
        }
        EXTI->IMR = temp;
 8007d92:	6031      	str	r1, [r6, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8007d94:	f102 0202 	add.w	r2, r2, #2
 8007d98:	f47f af6b 	bne.w	8007c72 <HAL_GPIO_Init+0x22>
      }
    }
  }
}
 8007d9c:	b005      	add	sp, #20
 8007d9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= (GPIO_Init->Speed << (position * 2U));
 8007da2:	f8d9 500c 	ldr.w	r5, [r9, #12]
        temp = GPIOx->OSPEEDR; 
 8007da6:	f8d0 e008 	ldr.w	lr, [r0, #8]
        temp |= (GPIO_Init->Speed << (position * 2U));
 8007daa:	fa05 f702 	lsl.w	r7, r5, r2
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8007dae:	2503      	movs	r5, #3
 8007db0:	fa05 f802 	lsl.w	r8, r5, r2
 8007db4:	ea2e 0e08 	bic.w	lr, lr, r8
        temp |= (GPIO_Init->Speed << (position * 2U));
 8007db8:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 8007dbc:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 8007dbe:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8007dc0:	ea27 0e0b 	bic.w	lr, r7, fp
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8007dc4:	f3cc 1700 	ubfx	r7, ip, #4, #1
 8007dc8:	409f      	lsls	r7, r3
 8007dca:	ea47 070e 	orr.w	r7, r7, lr
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8007dce:	ea6f 0508 	mvn.w	r5, r8
        GPIOx->OTYPER = temp;
 8007dd2:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 8007dd4:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8007dd6:	ea07 0e05 	and.w	lr, r7, r5
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8007dda:	f8d9 7008 	ldr.w	r7, [r9, #8]
 8007dde:	4097      	lsls	r7, r2
 8007de0:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8007de4:	2902      	cmp	r1, #2
        GPIOx->PUPDR = temp;
 8007de6:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8007de8:	fa01 f102 	lsl.w	r1, r1, r2
 8007dec:	f47f af54 	bne.w	8007c98 <HAL_GPIO_Init+0x48>
        temp = GPIOx->AFR[position >> 3U];
 8007df0:	ea4f 0ed3 	mov.w	lr, r3, lsr #3
 8007df4:	eb00 0e8e 	add.w	lr, r0, lr, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8007df8:	f003 0807 	and.w	r8, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 8007dfc:	f8de 7020 	ldr.w	r7, [lr, #32]
 8007e00:	9700      	str	r7, [sp, #0]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8007e02:	f8d9 7010 	ldr.w	r7, [r9, #16]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8007e06:	ea4f 0888 	mov.w	r8, r8, lsl #2
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8007e0a:	fa07 f708 	lsl.w	r7, r7, r8
 8007e0e:	9701      	str	r7, [sp, #4]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8007e10:	270f      	movs	r7, #15
 8007e12:	fa07 f808 	lsl.w	r8, r7, r8
 8007e16:	9f00      	ldr	r7, [sp, #0]
 8007e18:	ea27 0808 	bic.w	r8, r7, r8
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8007e1c:	9f01      	ldr	r7, [sp, #4]
 8007e1e:	ea47 0708 	orr.w	r7, r7, r8
        GPIOx->AFR[position >> 3U] = temp;
 8007e22:	f8ce 7020 	str.w	r7, [lr, #32]
 8007e26:	e737      	b.n	8007c98 <HAL_GPIO_Init+0x48>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8007e28:	2503      	movs	r5, #3
 8007e2a:	4095      	lsls	r5, r2
 8007e2c:	43ed      	mvns	r5, r5
 8007e2e:	e7d1      	b.n	8007dd4 <HAL_GPIO_Init+0x184>
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8007e30:	f04f 0e01 	mov.w	lr, #1
 8007e34:	fa0e f707 	lsl.w	r7, lr, r7
 8007e38:	ea48 0807 	orr.w	r8, r8, r7
 8007e3c:	e783      	b.n	8007d46 <HAL_GPIO_Init+0xf6>
 8007e3e:	f04f 0e02 	mov.w	lr, #2
 8007e42:	fa0e f707 	lsl.w	r7, lr, r7
 8007e46:	ea48 0807 	orr.w	r8, r8, r7
 8007e4a:	e77c      	b.n	8007d46 <HAL_GPIO_Init+0xf6>
 8007e4c:	f04f 0e03 	mov.w	lr, #3
 8007e50:	fa0e f707 	lsl.w	r7, lr, r7
 8007e54:	ea48 0807 	orr.w	r8, r8, r7
 8007e58:	e775      	b.n	8007d46 <HAL_GPIO_Init+0xf6>
 8007e5a:	f04f 0e04 	mov.w	lr, #4
 8007e5e:	fa0e f707 	lsl.w	r7, lr, r7
 8007e62:	ea48 0807 	orr.w	r8, r8, r7
 8007e66:	e76e      	b.n	8007d46 <HAL_GPIO_Init+0xf6>
 8007e68:	f04f 0e07 	mov.w	lr, #7
 8007e6c:	fa0e f707 	lsl.w	r7, lr, r7
 8007e70:	ea48 0807 	orr.w	r8, r8, r7
 8007e74:	e767      	b.n	8007d46 <HAL_GPIO_Init+0xf6>
 8007e76:	f04f 0e05 	mov.w	lr, #5
 8007e7a:	fa0e f707 	lsl.w	r7, lr, r7
 8007e7e:	ea48 0807 	orr.w	r8, r8, r7
 8007e82:	e760      	b.n	8007d46 <HAL_GPIO_Init+0xf6>
 8007e84:	f04f 0e06 	mov.w	lr, #6
 8007e88:	fa0e f707 	lsl.w	r7, lr, r7
 8007e8c:	ea48 0807 	orr.w	r8, r8, r7
 8007e90:	e759      	b.n	8007d46 <HAL_GPIO_Init+0xf6>
 8007e92:	f04f 0e08 	mov.w	lr, #8
 8007e96:	fa0e f707 	lsl.w	r7, lr, r7
 8007e9a:	ea48 0807 	orr.w	r8, r8, r7
 8007e9e:	e752      	b.n	8007d46 <HAL_GPIO_Init+0xf6>
 8007ea0:	40013c00 	.word	0x40013c00
 8007ea4:	40020000 	.word	0x40020000
 8007ea8:	40020800 	.word	0x40020800
 8007eac:	40020c00 	.word	0x40020c00
 8007eb0:	40021000 	.word	0x40021000
 8007eb4:	40021400 	.word	0x40021400
 8007eb8:	40021800 	.word	0x40021800
 8007ebc:	40023800 	.word	0x40023800
 8007ec0:	40021c00 	.word	0x40021c00
 8007ec4:	40022000 	.word	0x40022000
 8007ec8:	40022400 	.word	0x40022400

08007ecc <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 8007ecc:	6903      	ldr	r3, [r0, #16]
 8007ece:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 8007ed0:	bf14      	ite	ne
 8007ed2:	2001      	movne	r0, #1
 8007ed4:	2000      	moveq	r0, #0
 8007ed6:	4770      	bx	lr

08007ed8 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8007ed8:	b902      	cbnz	r2, 8007edc <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8007eda:	0409      	lsls	r1, r1, #16
 8007edc:	6181      	str	r1, [r0, #24]
  }
}
 8007ede:	4770      	bx	lr

08007ee0 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 8007ee0:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 8007ee2:	ea01 0203 	and.w	r2, r1, r3
 8007ee6:	ea21 0103 	bic.w	r1, r1, r3
 8007eea:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8007eee:	6181      	str	r1, [r0, #24]
}
 8007ef0:	4770      	bx	lr
 8007ef2:	bf00      	nop

08007ef4 <HAL_GPIO_EXTI_Callback>:
  /* Prevent unused argument(s) compilation warning */
  UNUSED(GPIO_Pin);
  /* NOTE: This function Should not be modified, when the callback is needed,
           the HAL_GPIO_EXTI_Callback could be implemented in the user file
   */
}
 8007ef4:	4770      	bx	lr
 8007ef6:	bf00      	nop

08007ef8 <HAL_GPIO_EXTI_IRQHandler>:
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 8007ef8:	4a04      	ldr	r2, [pc, #16]	; (8007f0c <HAL_GPIO_EXTI_IRQHandler+0x14>)
 8007efa:	6951      	ldr	r1, [r2, #20]
 8007efc:	4201      	tst	r1, r0
 8007efe:	d100      	bne.n	8007f02 <HAL_GPIO_EXTI_IRQHandler+0xa>
 8007f00:	4770      	bx	lr
{
 8007f02:	b508      	push	{r3, lr}
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 8007f04:	6150      	str	r0, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 8007f06:	f7ff fff5 	bl	8007ef4 <HAL_GPIO_EXTI_Callback>
}
 8007f0a:	bd08      	pop	{r3, pc}
 8007f0c:	40013c00 	.word	0x40013c00

08007f10 <I2C_RequestMemoryWrite>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint32_t Timeout, uint32_t Tickstart)
{
 8007f10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  /* Generate Start */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8007f14:	6804      	ldr	r4, [r0, #0]
{
 8007f16:	b083      	sub	sp, #12
 8007f18:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8007f1a:	6823      	ldr	r3, [r4, #0]
{
 8007f1c:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 8007f20:	f8dd b034 	ldr.w	fp, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8007f24:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 8007f28:	4606      	mov	r6, r0
 8007f2a:	468a      	mov	sl, r1
 8007f2c:	4617      	mov	r7, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8007f2e:	6023      	str	r3, [r4, #0]
  * @param  Status The new Flag status (SET or RESET).
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 8007f30:	f1b9 3fff 	cmp.w	r9, #4294967295
 8007f34:	d136      	bne.n	8007fa4 <I2C_RequestMemoryWrite+0x94>
{
  /* Wait until flag is set */
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8007f36:	6965      	ldr	r5, [r4, #20]
 8007f38:	07e8      	lsls	r0, r5, #31
 8007f3a:	d5fc      	bpl.n	8007f36 <I2C_RequestMemoryWrite+0x26>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8007f3c:	f00a 03fe 	and.w	r3, sl, #254	; 0xfe
 8007f40:	6123      	str	r3, [r4, #16]
  * @param  Flag specifies the I2C flag to check.
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 8007f42:	f1b9 3fff 	cmp.w	r9, #4294967295
 8007f46:	d003      	beq.n	8007f50 <I2C_RequestMemoryWrite+0x40>
 8007f48:	e04f      	b.n	8007fea <I2C_RequestMemoryWrite+0xda>
{
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
  {
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8007f4a:	6961      	ldr	r1, [r4, #20]
 8007f4c:	054d      	lsls	r5, r1, #21
 8007f4e:	d45d      	bmi.n	800800c <I2C_RequestMemoryWrite+0xfc>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8007f50:	6961      	ldr	r1, [r4, #20]
 8007f52:	078b      	lsls	r3, r1, #30
 8007f54:	d5f9      	bpl.n	8007f4a <I2C_RequestMemoryWrite+0x3a>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8007f56:	2300      	movs	r3, #0
 8007f58:	9301      	str	r3, [sp, #4]
 8007f5a:	6963      	ldr	r3, [r4, #20]
 8007f5c:	9301      	str	r3, [sp, #4]
 8007f5e:	69a3      	ldr	r3, [r4, #24]
 8007f60:	9301      	str	r3, [sp, #4]
 8007f62:	9b01      	ldr	r3, [sp, #4]
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8007f64:	f1b9 3fff 	cmp.w	r9, #4294967295
 8007f68:	f040 8088 	bne.w	800807c <I2C_RequestMemoryWrite+0x16c>
 8007f6c:	6963      	ldr	r3, [r4, #20]
 8007f6e:	061a      	lsls	r2, r3, #24
 8007f70:	d464      	bmi.n	800803c <I2C_RequestMemoryWrite+0x12c>
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8007f72:	6963      	ldr	r3, [r4, #20]
 8007f74:	055b      	lsls	r3, r3, #21
 8007f76:	d5f9      	bpl.n	8007f6c <I2C_RequestMemoryWrite+0x5c>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);

    hi2c->PreviousState       = I2C_STATE_NONE;
 8007f78:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8007f7a:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 8007f7e:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8007f80:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 8007f82:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8007f84:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8007f88:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8007f8c:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8007f8e:	f043 0304 	orr.w	r3, r3, #4
 8007f92:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8007f94:	6c33      	ldr	r3, [r6, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8007f96:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8007f98:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 8007f9a:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8007f9e:	d066      	beq.n	800806e <I2C_RequestMemoryWrite+0x15e>
    return HAL_ERROR;
 8007fa0:	2001      	movs	r0, #1
 8007fa2:	e01f      	b.n	8007fe4 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8007fa4:	6963      	ldr	r3, [r4, #20]
 8007fa6:	07d9      	lsls	r1, r3, #31
 8007fa8:	d4c8      	bmi.n	8007f3c <I2C_RequestMemoryWrite+0x2c>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8007faa:	f7ff fc95 	bl	80078d8 <HAL_GetTick>
 8007fae:	eba0 000b 	sub.w	r0, r0, fp
 8007fb2:	4581      	cmp	r9, r0
 8007fb4:	d304      	bcc.n	8007fc0 <I2C_RequestMemoryWrite+0xb0>
 8007fb6:	f1b9 0f00 	cmp.w	r9, #0
 8007fba:	d001      	beq.n	8007fc0 <I2C_RequestMemoryWrite+0xb0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8007fbc:	6834      	ldr	r4, [r6, #0]
 8007fbe:	e7b7      	b.n	8007f30 <I2C_RequestMemoryWrite+0x20>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8007fc0:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8007fc2:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8007fc4:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8007fc6:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8007fca:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8007fce:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8007fd0:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 8007fd2:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8007fd6:	f042 0220 	orr.w	r2, r2, #32
 8007fda:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8007fdc:	680b      	ldr	r3, [r1, #0]
 8007fde:	05dc      	lsls	r4, r3, #23
 8007fe0:	d435      	bmi.n	800804e <I2C_RequestMemoryWrite+0x13e>
    return HAL_TIMEOUT;
 8007fe2:	2003      	movs	r0, #3
}
 8007fe4:	b003      	add	sp, #12
 8007fe6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8007fea:	6963      	ldr	r3, [r4, #20]
 8007fec:	0798      	lsls	r0, r3, #30
 8007fee:	d4b2      	bmi.n	8007f56 <I2C_RequestMemoryWrite+0x46>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8007ff0:	6963      	ldr	r3, [r4, #20]
 8007ff2:	055a      	lsls	r2, r3, #21
 8007ff4:	d40a      	bmi.n	800800c <I2C_RequestMemoryWrite+0xfc>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8007ff6:	f7ff fc6f 	bl	80078d8 <HAL_GetTick>
 8007ffa:	eba0 000b 	sub.w	r0, r0, fp
 8007ffe:	4581      	cmp	r9, r0
 8008000:	d34e      	bcc.n	80080a0 <I2C_RequestMemoryWrite+0x190>
 8008002:	f1b9 0f00 	cmp.w	r9, #0
 8008006:	d04b      	beq.n	80080a0 <I2C_RequestMemoryWrite+0x190>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8008008:	6834      	ldr	r4, [r6, #0]
 800800a:	e79a      	b.n	8007f42 <I2C_RequestMemoryWrite+0x32>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800800c:	6823      	ldr	r3, [r4, #0]
 800800e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8008012:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 8008014:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8008016:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 800801a:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800801c:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800801e:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8008020:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8008024:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8008028:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800802a:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800802e:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 8008032:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8008034:	6433      	str	r3, [r6, #64]	; 0x40
}
 8008036:	b003      	add	sp, #12
 8008038:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800803c:	f1b8 0f01 	cmp.w	r8, #1
 8008040:	d109      	bne.n	8008056 <I2C_RequestMemoryWrite+0x146>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8008042:	b2ff      	uxtb	r7, r7
  return HAL_OK;
 8008044:	2000      	movs	r0, #0
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8008046:	6127      	str	r7, [r4, #16]
}
 8008048:	b003      	add	sp, #12
 800804a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800804e:	f44f 7300 	mov.w	r3, #512	; 0x200
 8008052:	6433      	str	r3, [r6, #64]	; 0x40
 8008054:	e7c5      	b.n	8007fe2 <I2C_RequestMemoryWrite+0xd2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8008056:	0a3b      	lsrs	r3, r7, #8
 8008058:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800805a:	f1b9 3fff 	cmp.w	r9, #4294967295
 800805e:	d12e      	bne.n	80080be <I2C_RequestMemoryWrite+0x1ae>
 8008060:	6963      	ldr	r3, [r4, #20]
 8008062:	0619      	lsls	r1, r3, #24
 8008064:	d4ed      	bmi.n	8008042 <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8008066:	6963      	ldr	r3, [r4, #20]
 8008068:	055a      	lsls	r2, r3, #21
 800806a:	d5f9      	bpl.n	8008060 <I2C_RequestMemoryWrite+0x150>
 800806c:	e784      	b.n	8007f78 <I2C_RequestMemoryWrite+0x68>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800806e:	6832      	ldr	r2, [r6, #0]
 8008070:	6813      	ldr	r3, [r2, #0]
 8008072:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 8008076:	2001      	movs	r0, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8008078:	6013      	str	r3, [r2, #0]
 800807a:	e7b3      	b.n	8007fe4 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800807c:	6963      	ldr	r3, [r4, #20]
 800807e:	061d      	lsls	r5, r3, #24
 8008080:	d4dc      	bmi.n	800803c <I2C_RequestMemoryWrite+0x12c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8008082:	6963      	ldr	r3, [r4, #20]
 8008084:	0559      	lsls	r1, r3, #21
 8008086:	f53f af77 	bmi.w	8007f78 <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800808a:	f7ff fc25 	bl	80078d8 <HAL_GetTick>
 800808e:	eba0 000b 	sub.w	r0, r0, fp
 8008092:	4581      	cmp	r9, r0
 8008094:	d325      	bcc.n	80080e2 <I2C_RequestMemoryWrite+0x1d2>
 8008096:	f1b9 0f00 	cmp.w	r9, #0
 800809a:	d022      	beq.n	80080e2 <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800809c:	6834      	ldr	r4, [r6, #0]
 800809e:	e761      	b.n	8007f64 <I2C_RequestMemoryWrite+0x54>
        hi2c->PreviousState       = I2C_STATE_NONE;
 80080a0:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 80080a2:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 80080a4:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 80080a6:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 80080aa:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80080ae:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 80080b0:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80080b4:	f043 0320 	orr.w	r3, r3, #32
 80080b8:	6433      	str	r3, [r6, #64]	; 0x40
    return HAL_ERROR;
 80080ba:	2001      	movs	r0, #1
 80080bc:	e792      	b.n	8007fe4 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80080be:	6963      	ldr	r3, [r4, #20]
 80080c0:	061b      	lsls	r3, r3, #24
 80080c2:	d4be      	bmi.n	8008042 <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80080c4:	6963      	ldr	r3, [r4, #20]
 80080c6:	0558      	lsls	r0, r3, #21
 80080c8:	f53f af56 	bmi.w	8007f78 <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80080cc:	f7ff fc04 	bl	80078d8 <HAL_GetTick>
 80080d0:	eba0 000b 	sub.w	r0, r0, fp
 80080d4:	4581      	cmp	r9, r0
 80080d6:	d304      	bcc.n	80080e2 <I2C_RequestMemoryWrite+0x1d2>
 80080d8:	f1b9 0f00 	cmp.w	r9, #0
 80080dc:	d001      	beq.n	80080e2 <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80080de:	6834      	ldr	r4, [r6, #0]
 80080e0:	e7bb      	b.n	800805a <I2C_RequestMemoryWrite+0x14a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 80080e2:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 80080e4:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 80080e6:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 80080e8:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 80080ec:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80080f0:	6c33      	ldr	r3, [r6, #64]	; 0x40
 80080f2:	4313      	orrs	r3, r2
 80080f4:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 80080f6:	e74d      	b.n	8007f94 <I2C_RequestMemoryWrite+0x84>

080080f8 <I2C_RequestMemoryRead>:
{
 80080f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80080fc:	6804      	ldr	r4, [r0, #0]
{
 80080fe:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8008100:	6823      	ldr	r3, [r4, #0]
 8008102:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8008106:	6023      	str	r3, [r4, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8008108:	6823      	ldr	r3, [r4, #0]
{
 800810a:	b083      	sub	sp, #12
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800810c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 8008110:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 8008114:	f8dd 9034 	ldr.w	r9, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8008118:	6023      	str	r3, [r4, #0]
{
 800811a:	4606      	mov	r6, r0
 800811c:	468b      	mov	fp, r1
 800811e:	4617      	mov	r7, r2
 8008120:	f1ba 3fff 	cmp.w	sl, #4294967295
 8008124:	d13a      	bne.n	800819c <I2C_RequestMemoryRead+0xa4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8008126:	6965      	ldr	r5, [r4, #20]
 8008128:	07eb      	lsls	r3, r5, #31
 800812a:	d5fc      	bpl.n	8008126 <I2C_RequestMemoryRead+0x2e>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800812c:	f00b 03fe 	and.w	r3, fp, #254	; 0xfe
 8008130:	6123      	str	r3, [r4, #16]
 8008132:	fa5f fb8b 	uxtb.w	fp, fp
 8008136:	f1ba 3fff 	cmp.w	sl, #4294967295
 800813a:	d003      	beq.n	8008144 <I2C_RequestMemoryRead+0x4c>
 800813c:	e069      	b.n	8008212 <I2C_RequestMemoryRead+0x11a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800813e:	6965      	ldr	r5, [r4, #20]
 8008140:	056a      	lsls	r2, r5, #21
 8008142:	d44e      	bmi.n	80081e2 <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8008144:	6965      	ldr	r5, [r4, #20]
 8008146:	07a9      	lsls	r1, r5, #30
 8008148:	d5f9      	bpl.n	800813e <I2C_RequestMemoryRead+0x46>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800814a:	2300      	movs	r3, #0
 800814c:	9301      	str	r3, [sp, #4]
 800814e:	6963      	ldr	r3, [r4, #20]
 8008150:	9301      	str	r3, [sp, #4]
 8008152:	69a3      	ldr	r3, [r4, #24]
 8008154:	9301      	str	r3, [sp, #4]
 8008156:	9b01      	ldr	r3, [sp, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8008158:	f1ba 3fff 	cmp.w	sl, #4294967295
 800815c:	f040 80bd 	bne.w	80082da <I2C_RequestMemoryRead+0x1e2>
 8008160:	6963      	ldr	r3, [r4, #20]
 8008162:	0618      	lsls	r0, r3, #24
 8008164:	d468      	bmi.n	8008238 <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8008166:	6963      	ldr	r3, [r4, #20]
 8008168:	0559      	lsls	r1, r3, #21
 800816a:	d5f9      	bpl.n	8008160 <I2C_RequestMemoryRead+0x68>
    hi2c->PreviousState       = I2C_STATE_NONE;
 800816c:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800816e:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 8008172:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8008174:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 8008176:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8008178:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800817c:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8008180:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8008182:	f043 0304 	orr.w	r3, r3, #4
 8008186:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8008188:	6c33      	ldr	r3, [r6, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 800818a:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800818c:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800818e:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8008192:	d070      	beq.n	8008276 <I2C_RequestMemoryRead+0x17e>
    return HAL_ERROR;
 8008194:	2001      	movs	r0, #1
}
 8008196:	b003      	add	sp, #12
 8008198:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800819c:	6963      	ldr	r3, [r4, #20]
 800819e:	07dd      	lsls	r5, r3, #31
 80081a0:	d4c4      	bmi.n	800812c <I2C_RequestMemoryRead+0x34>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80081a2:	f7ff fb99 	bl	80078d8 <HAL_GetTick>
 80081a6:	eba0 0009 	sub.w	r0, r0, r9
 80081aa:	4582      	cmp	sl, r0
 80081ac:	d304      	bcc.n	80081b8 <I2C_RequestMemoryRead+0xc0>
 80081ae:	f1ba 0f00 	cmp.w	sl, #0
 80081b2:	d001      	beq.n	80081b8 <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80081b4:	6834      	ldr	r4, [r6, #0]
 80081b6:	e7b3      	b.n	8008120 <I2C_RequestMemoryRead+0x28>
        hi2c->PreviousState     = I2C_STATE_NONE;
 80081b8:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 80081ba:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 80081bc:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 80081be:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 80081c2:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80081c6:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80081c8:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 80081ca:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80081ce:	f042 0220 	orr.w	r2, r2, #32
 80081d2:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80081d4:	680b      	ldr	r3, [r1, #0]
 80081d6:	05dc      	lsls	r4, r3, #23
 80081d8:	d43d      	bmi.n	8008256 <I2C_RequestMemoryRead+0x15e>
    return HAL_TIMEOUT;
 80081da:	2003      	movs	r0, #3
}
 80081dc:	b003      	add	sp, #12
 80081de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80081e2:	6823      	ldr	r3, [r4, #0]
 80081e4:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80081e8:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 80081ea:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80081ec:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 80081f0:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80081f2:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 80081f4:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 80081f6:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 80081fa:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80081fe:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 8008200:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8008204:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 8008208:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800820a:	6433      	str	r3, [r6, #64]	; 0x40
}
 800820c:	b003      	add	sp, #12
 800820e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8008212:	6963      	ldr	r3, [r4, #20]
 8008214:	079b      	lsls	r3, r3, #30
 8008216:	d498      	bmi.n	800814a <I2C_RequestMemoryRead+0x52>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8008218:	6963      	ldr	r3, [r4, #20]
 800821a:	0558      	lsls	r0, r3, #21
 800821c:	d4e1      	bmi.n	80081e2 <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800821e:	f7ff fb5b 	bl	80078d8 <HAL_GetTick>
 8008222:	eba0 0009 	sub.w	r0, r0, r9
 8008226:	4582      	cmp	sl, r0
 8008228:	f0c0 808f 	bcc.w	800834a <I2C_RequestMemoryRead+0x252>
 800822c:	f1ba 0f00 	cmp.w	sl, #0
 8008230:	f000 808b 	beq.w	800834a <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8008234:	6834      	ldr	r4, [r6, #0]
 8008236:	e77e      	b.n	8008136 <I2C_RequestMemoryRead+0x3e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8008238:	f1b8 0f01 	cmp.w	r8, #1
 800823c:	d10f      	bne.n	800825e <I2C_RequestMemoryRead+0x166>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800823e:	b2ff      	uxtb	r7, r7
 8008240:	6127      	str	r7, [r4, #16]
 8008242:	f1ba 3fff 	cmp.w	sl, #4294967295
 8008246:	d16e      	bne.n	8008326 <I2C_RequestMemoryRead+0x22e>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8008248:	6963      	ldr	r3, [r4, #20]
 800824a:	061b      	lsls	r3, r3, #24
 800824c:	d41a      	bmi.n	8008284 <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800824e:	6963      	ldr	r3, [r4, #20]
 8008250:	055f      	lsls	r7, r3, #21
 8008252:	d5f9      	bpl.n	8008248 <I2C_RequestMemoryRead+0x150>
 8008254:	e78a      	b.n	800816c <I2C_RequestMemoryRead+0x74>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8008256:	f44f 7300 	mov.w	r3, #512	; 0x200
 800825a:	6433      	str	r3, [r6, #64]	; 0x40
 800825c:	e7bd      	b.n	80081da <I2C_RequestMemoryRead+0xe2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800825e:	0a3b      	lsrs	r3, r7, #8
 8008260:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8008262:	f1ba 3fff 	cmp.w	sl, #4294967295
 8008266:	d17e      	bne.n	8008366 <I2C_RequestMemoryRead+0x26e>
 8008268:	6963      	ldr	r3, [r4, #20]
 800826a:	061d      	lsls	r5, r3, #24
 800826c:	d4e7      	bmi.n	800823e <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800826e:	6963      	ldr	r3, [r4, #20]
 8008270:	0558      	lsls	r0, r3, #21
 8008272:	d5f9      	bpl.n	8008268 <I2C_RequestMemoryRead+0x170>
 8008274:	e77a      	b.n	800816c <I2C_RequestMemoryRead+0x74>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8008276:	6832      	ldr	r2, [r6, #0]
 8008278:	6813      	ldr	r3, [r2, #0]
 800827a:	f443 7300 	orr.w	r3, r3, #512	; 0x200
    return HAL_ERROR;
 800827e:	2001      	movs	r0, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8008280:	6013      	str	r3, [r2, #0]
 8008282:	e7ab      	b.n	80081dc <I2C_RequestMemoryRead+0xe4>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8008284:	6823      	ldr	r3, [r4, #0]
 8008286:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800828a:	6023      	str	r3, [r4, #0]
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800828c:	f1ba 3fff 	cmp.w	sl, #4294967295
 8008290:	d113      	bne.n	80082ba <I2C_RequestMemoryRead+0x1c2>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8008292:	6963      	ldr	r3, [r4, #20]
 8008294:	07d8      	lsls	r0, r3, #31
 8008296:	d5fc      	bpl.n	8008292 <I2C_RequestMemoryRead+0x19a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8008298:	f04b 0301 	orr.w	r3, fp, #1
 800829c:	6123      	str	r3, [r4, #16]
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 800829e:	f1ba 3fff 	cmp.w	sl, #4294967295
 80082a2:	d003      	beq.n	80082ac <I2C_RequestMemoryRead+0x1b4>
 80082a4:	e02b      	b.n	80082fe <I2C_RequestMemoryRead+0x206>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80082a6:	6963      	ldr	r3, [r4, #20]
 80082a8:	055b      	lsls	r3, r3, #21
 80082aa:	d49a      	bmi.n	80081e2 <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80082ac:	6963      	ldr	r3, [r4, #20]
 80082ae:	43db      	mvns	r3, r3
 80082b0:	f013 0302 	ands.w	r3, r3, #2
 80082b4:	d1f7      	bne.n	80082a6 <I2C_RequestMemoryRead+0x1ae>
  return HAL_OK;
 80082b6:	4618      	mov	r0, r3
 80082b8:	e790      	b.n	80081dc <I2C_RequestMemoryRead+0xe4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80082ba:	6963      	ldr	r3, [r4, #20]
 80082bc:	07d9      	lsls	r1, r3, #31
 80082be:	d4eb      	bmi.n	8008298 <I2C_RequestMemoryRead+0x1a0>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80082c0:	f7ff fb0a 	bl	80078d8 <HAL_GetTick>
 80082c4:	eba0 0009 	sub.w	r0, r0, r9
 80082c8:	4582      	cmp	sl, r0
 80082ca:	f4ff af75 	bcc.w	80081b8 <I2C_RequestMemoryRead+0xc0>
 80082ce:	f1ba 0f00 	cmp.w	sl, #0
 80082d2:	f43f af71 	beq.w	80081b8 <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80082d6:	6834      	ldr	r4, [r6, #0]
 80082d8:	e7d8      	b.n	800828c <I2C_RequestMemoryRead+0x194>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80082da:	6963      	ldr	r3, [r4, #20]
 80082dc:	061a      	lsls	r2, r3, #24
 80082de:	d4ab      	bmi.n	8008238 <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80082e0:	6963      	ldr	r3, [r4, #20]
 80082e2:	055d      	lsls	r5, r3, #21
 80082e4:	f53f af42 	bmi.w	800816c <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80082e8:	f7ff faf6 	bl	80078d8 <HAL_GetTick>
 80082ec:	eba0 0009 	sub.w	r0, r0, r9
 80082f0:	4582      	cmp	sl, r0
 80082f2:	d34b      	bcc.n	800838c <I2C_RequestMemoryRead+0x294>
 80082f4:	f1ba 0f00 	cmp.w	sl, #0
 80082f8:	d048      	beq.n	800838c <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80082fa:	6834      	ldr	r4, [r6, #0]
 80082fc:	e72c      	b.n	8008158 <I2C_RequestMemoryRead+0x60>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80082fe:	6963      	ldr	r3, [r4, #20]
 8008300:	43db      	mvns	r3, r3
 8008302:	f013 0302 	ands.w	r3, r3, #2
 8008306:	d0d6      	beq.n	80082b6 <I2C_RequestMemoryRead+0x1be>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8008308:	6963      	ldr	r3, [r4, #20]
 800830a:	055a      	lsls	r2, r3, #21
 800830c:	f53f af69 	bmi.w	80081e2 <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8008310:	f7ff fae2 	bl	80078d8 <HAL_GetTick>
 8008314:	eba0 0009 	sub.w	r0, r0, r9
 8008318:	4582      	cmp	sl, r0
 800831a:	d316      	bcc.n	800834a <I2C_RequestMemoryRead+0x252>
 800831c:	f1ba 0f00 	cmp.w	sl, #0
 8008320:	d013      	beq.n	800834a <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8008322:	6834      	ldr	r4, [r6, #0]
 8008324:	e7bb      	b.n	800829e <I2C_RequestMemoryRead+0x1a6>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8008326:	6963      	ldr	r3, [r4, #20]
 8008328:	061d      	lsls	r5, r3, #24
 800832a:	d4ab      	bmi.n	8008284 <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800832c:	6963      	ldr	r3, [r4, #20]
 800832e:	055a      	lsls	r2, r3, #21
 8008330:	f53f af1c 	bmi.w	800816c <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8008334:	f7ff fad0 	bl	80078d8 <HAL_GetTick>
 8008338:	eba0 0009 	sub.w	r0, r0, r9
 800833c:	4582      	cmp	sl, r0
 800833e:	d325      	bcc.n	800838c <I2C_RequestMemoryRead+0x294>
 8008340:	f1ba 0f00 	cmp.w	sl, #0
 8008344:	d022      	beq.n	800838c <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8008346:	6834      	ldr	r4, [r6, #0]
 8008348:	e77b      	b.n	8008242 <I2C_RequestMemoryRead+0x14a>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800834a:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800834c:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800834e:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8008350:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8008354:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8008358:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800835a:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800835e:	f043 0320 	orr.w	r3, r3, #32
 8008362:	6433      	str	r3, [r6, #64]	; 0x40
 8008364:	e716      	b.n	8008194 <I2C_RequestMemoryRead+0x9c>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8008366:	6963      	ldr	r3, [r4, #20]
 8008368:	0619      	lsls	r1, r3, #24
 800836a:	f53f af68 	bmi.w	800823e <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800836e:	6963      	ldr	r3, [r4, #20]
 8008370:	055b      	lsls	r3, r3, #21
 8008372:	f53f aefb 	bmi.w	800816c <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8008376:	f7ff faaf 	bl	80078d8 <HAL_GetTick>
 800837a:	eba0 0009 	sub.w	r0, r0, r9
 800837e:	4582      	cmp	sl, r0
 8008380:	d304      	bcc.n	800838c <I2C_RequestMemoryRead+0x294>
 8008382:	f1ba 0f00 	cmp.w	sl, #0
 8008386:	d001      	beq.n	800838c <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8008388:	6834      	ldr	r4, [r6, #0]
 800838a:	e76a      	b.n	8008262 <I2C_RequestMemoryRead+0x16a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800838c:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800838e:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8008390:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8008392:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8008396:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800839a:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800839c:	4313      	orrs	r3, r2
 800839e:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 80083a0:	e6f2      	b.n	8008188 <I2C_RequestMemoryRead+0x90>
 80083a2:	bf00      	nop

080083a4 <HAL_I2C_Init>:
  if (hi2c == NULL)
 80083a4:	2800      	cmp	r0, #0
 80083a6:	f000 80b9 	beq.w	800851c <HAL_I2C_Init+0x178>
{
 80083aa:	b570      	push	{r4, r5, r6, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 80083ac:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 80083b0:	4604      	mov	r4, r0
 80083b2:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80083b6:	2b00      	cmp	r3, #0
 80083b8:	f000 8098 	beq.w	80084ec <HAL_I2C_Init+0x148>
  __HAL_I2C_DISABLE(hi2c);
 80083bc:	6823      	ldr	r3, [r4, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 80083be:	2224      	movs	r2, #36	; 0x24
 80083c0:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 80083c4:	681a      	ldr	r2, [r3, #0]
 80083c6:	f022 0201 	bic.w	r2, r2, #1
 80083ca:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 80083cc:	681a      	ldr	r2, [r3, #0]
 80083ce:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80083d2:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 80083d4:	681a      	ldr	r2, [r3, #0]
 80083d6:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 80083da:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 80083dc:	f001 fe70 	bl	800a0c0 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 80083e0:	6865      	ldr	r5, [r4, #4]
 80083e2:	4b4f      	ldr	r3, [pc, #316]	; (8008520 <HAL_I2C_Init+0x17c>)
 80083e4:	429d      	cmp	r5, r3
 80083e6:	d84f      	bhi.n	8008488 <HAL_I2C_Init+0xe4>
 80083e8:	4b4e      	ldr	r3, [pc, #312]	; (8008524 <HAL_I2C_Init+0x180>)
 80083ea:	4298      	cmp	r0, r3
 80083ec:	d97c      	bls.n	80084e8 <HAL_I2C_Init+0x144>
  freqrange = I2C_FREQRANGE(pclk1);
 80083ee:	4b4e      	ldr	r3, [pc, #312]	; (8008528 <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 80083f0:	006a      	lsls	r2, r5, #1
  freqrange = I2C_FREQRANGE(pclk1);
 80083f2:	fba3 3500 	umull	r3, r5, r3, r0
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 80083f6:	1e43      	subs	r3, r0, #1
 80083f8:	fbb3 f3f2 	udiv	r3, r3, r2
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 80083fc:	6822      	ldr	r2, [r4, #0]
 80083fe:	6851      	ldr	r1, [r2, #4]
 8008400:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 8008404:	ea41 4195 	orr.w	r1, r1, r5, lsr #18
 8008408:	6051      	str	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800840a:	6a11      	ldr	r1, [r2, #32]
  freqrange = I2C_FREQRANGE(pclk1);
 800840c:	ea4f 4c95 	mov.w	ip, r5, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8008410:	f10c 0c01 	add.w	ip, ip, #1
 8008414:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 8008418:	ea41 010c 	orr.w	r1, r1, ip
 800841c:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800841e:	69d1      	ldr	r1, [r2, #28]
 8008420:	f640 70fc 	movw	r0, #4092	; 0xffc
 8008424:	3301      	adds	r3, #1
 8008426:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 800842a:	4203      	tst	r3, r0
 800842c:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8008430:	d161      	bne.n	80084f6 <HAL_I2C_Init+0x152>
 8008432:	2304      	movs	r3, #4
 8008434:	430b      	orrs	r3, r1
 8008436:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8008438:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 800843c:	6811      	ldr	r1, [r2, #0]
 800843e:	4303      	orrs	r3, r0
 8008440:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8008444:	430b      	orrs	r3, r1
 8008446:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8008448:	6891      	ldr	r1, [r2, #8]
 800844a:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 800844e:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 8008452:	4303      	orrs	r3, r0
 8008454:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8008458:	430b      	orrs	r3, r1
 800845a:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 800845c:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8008460:	68d1      	ldr	r1, [r2, #12]
 8008462:	4303      	orrs	r3, r0
 8008464:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8008468:	430b      	orrs	r3, r1
 800846a:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 800846c:	6811      	ldr	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800846e:	2300      	movs	r3, #0
  __HAL_I2C_ENABLE(hi2c);
 8008470:	f041 0101 	orr.w	r1, r1, #1
  hi2c->State = HAL_I2C_STATE_READY;
 8008474:	2020      	movs	r0, #32
  __HAL_I2C_ENABLE(hi2c);
 8008476:	6011      	str	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8008478:	6423      	str	r3, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 800847a:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 800847e:	6323      	str	r3, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8008480:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
  return HAL_OK;
 8008484:	4618      	mov	r0, r3
}
 8008486:	bd70      	pop	{r4, r5, r6, pc}
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8008488:	4b28      	ldr	r3, [pc, #160]	; (800852c <HAL_I2C_Init+0x188>)
 800848a:	4298      	cmp	r0, r3
 800848c:	d92c      	bls.n	80084e8 <HAL_I2C_Init+0x144>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800848e:	6822      	ldr	r2, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 8008490:	4b25      	ldr	r3, [pc, #148]	; (8008528 <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8008492:	6851      	ldr	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8008494:	4e26      	ldr	r6, [pc, #152]	; (8008530 <HAL_I2C_Init+0x18c>)
  freqrange = I2C_FREQRANGE(pclk1);
 8008496:	fba3 3c00 	umull	r3, ip, r3, r0
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800849a:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800849e:	ea41 419c 	orr.w	r1, r1, ip, lsr #18
 80084a2:	6051      	str	r1, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 80084a4:	ea4f 439c 	mov.w	r3, ip, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 80084a8:	f44f 7196 	mov.w	r1, #300	; 0x12c
 80084ac:	fb01 f303 	mul.w	r3, r1, r3
 80084b0:	fba6 6303 	umull	r6, r3, r6, r3
 80084b4:	6a11      	ldr	r1, [r2, #32]
 80084b6:	099b      	lsrs	r3, r3, #6
 80084b8:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 80084bc:	3301      	adds	r3, #1
 80084be:	430b      	orrs	r3, r1
 80084c0:	6213      	str	r3, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 80084c2:	69d1      	ldr	r1, [r2, #28]
 80084c4:	68a3      	ldr	r3, [r4, #8]
 80084c6:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 80084ca:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 80084ce:	b9ab      	cbnz	r3, 80084fc <HAL_I2C_Init+0x158>
 80084d0:	1e43      	subs	r3, r0, #1
 80084d2:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80084d6:	fbb3 f3f5 	udiv	r3, r3, r5
 80084da:	3301      	adds	r3, #1
 80084dc:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80084e0:	b1d3      	cbz	r3, 8008518 <HAL_I2C_Init+0x174>
 80084e2:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80084e6:	e7a5      	b.n	8008434 <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 80084e8:	2001      	movs	r0, #1
}
 80084ea:	bd70      	pop	{r4, r5, r6, pc}
    hi2c->Lock = HAL_UNLOCKED;
 80084ec:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 80084f0:	f7f9 fb98 	bl	8001c24 <HAL_I2C_MspInit>
 80084f4:	e762      	b.n	80083bc <HAL_I2C_Init+0x18>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 80084f6:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80084fa:	e79b      	b.n	8008434 <HAL_I2C_Init+0x90>
 80084fc:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 8008500:	1e43      	subs	r3, r0, #1
 8008502:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 8008506:	fbb3 f3f5 	udiv	r3, r3, r5
 800850a:	3301      	adds	r3, #1
 800850c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8008510:	b113      	cbz	r3, 8008518 <HAL_I2C_Init+0x174>
 8008512:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8008516:	e78d      	b.n	8008434 <HAL_I2C_Init+0x90>
 8008518:	2301      	movs	r3, #1
 800851a:	e78b      	b.n	8008434 <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 800851c:	2001      	movs	r0, #1
}
 800851e:	4770      	bx	lr
 8008520:	000186a0 	.word	0x000186a0
 8008524:	001e847f 	.word	0x001e847f
 8008528:	431bde83 	.word	0x431bde83
 800852c:	003d08ff 	.word	0x003d08ff
 8008530:	10624dd3 	.word	0x10624dd3

08008534 <HAL_I2C_Mem_Write>:
{
 8008534:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008538:	4604      	mov	r4, r0
 800853a:	b083      	sub	sp, #12
 800853c:	4699      	mov	r9, r3
 800853e:	f8bd a034 	ldrh.w	sl, [sp, #52]	; 0x34
 8008542:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8008544:	460f      	mov	r7, r1
 8008546:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8008548:	f7ff f9c6 	bl	80078d8 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800854c:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8008550:	2b20      	cmp	r3, #32
 8008552:	d004      	beq.n	800855e <HAL_I2C_Mem_Write+0x2a>
      return HAL_BUSY;
 8008554:	2702      	movs	r7, #2
}
 8008556:	4638      	mov	r0, r7
 8008558:	b003      	add	sp, #12
 800855a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800855e:	4605      	mov	r5, r0
 8008560:	e005      	b.n	800856e <HAL_I2C_Mem_Write+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8008562:	f7ff f9b9 	bl	80078d8 <HAL_GetTick>
 8008566:	1b40      	subs	r0, r0, r5
 8008568:	2819      	cmp	r0, #25
 800856a:	f200 80a8 	bhi.w	80086be <HAL_I2C_Mem_Write+0x18a>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800856e:	6820      	ldr	r0, [r4, #0]
 8008570:	6983      	ldr	r3, [r0, #24]
 8008572:	ea6f 0c03 	mvn.w	ip, r3
 8008576:	f01c 0b02 	ands.w	fp, ip, #2
 800857a:	d0f2      	beq.n	8008562 <HAL_I2C_Mem_Write+0x2e>
    __HAL_LOCK(hi2c);
 800857c:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8008580:	2b01      	cmp	r3, #1
 8008582:	d0e7      	beq.n	8008554 <HAL_I2C_Mem_Write+0x20>
 8008584:	2301      	movs	r3, #1
 8008586:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800858a:	6803      	ldr	r3, [r0, #0]
 800858c:	07db      	lsls	r3, r3, #31
 800858e:	d572      	bpl.n	8008676 <HAL_I2C_Mem_Write+0x142>
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8008590:	4639      	mov	r1, r7
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8008592:	6807      	ldr	r7, [r0, #0]
 8008594:	f427 6700 	bic.w	r7, r7, #2048	; 0x800
 8008598:	6007      	str	r7, [r0, #0]
    hi2c->pBuffPtr    = pData;
 800859a:	980c      	ldr	r0, [sp, #48]	; 0x30
 800859c:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800859e:	2021      	movs	r0, #33	; 0x21
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 80085a0:	e9cd 6500 	strd	r6, r5, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 80085a4:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 80085a8:	2040      	movs	r0, #64	; 0x40
 80085aa:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80085ae:	2000      	movs	r0, #0
 80085b0:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 80085b2:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 80085b6:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 80085b8:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 80085ba:	4856      	ldr	r0, [pc, #344]	; (8008714 <HAL_I2C_Mem_Write+0x1e0>)
 80085bc:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 80085be:	464b      	mov	r3, r9
 80085c0:	4642      	mov	r2, r8
 80085c2:	4620      	mov	r0, r4
 80085c4:	f7ff fca4 	bl	8007f10 <I2C_RequestMemoryWrite>
 80085c8:	4607      	mov	r7, r0
 80085ca:	bb00      	cbnz	r0, 800860e <HAL_I2C_Mem_Write+0xda>
    while (hi2c->XferSize > 0U)
 80085cc:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 80085ce:	2b00      	cmp	r3, #0
 80085d0:	f000 809e 	beq.w	8008710 <HAL_I2C_Mem_Write+0x1dc>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 80085d4:	6823      	ldr	r3, [r4, #0]
 80085d6:	1c72      	adds	r2, r6, #1
 80085d8:	d159      	bne.n	800868e <HAL_I2C_Mem_Write+0x15a>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80085da:	695a      	ldr	r2, [r3, #20]
 80085dc:	0610      	lsls	r0, r2, #24
 80085de:	d41b      	bmi.n	8008618 <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80085e0:	695a      	ldr	r2, [r3, #20]
 80085e2:	0551      	lsls	r1, r2, #21
 80085e4:	d5f9      	bpl.n	80085da <HAL_I2C_Mem_Write+0xa6>
    hi2c->PreviousState       = I2C_STATE_NONE;
 80085e6:	2200      	movs	r2, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80085e8:	f46f 6080 	mvn.w	r0, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 80085ec:	2120      	movs	r1, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80085ee:	6158      	str	r0, [r3, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 80085f0:	6322      	str	r2, [r4, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 80085f2:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 80085f6:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80085fa:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80085fc:	f043 0304 	orr.w	r3, r3, #4
 8008600:	6423      	str	r3, [r4, #64]	; 0x40
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8008602:	6c23      	ldr	r3, [r4, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 8008604:	2200      	movs	r2, #0
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8008606:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 8008608:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800860c:	d038      	beq.n	8008680 <HAL_I2C_Mem_Write+0x14c>
      return HAL_ERROR;
 800860e:	2701      	movs	r7, #1
}
 8008610:	4638      	mov	r0, r7
 8008612:	b003      	add	sp, #12
 8008614:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8008618:	f8d4 c024 	ldr.w	ip, [r4, #36]	; 0x24
      hi2c->XferSize--;
 800861c:	f8b4 e028 	ldrh.w	lr, [r4, #40]	; 0x28
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8008620:	4661      	mov	r1, ip
      hi2c->XferSize--;
 8008622:	f10e 30ff 	add.w	r0, lr, #4294967295
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8008626:	f811 2b01 	ldrb.w	r2, [r1], #1
 800862a:	611a      	str	r2, [r3, #16]
      hi2c->XferCount--;
 800862c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800862e:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8008630:	3a01      	subs	r2, #1
 8008632:	b292      	uxth	r2, r2
 8008634:	8562      	strh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8008636:	b282      	uxth	r2, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8008638:	6958      	ldr	r0, [r3, #20]
      hi2c->XferSize--;
 800863a:	8522      	strh	r2, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800863c:	0740      	lsls	r0, r0, #29
 800863e:	d517      	bpl.n	8008670 <HAL_I2C_Mem_Write+0x13c>
 8008640:	b942      	cbnz	r2, 8008654 <HAL_I2C_Mem_Write+0x120>
 8008642:	1c72      	adds	r2, r6, #1
 8008644:	d156      	bne.n	80086f4 <HAL_I2C_Mem_Write+0x1c0>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8008646:	695a      	ldr	r2, [r3, #20]
 8008648:	0750      	lsls	r0, r2, #29
 800864a:	d446      	bmi.n	80086da <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800864c:	695a      	ldr	r2, [r3, #20]
 800864e:	0551      	lsls	r1, r2, #21
 8008650:	d5f9      	bpl.n	8008646 <HAL_I2C_Mem_Write+0x112>
 8008652:	e7c8      	b.n	80085e6 <HAL_I2C_Mem_Write+0xb2>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8008654:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8008658:	6119      	str	r1, [r3, #16]
        hi2c->pBuffPtr++;
 800865a:	f10c 0102 	add.w	r1, ip, #2
 800865e:	6261      	str	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 8008660:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
        hi2c->XferSize--;
 8008662:	f1ae 0202 	sub.w	r2, lr, #2
        hi2c->XferCount--;
 8008666:	3901      	subs	r1, #1
        hi2c->XferSize--;
 8008668:	b292      	uxth	r2, r2
        hi2c->XferCount--;
 800866a:	b289      	uxth	r1, r1
        hi2c->XferSize--;
 800866c:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->XferCount--;
 800866e:	8561      	strh	r1, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8008670:	2a00      	cmp	r2, #0
 8008672:	d1b0      	bne.n	80085d6 <HAL_I2C_Mem_Write+0xa2>
 8008674:	e7e5      	b.n	8008642 <HAL_I2C_Mem_Write+0x10e>
      __HAL_I2C_ENABLE(hi2c);
 8008676:	6803      	ldr	r3, [r0, #0]
 8008678:	f043 0301 	orr.w	r3, r3, #1
 800867c:	6003      	str	r3, [r0, #0]
 800867e:	e787      	b.n	8008590 <HAL_I2C_Mem_Write+0x5c>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8008680:	6822      	ldr	r2, [r4, #0]
 8008682:	6813      	ldr	r3, [r2, #0]
 8008684:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 8008688:	2701      	movs	r7, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800868a:	6013      	str	r3, [r2, #0]
 800868c:	e763      	b.n	8008556 <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800868e:	695a      	ldr	r2, [r3, #20]
 8008690:	0612      	lsls	r2, r2, #24
 8008692:	d4c1      	bmi.n	8008618 <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8008694:	695a      	ldr	r2, [r3, #20]
 8008696:	0551      	lsls	r1, r2, #21
 8008698:	d4a5      	bmi.n	80085e6 <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800869a:	f7ff f91d 	bl	80078d8 <HAL_GetTick>
 800869e:	1b40      	subs	r0, r0, r5
 80086a0:	4286      	cmp	r6, r0
 80086a2:	d301      	bcc.n	80086a8 <HAL_I2C_Mem_Write+0x174>
 80086a4:	2e00      	cmp	r6, #0
 80086a6:	d195      	bne.n	80085d4 <HAL_I2C_Mem_Write+0xa0>
        hi2c->PreviousState     = I2C_STATE_NONE;
 80086a8:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 80086aa:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 80086ac:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 80086ae:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 80086b2:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80086b6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80086b8:	4313      	orrs	r3, r2
 80086ba:	6423      	str	r3, [r4, #64]	; 0x40
        return HAL_ERROR;
 80086bc:	e7a1      	b.n	8008602 <HAL_I2C_Mem_Write+0xce>
        hi2c->State             = HAL_I2C_STATE_READY;
 80086be:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 80086c0:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 80086c4:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 80086c8:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80086cc:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 80086ce:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80086d2:	f043 0320 	orr.w	r3, r3, #32
 80086d6:	6423      	str	r3, [r4, #64]	; 0x40
 80086d8:	e73c      	b.n	8008554 <HAL_I2C_Mem_Write+0x20>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80086da:	681a      	ldr	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 80086dc:	2100      	movs	r1, #0
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80086de:	f442 7200 	orr.w	r2, r2, #512	; 0x200
    hi2c->State = HAL_I2C_STATE_READY;
 80086e2:	2020      	movs	r0, #32
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80086e4:	601a      	str	r2, [r3, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 80086e6:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 80086ea:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 80086ee:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
    return HAL_OK;
 80086f2:	e730      	b.n	8008556 <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 80086f4:	695a      	ldr	r2, [r3, #20]
 80086f6:	0752      	lsls	r2, r2, #29
 80086f8:	d4ef      	bmi.n	80086da <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80086fa:	695a      	ldr	r2, [r3, #20]
 80086fc:	0551      	lsls	r1, r2, #21
 80086fe:	f53f af72 	bmi.w	80085e6 <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8008702:	f7ff f8e9 	bl	80078d8 <HAL_GetTick>
 8008706:	1b40      	subs	r0, r0, r5
 8008708:	4286      	cmp	r6, r0
 800870a:	d3cd      	bcc.n	80086a8 <HAL_I2C_Mem_Write+0x174>
 800870c:	2e00      	cmp	r6, #0
 800870e:	d0cb      	beq.n	80086a8 <HAL_I2C_Mem_Write+0x174>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8008710:	6823      	ldr	r3, [r4, #0]
 8008712:	e796      	b.n	8008642 <HAL_I2C_Mem_Write+0x10e>
 8008714:	ffff0000 	.word	0xffff0000

08008718 <HAL_I2C_Mem_Read>:
{
 8008718:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800871c:	4604      	mov	r4, r0
 800871e:	b087      	sub	sp, #28
 8008720:	4699      	mov	r9, r3
 8008722:	f8bd a044 	ldrh.w	sl, [sp, #68]	; 0x44
 8008726:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8008728:	460f      	mov	r7, r1
 800872a:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800872c:	f7ff f8d4 	bl	80078d8 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8008730:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8008734:	2b20      	cmp	r3, #32
 8008736:	d004      	beq.n	8008742 <HAL_I2C_Mem_Read+0x2a>
      return HAL_BUSY;
 8008738:	2702      	movs	r7, #2
}
 800873a:	4638      	mov	r0, r7
 800873c:	b007      	add	sp, #28
 800873e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008742:	4606      	mov	r6, r0
 8008744:	e005      	b.n	8008752 <HAL_I2C_Mem_Read+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8008746:	f7ff f8c7 	bl	80078d8 <HAL_GetTick>
 800874a:	1b80      	subs	r0, r0, r6
 800874c:	2819      	cmp	r0, #25
 800874e:	f200 80d2 	bhi.w	80088f6 <HAL_I2C_Mem_Read+0x1de>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8008752:	f8d4 c000 	ldr.w	ip, [r4]
 8008756:	f8dc 0018 	ldr.w	r0, [ip, #24]
 800875a:	43c0      	mvns	r0, r0
 800875c:	f010 0b02 	ands.w	fp, r0, #2
 8008760:	d0f1      	beq.n	8008746 <HAL_I2C_Mem_Read+0x2e>
    __HAL_LOCK(hi2c);
 8008762:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8008766:	2b01      	cmp	r3, #1
 8008768:	d0e6      	beq.n	8008738 <HAL_I2C_Mem_Read+0x20>
 800876a:	2301      	movs	r3, #1
 800876c:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8008770:	f8dc 3000 	ldr.w	r3, [ip]
 8008774:	07d9      	lsls	r1, r3, #31
 8008776:	d537      	bpl.n	80087e8 <HAL_I2C_Mem_Read+0xd0>
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8008778:	f8dc 0000 	ldr.w	r0, [ip]
 800877c:	f420 6000 	bic.w	r0, r0, #2048	; 0x800
 8008780:	f8cc 0000 	str.w	r0, [ip]
    hi2c->pBuffPtr    = pData;
 8008784:	9810      	ldr	r0, [sp, #64]	; 0x40
 8008786:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8008788:	2022      	movs	r0, #34	; 0x22
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800878a:	e9cd 5600 	strd	r5, r6, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800878e:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8008792:	2040      	movs	r0, #64	; 0x40
 8008794:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8008798:	2000      	movs	r0, #0
 800879a:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 800879c:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 80087a0:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 80087a2:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 80087a4:	4893      	ldr	r0, [pc, #588]	; (80089f4 <HAL_I2C_Mem_Read+0x2dc>)
 80087a6:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 80087a8:	4639      	mov	r1, r7
 80087aa:	464b      	mov	r3, r9
 80087ac:	4642      	mov	r2, r8
 80087ae:	4620      	mov	r0, r4
 80087b0:	f7ff fca2 	bl	80080f8 <I2C_RequestMemoryRead>
 80087b4:	4607      	mov	r7, r0
 80087b6:	2800      	cmp	r0, #0
 80087b8:	f040 80ab 	bne.w	8008912 <HAL_I2C_Mem_Read+0x1fa>
    if (hi2c->XferSize == 0U)
 80087bc:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 80087be:	b9d2      	cbnz	r2, 80087f6 <HAL_I2C_Mem_Read+0xde>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80087c0:	6823      	ldr	r3, [r4, #0]
 80087c2:	9002      	str	r0, [sp, #8]
 80087c4:	695a      	ldr	r2, [r3, #20]
 80087c6:	9202      	str	r2, [sp, #8]
 80087c8:	699a      	ldr	r2, [r3, #24]
 80087ca:	9202      	str	r2, [sp, #8]
 80087cc:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80087ce:	681a      	ldr	r2, [r3, #0]
 80087d0:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80087d4:	601a      	str	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 80087d6:	2300      	movs	r3, #0
    hi2c->State = HAL_I2C_STATE_READY;
 80087d8:	2220      	movs	r2, #32
 80087da:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 80087de:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 80087e2:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 80087e6:	e7a8      	b.n	800873a <HAL_I2C_Mem_Read+0x22>
      __HAL_I2C_ENABLE(hi2c);
 80087e8:	f8dc 3000 	ldr.w	r3, [ip]
 80087ec:	f043 0301 	orr.w	r3, r3, #1
 80087f0:	f8cc 3000 	str.w	r3, [ip]
 80087f4:	e7c0      	b.n	8008778 <HAL_I2C_Mem_Read+0x60>
    else if (hi2c->XferSize == 1U)
 80087f6:	2a01      	cmp	r2, #1
 80087f8:	f000 812c 	beq.w	8008a54 <HAL_I2C_Mem_Read+0x33c>
    else if (hi2c->XferSize == 2U)
 80087fc:	2a02      	cmp	r2, #2
 80087fe:	f000 80bd 	beq.w	800897c <HAL_I2C_Mem_Read+0x264>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8008802:	6823      	ldr	r3, [r4, #0]
 8008804:	9005      	str	r0, [sp, #20]
 8008806:	6959      	ldr	r1, [r3, #20]
 8008808:	9105      	str	r1, [sp, #20]
 800880a:	6999      	ldr	r1, [r3, #24]
 800880c:	9105      	str	r1, [sp, #20]
 800880e:	9905      	ldr	r1, [sp, #20]
      if (hi2c->XferSize <= 3U)
 8008810:	2a03      	cmp	r2, #3
 8008812:	d849      	bhi.n	80088a8 <HAL_I2C_Mem_Read+0x190>
        if (hi2c->XferSize == 1U)
 8008814:	2a01      	cmp	r2, #1
 8008816:	f000 80eb 	beq.w	80089f0 <HAL_I2C_Mem_Read+0x2d8>
        else if (hi2c->XferSize == 2U)
 800881a:	2a02      	cmp	r2, #2
 800881c:	f000 8089 	beq.w	8008932 <HAL_I2C_Mem_Read+0x21a>
 8008820:	1c69      	adds	r1, r5, #1
 8008822:	f040 80bb 	bne.w	800899c <HAL_I2C_Mem_Read+0x284>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8008826:	695a      	ldr	r2, [r3, #20]
 8008828:	0752      	lsls	r2, r2, #29
 800882a:	d5fc      	bpl.n	8008826 <HAL_I2C_Mem_Read+0x10e>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800882c:	681a      	ldr	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800882e:	6a61      	ldr	r1, [r4, #36]	; 0x24
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8008830:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8008834:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8008836:	691b      	ldr	r3, [r3, #16]
 8008838:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 800883a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800883c:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800883e:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8008840:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 8008842:	3101      	adds	r1, #1
          hi2c->XferSize--;
 8008844:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 8008846:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 8008848:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800884a:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800884c:	8563      	strh	r3, [r4, #42]	; 0x2a
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800884e:	1c69      	adds	r1, r5, #1
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8008850:	6822      	ldr	r2, [r4, #0]
 8008852:	f040 80af 	bne.w	80089b4 <HAL_I2C_Mem_Read+0x29c>
 8008856:	6953      	ldr	r3, [r2, #20]
 8008858:	075b      	lsls	r3, r3, #29
 800885a:	d5fc      	bpl.n	8008856 <HAL_I2C_Mem_Read+0x13e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800885c:	6813      	ldr	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800885e:	6a61      	ldr	r1, [r4, #36]	; 0x24
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8008860:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8008864:	6013      	str	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8008866:	6913      	ldr	r3, [r2, #16]
 8008868:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 800886a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800886c:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800886e:	6a60      	ldr	r0, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8008870:	6821      	ldr	r1, [r4, #0]
          hi2c->XferCount--;
 8008872:	3b01      	subs	r3, #1
 8008874:	b29b      	uxth	r3, r3
 8008876:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8008878:	6909      	ldr	r1, [r1, #16]
          hi2c->XferSize--;
 800887a:	1e53      	subs	r3, r2, #1
          hi2c->pBuffPtr++;
 800887c:	f100 0c01 	add.w	ip, r0, #1
          hi2c->XferSize--;
 8008880:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 8008882:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8008886:	7041      	strb	r1, [r0, #1]
          hi2c->XferSize--;
 8008888:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800888a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800888c:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800888e:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 8008890:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 8008892:	3101      	adds	r1, #1
          hi2c->XferSize--;
 8008894:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 8008896:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 8008898:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800889a:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800889c:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 800889e:	2a00      	cmp	r2, #0
 80088a0:	d099      	beq.n	80087d6 <HAL_I2C_Mem_Read+0xbe>
      if (hi2c->XferSize <= 3U)
 80088a2:	2a03      	cmp	r2, #3
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 80088a4:	6823      	ldr	r3, [r4, #0]
      if (hi2c->XferSize <= 3U)
 80088a6:	d9b5      	bls.n	8008814 <HAL_I2C_Mem_Read+0xfc>
 80088a8:	b95d      	cbnz	r5, 80088c2 <HAL_I2C_Mem_Read+0x1aa>
 80088aa:	e0c5      	b.n	8008a38 <HAL_I2C_Mem_Read+0x320>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 80088ac:	695a      	ldr	r2, [r3, #20]
 80088ae:	06d0      	lsls	r0, r2, #27
 80088b0:	f100 80b2 	bmi.w	8008a18 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80088b4:	f7ff f810 	bl	80078d8 <HAL_GetTick>
 80088b8:	1b80      	subs	r0, r0, r6
 80088ba:	4285      	cmp	r5, r0
 80088bc:	f0c0 8086 	bcc.w	80089cc <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 80088c0:	6823      	ldr	r3, [r4, #0]
 80088c2:	695a      	ldr	r2, [r3, #20]
 80088c4:	0652      	lsls	r2, r2, #25
 80088c6:	d5f1      	bpl.n	80088ac <HAL_I2C_Mem_Read+0x194>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80088c8:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80088ca:	691b      	ldr	r3, [r3, #16]
 80088cc:	7013      	strb	r3, [r2, #0]
        hi2c->XferCount--;
 80088ce:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 80088d0:	6820      	ldr	r0, [r4, #0]
        hi2c->XferSize--;
 80088d2:	8d22      	ldrh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 80088d4:	6a61      	ldr	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 80088d6:	3b01      	subs	r3, #1
 80088d8:	b29b      	uxth	r3, r3
 80088da:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 80088dc:	6943      	ldr	r3, [r0, #20]
        hi2c->XferSize--;
 80088de:	3a01      	subs	r2, #1
 80088e0:	b292      	uxth	r2, r2
        hi2c->pBuffPtr++;
 80088e2:	f101 0c01 	add.w	ip, r1, #1
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 80088e6:	075b      	lsls	r3, r3, #29
        hi2c->XferSize--;
 80088e8:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 80088ea:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 80088ee:	d5d6      	bpl.n	800889e <HAL_I2C_Mem_Read+0x186>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80088f0:	6903      	ldr	r3, [r0, #16]
 80088f2:	704b      	strb	r3, [r1, #1]
 80088f4:	e036      	b.n	8008964 <HAL_I2C_Mem_Read+0x24c>
        hi2c->State             = HAL_I2C_STATE_READY;
 80088f6:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 80088f8:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 80088fc:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8008900:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8008904:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8008906:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800890a:	f043 0320 	orr.w	r3, r3, #32
 800890e:	6423      	str	r3, [r4, #64]	; 0x40
 8008910:	e712      	b.n	8008738 <HAL_I2C_Mem_Read+0x20>
      return HAL_ERROR;
 8008912:	2701      	movs	r7, #1
}
 8008914:	4638      	mov	r0, r7
 8008916:	b007      	add	sp, #28
 8008918:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800891c:	695a      	ldr	r2, [r3, #20]
 800891e:	0750      	lsls	r0, r2, #29
 8008920:	d40c      	bmi.n	800893c <HAL_I2C_Mem_Read+0x224>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8008922:	f7fe ffd9 	bl	80078d8 <HAL_GetTick>
 8008926:	1b80      	subs	r0, r0, r6
 8008928:	4285      	cmp	r5, r0
 800892a:	d34f      	bcc.n	80089cc <HAL_I2C_Mem_Read+0x2b4>
 800892c:	2d00      	cmp	r5, #0
 800892e:	d04d      	beq.n	80089cc <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8008930:	6823      	ldr	r3, [r4, #0]
 8008932:	1c69      	adds	r1, r5, #1
 8008934:	d1f2      	bne.n	800891c <HAL_I2C_Mem_Read+0x204>
 8008936:	695a      	ldr	r2, [r3, #20]
 8008938:	0752      	lsls	r2, r2, #29
 800893a:	d5fc      	bpl.n	8008936 <HAL_I2C_Mem_Read+0x21e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800893c:	681a      	ldr	r2, [r3, #0]
 800893e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8008942:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8008944:	691a      	ldr	r2, [r3, #16]
 8008946:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008948:	701a      	strb	r2, [r3, #0]
          hi2c->XferCount--;
 800894a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800894c:	6a62      	ldr	r2, [r4, #36]	; 0x24
          hi2c->XferCount--;
 800894e:	3b01      	subs	r3, #1
 8008950:	b29b      	uxth	r3, r3
 8008952:	8563      	strh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 8008954:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8008956:	3b01      	subs	r3, #1
 8008958:	8523      	strh	r3, [r4, #40]	; 0x28
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800895a:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 800895c:	1c51      	adds	r1, r2, #1
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800895e:	691b      	ldr	r3, [r3, #16]
          hi2c->pBuffPtr++;
 8008960:	6261      	str	r1, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8008962:	7053      	strb	r3, [r2, #1]
          hi2c->pBuffPtr++;
 8008964:	6a63      	ldr	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8008966:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 8008968:	3301      	adds	r3, #1
 800896a:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferCount--;
 800896c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800896e:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 8008970:	3b01      	subs	r3, #1
          hi2c->XferSize--;
 8008972:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 8008974:	b29b      	uxth	r3, r3
          hi2c->XferSize--;
 8008976:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8008978:	8563      	strh	r3, [r4, #42]	; 0x2a
 800897a:	e790      	b.n	800889e <HAL_I2C_Mem_Read+0x186>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800897c:	6823      	ldr	r3, [r4, #0]
 800897e:	6819      	ldr	r1, [r3, #0]
 8008980:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 8008984:	6019      	str	r1, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8008986:	6819      	ldr	r1, [r3, #0]
 8008988:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 800898c:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800898e:	9004      	str	r0, [sp, #16]
 8008990:	6959      	ldr	r1, [r3, #20]
 8008992:	9104      	str	r1, [sp, #16]
 8008994:	6999      	ldr	r1, [r3, #24]
 8008996:	9104      	str	r1, [sp, #16]
 8008998:	9904      	ldr	r1, [sp, #16]
 800899a:	e739      	b.n	8008810 <HAL_I2C_Mem_Read+0xf8>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800899c:	695a      	ldr	r2, [r3, #20]
 800899e:	0750      	lsls	r0, r2, #29
 80089a0:	f53f af44 	bmi.w	800882c <HAL_I2C_Mem_Read+0x114>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80089a4:	f7fe ff98 	bl	80078d8 <HAL_GetTick>
 80089a8:	1b80      	subs	r0, r0, r6
 80089aa:	4285      	cmp	r5, r0
 80089ac:	d30e      	bcc.n	80089cc <HAL_I2C_Mem_Read+0x2b4>
 80089ae:	b16d      	cbz	r5, 80089cc <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80089b0:	6823      	ldr	r3, [r4, #0]
 80089b2:	e735      	b.n	8008820 <HAL_I2C_Mem_Read+0x108>
 80089b4:	6953      	ldr	r3, [r2, #20]
 80089b6:	0758      	lsls	r0, r3, #29
 80089b8:	f53f af50 	bmi.w	800885c <HAL_I2C_Mem_Read+0x144>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80089bc:	f7fe ff8c 	bl	80078d8 <HAL_GetTick>
 80089c0:	1b80      	subs	r0, r0, r6
 80089c2:	4285      	cmp	r5, r0
 80089c4:	d302      	bcc.n	80089cc <HAL_I2C_Mem_Read+0x2b4>
 80089c6:	2d00      	cmp	r5, #0
 80089c8:	f47f af41 	bne.w	800884e <HAL_I2C_Mem_Read+0x136>
        hi2c->PreviousState     = I2C_STATE_NONE;
 80089cc:	2200      	movs	r2, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 80089ce:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 80089d0:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 80089d2:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 80089d6:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80089da:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 80089dc:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 80089e0:	2701      	movs	r7, #1
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80089e2:	f043 0320 	orr.w	r3, r3, #32
}
 80089e6:	4638      	mov	r0, r7
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80089e8:	6423      	str	r3, [r4, #64]	; 0x40
}
 80089ea:	b007      	add	sp, #28
 80089ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80089f0:	b95d      	cbnz	r5, 8008a0a <HAL_I2C_Mem_Read+0x2f2>
 80089f2:	e02b      	b.n	8008a4c <HAL_I2C_Mem_Read+0x334>
 80089f4:	ffff0000 	.word	0xffff0000
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 80089f8:	695a      	ldr	r2, [r3, #20]
 80089fa:	06d2      	lsls	r2, r2, #27
 80089fc:	d40c      	bmi.n	8008a18 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80089fe:	f7fe ff6b 	bl	80078d8 <HAL_GetTick>
 8008a02:	1b80      	subs	r0, r0, r6
 8008a04:	4285      	cmp	r5, r0
 8008a06:	d3e1      	bcc.n	80089cc <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8008a08:	6823      	ldr	r3, [r4, #0]
 8008a0a:	695a      	ldr	r2, [r3, #20]
 8008a0c:	0651      	lsls	r1, r2, #25
 8008a0e:	d5f3      	bpl.n	80089f8 <HAL_I2C_Mem_Read+0x2e0>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8008a10:	691a      	ldr	r2, [r3, #16]
 8008a12:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008a14:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8008a16:	e7a5      	b.n	8008964 <HAL_I2C_Mem_Read+0x24c>
      hi2c->PreviousState       = I2C_STATE_NONE;
 8008a18:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8008a1a:	f06f 0010 	mvn.w	r0, #16
      hi2c->State               = HAL_I2C_STATE_READY;
 8008a1e:	2120      	movs	r1, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8008a20:	6158      	str	r0, [r3, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 8008a22:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8008a24:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8008a28:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 8008a2c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8008a2e:	6423      	str	r3, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 8008a30:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 8008a34:	2701      	movs	r7, #1
 8008a36:	e680      	b.n	800873a <HAL_I2C_Mem_Read+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8008a38:	695a      	ldr	r2, [r3, #20]
 8008a3a:	0652      	lsls	r2, r2, #25
 8008a3c:	f53f af44 	bmi.w	80088c8 <HAL_I2C_Mem_Read+0x1b0>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8008a40:	695a      	ldr	r2, [r3, #20]
 8008a42:	06d1      	lsls	r1, r2, #27
 8008a44:	d4e8      	bmi.n	8008a18 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8008a46:	f7fe ff47 	bl	80078d8 <HAL_GetTick>
 8008a4a:	e7bf      	b.n	80089cc <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8008a4c:	695a      	ldr	r2, [r3, #20]
 8008a4e:	0650      	lsls	r0, r2, #25
 8008a50:	d5f6      	bpl.n	8008a40 <HAL_I2C_Mem_Read+0x328>
 8008a52:	e7dd      	b.n	8008a10 <HAL_I2C_Mem_Read+0x2f8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8008a54:	6823      	ldr	r3, [r4, #0]
 8008a56:	6819      	ldr	r1, [r3, #0]
 8008a58:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 8008a5c:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8008a5e:	9003      	str	r0, [sp, #12]
 8008a60:	6959      	ldr	r1, [r3, #20]
 8008a62:	9103      	str	r1, [sp, #12]
 8008a64:	6999      	ldr	r1, [r3, #24]
 8008a66:	9103      	str	r1, [sp, #12]
 8008a68:	9903      	ldr	r1, [sp, #12]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8008a6a:	6819      	ldr	r1, [r3, #0]
 8008a6c:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 8008a70:	6019      	str	r1, [r3, #0]
 8008a72:	e6cd      	b.n	8008810 <HAL_I2C_Mem_Read+0xf8>

08008a74 <HAL_I2C_MasterTxCpltCallback>:
 8008a74:	4770      	bx	lr
 8008a76:	bf00      	nop

08008a78 <HAL_I2C_MasterRxCpltCallback>:
 8008a78:	4770      	bx	lr
 8008a7a:	bf00      	nop

08008a7c <HAL_I2C_SlaveTxCpltCallback>:
 8008a7c:	4770      	bx	lr
 8008a7e:	bf00      	nop

08008a80 <HAL_I2C_SlaveRxCpltCallback>:
 8008a80:	4770      	bx	lr
 8008a82:	bf00      	nop

08008a84 <HAL_I2C_AddrCallback>:
}
 8008a84:	4770      	bx	lr
 8008a86:	bf00      	nop

08008a88 <HAL_I2C_ListenCpltCallback>:
 8008a88:	4770      	bx	lr
 8008a8a:	bf00      	nop

08008a8c <HAL_I2C_MemTxCpltCallback>:
 8008a8c:	4770      	bx	lr
 8008a8e:	bf00      	nop

08008a90 <I2C_MemoryTransmit_TXE_BTF>:
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 8008a90:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  if (hi2c->EventCount == 0U)
 8008a94:	6d01      	ldr	r1, [r0, #80]	; 0x50
{
 8008a96:	4603      	mov	r3, r0
  if (hi2c->EventCount == 0U)
 8008a98:	b959      	cbnz	r1, 8008ab2 <I2C_MemoryTransmit_TXE_BTF+0x22>
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 8008a9a:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 8008a9c:	6801      	ldr	r1, [r0, #0]
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 8008a9e:	2a01      	cmp	r2, #1
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 8008aa0:	6c82      	ldr	r2, [r0, #72]	; 0x48
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 8008aa2:	d00d      	beq.n	8008ac0 <I2C_MemoryTransmit_TXE_BTF+0x30>
      hi2c->Instance->DR = I2C_MEM_ADD_MSB(hi2c->Memaddress);
 8008aa4:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8008aa8:	610a      	str	r2, [r1, #16]
      hi2c->EventCount++;
 8008aaa:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8008aac:	3201      	adds	r2, #1
 8008aae:	6502      	str	r2, [r0, #80]	; 0x50
 8008ab0:	4770      	bx	lr
  else if (hi2c->EventCount == 1U)
 8008ab2:	6d01      	ldr	r1, [r0, #80]	; 0x50
 8008ab4:	2901      	cmp	r1, #1
 8008ab6:	d009      	beq.n	8008acc <I2C_MemoryTransmit_TXE_BTF+0x3c>
  else if (hi2c->EventCount == 2U)
 8008ab8:	6d01      	ldr	r1, [r0, #80]	; 0x50
 8008aba:	2902      	cmp	r1, #2
 8008abc:	d00e      	beq.n	8008adc <I2C_MemoryTransmit_TXE_BTF+0x4c>
 8008abe:	4770      	bx	lr
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 8008ac0:	b2d2      	uxtb	r2, r2
 8008ac2:	610a      	str	r2, [r1, #16]
      hi2c->EventCount += 2U;
 8008ac4:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8008ac6:	3202      	adds	r2, #2
 8008ac8:	6502      	str	r2, [r0, #80]	; 0x50
 8008aca:	4770      	bx	lr
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 8008acc:	6c82      	ldr	r2, [r0, #72]	; 0x48
 8008ace:	6801      	ldr	r1, [r0, #0]
 8008ad0:	b2d2      	uxtb	r2, r2
 8008ad2:	610a      	str	r2, [r1, #16]
    hi2c->EventCount++;
 8008ad4:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8008ad6:	3201      	adds	r2, #1
 8008ad8:	6502      	str	r2, [r0, #80]	; 0x50
 8008ada:	4770      	bx	lr
 8008adc:	b2d2      	uxtb	r2, r2
    if (CurrentState == HAL_I2C_STATE_BUSY_RX)
 8008ade:	2a22      	cmp	r2, #34	; 0x22
 8008ae0:	d01f      	beq.n	8008b22 <I2C_MemoryTransmit_TXE_BTF+0x92>
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 8008ae2:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 8008ae4:	b289      	uxth	r1, r1
 8008ae6:	b9c1      	cbnz	r1, 8008b1a <I2C_MemoryTransmit_TXE_BTF+0x8a>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 8008ae8:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 8008aea:	b289      	uxth	r1, r1
 8008aec:	2900      	cmp	r1, #0
 8008aee:	d1e6      	bne.n	8008abe <I2C_MemoryTransmit_TXE_BTF+0x2e>
 8008af0:	2a21      	cmp	r2, #33	; 0x21
 8008af2:	d1e4      	bne.n	8008abe <I2C_MemoryTransmit_TXE_BTF+0x2e>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 8008af4:	6802      	ldr	r2, [r0, #0]
{
 8008af6:	b510      	push	{r4, lr}
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 8008af8:	6854      	ldr	r4, [r2, #4]
 8008afa:	f424 64e0 	bic.w	r4, r4, #1792	; 0x700
 8008afe:	6054      	str	r4, [r2, #4]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8008b00:	6814      	ldr	r4, [r2, #0]
 8008b02:	f444 7400 	orr.w	r4, r4, #512	; 0x200
 8008b06:	6014      	str	r4, [r2, #0]
      hi2c->State = HAL_I2C_STATE_READY;
 8008b08:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 8008b0a:	6301      	str	r1, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_READY;
 8008b0c:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 8008b10:	f880 103e 	strb.w	r1, [r0, #62]	; 0x3e
      HAL_I2C_MemTxCpltCallback(hi2c);
 8008b14:	f7ff ffba 	bl	8008a8c <HAL_I2C_MemTxCpltCallback>
}
 8008b18:	bd10      	pop	{r4, pc}
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 8008b1a:	2a21      	cmp	r2, #33	; 0x21
 8008b1c:	d00a      	beq.n	8008b34 <I2C_MemoryTransmit_TXE_BTF+0xa4>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 8008b1e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8008b20:	4770      	bx	lr
      hi2c->Instance->CR1 |= I2C_CR1_START;
 8008b22:	6801      	ldr	r1, [r0, #0]
 8008b24:	680a      	ldr	r2, [r1, #0]
 8008b26:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8008b2a:	600a      	str	r2, [r1, #0]
      hi2c->EventCount++;
 8008b2c:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8008b2e:	3201      	adds	r2, #1
 8008b30:	6502      	str	r2, [r0, #80]	; 0x50
 8008b32:	4770      	bx	lr
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8008b34:	6a41      	ldr	r1, [r0, #36]	; 0x24
 8008b36:	6802      	ldr	r2, [r0, #0]
 8008b38:	f811 0b01 	ldrb.w	r0, [r1], #1
 8008b3c:	6110      	str	r0, [r2, #16]
      hi2c->XferCount--;
 8008b3e:	8d5a      	ldrh	r2, [r3, #42]	; 0x2a
      hi2c->pBuffPtr++;
 8008b40:	6259      	str	r1, [r3, #36]	; 0x24
      hi2c->XferCount--;
 8008b42:	3a01      	subs	r2, #1
 8008b44:	b292      	uxth	r2, r2
 8008b46:	855a      	strh	r2, [r3, #42]	; 0x2a
 8008b48:	4770      	bx	lr
 8008b4a:	bf00      	nop

08008b4c <HAL_I2C_MemRxCpltCallback>:
 8008b4c:	4770      	bx	lr
 8008b4e:	bf00      	nop

08008b50 <HAL_I2C_ErrorCallback>:
 8008b50:	4770      	bx	lr
 8008b52:	bf00      	nop

08008b54 <HAL_I2C_AbortCpltCallback>:
 8008b54:	4770      	bx	lr
 8008b56:	bf00      	nop

08008b58 <I2C_DMAAbort>:
{
 8008b58:	b570      	push	{r4, r5, r6, lr}
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 8008b5a:	4b3a      	ldr	r3, [pc, #232]	; (8008c44 <I2C_DMAAbort+0xec>)
 8008b5c:	4a3a      	ldr	r2, [pc, #232]	; (8008c48 <I2C_DMAAbort+0xf0>)
 8008b5e:	681b      	ldr	r3, [r3, #0]
  I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent; /* Derogation MISRAC2012-Rule-11.5 */
 8008b60:	6b80      	ldr	r0, [r0, #56]	; 0x38
{
 8008b62:	b082      	sub	sp, #8
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 8008b64:	08db      	lsrs	r3, r3, #3
  __IO uint32_t count = 0U;
 8008b66:	2100      	movs	r1, #0
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 8008b68:	fba2 2303 	umull	r2, r3, r2, r3
  __IO uint32_t count = 0U;
 8008b6c:	9101      	str	r1, [sp, #4]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 8008b6e:	0a1b      	lsrs	r3, r3, #8
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 8008b70:	f890 103d 	ldrb.w	r1, [r0, #61]	; 0x3d
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 8008b74:	6802      	ldr	r2, [r0, #0]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 8008b76:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8008b7a:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 8008b7e:	b2c9      	uxtb	r1, r1
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 8008b80:	9301      	str	r3, [sp, #4]
 8008b82:	e005      	b.n	8008b90 <I2C_DMAAbort+0x38>
    count--;
 8008b84:	9b01      	ldr	r3, [sp, #4]
 8008b86:	3b01      	subs	r3, #1
 8008b88:	9301      	str	r3, [sp, #4]
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 8008b8a:	6813      	ldr	r3, [r2, #0]
 8008b8c:	059b      	lsls	r3, r3, #22
 8008b8e:	d506      	bpl.n	8008b9e <I2C_DMAAbort+0x46>
    if (count == 0U)
 8008b90:	9b01      	ldr	r3, [sp, #4]
 8008b92:	2b00      	cmp	r3, #0
 8008b94:	d1f6      	bne.n	8008b84 <I2C_DMAAbort+0x2c>
      hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8008b96:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8008b98:	f043 0320 	orr.w	r3, r3, #32
 8008b9c:	6403      	str	r3, [r0, #64]	; 0x40
  if (hi2c->hdmatx != NULL)
 8008b9e:	6b44      	ldr	r4, [r0, #52]	; 0x34
 8008ba0:	b34c      	cbz	r4, 8008bf6 <I2C_DMAAbort+0x9e>
  if (hi2c->hdmarx != NULL)
 8008ba2:	6b83      	ldr	r3, [r0, #56]	; 0x38
    hi2c->hdmatx->XferCpltCallback = NULL;
 8008ba4:	2500      	movs	r5, #0
 8008ba6:	63e5      	str	r5, [r4, #60]	; 0x3c
  if (hi2c->hdmarx != NULL)
 8008ba8:	b1f3      	cbz	r3, 8008be8 <I2C_DMAAbort+0x90>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8008baa:	6816      	ldr	r6, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 8008bac:	63dd      	str	r5, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8008bae:	f426 6680 	bic.w	r6, r6, #1024	; 0x400
 8008bb2:	6016      	str	r6, [r2, #0]
  hi2c->XferCount = 0U;
 8008bb4:	8545      	strh	r5, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 8008bb6:	6525      	str	r5, [r4, #80]	; 0x50
    hi2c->hdmarx->XferAbortCallback = NULL;
 8008bb8:	2400      	movs	r4, #0
 8008bba:	651c      	str	r4, [r3, #80]	; 0x50
  __HAL_I2C_DISABLE(hi2c);
 8008bbc:	6813      	ldr	r3, [r2, #0]
 8008bbe:	f023 0301 	bic.w	r3, r3, #1
 8008bc2:	6013      	str	r3, [r2, #0]
  if (hi2c->State == HAL_I2C_STATE_ABORT)
 8008bc4:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8008bc8:	2b60      	cmp	r3, #96	; 0x60
 8008bca:	d02a      	beq.n	8008c22 <I2C_DMAAbort+0xca>
    if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 8008bcc:	f001 0128 	and.w	r1, r1, #40	; 0x28
 8008bd0:	2928      	cmp	r1, #40	; 0x28
 8008bd2:	d019      	beq.n	8008c08 <I2C_DMAAbort+0xb0>
      hi2c->State = HAL_I2C_STATE_READY;
 8008bd4:	2220      	movs	r2, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 8008bd6:	2300      	movs	r3, #0
      hi2c->State = HAL_I2C_STATE_READY;
 8008bd8:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 8008bdc:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    HAL_I2C_ErrorCallback(hi2c);
 8008be0:	f7ff ffb6 	bl	8008b50 <HAL_I2C_ErrorCallback>
}
 8008be4:	b002      	add	sp, #8
 8008be6:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8008be8:	6815      	ldr	r5, [r2, #0]
 8008bea:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 8008bee:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 8008bf0:	8543      	strh	r3, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 8008bf2:	6523      	str	r3, [r4, #80]	; 0x50
  if (hi2c->hdmarx != NULL)
 8008bf4:	e7e2      	b.n	8008bbc <I2C_DMAAbort+0x64>
  if (hi2c->hdmarx != NULL)
 8008bf6:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8008bf8:	b1f3      	cbz	r3, 8008c38 <I2C_DMAAbort+0xe0>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8008bfa:	6815      	ldr	r5, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 8008bfc:	63dc      	str	r4, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8008bfe:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 8008c02:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 8008c04:	8544      	strh	r4, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 8008c06:	e7d7      	b.n	8008bb8 <I2C_DMAAbort+0x60>
      __HAL_I2C_ENABLE(hi2c);
 8008c08:	6813      	ldr	r3, [r2, #0]
 8008c0a:	f043 0301 	orr.w	r3, r3, #1
 8008c0e:	6013      	str	r3, [r2, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8008c10:	6813      	ldr	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 8008c12:	2400      	movs	r4, #0
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8008c14:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8008c18:	6013      	str	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 8008c1a:	6304      	str	r4, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 8008c1c:	f880 103d 	strb.w	r1, [r0, #61]	; 0x3d
 8008c20:	e7de      	b.n	8008be0 <I2C_DMAAbort+0x88>
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 8008c22:	2300      	movs	r3, #0
    hi2c->State         = HAL_I2C_STATE_READY;
 8008c24:	2220      	movs	r2, #32
 8008c26:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 8008c2a:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    hi2c->ErrorCode     = HAL_I2C_ERROR_NONE;
 8008c2e:	6403      	str	r3, [r0, #64]	; 0x40
    HAL_I2C_AbortCpltCallback(hi2c);
 8008c30:	f7ff ff90 	bl	8008b54 <HAL_I2C_AbortCpltCallback>
}
 8008c34:	b002      	add	sp, #8
 8008c36:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8008c38:	6814      	ldr	r4, [r2, #0]
 8008c3a:	f424 6480 	bic.w	r4, r4, #1024	; 0x400
 8008c3e:	6014      	str	r4, [r2, #0]
  hi2c->XferCount = 0U;
 8008c40:	8543      	strh	r3, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 8008c42:	e7bb      	b.n	8008bbc <I2C_DMAAbort+0x64>
 8008c44:	20000078 	.word	0x20000078
 8008c48:	14f8b589 	.word	0x14f8b589

08008c4c <I2C_ITError>:
{
 8008c4c:	b510      	push	{r4, lr}
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 8008c4e:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  HAL_I2C_ModeTypeDef CurrentMode = hi2c->Mode;
 8008c52:	f890 303e 	ldrb.w	r3, [r0, #62]	; 0x3e
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 8008c56:	2b10      	cmp	r3, #16
{
 8008c58:	4604      	mov	r4, r0
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 8008c5a:	b2d2      	uxtb	r2, r2
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 8008c5c:	d039      	beq.n	8008cd2 <I2C_ITError+0x86>
 8008c5e:	b2d9      	uxtb	r1, r3
 8008c60:	2940      	cmp	r1, #64	; 0x40
 8008c62:	d036      	beq.n	8008cd2 <I2C_ITError+0x86>
  if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 8008c64:	f002 0128 	and.w	r1, r2, #40	; 0x28
 8008c68:	2928      	cmp	r1, #40	; 0x28
 8008c6a:	d03d      	beq.n	8008ce8 <I2C_ITError+0x9c>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 8008c6c:	6823      	ldr	r3, [r4, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 8008c6e:	6859      	ldr	r1, [r3, #4]
 8008c70:	0508      	lsls	r0, r1, #20
 8008c72:	d407      	bmi.n	8008c84 <I2C_ITError+0x38>
 8008c74:	2a60      	cmp	r2, #96	; 0x60
 8008c76:	d005      	beq.n	8008c84 <I2C_ITError+0x38>
      hi2c->State = HAL_I2C_STATE_READY;
 8008c78:	2120      	movs	r1, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 8008c7a:	2200      	movs	r2, #0
      hi2c->State = HAL_I2C_STATE_READY;
 8008c7c:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 8008c80:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->PreviousState = I2C_STATE_NONE;
 8008c84:	2200      	movs	r2, #0
 8008c86:	6322      	str	r2, [r4, #48]	; 0x30
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 8008c88:	685a      	ldr	r2, [r3, #4]
 8008c8a:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 8008c8e:	d134      	bne.n	8008cfa <I2C_ITError+0xae>
  else if (hi2c->State == HAL_I2C_STATE_ABORT)
 8008c90:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 8008c94:	2960      	cmp	r1, #96	; 0x60
 8008c96:	d075      	beq.n	8008d84 <I2C_ITError+0x138>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 8008c98:	695a      	ldr	r2, [r3, #20]
 8008c9a:	0650      	lsls	r0, r2, #25
 8008c9c:	d505      	bpl.n	8008caa <I2C_ITError+0x5e>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8008c9e:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8008ca0:	691b      	ldr	r3, [r3, #16]
 8008ca2:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 8008ca4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008ca6:	3301      	adds	r3, #1
 8008ca8:	6263      	str	r3, [r4, #36]	; 0x24
    HAL_I2C_ErrorCallback(hi2c);
 8008caa:	4620      	mov	r0, r4
 8008cac:	f7ff ff50 	bl	8008b50 <HAL_I2C_ErrorCallback>
  CurrentError = hi2c->ErrorCode;
 8008cb0:	6c23      	ldr	r3, [r4, #64]	; 0x40
  if (((CurrentError & HAL_I2C_ERROR_BERR) == HAL_I2C_ERROR_BERR) || \
 8008cb2:	0719      	lsls	r1, r3, #28
 8008cb4:	d004      	beq.n	8008cc0 <I2C_ITError+0x74>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 8008cb6:	6822      	ldr	r2, [r4, #0]
 8008cb8:	6853      	ldr	r3, [r2, #4]
 8008cba:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 8008cbe:	6053      	str	r3, [r2, #4]
  CurrentState = hi2c->State;
 8008cc0:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 8008cc4:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8008cc6:	0752      	lsls	r2, r2, #29
  CurrentState = hi2c->State;
 8008cc8:	b2db      	uxtb	r3, r3
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 8008cca:	d501      	bpl.n	8008cd0 <I2C_ITError+0x84>
 8008ccc:	2b28      	cmp	r3, #40	; 0x28
 8008cce:	d02f      	beq.n	8008d30 <I2C_ITError+0xe4>
}
 8008cd0:	bd10      	pop	{r4, pc}
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 8008cd2:	2a22      	cmp	r2, #34	; 0x22
 8008cd4:	d1c6      	bne.n	8008c64 <I2C_ITError+0x18>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 8008cd6:	6823      	ldr	r3, [r4, #0]
 8008cd8:	681a      	ldr	r2, [r3, #0]
 8008cda:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8008cde:	601a      	str	r2, [r3, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 8008ce0:	685a      	ldr	r2, [r3, #4]
 8008ce2:	0512      	lsls	r2, r2, #20
 8008ce4:	d5c8      	bpl.n	8008c78 <I2C_ITError+0x2c>
 8008ce6:	e7cd      	b.n	8008c84 <I2C_ITError+0x38>
    hi2c->PreviousState = I2C_STATE_NONE;
 8008ce8:	2300      	movs	r3, #0
 8008cea:	6323      	str	r3, [r4, #48]	; 0x30
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 8008cec:	6823      	ldr	r3, [r4, #0]
    hi2c->State = HAL_I2C_STATE_LISTEN;
 8008cee:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 8008cf2:	685a      	ldr	r2, [r3, #4]
 8008cf4:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 8008cf8:	d0ca      	beq.n	8008c90 <I2C_ITError+0x44>
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 8008cfa:	685a      	ldr	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 8008cfc:	6b60      	ldr	r0, [r4, #52]	; 0x34
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 8008cfe:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8008d02:	605a      	str	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 8008d04:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 8008d08:	2b01      	cmp	r3, #1
 8008d0a:	d01e      	beq.n	8008d4a <I2C_ITError+0xfe>
      hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 8008d0c:	4b28      	ldr	r3, [pc, #160]	; (8008db0 <I2C_ITError+0x164>)
 8008d0e:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 8008d10:	f7fe fe6c 	bl	80079ec <HAL_DMA_Abort_IT>
 8008d14:	2800      	cmp	r0, #0
 8008d16:	d0cb      	beq.n	8008cb0 <I2C_ITError+0x64>
        __HAL_I2C_DISABLE(hi2c);
 8008d18:	6822      	ldr	r2, [r4, #0]
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 8008d1a:	6b60      	ldr	r0, [r4, #52]	; 0x34
        __HAL_I2C_DISABLE(hi2c);
 8008d1c:	6813      	ldr	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 8008d1e:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 8008d20:	f023 0301 	bic.w	r3, r3, #1
 8008d24:	6013      	str	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 8008d26:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 8008d2a:	6d03      	ldr	r3, [r0, #80]	; 0x50
 8008d2c:	4798      	blx	r3
 8008d2e:	e7bf      	b.n	8008cb0 <I2C_ITError+0x64>
    hi2c->PreviousState = I2C_STATE_NONE;
 8008d30:	2300      	movs	r3, #0
    hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
 8008d32:	4920      	ldr	r1, [pc, #128]	; (8008db4 <I2C_ITError+0x168>)
 8008d34:	62e1      	str	r1, [r4, #44]	; 0x2c
    hi2c->State         = HAL_I2C_STATE_READY;
 8008d36:	2220      	movs	r2, #32
    hi2c->PreviousState = I2C_STATE_NONE;
 8008d38:	6323      	str	r3, [r4, #48]	; 0x30
    HAL_I2C_ListenCpltCallback(hi2c);
 8008d3a:	4620      	mov	r0, r4
    hi2c->State         = HAL_I2C_STATE_READY;
 8008d3c:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 8008d40:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    HAL_I2C_ListenCpltCallback(hi2c);
 8008d44:	f7ff fea0 	bl	8008a88 <HAL_I2C_ListenCpltCallback>
}
 8008d48:	bd10      	pop	{r4, pc}
      hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 8008d4a:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 8008d4c:	4b18      	ldr	r3, [pc, #96]	; (8008db0 <I2C_ITError+0x164>)
 8008d4e:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 8008d50:	f7fe fe4c 	bl	80079ec <HAL_DMA_Abort_IT>
 8008d54:	2800      	cmp	r0, #0
 8008d56:	d0ab      	beq.n	8008cb0 <I2C_ITError+0x64>
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 8008d58:	6823      	ldr	r3, [r4, #0]
 8008d5a:	695a      	ldr	r2, [r3, #20]
 8008d5c:	0651      	lsls	r1, r2, #25
 8008d5e:	d506      	bpl.n	8008d6e <I2C_ITError+0x122>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8008d60:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8008d62:	691b      	ldr	r3, [r3, #16]
 8008d64:	7013      	strb	r3, [r2, #0]
          hi2c->pBuffPtr++;
 8008d66:	6a62      	ldr	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 8008d68:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 8008d6a:	3201      	adds	r2, #1
 8008d6c:	6262      	str	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 8008d6e:	681a      	ldr	r2, [r3, #0]
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 8008d70:	6ba0      	ldr	r0, [r4, #56]	; 0x38
        __HAL_I2C_DISABLE(hi2c);
 8008d72:	f022 0201 	bic.w	r2, r2, #1
        hi2c->State = HAL_I2C_STATE_READY;
 8008d76:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 8008d78:	601a      	str	r2, [r3, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 8008d7a:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 8008d7e:	6d03      	ldr	r3, [r0, #80]	; 0x50
 8008d80:	4798      	blx	r3
 8008d82:	e795      	b.n	8008cb0 <I2C_ITError+0x64>
    hi2c->State = HAL_I2C_STATE_READY;
 8008d84:	2120      	movs	r1, #32
 8008d86:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8008d8a:	6422      	str	r2, [r4, #64]	; 0x40
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 8008d8c:	695a      	ldr	r2, [r3, #20]
 8008d8e:	0652      	lsls	r2, r2, #25
 8008d90:	d506      	bpl.n	8008da0 <I2C_ITError+0x154>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8008d92:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8008d94:	691b      	ldr	r3, [r3, #16]
 8008d96:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 8008d98:	6a62      	ldr	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 8008d9a:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 8008d9c:	3201      	adds	r2, #1
 8008d9e:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 8008da0:	681a      	ldr	r2, [r3, #0]
 8008da2:	f022 0201 	bic.w	r2, r2, #1
    HAL_I2C_AbortCpltCallback(hi2c);
 8008da6:	4620      	mov	r0, r4
    __HAL_I2C_DISABLE(hi2c);
 8008da8:	601a      	str	r2, [r3, #0]
    HAL_I2C_AbortCpltCallback(hi2c);
 8008daa:	f7ff fed3 	bl	8008b54 <HAL_I2C_AbortCpltCallback>
 8008dae:	e77f      	b.n	8008cb0 <I2C_ITError+0x64>
 8008db0:	08008b59 	.word	0x08008b59
 8008db4:	ffff0000 	.word	0xffff0000

08008db8 <HAL_I2C_EV_IRQHandler>:
{
 8008db8:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 8008dba:	6803      	ldr	r3, [r0, #0]
{
 8008dbc:	4604      	mov	r4, r0
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 8008dbe:	6858      	ldr	r0, [r3, #4]
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 8008dc0:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 8008dc2:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 8008dc6:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 8008dca:	2910      	cmp	r1, #16
{
 8008dcc:	b08e      	sub	sp, #56	; 0x38
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 8008dce:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 8008dd0:	fa5f fc81 	uxtb.w	ip, r1
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 8008dd4:	d022      	beq.n	8008e1c <HAL_I2C_EV_IRQHandler+0x64>
 8008dd6:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 8008dda:	d01f      	beq.n	8008e1c <HAL_I2C_EV_IRQHandler+0x64>
    if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 8008ddc:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8008dde:	2900      	cmp	r1, #0
 8008de0:	f000 8094 	beq.w	8008f0c <HAL_I2C_EV_IRQHandler+0x154>
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 8008de4:	6959      	ldr	r1, [r3, #20]
  uint32_t sr2itflags               = 0U;
 8008de6:	2500      	movs	r5, #0
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 8008de8:	f011 0602 	ands.w	r6, r1, #2
 8008dec:	d059      	beq.n	8008ea2 <HAL_I2C_EV_IRQHandler+0xea>
 8008dee:	0586      	lsls	r6, r0, #22
 8008df0:	d559      	bpl.n	8008ea6 <HAL_I2C_EV_IRQHandler+0xee>
      if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 8008df2:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8008df4:	b102      	cbz	r2, 8008df8 <HAL_I2C_EV_IRQHandler+0x40>
        sr2itflags   = READ_REG(hi2c->Instance->SR2);
 8008df6:	699d      	ldr	r5, [r3, #24]
  if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 8008df8:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 8008dfc:	f002 0228 	and.w	r2, r2, #40	; 0x28
 8008e00:	2a28      	cmp	r2, #40	; 0x28
 8008e02:	f000 821e 	beq.w	8009242 <HAL_I2C_EV_IRQHandler+0x48a>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8008e06:	2200      	movs	r2, #0
 8008e08:	920c      	str	r2, [sp, #48]	; 0x30
 8008e0a:	6959      	ldr	r1, [r3, #20]
 8008e0c:	910c      	str	r1, [sp, #48]	; 0x30
 8008e0e:	699b      	ldr	r3, [r3, #24]
 8008e10:	930c      	str	r3, [sp, #48]	; 0x30
 8008e12:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    __HAL_UNLOCK(hi2c);
 8008e14:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
}
 8008e18:	b00e      	add	sp, #56	; 0x38
 8008e1a:	bd70      	pop	{r4, r5, r6, pc}
    sr2itflags   = READ_REG(hi2c->Instance->SR2);
 8008e1c:	699e      	ldr	r6, [r3, #24]
    sr1itflags   = READ_REG(hi2c->Instance->SR1);
 8008e1e:	6959      	ldr	r1, [r3, #20]
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) == RESET) && (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST(CurrentXferOptions) == 1U))
 8008e20:	f011 0f01 	tst.w	r1, #1
 8008e24:	d11a      	bne.n	8008e5c <HAL_I2C_EV_IRQHandler+0xa4>
 8008e26:	f5b5 0f2a 	cmp.w	r5, #11141120	; 0xaa0000
 8008e2a:	d0f5      	beq.n	8008e18 <HAL_I2C_EV_IRQHandler+0x60>
 8008e2c:	f1b5 4f2a 	cmp.w	r5, #2852126720	; 0xaa000000
 8008e30:	d0f2      	beq.n	8008e18 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 8008e32:	070d      	lsls	r5, r1, #28
 8008e34:	d56d      	bpl.n	8008f12 <HAL_I2C_EV_IRQHandler+0x15a>
 8008e36:	0585      	lsls	r5, r0, #22
 8008e38:	f140 8083 	bpl.w	8008f42 <HAL_I2C_EV_IRQHandler+0x18a>
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 8008e3c:	6c62      	ldr	r2, [r4, #68]	; 0x44
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 8008e3e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8008e40:	b2d2      	uxtb	r2, r2
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 8008e42:	611a      	str	r2, [r3, #16]
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 8008e44:	2900      	cmp	r1, #0
 8008e46:	f000 81e3 	beq.w	8009210 <HAL_I2C_EV_IRQHandler+0x458>
 8008e4a:	6bca      	ldr	r2, [r1, #60]	; 0x3c
 8008e4c:	2a00      	cmp	r2, #0
 8008e4e:	f000 81df 	beq.w	8009210 <HAL_I2C_EV_IRQHandler+0x458>
    SET_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 8008e52:	685a      	ldr	r2, [r3, #4]
 8008e54:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8008e58:	605a      	str	r2, [r3, #4]
 8008e5a:	e7dd      	b.n	8008e18 <HAL_I2C_EV_IRQHandler+0x60>
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 8008e5c:	0585      	lsls	r5, r0, #22
 8008e5e:	d56e      	bpl.n	8008f3e <HAL_I2C_EV_IRQHandler+0x186>
static void I2C_ConvertOtherXferOptions(I2C_HandleTypeDef *hi2c)
{
  /* if user set XferOptions to I2C_OTHER_FRAME            */
  /* it request implicitly to generate a restart condition */
  /* set XferOptions to I2C_FIRST_FRAME                    */
  if (hi2c->XferOptions == I2C_OTHER_FRAME)
 8008e60:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8008e62:	f5b2 0f2a 	cmp.w	r2, #11141120	; 0xaa0000
 8008e66:	f000 81e9 	beq.w	800923c <HAL_I2C_EV_IRQHandler+0x484>
  }
  /* else if user set XferOptions to I2C_OTHER_AND_LAST_FRAME */
  /* it request implicitly to generate a restart condition    */
  /* then generate a stop condition at the end of transfer    */
  /* set XferOptions to I2C_FIRST_AND_LAST_FRAME              */
  else if (hi2c->XferOptions == I2C_OTHER_AND_LAST_FRAME)
 8008e6a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8008e6c:	f1b2 4f2a 	cmp.w	r2, #2852126720	; 0xaa000000
  {
    hi2c->XferOptions = I2C_FIRST_AND_LAST_FRAME;
 8008e70:	bf04      	itt	eq
 8008e72:	2208      	moveq	r2, #8
 8008e74:	62e2      	streq	r2, [r4, #44]	; 0x2c
  if (hi2c->Mode == HAL_I2C_MODE_MEM)
 8008e76:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 8008e7a:	2a40      	cmp	r2, #64	; 0x40
 8008e7c:	f000 81d7 	beq.w	800922e <HAL_I2C_EV_IRQHandler+0x476>
    if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 8008e80:	6922      	ldr	r2, [r4, #16]
 8008e82:	f5b2 4f80 	cmp.w	r2, #16384	; 0x4000
 8008e86:	f000 81b2 	beq.w	80091ee <HAL_I2C_EV_IRQHandler+0x436>
      if (hi2c->EventCount == 0U)
 8008e8a:	6d22      	ldr	r2, [r4, #80]	; 0x50
 8008e8c:	2a00      	cmp	r2, #0
 8008e8e:	f040 81ef 	bne.w	8009270 <HAL_I2C_EV_IRQHandler+0x4b8>
        hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(hi2c->Devaddress);
 8008e92:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8008e94:	11d2      	asrs	r2, r2, #7
 8008e96:	f002 0206 	and.w	r2, r2, #6
 8008e9a:	f042 02f0 	orr.w	r2, r2, #240	; 0xf0
 8008e9e:	611a      	str	r2, [r3, #16]
 8008ea0:	e7ba      	b.n	8008e18 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 8008ea2:	06cd      	lsls	r5, r1, #27
 8008ea4:	d47c      	bmi.n	8008fa0 <HAL_I2C_EV_IRQHandler+0x1e8>
    else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 8008ea6:	f002 02f7 	and.w	r2, r2, #247	; 0xf7
 8008eaa:	2a21      	cmp	r2, #33	; 0x21
 8008eac:	f000 80f5 	beq.w	800909a <HAL_I2C_EV_IRQHandler+0x2e2>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 8008eb0:	064e      	lsls	r6, r1, #25
 8008eb2:	f140 8132 	bpl.w	800911a <HAL_I2C_EV_IRQHandler+0x362>
 8008eb6:	0545      	lsls	r5, r0, #21
 8008eb8:	f140 812f 	bpl.w	800911a <HAL_I2C_EV_IRQHandler+0x362>
 8008ebc:	0749      	lsls	r1, r1, #29
 8008ebe:	f100 812f 	bmi.w	8009120 <HAL_I2C_EV_IRQHandler+0x368>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 8008ec2:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 8008ec6:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8008ec8:	b292      	uxth	r2, r2
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 8008eca:	b2c9      	uxtb	r1, r1
  if (hi2c->XferCount != 0U)
 8008ecc:	2a00      	cmp	r2, #0
 8008ece:	d0a3      	beq.n	8008e18 <HAL_I2C_EV_IRQHandler+0x60>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8008ed0:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8008ed2:	691b      	ldr	r3, [r3, #16]
 8008ed4:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 8008ed6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 8008ed8:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 8008eda:	3b01      	subs	r3, #1
 8008edc:	b29b      	uxth	r3, r3
 8008ede:	8563      	strh	r3, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 8008ee0:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 8008ee2:	3201      	adds	r2, #1
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 8008ee4:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 8008ee6:	6262      	str	r2, [r4, #36]	; 0x24
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 8008ee8:	2b00      	cmp	r3, #0
 8008eea:	d195      	bne.n	8008e18 <HAL_I2C_EV_IRQHandler+0x60>
 8008eec:	292a      	cmp	r1, #42	; 0x2a
 8008eee:	d193      	bne.n	8008e18 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 8008ef0:	6822      	ldr	r2, [r4, #0]
 8008ef2:	6853      	ldr	r3, [r2, #4]
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 8008ef4:	2522      	movs	r5, #34	; 0x22
      hi2c->State = HAL_I2C_STATE_LISTEN;
 8008ef6:	2128      	movs	r1, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 8008ef8:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8008efc:	6053      	str	r3, [r2, #4]
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 8008efe:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 8008f00:	6325      	str	r5, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 8008f02:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 8008f06:	f7ff fdbb 	bl	8008a80 <HAL_I2C_SlaveRxCpltCallback>
 8008f0a:	e785      	b.n	8008e18 <HAL_I2C_EV_IRQHandler+0x60>
      sr2itflags   = READ_REG(hi2c->Instance->SR2);
 8008f0c:	699d      	ldr	r5, [r3, #24]
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 8008f0e:	6959      	ldr	r1, [r3, #20]
 8008f10:	e76a      	b.n	8008de8 <HAL_I2C_EV_IRQHandler+0x30>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 8008f12:	078d      	lsls	r5, r1, #30
 8008f14:	d515      	bpl.n	8008f42 <HAL_I2C_EV_IRQHandler+0x18a>
 8008f16:	0585      	lsls	r5, r0, #22
 8008f18:	d513      	bpl.n	8008f42 <HAL_I2C_EV_IRQHandler+0x18a>
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 8008f1a:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions           = hi2c->XferOptions;
 8008f1e:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  uint32_t Prev_State                   = hi2c->PreviousState;
 8008f20:	6b25      	ldr	r5, [r4, #48]	; 0x30
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 8008f22:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 8008f26:	2922      	cmp	r1, #34	; 0x22
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 8008f28:	b2d2      	uxtb	r2, r2
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 8008f2a:	f000 81b3 	beq.w	8009294 <HAL_I2C_EV_IRQHandler+0x4dc>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8008f2e:	2200      	movs	r2, #0
 8008f30:	920a      	str	r2, [sp, #40]	; 0x28
 8008f32:	695a      	ldr	r2, [r3, #20]
 8008f34:	920a      	str	r2, [sp, #40]	; 0x28
 8008f36:	699b      	ldr	r3, [r3, #24]
 8008f38:	930a      	str	r3, [sp, #40]	; 0x28
 8008f3a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8008f3c:	e76c      	b.n	8008e18 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 8008f3e:	070d      	lsls	r5, r1, #28
 8008f40:	d5e7      	bpl.n	8008f12 <HAL_I2C_EV_IRQHandler+0x15a>
    else if (I2C_CHECK_FLAG(sr2itflags, I2C_FLAG_TRA) != RESET)
 8008f42:	0776      	lsls	r6, r6, #29
 8008f44:	f140 80f5 	bpl.w	8009132 <HAL_I2C_EV_IRQHandler+0x37a>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 8008f48:	685d      	ldr	r5, [r3, #4]
 8008f4a:	052d      	lsls	r5, r5, #20
 8008f4c:	f53f af64 	bmi.w	8008e18 <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 8008f50:	060e      	lsls	r6, r1, #24
 8008f52:	f140 8115 	bpl.w	8009180 <HAL_I2C_EV_IRQHandler+0x3c8>
 8008f56:	0545      	lsls	r5, r0, #21
 8008f58:	f140 8112 	bpl.w	8009180 <HAL_I2C_EV_IRQHandler+0x3c8>
 8008f5c:	074e      	lsls	r6, r1, #29
 8008f5e:	f100 8112 	bmi.w	8009186 <HAL_I2C_EV_IRQHandler+0x3ce>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 8008f62:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 8008f66:	8d20      	ldrh	r0, [r4, #40]	; 0x28
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 8008f68:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 8008f6c:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 8008f6e:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 8008f70:	b2c9      	uxtb	r1, r1
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 8008f72:	2800      	cmp	r0, #0
 8008f74:	f040 8235 	bne.w	80093e2 <HAL_I2C_EV_IRQHandler+0x62a>
 8008f78:	2a21      	cmp	r2, #33	; 0x21
 8008f7a:	f000 8347 	beq.w	800960c <HAL_I2C_EV_IRQHandler+0x854>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 8008f7e:	2940      	cmp	r1, #64	; 0x40
 8008f80:	f47f af4a 	bne.w	8008e18 <HAL_I2C_EV_IRQHandler+0x60>
           ((CurrentMode == HAL_I2C_MODE_MEM) && (CurrentState == HAL_I2C_STATE_BUSY_RX)))
 8008f84:	2a22      	cmp	r2, #34	; 0x22
 8008f86:	f47f af47 	bne.w	8008e18 <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount == 0U)
 8008f8a:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8008f8c:	b292      	uxth	r2, r2
 8008f8e:	2a00      	cmp	r2, #0
 8008f90:	f000 8268 	beq.w	8009464 <HAL_I2C_EV_IRQHandler+0x6ac>
      if (hi2c->Mode == HAL_I2C_MODE_MEM)
 8008f94:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 8008f98:	2a40      	cmp	r2, #64	; 0x40
 8008f9a:	f040 80b4 	bne.w	8009106 <HAL_I2C_EV_IRQHandler+0x34e>
 8008f9e:	e0fc      	b.n	800919a <HAL_I2C_EV_IRQHandler+0x3e2>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 8008fa0:	0585      	lsls	r5, r0, #22
 8008fa2:	d580      	bpl.n	8008ea6 <HAL_I2C_EV_IRQHandler+0xee>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 8008fa4:	f894 503d 	ldrb.w	r5, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 8008fa8:	685a      	ldr	r2, [r3, #4]
 8008faa:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 8008fae:	605a      	str	r2, [r3, #4]
  __HAL_I2C_CLEAR_STOPFLAG(hi2c);
 8008fb0:	960d      	str	r6, [sp, #52]	; 0x34
 8008fb2:	695a      	ldr	r2, [r3, #20]
 8008fb4:	920d      	str	r2, [sp, #52]	; 0x34
 8008fb6:	681a      	ldr	r2, [r3, #0]
 8008fb8:	f042 0201 	orr.w	r2, r2, #1
 8008fbc:	601a      	str	r2, [r3, #0]
 8008fbe:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8008fc0:	681a      	ldr	r2, [r3, #0]
 8008fc2:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8008fc6:	601a      	str	r2, [r3, #0]
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 8008fc8:	685a      	ldr	r2, [r3, #4]
 8008fca:	0511      	lsls	r1, r2, #20
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 8008fcc:	b2ed      	uxtb	r5, r5
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 8008fce:	d521      	bpl.n	8009014 <HAL_I2C_EV_IRQHandler+0x25c>
    if ((CurrentState == HAL_I2C_STATE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 8008fd0:	f005 02f7 	and.w	r2, r5, #247	; 0xf7
 8008fd4:	2a22      	cmp	r2, #34	; 0x22
 8008fd6:	f000 817a 	beq.w	80092ce <HAL_I2C_EV_IRQHandler+0x516>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmatx));
 8008fda:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8008fdc:	6802      	ldr	r2, [r0, #0]
 8008fde:	6852      	ldr	r2, [r2, #4]
 8008fe0:	b292      	uxth	r2, r2
 8008fe2:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 8008fe4:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8008fe6:	b292      	uxth	r2, r2
 8008fe8:	b11a      	cbz	r2, 8008ff2 <HAL_I2C_EV_IRQHandler+0x23a>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 8008fea:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8008fec:	f042 0204 	orr.w	r2, r2, #4
 8008ff0:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 8008ff2:	685a      	ldr	r2, [r3, #4]
 8008ff4:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8008ff8:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmatx) != HAL_DMA_STATE_READY)
 8008ffa:	f7fe fd09 	bl	8007a10 <HAL_DMA_GetState>
 8008ffe:	2801      	cmp	r0, #1
 8009000:	d008      	beq.n	8009014 <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 8009002:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8009004:	4b99      	ldr	r3, [pc, #612]	; (800926c <HAL_I2C_EV_IRQHandler+0x4b4>)
 8009006:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 8009008:	f7fe fcf0 	bl	80079ec <HAL_DMA_Abort_IT>
 800900c:	b110      	cbz	r0, 8009014 <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800900e:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8009010:	6d03      	ldr	r3, [r0, #80]	; 0x50
 8009012:	4798      	blx	r3
  if (hi2c->XferCount != 0U)
 8009014:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8009016:	b29b      	uxth	r3, r3
 8009018:	b313      	cbz	r3, 8009060 <HAL_I2C_EV_IRQHandler+0x2a8>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800901a:	6823      	ldr	r3, [r4, #0]
 800901c:	695a      	ldr	r2, [r3, #20]
 800901e:	0752      	lsls	r2, r2, #29
 8009020:	d50a      	bpl.n	8009038 <HAL_I2C_EV_IRQHandler+0x280>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009022:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8009024:	691b      	ldr	r3, [r3, #16]
 8009026:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 8009028:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800902a:	6a63      	ldr	r3, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800902c:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
 800902e:	1c59      	adds	r1, r3, #1
      hi2c->XferCount--;
 8009030:	b292      	uxth	r2, r2
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 8009032:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 8009034:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8009036:	8562      	strh	r2, [r4, #42]	; 0x2a
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 8009038:	695a      	ldr	r2, [r3, #20]
 800903a:	0656      	lsls	r6, r2, #25
 800903c:	d509      	bpl.n	8009052 <HAL_I2C_EV_IRQHandler+0x29a>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800903e:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8009040:	691b      	ldr	r3, [r3, #16]
 8009042:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 8009044:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 8009046:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8009048:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
 800904a:	3201      	adds	r2, #1
      hi2c->XferCount--;
 800904c:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800904e:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8009050:	8563      	strh	r3, [r4, #42]	; 0x2a
    if (hi2c->XferCount != 0U)
 8009052:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8009054:	b29b      	uxth	r3, r3
 8009056:	b11b      	cbz	r3, 8009060 <HAL_I2C_EV_IRQHandler+0x2a8>
      hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 8009058:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800905a:	f043 0304 	orr.w	r3, r3, #4
 800905e:	6423      	str	r3, [r4, #64]	; 0x40
  if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 8009060:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8009062:	2b00      	cmp	r3, #0
 8009064:	f040 80dd 	bne.w	8009222 <HAL_I2C_EV_IRQHandler+0x46a>
    if (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN)
 8009068:	2d2a      	cmp	r5, #42	; 0x2a
 800906a:	f000 8151 	beq.w	8009310 <HAL_I2C_EV_IRQHandler+0x558>
    if (hi2c->State == HAL_I2C_STATE_LISTEN)
 800906e:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8009072:	2b28      	cmp	r3, #40	; 0x28
 8009074:	f000 8154 	beq.w	8009320 <HAL_I2C_EV_IRQHandler+0x568>
      if ((hi2c->PreviousState  == I2C_STATE_SLAVE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX))
 8009078:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800907a:	2b22      	cmp	r3, #34	; 0x22
 800907c:	d002      	beq.n	8009084 <HAL_I2C_EV_IRQHandler+0x2cc>
 800907e:	2d22      	cmp	r5, #34	; 0x22
 8009080:	f47f aeca 	bne.w	8008e18 <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->PreviousState = I2C_STATE_NONE;
 8009084:	2300      	movs	r3, #0
        hi2c->State = HAL_I2C_STATE_READY;
 8009086:	2220      	movs	r2, #32
        hi2c->PreviousState = I2C_STATE_NONE;
 8009088:	6323      	str	r3, [r4, #48]	; 0x30
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800908a:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800908c:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode = HAL_I2C_MODE_NONE;
 8009090:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 8009094:	f7ff fcf4 	bl	8008a80 <HAL_I2C_SlaveRxCpltCallback>
 8009098:	e6be      	b.n	8008e18 <HAL_I2C_EV_IRQHandler+0x60>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800909a:	060d      	lsls	r5, r1, #24
 800909c:	d528      	bpl.n	80090f0 <HAL_I2C_EV_IRQHandler+0x338>
 800909e:	0546      	lsls	r6, r0, #21
 80090a0:	d526      	bpl.n	80090f0 <HAL_I2C_EV_IRQHandler+0x338>
 80090a2:	074d      	lsls	r5, r1, #29
 80090a4:	d427      	bmi.n	80090f6 <HAL_I2C_EV_IRQHandler+0x33e>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 80090a6:	f894 003d 	ldrb.w	r0, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 80090aa:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 80090ac:	b289      	uxth	r1, r1
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 80090ae:	b2c0      	uxtb	r0, r0
  if (hi2c->XferCount != 0U)
 80090b0:	2900      	cmp	r1, #0
 80090b2:	f43f aeb1 	beq.w	8008e18 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 80090b6:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80090b8:	f811 5b01 	ldrb.w	r5, [r1], #1
 80090bc:	611d      	str	r5, [r3, #16]
    hi2c->pBuffPtr++;
 80090be:	6261      	str	r1, [r4, #36]	; 0x24
    hi2c->XferCount--;
 80090c0:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 80090c2:	3901      	subs	r1, #1
 80090c4:	b289      	uxth	r1, r1
 80090c6:	8561      	strh	r1, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 80090c8:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 80090ca:	b289      	uxth	r1, r1
 80090cc:	2900      	cmp	r1, #0
 80090ce:	f47f aea3 	bne.w	8008e18 <HAL_I2C_EV_IRQHandler+0x60>
 80090d2:	2829      	cmp	r0, #41	; 0x29
 80090d4:	f47f aea0 	bne.w	8008e18 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 80090d8:	6859      	ldr	r1, [r3, #4]
      hi2c->State = HAL_I2C_STATE_LISTEN;
 80090da:	2528      	movs	r5, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 80090dc:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 80090e0:	6059      	str	r1, [r3, #4]
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 80090e2:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
 80090e4:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 80090e6:	f884 503d 	strb.w	r5, [r4, #61]	; 0x3d
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 80090ea:	f7ff fcc7 	bl	8008a7c <HAL_I2C_SlaveTxCpltCallback>
 80090ee:	e693      	b.n	8008e18 <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 80090f0:	0749      	lsls	r1, r1, #29
 80090f2:	f57f ae91 	bpl.w	8008e18 <HAL_I2C_EV_IRQHandler+0x60>
 80090f6:	0582      	lsls	r2, r0, #22
 80090f8:	f57f ae8e 	bpl.w	8008e18 <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 80090fc:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 80090fe:	b292      	uxth	r2, r2
 8009100:	2a00      	cmp	r2, #0
 8009102:	f43f ae89 	beq.w	8008e18 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 8009106:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8009108:	f812 1b01 	ldrb.w	r1, [r2], #1
 800910c:	6119      	str	r1, [r3, #16]
    hi2c->XferCount--;
 800910e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 8009110:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 8009112:	3b01      	subs	r3, #1
 8009114:	b29b      	uxth	r3, r3
 8009116:	8563      	strh	r3, [r4, #42]	; 0x2a
 8009118:	e67e      	b.n	8008e18 <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800911a:	074a      	lsls	r2, r1, #29
 800911c:	f57f ae7c 	bpl.w	8008e18 <HAL_I2C_EV_IRQHandler+0x60>
 8009120:	0586      	lsls	r6, r0, #22
 8009122:	f57f ae79 	bpl.w	8008e18 <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 8009126:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8009128:	b292      	uxth	r2, r2
 800912a:	2a00      	cmp	r2, #0
 800912c:	f43f ae74 	beq.w	8008e18 <HAL_I2C_EV_IRQHandler+0x60>
 8009130:	e01b      	b.n	800916a <HAL_I2C_EV_IRQHandler+0x3b2>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 8009132:	685a      	ldr	r2, [r3, #4]
 8009134:	0512      	lsls	r2, r2, #20
 8009136:	f53f ae6f 	bmi.w	8008e18 <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800913a:	064e      	lsls	r6, r1, #25
 800913c:	d433      	bmi.n	80091a6 <HAL_I2C_EV_IRQHandler+0x3ee>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800913e:	0749      	lsls	r1, r1, #29
 8009140:	f57f ae6a 	bpl.w	8008e18 <HAL_I2C_EV_IRQHandler+0x60>
 8009144:	0582      	lsls	r2, r0, #22
 8009146:	f57f ae67 	bpl.w	8008e18 <HAL_I2C_EV_IRQHandler+0x60>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800914a:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->XferCount == 4U)
 800914c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800914e:	b292      	uxth	r2, r2
 8009150:	2a04      	cmp	r2, #4
 8009152:	f000 8113 	beq.w	800937c <HAL_I2C_EV_IRQHandler+0x5c4>
  else if (hi2c->XferCount == 3U)
 8009156:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8009158:	b292      	uxth	r2, r2
 800915a:	2a03      	cmp	r2, #3
 800915c:	f000 8153 	beq.w	8009406 <HAL_I2C_EV_IRQHandler+0x64e>
  else if (hi2c->XferCount == 2U)
 8009160:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8009162:	b292      	uxth	r2, r2
 8009164:	2a02      	cmp	r2, #2
 8009166:	f000 8182 	beq.w	800946e <HAL_I2C_EV_IRQHandler+0x6b6>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800916a:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800916c:	691b      	ldr	r3, [r3, #16]
 800916e:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 8009170:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 8009172:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 8009174:	3b01      	subs	r3, #1
    hi2c->pBuffPtr++;
 8009176:	3201      	adds	r2, #1
    hi2c->XferCount--;
 8009178:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800917a:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800917c:	8563      	strh	r3, [r4, #42]	; 0x2a
      }
 800917e:	e64b      	b.n	8008e18 <HAL_I2C_EV_IRQHandler+0x60>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 8009180:	074d      	lsls	r5, r1, #29
 8009182:	f57f ae49 	bpl.w	8008e18 <HAL_I2C_EV_IRQHandler+0x60>
 8009186:	0581      	lsls	r1, r0, #22
 8009188:	f57f ae46 	bpl.w	8008e18 <HAL_I2C_EV_IRQHandler+0x60>
          if (CurrentState == HAL_I2C_STATE_BUSY_TX)
 800918c:	2a21      	cmp	r2, #33	; 0x21
 800918e:	f000 80fd 	beq.w	800938c <HAL_I2C_EV_IRQHandler+0x5d4>
            if (CurrentMode == HAL_I2C_MODE_MEM)
 8009192:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 8009196:	f47f ae3f 	bne.w	8008e18 <HAL_I2C_EV_IRQHandler+0x60>
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800919a:	4620      	mov	r0, r4
}
 800919c:	b00e      	add	sp, #56	; 0x38
 800919e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 80091a2:	f7ff bc75 	b.w	8008a90 <I2C_MemoryTransmit_TXE_BTF>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 80091a6:	0545      	lsls	r5, r0, #21
 80091a8:	d5c9      	bpl.n	800913e <HAL_I2C_EV_IRQHandler+0x386>
 80091aa:	f011 0104 	ands.w	r1, r1, #4
 80091ae:	d1c9      	bne.n	8009144 <HAL_I2C_EV_IRQHandler+0x38c>
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 80091b0:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 80091b4:	2a22      	cmp	r2, #34	; 0x22
 80091b6:	f47f ae2f 	bne.w	8008e18 <HAL_I2C_EV_IRQHandler+0x60>
    tmp = hi2c->XferCount;
 80091ba:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 80091bc:	b292      	uxth	r2, r2
    if (tmp > 3U)
 80091be:	2a03      	cmp	r2, #3
 80091c0:	f240 81ec 	bls.w	800959c <HAL_I2C_EV_IRQHandler+0x7e4>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80091c4:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80091c6:	691b      	ldr	r3, [r3, #16]
 80091c8:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 80091ca:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 80091cc:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 80091ce:	3b01      	subs	r3, #1
 80091d0:	b29b      	uxth	r3, r3
 80091d2:	8563      	strh	r3, [r4, #42]	; 0x2a
      if (hi2c->XferCount == (uint16_t)3)
 80091d4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80091d6:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 80091d8:	3201      	adds	r2, #1
      if (hi2c->XferCount == (uint16_t)3)
 80091da:	2b03      	cmp	r3, #3
      hi2c->pBuffPtr++;
 80091dc:	6262      	str	r2, [r4, #36]	; 0x24
      if (hi2c->XferCount == (uint16_t)3)
 80091de:	f47f ae1b 	bne.w	8008e18 <HAL_I2C_EV_IRQHandler+0x60>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 80091e2:	6822      	ldr	r2, [r4, #0]
 80091e4:	6853      	ldr	r3, [r2, #4]
 80091e6:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80091ea:	6053      	str	r3, [r2, #4]
 80091ec:	e614      	b.n	8008e18 <HAL_I2C_EV_IRQHandler+0x60>
      if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 80091ee:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 80091f2:	2a21      	cmp	r2, #33	; 0x21
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 80091f4:	6c62      	ldr	r2, [r4, #68]	; 0x44
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 80091f6:	bf16      	itet	ne
 80091f8:	f042 0201 	orrne.w	r2, r2, #1
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 80091fc:	f002 02fe 	andeq.w	r2, r2, #254	; 0xfe
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 8009200:	b2d2      	uxtbne	r2, r2
 8009202:	611a      	str	r2, [r3, #16]
      if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 8009204:	6b62      	ldr	r2, [r4, #52]	; 0x34
 8009206:	b11a      	cbz	r2, 8009210 <HAL_I2C_EV_IRQHandler+0x458>
 8009208:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800920a:	2a00      	cmp	r2, #0
 800920c:	f47f ae21 	bne.w	8008e52 <HAL_I2C_EV_IRQHandler+0x9a>
      || ((hi2c->hdmarx != NULL) && (hi2c->hdmarx->XferCpltCallback != NULL)))
 8009210:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8009212:	2a00      	cmp	r2, #0
 8009214:	f43f ae00 	beq.w	8008e18 <HAL_I2C_EV_IRQHandler+0x60>
 8009218:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800921a:	2a00      	cmp	r2, #0
 800921c:	f47f ae19 	bne.w	8008e52 <HAL_I2C_EV_IRQHandler+0x9a>
 8009220:	e5fa      	b.n	8008e18 <HAL_I2C_EV_IRQHandler+0x60>
    I2C_ITError(hi2c);
 8009222:	4620      	mov	r0, r4
}
 8009224:	b00e      	add	sp, #56	; 0x38
 8009226:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    I2C_ITError(hi2c);
 800922a:	f7ff bd0f 	b.w	8008c4c <I2C_ITError>
    if (hi2c->EventCount == 0U)
 800922e:	6d22      	ldr	r2, [r4, #80]	; 0x50
 8009230:	bb52      	cbnz	r2, 8009288 <HAL_I2C_EV_IRQHandler+0x4d0>
      hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 8009232:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8009234:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 8009238:	611a      	str	r2, [r3, #16]
 800923a:	e5ed      	b.n	8008e18 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->XferOptions = I2C_FIRST_FRAME;
 800923c:	2201      	movs	r2, #1
 800923e:	62e2      	str	r2, [r4, #44]	; 0x2c
 8009240:	e619      	b.n	8008e76 <HAL_I2C_EV_IRQHandler+0xbe>
    __HAL_I2C_DISABLE_IT(hi2c, (I2C_IT_BUF));
 8009242:	685a      	ldr	r2, [r3, #4]
 8009244:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8009248:	605a      	str	r2, [r3, #4]
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_DUALF) == RESET)
 800924a:	062e      	lsls	r6, r5, #24
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_TRA) == RESET)
 800924c:	f085 0104 	eor.w	r1, r5, #4
    __HAL_UNLOCK(hi2c);
 8009250:	f04f 0300 	mov.w	r3, #0
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress1;
 8009254:	bf54      	ite	pl
 8009256:	89a2      	ldrhpl	r2, [r4, #12]
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress2;
 8009258:	8b22      	ldrhmi	r2, [r4, #24]
    __HAL_UNLOCK(hi2c);
 800925a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
  uint8_t TransferDirection = I2C_DIRECTION_RECEIVE;
 800925e:	f3c1 0180 	ubfx	r1, r1, #2, #1
    HAL_I2C_AddrCallback(hi2c, TransferDirection, SlaveAddrCode);
 8009262:	4620      	mov	r0, r4
 8009264:	f7ff fc0e 	bl	8008a84 <HAL_I2C_AddrCallback>
 8009268:	e5d6      	b.n	8008e18 <HAL_I2C_EV_IRQHandler+0x60>
 800926a:	bf00      	nop
 800926c:	08008b59 	.word	0x08008b59
      else if (hi2c->EventCount == 1U)
 8009270:	6d22      	ldr	r2, [r4, #80]	; 0x50
 8009272:	2a01      	cmp	r2, #1
 8009274:	f47f add0 	bne.w	8008e18 <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->Instance->DR = I2C_10BIT_HEADER_READ(hi2c->Devaddress);
 8009278:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800927a:	11d2      	asrs	r2, r2, #7
 800927c:	f002 0206 	and.w	r2, r2, #6
 8009280:	f042 02f1 	orr.w	r2, r2, #241	; 0xf1
 8009284:	611a      	str	r2, [r3, #16]
 8009286:	e5c7      	b.n	8008e18 <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 8009288:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800928a:	f042 0201 	orr.w	r2, r2, #1
 800928e:	b2d2      	uxtb	r2, r2
 8009290:	611a      	str	r2, [r3, #16]
 8009292:	e5c1      	b.n	8008e18 <HAL_I2C_EV_IRQHandler+0x60>
    if ((hi2c->EventCount == 0U) && (CurrentMode == HAL_I2C_MODE_MEM))
 8009294:	6d21      	ldr	r1, [r4, #80]	; 0x50
 8009296:	b911      	cbnz	r1, 800929e <HAL_I2C_EV_IRQHandler+0x4e6>
 8009298:	2a40      	cmp	r2, #64	; 0x40
 800929a:	f000 809b 	beq.w	80093d4 <HAL_I2C_EV_IRQHandler+0x61c>
    else if ((hi2c->EventCount == 0U) && (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT))
 800929e:	6d22      	ldr	r2, [r4, #80]	; 0x50
 80092a0:	b922      	cbnz	r2, 80092ac <HAL_I2C_EV_IRQHandler+0x4f4>
 80092a2:	6921      	ldr	r1, [r4, #16]
 80092a4:	f5b1 4f40 	cmp.w	r1, #49152	; 0xc000
 80092a8:	f000 809f 	beq.w	80093ea <HAL_I2C_EV_IRQHandler+0x632>
      if (hi2c->XferCount == 0U)
 80092ac:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 80092ae:	b292      	uxth	r2, r2
 80092b0:	2a00      	cmp	r2, #0
 80092b2:	d142      	bne.n	800933a <HAL_I2C_EV_IRQHandler+0x582>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80092b4:	9203      	str	r2, [sp, #12]
 80092b6:	695a      	ldr	r2, [r3, #20]
 80092b8:	9203      	str	r2, [sp, #12]
 80092ba:	699a      	ldr	r2, [r3, #24]
 80092bc:	9203      	str	r2, [sp, #12]
 80092be:	9a03      	ldr	r2, [sp, #12]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80092c0:	681a      	ldr	r2, [r3, #0]
 80092c2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80092c6:	601a      	str	r2, [r3, #0]
      hi2c->EventCount = 0U;
 80092c8:	2300      	movs	r3, #0
 80092ca:	6523      	str	r3, [r4, #80]	; 0x50
 80092cc:	e5a4      	b.n	8008e18 <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmarx));
 80092ce:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 80092d0:	6802      	ldr	r2, [r0, #0]
 80092d2:	6852      	ldr	r2, [r2, #4]
 80092d4:	b292      	uxth	r2, r2
 80092d6:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 80092d8:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 80092da:	b292      	uxth	r2, r2
 80092dc:	b11a      	cbz	r2, 80092e6 <HAL_I2C_EV_IRQHandler+0x52e>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 80092de:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80092e0:	f042 0204 	orr.w	r2, r2, #4
 80092e4:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 80092e6:	685a      	ldr	r2, [r3, #4]
 80092e8:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80092ec:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmarx) != HAL_DMA_STATE_READY)
 80092ee:	f7fe fb8f 	bl	8007a10 <HAL_DMA_GetState>
 80092f2:	2801      	cmp	r0, #1
 80092f4:	f43f ae8e 	beq.w	8009014 <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 80092f8:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 80092fa:	4b98      	ldr	r3, [pc, #608]	; (800955c <HAL_I2C_EV_IRQHandler+0x7a4>)
 80092fc:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 80092fe:	f7fe fb75 	bl	80079ec <HAL_DMA_Abort_IT>
 8009302:	2800      	cmp	r0, #0
 8009304:	f43f ae86 	beq.w	8009014 <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 8009308:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800930a:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800930c:	4798      	blx	r3
 800930e:	e681      	b.n	8009014 <HAL_I2C_EV_IRQHandler+0x25c>
      hi2c->State = HAL_I2C_STATE_LISTEN;
 8009310:	2228      	movs	r2, #40	; 0x28
      hi2c->PreviousState = I2C_STATE_NONE;
 8009312:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 8009314:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_LISTEN;
 8009316:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800931a:	f7ff fbb1 	bl	8008a80 <HAL_I2C_SlaveRxCpltCallback>
 800931e:	e6a6      	b.n	800906e <HAL_I2C_EV_IRQHandler+0x2b6>
      hi2c->PreviousState = I2C_STATE_NONE;
 8009320:	2300      	movs	r3, #0
      hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8009322:	498f      	ldr	r1, [pc, #572]	; (8009560 <HAL_I2C_EV_IRQHandler+0x7a8>)
 8009324:	62e1      	str	r1, [r4, #44]	; 0x2c
      hi2c->State = HAL_I2C_STATE_READY;
 8009326:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 8009328:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_ListenCpltCallback(hi2c);
 800932a:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800932c:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 8009330:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_ListenCpltCallback(hi2c);
 8009334:	f7ff fba8 	bl	8008a88 <HAL_I2C_ListenCpltCallback>
 8009338:	e56e      	b.n	8008e18 <HAL_I2C_EV_IRQHandler+0x60>
      else if (hi2c->XferCount == 1U)
 800933a:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800933c:	b292      	uxth	r2, r2
 800933e:	2a01      	cmp	r2, #1
 8009340:	d070      	beq.n	8009424 <HAL_I2C_EV_IRQHandler+0x66c>
      else if (hi2c->XferCount == 2U)
 8009342:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8009344:	b292      	uxth	r2, r2
 8009346:	2a02      	cmp	r2, #2
 8009348:	f000 80d6 	beq.w	80094f8 <HAL_I2C_EV_IRQHandler+0x740>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800934c:	681a      	ldr	r2, [r3, #0]
 800934e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8009352:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 8009354:	685a      	ldr	r2, [r3, #4]
 8009356:	0511      	lsls	r1, r2, #20
 8009358:	d508      	bpl.n	800936c <HAL_I2C_EV_IRQHandler+0x5b4>
 800935a:	2820      	cmp	r0, #32
 800935c:	f200 80f8 	bhi.w	8009550 <HAL_I2C_EV_IRQHandler+0x798>
 8009360:	2807      	cmp	r0, #7
 8009362:	f200 80ea 	bhi.w	800953a <HAL_I2C_EV_IRQHandler+0x782>
 8009366:	2801      	cmp	r0, #1
 8009368:	f000 80ed 	beq.w	8009546 <HAL_I2C_EV_IRQHandler+0x78e>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800936c:	2200      	movs	r2, #0
 800936e:	9209      	str	r2, [sp, #36]	; 0x24
 8009370:	695a      	ldr	r2, [r3, #20]
 8009372:	9209      	str	r2, [sp, #36]	; 0x24
 8009374:	699b      	ldr	r3, [r3, #24]
 8009376:	9309      	str	r3, [sp, #36]	; 0x24
 8009378:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800937a:	e7a5      	b.n	80092c8 <HAL_I2C_EV_IRQHandler+0x510>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800937c:	685a      	ldr	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800937e:	6a61      	ldr	r1, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 8009380:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8009384:	605a      	str	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009386:	691b      	ldr	r3, [r3, #16]
 8009388:	700b      	strb	r3, [r1, #0]
    hi2c->pBuffPtr++;
 800938a:	e6f1      	b.n	8009170 <HAL_I2C_EV_IRQHandler+0x3b8>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800938c:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800938e:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 8009392:	2a21      	cmp	r2, #33	; 0x21
 8009394:	f47f ad40 	bne.w	8008e18 <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount != 0U)
 8009398:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800939a:	b292      	uxth	r2, r2
 800939c:	2a00      	cmp	r2, #0
 800939e:	f47f aeb2 	bne.w	8009106 <HAL_I2C_EV_IRQHandler+0x34e>
      if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 80093a2:	2908      	cmp	r1, #8
 80093a4:	f000 80e2 	beq.w	800956c <HAL_I2C_EV_IRQHandler+0x7b4>
 80093a8:	2920      	cmp	r1, #32
 80093aa:	f000 80df 	beq.w	800956c <HAL_I2C_EV_IRQHandler+0x7b4>
 80093ae:	f511 3f80 	cmn.w	r1, #65536	; 0x10000
 80093b2:	f000 80db 	beq.w	800956c <HAL_I2C_EV_IRQHandler+0x7b4>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 80093b6:	6859      	ldr	r1, [r3, #4]
 80093b8:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 80093bc:	6059      	str	r1, [r3, #4]
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 80093be:	2011      	movs	r0, #17
        hi2c->State = HAL_I2C_STATE_READY;
 80093c0:	2320      	movs	r3, #32
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 80093c2:	6320      	str	r0, [r4, #48]	; 0x30
        hi2c->Mode = HAL_I2C_MODE_NONE;
 80093c4:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        HAL_I2C_MasterTxCpltCallback(hi2c);
 80093c8:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 80093ca:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        HAL_I2C_MasterTxCpltCallback(hi2c);
 80093ce:	f7ff fb51 	bl	8008a74 <HAL_I2C_MasterTxCpltCallback>
 80093d2:	e521      	b.n	8008e18 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80093d4:	9101      	str	r1, [sp, #4]
 80093d6:	695a      	ldr	r2, [r3, #20]
 80093d8:	9201      	str	r2, [sp, #4]
 80093da:	699b      	ldr	r3, [r3, #24]
 80093dc:	9301      	str	r3, [sp, #4]
 80093de:	9b01      	ldr	r3, [sp, #4]
 80093e0:	e51a      	b.n	8008e18 <HAL_I2C_EV_IRQHandler+0x60>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 80093e2:	2a21      	cmp	r2, #33	; 0x21
 80093e4:	f43f add1 	beq.w	8008f8a <HAL_I2C_EV_IRQHandler+0x1d2>
 80093e8:	e5c9      	b.n	8008f7e <HAL_I2C_EV_IRQHandler+0x1c6>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80093ea:	9202      	str	r2, [sp, #8]
 80093ec:	695a      	ldr	r2, [r3, #20]
 80093ee:	9202      	str	r2, [sp, #8]
 80093f0:	699a      	ldr	r2, [r3, #24]
 80093f2:	9202      	str	r2, [sp, #8]
 80093f4:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80093f6:	681a      	ldr	r2, [r3, #0]
 80093f8:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80093fc:	601a      	str	r2, [r3, #0]
      hi2c->EventCount++;
 80093fe:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8009400:	3301      	adds	r3, #1
 8009402:	6523      	str	r3, [r4, #80]	; 0x50
 8009404:	e508      	b.n	8008e18 <HAL_I2C_EV_IRQHandler+0x60>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 8009406:	685a      	ldr	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 8009408:	2904      	cmp	r1, #4
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800940a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800940e:	605a      	str	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 8009410:	f43f aeab 	beq.w	800916a <HAL_I2C_EV_IRQHandler+0x3b2>
 8009414:	2902      	cmp	r1, #2
 8009416:	f43f aea8 	beq.w	800916a <HAL_I2C_EV_IRQHandler+0x3b2>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800941a:	681a      	ldr	r2, [r3, #0]
 800941c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8009420:	601a      	str	r2, [r3, #0]
 8009422:	e6a2      	b.n	800916a <HAL_I2C_EV_IRQHandler+0x3b2>
        if (CurrentXferOptions == I2C_NO_OPTION_FRAME)
 8009424:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 8009428:	f000 811b 	beq.w	8009662 <HAL_I2C_EV_IRQHandler+0x8aa>
        else if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) \
 800942c:	2808      	cmp	r0, #8
 800942e:	f000 8108 	beq.w	8009642 <HAL_I2C_EV_IRQHandler+0x88a>
 8009432:	2820      	cmp	r0, #32
 8009434:	f000 8105 	beq.w	8009642 <HAL_I2C_EV_IRQHandler+0x88a>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 8009438:	2d12      	cmp	r5, #18
 800943a:	f000 80ff 	beq.w	800963c <HAL_I2C_EV_IRQHandler+0x884>
          if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800943e:	2810      	cmp	r0, #16
 8009440:	d804      	bhi.n	800944c <HAL_I2C_EV_IRQHandler+0x694>
 8009442:	4a48      	ldr	r2, [pc, #288]	; (8009564 <HAL_I2C_EV_IRQHandler+0x7ac>)
 8009444:	40c2      	lsrs	r2, r0
 8009446:	07d1      	lsls	r1, r2, #31
 8009448:	f100 814c 	bmi.w	80096e4 <HAL_I2C_EV_IRQHandler+0x92c>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800944c:	681a      	ldr	r2, [r3, #0]
 800944e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8009452:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009454:	2200      	movs	r2, #0
 8009456:	9206      	str	r2, [sp, #24]
 8009458:	695a      	ldr	r2, [r3, #20]
 800945a:	9206      	str	r2, [sp, #24]
 800945c:	699b      	ldr	r3, [r3, #24]
 800945e:	9306      	str	r3, [sp, #24]
 8009460:	9b06      	ldr	r3, [sp, #24]
 8009462:	e731      	b.n	80092c8 <HAL_I2C_EV_IRQHandler+0x510>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 8009464:	685a      	ldr	r2, [r3, #4]
 8009466:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800946a:	605a      	str	r2, [r3, #4]
 800946c:	e4d4      	b.n	8008e18 <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP))
 800946e:	3901      	subs	r1, #1
 8009470:	290f      	cmp	r1, #15
 8009472:	d809      	bhi.n	8009488 <HAL_I2C_EV_IRQHandler+0x6d0>
 8009474:	e8df f001 	tbb	[pc, r1]
 8009478:	3608363b 	.word	0x3608363b
 800947c:	08080808 	.word	0x08080808
 8009480:	08080808 	.word	0x08080808
 8009484:	3b080808 	.word	0x3b080808
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009488:	681a      	ldr	r2, [r3, #0]
 800948a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800948e:	601a      	str	r2, [r3, #0]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009490:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8009492:	691b      	ldr	r3, [r3, #16]
 8009494:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 8009496:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 8009498:	6a62      	ldr	r2, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800949a:	6821      	ldr	r1, [r4, #0]
    hi2c->XferCount--;
 800949c:	3b01      	subs	r3, #1
 800949e:	b29b      	uxth	r3, r3
 80094a0:	8563      	strh	r3, [r4, #42]	; 0x2a
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80094a2:	690b      	ldr	r3, [r1, #16]
    hi2c->pBuffPtr++;
 80094a4:	1c51      	adds	r1, r2, #1
 80094a6:	6261      	str	r1, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80094a8:	7053      	strb	r3, [r2, #1]
    hi2c->XferCount--;
 80094aa:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 80094ac:	6821      	ldr	r1, [r4, #0]
    hi2c->pBuffPtr++;
 80094ae:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 80094b0:	3b01      	subs	r3, #1
 80094b2:	b29b      	uxth	r3, r3
 80094b4:	8563      	strh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 80094b6:	684b      	ldr	r3, [r1, #4]
    hi2c->pBuffPtr++;
 80094b8:	3201      	adds	r2, #1
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 80094ba:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    hi2c->State = HAL_I2C_STATE_READY;
 80094be:	2020      	movs	r0, #32
    hi2c->pBuffPtr++;
 80094c0:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 80094c2:	604b      	str	r3, [r1, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 80094c4:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    if (hi2c->Mode == HAL_I2C_MODE_MEM)
 80094c8:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
 80094cc:	2b40      	cmp	r3, #64	; 0x40
 80094ce:	f000 80f5 	beq.w	80096bc <HAL_I2C_EV_IRQHandler+0x904>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 80094d2:	2200      	movs	r2, #0
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 80094d4:	2312      	movs	r3, #18
      hi2c->Mode = HAL_I2C_MODE_NONE;
 80094d6:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      HAL_I2C_MasterRxCpltCallback(hi2c);
 80094da:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 80094dc:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MasterRxCpltCallback(hi2c);
 80094de:	f7ff facb 	bl	8008a78 <HAL_I2C_MasterRxCpltCallback>
 80094e2:	e499      	b.n	8008e18 <HAL_I2C_EV_IRQHandler+0x60>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80094e4:	681a      	ldr	r2, [r3, #0]
 80094e6:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80094ea:	601a      	str	r2, [r3, #0]
 80094ec:	e7d0      	b.n	8009490 <HAL_I2C_EV_IRQHandler+0x6d8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80094ee:	681a      	ldr	r2, [r3, #0]
 80094f0:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80094f4:	601a      	str	r2, [r3, #0]
 80094f6:	e7cb      	b.n	8009490 <HAL_I2C_EV_IRQHandler+0x6d8>
        if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 80094f8:	2810      	cmp	r0, #16
 80094fa:	d804      	bhi.n	8009506 <HAL_I2C_EV_IRQHandler+0x74e>
 80094fc:	4a19      	ldr	r2, [pc, #100]	; (8009564 <HAL_I2C_EV_IRQHandler+0x7ac>)
 80094fe:	40c2      	lsrs	r2, r0
 8009500:	07d2      	lsls	r2, r2, #31
 8009502:	f100 80c2 	bmi.w	800968a <HAL_I2C_EV_IRQHandler+0x8d2>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009506:	681a      	ldr	r2, [r3, #0]
 8009508:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800950c:	601a      	str	r2, [r3, #0]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800950e:	681a      	ldr	r2, [r3, #0]
 8009510:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8009514:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 8009516:	685a      	ldr	r2, [r3, #4]
 8009518:	0516      	lsls	r6, r2, #20
 800951a:	d506      	bpl.n	800952a <HAL_I2C_EV_IRQHandler+0x772>
 800951c:	2820      	cmp	r0, #32
 800951e:	f240 80bc 	bls.w	800969a <HAL_I2C_EV_IRQHandler+0x8e2>
 8009522:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 8009526:	f000 80bd 	beq.w	80096a4 <HAL_I2C_EV_IRQHandler+0x8ec>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800952a:	2200      	movs	r2, #0
 800952c:	9208      	str	r2, [sp, #32]
 800952e:	695a      	ldr	r2, [r3, #20]
 8009530:	9208      	str	r2, [sp, #32]
 8009532:	699b      	ldr	r3, [r3, #24]
 8009534:	9308      	str	r3, [sp, #32]
 8009536:	9b08      	ldr	r3, [sp, #32]
 8009538:	e6c6      	b.n	80092c8 <HAL_I2C_EV_IRQHandler+0x510>
 800953a:	4a0b      	ldr	r2, [pc, #44]	; (8009568 <HAL_I2C_EV_IRQHandler+0x7b0>)
 800953c:	3808      	subs	r0, #8
 800953e:	40c2      	lsrs	r2, r0
 8009540:	07d2      	lsls	r2, r2, #31
 8009542:	f57f af13 	bpl.w	800936c <HAL_I2C_EV_IRQHandler+0x5b4>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 8009546:	685a      	ldr	r2, [r3, #4]
 8009548:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800954c:	605a      	str	r2, [r3, #4]
 800954e:	e70d      	b.n	800936c <HAL_I2C_EV_IRQHandler+0x5b4>
 8009550:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 8009554:	f47f af0a 	bne.w	800936c <HAL_I2C_EV_IRQHandler+0x5b4>
 8009558:	e7f5      	b.n	8009546 <HAL_I2C_EV_IRQHandler+0x78e>
 800955a:	bf00      	nop
 800955c:	08008b59 	.word	0x08008b59
 8009560:	ffff0000 	.word	0xffff0000
 8009564:	00010014 	.word	0x00010014
 8009568:	01000101 	.word	0x01000101
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800956c:	6859      	ldr	r1, [r3, #4]
 800956e:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 8009572:	6059      	str	r1, [r3, #4]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009574:	6819      	ldr	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 8009576:	2200      	movs	r2, #0
        hi2c->State = HAL_I2C_STATE_READY;
 8009578:	2020      	movs	r0, #32
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800957a:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800957e:	6019      	str	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 8009580:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State = HAL_I2C_STATE_READY;
 8009582:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 8009586:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800958a:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800958e:	2b40      	cmp	r3, #64	; 0x40
          HAL_I2C_MemTxCpltCallback(hi2c);
 8009590:	4620      	mov	r0, r4
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 8009592:	f47f af1c 	bne.w	80093ce <HAL_I2C_EV_IRQHandler+0x616>
          HAL_I2C_MemTxCpltCallback(hi2c);
 8009596:	f7ff fa79 	bl	8008a8c <HAL_I2C_MemTxCpltCallback>
 800959a:	e43d      	b.n	8008e18 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((hi2c->XferOptions != I2C_FIRST_AND_NEXT_FRAME) && ((tmp == 1U) || (tmp == 0U)))
 800959c:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800959e:	2802      	cmp	r0, #2
 80095a0:	f43f af60 	beq.w	8009464 <HAL_I2C_EV_IRQHandler+0x6ac>
 80095a4:	2a01      	cmp	r2, #1
 80095a6:	f63f af5d 	bhi.w	8009464 <HAL_I2C_EV_IRQHandler+0x6ac>
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 80095aa:	4a62      	ldr	r2, [pc, #392]	; (8009734 <HAL_I2C_EV_IRQHandler+0x97c>)
  __IO uint32_t count = 0U;
 80095ac:	910b      	str	r1, [sp, #44]	; 0x2c
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 80095ae:	6812      	ldr	r2, [r2, #0]
 80095b0:	f246 10a8 	movw	r0, #25000	; 0x61a8
 80095b4:	fbb2 f2f0 	udiv	r2, r2, r0
 80095b8:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 80095bc:	920b      	str	r2, [sp, #44]	; 0x2c
 80095be:	e004      	b.n	80095ca <HAL_I2C_EV_IRQHandler+0x812>
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 80095c0:	681a      	ldr	r2, [r3, #0]
 80095c2:	f412 7200 	ands.w	r2, r2, #512	; 0x200
 80095c6:	f000 8092 	beq.w	80096ee <HAL_I2C_EV_IRQHandler+0x936>
    count--;
 80095ca:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80095cc:	3a01      	subs	r2, #1
 80095ce:	920b      	str	r2, [sp, #44]	; 0x2c
    if (count == 0U)
 80095d0:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80095d2:	2900      	cmp	r1, #0
 80095d4:	d1f4      	bne.n	80095c0 <HAL_I2C_EV_IRQHandler+0x808>
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80095d6:	6c22      	ldr	r2, [r4, #64]	; 0x40
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80095d8:	6a60      	ldr	r0, [r4, #36]	; 0x24
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80095da:	f042 0220 	orr.w	r2, r2, #32
 80095de:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 80095e0:	685a      	ldr	r2, [r3, #4]
 80095e2:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 80095e6:	605a      	str	r2, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80095e8:	691b      	ldr	r3, [r3, #16]
 80095ea:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 80095ec:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 80095ee:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hi2c->XferCount--;
 80095f0:	3b01      	subs	r3, #1
        hi2c->pBuffPtr++;
 80095f2:	3201      	adds	r2, #1
        hi2c->XferCount--;
 80095f4:	b29b      	uxth	r3, r3
        hi2c->State = HAL_I2C_STATE_READY;
 80095f6:	2020      	movs	r0, #32
        hi2c->XferCount--;
 80095f8:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 80095fa:	6262      	str	r2, [r4, #36]	; 0x24
        hi2c->State = HAL_I2C_STATE_READY;
 80095fc:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        HAL_I2C_ErrorCallback(hi2c);
 8009600:	4620      	mov	r0, r4
        hi2c->Mode = HAL_I2C_MODE_NONE;
 8009602:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
        HAL_I2C_ErrorCallback(hi2c);
 8009606:	f7ff faa3 	bl	8008b50 <HAL_I2C_ErrorCallback>
 800960a:	e405      	b.n	8008e18 <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800960c:	2d08      	cmp	r5, #8
 800960e:	d0ad      	beq.n	800956c <HAL_I2C_EV_IRQHandler+0x7b4>
 8009610:	2d20      	cmp	r5, #32
 8009612:	d0ab      	beq.n	800956c <HAL_I2C_EV_IRQHandler+0x7b4>
 8009614:	f515 3f80 	cmn.w	r5, #65536	; 0x10000
 8009618:	d0a8      	beq.n	800956c <HAL_I2C_EV_IRQHandler+0x7b4>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800961a:	685a      	ldr	r2, [r3, #4]
 800961c:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 8009620:	605a      	str	r2, [r3, #4]
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 8009622:	2011      	movs	r0, #17
      hi2c->Mode = HAL_I2C_MODE_NONE;
 8009624:	2100      	movs	r1, #0
      hi2c->State = HAL_I2C_STATE_READY;
 8009626:	2320      	movs	r3, #32
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 8009628:	6320      	str	r0, [r4, #48]	; 0x30
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800962a:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800962e:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 8009630:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
      HAL_I2C_MasterTxCpltCallback(hi2c);
 8009634:	f7ff fa1e 	bl	8008a74 <HAL_I2C_MasterTxCpltCallback>
 8009638:	f7ff bbee 	b.w	8008e18 <HAL_I2C_EV_IRQHandler+0x60>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800963c:	2801      	cmp	r0, #1
 800963e:	f43f af05 	beq.w	800944c <HAL_I2C_EV_IRQHandler+0x694>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009642:	681a      	ldr	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009644:	2100      	movs	r1, #0
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009646:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800964a:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800964c:	9107      	str	r1, [sp, #28]
 800964e:	695a      	ldr	r2, [r3, #20]
 8009650:	9207      	str	r2, [sp, #28]
 8009652:	699a      	ldr	r2, [r3, #24]
 8009654:	9207      	str	r2, [sp, #28]
 8009656:	9a07      	ldr	r2, [sp, #28]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009658:	681a      	ldr	r2, [r3, #0]
 800965a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800965e:	601a      	str	r2, [r3, #0]
 8009660:	e632      	b.n	80092c8 <HAL_I2C_EV_IRQHandler+0x510>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009662:	681a      	ldr	r2, [r3, #0]
 8009664:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8009668:	601a      	str	r2, [r3, #0]
          if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800966a:	685a      	ldr	r2, [r3, #4]
 800966c:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 8009670:	d02d      	beq.n	80096ce <HAL_I2C_EV_IRQHandler+0x916>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009672:	681a      	ldr	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009674:	2100      	movs	r1, #0
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009676:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800967a:	601a      	str	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800967c:	9104      	str	r1, [sp, #16]
 800967e:	695a      	ldr	r2, [r3, #20]
 8009680:	9204      	str	r2, [sp, #16]
 8009682:	699b      	ldr	r3, [r3, #24]
 8009684:	9304      	str	r3, [sp, #16]
 8009686:	9b04      	ldr	r3, [sp, #16]
 8009688:	e61e      	b.n	80092c8 <HAL_I2C_EV_IRQHandler+0x510>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800968a:	681a      	ldr	r2, [r3, #0]
 800968c:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8009690:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 8009692:	685a      	ldr	r2, [r3, #4]
 8009694:	0515      	lsls	r5, r2, #20
 8009696:	f57f af48 	bpl.w	800952a <HAL_I2C_EV_IRQHandler+0x772>
 800969a:	2807      	cmp	r0, #7
 800969c:	d807      	bhi.n	80096ae <HAL_I2C_EV_IRQHandler+0x8f6>
 800969e:	2801      	cmp	r0, #1
 80096a0:	f47f af43 	bne.w	800952a <HAL_I2C_EV_IRQHandler+0x772>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 80096a4:	685a      	ldr	r2, [r3, #4]
 80096a6:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 80096aa:	605a      	str	r2, [r3, #4]
 80096ac:	e73d      	b.n	800952a <HAL_I2C_EV_IRQHandler+0x772>
 80096ae:	4a22      	ldr	r2, [pc, #136]	; (8009738 <HAL_I2C_EV_IRQHandler+0x980>)
 80096b0:	3808      	subs	r0, #8
 80096b2:	40c2      	lsrs	r2, r0
 80096b4:	07d0      	lsls	r0, r2, #31
 80096b6:	f57f af38 	bpl.w	800952a <HAL_I2C_EV_IRQHandler+0x772>
 80096ba:	e7f3      	b.n	80096a4 <HAL_I2C_EV_IRQHandler+0x8ec>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 80096bc:	2300      	movs	r3, #0
 80096be:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_MemRxCpltCallback(hi2c);
 80096c2:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_NONE;
 80096c4:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MemRxCpltCallback(hi2c);
 80096c6:	f7ff fa41 	bl	8008b4c <HAL_I2C_MemRxCpltCallback>
 80096ca:	f7ff bba5 	b.w	8008e18 <HAL_I2C_EV_IRQHandler+0x60>
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80096ce:	9205      	str	r2, [sp, #20]
 80096d0:	695a      	ldr	r2, [r3, #20]
 80096d2:	9205      	str	r2, [sp, #20]
 80096d4:	699a      	ldr	r2, [r3, #24]
 80096d6:	9205      	str	r2, [sp, #20]
 80096d8:	9a05      	ldr	r2, [sp, #20]
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80096da:	681a      	ldr	r2, [r3, #0]
 80096dc:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80096e0:	601a      	str	r2, [r3, #0]
 80096e2:	e5f1      	b.n	80092c8 <HAL_I2C_EV_IRQHandler+0x510>
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80096e4:	681a      	ldr	r2, [r3, #0]
 80096e6:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80096ea:	601a      	str	r2, [r3, #0]
 80096ec:	e6b2      	b.n	8009454 <HAL_I2C_EV_IRQHandler+0x69c>
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80096ee:	6819      	ldr	r1, [r3, #0]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80096f0:	6a60      	ldr	r0, [r4, #36]	; 0x24
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80096f2:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 80096f6:	6019      	str	r1, [r3, #0]
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 80096f8:	6859      	ldr	r1, [r3, #4]
 80096fa:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 80096fe:	6059      	str	r1, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009700:	691b      	ldr	r3, [r3, #16]
 8009702:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 8009704:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8009706:	3b01      	subs	r3, #1
        hi2c->State = HAL_I2C_STATE_READY;
 8009708:	2120      	movs	r1, #32
        hi2c->XferCount--;
 800970a:	b29b      	uxth	r3, r3
 800970c:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->State = HAL_I2C_STATE_READY;
 800970e:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->pBuffPtr++;
 8009712:	6a63      	ldr	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 8009714:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
        hi2c->pBuffPtr++;
 8009718:	3301      	adds	r3, #1
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800971a:	2940      	cmp	r1, #64	; 0x40
        hi2c->pBuffPtr++;
 800971c:	6263      	str	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800971e:	f47f aed9 	bne.w	80094d4 <HAL_I2C_EV_IRQHandler+0x71c>
          hi2c->Mode = HAL_I2C_MODE_NONE;
 8009722:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
          HAL_I2C_MemRxCpltCallback(hi2c);
 8009726:	4620      	mov	r0, r4
          hi2c->PreviousState = I2C_STATE_NONE;
 8009728:	6322      	str	r2, [r4, #48]	; 0x30
          HAL_I2C_MemRxCpltCallback(hi2c);
 800972a:	f7ff fa0f 	bl	8008b4c <HAL_I2C_MemRxCpltCallback>
 800972e:	f7ff bb73 	b.w	8008e18 <HAL_I2C_EV_IRQHandler+0x60>
 8009732:	bf00      	nop
 8009734:	20000078 	.word	0x20000078
 8009738:	01000101 	.word	0x01000101

0800973c <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800973c:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 8009740:	2a20      	cmp	r2, #32
{
 8009742:	4603      	mov	r3, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8009744:	fa5f fc82 	uxtb.w	ip, r2
 8009748:	d001      	beq.n	800974e <HAL_I2CEx_ConfigAnalogFilter+0x12>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800974a:	2002      	movs	r0, #2
  }
}
 800974c:	4770      	bx	lr
    __HAL_I2C_DISABLE(hi2c);
 800974e:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 8009750:	2024      	movs	r0, #36	; 0x24
 8009752:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 8009756:	6810      	ldr	r0, [r2, #0]
 8009758:	f020 0001 	bic.w	r0, r0, #1
 800975c:	6010      	str	r0, [r2, #0]
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 800975e:	6a50      	ldr	r0, [r2, #36]	; 0x24
 8009760:	f020 0010 	bic.w	r0, r0, #16
 8009764:	6250      	str	r0, [r2, #36]	; 0x24
    hi2c->Instance->FLTR |= AnalogFilter;
 8009766:	6a50      	ldr	r0, [r2, #36]	; 0x24
 8009768:	4301      	orrs	r1, r0
 800976a:	6251      	str	r1, [r2, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800976c:	6811      	ldr	r1, [r2, #0]
 800976e:	f041 0101 	orr.w	r1, r1, #1
 8009772:	6011      	str	r1, [r2, #0]
    return HAL_OK;
 8009774:	2000      	movs	r0, #0
    hi2c->State = HAL_I2C_STATE_READY;
 8009776:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800977a:	4770      	bx	lr

0800977c <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800977c:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 8009780:	2a20      	cmp	r2, #32
 8009782:	d001      	beq.n	8009788 <HAL_I2CEx_ConfigDigitalFilter+0xc>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 8009784:	2002      	movs	r0, #2
  }
}
 8009786:	4770      	bx	lr
{
 8009788:	b410      	push	{r4}
 800978a:	fa5f fc82 	uxtb.w	ip, r2
    __HAL_I2C_DISABLE(hi2c);
 800978e:	6804      	ldr	r4, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 8009790:	2224      	movs	r2, #36	; 0x24
 8009792:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 8009796:	6822      	ldr	r2, [r4, #0]
 8009798:	f022 0201 	bic.w	r2, r2, #1
 800979c:	6022      	str	r2, [r4, #0]
    tmpreg = hi2c->Instance->FLTR;
 800979e:	4603      	mov	r3, r0
 80097a0:	6a60      	ldr	r0, [r4, #36]	; 0x24
    tmpreg &= ~(I2C_FLTR_DNF);
 80097a2:	f64f 72f0 	movw	r2, #65520	; 0xfff0
 80097a6:	4002      	ands	r2, r0
    tmpreg |= DigitalFilter;
 80097a8:	4311      	orrs	r1, r2
    hi2c->Instance->FLTR = tmpreg;
 80097aa:	b289      	uxth	r1, r1
 80097ac:	6261      	str	r1, [r4, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 80097ae:	6822      	ldr	r2, [r4, #0]
 80097b0:	f042 0201 	orr.w	r2, r2, #1
 80097b4:	6022      	str	r2, [r4, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 80097b6:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 80097ba:	2000      	movs	r0, #0
}
 80097bc:	f85d 4b04 	ldr.w	r4, [sp], #4
 80097c0:	4770      	bx	lr
 80097c2:	bf00      	nop

080097c4 <HAL_LTDC_Init>:
{
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
 80097c4:	2800      	cmp	r0, #0
 80097c6:	d069      	beq.n	800989c <HAL_LTDC_Init+0xd8>
{
 80097c8:	b538      	push	{r3, r4, r5, lr}
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 80097ca:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 80097ce:	4604      	mov	r4, r0
 80097d0:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80097d4:	2b00      	cmp	r3, #0
 80097d6:	d05c      	beq.n	8009892 <HAL_LTDC_Init+0xce>
    HAL_LTDC_MspInit(hltdc);
  }
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80097d8:	2202      	movs	r2, #2

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 80097da:	6823      	ldr	r3, [r4, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80097dc:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 80097e0:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 80097e4:	6999      	ldr	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 80097e6:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 80097e8:	e9d4 5003 	ldrd	r5, r0, [r4, #12]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 80097ec:	f021 4170 	bic.w	r1, r1, #4026531840	; 0xf0000000
 80097f0:	6199      	str	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 80097f2:	6999      	ldr	r1, [r3, #24]
 80097f4:	432a      	orrs	r2, r5
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 80097f6:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 80097f8:	430a      	orrs	r2, r1
 80097fa:	619a      	str	r2, [r3, #24]

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 80097fc:	689a      	ldr	r2, [r3, #8]
 80097fe:	4928      	ldr	r1, [pc, #160]	; (80098a0 <HAL_LTDC_Init+0xdc>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 8009800:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8009802:	400a      	ands	r2, r1
 8009804:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8009806:	689a      	ldr	r2, [r3, #8]
 8009808:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800980c:	69a0      	ldr	r0, [r4, #24]
 800980e:	4302      	orrs	r2, r0
 8009810:	609a      	str	r2, [r3, #8]

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8009812:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 8009814:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8009816:	400a      	ands	r2, r1
 8009818:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 800981a:	68da      	ldr	r2, [r3, #12]
 800981c:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8009820:	6a20      	ldr	r0, [r4, #32]
 8009822:	4302      	orrs	r2, r0
 8009824:	60da      	str	r2, [r3, #12]

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8009826:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 8009828:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800982a:	400a      	ands	r2, r1
 800982c:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 800982e:	691a      	ldr	r2, [r3, #16]
 8009830:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8009834:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8009836:	4302      	orrs	r2, r0
 8009838:	611a      	str	r2, [r3, #16]

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800983a:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 800983c:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800983e:	400a      	ands	r2, r1
 8009840:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8009842:	695a      	ldr	r2, [r3, #20]
 8009844:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8009846:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800984a:	430a      	orrs	r2, r1
 800984c:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800984e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 8009850:	f894 0035 	ldrb.w	r0, [r4, #53]	; 0x35
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 8009854:	f894 1036 	ldrb.w	r1, [r4, #54]	; 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8009858:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
 800985c:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 800985e:	6add      	ldr	r5, [r3, #44]	; 0x2c
 8009860:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 8009864:	432a      	orrs	r2, r5
 8009866:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 800986a:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800986e:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Enable the Transfer Error and FIFO underrun interrupts */
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 8009870:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8009872:	f042 0206 	orr.w	r2, r2, #6
 8009876:	635a      	str	r2, [r3, #52]	; 0x34

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);
 8009878:	699a      	ldr	r2, [r3, #24]

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 800987a:	f04f 0c01 	mov.w	ip, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800987e:	2100      	movs	r1, #0
  __HAL_LTDC_ENABLE(hltdc);
 8009880:	ea42 020c 	orr.w	r2, r2, ip
 8009884:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8009886:	f8c4 10a4 	str.w	r1, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800988a:	f884 c0a1 	strb.w	ip, [r4, #161]	; 0xa1

  return HAL_OK;
 800988e:	4608      	mov	r0, r1
}
 8009890:	bd38      	pop	{r3, r4, r5, pc}
    hltdc->Lock = HAL_UNLOCKED;
 8009892:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 8009896:	f7f8 fa2d 	bl	8001cf4 <HAL_LTDC_MspInit>
 800989a:	e79d      	b.n	80097d8 <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
 800989c:	2001      	movs	r0, #1
}
 800989e:	4770      	bx	lr
 80098a0:	f000f800 	.word	0xf000f800

080098a4 <HAL_LTDC_ErrorCallback>:
 80098a4:	4770      	bx	lr
 80098a6:	bf00      	nop

080098a8 <HAL_LTDC_ReloadEventCallback>:
 80098a8:	4770      	bx	lr
 80098aa:	bf00      	nop

080098ac <HAL_LTDC_IRQHandler>:
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
void HAL_LTDC_IRQHandler(LTDC_HandleTypeDef *hltdc)
{
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 80098ac:	6803      	ldr	r3, [r0, #0]
{
 80098ae:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 80098b0:	6b9d      	ldr	r5, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 80098b2:	6b5e      	ldr	r6, [r3, #52]	; 0x34

  /* Transfer Error Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 80098b4:	076a      	lsls	r2, r5, #29
{
 80098b6:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 80098b8:	d501      	bpl.n	80098be <HAL_LTDC_IRQHandler+0x12>
 80098ba:	0771      	lsls	r1, r6, #29
 80098bc:	d41d      	bmi.n	80098fa <HAL_LTDC_IRQHandler+0x4e>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* FIFO underrun Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 80098be:	07aa      	lsls	r2, r5, #30
 80098c0:	d501      	bpl.n	80098c6 <HAL_LTDC_IRQHandler+0x1a>
 80098c2:	07b3      	lsls	r3, r6, #30
 80098c4:	d42d      	bmi.n	8009922 <HAL_LTDC_IRQHandler+0x76>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Line Interrupt management ************************************************/
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 80098c6:	07e8      	lsls	r0, r5, #31
 80098c8:	d501      	bpl.n	80098ce <HAL_LTDC_IRQHandler+0x22>
 80098ca:	07f1      	lsls	r1, r6, #31
 80098cc:	d440      	bmi.n	8009950 <HAL_LTDC_IRQHandler+0xa4>
    HAL_LTDC_LineEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Register reload Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 80098ce:	072a      	lsls	r2, r5, #28
 80098d0:	d501      	bpl.n	80098d6 <HAL_LTDC_IRQHandler+0x2a>
 80098d2:	0733      	lsls	r3, r6, #28
 80098d4:	d400      	bmi.n	80098d8 <HAL_LTDC_IRQHandler+0x2c>
#else
    /*Call Legacy Reload Event callback */
    HAL_LTDC_ReloadEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }
}
 80098d6:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 80098d8:	6823      	ldr	r3, [r4, #0]
 80098da:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 80098dc:	2008      	movs	r0, #8
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 80098de:	f022 0208 	bic.w	r2, r2, #8
 80098e2:	635a      	str	r2, [r3, #52]	; 0x34
    hltdc->State = HAL_LTDC_STATE_READY;
 80098e4:	2101      	movs	r1, #1
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 80098e6:	63d8      	str	r0, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 80098e8:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 80098ea:	f884 10a1 	strb.w	r1, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 80098ee:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 80098f2:	4620      	mov	r0, r4
 80098f4:	f7ff ffd8 	bl	80098a8 <HAL_LTDC_ReloadEventCallback>
}
 80098f8:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 80098fa:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80098fc:	f022 0204 	bic.w	r2, r2, #4
 8009900:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 8009902:	2204      	movs	r2, #4
 8009904:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 8009906:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800990a:	f043 0301 	orr.w	r3, r3, #1
 800990e:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 8009912:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8009914:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8009918:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800991c:	f7ff ffc2 	bl	80098a4 <HAL_LTDC_ErrorCallback>
 8009920:	e7cd      	b.n	80098be <HAL_LTDC_IRQHandler+0x12>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8009922:	6823      	ldr	r3, [r4, #0]
 8009924:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8009926:	f022 0202 	bic.w	r2, r2, #2
 800992a:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800992c:	2202      	movs	r2, #2
 800992e:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 8009930:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 8009934:	f043 0302 	orr.w	r3, r3, #2
 8009938:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800993c:	2204      	movs	r2, #4
    __HAL_UNLOCK(hltdc);
 800993e:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8009940:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8009944:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8009948:	4620      	mov	r0, r4
 800994a:	f7ff ffab 	bl	80098a4 <HAL_LTDC_ErrorCallback>
 800994e:	e7ba      	b.n	80098c6 <HAL_LTDC_IRQHandler+0x1a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8009950:	6823      	ldr	r3, [r4, #0]
 8009952:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8009954:	f022 0201 	bic.w	r2, r2, #1
 8009958:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800995a:	2201      	movs	r2, #1
 800995c:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800995e:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 8009960:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8009964:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 8009968:	4620      	mov	r0, r4
 800996a:	f7f7 fcdb 	bl	8001324 <HAL_LTDC_LineEventCallback>
 800996e:	e7ae      	b.n	80098ce <HAL_LTDC_IRQHandler+0x22>

08009970 <HAL_LTDC_ConfigLayer>:
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
 8009970:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 8009974:	2b01      	cmp	r3, #1
 8009976:	f000 80c2 	beq.w	8009afe <HAL_LTDC_ConfigLayer+0x18e>
{
 800997a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800997e:	f04f 0e34 	mov.w	lr, #52	; 0x34
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8009982:	f8d0 9000 	ldr.w	r9, [r0]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8009986:	fb0e 0e02 	mla	lr, lr, r2, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800998a:	2302      	movs	r3, #2
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800998c:	01d2      	lsls	r2, r2, #7
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800998e:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8009992:	f102 0684 	add.w	r6, r2, #132	; 0x84
 8009996:	eb09 0c06 	add.w	ip, r9, r6
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800999a:	f8d9 300c 	ldr.w	r3, [r9, #12]
 800999e:	f3c3 4a0b 	ubfx	sl, r3, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 80099a2:	f8dc 3004 	ldr.w	r3, [ip, #4]
{
 80099a6:	b083      	sub	sp, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 80099a8:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 80099ac:	460c      	mov	r4, r1
 80099ae:	460d      	mov	r5, r1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 80099b0:	9301      	str	r3, [sp, #4]
 80099b2:	4680      	mov	r8, r0
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 80099b4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80099b6:	f10e 0e38 	add.w	lr, lr, #56	; 0x38
 80099ba:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 80099be:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80099c0:	686f      	ldr	r7, [r5, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 80099c2:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 80099c6:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80099c8:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 80099cc:	6823      	ldr	r3, [r4, #0]
 80099ce:	f8ce 3000 	str.w	r3, [lr]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 80099d2:	9b01      	ldr	r3, [sp, #4]
 80099d4:	f8cc 3004 	str.w	r3, [ip, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 80099d8:	f8d9 300c 	ldr.w	r3, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 80099dc:	682a      	ldr	r2, [r5, #0]

  /* Configure the vertical start and stop position */
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 80099de:	68e8      	ldr	r0, [r5, #12]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 80099e0:	f8d5 e018 	ldr.w	lr, [r5, #24]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 80099e4:	1c51      	adds	r1, r2, #1
 80099e6:	f3c3 430b 	ubfx	r3, r3, #16, #12
 80099ea:	440b      	add	r3, r1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80099ec:	44ba      	add	sl, r7
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 80099ee:	ea43 430a 	orr.w	r3, r3, sl, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 80099f2:	f8cc 3004 	str.w	r3, [ip, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 80099f6:	f8d9 100c 	ldr.w	r1, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 80099fa:	f8dc 3008 	ldr.w	r3, [ip, #8]
 80099fe:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 8009a02:	f8cc 3008 	str.w	r3, [ip, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8009a06:	f3c1 010a 	ubfx	r1, r1, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8009a0a:	68ab      	ldr	r3, [r5, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8009a0c:	4401      	add	r1, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8009a0e:	f8d9 000c 	ldr.w	r0, [r9, #12]
 8009a12:	3301      	adds	r3, #1
 8009a14:	f3c0 000a 	ubfx	r0, r0, #0, #11
 8009a18:	4403      	add	r3, r0
 8009a1a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8009a1e:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8009a22:	f8dc 3010 	ldr.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8009a26:	6929      	ldr	r1, [r5, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8009a28:	f023 0307 	bic.w	r3, r3, #7
 8009a2c:	f8cc 3010 	str.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8009a30:	f04f 0b00 	mov.w	fp, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8009a34:	f8cc 1010 	str.w	r1, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8009a38:	f8dc 3018 	ldr.w	r3, [ip, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 8009a3c:	f895 0032 	ldrb.w	r0, [r5, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 8009a40:	f895 4031 	ldrb.w	r4, [r5, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8009a44:	f8cc b018 	str.w	fp, [ip, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 8009a48:	f895 3030 	ldrb.w	r3, [r5, #48]	; 0x30
 8009a4c:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
 8009a50:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 8009a54:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8009a58:	f8cc 3018 	str.w	r3, [ip, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 8009a5c:	f8dc 3014 	ldr.w	r3, [ip, #20]
 8009a60:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 8009a64:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 8009a68:	696b      	ldr	r3, [r5, #20]
 8009a6a:	f8cc 3014 	str.w	r3, [ip, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8009a6e:	f8dc 301c 	ldr.w	r3, [ip, #28]
 8009a72:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 8009a76:	f023 0307 	bic.w	r3, r3, #7
 8009a7a:	f8cc 301c 	str.w	r3, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 8009a7e:	e9d5 3007 	ldrd	r3, r0, [r5, #28]
 8009a82:	4303      	orrs	r3, r0
 8009a84:	f8cc 301c 	str.w	r3, [ip, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8009a88:	f8dc 3028 	ldr.w	r3, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8009a8c:	6a6b      	ldr	r3, [r5, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8009a8e:	f8cc b028 	str.w	fp, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8009a92:	f8cc 3028 	str.w	r3, [ip, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8009a96:	bb69      	cbnz	r1, 8009af4 <HAL_LTDC_ConfigLayer+0x184>
  {
    tmp = 4U;
 8009a98:	2304      	movs	r3, #4
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8009a9a:	1abf      	subs	r7, r7, r2
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8009a9c:	6aaa      	ldr	r2, [r5, #40]	; 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8009a9e:	fb03 f707 	mul.w	r7, r3, r7
 8009aa2:	3703      	adds	r7, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8009aa4:	fb02 f303 	mul.w	r3, r2, r3
 8009aa8:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8009aac:	f8dc 302c 	ldr.w	r3, [ip, #44]	; 0x2c
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8009ab0:	6aea      	ldr	r2, [r5, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8009ab2:	f003 23e0 	and.w	r3, r3, #3758153728	; 0xe000e000
 8009ab6:	f8cc 302c 	str.w	r3, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8009aba:	f8cc 702c 	str.w	r7, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 8009abe:	f8dc 3030 	ldr.w	r3, [ip, #48]	; 0x30
 8009ac2:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 8009ac6:	f023 0307 	bic.w	r3, r3, #7
 8009aca:	f8cc 3030 	str.w	r3, [ip, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8009ace:	f8cc 2030 	str.w	r2, [ip, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 8009ad2:	f859 3006 	ldr.w	r3, [r9, r6]
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8009ad6:	2201      	movs	r2, #1
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 8009ad8:	4313      	orrs	r3, r2
 8009ada:	f849 3006 	str.w	r3, [r9, r6]
  __HAL_UNLOCK(hltdc);
 8009ade:	2300      	movs	r3, #0
  return HAL_OK;
 8009ae0:	4618      	mov	r0, r3
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8009ae2:	f8c9 2024 	str.w	r2, [r9, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 8009ae6:	f888 20a1 	strb.w	r2, [r8, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 8009aea:	f888 30a0 	strb.w	r3, [r8, #160]	; 0xa0
}
 8009aee:	b003      	add	sp, #12
 8009af0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 8009af4:	3901      	subs	r1, #1
 8009af6:	2906      	cmp	r1, #6
 8009af8:	d903      	bls.n	8009b02 <HAL_LTDC_ConfigLayer+0x192>
  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8009afa:	2301      	movs	r3, #1
 8009afc:	e7cd      	b.n	8009a9a <HAL_LTDC_ConfigLayer+0x12a>
  __HAL_LOCK(hltdc);
 8009afe:	2002      	movs	r0, #2
}
 8009b00:	4770      	bx	lr
 8009b02:	4b02      	ldr	r3, [pc, #8]	; (8009b0c <HAL_LTDC_ConfigLayer+0x19c>)
 8009b04:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8009b08:	e7c7      	b.n	8009a9a <HAL_LTDC_ConfigLayer+0x12a>
 8009b0a:	bf00      	nop
 8009b0c:	0802ac08 	.word	0x0802ac08

08009b10 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 8009b10:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 8009b14:	2b01      	cmp	r3, #1
 8009b16:	d019      	beq.n	8009b4c <HAL_LTDC_ProgramLineEvent+0x3c>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8009b18:	6802      	ldr	r2, [r0, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8009b1a:	2302      	movs	r3, #2
{
 8009b1c:	b410      	push	{r4}
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8009b1e:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8009b22:	6b53      	ldr	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 8009b24:	4c0a      	ldr	r4, [pc, #40]	; (8009b50 <HAL_LTDC_ProgramLineEvent+0x40>)
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8009b26:	f023 0301 	bic.w	r3, r3, #1
 8009b2a:	6353      	str	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 8009b2c:	6421      	str	r1, [r4, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 8009b2e:	6b51      	ldr	r1, [r2, #52]	; 0x34
  __HAL_UNLOCK(hltdc);
 8009b30:	2300      	movs	r3, #0
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 8009b32:	f041 0101 	orr.w	r1, r1, #1
  hltdc->State = HAL_LTDC_STATE_READY;
 8009b36:	f04f 0c01 	mov.w	ip, #1
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 8009b3a:	6351      	str	r1, [r2, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 8009b3c:	f880 c0a1 	strb.w	ip, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 8009b40:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
}
 8009b44:	f85d 4b04 	ldr.w	r4, [sp], #4
  return HAL_OK;
 8009b48:	4618      	mov	r0, r3
}
 8009b4a:	4770      	bx	lr
  __HAL_LOCK(hltdc);
 8009b4c:	2002      	movs	r0, #2
}
 8009b4e:	4770      	bx	lr
 8009b50:	40016800 	.word	0x40016800

08009b54 <HAL_RCC_OscConfig>:
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8009b54:	2800      	cmp	r0, #0
 8009b56:	f000 81a2 	beq.w	8009e9e <HAL_RCC_OscConfig+0x34a>
{
 8009b5a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8009b5e:	6803      	ldr	r3, [r0, #0]
 8009b60:	07dd      	lsls	r5, r3, #31
{
 8009b62:	b082      	sub	sp, #8
 8009b64:	4604      	mov	r4, r0
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8009b66:	d52f      	bpl.n	8009bc8 <HAL_RCC_OscConfig+0x74>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8009b68:	499e      	ldr	r1, [pc, #632]	; (8009de4 <HAL_RCC_OscConfig+0x290>)
 8009b6a:	688a      	ldr	r2, [r1, #8]
 8009b6c:	f002 020c 	and.w	r2, r2, #12
 8009b70:	2a04      	cmp	r2, #4
 8009b72:	f000 80ed 	beq.w	8009d50 <HAL_RCC_OscConfig+0x1fc>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8009b76:	688a      	ldr	r2, [r1, #8]
 8009b78:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8009b7c:	2a08      	cmp	r2, #8
 8009b7e:	f000 80e3 	beq.w	8009d48 <HAL_RCC_OscConfig+0x1f4>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8009b82:	6863      	ldr	r3, [r4, #4]
 8009b84:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8009b88:	f000 80ec 	beq.w	8009d64 <HAL_RCC_OscConfig+0x210>
 8009b8c:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8009b90:	f000 8175 	beq.w	8009e7e <HAL_RCC_OscConfig+0x32a>
 8009b94:	4d93      	ldr	r5, [pc, #588]	; (8009de4 <HAL_RCC_OscConfig+0x290>)
 8009b96:	682a      	ldr	r2, [r5, #0]
 8009b98:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8009b9c:	602a      	str	r2, [r5, #0]
 8009b9e:	682a      	ldr	r2, [r5, #0]
 8009ba0:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8009ba4:	602a      	str	r2, [r5, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8009ba6:	2b00      	cmp	r3, #0
 8009ba8:	f040 80e1 	bne.w	8009d6e <HAL_RCC_OscConfig+0x21a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8009bac:	f7fd fe94 	bl	80078d8 <HAL_GetTick>
 8009bb0:	4606      	mov	r6, r0

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8009bb2:	e005      	b.n	8009bc0 <HAL_RCC_OscConfig+0x6c>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8009bb4:	f7fd fe90 	bl	80078d8 <HAL_GetTick>
 8009bb8:	1b80      	subs	r0, r0, r6
 8009bba:	2864      	cmp	r0, #100	; 0x64
 8009bbc:	f200 8101 	bhi.w	8009dc2 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8009bc0:	682b      	ldr	r3, [r5, #0]
 8009bc2:	039b      	lsls	r3, r3, #14
 8009bc4:	d4f6      	bmi.n	8009bb4 <HAL_RCC_OscConfig+0x60>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8009bc6:	6823      	ldr	r3, [r4, #0]
 8009bc8:	079f      	lsls	r7, r3, #30
 8009bca:	d528      	bpl.n	8009c1e <HAL_RCC_OscConfig+0xca>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8009bcc:	4a85      	ldr	r2, [pc, #532]	; (8009de4 <HAL_RCC_OscConfig+0x290>)
 8009bce:	6891      	ldr	r1, [r2, #8]
 8009bd0:	f011 0f0c 	tst.w	r1, #12
 8009bd4:	f000 8090 	beq.w	8009cf8 <HAL_RCC_OscConfig+0x1a4>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8009bd8:	6891      	ldr	r1, [r2, #8]
 8009bda:	f001 010c 	and.w	r1, r1, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8009bde:	2908      	cmp	r1, #8
 8009be0:	f000 8086 	beq.w	8009cf0 <HAL_RCC_OscConfig+0x19c>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 8009be4:	68e3      	ldr	r3, [r4, #12]
 8009be6:	2b00      	cmp	r3, #0
 8009be8:	f000 810e 	beq.w	8009e08 <HAL_RCC_OscConfig+0x2b4>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 8009bec:	4b7e      	ldr	r3, [pc, #504]	; (8009de8 <HAL_RCC_OscConfig+0x294>)

        /* Get Start Tick*/
        tickstart = HAL_GetTick();

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8009bee:	4e7d      	ldr	r6, [pc, #500]	; (8009de4 <HAL_RCC_OscConfig+0x290>)
        __HAL_RCC_HSI_ENABLE();
 8009bf0:	2201      	movs	r2, #1
 8009bf2:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8009bf4:	f7fd fe70 	bl	80078d8 <HAL_GetTick>
 8009bf8:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8009bfa:	e005      	b.n	8009c08 <HAL_RCC_OscConfig+0xb4>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8009bfc:	f7fd fe6c 	bl	80078d8 <HAL_GetTick>
 8009c00:	1b40      	subs	r0, r0, r5
 8009c02:	2802      	cmp	r0, #2
 8009c04:	f200 80dd 	bhi.w	8009dc2 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8009c08:	6833      	ldr	r3, [r6, #0]
 8009c0a:	0798      	lsls	r0, r3, #30
 8009c0c:	d5f6      	bpl.n	8009bfc <HAL_RCC_OscConfig+0xa8>
            return HAL_TIMEOUT;
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8009c0e:	6833      	ldr	r3, [r6, #0]
 8009c10:	6922      	ldr	r2, [r4, #16]
 8009c12:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8009c16:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8009c1a:	6033      	str	r3, [r6, #0]
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8009c1c:	6823      	ldr	r3, [r4, #0]
 8009c1e:	071a      	lsls	r2, r3, #28
 8009c20:	d451      	bmi.n	8009cc6 <HAL_RCC_OscConfig+0x172>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8009c22:	0758      	lsls	r0, r3, #29
 8009c24:	d52f      	bpl.n	8009c86 <HAL_RCC_OscConfig+0x132>
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8009c26:	4a6f      	ldr	r2, [pc, #444]	; (8009de4 <HAL_RCC_OscConfig+0x290>)
 8009c28:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8009c2a:	f013 5380 	ands.w	r3, r3, #268435456	; 0x10000000
 8009c2e:	d07f      	beq.n	8009d30 <HAL_RCC_OscConfig+0x1dc>
    FlagStatus       pwrclkchanged = RESET;
 8009c30:	2500      	movs	r5, #0
    {
      __HAL_RCC_PWR_CLK_ENABLE();
      pwrclkchanged = SET;
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8009c32:	4e6e      	ldr	r6, [pc, #440]	; (8009dec <HAL_RCC_OscConfig+0x298>)
 8009c34:	6833      	ldr	r3, [r6, #0]
 8009c36:	05d9      	lsls	r1, r3, #23
 8009c38:	f140 80b3 	bpl.w	8009da2 <HAL_RCC_OscConfig+0x24e>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8009c3c:	68a3      	ldr	r3, [r4, #8]
 8009c3e:	2b01      	cmp	r3, #1
 8009c40:	f000 80c3 	beq.w	8009dca <HAL_RCC_OscConfig+0x276>
 8009c44:	2b05      	cmp	r3, #5
 8009c46:	f000 812c 	beq.w	8009ea2 <HAL_RCC_OscConfig+0x34e>
 8009c4a:	4e66      	ldr	r6, [pc, #408]	; (8009de4 <HAL_RCC_OscConfig+0x290>)
 8009c4c:	6f32      	ldr	r2, [r6, #112]	; 0x70
 8009c4e:	f022 0201 	bic.w	r2, r2, #1
 8009c52:	6732      	str	r2, [r6, #112]	; 0x70
 8009c54:	6f32      	ldr	r2, [r6, #112]	; 0x70
 8009c56:	f022 0204 	bic.w	r2, r2, #4
 8009c5a:	6732      	str	r2, [r6, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8009c5c:	2b00      	cmp	r3, #0
 8009c5e:	f040 80b9 	bne.w	8009dd4 <HAL_RCC_OscConfig+0x280>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8009c62:	f7fd fe39 	bl	80078d8 <HAL_GetTick>

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8009c66:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 8009c6a:	4607      	mov	r7, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8009c6c:	e005      	b.n	8009c7a <HAL_RCC_OscConfig+0x126>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8009c6e:	f7fd fe33 	bl	80078d8 <HAL_GetTick>
 8009c72:	1bc0      	subs	r0, r0, r7
 8009c74:	4540      	cmp	r0, r8
 8009c76:	f200 80a4 	bhi.w	8009dc2 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8009c7a:	6f33      	ldr	r3, [r6, #112]	; 0x70
 8009c7c:	0798      	lsls	r0, r3, #30
 8009c7e:	d4f6      	bmi.n	8009c6e <HAL_RCC_OscConfig+0x11a>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 8009c80:	2d00      	cmp	r5, #0
 8009c82:	f040 8106 	bne.w	8009e92 <HAL_RCC_OscConfig+0x33e>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8009c86:	69a0      	ldr	r0, [r4, #24]
 8009c88:	b1c8      	cbz	r0, 8009cbe <HAL_RCC_OscConfig+0x16a>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8009c8a:	4d56      	ldr	r5, [pc, #344]	; (8009de4 <HAL_RCC_OscConfig+0x290>)
 8009c8c:	68ab      	ldr	r3, [r5, #8]
 8009c8e:	f003 030c 	and.w	r3, r3, #12
 8009c92:	2b08      	cmp	r3, #8
 8009c94:	f000 80c9 	beq.w	8009e2a <HAL_RCC_OscConfig+0x2d6>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8009c98:	4b53      	ldr	r3, [pc, #332]	; (8009de8 <HAL_RCC_OscConfig+0x294>)
 8009c9a:	2200      	movs	r2, #0
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8009c9c:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 8009c9e:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8009ca0:	f000 8109 	beq.w	8009eb6 <HAL_RCC_OscConfig+0x362>
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8009ca4:	f7fd fe18 	bl	80078d8 <HAL_GetTick>
 8009ca8:	4604      	mov	r4, r0

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8009caa:	e005      	b.n	8009cb8 <HAL_RCC_OscConfig+0x164>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8009cac:	f7fd fe14 	bl	80078d8 <HAL_GetTick>
 8009cb0:	1b00      	subs	r0, r0, r4
 8009cb2:	2802      	cmp	r0, #2
 8009cb4:	f200 8085 	bhi.w	8009dc2 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8009cb8:	682b      	ldr	r3, [r5, #0]
 8009cba:	019b      	lsls	r3, r3, #6
 8009cbc:	d4f6      	bmi.n	8009cac <HAL_RCC_OscConfig+0x158>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 8009cbe:	2000      	movs	r0, #0
}
 8009cc0:	b002      	add	sp, #8
 8009cc2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 8009cc6:	6963      	ldr	r3, [r4, #20]
 8009cc8:	b30b      	cbz	r3, 8009d0e <HAL_RCC_OscConfig+0x1ba>
      __HAL_RCC_LSI_ENABLE();
 8009cca:	4b47      	ldr	r3, [pc, #284]	; (8009de8 <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8009ccc:	4e45      	ldr	r6, [pc, #276]	; (8009de4 <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_ENABLE();
 8009cce:	2201      	movs	r2, #1
 8009cd0:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 8009cd4:	f7fd fe00 	bl	80078d8 <HAL_GetTick>
 8009cd8:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8009cda:	e004      	b.n	8009ce6 <HAL_RCC_OscConfig+0x192>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8009cdc:	f7fd fdfc 	bl	80078d8 <HAL_GetTick>
 8009ce0:	1b40      	subs	r0, r0, r5
 8009ce2:	2802      	cmp	r0, #2
 8009ce4:	d86d      	bhi.n	8009dc2 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8009ce6:	6f73      	ldr	r3, [r6, #116]	; 0x74
 8009ce8:	079b      	lsls	r3, r3, #30
 8009cea:	d5f7      	bpl.n	8009cdc <HAL_RCC_OscConfig+0x188>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8009cec:	6823      	ldr	r3, [r4, #0]
 8009cee:	e798      	b.n	8009c22 <HAL_RCC_OscConfig+0xce>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8009cf0:	6852      	ldr	r2, [r2, #4]
 8009cf2:	0256      	lsls	r6, r2, #9
 8009cf4:	f53f af76 	bmi.w	8009be4 <HAL_RCC_OscConfig+0x90>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8009cf8:	4a3a      	ldr	r2, [pc, #232]	; (8009de4 <HAL_RCC_OscConfig+0x290>)
 8009cfa:	6812      	ldr	r2, [r2, #0]
 8009cfc:	0795      	lsls	r5, r2, #30
 8009cfe:	d544      	bpl.n	8009d8a <HAL_RCC_OscConfig+0x236>
 8009d00:	68e2      	ldr	r2, [r4, #12]
 8009d02:	2a01      	cmp	r2, #1
 8009d04:	d041      	beq.n	8009d8a <HAL_RCC_OscConfig+0x236>
        return HAL_ERROR;
 8009d06:	2001      	movs	r0, #1
}
 8009d08:	b002      	add	sp, #8
 8009d0a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_LSI_DISABLE();
 8009d0e:	4a36      	ldr	r2, [pc, #216]	; (8009de8 <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8009d10:	4e34      	ldr	r6, [pc, #208]	; (8009de4 <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_DISABLE();
 8009d12:	f8c2 3e80 	str.w	r3, [r2, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 8009d16:	f7fd fddf 	bl	80078d8 <HAL_GetTick>
 8009d1a:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8009d1c:	e004      	b.n	8009d28 <HAL_RCC_OscConfig+0x1d4>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8009d1e:	f7fd fddb 	bl	80078d8 <HAL_GetTick>
 8009d22:	1b40      	subs	r0, r0, r5
 8009d24:	2802      	cmp	r0, #2
 8009d26:	d84c      	bhi.n	8009dc2 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8009d28:	6f73      	ldr	r3, [r6, #116]	; 0x74
 8009d2a:	079f      	lsls	r7, r3, #30
 8009d2c:	d4f7      	bmi.n	8009d1e <HAL_RCC_OscConfig+0x1ca>
 8009d2e:	e7dd      	b.n	8009cec <HAL_RCC_OscConfig+0x198>
      __HAL_RCC_PWR_CLK_ENABLE();
 8009d30:	9301      	str	r3, [sp, #4]
 8009d32:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8009d34:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8009d38:	6413      	str	r3, [r2, #64]	; 0x40
 8009d3a:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8009d3c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8009d40:	9301      	str	r3, [sp, #4]
 8009d42:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 8009d44:	2501      	movs	r5, #1
 8009d46:	e774      	b.n	8009c32 <HAL_RCC_OscConfig+0xde>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8009d48:	684a      	ldr	r2, [r1, #4]
 8009d4a:	0250      	lsls	r0, r2, #9
 8009d4c:	f57f af19 	bpl.w	8009b82 <HAL_RCC_OscConfig+0x2e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8009d50:	4a24      	ldr	r2, [pc, #144]	; (8009de4 <HAL_RCC_OscConfig+0x290>)
 8009d52:	6812      	ldr	r2, [r2, #0]
 8009d54:	0391      	lsls	r1, r2, #14
 8009d56:	f57f af37 	bpl.w	8009bc8 <HAL_RCC_OscConfig+0x74>
 8009d5a:	6862      	ldr	r2, [r4, #4]
 8009d5c:	2a00      	cmp	r2, #0
 8009d5e:	f47f af33 	bne.w	8009bc8 <HAL_RCC_OscConfig+0x74>
 8009d62:	e7d0      	b.n	8009d06 <HAL_RCC_OscConfig+0x1b2>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8009d64:	4a1f      	ldr	r2, [pc, #124]	; (8009de4 <HAL_RCC_OscConfig+0x290>)
 8009d66:	6813      	ldr	r3, [r2, #0]
 8009d68:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8009d6c:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 8009d6e:	f7fd fdb3 	bl	80078d8 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8009d72:	4e1c      	ldr	r6, [pc, #112]	; (8009de4 <HAL_RCC_OscConfig+0x290>)
        tickstart = HAL_GetTick();
 8009d74:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8009d76:	e004      	b.n	8009d82 <HAL_RCC_OscConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8009d78:	f7fd fdae 	bl	80078d8 <HAL_GetTick>
 8009d7c:	1b40      	subs	r0, r0, r5
 8009d7e:	2864      	cmp	r0, #100	; 0x64
 8009d80:	d81f      	bhi.n	8009dc2 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8009d82:	6833      	ldr	r3, [r6, #0]
 8009d84:	039a      	lsls	r2, r3, #14
 8009d86:	d5f7      	bpl.n	8009d78 <HAL_RCC_OscConfig+0x224>
 8009d88:	e71d      	b.n	8009bc6 <HAL_RCC_OscConfig+0x72>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8009d8a:	4916      	ldr	r1, [pc, #88]	; (8009de4 <HAL_RCC_OscConfig+0x290>)
 8009d8c:	6920      	ldr	r0, [r4, #16]
 8009d8e:	680a      	ldr	r2, [r1, #0]
 8009d90:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 8009d94:	ea42 02c0 	orr.w	r2, r2, r0, lsl #3
 8009d98:	600a      	str	r2, [r1, #0]
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8009d9a:	071a      	lsls	r2, r3, #28
 8009d9c:	f57f af41 	bpl.w	8009c22 <HAL_RCC_OscConfig+0xce>
 8009da0:	e791      	b.n	8009cc6 <HAL_RCC_OscConfig+0x172>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8009da2:	6833      	ldr	r3, [r6, #0]
 8009da4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8009da8:	6033      	str	r3, [r6, #0]
      tickstart = HAL_GetTick();
 8009daa:	f7fd fd95 	bl	80078d8 <HAL_GetTick>
 8009dae:	4607      	mov	r7, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8009db0:	6833      	ldr	r3, [r6, #0]
 8009db2:	05da      	lsls	r2, r3, #23
 8009db4:	f53f af42 	bmi.w	8009c3c <HAL_RCC_OscConfig+0xe8>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8009db8:	f7fd fd8e 	bl	80078d8 <HAL_GetTick>
 8009dbc:	1bc0      	subs	r0, r0, r7
 8009dbe:	2802      	cmp	r0, #2
 8009dc0:	d9f6      	bls.n	8009db0 <HAL_RCC_OscConfig+0x25c>
            return HAL_TIMEOUT;
 8009dc2:	2003      	movs	r0, #3
}
 8009dc4:	b002      	add	sp, #8
 8009dc6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8009dca:	4a06      	ldr	r2, [pc, #24]	; (8009de4 <HAL_RCC_OscConfig+0x290>)
 8009dcc:	6f13      	ldr	r3, [r2, #112]	; 0x70
 8009dce:	f043 0301 	orr.w	r3, r3, #1
 8009dd2:	6713      	str	r3, [r2, #112]	; 0x70
      tickstart = HAL_GetTick();
 8009dd4:	f7fd fd80 	bl	80078d8 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8009dd8:	4f02      	ldr	r7, [pc, #8]	; (8009de4 <HAL_RCC_OscConfig+0x290>)
      tickstart = HAL_GetTick();
 8009dda:	4606      	mov	r6, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8009ddc:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8009de0:	e00b      	b.n	8009dfa <HAL_RCC_OscConfig+0x2a6>
 8009de2:	bf00      	nop
 8009de4:	40023800 	.word	0x40023800
 8009de8:	42470000 	.word	0x42470000
 8009dec:	40007000 	.word	0x40007000
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8009df0:	f7fd fd72 	bl	80078d8 <HAL_GetTick>
 8009df4:	1b80      	subs	r0, r0, r6
 8009df6:	4540      	cmp	r0, r8
 8009df8:	d8e3      	bhi.n	8009dc2 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8009dfa:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8009dfc:	079b      	lsls	r3, r3, #30
 8009dfe:	d5f7      	bpl.n	8009df0 <HAL_RCC_OscConfig+0x29c>
    if(pwrclkchanged == SET)
 8009e00:	2d00      	cmp	r5, #0
 8009e02:	f43f af40 	beq.w	8009c86 <HAL_RCC_OscConfig+0x132>
 8009e06:	e044      	b.n	8009e92 <HAL_RCC_OscConfig+0x33e>
        __HAL_RCC_HSI_DISABLE();
 8009e08:	4a42      	ldr	r2, [pc, #264]	; (8009f14 <HAL_RCC_OscConfig+0x3c0>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8009e0a:	4e43      	ldr	r6, [pc, #268]	; (8009f18 <HAL_RCC_OscConfig+0x3c4>)
        __HAL_RCC_HSI_DISABLE();
 8009e0c:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 8009e0e:	f7fd fd63 	bl	80078d8 <HAL_GetTick>
 8009e12:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8009e14:	e004      	b.n	8009e20 <HAL_RCC_OscConfig+0x2cc>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8009e16:	f7fd fd5f 	bl	80078d8 <HAL_GetTick>
 8009e1a:	1b40      	subs	r0, r0, r5
 8009e1c:	2802      	cmp	r0, #2
 8009e1e:	d8d0      	bhi.n	8009dc2 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8009e20:	6833      	ldr	r3, [r6, #0]
 8009e22:	0799      	lsls	r1, r3, #30
 8009e24:	d4f7      	bmi.n	8009e16 <HAL_RCC_OscConfig+0x2c2>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8009e26:	6823      	ldr	r3, [r4, #0]
 8009e28:	e6f9      	b.n	8009c1e <HAL_RCC_OscConfig+0xca>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8009e2a:	2801      	cmp	r0, #1
 8009e2c:	f43f af48 	beq.w	8009cc0 <HAL_RCC_OscConfig+0x16c>
        pll_config = RCC->PLLCFGR;
 8009e30:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8009e32:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8009e34:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8009e38:	4291      	cmp	r1, r2
 8009e3a:	f47f af64 	bne.w	8009d06 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8009e3e:	6a22      	ldr	r2, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8009e40:	f003 013f 	and.w	r1, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8009e44:	4291      	cmp	r1, r2
 8009e46:	f47f af5e 	bne.w	8009d06 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8009e4a:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8009e4c:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 8009e50:	401a      	ands	r2, r3
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8009e52:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 8009e56:	f47f af56 	bne.w	8009d06 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 8009e5a:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8009e5c:	0852      	lsrs	r2, r2, #1
 8009e5e:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 8009e62:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8009e64:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 8009e68:	f47f af4d 	bne.w	8009d06 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 8009e6c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8009e6e:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 8009e72:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
    return HAL_ERROR;
 8009e76:	bf14      	ite	ne
 8009e78:	2001      	movne	r0, #1
 8009e7a:	2000      	moveq	r0, #0
 8009e7c:	e720      	b.n	8009cc0 <HAL_RCC_OscConfig+0x16c>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8009e7e:	4b26      	ldr	r3, [pc, #152]	; (8009f18 <HAL_RCC_OscConfig+0x3c4>)
 8009e80:	681a      	ldr	r2, [r3, #0]
 8009e82:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 8009e86:	601a      	str	r2, [r3, #0]
 8009e88:	681a      	ldr	r2, [r3, #0]
 8009e8a:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8009e8e:	601a      	str	r2, [r3, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8009e90:	e76d      	b.n	8009d6e <HAL_RCC_OscConfig+0x21a>
      __HAL_RCC_PWR_CLK_DISABLE();
 8009e92:	4a21      	ldr	r2, [pc, #132]	; (8009f18 <HAL_RCC_OscConfig+0x3c4>)
 8009e94:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8009e96:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8009e9a:	6413      	str	r3, [r2, #64]	; 0x40
 8009e9c:	e6f3      	b.n	8009c86 <HAL_RCC_OscConfig+0x132>
    return HAL_ERROR;
 8009e9e:	2001      	movs	r0, #1
}
 8009ea0:	4770      	bx	lr
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8009ea2:	4b1d      	ldr	r3, [pc, #116]	; (8009f18 <HAL_RCC_OscConfig+0x3c4>)
 8009ea4:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 8009ea6:	f042 0204 	orr.w	r2, r2, #4
 8009eaa:	671a      	str	r2, [r3, #112]	; 0x70
 8009eac:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 8009eae:	f042 0201 	orr.w	r2, r2, #1
 8009eb2:	671a      	str	r2, [r3, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8009eb4:	e78e      	b.n	8009dd4 <HAL_RCC_OscConfig+0x280>
        tickstart = HAL_GetTick();
 8009eb6:	f7fd fd0f 	bl	80078d8 <HAL_GetTick>
 8009eba:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8009ebc:	e005      	b.n	8009eca <HAL_RCC_OscConfig+0x376>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8009ebe:	f7fd fd0b 	bl	80078d8 <HAL_GetTick>
 8009ec2:	1b80      	subs	r0, r0, r6
 8009ec4:	2802      	cmp	r0, #2
 8009ec6:	f63f af7c 	bhi.w	8009dc2 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8009eca:	682b      	ldr	r3, [r5, #0]
 8009ecc:	0199      	lsls	r1, r3, #6
 8009ece:	d4f6      	bmi.n	8009ebe <HAL_RCC_OscConfig+0x36a>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8009ed0:	e9d4 3107 	ldrd	r3, r1, [r4, #28]
 8009ed4:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8009ed6:	430b      	orrs	r3, r1
 8009ed8:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8009edc:	e9d4 210a 	ldrd	r2, r1, [r4, #40]	; 0x28
 8009ee0:	0852      	lsrs	r2, r2, #1
 8009ee2:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 8009ee6:	3a01      	subs	r2, #1
        __HAL_RCC_PLL_ENABLE();
 8009ee8:	490a      	ldr	r1, [pc, #40]	; (8009f14 <HAL_RCC_OscConfig+0x3c0>)
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8009eea:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
        __HAL_RCC_PLL_ENABLE();
 8009eee:	2201      	movs	r2, #1
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8009ef0:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 8009ef2:	660a      	str	r2, [r1, #96]	; 0x60
        tickstart = HAL_GetTick();
 8009ef4:	f7fd fcf0 	bl	80078d8 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8009ef8:	4d07      	ldr	r5, [pc, #28]	; (8009f18 <HAL_RCC_OscConfig+0x3c4>)
        tickstart = HAL_GetTick();
 8009efa:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8009efc:	e005      	b.n	8009f0a <HAL_RCC_OscConfig+0x3b6>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8009efe:	f7fd fceb 	bl	80078d8 <HAL_GetTick>
 8009f02:	1b00      	subs	r0, r0, r4
 8009f04:	2802      	cmp	r0, #2
 8009f06:	f63f af5c 	bhi.w	8009dc2 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8009f0a:	682b      	ldr	r3, [r5, #0]
 8009f0c:	019a      	lsls	r2, r3, #6
 8009f0e:	d5f6      	bpl.n	8009efe <HAL_RCC_OscConfig+0x3aa>
 8009f10:	e6d5      	b.n	8009cbe <HAL_RCC_OscConfig+0x16a>
 8009f12:	bf00      	nop
 8009f14:	42470000 	.word	0x42470000
 8009f18:	40023800 	.word	0x40023800

08009f1c <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8009f1c:	4916      	ldr	r1, [pc, #88]	; (8009f78 <HAL_RCC_GetSysClockFreq+0x5c>)
{
 8009f1e:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8009f20:	688b      	ldr	r3, [r1, #8]
 8009f22:	f003 030c 	and.w	r3, r3, #12
 8009f26:	2b04      	cmp	r3, #4
 8009f28:	d01b      	beq.n	8009f62 <HAL_RCC_GetSysClockFreq+0x46>
 8009f2a:	2b08      	cmp	r3, #8
 8009f2c:	d117      	bne.n	8009f5e <HAL_RCC_GetSysClockFreq+0x42>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8009f2e:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8009f30:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8009f32:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8009f34:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8009f38:	f002 023f 	and.w	r2, r2, #63	; 0x3f
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8009f3c:	d113      	bne.n	8009f66 <HAL_RCC_GetSysClockFreq+0x4a>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8009f3e:	480f      	ldr	r0, [pc, #60]	; (8009f7c <HAL_RCC_GetSysClockFreq+0x60>)
 8009f40:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8009f44:	fba1 0100 	umull	r0, r1, r1, r0
 8009f48:	f7f6 f9a2 	bl	8000290 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 8009f4c:	4b0a      	ldr	r3, [pc, #40]	; (8009f78 <HAL_RCC_GetSysClockFreq+0x5c>)
 8009f4e:	685b      	ldr	r3, [r3, #4]
 8009f50:	f3c3 4301 	ubfx	r3, r3, #16, #2
 8009f54:	3301      	adds	r3, #1
 8009f56:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 8009f58:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 8009f5c:	bd08      	pop	{r3, pc}
      sysclockfreq = HSI_VALUE;
 8009f5e:	4807      	ldr	r0, [pc, #28]	; (8009f7c <HAL_RCC_GetSysClockFreq+0x60>)
}
 8009f60:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8009f62:	4807      	ldr	r0, [pc, #28]	; (8009f80 <HAL_RCC_GetSysClockFreq+0x64>)
}
 8009f64:	bd08      	pop	{r3, pc}
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8009f66:	4806      	ldr	r0, [pc, #24]	; (8009f80 <HAL_RCC_GetSysClockFreq+0x64>)
 8009f68:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8009f6c:	2300      	movs	r3, #0
 8009f6e:	fba1 0100 	umull	r0, r1, r1, r0
 8009f72:	f7f6 f98d 	bl	8000290 <__aeabi_uldivmod>
 8009f76:	e7e9      	b.n	8009f4c <HAL_RCC_GetSysClockFreq+0x30>
 8009f78:	40023800 	.word	0x40023800
 8009f7c:	00f42400 	.word	0x00f42400
 8009f80:	007a1200 	.word	0x007a1200

08009f84 <HAL_RCC_ClockConfig>:
  if(RCC_ClkInitStruct == NULL)
 8009f84:	2800      	cmp	r0, #0
 8009f86:	f000 8087 	beq.w	800a098 <HAL_RCC_ClockConfig+0x114>
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8009f8a:	4a48      	ldr	r2, [pc, #288]	; (800a0ac <HAL_RCC_ClockConfig+0x128>)
 8009f8c:	6813      	ldr	r3, [r2, #0]
 8009f8e:	f003 030f 	and.w	r3, r3, #15
 8009f92:	428b      	cmp	r3, r1
{
 8009f94:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009f98:	460d      	mov	r5, r1
 8009f9a:	4604      	mov	r4, r0
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8009f9c:	d209      	bcs.n	8009fb2 <HAL_RCC_ClockConfig+0x2e>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8009f9e:	b2cb      	uxtb	r3, r1
 8009fa0:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8009fa2:	6813      	ldr	r3, [r2, #0]
 8009fa4:	f003 030f 	and.w	r3, r3, #15
 8009fa8:	428b      	cmp	r3, r1
 8009faa:	d002      	beq.n	8009fb2 <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
 8009fac:	2001      	movs	r0, #1
}
 8009fae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8009fb2:	6823      	ldr	r3, [r4, #0]
 8009fb4:	0798      	lsls	r0, r3, #30
 8009fb6:	d514      	bpl.n	8009fe2 <HAL_RCC_ClockConfig+0x5e>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8009fb8:	0759      	lsls	r1, r3, #29
 8009fba:	d504      	bpl.n	8009fc6 <HAL_RCC_ClockConfig+0x42>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8009fbc:	493c      	ldr	r1, [pc, #240]	; (800a0b0 <HAL_RCC_ClockConfig+0x12c>)
 8009fbe:	688a      	ldr	r2, [r1, #8]
 8009fc0:	f442 52e0 	orr.w	r2, r2, #7168	; 0x1c00
 8009fc4:	608a      	str	r2, [r1, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8009fc6:	071a      	lsls	r2, r3, #28
 8009fc8:	d504      	bpl.n	8009fd4 <HAL_RCC_ClockConfig+0x50>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8009fca:	4939      	ldr	r1, [pc, #228]	; (800a0b0 <HAL_RCC_ClockConfig+0x12c>)
 8009fcc:	688a      	ldr	r2, [r1, #8]
 8009fce:	f442 4260 	orr.w	r2, r2, #57344	; 0xe000
 8009fd2:	608a      	str	r2, [r1, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8009fd4:	4936      	ldr	r1, [pc, #216]	; (800a0b0 <HAL_RCC_ClockConfig+0x12c>)
 8009fd6:	68a0      	ldr	r0, [r4, #8]
 8009fd8:	688a      	ldr	r2, [r1, #8]
 8009fda:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 8009fde:	4302      	orrs	r2, r0
 8009fe0:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8009fe2:	07df      	lsls	r7, r3, #31
 8009fe4:	d521      	bpl.n	800a02a <HAL_RCC_ClockConfig+0xa6>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8009fe6:	6862      	ldr	r2, [r4, #4]
 8009fe8:	2a01      	cmp	r2, #1
 8009fea:	d057      	beq.n	800a09c <HAL_RCC_ClockConfig+0x118>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8009fec:	1e93      	subs	r3, r2, #2
 8009fee:	2b01      	cmp	r3, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8009ff0:	4b2f      	ldr	r3, [pc, #188]	; (800a0b0 <HAL_RCC_ClockConfig+0x12c>)
 8009ff2:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8009ff4:	d94d      	bls.n	800a092 <HAL_RCC_ClockConfig+0x10e>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8009ff6:	0799      	lsls	r1, r3, #30
 8009ff8:	d5d8      	bpl.n	8009fac <HAL_RCC_ClockConfig+0x28>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8009ffa:	4e2d      	ldr	r6, [pc, #180]	; (800a0b0 <HAL_RCC_ClockConfig+0x12c>)
 8009ffc:	68b3      	ldr	r3, [r6, #8]
 8009ffe:	f023 0303 	bic.w	r3, r3, #3
 800a002:	4313      	orrs	r3, r2
 800a004:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 800a006:	f7fd fc67 	bl	80078d8 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800a00a:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 800a00e:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800a010:	e004      	b.n	800a01c <HAL_RCC_ClockConfig+0x98>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800a012:	f7fd fc61 	bl	80078d8 <HAL_GetTick>
 800a016:	1bc0      	subs	r0, r0, r7
 800a018:	4540      	cmp	r0, r8
 800a01a:	d844      	bhi.n	800a0a6 <HAL_RCC_ClockConfig+0x122>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800a01c:	68b3      	ldr	r3, [r6, #8]
 800a01e:	6862      	ldr	r2, [r4, #4]
 800a020:	f003 030c 	and.w	r3, r3, #12
 800a024:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800a028:	d1f3      	bne.n	800a012 <HAL_RCC_ClockConfig+0x8e>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 800a02a:	4a20      	ldr	r2, [pc, #128]	; (800a0ac <HAL_RCC_ClockConfig+0x128>)
 800a02c:	6813      	ldr	r3, [r2, #0]
 800a02e:	f003 030f 	and.w	r3, r3, #15
 800a032:	42ab      	cmp	r3, r5
 800a034:	d906      	bls.n	800a044 <HAL_RCC_ClockConfig+0xc0>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800a036:	b2eb      	uxtb	r3, r5
 800a038:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800a03a:	6813      	ldr	r3, [r2, #0]
 800a03c:	f003 030f 	and.w	r3, r3, #15
 800a040:	42ab      	cmp	r3, r5
 800a042:	d1b3      	bne.n	8009fac <HAL_RCC_ClockConfig+0x28>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800a044:	6823      	ldr	r3, [r4, #0]
 800a046:	075a      	lsls	r2, r3, #29
 800a048:	d506      	bpl.n	800a058 <HAL_RCC_ClockConfig+0xd4>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800a04a:	4919      	ldr	r1, [pc, #100]	; (800a0b0 <HAL_RCC_ClockConfig+0x12c>)
 800a04c:	68e0      	ldr	r0, [r4, #12]
 800a04e:	688a      	ldr	r2, [r1, #8]
 800a050:	f422 52e0 	bic.w	r2, r2, #7168	; 0x1c00
 800a054:	4302      	orrs	r2, r0
 800a056:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800a058:	071b      	lsls	r3, r3, #28
 800a05a:	d507      	bpl.n	800a06c <HAL_RCC_ClockConfig+0xe8>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 800a05c:	4a14      	ldr	r2, [pc, #80]	; (800a0b0 <HAL_RCC_ClockConfig+0x12c>)
 800a05e:	6921      	ldr	r1, [r4, #16]
 800a060:	6893      	ldr	r3, [r2, #8]
 800a062:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 800a066:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800a06a:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800a06c:	f7ff ff56 	bl	8009f1c <HAL_RCC_GetSysClockFreq>
 800a070:	4a0f      	ldr	r2, [pc, #60]	; (800a0b0 <HAL_RCC_ClockConfig+0x12c>)
 800a072:	4c10      	ldr	r4, [pc, #64]	; (800a0b4 <HAL_RCC_ClockConfig+0x130>)
 800a074:	6892      	ldr	r2, [r2, #8]
 800a076:	4910      	ldr	r1, [pc, #64]	; (800a0b8 <HAL_RCC_ClockConfig+0x134>)
 800a078:	f3c2 1203 	ubfx	r2, r2, #4, #4
 800a07c:	4603      	mov	r3, r0
 800a07e:	5ca2      	ldrb	r2, [r4, r2]
  HAL_InitTick (uwTickPrio);
 800a080:	480e      	ldr	r0, [pc, #56]	; (800a0bc <HAL_RCC_ClockConfig+0x138>)
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800a082:	40d3      	lsrs	r3, r2
  HAL_InitTick (uwTickPrio);
 800a084:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800a086:	600b      	str	r3, [r1, #0]
  HAL_InitTick (uwTickPrio);
 800a088:	f7f7 fff2 	bl	8002070 <HAL_InitTick>
  return HAL_OK;
 800a08c:	2000      	movs	r0, #0
}
 800a08e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800a092:	0198      	lsls	r0, r3, #6
 800a094:	d4b1      	bmi.n	8009ffa <HAL_RCC_ClockConfig+0x76>
 800a096:	e789      	b.n	8009fac <HAL_RCC_ClockConfig+0x28>
    return HAL_ERROR;
 800a098:	2001      	movs	r0, #1
}
 800a09a:	4770      	bx	lr
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800a09c:	4b04      	ldr	r3, [pc, #16]	; (800a0b0 <HAL_RCC_ClockConfig+0x12c>)
 800a09e:	681b      	ldr	r3, [r3, #0]
 800a0a0:	039e      	lsls	r6, r3, #14
 800a0a2:	d4aa      	bmi.n	8009ffa <HAL_RCC_ClockConfig+0x76>
 800a0a4:	e782      	b.n	8009fac <HAL_RCC_ClockConfig+0x28>
        return HAL_TIMEOUT;
 800a0a6:	2003      	movs	r0, #3
 800a0a8:	e781      	b.n	8009fae <HAL_RCC_ClockConfig+0x2a>
 800a0aa:	bf00      	nop
 800a0ac:	40023c00 	.word	0x40023c00
 800a0b0:	40023800 	.word	0x40023800
 800a0b4:	0802abf0 	.word	0x0802abf0
 800a0b8:	20000078 	.word	0x20000078
 800a0bc:	20000080 	.word	0x20000080

0800a0c0 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800a0c0:	4b04      	ldr	r3, [pc, #16]	; (800a0d4 <HAL_RCC_GetPCLK1Freq+0x14>)
  return SystemCoreClock;
 800a0c2:	4905      	ldr	r1, [pc, #20]	; (800a0d8 <HAL_RCC_GetPCLK1Freq+0x18>)
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800a0c4:	689b      	ldr	r3, [r3, #8]
 800a0c6:	4a05      	ldr	r2, [pc, #20]	; (800a0dc <HAL_RCC_GetPCLK1Freq+0x1c>)
 800a0c8:	6808      	ldr	r0, [r1, #0]
 800a0ca:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800a0ce:	5cd3      	ldrb	r3, [r2, r3]
}
 800a0d0:	40d8      	lsrs	r0, r3
 800a0d2:	4770      	bx	lr
 800a0d4:	40023800 	.word	0x40023800
 800a0d8:	20000078 	.word	0x20000078
 800a0dc:	0802ac00 	.word	0x0802ac00

0800a0e0 <HAL_RCC_GetClockConfig>:
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800a0e0:	4b0e      	ldr	r3, [pc, #56]	; (800a11c <HAL_RCC_GetClockConfig+0x3c>)
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 800a0e2:	220f      	movs	r2, #15
 800a0e4:	6002      	str	r2, [r0, #0]
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800a0e6:	689a      	ldr	r2, [r3, #8]
 800a0e8:	f002 0203 	and.w	r2, r2, #3
 800a0ec:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 800a0ee:	689a      	ldr	r2, [r3, #8]
 800a0f0:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 800a0f4:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800a0f6:	689a      	ldr	r2, [r3, #8]
 800a0f8:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 800a0fc:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800a0fe:	689b      	ldr	r3, [r3, #8]
 800a100:	08db      	lsrs	r3, r3, #3
{
 800a102:	b410      	push	{r4}
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800a104:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800a108:	4c05      	ldr	r4, [pc, #20]	; (800a120 <HAL_RCC_GetClockConfig+0x40>)
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800a10a:	6103      	str	r3, [r0, #16]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800a10c:	6823      	ldr	r3, [r4, #0]
}
 800a10e:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800a112:	f003 030f 	and.w	r3, r3, #15
 800a116:	600b      	str	r3, [r1, #0]
}
 800a118:	4770      	bx	lr
 800a11a:	bf00      	nop
 800a11c:	40023800 	.word	0x40023800
 800a120:	40023c00 	.word	0x40023c00

0800a124 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 800a124:	b5f0      	push	{r4, r5, r6, r7, lr}
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 800a126:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800a128:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 800a12c:	b083      	sub	sp, #12
 800a12e:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800a130:	d111      	bne.n	800a156 <HAL_RCCEx_PeriphCLKConfig+0x32>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800a132:	f013 0f0c 	tst.w	r3, #12
 800a136:	d16f      	bne.n	800a218 <HAL_RCCEx_PeriphCLKConfig+0xf4>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800a138:	0698      	lsls	r0, r3, #26
 800a13a:	f100 80c2 	bmi.w	800a2c2 <HAL_RCCEx_PeriphCLKConfig+0x19e>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800a13e:	f013 0310 	ands.w	r3, r3, #16
 800a142:	f000 80bb 	beq.w	800a2bc <HAL_RCCEx_PeriphCLKConfig+0x198>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 800a146:	4b89      	ldr	r3, [pc, #548]	; (800a36c <HAL_RCCEx_PeriphCLKConfig+0x248>)
 800a148:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 800a14c:	f8c3 21e0 	str.w	r2, [r3, #480]	; 0x1e0
  }
  return HAL_OK;
 800a150:	2000      	movs	r0, #0
}
 800a152:	b003      	add	sp, #12
 800a154:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLI2S_DISABLE();
 800a156:	4b86      	ldr	r3, [pc, #536]	; (800a370 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800a158:	4e86      	ldr	r6, [pc, #536]	; (800a374 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_DISABLE();
 800a15a:	2200      	movs	r2, #0
 800a15c:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800a15e:	f7fd fbbb 	bl	80078d8 <HAL_GetTick>
 800a162:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800a164:	e004      	b.n	800a170 <HAL_RCCEx_PeriphCLKConfig+0x4c>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800a166:	f7fd fbb7 	bl	80078d8 <HAL_GetTick>
 800a16a:	1b43      	subs	r3, r0, r5
 800a16c:	2b02      	cmp	r3, #2
 800a16e:	d850      	bhi.n	800a212 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800a170:	6833      	ldr	r3, [r6, #0]
 800a172:	0118      	lsls	r0, r3, #4
 800a174:	d4f7      	bmi.n	800a166 <HAL_RCCEx_PeriphCLKConfig+0x42>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800a176:	6823      	ldr	r3, [r4, #0]
 800a178:	07d9      	lsls	r1, r3, #31
 800a17a:	d506      	bpl.n	800a18a <HAL_RCCEx_PeriphCLKConfig+0x66>
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 800a17c:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800a180:	0712      	lsls	r2, r2, #28
 800a182:	ea42 1281 	orr.w	r2, r2, r1, lsl #6
 800a186:	f8c6 2084 	str.w	r2, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 800a18a:	079a      	lsls	r2, r3, #30
 800a18c:	d515      	bpl.n	800a1ba <HAL_RCCEx_PeriphCLKConfig+0x96>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800a18e:	4979      	ldr	r1, [pc, #484]	; (800a374 <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800a190:	68e2      	ldr	r2, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800a192:	f8d1 0084 	ldr.w	r0, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800a196:	6865      	ldr	r5, [r4, #4]
 800a198:	0612      	lsls	r2, r2, #24
 800a19a:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 800a19e:	ea42 1285 	orr.w	r2, r2, r5, lsl #6
 800a1a2:	4302      	orrs	r2, r0
 800a1a4:	f8c1 2084 	str.w	r2, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 800a1a8:	f8d1 008c 	ldr.w	r0, [r1, #140]	; 0x8c
 800a1ac:	69e2      	ldr	r2, [r4, #28]
 800a1ae:	f020 001f 	bic.w	r0, r0, #31
 800a1b2:	3a01      	subs	r2, #1
 800a1b4:	4302      	orrs	r2, r0
 800a1b6:	f8c1 208c 	str.w	r2, [r1, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 800a1ba:	065b      	lsls	r3, r3, #25
 800a1bc:	d509      	bpl.n	800a1d2 <HAL_RCCEx_PeriphCLKConfig+0xae>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 800a1be:	1d20      	adds	r0, r4, #4
 800a1c0:	c80b      	ldmia	r0, {r0, r1, r3}
 800a1c2:	061b      	lsls	r3, r3, #24
 800a1c4:	4a6b      	ldr	r2, [pc, #428]	; (800a374 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800a1c6:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800a1ca:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
 800a1ce:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 800a1d2:	4b67      	ldr	r3, [pc, #412]	; (800a370 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800a1d4:	4e67      	ldr	r6, [pc, #412]	; (800a374 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_ENABLE();
 800a1d6:	2201      	movs	r2, #1
 800a1d8:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800a1da:	f7fd fb7d 	bl	80078d8 <HAL_GetTick>
 800a1de:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800a1e0:	e004      	b.n	800a1ec <HAL_RCCEx_PeriphCLKConfig+0xc8>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800a1e2:	f7fd fb79 	bl	80078d8 <HAL_GetTick>
 800a1e6:	1b40      	subs	r0, r0, r5
 800a1e8:	2802      	cmp	r0, #2
 800a1ea:	d812      	bhi.n	800a212 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800a1ec:	6833      	ldr	r3, [r6, #0]
 800a1ee:	011f      	lsls	r7, r3, #4
 800a1f0:	d5f7      	bpl.n	800a1e2 <HAL_RCCEx_PeriphCLKConfig+0xbe>
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800a1f2:	6823      	ldr	r3, [r4, #0]
 800a1f4:	e79d      	b.n	800a132 <HAL_RCCEx_PeriphCLKConfig+0xe>
        tickstart = HAL_GetTick();
 800a1f6:	f7fd fb6f 	bl	80078d8 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800a1fa:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 800a1fe:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800a200:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800a202:	079b      	lsls	r3, r3, #30
 800a204:	f100 80a5 	bmi.w	800a352 <HAL_RCCEx_PeriphCLKConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800a208:	f7fd fb66 	bl	80078d8 <HAL_GetTick>
 800a20c:	1b80      	subs	r0, r0, r6
 800a20e:	42b8      	cmp	r0, r7
 800a210:	d9f6      	bls.n	800a200 <HAL_RCCEx_PeriphCLKConfig+0xdc>
        return HAL_TIMEOUT;
 800a212:	2003      	movs	r0, #3
}
 800a214:	b003      	add	sp, #12
 800a216:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLSAI_DISABLE();
 800a218:	4b55      	ldr	r3, [pc, #340]	; (800a370 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800a21a:	4e56      	ldr	r6, [pc, #344]	; (800a374 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_DISABLE();
 800a21c:	2200      	movs	r2, #0
 800a21e:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800a220:	f7fd fb5a 	bl	80078d8 <HAL_GetTick>
 800a224:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800a226:	e004      	b.n	800a232 <HAL_RCCEx_PeriphCLKConfig+0x10e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800a228:	f7fd fb56 	bl	80078d8 <HAL_GetTick>
 800a22c:	1b43      	subs	r3, r0, r5
 800a22e:	2b02      	cmp	r3, #2
 800a230:	d8ef      	bhi.n	800a212 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800a232:	6833      	ldr	r3, [r6, #0]
 800a234:	0098      	lsls	r0, r3, #2
 800a236:	d4f7      	bmi.n	800a228 <HAL_RCCEx_PeriphCLKConfig+0x104>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 800a238:	6822      	ldr	r2, [r4, #0]
 800a23a:	0751      	lsls	r1, r2, #29
 800a23c:	d515      	bpl.n	800a26a <HAL_RCCEx_PeriphCLKConfig+0x146>
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800a23e:	6963      	ldr	r3, [r4, #20]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800a240:	f8d6 1088 	ldr.w	r1, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800a244:	6920      	ldr	r0, [r4, #16]
 800a246:	061b      	lsls	r3, r3, #24
 800a248:	f001 41e0 	and.w	r1, r1, #1879048192	; 0x70000000
 800a24c:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800a250:	430b      	orrs	r3, r1
 800a252:	f8c6 3088 	str.w	r3, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800a256:	f8d6 308c 	ldr.w	r3, [r6, #140]	; 0x8c
 800a25a:	6a21      	ldr	r1, [r4, #32]
 800a25c:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 800a260:	3901      	subs	r1, #1
 800a262:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800a266:	f8c6 308c 	str.w	r3, [r6, #140]	; 0x8c
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 800a26a:	0713      	lsls	r3, r2, #28
 800a26c:	d514      	bpl.n	800a298 <HAL_RCCEx_PeriphCLKConfig+0x174>
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800a26e:	4a41      	ldr	r2, [pc, #260]	; (800a374 <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800a270:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800a272:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800a276:	6920      	ldr	r0, [r4, #16]
 800a278:	071b      	lsls	r3, r3, #28
 800a27a:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 800a27e:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800a282:	430b      	orrs	r3, r1
 800a284:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 800a288:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 800a28c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800a28e:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800a292:	430b      	orrs	r3, r1
 800a294:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    __HAL_RCC_PLLSAI_ENABLE();
 800a298:	4b35      	ldr	r3, [pc, #212]	; (800a370 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800a29a:	4e36      	ldr	r6, [pc, #216]	; (800a374 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_ENABLE();
 800a29c:	2201      	movs	r2, #1
 800a29e:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800a2a0:	f7fd fb1a 	bl	80078d8 <HAL_GetTick>
 800a2a4:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800a2a6:	e004      	b.n	800a2b2 <HAL_RCCEx_PeriphCLKConfig+0x18e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800a2a8:	f7fd fb16 	bl	80078d8 <HAL_GetTick>
 800a2ac:	1b40      	subs	r0, r0, r5
 800a2ae:	2802      	cmp	r0, #2
 800a2b0:	d8af      	bhi.n	800a212 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800a2b2:	6833      	ldr	r3, [r6, #0]
 800a2b4:	009f      	lsls	r7, r3, #2
 800a2b6:	d5f7      	bpl.n	800a2a8 <HAL_RCCEx_PeriphCLKConfig+0x184>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800a2b8:	6823      	ldr	r3, [r4, #0]
 800a2ba:	e73d      	b.n	800a138 <HAL_RCCEx_PeriphCLKConfig+0x14>
  return HAL_OK;
 800a2bc:	4618      	mov	r0, r3
}
 800a2be:	b003      	add	sp, #12
 800a2c0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PWR_CLK_ENABLE();
 800a2c2:	4b2c      	ldr	r3, [pc, #176]	; (800a374 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    PWR->CR |= PWR_CR_DBP;
 800a2c4:	4d2c      	ldr	r5, [pc, #176]	; (800a378 <HAL_RCCEx_PeriphCLKConfig+0x254>)
    __HAL_RCC_PWR_CLK_ENABLE();
 800a2c6:	2200      	movs	r2, #0
 800a2c8:	9201      	str	r2, [sp, #4]
 800a2ca:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800a2cc:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800a2d0:	641a      	str	r2, [r3, #64]	; 0x40
 800a2d2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a2d4:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800a2d8:	9301      	str	r3, [sp, #4]
 800a2da:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 800a2dc:	682b      	ldr	r3, [r5, #0]
 800a2de:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800a2e2:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800a2e4:	f7fd faf8 	bl	80078d8 <HAL_GetTick>
 800a2e8:	4606      	mov	r6, r0
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800a2ea:	e004      	b.n	800a2f6 <HAL_RCCEx_PeriphCLKConfig+0x1d2>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 800a2ec:	f7fd faf4 	bl	80078d8 <HAL_GetTick>
 800a2f0:	1b83      	subs	r3, r0, r6
 800a2f2:	2b02      	cmp	r3, #2
 800a2f4:	d88d      	bhi.n	800a212 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800a2f6:	682b      	ldr	r3, [r5, #0]
 800a2f8:	05d9      	lsls	r1, r3, #23
 800a2fa:	d5f7      	bpl.n	800a2ec <HAL_RCCEx_PeriphCLKConfig+0x1c8>
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800a2fc:	4d1d      	ldr	r5, [pc, #116]	; (800a374 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800a2fe:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800a300:	6f2a      	ldr	r2, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800a302:	f412 7240 	ands.w	r2, r2, #768	; 0x300
 800a306:	d111      	bne.n	800a32c <HAL_RCCEx_PeriphCLKConfig+0x208>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800a308:	f403 7240 	and.w	r2, r3, #768	; 0x300
 800a30c:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 800a310:	d021      	beq.n	800a356 <HAL_RCCEx_PeriphCLKConfig+0x232>
 800a312:	4918      	ldr	r1, [pc, #96]	; (800a374 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800a314:	688a      	ldr	r2, [r1, #8]
 800a316:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800a31a:	608a      	str	r2, [r1, #8]
 800a31c:	4a15      	ldr	r2, [pc, #84]	; (800a374 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800a31e:	6f11      	ldr	r1, [r2, #112]	; 0x70
 800a320:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800a324:	430b      	orrs	r3, r1
 800a326:	6713      	str	r3, [r2, #112]	; 0x70
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800a328:	6823      	ldr	r3, [r4, #0]
 800a32a:	e708      	b.n	800a13e <HAL_RCCEx_PeriphCLKConfig+0x1a>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800a32c:	f403 7140 	and.w	r1, r3, #768	; 0x300
 800a330:	4291      	cmp	r1, r2
 800a332:	d0eb      	beq.n	800a30c <HAL_RCCEx_PeriphCLKConfig+0x1e8>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800a334:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 800a336:	4a0e      	ldr	r2, [pc, #56]	; (800a370 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 800a338:	2101      	movs	r1, #1
 800a33a:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800a33e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 800a342:	2100      	movs	r1, #0
 800a344:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 800a348:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800a34a:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800a34c:	07da      	lsls	r2, r3, #31
 800a34e:	f53f af52 	bmi.w	800a1f6 <HAL_RCCEx_PeriphCLKConfig+0xd2>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800a352:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800a354:	e7d8      	b.n	800a308 <HAL_RCCEx_PeriphCLKConfig+0x1e4>
 800a356:	4807      	ldr	r0, [pc, #28]	; (800a374 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800a358:	6882      	ldr	r2, [r0, #8]
 800a35a:	f023 4170 	bic.w	r1, r3, #4026531840	; 0xf0000000
 800a35e:	f421 7140 	bic.w	r1, r1, #768	; 0x300
 800a362:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800a366:	430a      	orrs	r2, r1
 800a368:	6082      	str	r2, [r0, #8]
 800a36a:	e7d7      	b.n	800a31c <HAL_RCCEx_PeriphCLKConfig+0x1f8>
 800a36c:	42471000 	.word	0x42471000
 800a370:	42470000 	.word	0x42470000
 800a374:	40023800 	.word	0x40023800
 800a378:	40007000 	.word	0x40007000

0800a37c <HAL_SDRAM_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 800a37c:	b1f0      	cbz	r0, 800a3bc <HAL_SDRAM_Init+0x40>
{
 800a37e:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 800a380:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800a384:	460d      	mov	r5, r1
 800a386:	4604      	mov	r4, r0
 800a388:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800a38c:	b18b      	cbz	r3, 800a3b2 <HAL_SDRAM_Init+0x36>

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800a38e:	4621      	mov	r1, r4
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800a390:	2302      	movs	r3, #2
 800a392:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800a396:	f851 0b04 	ldr.w	r0, [r1], #4
 800a39a:	f000 ffcd 	bl	800b338 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 800a39e:	e9d4 0200 	ldrd	r0, r2, [r4]
 800a3a2:	4629      	mov	r1, r5
 800a3a4:	f001 f806 	bl	800b3b4 <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800a3a8:	2301      	movs	r3, #1
 800a3aa:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  return HAL_OK;
 800a3ae:	2000      	movs	r0, #0
}
 800a3b0:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->Lock = HAL_UNLOCKED;
 800a3b2:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d
    HAL_SDRAM_MspInit(hsdram);
 800a3b6:	f7f7 fdf3 	bl	8001fa0 <HAL_SDRAM_MspInit>
 800a3ba:	e7e8      	b.n	800a38e <HAL_SDRAM_Init+0x12>
    return HAL_ERROR;
 800a3bc:	2001      	movs	r0, #1
}
 800a3be:	4770      	bx	lr

0800a3c0 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 800a3c0:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800a3c2:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 800a3c6:	2b02      	cmp	r3, #2
{
 800a3c8:	4605      	mov	r5, r0
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800a3ca:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 800a3cc:	d004      	beq.n	800a3d8 <HAL_SDRAM_SendCommand+0x18>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 800a3ce:	f000 04fb 	and.w	r4, r0, #251	; 0xfb
 800a3d2:	2c01      	cmp	r4, #1
 800a3d4:	d001      	beq.n	800a3da <HAL_SDRAM_SendCommand+0x1a>
      hsdram->State = HAL_SDRAM_STATE_READY;
    }
  }
  else
  {
    return HAL_ERROR;
 800a3d6:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800a3d8:	bd70      	pop	{r4, r5, r6, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800a3da:	460e      	mov	r6, r1
 800a3dc:	2302      	movs	r3, #2
 800a3de:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800a3e2:	6828      	ldr	r0, [r5, #0]
 800a3e4:	f001 f832 	bl	800b44c <FMC_SDRAM_SendCommand>
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 800a3e8:	6833      	ldr	r3, [r6, #0]
 800a3ea:	2b02      	cmp	r3, #2
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 800a3ec:	bf06      	itte	eq
 800a3ee:	2305      	moveq	r3, #5
 800a3f0:	f885 302c 	strbeq.w	r3, [r5, #44]	; 0x2c
      hsdram->State = HAL_SDRAM_STATE_READY;
 800a3f4:	f885 402c 	strbne.w	r4, [r5, #44]	; 0x2c
  return HAL_OK;
 800a3f8:	2000      	movs	r0, #0
}
 800a3fa:	bd70      	pop	{r4, r5, r6, pc}

0800a3fc <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 800a3fc:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800a3fe:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800a402:	2b02      	cmp	r3, #2
{
 800a404:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800a406:	b2d8      	uxtb	r0, r3
 800a408:	d005      	beq.n	800a416 <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 800a40a:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800a40e:	2b01      	cmp	r3, #1
 800a410:	b2dd      	uxtb	r5, r3
 800a412:	d001      	beq.n	800a418 <HAL_SDRAM_ProgramRefreshRate+0x1c>
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  else
  {
    return HAL_ERROR;
 800a414:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800a416:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800a418:	2302      	movs	r3, #2
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800a41a:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800a41c:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800a420:	f001 f83e 	bl	800b4a0 <FMC_SDRAM_ProgramRefreshRate>
    hsdram->State = HAL_SDRAM_STATE_READY;
 800a424:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
  return HAL_OK;
 800a428:	2000      	movs	r0, #0
}
 800a42a:	bd38      	pop	{r3, r4, r5, pc}

0800a42c <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 800a42c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a430:	b082      	sub	sp, #8
 800a432:	461d      	mov	r5, r3
 800a434:	4616      	mov	r6, r2
 800a436:	460c      	mov	r4, r1
 800a438:	4607      	mov	r7, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 800a43a:	f7fd fa4d 	bl	80078d8 <HAL_GetTick>
 800a43e:	4435      	add	r5, r6
 800a440:	1a2d      	subs	r5, r5, r0
  tmp_tickstart = HAL_GetTick();
 800a442:	f7fd fa49 	bl	80078d8 <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800a446:	4b27      	ldr	r3, [pc, #156]	; (800a4e4 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xb8>)
 800a448:	681b      	ldr	r3, [r3, #0]
 800a44a:	f3c3 33cb 	ubfx	r3, r3, #15, #12
 800a44e:	fb05 f303 	mul.w	r3, r5, r3
  tmp_tickstart = HAL_GetTick();
 800a452:	4680      	mov	r8, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800a454:	9301      	str	r3, [sp, #4]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800a456:	1c73      	adds	r3, r6, #1
 800a458:	6839      	ldr	r1, [r7, #0]
 800a45a:	d107      	bne.n	800a46c <SPI_WaitFlagStateUntilTimeout.constprop.0+0x40>
 800a45c:	688b      	ldr	r3, [r1, #8]
 800a45e:	ea34 0303 	bics.w	r3, r4, r3
 800a462:	d0fb      	beq.n	800a45c <SPI_WaitFlagStateUntilTimeout.constprop.0+0x30>
      }
      count--;
    }
  }

  return HAL_OK;
 800a464:	2000      	movs	r0, #0
}
 800a466:	b002      	add	sp, #8
 800a468:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800a46c:	688b      	ldr	r3, [r1, #8]
 800a46e:	ea34 0303 	bics.w	r3, r4, r3
 800a472:	d1f7      	bne.n	800a464 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x38>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 800a474:	f7fd fa30 	bl	80078d8 <HAL_GetTick>
 800a478:	eba0 0008 	sub.w	r0, r0, r8
 800a47c:	42a8      	cmp	r0, r5
 800a47e:	d208      	bcs.n	800a492 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x66>
      if (count == 0U)
 800a480:	9b01      	ldr	r3, [sp, #4]
        tmp_timeout = 0U;
 800a482:	2b00      	cmp	r3, #0
      count--;
 800a484:	9b01      	ldr	r3, [sp, #4]
 800a486:	f103 33ff 	add.w	r3, r3, #4294967295
        tmp_timeout = 0U;
 800a48a:	bf08      	it	eq
 800a48c:	2500      	moveq	r5, #0
      count--;
 800a48e:	9301      	str	r3, [sp, #4]
 800a490:	e7e1      	b.n	800a456 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x2a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800a492:	e9d7 3100 	ldrd	r3, r1, [r7]
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800a496:	685a      	ldr	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800a498:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800a49c:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 800a4a0:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800a4a2:	d013      	beq.n	800a4cc <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa0>
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 800a4a4:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800a4a6:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 800a4aa:	d107      	bne.n	800a4bc <SPI_WaitFlagStateUntilTimeout.constprop.0+0x90>
          SPI_RESET_CRC(hspi);
 800a4ac:	681a      	ldr	r2, [r3, #0]
 800a4ae:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800a4b2:	601a      	str	r2, [r3, #0]
 800a4b4:	681a      	ldr	r2, [r3, #0]
 800a4b6:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800a4ba:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 800a4bc:	2201      	movs	r2, #1
        __HAL_UNLOCK(hspi);
 800a4be:	2300      	movs	r3, #0
        hspi->State = HAL_SPI_STATE_READY;
 800a4c0:	f887 2051 	strb.w	r2, [r7, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 800a4c4:	f887 3050 	strb.w	r3, [r7, #80]	; 0x50
 800a4c8:	2003      	movs	r0, #3
 800a4ca:	e7cc      	b.n	800a466 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x3a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800a4cc:	68ba      	ldr	r2, [r7, #8]
 800a4ce:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800a4d2:	d002      	beq.n	800a4da <SPI_WaitFlagStateUntilTimeout.constprop.0+0xae>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800a4d4:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800a4d8:	d1e4      	bne.n	800a4a4 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
          __HAL_SPI_DISABLE(hspi);
 800a4da:	681a      	ldr	r2, [r3, #0]
 800a4dc:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800a4e0:	601a      	str	r2, [r3, #0]
 800a4e2:	e7df      	b.n	800a4a4 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
 800a4e4:	20000078 	.word	0x20000078

0800a4e8 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 800a4e8:	b538      	push	{r3, r4, r5, lr}
 800a4ea:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800a4ec:	6842      	ldr	r2, [r0, #4]
 800a4ee:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 800a4f2:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800a4f4:	d006      	beq.n	800a504 <SPI_EndRxTransaction+0x1c>
    }
  }
  else
  {
    /* Wait the RXNE reset */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800a4f6:	460a      	mov	r2, r1
 800a4f8:	2101      	movs	r1, #1
 800a4fa:	f7ff ff97 	bl	800a42c <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800a4fe:	b978      	cbnz	r0, 800a520 <SPI_EndRxTransaction+0x38>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 800a500:	2000      	movs	r0, #0
}
 800a502:	bd38      	pop	{r3, r4, r5, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800a504:	6882      	ldr	r2, [r0, #8]
 800a506:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800a50a:	d01c      	beq.n	800a546 <SPI_EndRxTransaction+0x5e>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800a50c:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800a510:	d00c      	beq.n	800a52c <SPI_EndRxTransaction+0x44>
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800a512:	460a      	mov	r2, r1
 800a514:	4620      	mov	r0, r4
 800a516:	2180      	movs	r1, #128	; 0x80
 800a518:	f7ff ff88 	bl	800a42c <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800a51c:	2800      	cmp	r0, #0
 800a51e:	d0ef      	beq.n	800a500 <SPI_EndRxTransaction+0x18>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800a520:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800a522:	f043 0320 	orr.w	r3, r3, #32
      return HAL_TIMEOUT;
 800a526:	2003      	movs	r0, #3
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800a528:	6563      	str	r3, [r4, #84]	; 0x54
}
 800a52a:	bd38      	pop	{r3, r4, r5, pc}
    __HAL_SPI_DISABLE(hspi);
 800a52c:	6805      	ldr	r5, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800a52e:	460a      	mov	r2, r1
    __HAL_SPI_DISABLE(hspi);
 800a530:	6829      	ldr	r1, [r5, #0]
 800a532:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800a536:	6029      	str	r1, [r5, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800a538:	2101      	movs	r1, #1
 800a53a:	f7ff ff77 	bl	800a42c <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800a53e:	2800      	cmp	r0, #0
 800a540:	d1ee      	bne.n	800a520 <SPI_EndRxTransaction+0x38>
  return HAL_OK;
 800a542:	2000      	movs	r0, #0
 800a544:	e7dd      	b.n	800a502 <SPI_EndRxTransaction+0x1a>
    __HAL_SPI_DISABLE(hspi);
 800a546:	6800      	ldr	r0, [r0, #0]
 800a548:	6802      	ldr	r2, [r0, #0]
 800a54a:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800a54e:	6002      	str	r2, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800a550:	460a      	mov	r2, r1
 800a552:	4620      	mov	r0, r4
 800a554:	2180      	movs	r1, #128	; 0x80
 800a556:	f7ff ff69 	bl	800a42c <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800a55a:	2800      	cmp	r0, #0
 800a55c:	d0d0      	beq.n	800a500 <SPI_EndRxTransaction+0x18>
 800a55e:	e7df      	b.n	800a520 <SPI_EndRxTransaction+0x38>

0800a560 <HAL_SPI_Init>:
  if (hspi == NULL)
 800a560:	2800      	cmp	r0, #0
 800a562:	d05c      	beq.n	800a61e <HAL_SPI_Init+0xbe>
{
 800a564:	b570      	push	{r4, r5, r6, lr}
 800a566:	4604      	mov	r4, r0
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 800a568:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800a56a:	2800      	cmp	r0, #0
 800a56c:	d047      	beq.n	800a5fe <HAL_SPI_Init+0x9e>
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 800a56e:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 800a570:	e9c4 3304 	strd	r3, r3, [r4, #16]
  if (hspi->State == HAL_SPI_STATE_RESET)
 800a574:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800a578:	2200      	movs	r2, #0
 800a57a:	62a2      	str	r2, [r4, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 800a57c:	f003 01ff 	and.w	r1, r3, #255	; 0xff
 800a580:	2b00      	cmp	r3, #0
 800a582:	d042      	beq.n	800a60a <HAL_SPI_Init+0xaa>
 800a584:	4694      	mov	ip, r2
  __HAL_SPI_DISABLE(hspi);
 800a586:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800a588:	68a5      	ldr	r5, [r4, #8]
 800a58a:	69a2      	ldr	r2, [r4, #24]
 800a58c:	6a26      	ldr	r6, [r4, #32]
  hspi->State = HAL_SPI_STATE_BUSY;
 800a58e:	2302      	movs	r3, #2
 800a590:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 800a594:	680b      	ldr	r3, [r1, #0]
 800a596:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800a59a:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800a59c:	6863      	ldr	r3, [r4, #4]
 800a59e:	f405 4504 	and.w	r5, r5, #33792	; 0x8400
 800a5a2:	f403 7382 	and.w	r3, r3, #260	; 0x104
 800a5a6:	432b      	orrs	r3, r5
 800a5a8:	68e5      	ldr	r5, [r4, #12]
 800a5aa:	f405 6500 	and.w	r5, r5, #2048	; 0x800
 800a5ae:	432b      	orrs	r3, r5
 800a5b0:	6925      	ldr	r5, [r4, #16]
 800a5b2:	f005 0502 	and.w	r5, r5, #2
 800a5b6:	432b      	orrs	r3, r5
 800a5b8:	6965      	ldr	r5, [r4, #20]
 800a5ba:	f005 0501 	and.w	r5, r5, #1
 800a5be:	432b      	orrs	r3, r5
 800a5c0:	69e5      	ldr	r5, [r4, #28]
 800a5c2:	f006 0e80 	and.w	lr, r6, #128	; 0x80
 800a5c6:	f402 7600 	and.w	r6, r2, #512	; 0x200
 800a5ca:	f005 0538 	and.w	r5, r5, #56	; 0x38
 800a5ce:	4333      	orrs	r3, r6
 800a5d0:	432b      	orrs	r3, r5
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800a5d2:	0c12      	lsrs	r2, r2, #16
 800a5d4:	f000 0010 	and.w	r0, r0, #16
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800a5d8:	ea43 030e 	orr.w	r3, r3, lr
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800a5dc:	f002 0204 	and.w	r2, r2, #4
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800a5e0:	ea43 030c 	orr.w	r3, r3, ip
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800a5e4:	4302      	orrs	r2, r0
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800a5e6:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800a5e8:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800a5ea:	69cb      	ldr	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800a5ec:	2000      	movs	r0, #0
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800a5ee:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  hspi->State     = HAL_SPI_STATE_READY;
 800a5f2:	2201      	movs	r2, #1
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800a5f4:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800a5f6:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 800a5f8:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
}
 800a5fc:	bd70      	pop	{r4, r5, r6, pc}
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 800a5fe:	6863      	ldr	r3, [r4, #4]
 800a600:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800a604:	d0b6      	beq.n	800a574 <HAL_SPI_Init+0x14>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800a606:	61e0      	str	r0, [r4, #28]
 800a608:	e7b4      	b.n	800a574 <HAL_SPI_Init+0x14>
    HAL_SPI_MspInit(hspi);
 800a60a:	4620      	mov	r0, r4
    hspi->Lock = HAL_UNLOCKED;
 800a60c:	f884 1050 	strb.w	r1, [r4, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 800a610:	f7f7 fc5e 	bl	8001ed0 <HAL_SPI_MspInit>
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800a614:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800a618:	f403 5c00 	and.w	ip, r3, #8192	; 0x2000
 800a61c:	e7b3      	b.n	800a586 <HAL_SPI_Init+0x26>
    return HAL_ERROR;
 800a61e:	2001      	movs	r0, #1
}
 800a620:	4770      	bx	lr
 800a622:	bf00      	nop

0800a624 <HAL_SPI_Transmit>:
{
 800a624:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a628:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800a62a:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800a62e:	2801      	cmp	r0, #1
{
 800a630:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800a632:	f000 8085 	beq.w	800a740 <HAL_SPI_Transmit+0x11c>
 800a636:	461d      	mov	r5, r3
 800a638:	2301      	movs	r3, #1
 800a63a:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800a63e:	4688      	mov	r8, r1
 800a640:	4617      	mov	r7, r2
 800a642:	f7fd f949 	bl	80078d8 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800a646:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 800a64a:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800a64c:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800a64e:	b2d8      	uxtb	r0, r3
 800a650:	d009      	beq.n	800a666 <HAL_SPI_Transmit+0x42>
    errorcode = HAL_BUSY;
 800a652:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800a654:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800a656:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800a658:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800a65c:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800a660:	b002      	add	sp, #8
 800a662:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800a666:	f1b8 0f00 	cmp.w	r8, #0
 800a66a:	d0f3      	beq.n	800a654 <HAL_SPI_Transmit+0x30>
 800a66c:	2f00      	cmp	r7, #0
 800a66e:	d0f1      	beq.n	800a654 <HAL_SPI_Transmit+0x30>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800a670:	68a2      	ldr	r2, [r4, #8]
    __HAL_SPI_DISABLE(hspi);
 800a672:	6820      	ldr	r0, [r4, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 800a674:	f8c4 8030 	str.w	r8, [r4, #48]	; 0x30
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800a678:	2300      	movs	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800a67a:	2103      	movs	r1, #3
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800a67c:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800a680:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->RxISR       = NULL;
 800a684:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800a688:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxXferSize  = Size;
 800a68a:	86a7      	strh	r7, [r4, #52]	; 0x34
  hspi->TxXferCount = Size;
 800a68c:	86e7      	strh	r7, [r4, #54]	; 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 800a68e:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferSize  = 0U;
 800a690:	87a3      	strh	r3, [r4, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 800a692:	87e3      	strh	r3, [r4, #62]	; 0x3e
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800a694:	f000 8085 	beq.w	800a7a2 <HAL_SPI_Transmit+0x17e>
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800a698:	6803      	ldr	r3, [r0, #0]
 800a69a:	065b      	lsls	r3, r3, #25
    __HAL_SPI_DISABLE(hspi);
 800a69c:	4602      	mov	r2, r0
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800a69e:	d403      	bmi.n	800a6a8 <HAL_SPI_Transmit+0x84>
    __HAL_SPI_ENABLE(hspi);
 800a6a0:	6803      	ldr	r3, [r0, #0]
 800a6a2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800a6a6:	6003      	str	r3, [r0, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800a6a8:	68e3      	ldr	r3, [r4, #12]
 800a6aa:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800a6ae:	d04b      	beq.n	800a748 <HAL_SPI_Transmit+0x124>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800a6b0:	6863      	ldr	r3, [r4, #4]
 800a6b2:	2b00      	cmp	r3, #0
 800a6b4:	f000 8097 	beq.w	800a7e6 <HAL_SPI_Transmit+0x1c2>
 800a6b8:	2f01      	cmp	r7, #1
 800a6ba:	f000 8094 	beq.w	800a7e6 <HAL_SPI_Transmit+0x1c2>
    while (hspi->TxXferCount > 0U)
 800a6be:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800a6c0:	b29b      	uxth	r3, r3
 800a6c2:	b1ab      	cbz	r3, 800a6f0 <HAL_SPI_Transmit+0xcc>
 800a6c4:	1c68      	adds	r0, r5, #1
 800a6c6:	f040 8083 	bne.w	800a7d0 <HAL_SPI_Transmit+0x1ac>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800a6ca:	6823      	ldr	r3, [r4, #0]
 800a6cc:	689a      	ldr	r2, [r3, #8]
 800a6ce:	0791      	lsls	r1, r2, #30
 800a6d0:	f140 8094 	bpl.w	800a7fc <HAL_SPI_Transmit+0x1d8>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800a6d4:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800a6d6:	7812      	ldrb	r2, [r2, #0]
 800a6d8:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800a6da:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800a6dc:	6b23      	ldr	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800a6de:	3901      	subs	r1, #1
 800a6e0:	b289      	uxth	r1, r1
 800a6e2:	86e1      	strh	r1, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800a6e4:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800a6e6:	3301      	adds	r3, #1
    while (hspi->TxXferCount > 0U)
 800a6e8:	b289      	uxth	r1, r1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800a6ea:	6323      	str	r3, [r4, #48]	; 0x30
    while (hspi->TxXferCount > 0U)
 800a6ec:	2900      	cmp	r1, #0
 800a6ee:	d1ec      	bne.n	800a6ca <HAL_SPI_Transmit+0xa6>
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800a6f0:	6861      	ldr	r1, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800a6f2:	4b5b      	ldr	r3, [pc, #364]	; (800a860 <HAL_SPI_Transmit+0x23c>)
 800a6f4:	4a5b      	ldr	r2, [pc, #364]	; (800a864 <HAL_SPI_Transmit+0x240>)
 800a6f6:	681b      	ldr	r3, [r3, #0]
 800a6f8:	fba2 2303 	umull	r2, r3, r2, r3
 800a6fc:	0d5b      	lsrs	r3, r3, #21
 800a6fe:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800a702:	fb02 f303 	mul.w	r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800a706:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800a70a:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800a70c:	d107      	bne.n	800a71e <HAL_SPI_Transmit+0xfa>
 800a70e:	e098      	b.n	800a842 <HAL_SPI_Transmit+0x21e>
    {
      if (count == 0U)
      {
        break;
      }
      count--;
 800a710:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800a712:	6822      	ldr	r2, [r4, #0]
      count--;
 800a714:	3b01      	subs	r3, #1
 800a716:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800a718:	6893      	ldr	r3, [r2, #8]
 800a71a:	061b      	lsls	r3, r3, #24
 800a71c:	d502      	bpl.n	800a724 <HAL_SPI_Transmit+0x100>
      if (count == 0U)
 800a71e:	9b01      	ldr	r3, [sp, #4]
 800a720:	2b00      	cmp	r3, #0
 800a722:	d1f5      	bne.n	800a710 <HAL_SPI_Transmit+0xec>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800a724:	68a3      	ldr	r3, [r4, #8]
 800a726:	b933      	cbnz	r3, 800a736 <HAL_SPI_Transmit+0x112>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800a728:	6822      	ldr	r2, [r4, #0]
 800a72a:	9300      	str	r3, [sp, #0]
 800a72c:	68d3      	ldr	r3, [r2, #12]
 800a72e:	9300      	str	r3, [sp, #0]
 800a730:	6893      	ldr	r3, [r2, #8]
 800a732:	9300      	str	r3, [sp, #0]
 800a734:	9b00      	ldr	r3, [sp, #0]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800a736:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800a738:	3800      	subs	r0, #0
 800a73a:	bf18      	it	ne
 800a73c:	2001      	movne	r0, #1
error:
 800a73e:	e789      	b.n	800a654 <HAL_SPI_Transmit+0x30>
  __HAL_LOCK(hspi);
 800a740:	2002      	movs	r0, #2
}
 800a742:	b002      	add	sp, #8
 800a744:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800a748:	6861      	ldr	r1, [r4, #4]
 800a74a:	2900      	cmp	r1, #0
 800a74c:	d176      	bne.n	800a83c <HAL_SPI_Transmit+0x218>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800a74e:	4643      	mov	r3, r8
 800a750:	f833 7b02 	ldrh.w	r7, [r3], #2
 800a754:	60c7      	str	r7, [r0, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800a756:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800a758:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800a75a:	3b01      	subs	r3, #1
 800a75c:	b29b      	uxth	r3, r3
 800a75e:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800a760:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800a762:	b29b      	uxth	r3, r3
 800a764:	2b00      	cmp	r3, #0
 800a766:	d0c4      	beq.n	800a6f2 <HAL_SPI_Transmit+0xce>
 800a768:	1c6b      	adds	r3, r5, #1
 800a76a:	d15e      	bne.n	800a82a <HAL_SPI_Transmit+0x206>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800a76c:	6883      	ldr	r3, [r0, #8]
 800a76e:	079f      	lsls	r7, r3, #30
 800a770:	d50f      	bpl.n	800a792 <HAL_SPI_Transmit+0x16e>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800a772:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800a774:	f832 3b02 	ldrh.w	r3, [r2], #2
 800a778:	60c3      	str	r3, [r0, #12]
        hspi->TxXferCount--;
 800a77a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800a77c:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800a77e:	3b01      	subs	r3, #1
 800a780:	b29b      	uxth	r3, r3
 800a782:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800a784:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800a786:	b29b      	uxth	r3, r3
 800a788:	2b00      	cmp	r3, #0
 800a78a:	d0b1      	beq.n	800a6f0 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800a78c:	6883      	ldr	r3, [r0, #8]
 800a78e:	079f      	lsls	r7, r3, #30
 800a790:	d4ef      	bmi.n	800a772 <HAL_SPI_Transmit+0x14e>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800a792:	f7fd f8a1 	bl	80078d8 <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800a796:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800a798:	b29b      	uxth	r3, r3
 800a79a:	2b00      	cmp	r3, #0
 800a79c:	d0a8      	beq.n	800a6f0 <HAL_SPI_Transmit+0xcc>
 800a79e:	6820      	ldr	r0, [r4, #0]
 800a7a0:	e7e4      	b.n	800a76c <HAL_SPI_Transmit+0x148>
    __HAL_SPI_DISABLE(hspi);
 800a7a2:	6803      	ldr	r3, [r0, #0]
 800a7a4:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800a7a8:	6003      	str	r3, [r0, #0]
    SPI_1LINE_TX(hspi);
 800a7aa:	6803      	ldr	r3, [r0, #0]
 800a7ac:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800a7b0:	6003      	str	r3, [r0, #0]
 800a7b2:	e771      	b.n	800a698 <HAL_SPI_Transmit+0x74>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800a7b4:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800a7b6:	7812      	ldrb	r2, [r2, #0]
 800a7b8:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800a7ba:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800a7bc:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800a7be:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800a7c0:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800a7c2:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800a7c4:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800a7c6:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800a7c8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800a7ca:	b29b      	uxth	r3, r3
 800a7cc:	2b00      	cmp	r3, #0
 800a7ce:	d08f      	beq.n	800a6f0 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800a7d0:	6823      	ldr	r3, [r4, #0]
 800a7d2:	689a      	ldr	r2, [r3, #8]
 800a7d4:	0792      	lsls	r2, r2, #30
 800a7d6:	d4ed      	bmi.n	800a7b4 <HAL_SPI_Transmit+0x190>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800a7d8:	f7fd f87e 	bl	80078d8 <HAL_GetTick>
 800a7dc:	1b80      	subs	r0, r0, r6
 800a7de:	42a8      	cmp	r0, r5
 800a7e0:	d3f2      	bcc.n	800a7c8 <HAL_SPI_Transmit+0x1a4>
          errorcode = HAL_TIMEOUT;
 800a7e2:	2003      	movs	r0, #3
 800a7e4:	e736      	b.n	800a654 <HAL_SPI_Transmit+0x30>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800a7e6:	f898 3000 	ldrb.w	r3, [r8]
 800a7ea:	7303      	strb	r3, [r0, #12]
      hspi->TxXferCount--;
 800a7ec:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800a7ee:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800a7f0:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800a7f2:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800a7f4:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800a7f6:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800a7f8:	86e3      	strh	r3, [r4, #54]	; 0x36
 800a7fa:	e760      	b.n	800a6be <HAL_SPI_Transmit+0x9a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800a7fc:	f7fd f86c 	bl	80078d8 <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800a800:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800a802:	b29b      	uxth	r3, r3
 800a804:	2b00      	cmp	r3, #0
 800a806:	f47f af60 	bne.w	800a6ca <HAL_SPI_Transmit+0xa6>
 800a80a:	e771      	b.n	800a6f0 <HAL_SPI_Transmit+0xcc>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800a80c:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800a80e:	f831 3b02 	ldrh.w	r3, [r1], #2
 800a812:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800a814:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800a816:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800a818:	3b01      	subs	r3, #1
 800a81a:	b29b      	uxth	r3, r3
 800a81c:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800a81e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800a820:	b29b      	uxth	r3, r3
 800a822:	2b00      	cmp	r3, #0
 800a824:	f43f af64 	beq.w	800a6f0 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800a828:	6822      	ldr	r2, [r4, #0]
 800a82a:	6893      	ldr	r3, [r2, #8]
 800a82c:	0799      	lsls	r1, r3, #30
 800a82e:	d4ed      	bmi.n	800a80c <HAL_SPI_Transmit+0x1e8>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800a830:	f7fd f852 	bl	80078d8 <HAL_GetTick>
 800a834:	1b80      	subs	r0, r0, r6
 800a836:	42a8      	cmp	r0, r5
 800a838:	d3f1      	bcc.n	800a81e <HAL_SPI_Transmit+0x1fa>
 800a83a:	e7d2      	b.n	800a7e2 <HAL_SPI_Transmit+0x1be>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800a83c:	2f01      	cmp	r7, #1
 800a83e:	d18f      	bne.n	800a760 <HAL_SPI_Transmit+0x13c>
 800a840:	e785      	b.n	800a74e <HAL_SPI_Transmit+0x12a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800a842:	4633      	mov	r3, r6
 800a844:	462a      	mov	r2, r5
 800a846:	2180      	movs	r1, #128	; 0x80
 800a848:	4620      	mov	r0, r4
 800a84a:	f7ff fdef 	bl	800a42c <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800a84e:	2800      	cmp	r0, #0
 800a850:	f43f af68 	beq.w	800a724 <HAL_SPI_Transmit+0x100>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800a854:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800a856:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800a858:	4313      	orrs	r3, r2
 800a85a:	6563      	str	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800a85c:	6562      	str	r2, [r4, #84]	; 0x54
 800a85e:	e761      	b.n	800a724 <HAL_SPI_Transmit+0x100>
 800a860:	20000078 	.word	0x20000078
 800a864:	165e9f81 	.word	0x165e9f81

0800a868 <HAL_SPI_TransmitReceive>:
{
 800a868:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a86c:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800a86e:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800a872:	2801      	cmp	r0, #1
{
 800a874:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800a876:	f000 80ac 	beq.w	800a9d2 <HAL_SPI_TransmitReceive+0x16a>
 800a87a:	461e      	mov	r6, r3
 800a87c:	2301      	movs	r3, #1
 800a87e:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800a882:	4690      	mov	r8, r2
 800a884:	460f      	mov	r7, r1
 800a886:	f7fd f827 	bl	80078d8 <HAL_GetTick>
 800a88a:	4605      	mov	r5, r0
  tmp_state           = hspi->State;
 800a88c:	f894 0051 	ldrb.w	r0, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 800a890:	6863      	ldr	r3, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800a892:	2801      	cmp	r0, #1
  tmp_state           = hspi->State;
 800a894:	b2c2      	uxtb	r2, r0
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800a896:	d011      	beq.n	800a8bc <HAL_SPI_TransmitReceive+0x54>
 800a898:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800a89c:	d009      	beq.n	800a8b2 <HAL_SPI_TransmitReceive+0x4a>
    errorcode = HAL_BUSY;
 800a89e:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800a8a0:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800a8a2:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800a8a4:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800a8a8:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800a8ac:	b002      	add	sp, #8
 800a8ae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 800a8b2:	68a1      	ldr	r1, [r4, #8]
 800a8b4:	2900      	cmp	r1, #0
 800a8b6:	d1f2      	bne.n	800a89e <HAL_SPI_TransmitReceive+0x36>
 800a8b8:	2a04      	cmp	r2, #4
 800a8ba:	d1f0      	bne.n	800a89e <HAL_SPI_TransmitReceive+0x36>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 800a8bc:	2f00      	cmp	r7, #0
 800a8be:	f000 808c 	beq.w	800a9da <HAL_SPI_TransmitReceive+0x172>
 800a8c2:	f1b8 0f00 	cmp.w	r8, #0
 800a8c6:	f000 8088 	beq.w	800a9da <HAL_SPI_TransmitReceive+0x172>
 800a8ca:	2e00      	cmp	r6, #0
 800a8cc:	f000 8085 	beq.w	800a9da <HAL_SPI_TransmitReceive+0x172>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800a8d0:	f894 2051 	ldrb.w	r2, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 800a8d4:	f8c4 8038 	str.w	r8, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800a8d8:	2a04      	cmp	r2, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 800a8da:	bf1c      	itt	ne
 800a8dc:	2205      	movne	r2, #5
 800a8de:	f884 2051 	strbne.w	r2, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800a8e2:	2200      	movs	r2, #0
 800a8e4:	6562      	str	r2, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 800a8e6:	e9c4 2210 	strd	r2, r2, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800a8ea:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferCount = Size;
 800a8ec:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 800a8ee:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800a8f0:	6811      	ldr	r1, [r2, #0]
  hspi->RxXferSize  = Size;
 800a8f2:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800a8f4:	0649      	lsls	r1, r1, #25
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 800a8f6:	6327      	str	r7, [r4, #48]	; 0x30
  hspi->TxXferSize  = Size;
 800a8f8:	86a6      	strh	r6, [r4, #52]	; 0x34
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800a8fa:	d403      	bmi.n	800a904 <HAL_SPI_TransmitReceive+0x9c>
    __HAL_SPI_ENABLE(hspi);
 800a8fc:	6811      	ldr	r1, [r2, #0]
 800a8fe:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800a902:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800a904:	68e1      	ldr	r1, [r4, #12]
 800a906:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 800a90a:	f000 809e 	beq.w	800aa4a <HAL_SPI_TransmitReceive+0x1e2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800a90e:	2b00      	cmp	r3, #0
 800a910:	f000 8091 	beq.w	800aa36 <HAL_SPI_TransmitReceive+0x1ce>
 800a914:	2e01      	cmp	r6, #1
 800a916:	f000 808e 	beq.w	800aa36 <HAL_SPI_TransmitReceive+0x1ce>
 800a91a:	9b08      	ldr	r3, [sp, #32]
 800a91c:	3301      	adds	r3, #1
        txallowed = 1U;
 800a91e:	f04f 0601 	mov.w	r6, #1
 800a922:	d028      	beq.n	800a976 <HAL_SPI_TransmitReceive+0x10e>
 800a924:	e05b      	b.n	800a9de <HAL_SPI_TransmitReceive+0x176>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800a926:	6821      	ldr	r1, [r4, #0]
 800a928:	688b      	ldr	r3, [r1, #8]
 800a92a:	0798      	lsls	r0, r3, #30
 800a92c:	d50f      	bpl.n	800a94e <HAL_SPI_TransmitReceive+0xe6>
 800a92e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800a930:	b29b      	uxth	r3, r3
 800a932:	b163      	cbz	r3, 800a94e <HAL_SPI_TransmitReceive+0xe6>
 800a934:	b15e      	cbz	r6, 800a94e <HAL_SPI_TransmitReceive+0xe6>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800a936:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800a938:	781b      	ldrb	r3, [r3, #0]
 800a93a:	730b      	strb	r3, [r1, #12]
        hspi->TxXferCount--;
 800a93c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800a93e:	6b22      	ldr	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800a940:	6821      	ldr	r1, [r4, #0]
        hspi->TxXferCount--;
 800a942:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800a944:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800a946:	b29b      	uxth	r3, r3
        txallowed = 0U;
 800a948:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800a94a:	86e3      	strh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800a94c:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800a94e:	688a      	ldr	r2, [r1, #8]
 800a950:	f012 0201 	ands.w	r2, r2, #1
 800a954:	d00d      	beq.n	800a972 <HAL_SPI_TransmitReceive+0x10a>
 800a956:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800a958:	b29b      	uxth	r3, r3
 800a95a:	b153      	cbz	r3, 800a972 <HAL_SPI_TransmitReceive+0x10a>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800a95c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800a95e:	68c9      	ldr	r1, [r1, #12]
 800a960:	7019      	strb	r1, [r3, #0]
        hspi->RxXferCount--;
 800a962:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800a964:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800a966:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr++;
 800a968:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800a96a:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr++;
 800a96c:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800a96e:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 800a970:	4616      	mov	r6, r2
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800a972:	f7fc ffb1 	bl	80078d8 <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800a976:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800a978:	b292      	uxth	r2, r2
 800a97a:	2a00      	cmp	r2, #0
 800a97c:	d1d3      	bne.n	800a926 <HAL_SPI_TransmitReceive+0xbe>
 800a97e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800a980:	b29b      	uxth	r3, r3
 800a982:	2b00      	cmp	r3, #0
 800a984:	d1cf      	bne.n	800a926 <HAL_SPI_TransmitReceive+0xbe>
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800a986:	4b79      	ldr	r3, [pc, #484]	; (800ab6c <HAL_SPI_TransmitReceive+0x304>)
 800a988:	4a79      	ldr	r2, [pc, #484]	; (800ab70 <HAL_SPI_TransmitReceive+0x308>)
 800a98a:	681b      	ldr	r3, [r3, #0]
 800a98c:	fba2 2303 	umull	r2, r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800a990:	6862      	ldr	r2, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800a992:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800a996:	0d5b      	lsrs	r3, r3, #21
 800a998:	fb01 f303 	mul.w	r3, r1, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800a99c:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800a9a0:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800a9a2:	d107      	bne.n	800a9b4 <HAL_SPI_TransmitReceive+0x14c>
 800a9a4:	e0d2      	b.n	800ab4c <HAL_SPI_TransmitReceive+0x2e4>
      count--;
 800a9a6:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800a9a8:	6822      	ldr	r2, [r4, #0]
      count--;
 800a9aa:	3b01      	subs	r3, #1
 800a9ac:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800a9ae:	6893      	ldr	r3, [r2, #8]
 800a9b0:	061b      	lsls	r3, r3, #24
 800a9b2:	d502      	bpl.n	800a9ba <HAL_SPI_TransmitReceive+0x152>
      if (count == 0U)
 800a9b4:	9b01      	ldr	r3, [sp, #4]
 800a9b6:	2b00      	cmp	r3, #0
 800a9b8:	d1f5      	bne.n	800a9a6 <HAL_SPI_TransmitReceive+0x13e>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800a9ba:	68a0      	ldr	r0, [r4, #8]
 800a9bc:	2800      	cmp	r0, #0
 800a9be:	f040 8082 	bne.w	800aac6 <HAL_SPI_TransmitReceive+0x25e>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800a9c2:	6823      	ldr	r3, [r4, #0]
 800a9c4:	9000      	str	r0, [sp, #0]
 800a9c6:	68da      	ldr	r2, [r3, #12]
 800a9c8:	9200      	str	r2, [sp, #0]
 800a9ca:	689b      	ldr	r3, [r3, #8]
 800a9cc:	9300      	str	r3, [sp, #0]
 800a9ce:	9b00      	ldr	r3, [sp, #0]
 800a9d0:	e766      	b.n	800a8a0 <HAL_SPI_TransmitReceive+0x38>
  __HAL_LOCK(hspi);
 800a9d2:	2002      	movs	r0, #2
}
 800a9d4:	b002      	add	sp, #8
 800a9d6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    errorcode = HAL_ERROR;
 800a9da:	2001      	movs	r0, #1
 800a9dc:	e760      	b.n	800a8a0 <HAL_SPI_TransmitReceive+0x38>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800a9de:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800a9e0:	b29b      	uxth	r3, r3
 800a9e2:	b91b      	cbnz	r3, 800a9ec <HAL_SPI_TransmitReceive+0x184>
 800a9e4:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800a9e6:	b29b      	uxth	r3, r3
 800a9e8:	2b00      	cmp	r3, #0
 800a9ea:	d0cc      	beq.n	800a986 <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800a9ec:	6822      	ldr	r2, [r4, #0]
 800a9ee:	6893      	ldr	r3, [r2, #8]
 800a9f0:	0799      	lsls	r1, r3, #30
 800a9f2:	d50f      	bpl.n	800aa14 <HAL_SPI_TransmitReceive+0x1ac>
 800a9f4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800a9f6:	b29b      	uxth	r3, r3
 800a9f8:	b163      	cbz	r3, 800aa14 <HAL_SPI_TransmitReceive+0x1ac>
 800a9fa:	b15e      	cbz	r6, 800aa14 <HAL_SPI_TransmitReceive+0x1ac>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800a9fc:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800a9fe:	781b      	ldrb	r3, [r3, #0]
 800aa00:	7313      	strb	r3, [r2, #12]
        hspi->TxXferCount--;
 800aa02:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800aa04:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800aa06:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800aa08:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800aa0a:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr++;
 800aa0c:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800aa0e:	6822      	ldr	r2, [r4, #0]
        hspi->TxXferCount--;
 800aa10:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800aa12:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800aa14:	6893      	ldr	r3, [r2, #8]
 800aa16:	f013 0301 	ands.w	r3, r3, #1
 800aa1a:	d004      	beq.n	800aa26 <HAL_SPI_TransmitReceive+0x1be>
 800aa1c:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800aa1e:	b289      	uxth	r1, r1
 800aa20:	2900      	cmp	r1, #0
 800aa22:	f040 8087 	bne.w	800ab34 <HAL_SPI_TransmitReceive+0x2cc>
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800aa26:	f7fc ff57 	bl	80078d8 <HAL_GetTick>
 800aa2a:	9b08      	ldr	r3, [sp, #32]
 800aa2c:	1b40      	subs	r0, r0, r5
 800aa2e:	4298      	cmp	r0, r3
 800aa30:	d3d5      	bcc.n	800a9de <HAL_SPI_TransmitReceive+0x176>
        errorcode = HAL_TIMEOUT;
 800aa32:	2003      	movs	r0, #3
 800aa34:	e734      	b.n	800a8a0 <HAL_SPI_TransmitReceive+0x38>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800aa36:	783b      	ldrb	r3, [r7, #0]
 800aa38:	7313      	strb	r3, [r2, #12]
      hspi->TxXferCount--;
 800aa3a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800aa3c:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800aa3e:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800aa40:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800aa42:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800aa44:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800aa46:	86e3      	strh	r3, [r4, #54]	; 0x36
 800aa48:	e767      	b.n	800a91a <HAL_SPI_TransmitReceive+0xb2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800aa4a:	2b00      	cmp	r3, #0
 800aa4c:	d13d      	bne.n	800aaca <HAL_SPI_TransmitReceive+0x262>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800aa4e:	f837 3b02 	ldrh.w	r3, [r7], #2
 800aa52:	60d3      	str	r3, [r2, #12]
      hspi->TxXferCount--;
 800aa54:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800aa56:	6327      	str	r7, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800aa58:	3b01      	subs	r3, #1
 800aa5a:	b29b      	uxth	r3, r3
 800aa5c:	86e3      	strh	r3, [r4, #54]	; 0x36
 800aa5e:	9b08      	ldr	r3, [sp, #32]
 800aa60:	3301      	adds	r3, #1
{
 800aa62:	f04f 0601 	mov.w	r6, #1
 800aa66:	d025      	beq.n	800aab4 <HAL_SPI_TransmitReceive+0x24c>
 800aa68:	e032      	b.n	800aad0 <HAL_SPI_TransmitReceive+0x268>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800aa6a:	6823      	ldr	r3, [r4, #0]
 800aa6c:	689a      	ldr	r2, [r3, #8]
 800aa6e:	0792      	lsls	r2, r2, #30
 800aa70:	d50d      	bpl.n	800aa8e <HAL_SPI_TransmitReceive+0x226>
 800aa72:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800aa74:	b292      	uxth	r2, r2
 800aa76:	b152      	cbz	r2, 800aa8e <HAL_SPI_TransmitReceive+0x226>
 800aa78:	b14e      	cbz	r6, 800aa8e <HAL_SPI_TransmitReceive+0x226>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800aa7a:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800aa7c:	f831 2b02 	ldrh.w	r2, [r1], #2
 800aa80:	60da      	str	r2, [r3, #12]
        hspi->TxXferCount--;
 800aa82:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800aa84:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800aa86:	3a01      	subs	r2, #1
 800aa88:	b292      	uxth	r2, r2
        txallowed = 0U;
 800aa8a:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800aa8c:	86e2      	strh	r2, [r4, #54]	; 0x36
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800aa8e:	689a      	ldr	r2, [r3, #8]
 800aa90:	f012 0201 	ands.w	r2, r2, #1
 800aa94:	d00c      	beq.n	800aab0 <HAL_SPI_TransmitReceive+0x248>
 800aa96:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800aa98:	b289      	uxth	r1, r1
 800aa9a:	b149      	cbz	r1, 800aab0 <HAL_SPI_TransmitReceive+0x248>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800aa9c:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800aa9e:	68db      	ldr	r3, [r3, #12]
 800aaa0:	f821 3b02 	strh.w	r3, [r1], #2
        hspi->RxXferCount--;
 800aaa4:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800aaa6:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800aaa8:	3b01      	subs	r3, #1
 800aaaa:	b29b      	uxth	r3, r3
        txallowed = 1U;
 800aaac:	4616      	mov	r6, r2
        hspi->RxXferCount--;
 800aaae:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800aab0:	f7fc ff12 	bl	80078d8 <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800aab4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800aab6:	b29b      	uxth	r3, r3
 800aab8:	2b00      	cmp	r3, #0
 800aaba:	d1d6      	bne.n	800aa6a <HAL_SPI_TransmitReceive+0x202>
 800aabc:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800aabe:	b29b      	uxth	r3, r3
 800aac0:	2b00      	cmp	r3, #0
 800aac2:	d1d2      	bne.n	800aa6a <HAL_SPI_TransmitReceive+0x202>
 800aac4:	e75f      	b.n	800a986 <HAL_SPI_TransmitReceive+0x11e>
  HAL_StatusTypeDef    errorcode = HAL_OK;
 800aac6:	2000      	movs	r0, #0
 800aac8:	e6ea      	b.n	800a8a0 <HAL_SPI_TransmitReceive+0x38>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800aaca:	2e01      	cmp	r6, #1
 800aacc:	d1c7      	bne.n	800aa5e <HAL_SPI_TransmitReceive+0x1f6>
 800aace:	e7be      	b.n	800aa4e <HAL_SPI_TransmitReceive+0x1e6>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800aad0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800aad2:	b29b      	uxth	r3, r3
 800aad4:	b923      	cbnz	r3, 800aae0 <HAL_SPI_TransmitReceive+0x278>
 800aad6:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800aad8:	b29b      	uxth	r3, r3
 800aada:	2b00      	cmp	r3, #0
 800aadc:	f43f af53 	beq.w	800a986 <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800aae0:	6822      	ldr	r2, [r4, #0]
 800aae2:	6893      	ldr	r3, [r2, #8]
 800aae4:	079f      	lsls	r7, r3, #30
 800aae6:	d50d      	bpl.n	800ab04 <HAL_SPI_TransmitReceive+0x29c>
 800aae8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800aaea:	b29b      	uxth	r3, r3
 800aaec:	b153      	cbz	r3, 800ab04 <HAL_SPI_TransmitReceive+0x29c>
 800aaee:	b14e      	cbz	r6, 800ab04 <HAL_SPI_TransmitReceive+0x29c>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800aaf0:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800aaf2:	f831 3b02 	ldrh.w	r3, [r1], #2
 800aaf6:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800aaf8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800aafa:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800aafc:	3b01      	subs	r3, #1
 800aafe:	b29b      	uxth	r3, r3
 800ab00:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800ab02:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800ab04:	6893      	ldr	r3, [r2, #8]
 800ab06:	f013 0301 	ands.w	r3, r3, #1
 800ab0a:	d00c      	beq.n	800ab26 <HAL_SPI_TransmitReceive+0x2be>
 800ab0c:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800ab0e:	b289      	uxth	r1, r1
 800ab10:	b149      	cbz	r1, 800ab26 <HAL_SPI_TransmitReceive+0x2be>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800ab12:	68d1      	ldr	r1, [r2, #12]
 800ab14:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800ab16:	f822 1b02 	strh.w	r1, [r2], #2
        txallowed = 1U;
 800ab1a:	461e      	mov	r6, r3
        hspi->RxXferCount--;
 800ab1c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800ab1e:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800ab20:	3b01      	subs	r3, #1
 800ab22:	b29b      	uxth	r3, r3
 800ab24:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800ab26:	f7fc fed7 	bl	80078d8 <HAL_GetTick>
 800ab2a:	9b08      	ldr	r3, [sp, #32]
 800ab2c:	1b40      	subs	r0, r0, r5
 800ab2e:	4298      	cmp	r0, r3
 800ab30:	d3ce      	bcc.n	800aad0 <HAL_SPI_TransmitReceive+0x268>
 800ab32:	e77e      	b.n	800aa32 <HAL_SPI_TransmitReceive+0x1ca>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800ab34:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800ab36:	68d2      	ldr	r2, [r2, #12]
 800ab38:	700a      	strb	r2, [r1, #0]
        hspi->RxXferCount--;
 800ab3a:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800ab3c:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800ab3e:	3a01      	subs	r2, #1
        hspi->pRxBuffPtr++;
 800ab40:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800ab42:	b292      	uxth	r2, r2
        hspi->pRxBuffPtr++;
 800ab44:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800ab46:	87e2      	strh	r2, [r4, #62]	; 0x3e
        txallowed = 1U;
 800ab48:	461e      	mov	r6, r3
 800ab4a:	e76c      	b.n	800aa26 <HAL_SPI_TransmitReceive+0x1be>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800ab4c:	9a08      	ldr	r2, [sp, #32]
 800ab4e:	462b      	mov	r3, r5
 800ab50:	2180      	movs	r1, #128	; 0x80
 800ab52:	4620      	mov	r0, r4
 800ab54:	f7ff fc6a 	bl	800a42c <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800ab58:	2800      	cmp	r0, #0
 800ab5a:	f43f af2e 	beq.w	800a9ba <HAL_SPI_TransmitReceive+0x152>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800ab5e:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800ab60:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800ab62:	4313      	orrs	r3, r2
 800ab64:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 800ab66:	2001      	movs	r0, #1
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800ab68:	6562      	str	r2, [r4, #84]	; 0x54
    goto error;
 800ab6a:	e699      	b.n	800a8a0 <HAL_SPI_TransmitReceive+0x38>
 800ab6c:	20000078 	.word	0x20000078
 800ab70:	165e9f81 	.word	0x165e9f81

0800ab74 <HAL_SPI_Receive>:
{
 800ab74:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800ab78:	6846      	ldr	r6, [r0, #4]
 800ab7a:	f5b6 7f82 	cmp.w	r6, #260	; 0x104
{
 800ab7e:	b082      	sub	sp, #8
 800ab80:	4604      	mov	r4, r0
 800ab82:	4690      	mov	r8, r2
 800ab84:	461d      	mov	r5, r3
 800ab86:	460f      	mov	r7, r1
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800ab88:	d06e      	beq.n	800ac68 <HAL_SPI_Receive+0xf4>
  __HAL_LOCK(hspi);
 800ab8a:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 800ab8e:	2b01      	cmp	r3, #1
 800ab90:	d076      	beq.n	800ac80 <HAL_SPI_Receive+0x10c>
 800ab92:	2301      	movs	r3, #1
 800ab94:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800ab98:	f7fc fe9e 	bl	80078d8 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800ab9c:	f894 c051 	ldrb.w	ip, [r4, #81]	; 0x51
 800aba0:	f1bc 0f01 	cmp.w	ip, #1
  tickstart = HAL_GetTick();
 800aba4:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800aba6:	fa5f f08c 	uxtb.w	r0, ip
 800abaa:	d009      	beq.n	800abc0 <HAL_SPI_Receive+0x4c>
    errorcode = HAL_BUSY;
 800abac:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800abae:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800abb0:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800abb2:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800abb6:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800abba:	b002      	add	sp, #8
 800abbc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800abc0:	2f00      	cmp	r7, #0
 800abc2:	d0f4      	beq.n	800abae <HAL_SPI_Receive+0x3a>
 800abc4:	f1b8 0f00 	cmp.w	r8, #0
 800abc8:	d0f1      	beq.n	800abae <HAL_SPI_Receive+0x3a>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800abca:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 800abcc:	63a7      	str	r7, [r4, #56]	; 0x38
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800abce:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
    __HAL_SPI_DISABLE(hspi);
 800abd2:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferSize  = Size;
 800abd4:	f8a4 803c 	strh.w	r8, [r4, #60]	; 0x3c
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800abd8:	f04f 0300 	mov.w	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 800abdc:	f04f 0104 	mov.w	r1, #4
 800abe0:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->TxISR       = NULL;
 800abe4:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800abe8:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 800abea:	6323      	str	r3, [r4, #48]	; 0x30
  hspi->TxXferSize  = 0U;
 800abec:	86a3      	strh	r3, [r4, #52]	; 0x34
  hspi->RxXferCount = Size;
 800abee:	f8a4 803e 	strh.w	r8, [r4, #62]	; 0x3e
  hspi->TxXferCount = 0U;
 800abf2:	86e3      	strh	r3, [r4, #54]	; 0x36
    __HAL_SPI_DISABLE(hspi);
 800abf4:	4613      	mov	r3, r2
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800abf6:	d107      	bne.n	800ac08 <HAL_SPI_Receive+0x94>
    __HAL_SPI_DISABLE(hspi);
 800abf8:	6811      	ldr	r1, [r2, #0]
 800abfa:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800abfe:	6011      	str	r1, [r2, #0]
    SPI_1LINE_RX(hspi);
 800ac00:	6811      	ldr	r1, [r2, #0]
 800ac02:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
 800ac06:	6011      	str	r1, [r2, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800ac08:	6811      	ldr	r1, [r2, #0]
 800ac0a:	0648      	lsls	r0, r1, #25
 800ac0c:	d403      	bmi.n	800ac16 <HAL_SPI_Receive+0xa2>
    __HAL_SPI_ENABLE(hspi);
 800ac0e:	6811      	ldr	r1, [r2, #0]
 800ac10:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800ac14:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 800ac16:	68e1      	ldr	r1, [r4, #12]
 800ac18:	2900      	cmp	r1, #0
 800ac1a:	d054      	beq.n	800acc6 <HAL_SPI_Receive+0x152>
    while (hspi->RxXferCount > 0U)
 800ac1c:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800ac1e:	b289      	uxth	r1, r1
 800ac20:	b1a9      	cbz	r1, 800ac4e <HAL_SPI_Receive+0xda>
 800ac22:	1c69      	adds	r1, r5, #1
 800ac24:	d13e      	bne.n	800aca4 <HAL_SPI_Receive+0x130>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800ac26:	6893      	ldr	r3, [r2, #8]
 800ac28:	07db      	lsls	r3, r3, #31
 800ac2a:	d544      	bpl.n	800acb6 <HAL_SPI_Receive+0x142>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800ac2c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800ac2e:	68d1      	ldr	r1, [r2, #12]
 800ac30:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->RxXferCount--;
 800ac34:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800ac38:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800ac3a:	f10c 3cff 	add.w	ip, ip, #4294967295
 800ac3e:	fa1f fc8c 	uxth.w	ip, ip
 800ac42:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800ac46:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800ac48:	b29b      	uxth	r3, r3
 800ac4a:	2b00      	cmp	r3, #0
 800ac4c:	d1eb      	bne.n	800ac26 <HAL_SPI_Receive+0xb2>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800ac4e:	4632      	mov	r2, r6
 800ac50:	4629      	mov	r1, r5
 800ac52:	4620      	mov	r0, r4
 800ac54:	f7ff fc48 	bl	800a4e8 <SPI_EndRxTransaction>
 800ac58:	b108      	cbz	r0, 800ac5e <HAL_SPI_Receive+0xea>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800ac5a:	2320      	movs	r3, #32
 800ac5c:	6563      	str	r3, [r4, #84]	; 0x54
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800ac5e:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800ac60:	3800      	subs	r0, #0
 800ac62:	bf18      	it	ne
 800ac64:	2001      	movne	r0, #1
error :
 800ac66:	e7a2      	b.n	800abae <HAL_SPI_Receive+0x3a>
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800ac68:	6883      	ldr	r3, [r0, #8]
 800ac6a:	2b00      	cmp	r3, #0
 800ac6c:	d18d      	bne.n	800ab8a <HAL_SPI_Receive+0x16>
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800ac6e:	9500      	str	r5, [sp, #0]
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800ac70:	2504      	movs	r5, #4
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800ac72:	4613      	mov	r3, r2
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800ac74:	f880 5051 	strb.w	r5, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800ac78:	460a      	mov	r2, r1
 800ac7a:	f7ff fdf5 	bl	800a868 <HAL_SPI_TransmitReceive>
 800ac7e:	e79c      	b.n	800abba <HAL_SPI_Receive+0x46>
  __HAL_LOCK(hspi);
 800ac80:	2002      	movs	r0, #2
}
 800ac82:	b002      	add	sp, #8
 800ac84:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800ac88:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800ac8a:	68db      	ldr	r3, [r3, #12]
 800ac8c:	f822 3b02 	strh.w	r3, [r2], #2
        hspi->RxXferCount--;
 800ac90:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800ac92:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800ac94:	3b01      	subs	r3, #1
 800ac96:	b29b      	uxth	r3, r3
 800ac98:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800ac9a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800ac9c:	b29b      	uxth	r3, r3
 800ac9e:	2b00      	cmp	r3, #0
 800aca0:	d0d5      	beq.n	800ac4e <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800aca2:	6823      	ldr	r3, [r4, #0]
 800aca4:	689a      	ldr	r2, [r3, #8]
 800aca6:	07d2      	lsls	r2, r2, #31
 800aca8:	d4ee      	bmi.n	800ac88 <HAL_SPI_Receive+0x114>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800acaa:	f7fc fe15 	bl	80078d8 <HAL_GetTick>
 800acae:	1b80      	subs	r0, r0, r6
 800acb0:	42a8      	cmp	r0, r5
 800acb2:	d243      	bcs.n	800ad3c <HAL_SPI_Receive+0x1c8>
 800acb4:	e7f1      	b.n	800ac9a <HAL_SPI_Receive+0x126>
 800acb6:	f7fc fe0f 	bl	80078d8 <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800acba:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800acbc:	b29b      	uxth	r3, r3
 800acbe:	2b00      	cmp	r3, #0
 800acc0:	d0c5      	beq.n	800ac4e <HAL_SPI_Receive+0xda>
 800acc2:	6822      	ldr	r2, [r4, #0]
 800acc4:	e7af      	b.n	800ac26 <HAL_SPI_Receive+0xb2>
    while (hspi->RxXferCount > 0U)
 800acc6:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 800acc8:	b292      	uxth	r2, r2
 800acca:	2a00      	cmp	r2, #0
 800accc:	d0bf      	beq.n	800ac4e <HAL_SPI_Receive+0xda>
 800acce:	1c6f      	adds	r7, r5, #1
 800acd0:	d013      	beq.n	800acfa <HAL_SPI_Receive+0x186>
 800acd2:	e02b      	b.n	800ad2c <HAL_SPI_Receive+0x1b8>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800acd4:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800acd6:	7b1b      	ldrb	r3, [r3, #12]
 800acd8:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800acda:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800acde:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800ace0:	f10c 3cff 	add.w	ip, ip, #4294967295
 800ace4:	fa1f fc8c 	uxth.w	ip, ip
 800ace8:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800acec:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800acee:	3201      	adds	r2, #1
    while (hspi->RxXferCount > 0U)
 800acf0:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800acf2:	63a2      	str	r2, [r4, #56]	; 0x38
    while (hspi->RxXferCount > 0U)
 800acf4:	2b00      	cmp	r3, #0
 800acf6:	d0aa      	beq.n	800ac4e <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800acf8:	6823      	ldr	r3, [r4, #0]
 800acfa:	689a      	ldr	r2, [r3, #8]
 800acfc:	07d0      	lsls	r0, r2, #31
 800acfe:	d4e9      	bmi.n	800acd4 <HAL_SPI_Receive+0x160>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800ad00:	f7fc fdea 	bl	80078d8 <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800ad04:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800ad06:	b29b      	uxth	r3, r3
 800ad08:	2b00      	cmp	r3, #0
 800ad0a:	d1f5      	bne.n	800acf8 <HAL_SPI_Receive+0x184>
 800ad0c:	e79f      	b.n	800ac4e <HAL_SPI_Receive+0xda>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800ad0e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800ad10:	7b1b      	ldrb	r3, [r3, #12]
 800ad12:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800ad14:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800ad16:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800ad18:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800ad1a:	3201      	adds	r2, #1
        hspi->RxXferCount--;
 800ad1c:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800ad1e:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800ad20:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800ad22:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800ad24:	b29b      	uxth	r3, r3
 800ad26:	2b00      	cmp	r3, #0
 800ad28:	d091      	beq.n	800ac4e <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800ad2a:	6823      	ldr	r3, [r4, #0]
 800ad2c:	689a      	ldr	r2, [r3, #8]
 800ad2e:	07d1      	lsls	r1, r2, #31
 800ad30:	d4ed      	bmi.n	800ad0e <HAL_SPI_Receive+0x19a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800ad32:	f7fc fdd1 	bl	80078d8 <HAL_GetTick>
 800ad36:	1b80      	subs	r0, r0, r6
 800ad38:	42a8      	cmp	r0, r5
 800ad3a:	d3f2      	bcc.n	800ad22 <HAL_SPI_Receive+0x1ae>
          errorcode = HAL_TIMEOUT;
 800ad3c:	2003      	movs	r0, #3
 800ad3e:	e736      	b.n	800abae <HAL_SPI_Receive+0x3a>

0800ad40 <HAL_TIM_Base_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
  /* Check the TIM handle allocation */
  if (htim == NULL)
 800ad40:	2800      	cmp	r0, #0
 800ad42:	f000 8087 	beq.w	800ae54 <HAL_TIM_Base_Init+0x114>
{
 800ad46:	b510      	push	{r4, lr}
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 800ad48:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800ad4c:	4604      	mov	r4, r0
 800ad4e:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800ad52:	2b00      	cmp	r3, #0
 800ad54:	d079      	beq.n	800ae4a <HAL_TIM_Base_Init+0x10a>

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800ad56:	6822      	ldr	r2, [r4, #0]
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800ad58:	493f      	ldr	r1, [pc, #252]	; (800ae58 <HAL_TIM_Base_Init+0x118>)
  htim->State = HAL_TIM_STATE_BUSY;
 800ad5a:	2302      	movs	r3, #2
 800ad5c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800ad60:	428a      	cmp	r2, r1
  tmpcr1 = TIMx->CR1;
 800ad62:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800ad64:	d05d      	beq.n	800ae22 <HAL_TIM_Base_Init+0xe2>
 800ad66:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 800ad6a:	d031      	beq.n	800add0 <HAL_TIM_Base_Init+0x90>
 800ad6c:	f5a1 417c 	sub.w	r1, r1, #64512	; 0xfc00
 800ad70:	428a      	cmp	r2, r1
 800ad72:	d02d      	beq.n	800add0 <HAL_TIM_Base_Init+0x90>
 800ad74:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800ad78:	428a      	cmp	r2, r1
 800ad7a:	d029      	beq.n	800add0 <HAL_TIM_Base_Init+0x90>
 800ad7c:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800ad80:	428a      	cmp	r2, r1
 800ad82:	d025      	beq.n	800add0 <HAL_TIM_Base_Init+0x90>
 800ad84:	f501 4178 	add.w	r1, r1, #63488	; 0xf800
 800ad88:	428a      	cmp	r2, r1
 800ad8a:	d04a      	beq.n	800ae22 <HAL_TIM_Base_Init+0xe2>
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800ad8c:	f501 5170 	add.w	r1, r1, #15360	; 0x3c00
 800ad90:	428a      	cmp	r2, r1
 800ad92:	d021      	beq.n	800add8 <HAL_TIM_Base_Init+0x98>
 800ad94:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800ad98:	428a      	cmp	r2, r1
 800ad9a:	d01d      	beq.n	800add8 <HAL_TIM_Base_Init+0x98>
 800ad9c:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800ada0:	428a      	cmp	r2, r1
 800ada2:	d019      	beq.n	800add8 <HAL_TIM_Base_Init+0x98>
 800ada4:	f5a1 3198 	sub.w	r1, r1, #77824	; 0x13000
 800ada8:	428a      	cmp	r2, r1
 800adaa:	d015      	beq.n	800add8 <HAL_TIM_Base_Init+0x98>
 800adac:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800adb0:	428a      	cmp	r2, r1
 800adb2:	d011      	beq.n	800add8 <HAL_TIM_Base_Init+0x98>
 800adb4:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800adb8:	428a      	cmp	r2, r1
 800adba:	d00d      	beq.n	800add8 <HAL_TIM_Base_Init+0x98>
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800adbc:	69a0      	ldr	r0, [r4, #24]

  TIMx->CR1 = tmpcr1;

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800adbe:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800adc0:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800adc4:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
 800adc6:	6013      	str	r3, [r2, #0]

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800adc8:	6863      	ldr	r3, [r4, #4]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800adca:	62d1      	str	r1, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800adcc:	6293      	str	r3, [r2, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800adce:	e010      	b.n	800adf2 <HAL_TIM_Base_Init+0xb2>
    tmpcr1 |= Structure->CounterMode;
 800add0:	68a1      	ldr	r1, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800add2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800add6:	430b      	orrs	r3, r1
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800add8:	6920      	ldr	r0, [r4, #16]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800adda:	69a1      	ldr	r1, [r4, #24]
    tmpcr1 &= ~TIM_CR1_CKD;
 800addc:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800ade0:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800ade2:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  TIMx->ARR = (uint32_t)Structure->Period ;
 800ade6:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800ade8:	430b      	orrs	r3, r1
  TIMx->PSC = Structure->Prescaler;
 800adea:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
 800adec:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800adee:	62d0      	str	r0, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800adf0:	6291      	str	r1, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800adf2:	2301      	movs	r3, #1
 800adf4:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800adf6:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800adfa:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800adfe:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800ae02:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800ae06:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800ae0a:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800ae0e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800ae12:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800ae16:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 800ae1a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 800ae1e:	2000      	movs	r0, #0
}
 800ae20:	bd10      	pop	{r4, pc}
    tmpcr1 |= Structure->CounterMode;
 800ae22:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800ae24:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800ae26:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800ae2a:	4303      	orrs	r3, r0
    tmpcr1 &= ~TIM_CR1_CKD;
 800ae2c:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800ae30:	430b      	orrs	r3, r1
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800ae32:	69a1      	ldr	r1, [r4, #24]
 800ae34:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800ae38:	430b      	orrs	r3, r1
  TIMx->CR1 = tmpcr1;
 800ae3a:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800ae3c:	68e3      	ldr	r3, [r4, #12]
 800ae3e:	62d3      	str	r3, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800ae40:	6863      	ldr	r3, [r4, #4]
 800ae42:	6293      	str	r3, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
 800ae44:	6963      	ldr	r3, [r4, #20]
 800ae46:	6313      	str	r3, [r2, #48]	; 0x30
 800ae48:	e7d3      	b.n	800adf2 <HAL_TIM_Base_Init+0xb2>
    htim->Lock = HAL_UNLOCKED;
 800ae4a:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 800ae4e:	f7f7 f87b 	bl	8001f48 <HAL_TIM_Base_MspInit>
 800ae52:	e780      	b.n	800ad56 <HAL_TIM_Base_Init+0x16>
    return HAL_ERROR;
 800ae54:	2001      	movs	r0, #1
}
 800ae56:	4770      	bx	lr
 800ae58:	40010000 	.word	0x40010000

0800ae5c <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
 800ae5c:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800ae60:	2b01      	cmp	r3, #1
 800ae62:	d12f      	bne.n	800aec4 <HAL_TIM_Base_Start_IT+0x68>
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800ae64:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800ae66:	4919      	ldr	r1, [pc, #100]	; (800aecc <HAL_TIM_Base_Start_IT+0x70>)
  htim->State = HAL_TIM_STATE_BUSY;
 800ae68:	2202      	movs	r2, #2
 800ae6a:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800ae6e:	68da      	ldr	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800ae70:	428b      	cmp	r3, r1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800ae72:	f042 0201 	orr.w	r2, r2, #1
 800ae76:	60da      	str	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800ae78:	d019      	beq.n	800aeae <HAL_TIM_Base_Start_IT+0x52>
 800ae7a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800ae7e:	d016      	beq.n	800aeae <HAL_TIM_Base_Start_IT+0x52>
 800ae80:	4a13      	ldr	r2, [pc, #76]	; (800aed0 <HAL_TIM_Base_Start_IT+0x74>)
 800ae82:	4293      	cmp	r3, r2
 800ae84:	d013      	beq.n	800aeae <HAL_TIM_Base_Start_IT+0x52>
 800ae86:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800ae8a:	4293      	cmp	r3, r2
 800ae8c:	d00f      	beq.n	800aeae <HAL_TIM_Base_Start_IT+0x52>
 800ae8e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800ae92:	4293      	cmp	r3, r2
 800ae94:	d00b      	beq.n	800aeae <HAL_TIM_Base_Start_IT+0x52>
 800ae96:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800ae9a:	4293      	cmp	r3, r2
 800ae9c:	d007      	beq.n	800aeae <HAL_TIM_Base_Start_IT+0x52>
 800ae9e:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800aea2:	4293      	cmp	r3, r2
 800aea4:	d003      	beq.n	800aeae <HAL_TIM_Base_Start_IT+0x52>
 800aea6:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800aeaa:	4293      	cmp	r3, r2
 800aeac:	d104      	bne.n	800aeb8 <HAL_TIM_Base_Start_IT+0x5c>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800aeae:	689a      	ldr	r2, [r3, #8]
 800aeb0:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800aeb4:	2a06      	cmp	r2, #6
 800aeb6:	d007      	beq.n	800aec8 <HAL_TIM_Base_Start_IT+0x6c>
    __HAL_TIM_ENABLE(htim);
 800aeb8:	681a      	ldr	r2, [r3, #0]
 800aeba:	f042 0201 	orr.w	r2, r2, #1
  return HAL_OK;
 800aebe:	2000      	movs	r0, #0
    __HAL_TIM_ENABLE(htim);
 800aec0:	601a      	str	r2, [r3, #0]
 800aec2:	4770      	bx	lr
    return HAL_ERROR;
 800aec4:	2001      	movs	r0, #1
 800aec6:	4770      	bx	lr
  return HAL_OK;
 800aec8:	2000      	movs	r0, #0
}
 800aeca:	4770      	bx	lr
 800aecc:	40010000 	.word	0x40010000
 800aed0:	40000400 	.word	0x40000400

0800aed4 <HAL_TIM_ConfigClockSource>:
  __HAL_LOCK(htim);
 800aed4:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800aed8:	2b01      	cmp	r3, #1
 800aeda:	d075      	beq.n	800afc8 <HAL_TIM_ConfigClockSource+0xf4>
 800aedc:	4602      	mov	r2, r0
{
 800aede:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800aee0:	2302      	movs	r3, #2
  tmpsmcr = htim->Instance->SMCR;
 800aee2:	6804      	ldr	r4, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800aee4:	f882 303d 	strb.w	r3, [r2, #61]	; 0x3d
  __HAL_LOCK(htim);
 800aee8:	2001      	movs	r0, #1
 800aeea:	f882 003c 	strb.w	r0, [r2, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 800aeee:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800aef0:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800aef4:	f023 0377 	bic.w	r3, r3, #119	; 0x77
  htim->Instance->SMCR = tmpsmcr;
 800aef8:	60a3      	str	r3, [r4, #8]
  switch (sClockSourceConfig->ClockSource)
 800aefa:	680b      	ldr	r3, [r1, #0]
 800aefc:	2b60      	cmp	r3, #96	; 0x60
 800aefe:	d065      	beq.n	800afcc <HAL_TIM_ConfigClockSource+0xf8>
 800af00:	d824      	bhi.n	800af4c <HAL_TIM_ConfigClockSource+0x78>
 800af02:	2b40      	cmp	r3, #64	; 0x40
 800af04:	d07c      	beq.n	800b000 <HAL_TIM_ConfigClockSource+0x12c>
 800af06:	d94b      	bls.n	800afa0 <HAL_TIM_ConfigClockSource+0xcc>
 800af08:	2b50      	cmp	r3, #80	; 0x50
 800af0a:	d117      	bne.n	800af3c <HAL_TIM_ConfigClockSource+0x68>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800af0c:	684b      	ldr	r3, [r1, #4]
 800af0e:	68cd      	ldr	r5, [r1, #12]
{
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 1: Reset the CC1E Bit */
  tmpccer = TIMx->CCER;
 800af10:	6a21      	ldr	r1, [r4, #32]
  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
  tmpccmr1 |= (TIM_ICFilter << 4U);

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800af12:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800af16:	4319      	orrs	r1, r3
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800af18:	6a23      	ldr	r3, [r4, #32]
 800af1a:	f023 0301 	bic.w	r3, r3, #1
 800af1e:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800af20:	69a3      	ldr	r3, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800af22:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800af26:	ea43 1305 	orr.w	r3, r3, r5, lsl #4

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 800af2a:	61a3      	str	r3, [r4, #24]
  TIMx->CCER = tmpccer;
 800af2c:	6221      	str	r1, [r4, #32]
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource)
{
  uint32_t tmpsmcr;

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
 800af2e:	68a3      	ldr	r3, [r4, #8]
  /* Reset the TS Bits */
  tmpsmcr &= ~TIM_SMCR_TS;
 800af30:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  /* Set the Input Trigger source and the slave mode*/
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800af34:	f043 0357 	orr.w	r3, r3, #87	; 0x57
  HAL_StatusTypeDef status = HAL_OK;
 800af38:	2000      	movs	r0, #0
  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800af3a:	60a3      	str	r3, [r4, #8]
  htim->State = HAL_TIM_STATE_READY;
 800af3c:	2101      	movs	r1, #1
  __HAL_UNLOCK(htim);
 800af3e:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 800af40:	f882 103d 	strb.w	r1, [r2, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800af44:	f882 303c 	strb.w	r3, [r2, #60]	; 0x3c
}
 800af48:	bc30      	pop	{r4, r5}
 800af4a:	4770      	bx	lr
  switch (sClockSourceConfig->ClockSource)
 800af4c:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800af50:	d038      	beq.n	800afc4 <HAL_TIM_ConfigClockSource+0xf0>
 800af52:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800af56:	d110      	bne.n	800af7a <HAL_TIM_ConfigClockSource+0xa6>

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800af58:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
  tmpsmcr = TIMx->SMCR;
 800af5c:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800af5e:	432b      	orrs	r3, r5
 800af60:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800af62:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800af66:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 800af6a:	430b      	orrs	r3, r1

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800af6c:	60a3      	str	r3, [r4, #8]
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800af6e:	68a3      	ldr	r3, [r4, #8]
 800af70:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
  HAL_StatusTypeDef status = HAL_OK;
 800af74:	2000      	movs	r0, #0
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800af76:	60a3      	str	r3, [r4, #8]
      break;
 800af78:	e7e0      	b.n	800af3c <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800af7a:	2b70      	cmp	r3, #112	; 0x70
 800af7c:	d1de      	bne.n	800af3c <HAL_TIM_ConfigClockSource+0x68>
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800af7e:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
  tmpsmcr = TIMx->SMCR;
 800af82:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800af84:	432b      	orrs	r3, r5
 800af86:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800af88:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800af8c:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 800af90:	430b      	orrs	r3, r1
  TIMx->SMCR = tmpsmcr;
 800af92:	60a3      	str	r3, [r4, #8]
      tmpsmcr = htim->Instance->SMCR;
 800af94:	68a3      	ldr	r3, [r4, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 800af96:	f043 0377 	orr.w	r3, r3, #119	; 0x77
  HAL_StatusTypeDef status = HAL_OK;
 800af9a:	2000      	movs	r0, #0
      htim->Instance->SMCR = tmpsmcr;
 800af9c:	60a3      	str	r3, [r4, #8]
      break;
 800af9e:	e7cd      	b.n	800af3c <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800afa0:	2b20      	cmp	r3, #32
 800afa2:	d002      	beq.n	800afaa <HAL_TIM_ConfigClockSource+0xd6>
 800afa4:	d90a      	bls.n	800afbc <HAL_TIM_ConfigClockSource+0xe8>
 800afa6:	2b30      	cmp	r3, #48	; 0x30
 800afa8:	d1c8      	bne.n	800af3c <HAL_TIM_ConfigClockSource+0x68>
  tmpsmcr = TIMx->SMCR;
 800afaa:	68a1      	ldr	r1, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800afac:	f021 0170 	bic.w	r1, r1, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800afb0:	430b      	orrs	r3, r1
 800afb2:	f043 0307 	orr.w	r3, r3, #7
  HAL_StatusTypeDef status = HAL_OK;
 800afb6:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800afb8:	60a3      	str	r3, [r4, #8]
}
 800afba:	e7bf      	b.n	800af3c <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800afbc:	f033 0110 	bics.w	r1, r3, #16
 800afc0:	d1bc      	bne.n	800af3c <HAL_TIM_ConfigClockSource+0x68>
 800afc2:	e7f2      	b.n	800afaa <HAL_TIM_ConfigClockSource+0xd6>
  HAL_StatusTypeDef status = HAL_OK;
 800afc4:	2000      	movs	r0, #0
 800afc6:	e7b9      	b.n	800af3c <HAL_TIM_ConfigClockSource+0x68>
  __HAL_LOCK(htim);
 800afc8:	2002      	movs	r0, #2
}
 800afca:	4770      	bx	lr
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800afcc:	6a23      	ldr	r3, [r4, #32]
      TIM_TI2_ConfigInputStage(htim->Instance,
 800afce:	6848      	ldr	r0, [r1, #4]
 800afd0:	68cd      	ldr	r5, [r1, #12]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800afd2:	f023 0310 	bic.w	r3, r3, #16
 800afd6:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800afd8:	69a1      	ldr	r1, [r4, #24]
  tmpccer = TIMx->CCER;
 800afda:	6a23      	ldr	r3, [r4, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800afdc:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800afe0:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
  tmpccer |= (TIM_ICPolarity << 4U);
 800afe4:	ea43 1300 	orr.w	r3, r3, r0, lsl #4
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800afe8:	ea41 3105 	orr.w	r1, r1, r5, lsl #12
  TIMx->CCMR1 = tmpccmr1 ;
 800afec:	61a1      	str	r1, [r4, #24]
  TIMx->CCER = tmpccer;
 800afee:	6223      	str	r3, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 800aff0:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800aff2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800aff6:	f043 0367 	orr.w	r3, r3, #103	; 0x67
  HAL_StatusTypeDef status = HAL_OK;
 800affa:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800affc:	60a3      	str	r3, [r4, #8]
}
 800affe:	e79d      	b.n	800af3c <HAL_TIM_ConfigClockSource+0x68>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800b000:	684b      	ldr	r3, [r1, #4]
 800b002:	68cd      	ldr	r5, [r1, #12]
  tmpccer = TIMx->CCER;
 800b004:	6a21      	ldr	r1, [r4, #32]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800b006:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800b00a:	4319      	orrs	r1, r3
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800b00c:	6a23      	ldr	r3, [r4, #32]
 800b00e:	f023 0301 	bic.w	r3, r3, #1
 800b012:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800b014:	69a3      	ldr	r3, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800b016:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800b01a:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 800b01e:	61a3      	str	r3, [r4, #24]
  TIMx->CCER = tmpccer;
 800b020:	6221      	str	r1, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 800b022:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800b024:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800b028:	f043 0347 	orr.w	r3, r3, #71	; 0x47
  HAL_StatusTypeDef status = HAL_OK;
 800b02c:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800b02e:	60a3      	str	r3, [r4, #8]
}
 800b030:	e784      	b.n	800af3c <HAL_TIM_ConfigClockSource+0x68>
 800b032:	bf00      	nop

0800b034 <HAL_TIM_SlaveConfigSynchro>:
  __HAL_LOCK(htim);
 800b034:	f890 203c 	ldrb.w	r2, [r0, #60]	; 0x3c
 800b038:	2a01      	cmp	r2, #1
 800b03a:	d050      	beq.n	800b0de <HAL_TIM_SlaveConfigSynchro+0xaa>
 800b03c:	4603      	mov	r3, r0
{
 800b03e:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800b040:	2202      	movs	r2, #2
  tmpsmcr = htim->Instance->SMCR;
 800b042:	6804      	ldr	r4, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800b044:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
  __HAL_LOCK(htim);
 800b048:	2001      	movs	r0, #1
 800b04a:	f883 003c 	strb.w	r0, [r3, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 800b04e:	68a2      	ldr	r2, [r4, #8]
  tmpsmcr |= sSlaveConfig->InputTrigger;
 800b050:	6848      	ldr	r0, [r1, #4]
  tmpsmcr |= sSlaveConfig->SlaveMode;
 800b052:	680d      	ldr	r5, [r1, #0]
  tmpsmcr &= ~TIM_SMCR_TS;
 800b054:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpsmcr |= sSlaveConfig->InputTrigger;
 800b058:	4302      	orrs	r2, r0
  tmpsmcr &= ~TIM_SMCR_SMS;
 800b05a:	f022 0207 	bic.w	r2, r2, #7
  tmpsmcr |= sSlaveConfig->SlaveMode;
 800b05e:	432a      	orrs	r2, r5
  switch (sSlaveConfig->InputTrigger)
 800b060:	2850      	cmp	r0, #80	; 0x50
  htim->Instance->SMCR = tmpsmcr;
 800b062:	60a2      	str	r2, [r4, #8]
  switch (sSlaveConfig->InputTrigger)
 800b064:	d060      	beq.n	800b128 <HAL_TIM_SlaveConfigSynchro+0xf4>
 800b066:	d90f      	bls.n	800b088 <HAL_TIM_SlaveConfigSynchro+0x54>
 800b068:	2860      	cmp	r0, #96	; 0x60
 800b06a:	d03a      	beq.n	800b0e2 <HAL_TIM_SlaveConfigSynchro+0xae>
 800b06c:	2870      	cmp	r0, #112	; 0x70
 800b06e:	d10e      	bne.n	800b08e <HAL_TIM_SlaveConfigSynchro+0x5a>
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800b070:	e9d1 5202 	ldrd	r5, r2, [r1, #8]
  tmpsmcr = TIMx->SMCR;
 800b074:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800b076:	432a      	orrs	r2, r5
 800b078:	690d      	ldr	r5, [r1, #16]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800b07a:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800b07e:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 800b082:	430a      	orrs	r2, r1
  TIMx->SMCR = tmpsmcr;
 800b084:	60a2      	str	r2, [r4, #8]
 800b086:	e00f      	b.n	800b0a8 <HAL_TIM_SlaveConfigSynchro+0x74>
  switch (sSlaveConfig->InputTrigger)
 800b088:	2840      	cmp	r0, #64	; 0x40
 800b08a:	d03d      	beq.n	800b108 <HAL_TIM_SlaveConfigSynchro+0xd4>
 800b08c:	d907      	bls.n	800b09e <HAL_TIM_SlaveConfigSynchro+0x6a>
    htim->State = HAL_TIM_STATE_READY;
 800b08e:	2001      	movs	r0, #1
    __HAL_UNLOCK(htim);
 800b090:	2200      	movs	r2, #0
    htim->State = HAL_TIM_STATE_READY;
 800b092:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_UNLOCK(htim);
 800b096:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
}
 800b09a:	bc30      	pop	{r4, r5}
 800b09c:	4770      	bx	lr
  switch (sSlaveConfig->InputTrigger)
 800b09e:	2820      	cmp	r0, #32
 800b0a0:	d002      	beq.n	800b0a8 <HAL_TIM_SlaveConfigSynchro+0x74>
 800b0a2:	d912      	bls.n	800b0ca <HAL_TIM_SlaveConfigSynchro+0x96>
 800b0a4:	2830      	cmp	r0, #48	; 0x30
 800b0a6:	d1f2      	bne.n	800b08e <HAL_TIM_SlaveConfigSynchro+0x5a>
  __HAL_TIM_DISABLE_IT(htim, TIM_IT_TRIGGER);
 800b0a8:	68e2      	ldr	r2, [r4, #12]
 800b0aa:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800b0ae:	60e2      	str	r2, [r4, #12]
  __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
 800b0b0:	68e2      	ldr	r2, [r4, #12]
  __HAL_UNLOCK(htim);
 800b0b2:	2100      	movs	r1, #0
  htim->State = HAL_TIM_STATE_READY;
 800b0b4:	2501      	movs	r5, #1
  __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
 800b0b6:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 800b0ba:	60e2      	str	r2, [r4, #12]
  htim->State = HAL_TIM_STATE_READY;
 800b0bc:	f883 503d 	strb.w	r5, [r3, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800b0c0:	f883 103c 	strb.w	r1, [r3, #60]	; 0x3c
  return HAL_OK;
 800b0c4:	4608      	mov	r0, r1
}
 800b0c6:	bc30      	pop	{r4, r5}
 800b0c8:	4770      	bx	lr
  switch (sSlaveConfig->InputTrigger)
 800b0ca:	f030 0210 	bics.w	r2, r0, #16
 800b0ce:	d0eb      	beq.n	800b0a8 <HAL_TIM_SlaveConfigSynchro+0x74>
    htim->State = HAL_TIM_STATE_READY;
 800b0d0:	2001      	movs	r0, #1
    __HAL_UNLOCK(htim);
 800b0d2:	2200      	movs	r2, #0
    htim->State = HAL_TIM_STATE_READY;
 800b0d4:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_UNLOCK(htim);
 800b0d8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    return HAL_ERROR;
 800b0dc:	e7dd      	b.n	800b09a <HAL_TIM_SlaveConfigSynchro+0x66>
  __HAL_LOCK(htim);
 800b0de:	2002      	movs	r0, #2
}
 800b0e0:	4770      	bx	lr
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800b0e2:	6a22      	ldr	r2, [r4, #32]
      TIM_TI2_ConfigInputStage(htim->Instance,
 800b0e4:	6888      	ldr	r0, [r1, #8]
 800b0e6:	690d      	ldr	r5, [r1, #16]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800b0e8:	f022 0210 	bic.w	r2, r2, #16
 800b0ec:	6222      	str	r2, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800b0ee:	69a1      	ldr	r1, [r4, #24]
  tmpccer = TIMx->CCER;
 800b0f0:	6a22      	ldr	r2, [r4, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800b0f2:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800b0f6:	f022 02a0 	bic.w	r2, r2, #160	; 0xa0
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800b0fa:	ea41 3105 	orr.w	r1, r1, r5, lsl #12
  tmpccer |= (TIM_ICPolarity << 4U);
 800b0fe:	ea42 1200 	orr.w	r2, r2, r0, lsl #4
  TIMx->CCMR1 = tmpccmr1 ;
 800b102:	61a1      	str	r1, [r4, #24]
  TIMx->CCER = tmpccer;
 800b104:	6222      	str	r2, [r4, #32]
 800b106:	e7cf      	b.n	800b0a8 <HAL_TIM_SlaveConfigSynchro+0x74>
      if (sSlaveConfig->SlaveMode == TIM_SLAVEMODE_GATED)
 800b108:	2d05      	cmp	r5, #5
 800b10a:	d0c0      	beq.n	800b08e <HAL_TIM_SlaveConfigSynchro+0x5a>
      tmpccer = htim->Instance->CCER;
 800b10c:	6a20      	ldr	r0, [r4, #32]
      htim->Instance->CCER &= ~TIM_CCER_CC1E;
 800b10e:	6a22      	ldr	r2, [r4, #32]
      tmpccmr1 |= ((sSlaveConfig->TriggerFilter) << 4U);
 800b110:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCER &= ~TIM_CCER_CC1E;
 800b112:	f022 0201 	bic.w	r2, r2, #1
 800b116:	6222      	str	r2, [r4, #32]
      tmpccmr1 = htim->Instance->CCMR1;
 800b118:	69a2      	ldr	r2, [r4, #24]
      tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800b11a:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
      tmpccmr1 |= ((sSlaveConfig->TriggerFilter) << 4U);
 800b11e:	ea42 1201 	orr.w	r2, r2, r1, lsl #4
      htim->Instance->CCMR1 = tmpccmr1;
 800b122:	61a2      	str	r2, [r4, #24]
      htim->Instance->CCER = tmpccer;
 800b124:	6220      	str	r0, [r4, #32]
      break;
 800b126:	e7bf      	b.n	800b0a8 <HAL_TIM_SlaveConfigSynchro+0x74>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800b128:	688a      	ldr	r2, [r1, #8]
 800b12a:	6908      	ldr	r0, [r1, #16]
  tmpccer = TIMx->CCER;
 800b12c:	6a21      	ldr	r1, [r4, #32]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800b12e:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800b132:	4311      	orrs	r1, r2
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800b134:	6a22      	ldr	r2, [r4, #32]
 800b136:	f022 0201 	bic.w	r2, r2, #1
 800b13a:	6222      	str	r2, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800b13c:	69a2      	ldr	r2, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800b13e:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800b142:	ea42 1200 	orr.w	r2, r2, r0, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 800b146:	61a2      	str	r2, [r4, #24]
  TIMx->CCER = tmpccer;
 800b148:	6221      	str	r1, [r4, #32]
 800b14a:	e7ad      	b.n	800b0a8 <HAL_TIM_SlaveConfigSynchro+0x74>

0800b14c <HAL_TIM_OC_DelayElapsedCallback>:
 800b14c:	4770      	bx	lr
 800b14e:	bf00      	nop

0800b150 <HAL_TIM_IC_CaptureCallback>:
 800b150:	4770      	bx	lr
 800b152:	bf00      	nop

0800b154 <HAL_TIM_PWM_PulseFinishedCallback>:
 800b154:	4770      	bx	lr
 800b156:	bf00      	nop

0800b158 <HAL_TIM_TriggerCallback>:
 800b158:	4770      	bx	lr
 800b15a:	bf00      	nop

0800b15c <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800b15c:	6803      	ldr	r3, [r0, #0]
 800b15e:	691a      	ldr	r2, [r3, #16]
 800b160:	0791      	lsls	r1, r2, #30
{
 800b162:	b510      	push	{r4, lr}
 800b164:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800b166:	d502      	bpl.n	800b16e <HAL_TIM_IRQHandler+0x12>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 800b168:	68da      	ldr	r2, [r3, #12]
 800b16a:	0792      	lsls	r2, r2, #30
 800b16c:	d45f      	bmi.n	800b22e <HAL_TIM_IRQHandler+0xd2>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800b16e:	691a      	ldr	r2, [r3, #16]
 800b170:	0750      	lsls	r0, r2, #29
 800b172:	d502      	bpl.n	800b17a <HAL_TIM_IRQHandler+0x1e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 800b174:	68da      	ldr	r2, [r3, #12]
 800b176:	0751      	lsls	r1, r2, #29
 800b178:	d446      	bmi.n	800b208 <HAL_TIM_IRQHandler+0xac>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800b17a:	691a      	ldr	r2, [r3, #16]
 800b17c:	0712      	lsls	r2, r2, #28
 800b17e:	d502      	bpl.n	800b186 <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 800b180:	68da      	ldr	r2, [r3, #12]
 800b182:	0710      	lsls	r0, r2, #28
 800b184:	d42e      	bmi.n	800b1e4 <HAL_TIM_IRQHandler+0x88>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800b186:	691a      	ldr	r2, [r3, #16]
 800b188:	06d2      	lsls	r2, r2, #27
 800b18a:	d502      	bpl.n	800b192 <HAL_TIM_IRQHandler+0x36>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800b18c:	68da      	ldr	r2, [r3, #12]
 800b18e:	06d0      	lsls	r0, r2, #27
 800b190:	d418      	bmi.n	800b1c4 <HAL_TIM_IRQHandler+0x68>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800b192:	691a      	ldr	r2, [r3, #16]
 800b194:	07d1      	lsls	r1, r2, #31
 800b196:	d502      	bpl.n	800b19e <HAL_TIM_IRQHandler+0x42>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 800b198:	68da      	ldr	r2, [r3, #12]
 800b19a:	07d2      	lsls	r2, r2, #31
 800b19c:	d45d      	bmi.n	800b25a <HAL_TIM_IRQHandler+0xfe>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800b19e:	691a      	ldr	r2, [r3, #16]
 800b1a0:	0610      	lsls	r0, r2, #24
 800b1a2:	d502      	bpl.n	800b1aa <HAL_TIM_IRQHandler+0x4e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 800b1a4:	68da      	ldr	r2, [r3, #12]
 800b1a6:	0611      	lsls	r1, r2, #24
 800b1a8:	d45f      	bmi.n	800b26a <HAL_TIM_IRQHandler+0x10e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800b1aa:	691a      	ldr	r2, [r3, #16]
 800b1ac:	0652      	lsls	r2, r2, #25
 800b1ae:	d502      	bpl.n	800b1b6 <HAL_TIM_IRQHandler+0x5a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800b1b0:	68da      	ldr	r2, [r3, #12]
 800b1b2:	0650      	lsls	r0, r2, #25
 800b1b4:	d461      	bmi.n	800b27a <HAL_TIM_IRQHandler+0x11e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800b1b6:	691a      	ldr	r2, [r3, #16]
 800b1b8:	0691      	lsls	r1, r2, #26
 800b1ba:	d502      	bpl.n	800b1c2 <HAL_TIM_IRQHandler+0x66>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 800b1bc:	68da      	ldr	r2, [r3, #12]
 800b1be:	0692      	lsls	r2, r2, #26
 800b1c0:	d443      	bmi.n	800b24a <HAL_TIM_IRQHandler+0xee>
}
 800b1c2:	bd10      	pop	{r4, pc}
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800b1c4:	f06f 0110 	mvn.w	r1, #16
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800b1c8:	2208      	movs	r2, #8
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800b1ca:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800b1cc:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800b1ce:	69db      	ldr	r3, [r3, #28]
 800b1d0:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800b1d4:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800b1d6:	d064      	beq.n	800b2a2 <HAL_TIM_IRQHandler+0x146>
        HAL_TIM_IC_CaptureCallback(htim);
 800b1d8:	f7ff ffba 	bl	800b150 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800b1dc:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800b1de:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800b1e0:	7722      	strb	r2, [r4, #28]
 800b1e2:	e7d6      	b.n	800b192 <HAL_TIM_IRQHandler+0x36>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800b1e4:	f06f 0108 	mvn.w	r1, #8
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800b1e8:	2204      	movs	r2, #4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800b1ea:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800b1ec:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800b1ee:	69db      	ldr	r3, [r3, #28]
 800b1f0:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 800b1f2:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800b1f4:	d152      	bne.n	800b29c <HAL_TIM_IRQHandler+0x140>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800b1f6:	f7ff ffa9 	bl	800b14c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800b1fa:	4620      	mov	r0, r4
 800b1fc:	f7ff ffaa 	bl	800b154 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800b200:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800b202:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800b204:	7722      	strb	r2, [r4, #28]
 800b206:	e7be      	b.n	800b186 <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800b208:	f06f 0104 	mvn.w	r1, #4
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800b20c:	2202      	movs	r2, #2
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800b20e:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800b210:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800b212:	699b      	ldr	r3, [r3, #24]
 800b214:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800b218:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800b21a:	d13c      	bne.n	800b296 <HAL_TIM_IRQHandler+0x13a>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800b21c:	f7ff ff96 	bl	800b14c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800b220:	4620      	mov	r0, r4
 800b222:	f7ff ff97 	bl	800b154 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800b226:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800b228:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800b22a:	7722      	strb	r2, [r4, #28]
 800b22c:	e7a5      	b.n	800b17a <HAL_TIM_IRQHandler+0x1e>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800b22e:	f06f 0102 	mvn.w	r1, #2
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800b232:	2201      	movs	r2, #1
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800b234:	6119      	str	r1, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800b236:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800b238:	699b      	ldr	r3, [r3, #24]
 800b23a:	079b      	lsls	r3, r3, #30
 800b23c:	d025      	beq.n	800b28a <HAL_TIM_IRQHandler+0x12e>
          HAL_TIM_IC_CaptureCallback(htim);
 800b23e:	f7ff ff87 	bl	800b150 <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800b242:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800b244:	6823      	ldr	r3, [r4, #0]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800b246:	7722      	strb	r2, [r4, #28]
 800b248:	e791      	b.n	800b16e <HAL_TIM_IRQHandler+0x12>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800b24a:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 800b24e:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800b250:	611a      	str	r2, [r3, #16]
}
 800b252:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 800b256:	f000 b86b 	b.w	800b330 <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800b25a:	f06f 0201 	mvn.w	r2, #1
 800b25e:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 800b260:	4620      	mov	r0, r4
 800b262:	f7f6 fc79 	bl	8001b58 <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800b266:	6823      	ldr	r3, [r4, #0]
 800b268:	e799      	b.n	800b19e <HAL_TIM_IRQHandler+0x42>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800b26a:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800b26e:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 800b270:	4620      	mov	r0, r4
 800b272:	f000 f85f 	bl	800b334 <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800b276:	6823      	ldr	r3, [r4, #0]
 800b278:	e797      	b.n	800b1aa <HAL_TIM_IRQHandler+0x4e>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800b27a:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800b27e:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 800b280:	4620      	mov	r0, r4
 800b282:	f7ff ff69 	bl	800b158 <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800b286:	6823      	ldr	r3, [r4, #0]
 800b288:	e795      	b.n	800b1b6 <HAL_TIM_IRQHandler+0x5a>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800b28a:	f7ff ff5f 	bl	800b14c <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800b28e:	4620      	mov	r0, r4
 800b290:	f7ff ff60 	bl	800b154 <HAL_TIM_PWM_PulseFinishedCallback>
 800b294:	e7d5      	b.n	800b242 <HAL_TIM_IRQHandler+0xe6>
        HAL_TIM_IC_CaptureCallback(htim);
 800b296:	f7ff ff5b 	bl	800b150 <HAL_TIM_IC_CaptureCallback>
 800b29a:	e7c4      	b.n	800b226 <HAL_TIM_IRQHandler+0xca>
        HAL_TIM_IC_CaptureCallback(htim);
 800b29c:	f7ff ff58 	bl	800b150 <HAL_TIM_IC_CaptureCallback>
 800b2a0:	e7ae      	b.n	800b200 <HAL_TIM_IRQHandler+0xa4>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800b2a2:	f7ff ff53 	bl	800b14c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800b2a6:	4620      	mov	r0, r4
 800b2a8:	f7ff ff54 	bl	800b154 <HAL_TIM_PWM_PulseFinishedCallback>
 800b2ac:	e796      	b.n	800b1dc <HAL_TIM_IRQHandler+0x80>
 800b2ae:	bf00      	nop

0800b2b0 <HAL_TIMEx_MasterConfigSynchronization>:
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 800b2b0:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800b2b4:	2b01      	cmp	r3, #1
 800b2b6:	d037      	beq.n	800b328 <HAL_TIMEx_MasterConfigSynchronization+0x78>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 800b2b8:	6803      	ldr	r3, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800b2ba:	2202      	movs	r2, #2
{
 800b2bc:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800b2be:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  tmpcr2 = htim->Instance->CR2;
 800b2c2:	685a      	ldr	r2, [r3, #4]
  tmpsmcr = htim->Instance->SMCR;

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800b2c4:	680d      	ldr	r5, [r1, #0]
  tmpsmcr = htim->Instance->SMCR;
 800b2c6:	689c      	ldr	r4, [r3, #8]
  tmpcr2 &= ~TIM_CR2_MMS;
 800b2c8:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800b2cc:	432a      	orrs	r2, r5

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 800b2ce:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800b2d0:	4a16      	ldr	r2, [pc, #88]	; (800b32c <HAL_TIMEx_MasterConfigSynchronization+0x7c>)
 800b2d2:	4293      	cmp	r3, r2
 800b2d4:	d01a      	beq.n	800b30c <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800b2d6:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800b2da:	d017      	beq.n	800b30c <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800b2dc:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800b2e0:	4293      	cmp	r3, r2
 800b2e2:	d013      	beq.n	800b30c <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800b2e4:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800b2e8:	4293      	cmp	r3, r2
 800b2ea:	d00f      	beq.n	800b30c <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800b2ec:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800b2f0:	4293      	cmp	r3, r2
 800b2f2:	d00b      	beq.n	800b30c <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800b2f4:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800b2f8:	4293      	cmp	r3, r2
 800b2fa:	d007      	beq.n	800b30c <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800b2fc:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800b300:	4293      	cmp	r3, r2
 800b302:	d003      	beq.n	800b30c <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800b304:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800b308:	4293      	cmp	r3, r2
 800b30a:	d104      	bne.n	800b316 <HAL_TIMEx_MasterConfigSynchronization+0x66>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800b30c:	684a      	ldr	r2, [r1, #4]
    tmpsmcr &= ~TIM_SMCR_MSM;
 800b30e:	f024 0480 	bic.w	r4, r4, #128	; 0x80
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800b312:	4314      	orrs	r4, r2

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 800b314:	609c      	str	r4, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;

  __HAL_UNLOCK(htim);
 800b316:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 800b318:	2201      	movs	r2, #1
 800b31a:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800b31e:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c

  return HAL_OK;
}
 800b322:	bc30      	pop	{r4, r5}
  return HAL_OK;
 800b324:	4618      	mov	r0, r3
}
 800b326:	4770      	bx	lr
  __HAL_LOCK(htim);
 800b328:	2002      	movs	r0, #2
}
 800b32a:	4770      	bx	lr
 800b32c:	40010000 	.word	0x40010000

0800b330 <HAL_TIMEx_CommutCallback>:
 800b330:	4770      	bx	lr
 800b332:	bf00      	nop

0800b334 <HAL_TIMEx_BreakCallback>:
 800b334:	4770      	bx	lr
 800b336:	bf00      	nop

0800b338 <FMC_SDRAM_Init>:
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800b338:	680b      	ldr	r3, [r1, #0]
{
 800b33a:	b430      	push	{r4, r5}
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800b33c:	b9d3      	cbnz	r3, 800b374 <FMC_SDRAM_Init+0x3c>
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800b33e:	6803      	ldr	r3, [r0, #0]
 800b340:	684c      	ldr	r4, [r1, #4]
 800b342:	688a      	ldr	r2, [r1, #8]
 800b344:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800b348:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800b34c:	4323      	orrs	r3, r4
 800b34e:	4313      	orrs	r3, r2
 800b350:	e9d1 4203 	ldrd	r4, r2, [r1, #12]
 800b354:	4323      	orrs	r3, r4
 800b356:	4313      	orrs	r3, r2
 800b358:	e9d1 4205 	ldrd	r4, r2, [r1, #20]
 800b35c:	4323      	orrs	r3, r4
 800b35e:	e9d1 5407 	ldrd	r5, r4, [r1, #28]
 800b362:	4313      	orrs	r3, r2
 800b364:	432b      	orrs	r3, r5
 800b366:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 800b368:	4323      	orrs	r3, r4
 800b36a:	4313      	orrs	r3, r2
 800b36c:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 800b36e:	bc30      	pop	{r4, r5}
 800b370:	2000      	movs	r0, #0
 800b372:	4770      	bx	lr
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800b374:	e9d1 4207 	ldrd	r4, r2, [r1, #28]
 800b378:	6803      	ldr	r3, [r0, #0]
 800b37a:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 800b37e:	4323      	orrs	r3, r4
 800b380:	6a4c      	ldr	r4, [r1, #36]	; 0x24
 800b382:	4313      	orrs	r3, r2
 800b384:	4323      	orrs	r3, r4
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800b386:	684a      	ldr	r2, [r1, #4]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800b388:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800b38a:	6843      	ldr	r3, [r0, #4]
 800b38c:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800b390:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800b394:	4313      	orrs	r3, r2
 800b396:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800b39a:	4323      	orrs	r3, r4
 800b39c:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800b3a0:	4313      	orrs	r3, r2
 800b3a2:	432b      	orrs	r3, r5
 800b3a4:	698a      	ldr	r2, [r1, #24]
 800b3a6:	4323      	orrs	r3, r4
 800b3a8:	4313      	orrs	r3, r2
 800b3aa:	6043      	str	r3, [r0, #4]
}
 800b3ac:	bc30      	pop	{r4, r5}
 800b3ae:	2000      	movs	r0, #0
 800b3b0:	4770      	bx	lr
 800b3b2:	bf00      	nop

0800b3b4 <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
 800b3b4:	b430      	push	{r4, r5}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800b3b6:	6883      	ldr	r3, [r0, #8]
  if (Bank == FMC_SDRAM_BANK1)
 800b3b8:	bb02      	cbnz	r2, 800b3fc <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800b3ba:	e9d1 2400 	ldrd	r2, r4, [r1]
 800b3be:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800b3c2:	3c01      	subs	r4, #1
 800b3c4:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800b3c8:	3a01      	subs	r2, #1
 800b3ca:	4313      	orrs	r3, r2
 800b3cc:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800b3d0:	3c01      	subs	r4, #1
 800b3d2:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800b3d6:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800b3da:	3a01      	subs	r2, #1
 800b3dc:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
 800b3e0:	698a      	ldr	r2, [r1, #24]
 800b3e2:	1e69      	subs	r1, r5, #1
 800b3e4:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800b3e8:	1e61      	subs	r1, r4, #1
 800b3ea:	ea43 5301 	orr.w	r3, r3, r1, lsl #20
 800b3ee:	3a01      	subs	r2, #1
 800b3f0:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800b3f4:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 800b3f6:	bc30      	pop	{r4, r5}
 800b3f8:	2000      	movs	r0, #0
 800b3fa:	4770      	bx	lr
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800b3fc:	68cc      	ldr	r4, [r1, #12]
 800b3fe:	694a      	ldr	r2, [r1, #20]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800b400:	688d      	ldr	r5, [r1, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800b402:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 800b406:	3c01      	subs	r4, #1
 800b408:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800b40c:	ea43 3304 	orr.w	r3, r3, r4, lsl #12
 800b410:	3a01      	subs	r2, #1
 800b412:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 800b416:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800b418:	e9d1 2400 	ldrd	r2, r4, [r1]
 800b41c:	68c3      	ldr	r3, [r0, #12]
 800b41e:	3c01      	subs	r4, #1
 800b420:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800b424:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800b428:	3a01      	subs	r2, #1
 800b42a:	690c      	ldr	r4, [r1, #16]
 800b42c:	4313      	orrs	r3, r2
 800b42e:	698a      	ldr	r2, [r1, #24]
 800b430:	1e69      	subs	r1, r5, #1
 800b432:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800b436:	1e61      	subs	r1, r4, #1
 800b438:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800b43c:	3a01      	subs	r2, #1
 800b43e:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800b442:	60c3      	str	r3, [r0, #12]
}
 800b444:	bc30      	pop	{r4, r5}
 800b446:	2000      	movs	r0, #0
 800b448:	4770      	bx	lr
 800b44a:	bf00      	nop

0800b44c <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800b44c:	b570      	push	{r4, r5, r6, lr}
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800b44e:	680b      	ldr	r3, [r1, #0]
{
 800b450:	4615      	mov	r5, r2
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800b452:	684a      	ldr	r2, [r1, #4]
{
 800b454:	4604      	mov	r4, r0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800b456:	4313      	orrs	r3, r2
 800b458:	6900      	ldr	r0, [r0, #16]
 800b45a:	68ca      	ldr	r2, [r1, #12]
 800b45c:	0d80      	lsrs	r0, r0, #22
 800b45e:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
 800b462:	688a      	ldr	r2, [r1, #8]
 800b464:	0580      	lsls	r0, r0, #22
 800b466:	4303      	orrs	r3, r0
 800b468:	3a01      	subs	r2, #1
 800b46a:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800b46e:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 800b470:	f7fc fa32 	bl	80078d8 <HAL_GetTick>
 800b474:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800b476:	1c6b      	adds	r3, r5, #1
 800b478:	d105      	bne.n	800b486 <FMC_SDRAM_SendCommand+0x3a>
 800b47a:	69a3      	ldr	r3, [r4, #24]
 800b47c:	f013 0320 	ands.w	r3, r3, #32
 800b480:	d1fb      	bne.n	800b47a <FMC_SDRAM_SendCommand+0x2e>
      {
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 800b482:	4618      	mov	r0, r3
}
 800b484:	bd70      	pop	{r4, r5, r6, pc}
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800b486:	69a3      	ldr	r3, [r4, #24]
 800b488:	f013 0320 	ands.w	r3, r3, #32
 800b48c:	d0f9      	beq.n	800b482 <FMC_SDRAM_SendCommand+0x36>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800b48e:	b125      	cbz	r5, 800b49a <FMC_SDRAM_SendCommand+0x4e>
 800b490:	f7fc fa22 	bl	80078d8 <HAL_GetTick>
 800b494:	1b80      	subs	r0, r0, r6
 800b496:	42a8      	cmp	r0, r5
 800b498:	d9ed      	bls.n	800b476 <FMC_SDRAM_SendCommand+0x2a>
        return HAL_TIMEOUT;
 800b49a:	2003      	movs	r0, #3
}
 800b49c:	bd70      	pop	{r4, r5, r6, pc}
 800b49e:	bf00      	nop

0800b4a0 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800b4a0:	6943      	ldr	r3, [r0, #20]
 800b4a2:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
{
 800b4a6:	4602      	mov	r2, r0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800b4a8:	f023 033e 	bic.w	r3, r3, #62	; 0x3e
 800b4ac:	ea43 0141 	orr.w	r1, r3, r1, lsl #1

  return HAL_OK;
}
 800b4b0:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800b4b2:	6151      	str	r1, [r2, #20]
}
 800b4b4:	4770      	bx	lr
 800b4b6:	bf00      	nop

0800b4b8 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 800b4b8:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 800b4ba:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800b4be:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 800b4c0:	f002 fb00 	bl	800dac4 <xTaskGetSchedulerState>
 800b4c4:	2801      	cmp	r0, #1
 800b4c6:	d100      	bne.n	800b4ca <SysTick_Handler+0x12>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 800b4c8:	bd08      	pop	{r3, pc}
 800b4ca:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 800b4ce:	f000 bc41 	b.w	800bd54 <xPortSysTickHandler>
 800b4d2:	bf00      	nop

0800b4d4 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800b4d4:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 800b4d8:	b92b      	cbnz	r3, 800b4e6 <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 800b4da:	4b06      	ldr	r3, [pc, #24]	; (800b4f4 <osKernelInitialize+0x20>)
 800b4dc:	6818      	ldr	r0, [r3, #0]
 800b4de:	b928      	cbnz	r0, 800b4ec <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 800b4e0:	2201      	movs	r2, #1
 800b4e2:	601a      	str	r2, [r3, #0]
      stat = osOK;
 800b4e4:	4770      	bx	lr
    stat = osErrorISR;
 800b4e6:	f06f 0005 	mvn.w	r0, #5
 800b4ea:	4770      	bx	lr
    } else {
      stat = osError;
 800b4ec:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 800b4f0:	4770      	bx	lr
 800b4f2:	bf00      	nop
 800b4f4:	20002c70 	.word	0x20002c70

0800b4f8 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 800b4f8:	b510      	push	{r4, lr}
 800b4fa:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800b4fe:	b974      	cbnz	r4, 800b51e <osKernelStart+0x26>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 800b500:	4b08      	ldr	r3, [pc, #32]	; (800b524 <osKernelStart+0x2c>)
 800b502:	681a      	ldr	r2, [r3, #0]
 800b504:	2a01      	cmp	r2, #1
 800b506:	d107      	bne.n	800b518 <osKernelStart+0x20>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800b508:	4907      	ldr	r1, [pc, #28]	; (800b528 <osKernelStart+0x30>)
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 800b50a:	2202      	movs	r2, #2
 800b50c:	77cc      	strb	r4, [r1, #31]
 800b50e:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 800b510:	f002 f8b2 	bl	800d678 <vTaskStartScheduler>
      stat = osOK;
 800b514:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 800b516:	bd10      	pop	{r4, pc}
      stat = osError;
 800b518:	f04f 30ff 	mov.w	r0, #4294967295
}
 800b51c:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800b51e:	f06f 0005 	mvn.w	r0, #5
}
 800b522:	bd10      	pop	{r4, pc}
 800b524:	20002c70 	.word	0x20002c70
 800b528:	e000ed00 	.word	0xe000ed00

0800b52c <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800b52c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b52e:	b087      	sub	sp, #28
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800b530:	2400      	movs	r4, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800b532:	4615      	mov	r5, r2
  hTask = NULL;
 800b534:	9405      	str	r4, [sp, #20]
 800b536:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 800b53a:	b9ea      	cbnz	r2, 800b578 <osThreadNew+0x4c>
 800b53c:	b350      	cbz	r0, 800b594 <osThreadNew+0x68>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 800b53e:	b1f5      	cbz	r5, 800b57e <osThreadNew+0x52>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 800b540:	69ab      	ldr	r3, [r5, #24]
 800b542:	bb5b      	cbnz	r3, 800b59c <osThreadNew+0x70>
 800b544:	2318      	movs	r3, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800b546:	686a      	ldr	r2, [r5, #4]
 800b548:	07d2      	lsls	r2, r2, #31
 800b54a:	d423      	bmi.n	800b594 <osThreadNew+0x68>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 800b54c:	696e      	ldr	r6, [r5, #20]
 800b54e:	b34e      	cbz	r6, 800b5a4 <osThreadNew+0x78>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800b550:	ea4f 0c96 	mov.w	ip, r6, lsr #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800b554:	68ac      	ldr	r4, [r5, #8]
      if (attr->name != NULL) {
 800b556:	682f      	ldr	r7, [r5, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800b558:	b34c      	cbz	r4, 800b5ae <osThreadNew+0x82>
 800b55a:	68ea      	ldr	r2, [r5, #12]
 800b55c:	2aab      	cmp	r2, #171	; 0xab
 800b55e:	d919      	bls.n	800b594 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800b560:	692d      	ldr	r5, [r5, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800b562:	b1bd      	cbz	r5, 800b594 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800b564:	b1b6      	cbz	r6, 800b594 <osThreadNew+0x68>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 800b566:	e9cd 5401 	strd	r5, r4, [sp, #4]
 800b56a:	9300      	str	r3, [sp, #0]
 800b56c:	4662      	mov	r2, ip
 800b56e:	460b      	mov	r3, r1
 800b570:	4639      	mov	r1, r7
 800b572:	f001 ffbf 	bl	800d4f4 <xTaskCreateStatic>
 800b576:	4604      	mov	r4, r0
      }
    }
  }

  return ((osThreadId_t)hTask);
}
 800b578:	4620      	mov	r0, r4
 800b57a:	b007      	add	sp, #28
 800b57c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b57e:	2280      	movs	r2, #128	; 0x80
    prio  = (UBaseType_t)osPriorityNormal;
 800b580:	2318      	movs	r3, #24
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800b582:	ac05      	add	r4, sp, #20
 800b584:	9300      	str	r3, [sp, #0]
 800b586:	9401      	str	r4, [sp, #4]
 800b588:	460b      	mov	r3, r1
 800b58a:	4629      	mov	r1, r5
 800b58c:	f001 ffec 	bl	800d568 <xTaskCreate>
 800b590:	2801      	cmp	r0, #1
 800b592:	d00a      	beq.n	800b5aa <osThreadNew+0x7e>
        return (NULL);
 800b594:	2400      	movs	r4, #0
}
 800b596:	4620      	mov	r0, r4
 800b598:	b007      	add	sp, #28
 800b59a:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800b59c:	1e5c      	subs	r4, r3, #1
 800b59e:	2c37      	cmp	r4, #55	; 0x37
 800b5a0:	d9d1      	bls.n	800b546 <osThreadNew+0x1a>
 800b5a2:	e7f7      	b.n	800b594 <osThreadNew+0x68>
    stack = configMINIMAL_STACK_SIZE;
 800b5a4:	f04f 0c80 	mov.w	ip, #128	; 0x80
 800b5a8:	e7d4      	b.n	800b554 <osThreadNew+0x28>
  return ((osThreadId_t)hTask);
 800b5aa:	9c05      	ldr	r4, [sp, #20]
 800b5ac:	e7e4      	b.n	800b578 <osThreadNew+0x4c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800b5ae:	68ee      	ldr	r6, [r5, #12]
 800b5b0:	2e00      	cmp	r6, #0
 800b5b2:	d1e1      	bne.n	800b578 <osThreadNew+0x4c>
 800b5b4:	692d      	ldr	r5, [r5, #16]
 800b5b6:	2d00      	cmp	r5, #0
 800b5b8:	d1de      	bne.n	800b578 <osThreadNew+0x4c>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800b5ba:	fa1f f28c 	uxth.w	r2, ip
 800b5be:	463d      	mov	r5, r7
 800b5c0:	e7df      	b.n	800b582 <osThreadNew+0x56>
 800b5c2:	bf00      	nop

0800b5c4 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 800b5c4:	b510      	push	{r4, lr}
 800b5c6:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800b5ca:	b92c      	cbnz	r4, 800b5d8 <osDelay+0x14>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 800b5cc:	b900      	cbnz	r0, 800b5d0 <osDelay+0xc>
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
 800b5ce:	bd10      	pop	{r4, pc}
      vTaskDelay(ticks);
 800b5d0:	f001 fffc 	bl	800d5cc <vTaskDelay>
    stat = osOK;
 800b5d4:	4620      	mov	r0, r4
}
 800b5d6:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800b5d8:	f06f 0005 	mvn.w	r0, #5
}
 800b5dc:	bd10      	pop	{r4, pc}
 800b5de:	bf00      	nop

0800b5e0 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 800b5e0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b5e2:	b083      	sub	sp, #12
 800b5e4:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800b5e8:	b9fe      	cbnz	r6, 800b62a <osSemaphoreNew+0x4a>
 800b5ea:	b1f0      	cbz	r0, 800b62a <osSemaphoreNew+0x4a>
 800b5ec:	4288      	cmp	r0, r1
 800b5ee:	460f      	mov	r7, r1
 800b5f0:	d31b      	bcc.n	800b62a <osSemaphoreNew+0x4a>
    mem = -1;

    if (attr != NULL) {
 800b5f2:	4615      	mov	r5, r2
 800b5f4:	b192      	cbz	r2, 800b61c <osSemaphoreNew+0x3c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800b5f6:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
 800b5fa:	b1d2      	cbz	r2, 800b632 <osSemaphoreNew+0x52>
 800b5fc:	2b4f      	cmp	r3, #79	; 0x4f
 800b5fe:	d914      	bls.n	800b62a <osSemaphoreNew+0x4a>
    else {
      mem = 0;
    }

    if (mem != -1) {
      if (max_count == 1U) {
 800b600:	2801      	cmp	r0, #1
 800b602:	d038      	beq.n	800b676 <osSemaphoreNew+0x96>
        }
      }
      else {
        if (mem == 1) {
          #if (configSUPPORT_STATIC_ALLOCATION == 1)
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 800b604:	f000 fd8c 	bl	800c120 <xQueueCreateCountingSemaphoreStatic>
          #endif
        }
      }
      
      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hSemaphore != NULL) {
 800b608:	4604      	mov	r4, r0
 800b60a:	b170      	cbz	r0, 800b62a <osSemaphoreNew+0x4a>
        if (attr != NULL) {
          name = attr->name;
 800b60c:	682d      	ldr	r5, [r5, #0]
        } else {
          name = NULL;
        }
        vQueueAddToRegistry (hSemaphore, name);
 800b60e:	4620      	mov	r0, r4
 800b610:	4629      	mov	r1, r5
 800b612:	f001 fc37 	bl	800ce84 <vQueueAddToRegistry>
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800b616:	4620      	mov	r0, r4
 800b618:	b003      	add	sp, #12
 800b61a:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (max_count == 1U) {
 800b61c:	2801      	cmp	r0, #1
 800b61e:	d012      	beq.n	800b646 <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800b620:	f000 fdde 	bl	800c1e0 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800b624:	4604      	mov	r4, r0
 800b626:	2800      	cmp	r0, #0
 800b628:	d1f1      	bne.n	800b60e <osSemaphoreNew+0x2e>
            hSemaphore = NULL;
 800b62a:	2400      	movs	r4, #0
}
 800b62c:	4620      	mov	r0, r4
 800b62e:	b003      	add	sp, #12
 800b630:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800b632:	2b00      	cmp	r3, #0
 800b634:	d1f9      	bne.n	800b62a <osSemaphoreNew+0x4a>
      if (max_count == 1U) {
 800b636:	2801      	cmp	r0, #1
 800b638:	d005      	beq.n	800b646 <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800b63a:	f000 fdd1 	bl	800c1e0 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800b63e:	4604      	mov	r4, r0
 800b640:	2800      	cmp	r0, #0
 800b642:	d1e3      	bne.n	800b60c <osSemaphoreNew+0x2c>
 800b644:	e7f1      	b.n	800b62a <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinary();
 800b646:	2203      	movs	r2, #3
 800b648:	2100      	movs	r1, #0
 800b64a:	2001      	movs	r0, #1
 800b64c:	f000 fd26 	bl	800c09c <xQueueGenericCreate>
 800b650:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 800b652:	2c00      	cmp	r4, #0
 800b654:	d0e9      	beq.n	800b62a <osSemaphoreNew+0x4a>
 800b656:	b917      	cbnz	r7, 800b65e <osSemaphoreNew+0x7e>
        if (attr != NULL) {
 800b658:	2d00      	cmp	r5, #0
 800b65a:	d1d7      	bne.n	800b60c <osSemaphoreNew+0x2c>
 800b65c:	e7d7      	b.n	800b60e <osSemaphoreNew+0x2e>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800b65e:	2300      	movs	r3, #0
 800b660:	461a      	mov	r2, r3
 800b662:	4619      	mov	r1, r3
 800b664:	4620      	mov	r0, r4
 800b666:	f000 fe01 	bl	800c26c <xQueueGenericSend>
 800b66a:	2801      	cmp	r0, #1
 800b66c:	d0f4      	beq.n	800b658 <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 800b66e:	4620      	mov	r0, r4
 800b670:	f001 fbc2 	bl	800cdf8 <vQueueDelete>
 800b674:	e7d9      	b.n	800b62a <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 800b676:	4613      	mov	r3, r2
 800b678:	2203      	movs	r2, #3
 800b67a:	9200      	str	r2, [sp, #0]
 800b67c:	4631      	mov	r1, r6
 800b67e:	4632      	mov	r2, r6
 800b680:	f000 fc9e 	bl	800bfc0 <xQueueGenericCreateStatic>
 800b684:	4604      	mov	r4, r0
 800b686:	e7e4      	b.n	800b652 <osSemaphoreNew+0x72>

0800b688 <osSemaphoreAcquire>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800b688:	b370      	cbz	r0, 800b6e8 <osSemaphoreAcquire+0x60>
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 800b68a:	b510      	push	{r4, lr}
 800b68c:	460c      	mov	r4, r1
 800b68e:	b082      	sub	sp, #8
 800b690:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800b694:	b1c3      	cbz	r3, 800b6c8 <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
 800b696:	bb21      	cbnz	r1, 800b6e2 <osSemaphoreAcquire+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800b698:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800b69a:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800b69c:	f001 fb2a 	bl	800ccf4 <xQueueReceiveFromISR>
 800b6a0:	2801      	cmp	r0, #1
 800b6a2:	d11a      	bne.n	800b6da <osSemaphoreAcquire+0x52>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800b6a4:	9b01      	ldr	r3, [sp, #4]
 800b6a6:	b913      	cbnz	r3, 800b6ae <osSemaphoreAcquire+0x26>
  stat = osOK;
 800b6a8:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800b6aa:	b002      	add	sp, #8
 800b6ac:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 800b6ae:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800b6b2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800b6b6:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800b6ba:	f3bf 8f4f 	dsb	sy
 800b6be:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800b6c2:	4620      	mov	r0, r4
}
 800b6c4:	b002      	add	sp, #8
 800b6c6:	bd10      	pop	{r4, pc}
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800b6c8:	f001 f98a 	bl	800c9e0 <xQueueSemaphoreTake>
 800b6cc:	2801      	cmp	r0, #1
 800b6ce:	d0eb      	beq.n	800b6a8 <osSemaphoreAcquire+0x20>
      if (timeout != 0U) {
 800b6d0:	b11c      	cbz	r4, 800b6da <osSemaphoreAcquire+0x52>
        stat = osErrorTimeout;
 800b6d2:	f06f 0001 	mvn.w	r0, #1
}
 800b6d6:	b002      	add	sp, #8
 800b6d8:	bd10      	pop	{r4, pc}
        stat = osErrorResource;
 800b6da:	f06f 0002 	mvn.w	r0, #2
}
 800b6de:	b002      	add	sp, #8
 800b6e0:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
 800b6e2:	f06f 0003 	mvn.w	r0, #3
 800b6e6:	e7e0      	b.n	800b6aa <osSemaphoreAcquire+0x22>
 800b6e8:	f06f 0003 	mvn.w	r0, #3
}
 800b6ec:	4770      	bx	lr
 800b6ee:	bf00      	nop

0800b6f0 <osSemaphoreRelease>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800b6f0:	b330      	cbz	r0, 800b740 <osSemaphoreRelease+0x50>
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 800b6f2:	b510      	push	{r4, lr}
 800b6f4:	b082      	sub	sp, #8
 800b6f6:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800b6fa:	b1ab      	cbz	r3, 800b728 <osSemaphoreRelease+0x38>
    yield = pdFALSE;
 800b6fc:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800b6fe:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 800b700:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800b702:	f000 ff97 	bl	800c634 <xQueueGiveFromISR>
 800b706:	2801      	cmp	r0, #1
 800b708:	d117      	bne.n	800b73a <osSemaphoreRelease+0x4a>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 800b70a:	9b01      	ldr	r3, [sp, #4]
 800b70c:	b193      	cbz	r3, 800b734 <osSemaphoreRelease+0x44>
 800b70e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800b712:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800b716:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800b71a:	f3bf 8f4f 	dsb	sy
 800b71e:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800b722:	4620      	mov	r0, r4
      stat = osErrorResource;
    }
  }

  return (stat);
}
 800b724:	b002      	add	sp, #8
 800b726:	bd10      	pop	{r4, pc}
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800b728:	461a      	mov	r2, r3
 800b72a:	4619      	mov	r1, r3
 800b72c:	f000 fd9e 	bl	800c26c <xQueueGenericSend>
 800b730:	2801      	cmp	r0, #1
 800b732:	d102      	bne.n	800b73a <osSemaphoreRelease+0x4a>
  stat = osOK;
 800b734:	2000      	movs	r0, #0
}
 800b736:	b002      	add	sp, #8
 800b738:	bd10      	pop	{r4, pc}
      stat = osErrorResource;
 800b73a:	f06f 0002 	mvn.w	r0, #2
 800b73e:	e7fa      	b.n	800b736 <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
 800b740:	f06f 0003 	mvn.w	r0, #3
}
 800b744:	4770      	bx	lr
 800b746:	bf00      	nop

0800b748 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 800b748:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b74a:	b085      	sub	sp, #20
 800b74c:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800b750:	b987      	cbnz	r7, 800b774 <osMessageQueueNew+0x2c>
 800b752:	4605      	mov	r5, r0
 800b754:	b170      	cbz	r0, 800b774 <osMessageQueueNew+0x2c>
 800b756:	b169      	cbz	r1, 800b774 <osMessageQueueNew+0x2c>
    mem = -1;

    if (attr != NULL) {
 800b758:	4614      	mov	r4, r2
 800b75a:	b1ea      	cbz	r2, 800b798 <osMessageQueueNew+0x50>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800b75c:	6893      	ldr	r3, [r2, #8]
 800b75e:	b163      	cbz	r3, 800b77a <osMessageQueueNew+0x32>
 800b760:	68d2      	ldr	r2, [r2, #12]
 800b762:	2a4f      	cmp	r2, #79	; 0x4f
 800b764:	d906      	bls.n	800b774 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800b766:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800b768:	b122      	cbz	r2, 800b774 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800b76a:	6966      	ldr	r6, [r4, #20]
 800b76c:	fb01 f505 	mul.w	r5, r1, r5
 800b770:	42ae      	cmp	r6, r5
 800b772:	d21c      	bcs.n	800b7ae <osMessageQueueNew+0x66>
  hQueue = NULL;
 800b774:	2000      	movs	r0, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 800b776:	b005      	add	sp, #20
 800b778:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 800b77a:	68d3      	ldr	r3, [r2, #12]
 800b77c:	2b00      	cmp	r3, #0
 800b77e:	d1f9      	bne.n	800b774 <osMessageQueueNew+0x2c>
 800b780:	6913      	ldr	r3, [r2, #16]
 800b782:	2b00      	cmp	r3, #0
 800b784:	d1f6      	bne.n	800b774 <osMessageQueueNew+0x2c>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 800b786:	6952      	ldr	r2, [r2, #20]
 800b788:	2a00      	cmp	r2, #0
 800b78a:	d1f3      	bne.n	800b774 <osMessageQueueNew+0x2c>
          hQueue = xQueueCreate (msg_count, msg_size);
 800b78c:	f000 fc86 	bl	800c09c <xQueueGenericCreate>
    if (hQueue != NULL) {
 800b790:	2800      	cmp	r0, #0
 800b792:	d0ef      	beq.n	800b774 <osMessageQueueNew+0x2c>
        name = attr->name;
 800b794:	6824      	ldr	r4, [r4, #0]
 800b796:	e003      	b.n	800b7a0 <osMessageQueueNew+0x58>
          hQueue = xQueueCreate (msg_count, msg_size);
 800b798:	f000 fc80 	bl	800c09c <xQueueGenericCreate>
    if (hQueue != NULL) {
 800b79c:	2800      	cmp	r0, #0
 800b79e:	d0e9      	beq.n	800b774 <osMessageQueueNew+0x2c>
      vQueueAddToRegistry (hQueue, name);
 800b7a0:	4621      	mov	r1, r4
 800b7a2:	9003      	str	r0, [sp, #12]
 800b7a4:	f001 fb6e 	bl	800ce84 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 800b7a8:	9803      	ldr	r0, [sp, #12]
}
 800b7aa:	b005      	add	sp, #20
 800b7ac:	bdf0      	pop	{r4, r5, r6, r7, pc}
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800b7ae:	9700      	str	r7, [sp, #0]
 800b7b0:	f000 fc06 	bl	800bfc0 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 800b7b4:	2800      	cmp	r0, #0
 800b7b6:	d1ed      	bne.n	800b794 <osMessageQueueNew+0x4c>
 800b7b8:	e7dc      	b.n	800b774 <osMessageQueueNew+0x2c>
 800b7ba:	bf00      	nop

0800b7bc <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 800b7bc:	b570      	push	{r4, r5, r6, lr}
 800b7be:	461c      	mov	r4, r3
 800b7c0:	b082      	sub	sp, #8
 800b7c2:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800b7c6:	b1be      	cbz	r6, 800b7f8 <osMessageQueuePut+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800b7c8:	b350      	cbz	r0, 800b820 <osMessageQueuePut+0x64>
 800b7ca:	b349      	cbz	r1, 800b820 <osMessageQueuePut+0x64>
 800b7cc:	bb43      	cbnz	r3, 800b820 <osMessageQueuePut+0x64>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800b7ce:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800b7d0:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800b7d2:	f000 fec9 	bl	800c568 <xQueueGenericSendFromISR>
 800b7d6:	2801      	cmp	r0, #1
 800b7d8:	d11e      	bne.n	800b818 <osMessageQueuePut+0x5c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800b7da:	9b01      	ldr	r3, [sp, #4]
 800b7dc:	b1cb      	cbz	r3, 800b812 <osMessageQueuePut+0x56>
 800b7de:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800b7e2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800b7e6:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800b7ea:	f3bf 8f4f 	dsb	sy
 800b7ee:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800b7f2:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800b7f4:	b002      	add	sp, #8
 800b7f6:	bd70      	pop	{r4, r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800b7f8:	b190      	cbz	r0, 800b820 <osMessageQueuePut+0x64>
 800b7fa:	b189      	cbz	r1, 800b820 <osMessageQueuePut+0x64>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800b7fc:	4633      	mov	r3, r6
 800b7fe:	4622      	mov	r2, r4
 800b800:	f000 fd34 	bl	800c26c <xQueueGenericSend>
 800b804:	2801      	cmp	r0, #1
 800b806:	d004      	beq.n	800b812 <osMessageQueuePut+0x56>
        if (timeout != 0U) {
 800b808:	b134      	cbz	r4, 800b818 <osMessageQueuePut+0x5c>
          stat = osErrorTimeout;
 800b80a:	f06f 0001 	mvn.w	r0, #1
}
 800b80e:	b002      	add	sp, #8
 800b810:	bd70      	pop	{r4, r5, r6, pc}
  stat = osOK;
 800b812:	2000      	movs	r0, #0
}
 800b814:	b002      	add	sp, #8
 800b816:	bd70      	pop	{r4, r5, r6, pc}
          stat = osErrorResource;
 800b818:	f06f 0002 	mvn.w	r0, #2
}
 800b81c:	b002      	add	sp, #8
 800b81e:	bd70      	pop	{r4, r5, r6, pc}
      stat = osErrorParameter;
 800b820:	f06f 0003 	mvn.w	r0, #3
 800b824:	e7e6      	b.n	800b7f4 <osMessageQueuePut+0x38>
 800b826:	bf00      	nop

0800b828 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800b828:	b530      	push	{r4, r5, lr}
 800b82a:	461c      	mov	r4, r3
 800b82c:	b083      	sub	sp, #12
 800b82e:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800b832:	b1bb      	cbz	r3, 800b864 <osMessageQueueGet+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800b834:	b348      	cbz	r0, 800b88a <osMessageQueueGet+0x62>
 800b836:	b341      	cbz	r1, 800b88a <osMessageQueueGet+0x62>
 800b838:	bb3c      	cbnz	r4, 800b88a <osMessageQueueGet+0x62>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800b83a:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800b83c:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800b83e:	f001 fa59 	bl	800ccf4 <xQueueReceiveFromISR>
 800b842:	2801      	cmp	r0, #1
 800b844:	d11d      	bne.n	800b882 <osMessageQueueGet+0x5a>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800b846:	9b01      	ldr	r3, [sp, #4]
 800b848:	b1c3      	cbz	r3, 800b87c <osMessageQueueGet+0x54>
 800b84a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800b84e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800b852:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800b856:	f3bf 8f4f 	dsb	sy
 800b85a:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800b85e:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800b860:	b003      	add	sp, #12
 800b862:	bd30      	pop	{r4, r5, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800b864:	b188      	cbz	r0, 800b88a <osMessageQueueGet+0x62>
 800b866:	b181      	cbz	r1, 800b88a <osMessageQueueGet+0x62>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800b868:	4622      	mov	r2, r4
 800b86a:	f000 ff3b 	bl	800c6e4 <xQueueReceive>
 800b86e:	2801      	cmp	r0, #1
 800b870:	d004      	beq.n	800b87c <osMessageQueueGet+0x54>
        if (timeout != 0U) {
 800b872:	b134      	cbz	r4, 800b882 <osMessageQueueGet+0x5a>
          stat = osErrorTimeout;
 800b874:	f06f 0001 	mvn.w	r0, #1
}
 800b878:	b003      	add	sp, #12
 800b87a:	bd30      	pop	{r4, r5, pc}
  stat = osOK;
 800b87c:	2000      	movs	r0, #0
}
 800b87e:	b003      	add	sp, #12
 800b880:	bd30      	pop	{r4, r5, pc}
          stat = osErrorResource;
 800b882:	f06f 0002 	mvn.w	r0, #2
}
 800b886:	b003      	add	sp, #12
 800b888:	bd30      	pop	{r4, r5, pc}
      stat = osErrorParameter;
 800b88a:	f06f 0003 	mvn.w	r0, #3
 800b88e:	e7e7      	b.n	800b860 <osMessageQueueGet+0x38>

0800b890 <osMessageQueueGetCount>:
 800b890:	b130      	cbz	r0, 800b8a0 <osMessageQueueGetCount+0x10>
 800b892:	f3ef 8305 	mrs	r3, IPSR
 800b896:	b10b      	cbz	r3, 800b89c <osMessageQueueGetCount+0xc>
 800b898:	f001 baa0 	b.w	800cddc <uxQueueMessagesWaitingFromISR>
 800b89c:	f001 ba88 	b.w	800cdb0 <uxQueueMessagesWaiting>
 800b8a0:	4770      	bx	lr
 800b8a2:	bf00      	nop

0800b8a4 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800b8a4:	4b04      	ldr	r3, [pc, #16]	; (800b8b8 <vApplicationGetIdleTaskMemory+0x14>)
 800b8a6:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
 800b8a8:	b410      	push	{r4}
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800b8aa:	2380      	movs	r3, #128	; 0x80
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 800b8ac:	4c03      	ldr	r4, [pc, #12]	; (800b8bc <vApplicationGetIdleTaskMemory+0x18>)
 800b8ae:	600c      	str	r4, [r1, #0]
}
 800b8b0:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800b8b4:	6013      	str	r3, [r2, #0]
}
 800b8b6:	4770      	bx	lr
 800b8b8:	20002bc4 	.word	0x20002bc4
 800b8bc:	200029c4 	.word	0x200029c4

0800b8c0 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 800b8c0:	4b05      	ldr	r3, [pc, #20]	; (800b8d8 <vApplicationGetTimerTaskMemory+0x18>)
 800b8c2:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
 800b8c4:	b410      	push	{r4}
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800b8c6:	f44f 7380 	mov.w	r3, #256	; 0x100
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 800b8ca:	4c04      	ldr	r4, [pc, #16]	; (800b8dc <vApplicationGetTimerTaskMemory+0x1c>)
 800b8cc:	600c      	str	r4, [r1, #0]
}
 800b8ce:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800b8d2:	6013      	str	r3, [r2, #0]
}
 800b8d4:	4770      	bx	lr
 800b8d6:	bf00      	nop
 800b8d8:	20003074 	.word	0x20003074
 800b8dc:	20002c74 	.word	0x20002c74

0800b8e0 <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
 800b8e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b8e4:	4605      	mov	r5, r0
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;

	vTaskSuspendAll();
 800b8e6:	f001 ff43 	bl	800d770 <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
 800b8ea:	4a54      	ldr	r2, [pc, #336]	; (800ba3c <pvPortMalloc+0x15c>)
 800b8ec:	6816      	ldr	r6, [r2, #0]
 800b8ee:	2e00      	cmp	r6, #0
 800b8f0:	d06e      	beq.n	800b9d0 <pvPortMalloc+0xf0>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800b8f2:	4b53      	ldr	r3, [pc, #332]	; (800ba40 <pvPortMalloc+0x160>)
 800b8f4:	681f      	ldr	r7, [r3, #0]
 800b8f6:	423d      	tst	r5, r7
 800b8f8:	d12e      	bne.n	800b958 <pvPortMalloc+0x78>
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
 800b8fa:	b36d      	cbz	r5, 800b958 <pvPortMalloc+0x78>
			{
				xWantedSize += xHeapStructSize;
 800b8fc:	f105 0408 	add.w	r4, r5, #8

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800b900:	076d      	lsls	r5, r5, #29
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800b902:	bf1c      	itt	ne
 800b904:	f024 0407 	bicne.w	r4, r4, #7
 800b908:	3408      	addne	r4, #8
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800b90a:	b32c      	cbz	r4, 800b958 <pvPortMalloc+0x78>
 800b90c:	f8df c144 	ldr.w	ip, [pc, #324]	; 800ba54 <pvPortMalloc+0x174>
 800b910:	f8dc 5000 	ldr.w	r5, [ip]
 800b914:	42a5      	cmp	r5, r4
 800b916:	d31f      	bcc.n	800b958 <pvPortMalloc+0x78>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
				pxBlock = xStart.pxNextFreeBlock;
 800b918:	484a      	ldr	r0, [pc, #296]	; (800ba44 <pvPortMalloc+0x164>)
 800b91a:	6803      	ldr	r3, [r0, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800b91c:	e003      	b.n	800b926 <pvPortMalloc+0x46>
 800b91e:	681a      	ldr	r2, [r3, #0]
 800b920:	b122      	cbz	r2, 800b92c <pvPortMalloc+0x4c>
 800b922:	4618      	mov	r0, r3
 800b924:	4613      	mov	r3, r2
 800b926:	6859      	ldr	r1, [r3, #4]
 800b928:	42a1      	cmp	r1, r4
 800b92a:	d3f8      	bcc.n	800b91e <pvPortMalloc+0x3e>
					pxBlock = pxBlock->pxNextFreeBlock;
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
 800b92c:	42b3      	cmp	r3, r6
 800b92e:	d013      	beq.n	800b958 <pvPortMalloc+0x78>
				{
					/* Return the memory space pointed to - jumping over the
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800b930:	4698      	mov	r8, r3
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800b932:	1b0a      	subs	r2, r1, r4
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800b934:	f858 eb08 	ldr.w	lr, [r8], #8
 800b938:	f8c0 e000 	str.w	lr, [r0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800b93c:	2a10      	cmp	r2, #16
 800b93e:	d929      	bls.n	800b994 <pvPortMalloc+0xb4>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800b940:	1919      	adds	r1, r3, r4
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800b942:	0748      	lsls	r0, r1, #29
 800b944:	d00f      	beq.n	800b966 <pvPortMalloc+0x86>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 800b946:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b94a:	f383 8811 	msr	BASEPRI, r3
 800b94e:	f3bf 8f6f 	isb	sy
 800b952:	f3bf 8f4f 	dsb	sy
 800b956:	e7fe      	b.n	800b956 <pvPortMalloc+0x76>
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
 800b958:	f001 ff12 	bl	800d780 <xTaskResumeAll>
 800b95c:	f04f 0800 	mov.w	r8, #0
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
	return pvReturn;
}
 800b960:	4640      	mov	r0, r8
 800b962:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800b966:	604a      	str	r2, [r1, #4]
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800b968:	4a36      	ldr	r2, [pc, #216]	; (800ba44 <pvPortMalloc+0x164>)
						pxBlock->xBlockSize = xWantedSize;
 800b96a:	605c      	str	r4, [r3, #4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800b96c:	4614      	mov	r4, r2
 800b96e:	6812      	ldr	r2, [r2, #0]
 800b970:	4291      	cmp	r1, r2
 800b972:	d8fb      	bhi.n	800b96c <pvPortMalloc+0x8c>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800b974:	6860      	ldr	r0, [r4, #4]
 800b976:	eb04 0e00 	add.w	lr, r4, r0
 800b97a:	4571      	cmp	r1, lr
 800b97c:	d04b      	beq.n	800ba16 <pvPortMalloc+0x136>
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800b97e:	f8d1 e004 	ldr.w	lr, [r1, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800b982:	eb01 000e 	add.w	r0, r1, lr
 800b986:	4282      	cmp	r2, r0
 800b988:	d051      	beq.n	800ba2e <pvPortMalloc+0x14e>

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 800b98a:	428c      	cmp	r4, r1
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800b98c:	600a      	str	r2, [r1, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800b98e:	bf18      	it	ne
 800b990:	6021      	strne	r1, [r4, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800b992:	6859      	ldr	r1, [r3, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800b994:	4a2c      	ldr	r2, [pc, #176]	; (800ba48 <pvPortMalloc+0x168>)
 800b996:	6810      	ldr	r0, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800b998:	1a6d      	subs	r5, r5, r1
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800b99a:	4285      	cmp	r5, r0
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800b99c:	bf38      	it	cc
 800b99e:	6015      	strcc	r5, [r2, #0]
					xNumberOfSuccessfulAllocations++;
 800b9a0:	4a2a      	ldr	r2, [pc, #168]	; (800ba4c <pvPortMalloc+0x16c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800b9a2:	f8cc 5000 	str.w	r5, [ip]
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800b9a6:	4339      	orrs	r1, r7
					pxBlock->pxNextFreeBlock = NULL;
 800b9a8:	2000      	movs	r0, #0
 800b9aa:	e9c3 0100 	strd	r0, r1, [r3]
					xNumberOfSuccessfulAllocations++;
 800b9ae:	6813      	ldr	r3, [r2, #0]
 800b9b0:	3301      	adds	r3, #1
 800b9b2:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 800b9b4:	f001 fee4 	bl	800d780 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800b9b8:	f018 0f07 	tst.w	r8, #7
 800b9bc:	d0d0      	beq.n	800b960 <pvPortMalloc+0x80>
 800b9be:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b9c2:	f383 8811 	msr	BASEPRI, r3
 800b9c6:	f3bf 8f6f 	isb	sy
 800b9ca:	f3bf 8f4f 	dsb	sy
 800b9ce:	e7fe      	b.n	800b9ce <pvPortMalloc+0xee>
	uxAddress = ( size_t ) ucHeap;
 800b9d0:	4b1f      	ldr	r3, [pc, #124]	; (800ba50 <pvPortMalloc+0x170>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800b9d2:	075e      	lsls	r6, r3, #29
 800b9d4:	d118      	bne.n	800ba08 <pvPortMalloc+0x128>
 800b9d6:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
 800b9da:	4619      	mov	r1, r3
	uxAddress -= xHeapStructSize;
 800b9dc:	3e08      	subs	r6, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800b9de:	f026 0607 	bic.w	r6, r6, #7
	pxEnd = ( void * ) uxAddress;
 800b9e2:	6016      	str	r6, [r2, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800b9e4:	4a18      	ldr	r2, [pc, #96]	; (800ba48 <pvPortMalloc+0x168>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800b9e6:	4817      	ldr	r0, [pc, #92]	; (800ba44 <pvPortMalloc+0x164>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800b9e8:	4c15      	ldr	r4, [pc, #84]	; (800ba40 <pvPortMalloc+0x160>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800b9ea:	6001      	str	r1, [r0, #0]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800b9ec:	1af3      	subs	r3, r6, r3
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800b9ee:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800b9f0:	4a18      	ldr	r2, [pc, #96]	; (800ba54 <pvPortMalloc+0x174>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800b9f2:	f04f 4700 	mov.w	r7, #2147483648	; 0x80000000
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800b9f6:	6013      	str	r3, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
 800b9f8:	2200      	movs	r2, #0
 800b9fa:	6042      	str	r2, [r0, #4]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800b9fc:	6027      	str	r7, [r4, #0]
	pxEnd->pxNextFreeBlock = NULL;
 800b9fe:	e9c6 2200 	strd	r2, r2, [r6]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800ba02:	e9c1 6300 	strd	r6, r3, [r1]
}
 800ba06:	e776      	b.n	800b8f6 <pvPortMalloc+0x16>
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800ba08:	1dd9      	adds	r1, r3, #7
	pucAlignedHeap = ( uint8_t * ) uxAddress;
 800ba0a:	f021 0107 	bic.w	r1, r1, #7
 800ba0e:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800ba12:	460b      	mov	r3, r1
 800ba14:	e7e2      	b.n	800b9dc <pvPortMalloc+0xfc>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800ba16:	6849      	ldr	r1, [r1, #4]
 800ba18:	eb00 0e01 	add.w	lr, r0, r1
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800ba1c:	eb04 010e 	add.w	r1, r4, lr
 800ba20:	428a      	cmp	r2, r1
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800ba22:	f8c4 e004 	str.w	lr, [r4, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800ba26:	d001      	beq.n	800ba2c <pvPortMalloc+0x14c>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800ba28:	6022      	str	r2, [r4, #0]
	if( pxIterator != pxBlockToInsert )
 800ba2a:	e7b2      	b.n	800b992 <pvPortMalloc+0xb2>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800ba2c:	4621      	mov	r1, r4
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800ba2e:	42b2      	cmp	r2, r6
 800ba30:	d0ab      	beq.n	800b98a <pvPortMalloc+0xaa>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800ba32:	6850      	ldr	r0, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800ba34:	6812      	ldr	r2, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800ba36:	4470      	add	r0, lr
 800ba38:	6048      	str	r0, [r1, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800ba3a:	e7a6      	b.n	800b98a <pvPortMalloc+0xaa>
 800ba3c:	20003120 	.word	0x20003120
 800ba40:	20013124 	.word	0x20013124
 800ba44:	20013138 	.word	0x20013138
 800ba48:	2001312c 	.word	0x2001312c
 800ba4c:	20013130 	.word	0x20013130
 800ba50:	20003124 	.word	0x20003124
 800ba54:	20013128 	.word	0x20013128

0800ba58 <vPortFree>:
	if( pv != NULL )
 800ba58:	b1d0      	cbz	r0, 800ba90 <vPortFree+0x38>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800ba5a:	4a2c      	ldr	r2, [pc, #176]	; (800bb0c <vPortFree+0xb4>)
 800ba5c:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800ba60:	6812      	ldr	r2, [r2, #0]
 800ba62:	4213      	tst	r3, r2
 800ba64:	d00b      	beq.n	800ba7e <vPortFree+0x26>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 800ba66:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800ba6a:	b191      	cbz	r1, 800ba92 <vPortFree+0x3a>
 800ba6c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ba70:	f383 8811 	msr	BASEPRI, r3
 800ba74:	f3bf 8f6f 	isb	sy
 800ba78:	f3bf 8f4f 	dsb	sy
 800ba7c:	e7fe      	b.n	800ba7c <vPortFree+0x24>
 800ba7e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ba82:	f383 8811 	msr	BASEPRI, r3
 800ba86:	f3bf 8f6f 	isb	sy
 800ba8a:	f3bf 8f4f 	dsb	sy
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800ba8e:	e7fe      	b.n	800ba8e <vPortFree+0x36>
 800ba90:	4770      	bx	lr
{
 800ba92:	b510      	push	{r4, lr}
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800ba94:	ea23 0302 	bic.w	r3, r3, r2
{
 800ba98:	b082      	sub	sp, #8
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800ba9a:	f840 3c04 	str.w	r3, [r0, #-4]
					xFreeBytesRemaining += pxLink->xBlockSize;
 800ba9e:	4c1c      	ldr	r4, [pc, #112]	; (800bb10 <vPortFree+0xb8>)
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800baa0:	9001      	str	r0, [sp, #4]
				vTaskSuspendAll();
 800baa2:	f001 fe65 	bl	800d770 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 800baa6:	9801      	ldr	r0, [sp, #4]
 800baa8:	6822      	ldr	r2, [r4, #0]
 800baaa:	f850 1c04 	ldr.w	r1, [r0, #-4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800baae:	4b19      	ldr	r3, [pc, #100]	; (800bb14 <vPortFree+0xbc>)
					xFreeBytesRemaining += pxLink->xBlockSize;
 800bab0:	440a      	add	r2, r1
		puc -= xHeapStructSize;
 800bab2:	3808      	subs	r0, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 800bab4:	6022      	str	r2, [r4, #0]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800bab6:	461a      	mov	r2, r3
 800bab8:	681b      	ldr	r3, [r3, #0]
 800baba:	4298      	cmp	r0, r3
 800babc:	d8fb      	bhi.n	800bab6 <vPortFree+0x5e>
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800babe:	6854      	ldr	r4, [r2, #4]
 800bac0:	eb02 0e04 	add.w	lr, r2, r4
 800bac4:	4570      	cmp	r0, lr
 800bac6:	d010      	beq.n	800baea <vPortFree+0x92>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800bac8:	eb00 0c01 	add.w	ip, r0, r1
 800bacc:	4563      	cmp	r3, ip
 800bace:	d014      	beq.n	800bafa <vPortFree+0xa2>
	if( pxIterator != pxBlockToInsert )
 800bad0:	4282      	cmp	r2, r0
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800bad2:	6003      	str	r3, [r0, #0]
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800bad4:	bf18      	it	ne
 800bad6:	6010      	strne	r0, [r2, #0]
					xNumberOfSuccessfulFrees++;
 800bad8:	4a0f      	ldr	r2, [pc, #60]	; (800bb18 <vPortFree+0xc0>)
 800bada:	6813      	ldr	r3, [r2, #0]
 800badc:	3301      	adds	r3, #1
 800bade:	6013      	str	r3, [r2, #0]
}
 800bae0:	b002      	add	sp, #8
 800bae2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 800bae6:	f001 be4b 	b.w	800d780 <xTaskResumeAll>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800baea:	4421      	add	r1, r4
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800baec:	1850      	adds	r0, r2, r1
 800baee:	4283      	cmp	r3, r0
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800baf0:	6051      	str	r1, [r2, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800baf2:	d001      	beq.n	800baf8 <vPortFree+0xa0>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800baf4:	6013      	str	r3, [r2, #0]
	if( pxIterator != pxBlockToInsert )
 800baf6:	e7ef      	b.n	800bad8 <vPortFree+0x80>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800baf8:	4610      	mov	r0, r2
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800bafa:	4c08      	ldr	r4, [pc, #32]	; (800bb1c <vPortFree+0xc4>)
 800bafc:	6824      	ldr	r4, [r4, #0]
 800bafe:	42a3      	cmp	r3, r4
 800bb00:	d0e6      	beq.n	800bad0 <vPortFree+0x78>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800bb02:	e9d3 3400 	ldrd	r3, r4, [r3]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800bb06:	4421      	add	r1, r4
 800bb08:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800bb0a:	e7e1      	b.n	800bad0 <vPortFree+0x78>
 800bb0c:	20013124 	.word	0x20013124
 800bb10:	20013128 	.word	0x20013128
 800bb14:	20013138 	.word	0x20013138
 800bb18:	20013134 	.word	0x20013134
 800bb1c:	20003120 	.word	0x20003120

0800bb20 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800bb20:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800bb24:	f04f 31ff 	mov.w	r1, #4294967295
	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800bb28:	2200      	movs	r2, #0
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800bb2a:	e9c0 3101 	strd	r3, r1, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800bb2e:	e9c0 3303 	strd	r3, r3, [r0, #12]
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800bb32:	6002      	str	r2, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 800bb34:	4770      	bx	lr
 800bb36:	bf00      	nop

0800bb38 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800bb38:	2300      	movs	r3, #0
 800bb3a:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800bb3c:	4770      	bx	lr
 800bb3e:	bf00      	nop

0800bb40 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 800bb40:	6843      	ldr	r3, [r0, #4]

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 800bb42:	689a      	ldr	r2, [r3, #8]
 800bb44:	608a      	str	r2, [r1, #8]
	pxIndex->pxPrevious = pxNewListItem;

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800bb46:	6802      	ldr	r2, [r0, #0]
{
 800bb48:	b410      	push	{r4}
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800bb4a:	689c      	ldr	r4, [r3, #8]
	pxNewListItem->pxNext = pxIndex;
 800bb4c:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800bb4e:	3201      	adds	r2, #1
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800bb50:	6061      	str	r1, [r4, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800bb52:	6099      	str	r1, [r3, #8]
}
 800bb54:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxNewListItem->pxContainer = pxList;
 800bb58:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800bb5a:	6002      	str	r2, [r0, #0]
}
 800bb5c:	4770      	bx	lr
 800bb5e:	bf00      	nop

0800bb60 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 800bb60:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800bb62:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800bb64:	1c6b      	adds	r3, r5, #1
 800bb66:	d010      	beq.n	800bb8a <vListInsert+0x2a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800bb68:	f100 0308 	add.w	r3, r0, #8
 800bb6c:	461c      	mov	r4, r3
 800bb6e:	685b      	ldr	r3, [r3, #4]
 800bb70:	681a      	ldr	r2, [r3, #0]
 800bb72:	42aa      	cmp	r2, r5
 800bb74:	d9fa      	bls.n	800bb6c <vListInsert+0xc>

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800bb76:	6802      	ldr	r2, [r0, #0]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800bb78:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800bb7a:	3201      	adds	r2, #1
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 800bb7c:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800bb7e:	608c      	str	r4, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800bb80:	6061      	str	r1, [r4, #4]
	pxNewListItem->pxContainer = pxList;
 800bb82:	6108      	str	r0, [r1, #16]
}
 800bb84:	bc30      	pop	{r4, r5}
	( pxList->uxNumberOfItems )++;
 800bb86:	6002      	str	r2, [r0, #0]
}
 800bb88:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
 800bb8a:	6904      	ldr	r4, [r0, #16]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800bb8c:	6863      	ldr	r3, [r4, #4]
 800bb8e:	e7f2      	b.n	800bb76 <vListInsert+0x16>

0800bb90 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
 800bb90:	6903      	ldr	r3, [r0, #16]
{
 800bb92:	b410      	push	{r4}

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800bb94:	e9d0 1201 	ldrd	r1, r2, [r0, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800bb98:	685c      	ldr	r4, [r3, #4]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800bb9a:	608a      	str	r2, [r1, #8]
	if( pxList->pxIndex == pxItemToRemove )
 800bb9c:	4284      	cmp	r4, r0
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800bb9e:	6051      	str	r1, [r2, #4]
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 800bba0:	bf08      	it	eq
 800bba2:	605a      	streq	r2, [r3, #4]
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
	( pxList->uxNumberOfItems )--;
 800bba4:	681a      	ldr	r2, [r3, #0]

	return pxList->uxNumberOfItems;
}
 800bba6:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxItemToRemove->pxContainer = NULL;
 800bbaa:	2100      	movs	r1, #0
	( pxList->uxNumberOfItems )--;
 800bbac:	3a01      	subs	r2, #1
	pxItemToRemove->pxContainer = NULL;
 800bbae:	6101      	str	r1, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800bbb0:	601a      	str	r2, [r3, #0]
	return pxList->uxNumberOfItems;
 800bbb2:	6818      	ldr	r0, [r3, #0]
}
 800bbb4:	4770      	bx	lr
 800bbb6:	bf00      	nop

0800bbb8 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 800bbb8:	4808      	ldr	r0, [pc, #32]	; (800bbdc <prvPortStartFirstTask+0x24>)
 800bbba:	6800      	ldr	r0, [r0, #0]
 800bbbc:	6800      	ldr	r0, [r0, #0]
 800bbbe:	f380 8808 	msr	MSP, r0
 800bbc2:	f04f 0000 	mov.w	r0, #0
 800bbc6:	f380 8814 	msr	CONTROL, r0
 800bbca:	b662      	cpsie	i
 800bbcc:	b661      	cpsie	f
 800bbce:	f3bf 8f4f 	dsb	sy
 800bbd2:	f3bf 8f6f 	isb	sy
 800bbd6:	df00      	svc	0
 800bbd8:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800bbda:	0000      	.short	0x0000
 800bbdc:	e000ed08 	.word	0xe000ed08

0800bbe0 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 800bbe0:	f8df 000c 	ldr.w	r0, [pc, #12]	; 800bbf0 <vPortEnableVFP+0x10>
 800bbe4:	6801      	ldr	r1, [r0, #0]
 800bbe6:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800bbea:	6001      	str	r1, [r0, #0]
 800bbec:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800bbee:	0000      	.short	0x0000
 800bbf0:	e000ed88 	.word	0xe000ed88

0800bbf4 <prvTaskExitError>:
	configASSERT( uxCriticalNesting == ~0UL );
 800bbf4:	4b0e      	ldr	r3, [pc, #56]	; (800bc30 <prvTaskExitError+0x3c>)
 800bbf6:	681b      	ldr	r3, [r3, #0]
{
 800bbf8:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 800bbfa:	2200      	movs	r2, #0
	configASSERT( uxCriticalNesting == ~0UL );
 800bbfc:	3301      	adds	r3, #1
volatile uint32_t ulDummy = 0;
 800bbfe:	9201      	str	r2, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 800bc00:	d008      	beq.n	800bc14 <prvTaskExitError+0x20>
 800bc02:	f04f 0350 	mov.w	r3, #80	; 0x50
 800bc06:	f383 8811 	msr	BASEPRI, r3
 800bc0a:	f3bf 8f6f 	isb	sy
 800bc0e:	f3bf 8f4f 	dsb	sy
 800bc12:	e7fe      	b.n	800bc12 <prvTaskExitError+0x1e>
 800bc14:	f04f 0350 	mov.w	r3, #80	; 0x50
 800bc18:	f383 8811 	msr	BASEPRI, r3
 800bc1c:	f3bf 8f6f 	isb	sy
 800bc20:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800bc24:	9b01      	ldr	r3, [sp, #4]
 800bc26:	2b00      	cmp	r3, #0
 800bc28:	d0fc      	beq.n	800bc24 <prvTaskExitError+0x30>
}
 800bc2a:	b002      	add	sp, #8
 800bc2c:	4770      	bx	lr
 800bc2e:	bf00      	nop
 800bc30:	20000084 	.word	0x20000084

0800bc34 <pxPortInitialiseStack>:
{
 800bc34:	b410      	push	{r4}
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800bc36:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800bc3a:	4c07      	ldr	r4, [pc, #28]	; (800bc58 <pxPortInitialiseStack+0x24>)
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800bc3c:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800bc40:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800bc44:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800bc48:	e940 4103 	strd	r4, r1, [r0, #-12]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800bc4c:	e940 3209 	strd	r3, r2, [r0, #-36]	; 0x24
}
 800bc50:	f85d 4b04 	ldr.w	r4, [sp], #4
 800bc54:	3844      	subs	r0, #68	; 0x44
 800bc56:	4770      	bx	lr
 800bc58:	0800bbf5 	.word	0x0800bbf5
 800bc5c:	00000000 	.word	0x00000000

0800bc60 <SVC_Handler>:
	__asm volatile (
 800bc60:	4b07      	ldr	r3, [pc, #28]	; (800bc80 <pxCurrentTCBConst2>)
 800bc62:	6819      	ldr	r1, [r3, #0]
 800bc64:	6808      	ldr	r0, [r1, #0]
 800bc66:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bc6a:	f380 8809 	msr	PSP, r0
 800bc6e:	f3bf 8f6f 	isb	sy
 800bc72:	f04f 0000 	mov.w	r0, #0
 800bc76:	f380 8811 	msr	BASEPRI, r0
 800bc7a:	4770      	bx	lr
 800bc7c:	f3af 8000 	nop.w

0800bc80 <pxCurrentTCBConst2>:
 800bc80:	20013188 	.word	0x20013188

0800bc84 <vPortEnterCritical>:
 800bc84:	f04f 0350 	mov.w	r3, #80	; 0x50
 800bc88:	f383 8811 	msr	BASEPRI, r3
 800bc8c:	f3bf 8f6f 	isb	sy
 800bc90:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 800bc94:	4a0b      	ldr	r2, [pc, #44]	; (800bcc4 <vPortEnterCritical+0x40>)
 800bc96:	6813      	ldr	r3, [r2, #0]
 800bc98:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800bc9a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800bc9c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800bc9e:	d000      	beq.n	800bca2 <vPortEnterCritical+0x1e>
}
 800bca0:	4770      	bx	lr
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 800bca2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800bca6:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 800bcaa:	b2db      	uxtb	r3, r3
 800bcac:	2b00      	cmp	r3, #0
 800bcae:	d0f7      	beq.n	800bca0 <vPortEnterCritical+0x1c>
 800bcb0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800bcb4:	f383 8811 	msr	BASEPRI, r3
 800bcb8:	f3bf 8f6f 	isb	sy
 800bcbc:	f3bf 8f4f 	dsb	sy
 800bcc0:	e7fe      	b.n	800bcc0 <vPortEnterCritical+0x3c>
 800bcc2:	bf00      	nop
 800bcc4:	20000084 	.word	0x20000084

0800bcc8 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 800bcc8:	4a08      	ldr	r2, [pc, #32]	; (800bcec <vPortExitCritical+0x24>)
 800bcca:	6813      	ldr	r3, [r2, #0]
 800bccc:	b943      	cbnz	r3, 800bce0 <vPortExitCritical+0x18>
 800bcce:	f04f 0350 	mov.w	r3, #80	; 0x50
 800bcd2:	f383 8811 	msr	BASEPRI, r3
 800bcd6:	f3bf 8f6f 	isb	sy
 800bcda:	f3bf 8f4f 	dsb	sy
 800bcde:	e7fe      	b.n	800bcde <vPortExitCritical+0x16>
	uxCriticalNesting--;
 800bce0:	3b01      	subs	r3, #1
 800bce2:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 800bce4:	b90b      	cbnz	r3, 800bcea <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 800bce6:	f383 8811 	msr	BASEPRI, r3
}
 800bcea:	4770      	bx	lr
 800bcec:	20000084 	.word	0x20000084

0800bcf0 <PendSV_Handler>:
	__asm volatile
 800bcf0:	f3ef 8009 	mrs	r0, PSP
 800bcf4:	f3bf 8f6f 	isb	sy
 800bcf8:	4b15      	ldr	r3, [pc, #84]	; (800bd50 <pxCurrentTCBConst>)
 800bcfa:	681a      	ldr	r2, [r3, #0]
 800bcfc:	f01e 0f10 	tst.w	lr, #16
 800bd00:	bf08      	it	eq
 800bd02:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800bd06:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bd0a:	6010      	str	r0, [r2, #0]
 800bd0c:	e92d 0009 	stmdb	sp!, {r0, r3}
 800bd10:	f04f 0050 	mov.w	r0, #80	; 0x50
 800bd14:	f380 8811 	msr	BASEPRI, r0
 800bd18:	f3bf 8f4f 	dsb	sy
 800bd1c:	f3bf 8f6f 	isb	sy
 800bd20:	f001 fd54 	bl	800d7cc <vTaskSwitchContext>
 800bd24:	f04f 0000 	mov.w	r0, #0
 800bd28:	f380 8811 	msr	BASEPRI, r0
 800bd2c:	bc09      	pop	{r0, r3}
 800bd2e:	6819      	ldr	r1, [r3, #0]
 800bd30:	6808      	ldr	r0, [r1, #0]
 800bd32:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bd36:	f01e 0f10 	tst.w	lr, #16
 800bd3a:	bf08      	it	eq
 800bd3c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800bd40:	f380 8809 	msr	PSP, r0
 800bd44:	f3bf 8f6f 	isb	sy
 800bd48:	4770      	bx	lr
 800bd4a:	bf00      	nop
 800bd4c:	f3af 8000 	nop.w

0800bd50 <pxCurrentTCBConst>:
 800bd50:	20013188 	.word	0x20013188

0800bd54 <xPortSysTickHandler>:
{
 800bd54:	b508      	push	{r3, lr}
	__asm volatile
 800bd56:	f04f 0350 	mov.w	r3, #80	; 0x50
 800bd5a:	f383 8811 	msr	BASEPRI, r3
 800bd5e:	f3bf 8f6f 	isb	sy
 800bd62:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 800bd66:	f001 fd21 	bl	800d7ac <xTaskIncrementTick>
 800bd6a:	b128      	cbz	r0, 800bd78 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800bd6c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800bd70:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800bd74:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 800bd78:	2300      	movs	r3, #0
 800bd7a:	f383 8811 	msr	BASEPRI, r3
}
 800bd7e:	bd08      	pop	{r3, pc}

0800bd80 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800bd80:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 800bd84:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800bd86:	4906      	ldr	r1, [pc, #24]	; (800bda0 <vPortSetupTimerInterrupt+0x20>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800bd88:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 800bd8a:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800bd8c:	680b      	ldr	r3, [r1, #0]
 800bd8e:	4905      	ldr	r1, [pc, #20]	; (800bda4 <vPortSetupTimerInterrupt+0x24>)
 800bd90:	fba1 1303 	umull	r1, r3, r1, r3
 800bd94:	099b      	lsrs	r3, r3, #6
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800bd96:	2007      	movs	r0, #7
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800bd98:	3b01      	subs	r3, #1
 800bd9a:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800bd9c:	6110      	str	r0, [r2, #16]
}
 800bd9e:	4770      	bx	lr
 800bda0:	20000078 	.word	0x20000078
 800bda4:	10624dd3 	.word	0x10624dd3

0800bda8 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800bda8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800bdac:	4a49      	ldr	r2, [pc, #292]	; (800bed4 <xPortStartScheduler+0x12c>)
 800bdae:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 800bdb2:	4291      	cmp	r1, r2
 800bdb4:	d043      	beq.n	800be3e <xPortStartScheduler+0x96>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800bdb6:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 800bdba:	4b47      	ldr	r3, [pc, #284]	; (800bed8 <xPortStartScheduler+0x130>)
 800bdbc:	429a      	cmp	r2, r3
 800bdbe:	d035      	beq.n	800be2c <xPortStartScheduler+0x84>
{
 800bdc0:	b570      	push	{r4, r5, r6, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800bdc2:	4b46      	ldr	r3, [pc, #280]	; (800bedc <xPortStartScheduler+0x134>)
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800bdc4:	4846      	ldr	r0, [pc, #280]	; (800bee0 <xPortStartScheduler+0x138>)
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800bdc6:	781a      	ldrb	r2, [r3, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800bdc8:	4c46      	ldr	r4, [pc, #280]	; (800bee4 <xPortStartScheduler+0x13c>)
{
 800bdca:	b084      	sub	sp, #16
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800bdcc:	21ff      	movs	r1, #255	; 0xff
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800bdce:	b2d2      	uxtb	r2, r2
 800bdd0:	9202      	str	r2, [sp, #8]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800bdd2:	7019      	strb	r1, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800bdd4:	781b      	ldrb	r3, [r3, #0]
 800bdd6:	b2db      	uxtb	r3, r3
 800bdd8:	f88d 3007 	strb.w	r3, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800bddc:	f89d 3007 	ldrb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800bde0:	f89d 2007 	ldrb.w	r2, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800bde4:	f003 0350 	and.w	r3, r3, #80	; 0x50
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800bde8:	2107      	movs	r1, #7
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800bdea:	7003      	strb	r3, [r0, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800bdec:	0610      	lsls	r0, r2, #24
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800bdee:	6021      	str	r1, [r4, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800bdf0:	bf48      	it	mi
 800bdf2:	2206      	movmi	r2, #6
 800bdf4:	d511      	bpl.n	800be1a <xPortStartScheduler+0x72>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 800bdf6:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800bdfa:	005b      	lsls	r3, r3, #1
 800bdfc:	b2db      	uxtb	r3, r3
 800bdfe:	f88d 3007 	strb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800be02:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800be06:	0609      	lsls	r1, r1, #24
 800be08:	4610      	mov	r0, r2
 800be0a:	f102 32ff 	add.w	r2, r2, #4294967295
 800be0e:	d4f2      	bmi.n	800bdf6 <xPortStartScheduler+0x4e>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 800be10:	2803      	cmp	r0, #3
 800be12:	6020      	str	r0, [r4, #0]
 800be14:	f88d 3007 	strb.w	r3, [sp, #7]
 800be18:	d01a      	beq.n	800be50 <xPortStartScheduler+0xa8>
	__asm volatile
 800be1a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800be1e:	f383 8811 	msr	BASEPRI, r3
 800be22:	f3bf 8f6f 	isb	sy
 800be26:	f3bf 8f4f 	dsb	sy
 800be2a:	e7fe      	b.n	800be2a <xPortStartScheduler+0x82>
 800be2c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800be30:	f383 8811 	msr	BASEPRI, r3
 800be34:	f3bf 8f6f 	isb	sy
 800be38:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800be3c:	e7fe      	b.n	800be3c <xPortStartScheduler+0x94>
 800be3e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800be42:	f383 8811 	msr	BASEPRI, r3
 800be46:	f3bf 8f6f 	isb	sy
 800be4a:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800be4e:	e7fe      	b.n	800be4e <xPortStartScheduler+0xa6>
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800be50:	9b02      	ldr	r3, [sp, #8]
 800be52:	4a22      	ldr	r2, [pc, #136]	; (800bedc <xPortStartScheduler+0x134>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800be54:	f04f 25e0 	mov.w	r5, #3758153728	; 0xe000e000
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800be58:	f44f 7140 	mov.w	r1, #768	; 0x300
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800be5c:	b2db      	uxtb	r3, r3
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800be5e:	6021      	str	r1, [r4, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800be60:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800be62:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 800be66:	4c20      	ldr	r4, [pc, #128]	; (800bee8 <xPortStartScheduler+0x140>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800be68:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800be6c:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 800be70:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
 800be74:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 800be78:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 800be7c:	2600      	movs	r6, #0
	vPortSetupTimerInterrupt();
 800be7e:	f7ff ff7f 	bl	800bd80 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 800be82:	6026      	str	r6, [r4, #0]
	vPortEnableVFP();
 800be84:	f7ff feac 	bl	800bbe0 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800be88:	f8d5 3f34 	ldr.w	r3, [r5, #3892]	; 0xf34
 800be8c:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 800be90:	f8c5 3f34 	str.w	r3, [r5, #3892]	; 0xf34
	prvPortStartFirstTask();
 800be94:	f7ff fe90 	bl	800bbb8 <prvPortStartFirstTask>
	vTaskSwitchContext();
 800be98:	f001 fc98 	bl	800d7cc <vTaskSwitchContext>
	configASSERT( uxCriticalNesting == ~0UL );
 800be9c:	6823      	ldr	r3, [r4, #0]
volatile uint32_t ulDummy = 0;
 800be9e:	9603      	str	r6, [sp, #12]
	configASSERT( uxCriticalNesting == ~0UL );
 800bea0:	3301      	adds	r3, #1
 800bea2:	d008      	beq.n	800beb6 <xPortStartScheduler+0x10e>
 800bea4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800bea8:	f383 8811 	msr	BASEPRI, r3
 800beac:	f3bf 8f6f 	isb	sy
 800beb0:	f3bf 8f4f 	dsb	sy
 800beb4:	e7fe      	b.n	800beb4 <xPortStartScheduler+0x10c>
 800beb6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800beba:	f383 8811 	msr	BASEPRI, r3
 800bebe:	f3bf 8f6f 	isb	sy
 800bec2:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800bec6:	9b03      	ldr	r3, [sp, #12]
 800bec8:	2b00      	cmp	r3, #0
 800beca:	d0fc      	beq.n	800bec6 <xPortStartScheduler+0x11e>
}
 800becc:	2000      	movs	r0, #0
 800bece:	b004      	add	sp, #16
 800bed0:	bd70      	pop	{r4, r5, r6, pc}
 800bed2:	bf00      	nop
 800bed4:	410fc271 	.word	0x410fc271
 800bed8:	410fc270 	.word	0x410fc270
 800bedc:	e000e400 	.word	0xe000e400
 800bee0:	20013140 	.word	0x20013140
 800bee4:	20013144 	.word	0x20013144
 800bee8:	20000084 	.word	0x20000084

0800beec <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 800beec:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 800bef0:	2b0f      	cmp	r3, #15
 800bef2:	d90e      	bls.n	800bf12 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800bef4:	4911      	ldr	r1, [pc, #68]	; (800bf3c <vPortValidateInterruptPriority+0x50>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800bef6:	4a12      	ldr	r2, [pc, #72]	; (800bf40 <vPortValidateInterruptPriority+0x54>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800bef8:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800befa:	7812      	ldrb	r2, [r2, #0]
 800befc:	429a      	cmp	r2, r3
 800befe:	d908      	bls.n	800bf12 <vPortValidateInterruptPriority+0x26>
 800bf00:	f04f 0350 	mov.w	r3, #80	; 0x50
 800bf04:	f383 8811 	msr	BASEPRI, r3
 800bf08:	f3bf 8f6f 	isb	sy
 800bf0c:	f3bf 8f4f 	dsb	sy
 800bf10:	e7fe      	b.n	800bf10 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 800bf12:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800bf16:	4a0b      	ldr	r2, [pc, #44]	; (800bf44 <vPortValidateInterruptPriority+0x58>)
 800bf18:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 800bf1c:	6812      	ldr	r2, [r2, #0]
 800bf1e:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800bf22:	4293      	cmp	r3, r2
 800bf24:	d908      	bls.n	800bf38 <vPortValidateInterruptPriority+0x4c>
 800bf26:	f04f 0350 	mov.w	r3, #80	; 0x50
 800bf2a:	f383 8811 	msr	BASEPRI, r3
 800bf2e:	f3bf 8f6f 	isb	sy
 800bf32:	f3bf 8f4f 	dsb	sy
 800bf36:	e7fe      	b.n	800bf36 <vPortValidateInterruptPriority+0x4a>
	}
 800bf38:	4770      	bx	lr
 800bf3a:	bf00      	nop
 800bf3c:	e000e3f0 	.word	0xe000e3f0
 800bf40:	20013140 	.word	0x20013140
 800bf44:	20013144 	.word	0x20013144

0800bf48 <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
 800bf48:	b570      	push	{r4, r5, r6, lr}
 800bf4a:	4604      	mov	r4, r0

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800bf4c:	6c00      	ldr	r0, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800bf4e:	6ba6      	ldr	r6, [r4, #56]	; 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800bf50:	b920      	cbnz	r0, 800bf5c <prvCopyDataToQueue+0x14>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800bf52:	6825      	ldr	r5, [r4, #0]
 800bf54:	b34d      	cbz	r5, 800bfaa <prvCopyDataToQueue+0x62>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800bf56:	3601      	adds	r6, #1
 800bf58:	63a6      	str	r6, [r4, #56]	; 0x38

	return xReturn;
}
 800bf5a:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 800bf5c:	4615      	mov	r5, r2
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800bf5e:	4602      	mov	r2, r0
	else if( xPosition == queueSEND_TO_BACK )
 800bf60:	b97d      	cbnz	r5, 800bf82 <prvCopyDataToQueue+0x3a>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800bf62:	6860      	ldr	r0, [r4, #4]
 800bf64:	f01b fbaf 	bl	80276c6 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800bf68:	6863      	ldr	r3, [r4, #4]
 800bf6a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800bf6c:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800bf6e:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800bf70:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800bf72:	4293      	cmp	r3, r2
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800bf74:	bf24      	itt	cs
 800bf76:	6823      	ldrcs	r3, [r4, #0]
 800bf78:	6063      	strcs	r3, [r4, #4]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800bf7a:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 800bf7c:	4628      	mov	r0, r5
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800bf7e:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800bf80:	bd70      	pop	{r4, r5, r6, pc}
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 800bf82:	68e0      	ldr	r0, [r4, #12]
 800bf84:	f01b fb9f 	bl	80276c6 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800bf88:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800bf8a:	68e3      	ldr	r3, [r4, #12]
 800bf8c:	4251      	negs	r1, r2
 800bf8e:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800bf90:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800bf92:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800bf94:	4293      	cmp	r3, r2
 800bf96:	d202      	bcs.n	800bf9e <prvCopyDataToQueue+0x56>
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 800bf98:	68a3      	ldr	r3, [r4, #8]
 800bf9a:	440b      	add	r3, r1
 800bf9c:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800bf9e:	2d02      	cmp	r5, #2
 800bfa0:	d008      	beq.n	800bfb4 <prvCopyDataToQueue+0x6c>
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800bfa2:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 800bfa4:	2000      	movs	r0, #0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800bfa6:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800bfa8:	bd70      	pop	{r4, r5, r6, pc}
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800bfaa:	68a0      	ldr	r0, [r4, #8]
 800bfac:	f001 fde0 	bl	800db70 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 800bfb0:	60a5      	str	r5, [r4, #8]
 800bfb2:	e7d0      	b.n	800bf56 <prvCopyDataToQueue+0xe>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800bfb4:	2e01      	cmp	r6, #1
 800bfb6:	bf38      	it	cc
 800bfb8:	2601      	movcc	r6, #1
BaseType_t xReturn = pdFALSE;
 800bfba:	2000      	movs	r0, #0
 800bfbc:	e7cc      	b.n	800bf58 <prvCopyDataToQueue+0x10>
 800bfbe:	bf00      	nop

0800bfc0 <xQueueGenericCreateStatic>:
	{
 800bfc0:	b530      	push	{r4, r5, lr}
 800bfc2:	b083      	sub	sp, #12
 800bfc4:	f89d 4018 	ldrb.w	r4, [sp, #24]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800bfc8:	b940      	cbnz	r0, 800bfdc <xQueueGenericCreateStatic+0x1c>
 800bfca:	f04f 0350 	mov.w	r3, #80	; 0x50
 800bfce:	f383 8811 	msr	BASEPRI, r3
 800bfd2:	f3bf 8f6f 	isb	sy
 800bfd6:	f3bf 8f4f 	dsb	sy
 800bfda:	e7fe      	b.n	800bfda <xQueueGenericCreateStatic+0x1a>
		configASSERT( pxStaticQueue != NULL );
 800bfdc:	461d      	mov	r5, r3
 800bfde:	b17b      	cbz	r3, 800c000 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800bfe0:	b302      	cbz	r2, 800c024 <xQueueGenericCreateStatic+0x64>
 800bfe2:	b1b1      	cbz	r1, 800c012 <xQueueGenericCreateStatic+0x52>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800bfe4:	2350      	movs	r3, #80	; 0x50
 800bfe6:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800bfe8:	9b01      	ldr	r3, [sp, #4]
 800bfea:	2b50      	cmp	r3, #80	; 0x50
 800bfec:	d023      	beq.n	800c036 <xQueueGenericCreateStatic+0x76>
 800bfee:	f04f 0350 	mov.w	r3, #80	; 0x50
 800bff2:	f383 8811 	msr	BASEPRI, r3
 800bff6:	f3bf 8f6f 	isb	sy
 800bffa:	f3bf 8f4f 	dsb	sy
 800bffe:	e7fe      	b.n	800bffe <xQueueGenericCreateStatic+0x3e>
 800c000:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c004:	f383 8811 	msr	BASEPRI, r3
 800c008:	f3bf 8f6f 	isb	sy
 800c00c:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 800c010:	e7fe      	b.n	800c010 <xQueueGenericCreateStatic+0x50>
 800c012:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c016:	f383 8811 	msr	BASEPRI, r3
 800c01a:	f3bf 8f6f 	isb	sy
 800c01e:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800c022:	e7fe      	b.n	800c022 <xQueueGenericCreateStatic+0x62>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800c024:	bb89      	cbnz	r1, 800c08a <xQueueGenericCreateStatic+0xca>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800c026:	2250      	movs	r2, #80	; 0x50
 800c028:	9201      	str	r2, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800c02a:	9a01      	ldr	r2, [sp, #4]
 800c02c:	2a50      	cmp	r2, #80	; 0x50
 800c02e:	d1de      	bne.n	800bfee <xQueueGenericCreateStatic+0x2e>
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800c030:	9a01      	ldr	r2, [sp, #4]
 800c032:	462a      	mov	r2, r5
 800c034:	e000      	b.n	800c038 <xQueueGenericCreateStatic+0x78>
 800c036:	9b01      	ldr	r3, [sp, #4]
	if( uxItemSize == ( UBaseType_t ) 0 )
 800c038:	602a      	str	r2, [r5, #0]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800c03a:	2201      	movs	r2, #1
	pxNewQueue->uxItemSize = uxItemSize;
 800c03c:	e9c5 010f 	strd	r0, r1, [r5, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800c040:	f885 2046 	strb.w	r2, [r5, #70]	; 0x46
	taskENTER_CRITICAL();
 800c044:	f7ff fe1e 	bl	800bc84 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c048:	e9d5 120f 	ldrd	r1, r2, [r5, #60]	; 0x3c
 800c04c:	6828      	ldr	r0, [r5, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800c04e:	6068      	str	r0, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c050:	fb02 f101 	mul.w	r1, r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c054:	1a8a      	subs	r2, r1, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c056:	4401      	add	r1, r0
 800c058:	60a9      	str	r1, [r5, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800c05a:	2100      	movs	r1, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c05c:	4402      	add	r2, r0
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800c05e:	63a9      	str	r1, [r5, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800c060:	21ff      	movs	r1, #255	; 0xff
 800c062:	f885 1044 	strb.w	r1, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c066:	60ea      	str	r2, [r5, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 800c068:	f885 1045 	strb.w	r1, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800c06c:	f105 0010 	add.w	r0, r5, #16
 800c070:	f7ff fd56 	bl	800bb20 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800c074:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800c078:	f7ff fd52 	bl	800bb20 <vListInitialise>
	taskEXIT_CRITICAL();
 800c07c:	f7ff fe24 	bl	800bcc8 <vPortExitCritical>
	}
 800c080:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 800c082:	f885 404c 	strb.w	r4, [r5, #76]	; 0x4c
	}
 800c086:	b003      	add	sp, #12
 800c088:	bd30      	pop	{r4, r5, pc}
 800c08a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c08e:	f383 8811 	msr	BASEPRI, r3
 800c092:	f3bf 8f6f 	isb	sy
 800c096:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800c09a:	e7fe      	b.n	800c09a <xQueueGenericCreateStatic+0xda>

0800c09c <xQueueGenericCreate>:
	{
 800c09c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800c09e:	b940      	cbnz	r0, 800c0b2 <xQueueGenericCreate+0x16>
 800c0a0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c0a4:	f383 8811 	msr	BASEPRI, r3
 800c0a8:	f3bf 8f6f 	isb	sy
 800c0ac:	f3bf 8f4f 	dsb	sy
 800c0b0:	e7fe      	b.n	800c0b0 <xQueueGenericCreate+0x14>
 800c0b2:	4605      	mov	r5, r0
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800c0b4:	fb01 f000 	mul.w	r0, r1, r0
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800c0b8:	3050      	adds	r0, #80	; 0x50
 800c0ba:	460e      	mov	r6, r1
 800c0bc:	4617      	mov	r7, r2
 800c0be:	f7ff fc0f 	bl	800b8e0 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800c0c2:	4604      	mov	r4, r0
 800c0c4:	b340      	cbz	r0, 800c118 <xQueueGenericCreate+0x7c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800c0c6:	2300      	movs	r3, #0
 800c0c8:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 800c0cc:	b336      	cbz	r6, 800c11c <xQueueGenericCreate+0x80>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c0ce:	f100 0350 	add.w	r3, r0, #80	; 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 800c0d2:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800c0d4:	e9c4 560f 	strd	r5, r6, [r4, #60]	; 0x3c
	taskENTER_CRITICAL();
 800c0d8:	f7ff fdd4 	bl	800bc84 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c0dc:	e9d4 230f 	ldrd	r2, r3, [r4, #60]	; 0x3c
 800c0e0:	6821      	ldr	r1, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800c0e2:	6061      	str	r1, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c0e4:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c0e8:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c0ea:	440a      	add	r2, r1
 800c0ec:	60a2      	str	r2, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800c0ee:	2200      	movs	r2, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c0f0:	440b      	add	r3, r1
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800c0f2:	63a2      	str	r2, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800c0f4:	22ff      	movs	r2, #255	; 0xff
 800c0f6:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c0fa:	60e3      	str	r3, [r4, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 800c0fc:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800c100:	f104 0010 	add.w	r0, r4, #16
 800c104:	f7ff fd0c 	bl	800bb20 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800c108:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800c10c:	f7ff fd08 	bl	800bb20 <vListInitialise>
	taskEXIT_CRITICAL();
 800c110:	f7ff fdda 	bl	800bcc8 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 800c114:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 800c118:	4620      	mov	r0, r4
 800c11a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c11c:	4603      	mov	r3, r0
 800c11e:	e7d8      	b.n	800c0d2 <xQueueGenericCreate+0x36>

0800c120 <xQueueCreateCountingSemaphoreStatic>:
		configASSERT( uxMaxCount != 0 );
 800c120:	b940      	cbnz	r0, 800c134 <xQueueCreateCountingSemaphoreStatic+0x14>
 800c122:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c126:	f383 8811 	msr	BASEPRI, r3
 800c12a:	f3bf 8f6f 	isb	sy
 800c12e:	f3bf 8f4f 	dsb	sy
 800c132:	e7fe      	b.n	800c132 <xQueueCreateCountingSemaphoreStatic+0x12>
		configASSERT( uxInitialCount <= uxMaxCount );
 800c134:	4288      	cmp	r0, r1
 800c136:	d208      	bcs.n	800c14a <xQueueCreateCountingSemaphoreStatic+0x2a>
 800c138:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c13c:	f383 8811 	msr	BASEPRI, r3
 800c140:	f3bf 8f6f 	isb	sy
 800c144:	f3bf 8f4f 	dsb	sy
 800c148:	e7fe      	b.n	800c148 <xQueueCreateCountingSemaphoreStatic+0x28>
	{
 800c14a:	b530      	push	{r4, r5, lr}
 800c14c:	4615      	mov	r5, r2
 800c14e:	b085      	sub	sp, #20
		configASSERT( pxStaticQueue != NULL );
 800c150:	2a00      	cmp	r2, #0
 800c152:	d03c      	beq.n	800c1ce <xQueueCreateCountingSemaphoreStatic+0xae>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800c154:	2350      	movs	r3, #80	; 0x50
 800c156:	9303      	str	r3, [sp, #12]
			configASSERT( xSize == sizeof( Queue_t ) );
 800c158:	9b03      	ldr	r3, [sp, #12]
 800c15a:	2b50      	cmp	r3, #80	; 0x50
 800c15c:	d008      	beq.n	800c170 <xQueueCreateCountingSemaphoreStatic+0x50>
 800c15e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c162:	f383 8811 	msr	BASEPRI, r3
 800c166:	f3bf 8f6f 	isb	sy
 800c16a:	f3bf 8f4f 	dsb	sy
 800c16e:	e7fe      	b.n	800c16e <xQueueCreateCountingSemaphoreStatic+0x4e>
	pxNewQueue->uxItemSize = uxItemSize;
 800c170:	2400      	movs	r4, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800c172:	2301      	movs	r3, #1
 800c174:	f882 3046 	strb.w	r3, [r2, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800c178:	602a      	str	r2, [r5, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800c17a:	e9c2 040f 	strd	r0, r4, [r2, #60]	; 0x3c
 800c17e:	9101      	str	r1, [sp, #4]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800c180:	9b03      	ldr	r3, [sp, #12]
	taskENTER_CRITICAL();
 800c182:	f7ff fd7f 	bl	800bc84 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c186:	e9d5 030f 	ldrd	r0, r3, [r5, #60]	; 0x3c
 800c18a:	682a      	ldr	r2, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800c18c:	63ac      	str	r4, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c18e:	fb03 f000 	mul.w	r0, r3, r0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c192:	1ac3      	subs	r3, r0, r3
 800c194:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c196:	4410      	add	r0, r2
		pxQueue->cRxLock = queueUNLOCKED;
 800c198:	f04f 0eff 	mov.w	lr, #255	; 0xff
 800c19c:	f885 e044 	strb.w	lr, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c1a0:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800c1a2:	606a      	str	r2, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 800c1a4:	f885 e045 	strb.w	lr, [r5, #69]	; 0x45
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c1a8:	60a8      	str	r0, [r5, #8]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800c1aa:	f105 0010 	add.w	r0, r5, #16
 800c1ae:	f7ff fcb7 	bl	800bb20 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800c1b2:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800c1b6:	f7ff fcb3 	bl	800bb20 <vListInitialise>
	taskEXIT_CRITICAL();
 800c1ba:	f7ff fd85 	bl	800bcc8 <vPortExitCritical>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800c1be:	9901      	ldr	r1, [sp, #4]
 800c1c0:	63a9      	str	r1, [r5, #56]	; 0x38
		pxNewQueue->ucQueueType = ucQueueType;
 800c1c2:	2302      	movs	r3, #2
	}
 800c1c4:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 800c1c6:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
	}
 800c1ca:	b005      	add	sp, #20
 800c1cc:	bd30      	pop	{r4, r5, pc}
 800c1ce:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c1d2:	f383 8811 	msr	BASEPRI, r3
 800c1d6:	f3bf 8f6f 	isb	sy
 800c1da:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 800c1de:	e7fe      	b.n	800c1de <xQueueCreateCountingSemaphoreStatic+0xbe>

0800c1e0 <xQueueCreateCountingSemaphore>:
	{
 800c1e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxMaxCount != 0 );
 800c1e2:	b940      	cbnz	r0, 800c1f6 <xQueueCreateCountingSemaphore+0x16>
 800c1e4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c1e8:	f383 8811 	msr	BASEPRI, r3
 800c1ec:	f3bf 8f6f 	isb	sy
 800c1f0:	f3bf 8f4f 	dsb	sy
 800c1f4:	e7fe      	b.n	800c1f4 <xQueueCreateCountingSemaphore+0x14>
		configASSERT( uxInitialCount <= uxMaxCount );
 800c1f6:	4288      	cmp	r0, r1
 800c1f8:	460e      	mov	r6, r1
 800c1fa:	4604      	mov	r4, r0
 800c1fc:	d208      	bcs.n	800c210 <xQueueCreateCountingSemaphore+0x30>
 800c1fe:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c202:	f383 8811 	msr	BASEPRI, r3
 800c206:	f3bf 8f6f 	isb	sy
 800c20a:	f3bf 8f4f 	dsb	sy
 800c20e:	e7fe      	b.n	800c20e <xQueueCreateCountingSemaphore+0x2e>
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800c210:	2050      	movs	r0, #80	; 0x50
 800c212:	f7ff fb65 	bl	800b8e0 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800c216:	4605      	mov	r5, r0
 800c218:	b330      	cbz	r0, 800c268 <xQueueCreateCountingSemaphore+0x88>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800c21a:	2700      	movs	r7, #0
	pxNewQueue->uxItemSize = uxItemSize;
 800c21c:	e9c0 470f 	strd	r4, r7, [r0, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800c220:	f880 7046 	strb.w	r7, [r0, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800c224:	6000      	str	r0, [r0, #0]
	taskENTER_CRITICAL();
 800c226:	f7ff fd2d 	bl	800bc84 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c22a:	e9d5 230f 	ldrd	r2, r3, [r5, #60]	; 0x3c
 800c22e:	6829      	ldr	r1, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800c230:	63af      	str	r7, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c232:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c236:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c238:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c23a:	440b      	add	r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c23c:	60aa      	str	r2, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
 800c23e:	22ff      	movs	r2, #255	; 0xff
 800c240:	f885 2044 	strb.w	r2, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c244:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800c246:	6069      	str	r1, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 800c248:	f885 2045 	strb.w	r2, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800c24c:	f105 0010 	add.w	r0, r5, #16
 800c250:	f7ff fc66 	bl	800bb20 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800c254:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800c258:	f7ff fc62 	bl	800bb20 <vListInitialise>
	taskEXIT_CRITICAL();
 800c25c:	f7ff fd34 	bl	800bcc8 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 800c260:	2302      	movs	r3, #2
 800c262:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800c266:	63ae      	str	r6, [r5, #56]	; 0x38
	}
 800c268:	4628      	mov	r0, r5
 800c26a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800c26c <xQueueGenericSend>:
{
 800c26c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c270:	b085      	sub	sp, #20
 800c272:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
 800c274:	2800      	cmp	r0, #0
 800c276:	f000 80a4 	beq.w	800c3c2 <xQueueGenericSend+0x156>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800c27a:	4688      	mov	r8, r1
 800c27c:	461f      	mov	r7, r3
 800c27e:	4604      	mov	r4, r0
 800c280:	2900      	cmp	r1, #0
 800c282:	f000 8091 	beq.w	800c3a8 <xQueueGenericSend+0x13c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800c286:	2f02      	cmp	r7, #2
 800c288:	d10b      	bne.n	800c2a2 <xQueueGenericSend+0x36>
 800c28a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800c28c:	2b01      	cmp	r3, #1
 800c28e:	d008      	beq.n	800c2a2 <xQueueGenericSend+0x36>
 800c290:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c294:	f383 8811 	msr	BASEPRI, r3
 800c298:	f3bf 8f6f 	isb	sy
 800c29c:	f3bf 8f4f 	dsb	sy
 800c2a0:	e7fe      	b.n	800c2a0 <xQueueGenericSend+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800c2a2:	f001 fc0f 	bl	800dac4 <xTaskGetSchedulerState>
 800c2a6:	4605      	mov	r5, r0
 800c2a8:	2800      	cmp	r0, #0
 800c2aa:	f000 8093 	beq.w	800c3d4 <xQueueGenericSend+0x168>
 800c2ae:	2500      	movs	r5, #0
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800c2b0:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 800c2b4:	f7ff fce6 	bl	800bc84 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800c2b8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c2ba:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800c2bc:	429a      	cmp	r2, r3
 800c2be:	f0c0 80ef 	bcc.w	800c4a0 <xQueueGenericSend+0x234>
 800c2c2:	2f02      	cmp	r7, #2
 800c2c4:	f000 80ec 	beq.w	800c4a0 <xQueueGenericSend+0x234>
				if( xTicksToWait == ( TickType_t ) 0 )
 800c2c8:	9801      	ldr	r0, [sp, #4]
 800c2ca:	2800      	cmp	r0, #0
 800c2cc:	f000 8101 	beq.w	800c4d2 <xQueueGenericSend+0x266>
				else if( xEntryTimeSet == pdFALSE )
 800c2d0:	2d00      	cmp	r5, #0
 800c2d2:	f000 80e1 	beq.w	800c498 <xQueueGenericSend+0x22c>
		taskEXIT_CRITICAL();
 800c2d6:	f7ff fcf7 	bl	800bcc8 <vPortExitCritical>
		vTaskSuspendAll();
 800c2da:	f001 fa49 	bl	800d770 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800c2de:	f7ff fcd1 	bl	800bc84 <vPortEnterCritical>
 800c2e2:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800c2e6:	2bff      	cmp	r3, #255	; 0xff
 800c2e8:	bf04      	itt	eq
 800c2ea:	2300      	moveq	r3, #0
 800c2ec:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800c2f0:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800c2f4:	2bff      	cmp	r3, #255	; 0xff
 800c2f6:	bf04      	itt	eq
 800c2f8:	2300      	moveq	r3, #0
 800c2fa:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800c2fe:	f7ff fce3 	bl	800bcc8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800c302:	a901      	add	r1, sp, #4
 800c304:	a802      	add	r0, sp, #8
 800c306:	f001 fb8f 	bl	800da28 <xTaskCheckForTimeOut>
 800c30a:	2800      	cmp	r0, #0
 800c30c:	f040 80e6 	bne.w	800c4dc <xQueueGenericSend+0x270>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800c310:	f7ff fcb8 	bl	800bc84 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 800c314:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c316:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800c318:	429a      	cmp	r2, r3
 800c31a:	d068      	beq.n	800c3ee <xQueueGenericSend+0x182>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800c31c:	f7ff fcd4 	bl	800bcc8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800c320:	f7ff fcb0 	bl	800bc84 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800c324:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
 800c328:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800c32a:	2d00      	cmp	r5, #0
 800c32c:	dc04      	bgt.n	800c338 <xQueueGenericSend+0xcc>
 800c32e:	e011      	b.n	800c354 <xQueueGenericSend+0xe8>
			--cTxLock;
 800c330:	1e6a      	subs	r2, r5, #1
 800c332:	b2d3      	uxtb	r3, r2
 800c334:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800c336:	b16b      	cbz	r3, 800c354 <xQueueGenericSend+0xe8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800c338:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800c33a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800c33c:	b153      	cbz	r3, 800c354 <xQueueGenericSend+0xe8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800c33e:	f001 fb1f 	bl	800d980 <xTaskRemoveFromEventList>
 800c342:	2800      	cmp	r0, #0
 800c344:	d0f4      	beq.n	800c330 <xQueueGenericSend+0xc4>
						vTaskMissedYield();
 800c346:	f001 fbb7 	bl	800dab8 <vTaskMissedYield>
			--cTxLock;
 800c34a:	1e6a      	subs	r2, r5, #1
 800c34c:	b2d3      	uxtb	r3, r2
 800c34e:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800c350:	2b00      	cmp	r3, #0
 800c352:	d1f1      	bne.n	800c338 <xQueueGenericSend+0xcc>
		pxQueue->cTxLock = queueUNLOCKED;
 800c354:	23ff      	movs	r3, #255	; 0xff
 800c356:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800c35a:	f7ff fcb5 	bl	800bcc8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800c35e:	f7ff fc91 	bl	800bc84 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800c362:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 800c366:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800c368:	2d00      	cmp	r5, #0
 800c36a:	dd14      	ble.n	800c396 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800c36c:	f104 0910 	add.w	r9, r4, #16
 800c370:	e003      	b.n	800c37a <xQueueGenericSend+0x10e>
				--cRxLock;
 800c372:	1e6a      	subs	r2, r5, #1
 800c374:	b2d3      	uxtb	r3, r2
 800c376:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800c378:	b16b      	cbz	r3, 800c396 <xQueueGenericSend+0x12a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800c37a:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800c37c:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800c37e:	b153      	cbz	r3, 800c396 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800c380:	f001 fafe 	bl	800d980 <xTaskRemoveFromEventList>
 800c384:	2800      	cmp	r0, #0
 800c386:	d0f4      	beq.n	800c372 <xQueueGenericSend+0x106>
					vTaskMissedYield();
 800c388:	f001 fb96 	bl	800dab8 <vTaskMissedYield>
				--cRxLock;
 800c38c:	1e6a      	subs	r2, r5, #1
 800c38e:	b2d3      	uxtb	r3, r2
 800c390:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800c392:	2b00      	cmp	r3, #0
 800c394:	d1f1      	bne.n	800c37a <xQueueGenericSend+0x10e>
		pxQueue->cRxLock = queueUNLOCKED;
 800c396:	23ff      	movs	r3, #255	; 0xff
 800c398:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800c39c:	f7ff fc94 	bl	800bcc8 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800c3a0:	f001 f9ee 	bl	800d780 <xTaskResumeAll>
 800c3a4:	2501      	movs	r5, #1
 800c3a6:	e785      	b.n	800c2b4 <xQueueGenericSend+0x48>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800c3a8:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800c3aa:	2b00      	cmp	r3, #0
 800c3ac:	f43f af6b 	beq.w	800c286 <xQueueGenericSend+0x1a>
 800c3b0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c3b4:	f383 8811 	msr	BASEPRI, r3
 800c3b8:	f3bf 8f6f 	isb	sy
 800c3bc:	f3bf 8f4f 	dsb	sy
 800c3c0:	e7fe      	b.n	800c3c0 <xQueueGenericSend+0x154>
 800c3c2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c3c6:	f383 8811 	msr	BASEPRI, r3
 800c3ca:	f3bf 8f6f 	isb	sy
 800c3ce:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800c3d2:	e7fe      	b.n	800c3d2 <xQueueGenericSend+0x166>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800c3d4:	9b01      	ldr	r3, [sp, #4]
 800c3d6:	2b00      	cmp	r3, #0
 800c3d8:	f43f af6a 	beq.w	800c2b0 <xQueueGenericSend+0x44>
 800c3dc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c3e0:	f383 8811 	msr	BASEPRI, r3
 800c3e4:	f3bf 8f6f 	isb	sy
 800c3e8:	f3bf 8f4f 	dsb	sy
 800c3ec:	e7fe      	b.n	800c3ec <xQueueGenericSend+0x180>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800c3ee:	f104 0910 	add.w	r9, r4, #16
	taskEXIT_CRITICAL();
 800c3f2:	f7ff fc69 	bl	800bcc8 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800c3f6:	9901      	ldr	r1, [sp, #4]
 800c3f8:	4648      	mov	r0, r9
 800c3fa:	f001 fa33 	bl	800d864 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800c3fe:	f7ff fc41 	bl	800bc84 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800c402:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800c406:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800c408:	2d00      	cmp	r5, #0
 800c40a:	dc04      	bgt.n	800c416 <xQueueGenericSend+0x1aa>
 800c40c:	e011      	b.n	800c432 <xQueueGenericSend+0x1c6>
			--cTxLock;
 800c40e:	1e6b      	subs	r3, r5, #1
 800c410:	b2da      	uxtb	r2, r3
 800c412:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800c414:	b16a      	cbz	r2, 800c432 <xQueueGenericSend+0x1c6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800c416:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800c418:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800c41a:	b153      	cbz	r3, 800c432 <xQueueGenericSend+0x1c6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800c41c:	f001 fab0 	bl	800d980 <xTaskRemoveFromEventList>
 800c420:	2800      	cmp	r0, #0
 800c422:	d0f4      	beq.n	800c40e <xQueueGenericSend+0x1a2>
						vTaskMissedYield();
 800c424:	f001 fb48 	bl	800dab8 <vTaskMissedYield>
			--cTxLock;
 800c428:	1e6b      	subs	r3, r5, #1
 800c42a:	b2da      	uxtb	r2, r3
 800c42c:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800c42e:	2a00      	cmp	r2, #0
 800c430:	d1f1      	bne.n	800c416 <xQueueGenericSend+0x1aa>
		pxQueue->cTxLock = queueUNLOCKED;
 800c432:	23ff      	movs	r3, #255	; 0xff
 800c434:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800c438:	f7ff fc46 	bl	800bcc8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800c43c:	f7ff fc22 	bl	800bc84 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800c440:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800c444:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800c446:	2d00      	cmp	r5, #0
 800c448:	dc04      	bgt.n	800c454 <xQueueGenericSend+0x1e8>
 800c44a:	e011      	b.n	800c470 <xQueueGenericSend+0x204>
				--cRxLock;
 800c44c:	1e6b      	subs	r3, r5, #1
 800c44e:	b2da      	uxtb	r2, r3
 800c450:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800c452:	b16a      	cbz	r2, 800c470 <xQueueGenericSend+0x204>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800c454:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800c456:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800c458:	b153      	cbz	r3, 800c470 <xQueueGenericSend+0x204>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800c45a:	f001 fa91 	bl	800d980 <xTaskRemoveFromEventList>
 800c45e:	2800      	cmp	r0, #0
 800c460:	d0f4      	beq.n	800c44c <xQueueGenericSend+0x1e0>
					vTaskMissedYield();
 800c462:	f001 fb29 	bl	800dab8 <vTaskMissedYield>
				--cRxLock;
 800c466:	1e6b      	subs	r3, r5, #1
 800c468:	b2da      	uxtb	r2, r3
 800c46a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800c46c:	2a00      	cmp	r2, #0
 800c46e:	d1f1      	bne.n	800c454 <xQueueGenericSend+0x1e8>
		pxQueue->cRxLock = queueUNLOCKED;
 800c470:	23ff      	movs	r3, #255	; 0xff
 800c472:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800c476:	f7ff fc27 	bl	800bcc8 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800c47a:	f001 f981 	bl	800d780 <xTaskResumeAll>
 800c47e:	2800      	cmp	r0, #0
 800c480:	d190      	bne.n	800c3a4 <xQueueGenericSend+0x138>
					portYIELD_WITHIN_API();
 800c482:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800c486:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800c48a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800c48e:	f3bf 8f4f 	dsb	sy
 800c492:	f3bf 8f6f 	isb	sy
 800c496:	e785      	b.n	800c3a4 <xQueueGenericSend+0x138>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800c498:	a802      	add	r0, sp, #8
 800c49a:	f001 fab9 	bl	800da10 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 800c49e:	e71a      	b.n	800c2d6 <xQueueGenericSend+0x6a>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800c4a0:	463a      	mov	r2, r7
 800c4a2:	4641      	mov	r1, r8
 800c4a4:	4620      	mov	r0, r4
 800c4a6:	f7ff fd4f 	bl	800bf48 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800c4aa:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800c4ac:	2b00      	cmp	r3, #0
 800c4ae:	d153      	bne.n	800c558 <xQueueGenericSend+0x2ec>
					else if( xYieldRequired != pdFALSE )
 800c4b0:	b148      	cbz	r0, 800c4c6 <xQueueGenericSend+0x25a>
						queueYIELD_IF_USING_PREEMPTION();
 800c4b2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800c4b6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800c4ba:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800c4be:	f3bf 8f4f 	dsb	sy
 800c4c2:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800c4c6:	f7ff fbff 	bl	800bcc8 <vPortExitCritical>
				return pdPASS;
 800c4ca:	2001      	movs	r0, #1
}
 800c4cc:	b005      	add	sp, #20
 800c4ce:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c4d2:	9000      	str	r0, [sp, #0]
					taskEXIT_CRITICAL();
 800c4d4:	f7ff fbf8 	bl	800bcc8 <vPortExitCritical>
					return errQUEUE_FULL;
 800c4d8:	9800      	ldr	r0, [sp, #0]
 800c4da:	e7f7      	b.n	800c4cc <xQueueGenericSend+0x260>
	taskENTER_CRITICAL();
 800c4dc:	f7ff fbd2 	bl	800bc84 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800c4e0:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800c4e4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800c4e6:	2d00      	cmp	r5, #0
 800c4e8:	dd10      	ble.n	800c50c <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800c4ea:	f104 0624 	add.w	r6, r4, #36	; 0x24
 800c4ee:	e003      	b.n	800c4f8 <xQueueGenericSend+0x28c>
			--cTxLock;
 800c4f0:	1e6b      	subs	r3, r5, #1
 800c4f2:	b2da      	uxtb	r2, r3
 800c4f4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800c4f6:	b14a      	cbz	r2, 800c50c <xQueueGenericSend+0x2a0>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800c4f8:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800c4fa:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800c4fc:	b133      	cbz	r3, 800c50c <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800c4fe:	f001 fa3f 	bl	800d980 <xTaskRemoveFromEventList>
 800c502:	2800      	cmp	r0, #0
 800c504:	d0f4      	beq.n	800c4f0 <xQueueGenericSend+0x284>
						vTaskMissedYield();
 800c506:	f001 fad7 	bl	800dab8 <vTaskMissedYield>
 800c50a:	e7f1      	b.n	800c4f0 <xQueueGenericSend+0x284>
		pxQueue->cTxLock = queueUNLOCKED;
 800c50c:	23ff      	movs	r3, #255	; 0xff
 800c50e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800c512:	f7ff fbd9 	bl	800bcc8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800c516:	f7ff fbb5 	bl	800bc84 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800c51a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800c51e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800c520:	2d00      	cmp	r5, #0
 800c522:	dd10      	ble.n	800c546 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800c524:	f104 0610 	add.w	r6, r4, #16
 800c528:	e003      	b.n	800c532 <xQueueGenericSend+0x2c6>
				--cRxLock;
 800c52a:	1e6b      	subs	r3, r5, #1
 800c52c:	b2da      	uxtb	r2, r3
 800c52e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800c530:	b14a      	cbz	r2, 800c546 <xQueueGenericSend+0x2da>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800c532:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800c534:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800c536:	b133      	cbz	r3, 800c546 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800c538:	f001 fa22 	bl	800d980 <xTaskRemoveFromEventList>
 800c53c:	2800      	cmp	r0, #0
 800c53e:	d0f4      	beq.n	800c52a <xQueueGenericSend+0x2be>
					vTaskMissedYield();
 800c540:	f001 faba 	bl	800dab8 <vTaskMissedYield>
 800c544:	e7f1      	b.n	800c52a <xQueueGenericSend+0x2be>
		pxQueue->cRxLock = queueUNLOCKED;
 800c546:	23ff      	movs	r3, #255	; 0xff
 800c548:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800c54c:	f7ff fbbc 	bl	800bcc8 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800c550:	f001 f916 	bl	800d780 <xTaskResumeAll>
			return errQUEUE_FULL;
 800c554:	2000      	movs	r0, #0
 800c556:	e7b9      	b.n	800c4cc <xQueueGenericSend+0x260>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800c558:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800c55c:	f001 fa10 	bl	800d980 <xTaskRemoveFromEventList>
 800c560:	2800      	cmp	r0, #0
 800c562:	d0b0      	beq.n	800c4c6 <xQueueGenericSend+0x25a>
 800c564:	e7a5      	b.n	800c4b2 <xQueueGenericSend+0x246>
 800c566:	bf00      	nop

0800c568 <xQueueGenericSendFromISR>:
	configASSERT( pxQueue );
 800c568:	2800      	cmp	r0, #0
 800c56a:	d04b      	beq.n	800c604 <xQueueGenericSendFromISR+0x9c>
{
 800c56c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c570:	460e      	mov	r6, r1
 800c572:	4617      	mov	r7, r2
 800c574:	461d      	mov	r5, r3
 800c576:	4604      	mov	r4, r0
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800c578:	b321      	cbz	r1, 800c5c4 <xQueueGenericSendFromISR+0x5c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800c57a:	2d02      	cmp	r5, #2
 800c57c:	d10b      	bne.n	800c596 <xQueueGenericSendFromISR+0x2e>
 800c57e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800c580:	2b01      	cmp	r3, #1
 800c582:	d008      	beq.n	800c596 <xQueueGenericSendFromISR+0x2e>
 800c584:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c588:	f383 8811 	msr	BASEPRI, r3
 800c58c:	f3bf 8f6f 	isb	sy
 800c590:	f3bf 8f4f 	dsb	sy
 800c594:	e7fe      	b.n	800c594 <xQueueGenericSendFromISR+0x2c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800c596:	f7ff fca9 	bl	800beec <vPortValidateInterruptPriority>
	__asm volatile
 800c59a:	f3ef 8811 	mrs	r8, BASEPRI
 800c59e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c5a2:	f383 8811 	msr	BASEPRI, r3
 800c5a6:	f3bf 8f6f 	isb	sy
 800c5aa:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800c5ae:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c5b0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800c5b2:	429a      	cmp	r2, r3
 800c5b4:	d312      	bcc.n	800c5dc <xQueueGenericSendFromISR+0x74>
 800c5b6:	2d02      	cmp	r5, #2
 800c5b8:	d010      	beq.n	800c5dc <xQueueGenericSendFromISR+0x74>
			xReturn = errQUEUE_FULL;
 800c5ba:	2000      	movs	r0, #0
	__asm volatile
 800c5bc:	f388 8811 	msr	BASEPRI, r8
}
 800c5c0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800c5c4:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800c5c6:	2b00      	cmp	r3, #0
 800c5c8:	d0d7      	beq.n	800c57a <xQueueGenericSendFromISR+0x12>
	__asm volatile
 800c5ca:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c5ce:	f383 8811 	msr	BASEPRI, r3
 800c5d2:	f3bf 8f6f 	isb	sy
 800c5d6:	f3bf 8f4f 	dsb	sy
 800c5da:	e7fe      	b.n	800c5da <xQueueGenericSendFromISR+0x72>
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800c5dc:	462a      	mov	r2, r5
			const int8_t cTxLock = pxQueue->cTxLock;
 800c5de:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 800c5e2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800c5e4:	4631      	mov	r1, r6
			const int8_t cTxLock = pxQueue->cTxLock;
 800c5e6:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800c5e8:	4620      	mov	r0, r4
 800c5ea:	f7ff fcad 	bl	800bf48 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800c5ee:	1c6b      	adds	r3, r5, #1
 800c5f0:	d011      	beq.n	800c616 <xQueueGenericSendFromISR+0xae>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800c5f2:	1c6b      	adds	r3, r5, #1
 800c5f4:	b25b      	sxtb	r3, r3
 800c5f6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
			xReturn = pdPASS;
 800c5fa:	2001      	movs	r0, #1
	__asm volatile
 800c5fc:	f388 8811 	msr	BASEPRI, r8
}
 800c600:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	__asm volatile
 800c604:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c608:	f383 8811 	msr	BASEPRI, r3
 800c60c:	f3bf 8f6f 	isb	sy
 800c610:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800c614:	e7fe      	b.n	800c614 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800c616:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800c618:	2b00      	cmp	r3, #0
 800c61a:	d0ee      	beq.n	800c5fa <xQueueGenericSendFromISR+0x92>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800c61c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800c620:	f001 f9ae 	bl	800d980 <xTaskRemoveFromEventList>
 800c624:	2800      	cmp	r0, #0
 800c626:	d0e8      	beq.n	800c5fa <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 800c628:	2f00      	cmp	r7, #0
 800c62a:	d0e6      	beq.n	800c5fa <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800c62c:	2001      	movs	r0, #1
 800c62e:	6038      	str	r0, [r7, #0]
 800c630:	e7c4      	b.n	800c5bc <xQueueGenericSendFromISR+0x54>
 800c632:	bf00      	nop

0800c634 <xQueueGiveFromISR>:
	configASSERT( pxQueue );
 800c634:	b370      	cbz	r0, 800c694 <xQueueGiveFromISR+0x60>
	configASSERT( pxQueue->uxItemSize == 0 );
 800c636:	6c03      	ldr	r3, [r0, #64]	; 0x40
{
 800c638:	b570      	push	{r4, r5, r6, lr}
 800c63a:	4606      	mov	r6, r0
	configASSERT( pxQueue->uxItemSize == 0 );
 800c63c:	b143      	cbz	r3, 800c650 <xQueueGiveFromISR+0x1c>
 800c63e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c642:	f383 8811 	msr	BASEPRI, r3
 800c646:	f3bf 8f6f 	isb	sy
 800c64a:	f3bf 8f4f 	dsb	sy
 800c64e:	e7fe      	b.n	800c64e <xQueueGiveFromISR+0x1a>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800c650:	6803      	ldr	r3, [r0, #0]
 800c652:	460c      	mov	r4, r1
 800c654:	b33b      	cbz	r3, 800c6a6 <xQueueGiveFromISR+0x72>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800c656:	f7ff fc49 	bl	800beec <vPortValidateInterruptPriority>
	__asm volatile
 800c65a:	f3ef 8511 	mrs	r5, BASEPRI
 800c65e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c662:	f383 8811 	msr	BASEPRI, r3
 800c666:	f3bf 8f6f 	isb	sy
 800c66a:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800c66e:	6bb3      	ldr	r3, [r6, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800c670:	6bf2      	ldr	r2, [r6, #60]	; 0x3c
 800c672:	429a      	cmp	r2, r3
 800c674:	d923      	bls.n	800c6be <xQueueGiveFromISR+0x8a>
			const int8_t cTxLock = pxQueue->cTxLock;
 800c676:	f896 2045 	ldrb.w	r2, [r6, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800c67a:	3301      	adds	r3, #1
			if( cTxLock == queueUNLOCKED )
 800c67c:	2aff      	cmp	r2, #255	; 0xff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800c67e:	63b3      	str	r3, [r6, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 800c680:	b253      	sxtb	r3, r2
			if( cTxLock == queueUNLOCKED )
 800c682:	d020      	beq.n	800c6c6 <xQueueGiveFromISR+0x92>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800c684:	3301      	adds	r3, #1
 800c686:	b25b      	sxtb	r3, r3
 800c688:	f886 3045 	strb.w	r3, [r6, #69]	; 0x45
			xReturn = pdPASS;
 800c68c:	2001      	movs	r0, #1
	__asm volatile
 800c68e:	f385 8811 	msr	BASEPRI, r5
}
 800c692:	bd70      	pop	{r4, r5, r6, pc}
	__asm volatile
 800c694:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c698:	f383 8811 	msr	BASEPRI, r3
 800c69c:	f3bf 8f6f 	isb	sy
 800c6a0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800c6a4:	e7fe      	b.n	800c6a4 <xQueueGiveFromISR+0x70>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800c6a6:	6883      	ldr	r3, [r0, #8]
 800c6a8:	2b00      	cmp	r3, #0
 800c6aa:	d0d4      	beq.n	800c656 <xQueueGiveFromISR+0x22>
 800c6ac:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c6b0:	f383 8811 	msr	BASEPRI, r3
 800c6b4:	f3bf 8f6f 	isb	sy
 800c6b8:	f3bf 8f4f 	dsb	sy
 800c6bc:	e7fe      	b.n	800c6bc <xQueueGiveFromISR+0x88>
			xReturn = errQUEUE_FULL;
 800c6be:	2000      	movs	r0, #0
	__asm volatile
 800c6c0:	f385 8811 	msr	BASEPRI, r5
}
 800c6c4:	bd70      	pop	{r4, r5, r6, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800c6c6:	6a73      	ldr	r3, [r6, #36]	; 0x24
 800c6c8:	2b00      	cmp	r3, #0
 800c6ca:	d0df      	beq.n	800c68c <xQueueGiveFromISR+0x58>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800c6cc:	f106 0024 	add.w	r0, r6, #36	; 0x24
 800c6d0:	f001 f956 	bl	800d980 <xTaskRemoveFromEventList>
 800c6d4:	2800      	cmp	r0, #0
 800c6d6:	d0d9      	beq.n	800c68c <xQueueGiveFromISR+0x58>
							if( pxHigherPriorityTaskWoken != NULL )
 800c6d8:	2c00      	cmp	r4, #0
 800c6da:	d0d7      	beq.n	800c68c <xQueueGiveFromISR+0x58>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800c6dc:	2001      	movs	r0, #1
 800c6de:	6020      	str	r0, [r4, #0]
 800c6e0:	e7ee      	b.n	800c6c0 <xQueueGiveFromISR+0x8c>
 800c6e2:	bf00      	nop

0800c6e4 <xQueueReceive>:
{
 800c6e4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c6e8:	b085      	sub	sp, #20
 800c6ea:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800c6ec:	2800      	cmp	r0, #0
 800c6ee:	f000 815c 	beq.w	800c9aa <xQueueReceive+0x2c6>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800c6f2:	460f      	mov	r7, r1
 800c6f4:	4604      	mov	r4, r0
 800c6f6:	2900      	cmp	r1, #0
 800c6f8:	d079      	beq.n	800c7ee <xQueueReceive+0x10a>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800c6fa:	f001 f9e3 	bl	800dac4 <xTaskGetSchedulerState>
 800c6fe:	2800      	cmp	r0, #0
 800c700:	f000 8081 	beq.w	800c806 <xQueueReceive+0x122>
		taskENTER_CRITICAL();
 800c704:	f7ff fabe 	bl	800bc84 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800c708:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800c70a:	2d00      	cmp	r5, #0
 800c70c:	f040 8138 	bne.w	800c980 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800c710:	9b01      	ldr	r3, [sp, #4]
 800c712:	2b00      	cmp	r3, #0
 800c714:	f000 80d5 	beq.w	800c8c2 <xQueueReceive+0x1de>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800c718:	a802      	add	r0, sp, #8
 800c71a:	f001 f979 	bl	800da10 <vTaskInternalSetTimeOutState>
		prvLockQueue( pxQueue );
 800c71e:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800c720:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskEXIT_CRITICAL();
 800c724:	f7ff fad0 	bl	800bcc8 <vPortExitCritical>
		vTaskSuspendAll();
 800c728:	f001 f822 	bl	800d770 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800c72c:	f7ff faaa 	bl	800bc84 <vPortEnterCritical>
 800c730:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800c734:	2bff      	cmp	r3, #255	; 0xff
 800c736:	bf08      	it	eq
 800c738:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 800c73c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800c740:	2bff      	cmp	r3, #255	; 0xff
 800c742:	bf08      	it	eq
 800c744:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 800c748:	f7ff fabe 	bl	800bcc8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800c74c:	a901      	add	r1, sp, #4
 800c74e:	a802      	add	r0, sp, #8
 800c750:	f001 f96a 	bl	800da28 <xTaskCheckForTimeOut>
 800c754:	2800      	cmp	r0, #0
 800c756:	d163      	bne.n	800c820 <xQueueReceive+0x13c>
	taskENTER_CRITICAL();
 800c758:	f7ff fa94 	bl	800bc84 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800c75c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800c75e:	2b00      	cmp	r3, #0
 800c760:	f000 80b5 	beq.w	800c8ce <xQueueReceive+0x1ea>
	taskEXIT_CRITICAL();
 800c764:	f7ff fab0 	bl	800bcc8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800c768:	f7ff fa8c 	bl	800bc84 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800c76c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800c770:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800c772:	2d00      	cmp	r5, #0
 800c774:	dc04      	bgt.n	800c780 <xQueueReceive+0x9c>
 800c776:	e011      	b.n	800c79c <xQueueReceive+0xb8>
			--cTxLock;
 800c778:	1e6b      	subs	r3, r5, #1
 800c77a:	b2da      	uxtb	r2, r3
 800c77c:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800c77e:	b16a      	cbz	r2, 800c79c <xQueueReceive+0xb8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800c780:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800c782:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800c784:	b153      	cbz	r3, 800c79c <xQueueReceive+0xb8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800c786:	f001 f8fb 	bl	800d980 <xTaskRemoveFromEventList>
 800c78a:	2800      	cmp	r0, #0
 800c78c:	d0f4      	beq.n	800c778 <xQueueReceive+0x94>
						vTaskMissedYield();
 800c78e:	f001 f993 	bl	800dab8 <vTaskMissedYield>
			--cTxLock;
 800c792:	1e6b      	subs	r3, r5, #1
 800c794:	b2da      	uxtb	r2, r3
 800c796:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800c798:	2a00      	cmp	r2, #0
 800c79a:	d1f1      	bne.n	800c780 <xQueueReceive+0x9c>
		pxQueue->cTxLock = queueUNLOCKED;
 800c79c:	23ff      	movs	r3, #255	; 0xff
 800c79e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800c7a2:	f7ff fa91 	bl	800bcc8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800c7a6:	f7ff fa6d 	bl	800bc84 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800c7aa:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800c7ae:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800c7b0:	2d00      	cmp	r5, #0
 800c7b2:	dd14      	ble.n	800c7de <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800c7b4:	f104 0910 	add.w	r9, r4, #16
 800c7b8:	e003      	b.n	800c7c2 <xQueueReceive+0xde>
				--cRxLock;
 800c7ba:	1e6b      	subs	r3, r5, #1
 800c7bc:	b2da      	uxtb	r2, r3
 800c7be:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800c7c0:	b16a      	cbz	r2, 800c7de <xQueueReceive+0xfa>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800c7c2:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800c7c4:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800c7c6:	b153      	cbz	r3, 800c7de <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800c7c8:	f001 f8da 	bl	800d980 <xTaskRemoveFromEventList>
 800c7cc:	2800      	cmp	r0, #0
 800c7ce:	d0f4      	beq.n	800c7ba <xQueueReceive+0xd6>
					vTaskMissedYield();
 800c7d0:	f001 f972 	bl	800dab8 <vTaskMissedYield>
				--cRxLock;
 800c7d4:	1e6b      	subs	r3, r5, #1
 800c7d6:	b2da      	uxtb	r2, r3
 800c7d8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800c7da:	2a00      	cmp	r2, #0
 800c7dc:	d1f1      	bne.n	800c7c2 <xQueueReceive+0xde>
		pxQueue->cRxLock = queueUNLOCKED;
 800c7de:	23ff      	movs	r3, #255	; 0xff
 800c7e0:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800c7e4:	f7ff fa70 	bl	800bcc8 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800c7e8:	f000 ffca 	bl	800d780 <xTaskResumeAll>
		taskENTER_CRITICAL();
 800c7ec:	e060      	b.n	800c8b0 <xQueueReceive+0x1cc>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800c7ee:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800c7f0:	2b00      	cmp	r3, #0
 800c7f2:	d082      	beq.n	800c6fa <xQueueReceive+0x16>
	__asm volatile
 800c7f4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c7f8:	f383 8811 	msr	BASEPRI, r3
 800c7fc:	f3bf 8f6f 	isb	sy
 800c800:	f3bf 8f4f 	dsb	sy
 800c804:	e7fe      	b.n	800c804 <xQueueReceive+0x120>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800c806:	9b01      	ldr	r3, [sp, #4]
 800c808:	2b00      	cmp	r3, #0
 800c80a:	f43f af7b 	beq.w	800c704 <xQueueReceive+0x20>
 800c80e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c812:	f383 8811 	msr	BASEPRI, r3
 800c816:	f3bf 8f6f 	isb	sy
 800c81a:	f3bf 8f4f 	dsb	sy
 800c81e:	e7fe      	b.n	800c81e <xQueueReceive+0x13a>
	taskENTER_CRITICAL();
 800c820:	f7ff fa30 	bl	800bc84 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800c824:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800c828:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800c82a:	2d00      	cmp	r5, #0
 800c82c:	dc04      	bgt.n	800c838 <xQueueReceive+0x154>
 800c82e:	e011      	b.n	800c854 <xQueueReceive+0x170>
			--cTxLock;
 800c830:	1e6b      	subs	r3, r5, #1
 800c832:	b2da      	uxtb	r2, r3
 800c834:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800c836:	b16a      	cbz	r2, 800c854 <xQueueReceive+0x170>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800c838:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800c83a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800c83c:	b153      	cbz	r3, 800c854 <xQueueReceive+0x170>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800c83e:	f001 f89f 	bl	800d980 <xTaskRemoveFromEventList>
 800c842:	2800      	cmp	r0, #0
 800c844:	d0f4      	beq.n	800c830 <xQueueReceive+0x14c>
						vTaskMissedYield();
 800c846:	f001 f937 	bl	800dab8 <vTaskMissedYield>
			--cTxLock;
 800c84a:	1e6b      	subs	r3, r5, #1
 800c84c:	b2da      	uxtb	r2, r3
 800c84e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800c850:	2a00      	cmp	r2, #0
 800c852:	d1f1      	bne.n	800c838 <xQueueReceive+0x154>
		pxQueue->cTxLock = queueUNLOCKED;
 800c854:	23ff      	movs	r3, #255	; 0xff
 800c856:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800c85a:	f7ff fa35 	bl	800bcc8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800c85e:	f7ff fa11 	bl	800bc84 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800c862:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800c866:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800c868:	2d00      	cmp	r5, #0
 800c86a:	dd14      	ble.n	800c896 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800c86c:	f104 0910 	add.w	r9, r4, #16
 800c870:	e003      	b.n	800c87a <xQueueReceive+0x196>
				--cRxLock;
 800c872:	1e6b      	subs	r3, r5, #1
 800c874:	b2da      	uxtb	r2, r3
 800c876:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800c878:	b16a      	cbz	r2, 800c896 <xQueueReceive+0x1b2>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800c87a:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800c87c:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800c87e:	b153      	cbz	r3, 800c896 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800c880:	f001 f87e 	bl	800d980 <xTaskRemoveFromEventList>
 800c884:	2800      	cmp	r0, #0
 800c886:	d0f4      	beq.n	800c872 <xQueueReceive+0x18e>
					vTaskMissedYield();
 800c888:	f001 f916 	bl	800dab8 <vTaskMissedYield>
				--cRxLock;
 800c88c:	1e6b      	subs	r3, r5, #1
 800c88e:	b2da      	uxtb	r2, r3
 800c890:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800c892:	2a00      	cmp	r2, #0
 800c894:	d1f1      	bne.n	800c87a <xQueueReceive+0x196>
		pxQueue->cRxLock = queueUNLOCKED;
 800c896:	23ff      	movs	r3, #255	; 0xff
 800c898:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800c89c:	f7ff fa14 	bl	800bcc8 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800c8a0:	f000 ff6e 	bl	800d780 <xTaskResumeAll>
	taskENTER_CRITICAL();
 800c8a4:	f7ff f9ee 	bl	800bc84 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800c8a8:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800c8aa:	b153      	cbz	r3, 800c8c2 <xQueueReceive+0x1de>
	taskEXIT_CRITICAL();
 800c8ac:	f7ff fa0c 	bl	800bcc8 <vPortExitCritical>
		taskENTER_CRITICAL();
 800c8b0:	f7ff f9e8 	bl	800bc84 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800c8b4:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800c8b6:	2d00      	cmp	r5, #0
 800c8b8:	d162      	bne.n	800c980 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800c8ba:	9b01      	ldr	r3, [sp, #4]
 800c8bc:	2b00      	cmp	r3, #0
 800c8be:	f47f af31 	bne.w	800c724 <xQueueReceive+0x40>
					taskEXIT_CRITICAL();
 800c8c2:	f7ff fa01 	bl	800bcc8 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800c8c6:	2000      	movs	r0, #0
}
 800c8c8:	b005      	add	sp, #20
 800c8ca:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 800c8ce:	f7ff f9fb 	bl	800bcc8 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800c8d2:	9901      	ldr	r1, [sp, #4]
 800c8d4:	4630      	mov	r0, r6
 800c8d6:	f000 ffc5 	bl	800d864 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800c8da:	f7ff f9d3 	bl	800bc84 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800c8de:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800c8e2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800c8e4:	2d00      	cmp	r5, #0
 800c8e6:	dc04      	bgt.n	800c8f2 <xQueueReceive+0x20e>
 800c8e8:	e011      	b.n	800c90e <xQueueReceive+0x22a>
			--cTxLock;
 800c8ea:	1e6b      	subs	r3, r5, #1
 800c8ec:	b2da      	uxtb	r2, r3
 800c8ee:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800c8f0:	b16a      	cbz	r2, 800c90e <xQueueReceive+0x22a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800c8f2:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800c8f4:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800c8f6:	b153      	cbz	r3, 800c90e <xQueueReceive+0x22a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800c8f8:	f001 f842 	bl	800d980 <xTaskRemoveFromEventList>
 800c8fc:	2800      	cmp	r0, #0
 800c8fe:	d0f4      	beq.n	800c8ea <xQueueReceive+0x206>
						vTaskMissedYield();
 800c900:	f001 f8da 	bl	800dab8 <vTaskMissedYield>
			--cTxLock;
 800c904:	1e6b      	subs	r3, r5, #1
 800c906:	b2da      	uxtb	r2, r3
 800c908:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800c90a:	2a00      	cmp	r2, #0
 800c90c:	d1f1      	bne.n	800c8f2 <xQueueReceive+0x20e>
		pxQueue->cTxLock = queueUNLOCKED;
 800c90e:	23ff      	movs	r3, #255	; 0xff
 800c910:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800c914:	f7ff f9d8 	bl	800bcc8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800c918:	f7ff f9b4 	bl	800bc84 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800c91c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800c920:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800c922:	2d00      	cmp	r5, #0
 800c924:	dd14      	ble.n	800c950 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800c926:	f104 0910 	add.w	r9, r4, #16
 800c92a:	e003      	b.n	800c934 <xQueueReceive+0x250>
				--cRxLock;
 800c92c:	1e6b      	subs	r3, r5, #1
 800c92e:	b2da      	uxtb	r2, r3
 800c930:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800c932:	b16a      	cbz	r2, 800c950 <xQueueReceive+0x26c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800c934:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800c936:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800c938:	b153      	cbz	r3, 800c950 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800c93a:	f001 f821 	bl	800d980 <xTaskRemoveFromEventList>
 800c93e:	2800      	cmp	r0, #0
 800c940:	d0f4      	beq.n	800c92c <xQueueReceive+0x248>
					vTaskMissedYield();
 800c942:	f001 f8b9 	bl	800dab8 <vTaskMissedYield>
				--cRxLock;
 800c946:	1e6b      	subs	r3, r5, #1
 800c948:	b2da      	uxtb	r2, r3
 800c94a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800c94c:	2a00      	cmp	r2, #0
 800c94e:	d1f1      	bne.n	800c934 <xQueueReceive+0x250>
		pxQueue->cRxLock = queueUNLOCKED;
 800c950:	23ff      	movs	r3, #255	; 0xff
 800c952:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800c956:	f7ff f9b7 	bl	800bcc8 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800c95a:	f000 ff11 	bl	800d780 <xTaskResumeAll>
 800c95e:	2800      	cmp	r0, #0
 800c960:	d1a6      	bne.n	800c8b0 <xQueueReceive+0x1cc>
					portYIELD_WITHIN_API();
 800c962:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800c966:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800c96a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800c96e:	f3bf 8f4f 	dsb	sy
 800c972:	f3bf 8f6f 	isb	sy
		taskENTER_CRITICAL();
 800c976:	f7ff f985 	bl	800bc84 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800c97a:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800c97c:	2d00      	cmp	r5, #0
 800c97e:	d09c      	beq.n	800c8ba <xQueueReceive+0x1d6>
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800c980:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800c982:	b152      	cbz	r2, 800c99a <xQueueReceive+0x2b6>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800c984:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800c986:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800c988:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800c98a:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800c98c:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800c98e:	bf24      	itt	cs
 800c990:	6821      	ldrcs	r1, [r4, #0]
 800c992:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800c994:	4638      	mov	r0, r7
 800c996:	f01a fe96 	bl	80276c6 <memcpy>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800c99a:	3d01      	subs	r5, #1
 800c99c:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800c99e:	6923      	ldr	r3, [r4, #16]
 800c9a0:	b963      	cbnz	r3, 800c9bc <xQueueReceive+0x2d8>
				taskEXIT_CRITICAL();
 800c9a2:	f7ff f991 	bl	800bcc8 <vPortExitCritical>
				return pdPASS;
 800c9a6:	2001      	movs	r0, #1
 800c9a8:	e78e      	b.n	800c8c8 <xQueueReceive+0x1e4>
 800c9aa:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c9ae:	f383 8811 	msr	BASEPRI, r3
 800c9b2:	f3bf 8f6f 	isb	sy
 800c9b6:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 800c9ba:	e7fe      	b.n	800c9ba <xQueueReceive+0x2d6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800c9bc:	f104 0010 	add.w	r0, r4, #16
 800c9c0:	f000 ffde 	bl	800d980 <xTaskRemoveFromEventList>
 800c9c4:	2800      	cmp	r0, #0
 800c9c6:	d0ec      	beq.n	800c9a2 <xQueueReceive+0x2be>
						queueYIELD_IF_USING_PREEMPTION();
 800c9c8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800c9cc:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800c9d0:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800c9d4:	f3bf 8f4f 	dsb	sy
 800c9d8:	f3bf 8f6f 	isb	sy
 800c9dc:	e7e1      	b.n	800c9a2 <xQueueReceive+0x2be>
 800c9de:	bf00      	nop

0800c9e0 <xQueueSemaphoreTake>:
{
 800c9e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c9e4:	b084      	sub	sp, #16
 800c9e6:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 800c9e8:	2800      	cmp	r0, #0
 800c9ea:	d05c      	beq.n	800caa6 <xQueueSemaphoreTake+0xc6>
	configASSERT( pxQueue->uxItemSize == 0 );
 800c9ec:	6c07      	ldr	r7, [r0, #64]	; 0x40
 800c9ee:	4604      	mov	r4, r0
 800c9f0:	b147      	cbz	r7, 800ca04 <xQueueSemaphoreTake+0x24>
 800c9f2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c9f6:	f383 8811 	msr	BASEPRI, r3
 800c9fa:	f3bf 8f6f 	isb	sy
 800c9fe:	f3bf 8f4f 	dsb	sy
 800ca02:	e7fe      	b.n	800ca02 <xQueueSemaphoreTake+0x22>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800ca04:	f001 f85e 	bl	800dac4 <xTaskGetSchedulerState>
 800ca08:	4605      	mov	r5, r0
 800ca0a:	2800      	cmp	r0, #0
 800ca0c:	d054      	beq.n	800cab8 <xQueueSemaphoreTake+0xd8>
 800ca0e:	463d      	mov	r5, r7
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ca10:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 800ca14:	f7ff f936 	bl	800bc84 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 800ca18:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 800ca1a:	2b00      	cmp	r3, #0
 800ca1c:	f040 8148 	bne.w	800ccb0 <xQueueSemaphoreTake+0x2d0>
				if( xTicksToWait == ( TickType_t ) 0 )
 800ca20:	9b01      	ldr	r3, [sp, #4]
 800ca22:	2b00      	cmp	r3, #0
 800ca24:	f000 813a 	beq.w	800cc9c <xQueueSemaphoreTake+0x2bc>
				else if( xEntryTimeSet == pdFALSE )
 800ca28:	2d00      	cmp	r5, #0
 800ca2a:	f000 809d 	beq.w	800cb68 <xQueueSemaphoreTake+0x188>
		taskEXIT_CRITICAL();
 800ca2e:	f7ff f94b 	bl	800bcc8 <vPortExitCritical>
		vTaskSuspendAll();
 800ca32:	f000 fe9d 	bl	800d770 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800ca36:	f7ff f925 	bl	800bc84 <vPortEnterCritical>
 800ca3a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800ca3e:	2bff      	cmp	r3, #255	; 0xff
 800ca40:	bf04      	itt	eq
 800ca42:	2300      	moveq	r3, #0
 800ca44:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800ca48:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ca4c:	2bff      	cmp	r3, #255	; 0xff
 800ca4e:	bf04      	itt	eq
 800ca50:	2300      	moveq	r3, #0
 800ca52:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800ca56:	f7ff f937 	bl	800bcc8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800ca5a:	a901      	add	r1, sp, #4
 800ca5c:	a802      	add	r0, sp, #8
 800ca5e:	f000 ffe3 	bl	800da28 <xTaskCheckForTimeOut>
 800ca62:	2800      	cmp	r0, #0
 800ca64:	d135      	bne.n	800cad2 <xQueueSemaphoreTake+0xf2>
	taskENTER_CRITICAL();
 800ca66:	f7ff f90d 	bl	800bc84 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800ca6a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800ca6c:	2b00      	cmp	r3, #0
 800ca6e:	f000 80a4 	beq.w	800cbba <xQueueSemaphoreTake+0x1da>
	taskEXIT_CRITICAL();
 800ca72:	f7ff f929 	bl	800bcc8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800ca76:	f7ff f905 	bl	800bc84 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800ca7a:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ca7e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ca80:	2d00      	cmp	r5, #0
 800ca82:	dc05      	bgt.n	800ca90 <xQueueSemaphoreTake+0xb0>
 800ca84:	e074      	b.n	800cb70 <xQueueSemaphoreTake+0x190>
			--cTxLock;
 800ca86:	1e6b      	subs	r3, r5, #1
 800ca88:	b2da      	uxtb	r2, r3
 800ca8a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ca8c:	2a00      	cmp	r2, #0
 800ca8e:	d06f      	beq.n	800cb70 <xQueueSemaphoreTake+0x190>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ca90:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ca92:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ca94:	2b00      	cmp	r3, #0
 800ca96:	d06b      	beq.n	800cb70 <xQueueSemaphoreTake+0x190>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ca98:	f000 ff72 	bl	800d980 <xTaskRemoveFromEventList>
 800ca9c:	2800      	cmp	r0, #0
 800ca9e:	d0f2      	beq.n	800ca86 <xQueueSemaphoreTake+0xa6>
						vTaskMissedYield();
 800caa0:	f001 f80a 	bl	800dab8 <vTaskMissedYield>
 800caa4:	e7ef      	b.n	800ca86 <xQueueSemaphoreTake+0xa6>
 800caa6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800caaa:	f383 8811 	msr	BASEPRI, r3
 800caae:	f3bf 8f6f 	isb	sy
 800cab2:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 800cab6:	e7fe      	b.n	800cab6 <xQueueSemaphoreTake+0xd6>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800cab8:	9b01      	ldr	r3, [sp, #4]
 800caba:	2b00      	cmp	r3, #0
 800cabc:	f000 80d4 	beq.w	800cc68 <xQueueSemaphoreTake+0x288>
 800cac0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cac4:	f383 8811 	msr	BASEPRI, r3
 800cac8:	f3bf 8f6f 	isb	sy
 800cacc:	f3bf 8f4f 	dsb	sy
 800cad0:	e7fe      	b.n	800cad0 <xQueueSemaphoreTake+0xf0>
	taskENTER_CRITICAL();
 800cad2:	f7ff f8d7 	bl	800bc84 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800cad6:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800cada:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800cadc:	2d00      	cmp	r5, #0
 800cade:	dc04      	bgt.n	800caea <xQueueSemaphoreTake+0x10a>
 800cae0:	e011      	b.n	800cb06 <xQueueSemaphoreTake+0x126>
			--cTxLock;
 800cae2:	1e6b      	subs	r3, r5, #1
 800cae4:	b2da      	uxtb	r2, r3
 800cae6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800cae8:	b16a      	cbz	r2, 800cb06 <xQueueSemaphoreTake+0x126>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800caea:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800caec:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800caee:	b153      	cbz	r3, 800cb06 <xQueueSemaphoreTake+0x126>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800caf0:	f000 ff46 	bl	800d980 <xTaskRemoveFromEventList>
 800caf4:	2800      	cmp	r0, #0
 800caf6:	d0f4      	beq.n	800cae2 <xQueueSemaphoreTake+0x102>
						vTaskMissedYield();
 800caf8:	f000 ffde 	bl	800dab8 <vTaskMissedYield>
			--cTxLock;
 800cafc:	1e6b      	subs	r3, r5, #1
 800cafe:	b2da      	uxtb	r2, r3
 800cb00:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800cb02:	2a00      	cmp	r2, #0
 800cb04:	d1f1      	bne.n	800caea <xQueueSemaphoreTake+0x10a>
		pxQueue->cTxLock = queueUNLOCKED;
 800cb06:	23ff      	movs	r3, #255	; 0xff
 800cb08:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800cb0c:	f7ff f8dc 	bl	800bcc8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800cb10:	f7ff f8b8 	bl	800bc84 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800cb14:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800cb18:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800cb1a:	2d00      	cmp	r5, #0
 800cb1c:	dd14      	ble.n	800cb48 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800cb1e:	f104 0810 	add.w	r8, r4, #16
 800cb22:	e003      	b.n	800cb2c <xQueueSemaphoreTake+0x14c>
				--cRxLock;
 800cb24:	1e6b      	subs	r3, r5, #1
 800cb26:	b2da      	uxtb	r2, r3
 800cb28:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800cb2a:	b16a      	cbz	r2, 800cb48 <xQueueSemaphoreTake+0x168>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800cb2c:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800cb2e:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800cb30:	b153      	cbz	r3, 800cb48 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800cb32:	f000 ff25 	bl	800d980 <xTaskRemoveFromEventList>
 800cb36:	2800      	cmp	r0, #0
 800cb38:	d0f4      	beq.n	800cb24 <xQueueSemaphoreTake+0x144>
					vTaskMissedYield();
 800cb3a:	f000 ffbd 	bl	800dab8 <vTaskMissedYield>
				--cRxLock;
 800cb3e:	1e6b      	subs	r3, r5, #1
 800cb40:	b2da      	uxtb	r2, r3
 800cb42:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800cb44:	2a00      	cmp	r2, #0
 800cb46:	d1f1      	bne.n	800cb2c <xQueueSemaphoreTake+0x14c>
		pxQueue->cRxLock = queueUNLOCKED;
 800cb48:	23ff      	movs	r3, #255	; 0xff
 800cb4a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800cb4e:	f7ff f8bb 	bl	800bcc8 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800cb52:	f000 fe15 	bl	800d780 <xTaskResumeAll>
	taskENTER_CRITICAL();
 800cb56:	f7ff f895 	bl	800bc84 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800cb5a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800cb5c:	2b00      	cmp	r3, #0
 800cb5e:	d07c      	beq.n	800cc5a <xQueueSemaphoreTake+0x27a>
	taskEXIT_CRITICAL();
 800cb60:	f7ff f8b2 	bl	800bcc8 <vPortExitCritical>
	return xReturn;
 800cb64:	2501      	movs	r5, #1
 800cb66:	e755      	b.n	800ca14 <xQueueSemaphoreTake+0x34>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800cb68:	a802      	add	r0, sp, #8
 800cb6a:	f000 ff51 	bl	800da10 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 800cb6e:	e75e      	b.n	800ca2e <xQueueSemaphoreTake+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 800cb70:	23ff      	movs	r3, #255	; 0xff
 800cb72:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800cb76:	f7ff f8a7 	bl	800bcc8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800cb7a:	f7ff f883 	bl	800bc84 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800cb7e:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800cb82:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800cb84:	2d00      	cmp	r5, #0
 800cb86:	dd10      	ble.n	800cbaa <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800cb88:	f104 0810 	add.w	r8, r4, #16
 800cb8c:	e003      	b.n	800cb96 <xQueueSemaphoreTake+0x1b6>
				--cRxLock;
 800cb8e:	1e6b      	subs	r3, r5, #1
 800cb90:	b2da      	uxtb	r2, r3
 800cb92:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800cb94:	b14a      	cbz	r2, 800cbaa <xQueueSemaphoreTake+0x1ca>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800cb96:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800cb98:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800cb9a:	b133      	cbz	r3, 800cbaa <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800cb9c:	f000 fef0 	bl	800d980 <xTaskRemoveFromEventList>
 800cba0:	2800      	cmp	r0, #0
 800cba2:	d0f4      	beq.n	800cb8e <xQueueSemaphoreTake+0x1ae>
					vTaskMissedYield();
 800cba4:	f000 ff88 	bl	800dab8 <vTaskMissedYield>
 800cba8:	e7f1      	b.n	800cb8e <xQueueSemaphoreTake+0x1ae>
		pxQueue->cRxLock = queueUNLOCKED;
 800cbaa:	23ff      	movs	r3, #255	; 0xff
 800cbac:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800cbb0:	f7ff f88a 	bl	800bcc8 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800cbb4:	f000 fde4 	bl	800d780 <xTaskResumeAll>
 800cbb8:	e7d4      	b.n	800cb64 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 800cbba:	f7ff f885 	bl	800bcc8 <vPortExitCritical>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800cbbe:	6823      	ldr	r3, [r4, #0]
 800cbc0:	2b00      	cmp	r3, #0
 800cbc2:	d062      	beq.n	800cc8a <xQueueSemaphoreTake+0x2aa>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800cbc4:	9901      	ldr	r1, [sp, #4]
 800cbc6:	4630      	mov	r0, r6
 800cbc8:	f000 fe4c 	bl	800d864 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800cbcc:	f7ff f85a 	bl	800bc84 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800cbd0:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800cbd4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800cbd6:	2d00      	cmp	r5, #0
 800cbd8:	dc04      	bgt.n	800cbe4 <xQueueSemaphoreTake+0x204>
 800cbda:	e00d      	b.n	800cbf8 <xQueueSemaphoreTake+0x218>
			--cTxLock;
 800cbdc:	1e6b      	subs	r3, r5, #1
 800cbde:	b2da      	uxtb	r2, r3
 800cbe0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800cbe2:	b14a      	cbz	r2, 800cbf8 <xQueueSemaphoreTake+0x218>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800cbe4:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800cbe6:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800cbe8:	b133      	cbz	r3, 800cbf8 <xQueueSemaphoreTake+0x218>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800cbea:	f000 fec9 	bl	800d980 <xTaskRemoveFromEventList>
 800cbee:	2800      	cmp	r0, #0
 800cbf0:	d0f4      	beq.n	800cbdc <xQueueSemaphoreTake+0x1fc>
						vTaskMissedYield();
 800cbf2:	f000 ff61 	bl	800dab8 <vTaskMissedYield>
 800cbf6:	e7f1      	b.n	800cbdc <xQueueSemaphoreTake+0x1fc>
		pxQueue->cTxLock = queueUNLOCKED;
 800cbf8:	23ff      	movs	r3, #255	; 0xff
 800cbfa:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800cbfe:	f7ff f863 	bl	800bcc8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800cc02:	f7ff f83f 	bl	800bc84 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800cc06:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800cc0a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800cc0c:	2d00      	cmp	r5, #0
 800cc0e:	dd10      	ble.n	800cc32 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800cc10:	f104 0810 	add.w	r8, r4, #16
 800cc14:	e003      	b.n	800cc1e <xQueueSemaphoreTake+0x23e>
				--cRxLock;
 800cc16:	1e6b      	subs	r3, r5, #1
 800cc18:	b2da      	uxtb	r2, r3
 800cc1a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800cc1c:	b14a      	cbz	r2, 800cc32 <xQueueSemaphoreTake+0x252>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800cc1e:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800cc20:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800cc22:	b133      	cbz	r3, 800cc32 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800cc24:	f000 feac 	bl	800d980 <xTaskRemoveFromEventList>
 800cc28:	2800      	cmp	r0, #0
 800cc2a:	d0f4      	beq.n	800cc16 <xQueueSemaphoreTake+0x236>
					vTaskMissedYield();
 800cc2c:	f000 ff44 	bl	800dab8 <vTaskMissedYield>
 800cc30:	e7f1      	b.n	800cc16 <xQueueSemaphoreTake+0x236>
		pxQueue->cRxLock = queueUNLOCKED;
 800cc32:	23ff      	movs	r3, #255	; 0xff
 800cc34:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800cc38:	f7ff f846 	bl	800bcc8 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800cc3c:	f000 fda0 	bl	800d780 <xTaskResumeAll>
 800cc40:	2800      	cmp	r0, #0
 800cc42:	d18f      	bne.n	800cb64 <xQueueSemaphoreTake+0x184>
					portYIELD_WITHIN_API();
 800cc44:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800cc48:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800cc4c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800cc50:	f3bf 8f4f 	dsb	sy
 800cc54:	f3bf 8f6f 	isb	sy
 800cc58:	e784      	b.n	800cb64 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 800cc5a:	f7ff f835 	bl	800bcc8 <vPortExitCritical>
					if( xInheritanceOccurred != pdFALSE )
 800cc5e:	b92f      	cbnz	r7, 800cc6c <xQueueSemaphoreTake+0x28c>
}
 800cc60:	4638      	mov	r0, r7
 800cc62:	b004      	add	sp, #16
 800cc64:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cc68:	4607      	mov	r7, r0
 800cc6a:	e6d1      	b.n	800ca10 <xQueueSemaphoreTake+0x30>
						taskENTER_CRITICAL();
 800cc6c:	f7ff f80a 	bl	800bc84 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800cc70:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800cc72:	b119      	cbz	r1, 800cc7c <xQueueSemaphoreTake+0x29c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800cc74:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800cc76:	6819      	ldr	r1, [r3, #0]
 800cc78:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 800cc7c:	68a0      	ldr	r0, [r4, #8]
 800cc7e:	f000 ffbd 	bl	800dbfc <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 800cc82:	2700      	movs	r7, #0
						taskEXIT_CRITICAL();
 800cc84:	f7ff f820 	bl	800bcc8 <vPortExitCritical>
 800cc88:	e7ea      	b.n	800cc60 <xQueueSemaphoreTake+0x280>
						taskENTER_CRITICAL();
 800cc8a:	f7fe fffb 	bl	800bc84 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 800cc8e:	68a0      	ldr	r0, [r4, #8]
 800cc90:	f000 ff28 	bl	800dae4 <xTaskPriorityInherit>
 800cc94:	4607      	mov	r7, r0
						taskEXIT_CRITICAL();
 800cc96:	f7ff f817 	bl	800bcc8 <vPortExitCritical>
 800cc9a:	e793      	b.n	800cbc4 <xQueueSemaphoreTake+0x1e4>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800cc9c:	b197      	cbz	r7, 800ccc4 <xQueueSemaphoreTake+0x2e4>
 800cc9e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cca2:	f383 8811 	msr	BASEPRI, r3
 800cca6:	f3bf 8f6f 	isb	sy
 800ccaa:	f3bf 8f4f 	dsb	sy
 800ccae:	e7fe      	b.n	800ccae <xQueueSemaphoreTake+0x2ce>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800ccb0:	6822      	ldr	r2, [r4, #0]
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 800ccb2:	3b01      	subs	r3, #1
 800ccb4:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800ccb6:	b1ca      	cbz	r2, 800ccec <xQueueSemaphoreTake+0x30c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ccb8:	6923      	ldr	r3, [r4, #16]
 800ccba:	b933      	cbnz	r3, 800ccca <xQueueSemaphoreTake+0x2ea>
				taskEXIT_CRITICAL();
 800ccbc:	f7ff f804 	bl	800bcc8 <vPortExitCritical>
				return pdPASS;
 800ccc0:	2701      	movs	r7, #1
 800ccc2:	e7cd      	b.n	800cc60 <xQueueSemaphoreTake+0x280>
					taskEXIT_CRITICAL();
 800ccc4:	f7ff f800 	bl	800bcc8 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800ccc8:	e7ca      	b.n	800cc60 <xQueueSemaphoreTake+0x280>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ccca:	f104 0010 	add.w	r0, r4, #16
 800ccce:	f000 fe57 	bl	800d980 <xTaskRemoveFromEventList>
 800ccd2:	2800      	cmp	r0, #0
 800ccd4:	d0f2      	beq.n	800ccbc <xQueueSemaphoreTake+0x2dc>
						queueYIELD_IF_USING_PREEMPTION();
 800ccd6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ccda:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ccde:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800cce2:	f3bf 8f4f 	dsb	sy
 800cce6:	f3bf 8f6f 	isb	sy
 800ccea:	e7e7      	b.n	800ccbc <xQueueSemaphoreTake+0x2dc>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800ccec:	f000 ffda 	bl	800dca4 <pvTaskIncrementMutexHeldCount>
 800ccf0:	60a0      	str	r0, [r4, #8]
 800ccf2:	e7e1      	b.n	800ccb8 <xQueueSemaphoreTake+0x2d8>

0800ccf4 <xQueueReceiveFromISR>:
{
 800ccf4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
 800ccf8:	b310      	cbz	r0, 800cd40 <xQueueReceiveFromISR+0x4c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800ccfa:	460e      	mov	r6, r1
 800ccfc:	4617      	mov	r7, r2
 800ccfe:	4604      	mov	r4, r0
 800cd00:	b191      	cbz	r1, 800cd28 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800cd02:	f7ff f8f3 	bl	800beec <vPortValidateInterruptPriority>
	__asm volatile
 800cd06:	f3ef 8911 	mrs	r9, BASEPRI
 800cd0a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cd0e:	f383 8811 	msr	BASEPRI, r3
 800cd12:	f3bf 8f6f 	isb	sy
 800cd16:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800cd1a:	6ba5      	ldr	r5, [r4, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800cd1c:	b9cd      	cbnz	r5, 800cd52 <xQueueReceiveFromISR+0x5e>
			xReturn = pdFAIL;
 800cd1e:	4628      	mov	r0, r5
	__asm volatile
 800cd20:	f389 8811 	msr	BASEPRI, r9
}
 800cd24:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800cd28:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800cd2a:	2b00      	cmp	r3, #0
 800cd2c:	d0e9      	beq.n	800cd02 <xQueueReceiveFromISR+0xe>
	__asm volatile
 800cd2e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cd32:	f383 8811 	msr	BASEPRI, r3
 800cd36:	f3bf 8f6f 	isb	sy
 800cd3a:	f3bf 8f4f 	dsb	sy
 800cd3e:	e7fe      	b.n	800cd3e <xQueueReceiveFromISR+0x4a>
 800cd40:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cd44:	f383 8811 	msr	BASEPRI, r3
 800cd48:	f3bf 8f6f 	isb	sy
 800cd4c:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800cd50:	e7fe      	b.n	800cd50 <xQueueReceiveFromISR+0x5c>
			const int8_t cRxLock = pxQueue->cRxLock;
 800cd52:	f894 8044 	ldrb.w	r8, [r4, #68]	; 0x44
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800cd56:	6c22      	ldr	r2, [r4, #64]	; 0x40
			const int8_t cRxLock = pxQueue->cRxLock;
 800cd58:	fa4f f888 	sxtb.w	r8, r8
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800cd5c:	b152      	cbz	r2, 800cd74 <xQueueReceiveFromISR+0x80>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800cd5e:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800cd60:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800cd62:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800cd64:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800cd66:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800cd68:	bf24      	itt	cs
 800cd6a:	6821      	ldrcs	r1, [r4, #0]
 800cd6c:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800cd6e:	4630      	mov	r0, r6
 800cd70:	f01a fca9 	bl	80276c6 <memcpy>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800cd74:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
 800cd76:	f1b8 3fff 	cmp.w	r8, #4294967295
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800cd7a:	63a5      	str	r5, [r4, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 800cd7c:	d009      	beq.n	800cd92 <xQueueReceiveFromISR+0x9e>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 800cd7e:	f108 0301 	add.w	r3, r8, #1
 800cd82:	b25b      	sxtb	r3, r3
 800cd84:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
			xReturn = pdPASS;
 800cd88:	2001      	movs	r0, #1
	__asm volatile
 800cd8a:	f389 8811 	msr	BASEPRI, r9
}
 800cd8e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800cd92:	6923      	ldr	r3, [r4, #16]
 800cd94:	2b00      	cmp	r3, #0
 800cd96:	d0f7      	beq.n	800cd88 <xQueueReceiveFromISR+0x94>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800cd98:	f104 0010 	add.w	r0, r4, #16
 800cd9c:	f000 fdf0 	bl	800d980 <xTaskRemoveFromEventList>
 800cda0:	2800      	cmp	r0, #0
 800cda2:	d0f1      	beq.n	800cd88 <xQueueReceiveFromISR+0x94>
						if( pxHigherPriorityTaskWoken != NULL )
 800cda4:	2f00      	cmp	r7, #0
 800cda6:	d0ef      	beq.n	800cd88 <xQueueReceiveFromISR+0x94>
							*pxHigherPriorityTaskWoken = pdTRUE;
 800cda8:	2001      	movs	r0, #1
 800cdaa:	6038      	str	r0, [r7, #0]
 800cdac:	e7b8      	b.n	800cd20 <xQueueReceiveFromISR+0x2c>
 800cdae:	bf00      	nop

0800cdb0 <uxQueueMessagesWaiting>:
	configASSERT( xQueue );
 800cdb0:	b158      	cbz	r0, 800cdca <uxQueueMessagesWaiting+0x1a>
{
 800cdb2:	b510      	push	{r4, lr}
 800cdb4:	4604      	mov	r4, r0
 800cdb6:	b082      	sub	sp, #8
	taskENTER_CRITICAL();
 800cdb8:	f7fe ff64 	bl	800bc84 <vPortEnterCritical>
		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
 800cdbc:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800cdbe:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800cdc0:	f7fe ff82 	bl	800bcc8 <vPortExitCritical>
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800cdc4:	9801      	ldr	r0, [sp, #4]
 800cdc6:	b002      	add	sp, #8
 800cdc8:	bd10      	pop	{r4, pc}
	__asm volatile
 800cdca:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cdce:	f383 8811 	msr	BASEPRI, r3
 800cdd2:	f3bf 8f6f 	isb	sy
 800cdd6:	f3bf 8f4f 	dsb	sy
	configASSERT( xQueue );
 800cdda:	e7fe      	b.n	800cdda <uxQueueMessagesWaiting+0x2a>

0800cddc <uxQueueMessagesWaitingFromISR>:
	configASSERT( pxQueue );
 800cddc:	b108      	cbz	r0, 800cde2 <uxQueueMessagesWaitingFromISR+0x6>
	uxReturn = pxQueue->uxMessagesWaiting;
 800cdde:	6b80      	ldr	r0, [r0, #56]	; 0x38
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800cde0:	4770      	bx	lr
 800cde2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cde6:	f383 8811 	msr	BASEPRI, r3
 800cdea:	f3bf 8f6f 	isb	sy
 800cdee:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800cdf2:	e7fe      	b.n	800cdf2 <uxQueueMessagesWaitingFromISR+0x16>
 800cdf4:	0000      	movs	r0, r0
	...

0800cdf8 <vQueueDelete>:
	configASSERT( pxQueue );
 800cdf8:	b1f0      	cbz	r0, 800ce38 <vQueueDelete+0x40>

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800cdfa:	4b21      	ldr	r3, [pc, #132]	; (800ce80 <vQueueDelete+0x88>)
 800cdfc:	685a      	ldr	r2, [r3, #4]
 800cdfe:	4290      	cmp	r0, r2
 800ce00:	d025      	beq.n	800ce4e <vQueueDelete+0x56>
 800ce02:	68da      	ldr	r2, [r3, #12]
 800ce04:	4290      	cmp	r0, r2
 800ce06:	d02c      	beq.n	800ce62 <vQueueDelete+0x6a>
 800ce08:	695a      	ldr	r2, [r3, #20]
 800ce0a:	4290      	cmp	r0, r2
 800ce0c:	d02b      	beq.n	800ce66 <vQueueDelete+0x6e>
 800ce0e:	69da      	ldr	r2, [r3, #28]
 800ce10:	4290      	cmp	r0, r2
 800ce12:	d02a      	beq.n	800ce6a <vQueueDelete+0x72>
 800ce14:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800ce16:	4290      	cmp	r0, r2
 800ce18:	d029      	beq.n	800ce6e <vQueueDelete+0x76>
 800ce1a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800ce1c:	4290      	cmp	r0, r2
 800ce1e:	d01e      	beq.n	800ce5e <vQueueDelete+0x66>
 800ce20:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800ce22:	4290      	cmp	r0, r2
 800ce24:	d025      	beq.n	800ce72 <vQueueDelete+0x7a>
 800ce26:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800ce28:	4290      	cmp	r0, r2
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800ce2a:	bf08      	it	eq
 800ce2c:	2207      	moveq	r2, #7
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800ce2e:	d00f      	beq.n	800ce50 <vQueueDelete+0x58>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800ce30:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
 800ce34:	b14b      	cbz	r3, 800ce4a <vQueueDelete+0x52>
}
 800ce36:	4770      	bx	lr
 800ce38:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ce3c:	f383 8811 	msr	BASEPRI, r3
 800ce40:	f3bf 8f6f 	isb	sy
 800ce44:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800ce48:	e7fe      	b.n	800ce48 <vQueueDelete+0x50>
			vPortFree( pxQueue );
 800ce4a:	f7fe be05 	b.w	800ba58 <vPortFree>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800ce4e:	2200      	movs	r2, #0
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 800ce50:	ed9f 7b09 	vldr	d7, [pc, #36]	; 800ce78 <vQueueDelete+0x80>
 800ce54:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800ce58:	ed83 7b00 	vstr	d7, [r3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
				break;
 800ce5c:	e7e8      	b.n	800ce30 <vQueueDelete+0x38>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800ce5e:	2205      	movs	r2, #5
 800ce60:	e7f6      	b.n	800ce50 <vQueueDelete+0x58>
 800ce62:	2201      	movs	r2, #1
 800ce64:	e7f4      	b.n	800ce50 <vQueueDelete+0x58>
 800ce66:	2202      	movs	r2, #2
 800ce68:	e7f2      	b.n	800ce50 <vQueueDelete+0x58>
 800ce6a:	2203      	movs	r2, #3
 800ce6c:	e7f0      	b.n	800ce50 <vQueueDelete+0x58>
 800ce6e:	2204      	movs	r2, #4
 800ce70:	e7ee      	b.n	800ce50 <vQueueDelete+0x58>
 800ce72:	2206      	movs	r2, #6
 800ce74:	e7ec      	b.n	800ce50 <vQueueDelete+0x58>
 800ce76:	bf00      	nop
	...
 800ce80:	20013148 	.word	0x20013148

0800ce84 <vQueueAddToRegistry>:
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800ce84:	4b12      	ldr	r3, [pc, #72]	; (800ced0 <vQueueAddToRegistry+0x4c>)
 800ce86:	681a      	ldr	r2, [r3, #0]
 800ce88:	b17a      	cbz	r2, 800ceaa <vQueueAddToRegistry+0x26>
 800ce8a:	689a      	ldr	r2, [r3, #8]
 800ce8c:	b162      	cbz	r2, 800cea8 <vQueueAddToRegistry+0x24>
 800ce8e:	691a      	ldr	r2, [r3, #16]
 800ce90:	b192      	cbz	r2, 800ceb8 <vQueueAddToRegistry+0x34>
 800ce92:	699a      	ldr	r2, [r3, #24]
 800ce94:	b192      	cbz	r2, 800cebc <vQueueAddToRegistry+0x38>
 800ce96:	6a1a      	ldr	r2, [r3, #32]
 800ce98:	b192      	cbz	r2, 800cec0 <vQueueAddToRegistry+0x3c>
 800ce9a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800ce9c:	b192      	cbz	r2, 800cec4 <vQueueAddToRegistry+0x40>
 800ce9e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800cea0:	b192      	cbz	r2, 800cec8 <vQueueAddToRegistry+0x44>
 800cea2:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800cea4:	b192      	cbz	r2, 800cecc <vQueueAddToRegistry+0x48>
	}
 800cea6:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800cea8:	2201      	movs	r2, #1
				xQueueRegistry[ ux ].xHandle = xQueue;
 800ceaa:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 800ceae:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 800ceb2:	f8cc 0004 	str.w	r0, [ip, #4]
	}
 800ceb6:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800ceb8:	2202      	movs	r2, #2
 800ceba:	e7f6      	b.n	800ceaa <vQueueAddToRegistry+0x26>
 800cebc:	2203      	movs	r2, #3
 800cebe:	e7f4      	b.n	800ceaa <vQueueAddToRegistry+0x26>
 800cec0:	2204      	movs	r2, #4
 800cec2:	e7f2      	b.n	800ceaa <vQueueAddToRegistry+0x26>
 800cec4:	2205      	movs	r2, #5
 800cec6:	e7f0      	b.n	800ceaa <vQueueAddToRegistry+0x26>
 800cec8:	2206      	movs	r2, #6
 800ceca:	e7ee      	b.n	800ceaa <vQueueAddToRegistry+0x26>
 800cecc:	2207      	movs	r2, #7
 800cece:	e7ec      	b.n	800ceaa <vQueueAddToRegistry+0x26>
 800ced0:	20013148 	.word	0x20013148

0800ced4 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800ced4:	b570      	push	{r4, r5, r6, lr}
 800ced6:	4605      	mov	r5, r0
 800ced8:	460e      	mov	r6, r1
 800ceda:	4614      	mov	r4, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 800cedc:	f7fe fed2 	bl	800bc84 <vPortEnterCritical>
 800cee0:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 800cee4:	2bff      	cmp	r3, #255	; 0xff
 800cee6:	bf04      	itt	eq
 800cee8:	2300      	moveq	r3, #0
 800ceea:	f885 3044 	strbeq.w	r3, [r5, #68]	; 0x44
 800ceee:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 800cef2:	2bff      	cmp	r3, #255	; 0xff
 800cef4:	bf04      	itt	eq
 800cef6:	2300      	moveq	r3, #0
 800cef8:	f885 3045 	strbeq.w	r3, [r5, #69]	; 0x45
 800cefc:	f7fe fee4 	bl	800bcc8 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800cf00:	6bab      	ldr	r3, [r5, #56]	; 0x38
 800cf02:	2b00      	cmp	r3, #0
 800cf04:	d043      	beq.n	800cf8e <vQueueWaitForMessageRestricted+0xba>
	taskENTER_CRITICAL();
 800cf06:	f7fe febd 	bl	800bc84 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800cf0a:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 800cf0e:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800cf10:	2c00      	cmp	r4, #0
 800cf12:	dd14      	ble.n	800cf3e <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800cf14:	f105 0624 	add.w	r6, r5, #36	; 0x24
 800cf18:	e003      	b.n	800cf22 <vQueueWaitForMessageRestricted+0x4e>
			--cTxLock;
 800cf1a:	1e63      	subs	r3, r4, #1
 800cf1c:	b2da      	uxtb	r2, r3
 800cf1e:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800cf20:	b16a      	cbz	r2, 800cf3e <vQueueWaitForMessageRestricted+0x6a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800cf22:	6a6b      	ldr	r3, [r5, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800cf24:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800cf26:	b153      	cbz	r3, 800cf3e <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800cf28:	f000 fd2a 	bl	800d980 <xTaskRemoveFromEventList>
 800cf2c:	2800      	cmp	r0, #0
 800cf2e:	d0f4      	beq.n	800cf1a <vQueueWaitForMessageRestricted+0x46>
						vTaskMissedYield();
 800cf30:	f000 fdc2 	bl	800dab8 <vTaskMissedYield>
			--cTxLock;
 800cf34:	1e63      	subs	r3, r4, #1
 800cf36:	b2da      	uxtb	r2, r3
 800cf38:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800cf3a:	2a00      	cmp	r2, #0
 800cf3c:	d1f1      	bne.n	800cf22 <vQueueWaitForMessageRestricted+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 800cf3e:	23ff      	movs	r3, #255	; 0xff
 800cf40:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
	taskEXIT_CRITICAL();
 800cf44:	f7fe fec0 	bl	800bcc8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800cf48:	f7fe fe9c 	bl	800bc84 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800cf4c:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 800cf50:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800cf52:	2c00      	cmp	r4, #0
 800cf54:	dd14      	ble.n	800cf80 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800cf56:	f105 0610 	add.w	r6, r5, #16
 800cf5a:	e003      	b.n	800cf64 <vQueueWaitForMessageRestricted+0x90>
				--cRxLock;
 800cf5c:	1e63      	subs	r3, r4, #1
 800cf5e:	b2da      	uxtb	r2, r3
 800cf60:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800cf62:	b16a      	cbz	r2, 800cf80 <vQueueWaitForMessageRestricted+0xac>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800cf64:	692b      	ldr	r3, [r5, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800cf66:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800cf68:	b153      	cbz	r3, 800cf80 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800cf6a:	f000 fd09 	bl	800d980 <xTaskRemoveFromEventList>
 800cf6e:	2800      	cmp	r0, #0
 800cf70:	d0f4      	beq.n	800cf5c <vQueueWaitForMessageRestricted+0x88>
					vTaskMissedYield();
 800cf72:	f000 fda1 	bl	800dab8 <vTaskMissedYield>
				--cRxLock;
 800cf76:	1e63      	subs	r3, r4, #1
 800cf78:	b2da      	uxtb	r2, r3
 800cf7a:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800cf7c:	2a00      	cmp	r2, #0
 800cf7e:	d1f1      	bne.n	800cf64 <vQueueWaitForMessageRestricted+0x90>
		pxQueue->cRxLock = queueUNLOCKED;
 800cf80:	23ff      	movs	r3, #255	; 0xff
 800cf82:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
	}
 800cf86:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 800cf8a:	f7fe be9d 	b.w	800bcc8 <vPortExitCritical>
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800cf8e:	4622      	mov	r2, r4
 800cf90:	4631      	mov	r1, r6
 800cf92:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800cf96:	f000 fca9 	bl	800d8ec <vTaskPlaceOnEventListRestricted>
 800cf9a:	e7b4      	b.n	800cf06 <vQueueWaitForMessageRestricted+0x32>

0800cf9c <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 800cf9c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800cfa0:	4605      	mov	r5, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800cfa2:	f7fe fe6f 	bl	800bc84 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800cfa6:	4a34      	ldr	r2, [pc, #208]	; (800d078 <prvAddNewTaskToReadyList+0xdc>)
		if( pxCurrentTCB == NULL )
 800cfa8:	4e34      	ldr	r6, [pc, #208]	; (800d07c <prvAddNewTaskToReadyList+0xe0>)
		uxCurrentNumberOfTasks++;
 800cfaa:	6813      	ldr	r3, [r2, #0]
 800cfac:	3301      	adds	r3, #1
 800cfae:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
 800cfb0:	6833      	ldr	r3, [r6, #0]
 800cfb2:	2b00      	cmp	r3, #0
 800cfb4:	d032      	beq.n	800d01c <prvAddNewTaskToReadyList+0x80>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
 800cfb6:	4c32      	ldr	r4, [pc, #200]	; (800d080 <prvAddNewTaskToReadyList+0xe4>)
 800cfb8:	6823      	ldr	r3, [r4, #0]
 800cfba:	b33b      	cbz	r3, 800d00c <prvAddNewTaskToReadyList+0x70>
			{
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800cfbc:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800cfbe:	4f31      	ldr	r7, [pc, #196]	; (800d084 <prvAddNewTaskToReadyList+0xe8>)
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

		uxTaskNumber++;
 800cfc0:	4a31      	ldr	r2, [pc, #196]	; (800d088 <prvAddNewTaskToReadyList+0xec>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
 800cfc2:	4932      	ldr	r1, [pc, #200]	; (800d08c <prvAddNewTaskToReadyList+0xf0>)
		uxTaskNumber++;
 800cfc4:	6813      	ldr	r3, [r2, #0]
 800cfc6:	3301      	adds	r3, #1
 800cfc8:	6013      	str	r3, [r2, #0]
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 800cfca:	646b      	str	r3, [r5, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 800cfcc:	680b      	ldr	r3, [r1, #0]
 800cfce:	4283      	cmp	r3, r0
 800cfd0:	bf38      	it	cc
 800cfd2:	6008      	strcc	r0, [r1, #0]
 800cfd4:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800cfd8:	eb07 0080 	add.w	r0, r7, r0, lsl #2
 800cfdc:	1d29      	adds	r1, r5, #4
 800cfde:	f7fe fdaf 	bl	800bb40 <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
 800cfe2:	f7fe fe71 	bl	800bcc8 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
 800cfe6:	6823      	ldr	r3, [r4, #0]
 800cfe8:	b173      	cbz	r3, 800d008 <prvAddNewTaskToReadyList+0x6c>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 800cfea:	6832      	ldr	r2, [r6, #0]
 800cfec:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800cfee:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800cff0:	429a      	cmp	r2, r3
 800cff2:	d209      	bcs.n	800d008 <prvAddNewTaskToReadyList+0x6c>
		{
			taskYIELD_IF_USING_PREEMPTION();
 800cff4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800cff8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800cffc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d000:	f3bf 8f4f 	dsb	sy
 800d004:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 800d008:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800d00c:	6833      	ldr	r3, [r6, #0]
 800d00e:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800d010:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d012:	4f1c      	ldr	r7, [pc, #112]	; (800d084 <prvAddNewTaskToReadyList+0xe8>)
 800d014:	4283      	cmp	r3, r0
					pxCurrentTCB = pxNewTCB;
 800d016:	bf98      	it	ls
 800d018:	6035      	strls	r5, [r6, #0]
 800d01a:	e7d1      	b.n	800cfc0 <prvAddNewTaskToReadyList+0x24>
			pxCurrentTCB = pxNewTCB;
 800d01c:	6035      	str	r5, [r6, #0]
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 800d01e:	6813      	ldr	r3, [r2, #0]
 800d020:	2b01      	cmp	r3, #1
 800d022:	d003      	beq.n	800d02c <prvAddNewTaskToReadyList+0x90>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800d024:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800d026:	4f17      	ldr	r7, [pc, #92]	; (800d084 <prvAddNewTaskToReadyList+0xe8>)
 800d028:	4c15      	ldr	r4, [pc, #84]	; (800d080 <prvAddNewTaskToReadyList+0xe4>)
 800d02a:	e7c9      	b.n	800cfc0 <prvAddNewTaskToReadyList+0x24>
 800d02c:	4f15      	ldr	r7, [pc, #84]	; (800d084 <prvAddNewTaskToReadyList+0xe8>)
 800d02e:	463c      	mov	r4, r7
 800d030:	f507 688c 	add.w	r8, r7, #1120	; 0x460
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800d034:	4620      	mov	r0, r4
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800d036:	3414      	adds	r4, #20
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800d038:	f7fe fd72 	bl	800bb20 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800d03c:	45a0      	cmp	r8, r4
 800d03e:	d1f9      	bne.n	800d034 <prvAddNewTaskToReadyList+0x98>
	}

	vListInitialise( &xDelayedTaskList1 );
 800d040:	f8df 9060 	ldr.w	r9, [pc, #96]	; 800d0a4 <prvAddNewTaskToReadyList+0x108>
	vListInitialise( &xDelayedTaskList2 );
 800d044:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800d0a8 <prvAddNewTaskToReadyList+0x10c>
 800d048:	4c0d      	ldr	r4, [pc, #52]	; (800d080 <prvAddNewTaskToReadyList+0xe4>)
	vListInitialise( &xDelayedTaskList1 );
 800d04a:	4648      	mov	r0, r9
 800d04c:	f7fe fd68 	bl	800bb20 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 800d050:	4640      	mov	r0, r8
 800d052:	f7fe fd65 	bl	800bb20 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800d056:	480e      	ldr	r0, [pc, #56]	; (800d090 <prvAddNewTaskToReadyList+0xf4>)
 800d058:	f7fe fd62 	bl	800bb20 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 800d05c:	480d      	ldr	r0, [pc, #52]	; (800d094 <prvAddNewTaskToReadyList+0xf8>)
 800d05e:	f7fe fd5f 	bl	800bb20 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 800d062:	480d      	ldr	r0, [pc, #52]	; (800d098 <prvAddNewTaskToReadyList+0xfc>)
 800d064:	f7fe fd5c 	bl	800bb20 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800d068:	4b0c      	ldr	r3, [pc, #48]	; (800d09c <prvAddNewTaskToReadyList+0x100>)
		prvAddTaskToReadyList( pxNewTCB );
 800d06a:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
	pxDelayedTaskList = &xDelayedTaskList1;
 800d06c:	f8c3 9000 	str.w	r9, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 800d070:	4b0b      	ldr	r3, [pc, #44]	; (800d0a0 <prvAddNewTaskToReadyList+0x104>)
 800d072:	f8c3 8000 	str.w	r8, [r3]
}
 800d076:	e7a3      	b.n	800cfc0 <prvAddNewTaskToReadyList+0x24>
 800d078:	200135f4 	.word	0x200135f4
 800d07c:	20013188 	.word	0x20013188
 800d080:	20013650 	.word	0x20013650
 800d084:	20013194 	.word	0x20013194
 800d088:	20013600 	.word	0x20013600
 800d08c:	20013604 	.word	0x20013604
 800d090:	2001363c 	.word	0x2001363c
 800d094:	20013668 	.word	0x20013668
 800d098:	20013654 	.word	0x20013654
 800d09c:	2001318c 	.word	0x2001318c
 800d0a0:	20013190 	.word	0x20013190
 800d0a4:	20013608 	.word	0x20013608
 800d0a8:	2001361c 	.word	0x2001361c

0800d0ac <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800d0ac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d0b0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800d0b2:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800d0b6:	ea4f 0982 	mov.w	r9, r2, lsl #2
 800d0ba:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800d0bc:	4606      	mov	r6, r0
 800d0be:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800d0c0:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800d0c2:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800d0c4:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800d0c6:	f01a f9d8 	bl	802747a <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800d0ca:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800d0cc:	f1a9 0904 	sub.w	r9, r9, #4
 800d0d0:	444b      	add	r3, r9
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 800d0d2:	f023 0907 	bic.w	r9, r3, #7
	if( pcName != NULL )
 800d0d6:	2d00      	cmp	r5, #0
 800d0d8:	d079      	beq.n	800d1ce <prvInitialiseNewTask.constprop.0+0x122>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800d0da:	782b      	ldrb	r3, [r5, #0]
 800d0dc:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
			if( pcName[ x ] == ( char ) 0x00 )
 800d0e0:	2b00      	cmp	r3, #0
 800d0e2:	d03b      	beq.n	800d15c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800d0e4:	786b      	ldrb	r3, [r5, #1]
 800d0e6:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
			if( pcName[ x ] == ( char ) 0x00 )
 800d0ea:	2b00      	cmp	r3, #0
 800d0ec:	d036      	beq.n	800d15c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800d0ee:	78ab      	ldrb	r3, [r5, #2]
 800d0f0:	f884 3036 	strb.w	r3, [r4, #54]	; 0x36
			if( pcName[ x ] == ( char ) 0x00 )
 800d0f4:	b393      	cbz	r3, 800d15c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800d0f6:	78eb      	ldrb	r3, [r5, #3]
 800d0f8:	f884 3037 	strb.w	r3, [r4, #55]	; 0x37
			if( pcName[ x ] == ( char ) 0x00 )
 800d0fc:	b373      	cbz	r3, 800d15c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800d0fe:	792b      	ldrb	r3, [r5, #4]
 800d100:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
			if( pcName[ x ] == ( char ) 0x00 )
 800d104:	b353      	cbz	r3, 800d15c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800d106:	796b      	ldrb	r3, [r5, #5]
 800d108:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
			if( pcName[ x ] == ( char ) 0x00 )
 800d10c:	b333      	cbz	r3, 800d15c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800d10e:	79ab      	ldrb	r3, [r5, #6]
 800d110:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
 800d114:	b313      	cbz	r3, 800d15c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800d116:	79eb      	ldrb	r3, [r5, #7]
 800d118:	f884 303b 	strb.w	r3, [r4, #59]	; 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
 800d11c:	b1f3      	cbz	r3, 800d15c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800d11e:	7a2b      	ldrb	r3, [r5, #8]
 800d120:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
 800d124:	b1d3      	cbz	r3, 800d15c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800d126:	7a6b      	ldrb	r3, [r5, #9]
 800d128:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
 800d12c:	b1b3      	cbz	r3, 800d15c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800d12e:	7aab      	ldrb	r3, [r5, #10]
 800d130:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
 800d134:	b193      	cbz	r3, 800d15c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800d136:	7aeb      	ldrb	r3, [r5, #11]
 800d138:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
 800d13c:	b173      	cbz	r3, 800d15c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800d13e:	7b2b      	ldrb	r3, [r5, #12]
 800d140:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
			if( pcName[ x ] == ( char ) 0x00 )
 800d144:	b153      	cbz	r3, 800d15c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800d146:	7b6b      	ldrb	r3, [r5, #13]
 800d148:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
			if( pcName[ x ] == ( char ) 0x00 )
 800d14c:	b133      	cbz	r3, 800d15c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800d14e:	7bab      	ldrb	r3, [r5, #14]
 800d150:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
			if( pcName[ x ] == ( char ) 0x00 )
 800d154:	b113      	cbz	r3, 800d15c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800d156:	7beb      	ldrb	r3, [r5, #15]
 800d158:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 800d15c:	2300      	movs	r3, #0
 800d15e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800d162:	9d08      	ldr	r5, [sp, #32]
 800d164:	2d37      	cmp	r5, #55	; 0x37
 800d166:	bf28      	it	cs
 800d168:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 800d16a:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 800d16e:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 800d170:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800d172:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800d174:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800d178:	f7fe fcde 	bl	800bb38 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800d17c:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 800d180:	f104 0018 	add.w	r0, r4, #24
 800d184:	f7fe fcd8 	bl	800bb38 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800d188:	61a5      	str	r5, [r4, #24]
		pxNewTCB->ulNotifiedValue = 0;
 800d18a:	f8c4 a0a4 	str.w	sl, [r4, #164]	; 0xa4
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800d18e:	4651      	mov	r1, sl
 800d190:	224c      	movs	r2, #76	; 0x4c
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 800d192:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800d194:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 800d196:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800d19a:	f884 a0a8 	strb.w	sl, [r4, #168]	; 0xa8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800d19e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800d1a2:	f01a f96a 	bl	802747a <memset>
 800d1a6:	4b0b      	ldr	r3, [pc, #44]	; (800d1d4 <prvInitialiseNewTask.constprop.0+0x128>)
 800d1a8:	65e3      	str	r3, [r4, #92]	; 0x5c
 800d1aa:	f103 0568 	add.w	r5, r3, #104	; 0x68
 800d1ae:	33d0      	adds	r3, #208	; 0xd0
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800d1b0:	463a      	mov	r2, r7
 800d1b2:	4631      	mov	r1, r6
 800d1b4:	4648      	mov	r0, r9
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800d1b6:	6625      	str	r5, [r4, #96]	; 0x60
 800d1b8:	6663      	str	r3, [r4, #100]	; 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800d1ba:	f7fe fd3b 	bl	800bc34 <pxPortInitialiseStack>
 800d1be:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800d1c0:	f1b8 0f00 	cmp.w	r8, #0
 800d1c4:	d001      	beq.n	800d1ca <prvInitialiseNewTask.constprop.0+0x11e>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 800d1c6:	f8c8 4000 	str.w	r4, [r8]
}
 800d1ca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800d1ce:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 800d1d2:	e7c6      	b.n	800d162 <prvInitialiseNewTask.constprop.0+0xb6>
 800d1d4:	20014118 	.word	0x20014118

0800d1d8 <prvIdleTask>:
{
 800d1d8:	b580      	push	{r7, lr}
 800d1da:	4d23      	ldr	r5, [pc, #140]	; (800d268 <prvIdleTask+0x90>)
 800d1dc:	4f23      	ldr	r7, [pc, #140]	; (800d26c <prvIdleTask+0x94>)
 800d1de:	4e24      	ldr	r6, [pc, #144]	; (800d270 <prvIdleTask+0x98>)
 800d1e0:	f8df 8090 	ldr.w	r8, [pc, #144]	; 800d274 <prvIdleTask+0x9c>
				taskYIELD();
 800d1e4:	f04f 2ae0 	mov.w	sl, #3758153728	; 0xe000e000
 800d1e8:	f04f 5980 	mov.w	r9, #268435456	; 0x10000000
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800d1ec:	682b      	ldr	r3, [r5, #0]
 800d1ee:	b35b      	cbz	r3, 800d248 <prvIdleTask+0x70>
		{
			taskENTER_CRITICAL();
 800d1f0:	f7fe fd48 	bl	800bc84 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800d1f4:	68fb      	ldr	r3, [r7, #12]
 800d1f6:	68dc      	ldr	r4, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800d1f8:	1d20      	adds	r0, r4, #4
 800d1fa:	f7fe fcc9 	bl	800bb90 <uxListRemove>
				--uxCurrentNumberOfTasks;
 800d1fe:	6833      	ldr	r3, [r6, #0]
 800d200:	3b01      	subs	r3, #1
 800d202:	6033      	str	r3, [r6, #0]
				--uxDeletedTasksWaitingCleanUp;
 800d204:	682b      	ldr	r3, [r5, #0]
 800d206:	3b01      	subs	r3, #1
 800d208:	602b      	str	r3, [r5, #0]
			}
			taskEXIT_CRITICAL();
 800d20a:	f7fe fd5d 	bl	800bcc8 <vPortExitCritical>
		to the task to free any memory allocated at the application level.
		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
		for additional information. */
		#if ( configUSE_NEWLIB_REENTRANT == 1 )
		{
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 800d20e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800d212:	f01a f97b 	bl	802750c <_reclaim_reent>
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800d216:	f894 30a9 	ldrb.w	r3, [r4, #169]	; 0xa9
 800d21a:	b163      	cbz	r3, 800d236 <prvIdleTask+0x5e>
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
				vPortFree( pxTCB );
			}
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 800d21c:	2b01      	cmp	r3, #1
 800d21e:	d01e      	beq.n	800d25e <prvIdleTask+0x86>
			}
			else
			{
				/* Neither the stack nor the TCB were allocated dynamically, so
				nothing needs to be freed. */
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 800d220:	2b02      	cmp	r3, #2
 800d222:	d0e3      	beq.n	800d1ec <prvIdleTask+0x14>
 800d224:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d228:	f383 8811 	msr	BASEPRI, r3
 800d22c:	f3bf 8f6f 	isb	sy
 800d230:	f3bf 8f4f 	dsb	sy
 800d234:	e7fe      	b.n	800d234 <prvIdleTask+0x5c>
				vPortFree( pxTCB->pxStack );
 800d236:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800d238:	f7fe fc0e 	bl	800ba58 <vPortFree>
				vPortFree( pxTCB );
 800d23c:	4620      	mov	r0, r4
 800d23e:	f7fe fc0b 	bl	800ba58 <vPortFree>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800d242:	682b      	ldr	r3, [r5, #0]
 800d244:	2b00      	cmp	r3, #0
 800d246:	d1d3      	bne.n	800d1f0 <prvIdleTask+0x18>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800d248:	f8d8 3000 	ldr.w	r3, [r8]
 800d24c:	2b01      	cmp	r3, #1
 800d24e:	d9cd      	bls.n	800d1ec <prvIdleTask+0x14>
				taskYIELD();
 800d250:	f8ca 9d04 	str.w	r9, [sl, #3332]	; 0xd04
 800d254:	f3bf 8f4f 	dsb	sy
 800d258:	f3bf 8f6f 	isb	sy
 800d25c:	e7c6      	b.n	800d1ec <prvIdleTask+0x14>
				vPortFree( pxTCB );
 800d25e:	4620      	mov	r0, r4
 800d260:	f7fe fbfa 	bl	800ba58 <vPortFree>
 800d264:	e7c2      	b.n	800d1ec <prvIdleTask+0x14>
 800d266:	bf00      	nop
 800d268:	200135f8 	.word	0x200135f8
 800d26c:	20013668 	.word	0x20013668
 800d270:	200135f4 	.word	0x200135f4
 800d274:	20013194 	.word	0x20013194

0800d278 <xTaskIncrementTick.part.0>:
BaseType_t xTaskIncrementTick( void )
 800d278:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 800d27c:	4b47      	ldr	r3, [pc, #284]	; (800d39c <xTaskIncrementTick.part.0+0x124>)
 800d27e:	681e      	ldr	r6, [r3, #0]
 800d280:	3601      	adds	r6, #1
BaseType_t xTaskIncrementTick( void )
 800d282:	b083      	sub	sp, #12
		xTickCount = xConstTickCount;
 800d284:	601e      	str	r6, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 800d286:	2e00      	cmp	r6, #0
 800d288:	d040      	beq.n	800d30c <xTaskIncrementTick.part.0+0x94>
 800d28a:	f8df b124 	ldr.w	fp, [pc, #292]	; 800d3b0 <xTaskIncrementTick.part.0+0x138>
		if( xConstTickCount >= xNextTaskUnblockTime )
 800d28e:	f8db 3000 	ldr.w	r3, [fp]
 800d292:	429e      	cmp	r6, r3
 800d294:	d347      	bcc.n	800d326 <xTaskIncrementTick.part.0+0xae>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800d296:	4f42      	ldr	r7, [pc, #264]	; (800d3a0 <xTaskIncrementTick.part.0+0x128>)
 800d298:	f8df 9118 	ldr.w	r9, [pc, #280]	; 800d3b4 <xTaskIncrementTick.part.0+0x13c>
 800d29c:	683b      	ldr	r3, [r7, #0]
 800d29e:	f8df a118 	ldr.w	sl, [pc, #280]	; 800d3b8 <xTaskIncrementTick.part.0+0x140>
 800d2a2:	681d      	ldr	r5, [r3, #0]
 800d2a4:	2d00      	cmp	r5, #0
 800d2a6:	d073      	beq.n	800d390 <xTaskIncrementTick.part.0+0x118>
					prvAddTaskToReadyList( pxTCB );
 800d2a8:	f8df 8110 	ldr.w	r8, [pc, #272]	; 800d3bc <xTaskIncrementTick.part.0+0x144>
BaseType_t xSwitchRequired = pdFALSE;
 800d2ac:	2500      	movs	r5, #0
 800d2ae:	e022      	b.n	800d2f6 <xTaskIncrementTick.part.0+0x7e>
 800d2b0:	9101      	str	r1, [sp, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800d2b2:	f7fe fc6d 	bl	800bb90 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800d2b6:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800d2b8:	9901      	ldr	r1, [sp, #4]
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800d2ba:	f104 0018 	add.w	r0, r4, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800d2be:	b113      	cbz	r3, 800d2c6 <xTaskIncrementTick.part.0+0x4e>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800d2c0:	f7fe fc66 	bl	800bb90 <uxListRemove>
 800d2c4:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 800d2c6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800d2c8:	f8d8 2000 	ldr.w	r2, [r8]
 800d2cc:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 800d2d0:	4293      	cmp	r3, r2
 800d2d2:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 800d2d6:	bf88      	it	hi
 800d2d8:	f8c8 3000 	strhi.w	r3, [r8]
 800d2dc:	f7fe fc30 	bl	800bb40 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800d2e0:	f8da 2000 	ldr.w	r2, [sl]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800d2e4:	683b      	ldr	r3, [r7, #0]
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800d2e6:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800d2e8:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800d2ea:	681b      	ldr	r3, [r3, #0]
							xSwitchRequired = pdTRUE;
 800d2ec:	4291      	cmp	r1, r2
 800d2ee:	bf28      	it	cs
 800d2f0:	2501      	movcs	r5, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800d2f2:	2b00      	cmp	r3, #0
 800d2f4:	d04c      	beq.n	800d390 <xTaskIncrementTick.part.0+0x118>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800d2f6:	683b      	ldr	r3, [r7, #0]
 800d2f8:	68db      	ldr	r3, [r3, #12]
 800d2fa:	68dc      	ldr	r4, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800d2fc:	6863      	ldr	r3, [r4, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800d2fe:	1d21      	adds	r1, r4, #4
					if( xConstTickCount < xItemValue )
 800d300:	429e      	cmp	r6, r3
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800d302:	4608      	mov	r0, r1
					if( xConstTickCount < xItemValue )
 800d304:	d2d4      	bcs.n	800d2b0 <xTaskIncrementTick.part.0+0x38>
						xNextTaskUnblockTime = xItemValue;
 800d306:	f8cb 3000 	str.w	r3, [fp]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 800d30a:	e011      	b.n	800d330 <xTaskIncrementTick.part.0+0xb8>
			taskSWITCH_DELAYED_LISTS();
 800d30c:	4b24      	ldr	r3, [pc, #144]	; (800d3a0 <xTaskIncrementTick.part.0+0x128>)
 800d30e:	681a      	ldr	r2, [r3, #0]
 800d310:	6812      	ldr	r2, [r2, #0]
 800d312:	b30a      	cbz	r2, 800d358 <xTaskIncrementTick.part.0+0xe0>
 800d314:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d318:	f383 8811 	msr	BASEPRI, r3
 800d31c:	f3bf 8f6f 	isb	sy
 800d320:	f3bf 8f4f 	dsb	sy
 800d324:	e7fe      	b.n	800d324 <xTaskIncrementTick.part.0+0xac>
 800d326:	f8df 908c 	ldr.w	r9, [pc, #140]	; 800d3b4 <xTaskIncrementTick.part.0+0x13c>
 800d32a:	f8df a08c 	ldr.w	sl, [pc, #140]	; 800d3b8 <xTaskIncrementTick.part.0+0x140>
BaseType_t xSwitchRequired = pdFALSE;
 800d32e:	2500      	movs	r5, #0
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800d330:	f8da 3000 	ldr.w	r3, [sl]
			if( xYieldPending != pdFALSE )
 800d334:	491b      	ldr	r1, [pc, #108]	; (800d3a4 <xTaskIncrementTick.part.0+0x12c>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800d336:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d338:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800d33c:	009b      	lsls	r3, r3, #2
 800d33e:	f859 2003 	ldr.w	r2, [r9, r3]
			if( xYieldPending != pdFALSE )
 800d342:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
 800d344:	2a02      	cmp	r2, #2
 800d346:	bf28      	it	cs
 800d348:	2501      	movcs	r5, #1
				xSwitchRequired = pdTRUE;
 800d34a:	2b00      	cmp	r3, #0
}
 800d34c:	bf0c      	ite	eq
 800d34e:	4628      	moveq	r0, r5
 800d350:	2001      	movne	r0, #1
 800d352:	b003      	add	sp, #12
 800d354:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
 800d358:	4a13      	ldr	r2, [pc, #76]	; (800d3a8 <xTaskIncrementTick.part.0+0x130>)
 800d35a:	6818      	ldr	r0, [r3, #0]
 800d35c:	6811      	ldr	r1, [r2, #0]
 800d35e:	6019      	str	r1, [r3, #0]
 800d360:	4912      	ldr	r1, [pc, #72]	; (800d3ac <xTaskIncrementTick.part.0+0x134>)
 800d362:	6010      	str	r0, [r2, #0]
 800d364:	680a      	ldr	r2, [r1, #0]
 800d366:	3201      	adds	r2, #1
 800d368:	600a      	str	r2, [r1, #0]

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800d36a:	681a      	ldr	r2, [r3, #0]
 800d36c:	6812      	ldr	r2, [r2, #0]
 800d36e:	b932      	cbnz	r2, 800d37e <xTaskIncrementTick.part.0+0x106>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
 800d370:	f8df b03c 	ldr.w	fp, [pc, #60]	; 800d3b0 <xTaskIncrementTick.part.0+0x138>
 800d374:	f04f 33ff 	mov.w	r3, #4294967295
 800d378:	f8cb 3000 	str.w	r3, [fp]
 800d37c:	e787      	b.n	800d28e <xTaskIncrementTick.part.0+0x16>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800d37e:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800d380:	f8df b02c 	ldr.w	fp, [pc, #44]	; 800d3b0 <xTaskIncrementTick.part.0+0x138>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800d384:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800d386:	68db      	ldr	r3, [r3, #12]
 800d388:	685b      	ldr	r3, [r3, #4]
 800d38a:	f8cb 3000 	str.w	r3, [fp]
	}
}
 800d38e:	e77e      	b.n	800d28e <xTaskIncrementTick.part.0+0x16>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800d390:	f04f 33ff 	mov.w	r3, #4294967295
 800d394:	f8cb 3000 	str.w	r3, [fp]
					break;
 800d398:	e7ca      	b.n	800d330 <xTaskIncrementTick.part.0+0xb8>
 800d39a:	bf00      	nop
 800d39c:	2001367c 	.word	0x2001367c
 800d3a0:	2001318c 	.word	0x2001318c
 800d3a4:	20013680 	.word	0x20013680
 800d3a8:	20013190 	.word	0x20013190
 800d3ac:	20013634 	.word	0x20013634
 800d3b0:	20013630 	.word	0x20013630
 800d3b4:	20013194 	.word	0x20013194
 800d3b8:	20013188 	.word	0x20013188
 800d3bc:	20013604 	.word	0x20013604

0800d3c0 <xTaskResumeAll.part.0>:
BaseType_t xTaskResumeAll( void )
 800d3c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		--uxSchedulerSuspended;
 800d3c4:	4d41      	ldr	r5, [pc, #260]	; (800d4cc <xTaskResumeAll.part.0+0x10c>)
BaseType_t xTaskResumeAll( void )
 800d3c6:	b083      	sub	sp, #12
	taskENTER_CRITICAL();
 800d3c8:	f7fe fc5c 	bl	800bc84 <vPortEnterCritical>
		--uxSchedulerSuspended;
 800d3cc:	682b      	ldr	r3, [r5, #0]
 800d3ce:	3b01      	subs	r3, #1
 800d3d0:	602b      	str	r3, [r5, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800d3d2:	682b      	ldr	r3, [r5, #0]
 800d3d4:	2b00      	cmp	r3, #0
 800d3d6:	d161      	bne.n	800d49c <xTaskResumeAll.part.0+0xdc>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800d3d8:	4b3d      	ldr	r3, [pc, #244]	; (800d4d0 <xTaskResumeAll.part.0+0x110>)
 800d3da:	681b      	ldr	r3, [r3, #0]
 800d3dc:	2b00      	cmp	r3, #0
 800d3de:	d05d      	beq.n	800d49c <xTaskResumeAll.part.0+0xdc>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800d3e0:	4e3c      	ldr	r6, [pc, #240]	; (800d4d4 <xTaskResumeAll.part.0+0x114>)
 800d3e2:	6833      	ldr	r3, [r6, #0]
 800d3e4:	2b00      	cmp	r3, #0
 800d3e6:	d06e      	beq.n	800d4c6 <xTaskResumeAll.part.0+0x106>
 800d3e8:	4f3b      	ldr	r7, [pc, #236]	; (800d4d8 <xTaskResumeAll.part.0+0x118>)
 800d3ea:	f8df 90fc 	ldr.w	r9, [pc, #252]	; 800d4e8 <xTaskResumeAll.part.0+0x128>
 800d3ee:	f8df 80fc 	ldr.w	r8, [pc, #252]	; 800d4ec <xTaskResumeAll.part.0+0x12c>
 800d3f2:	f8df a0fc 	ldr.w	sl, [pc, #252]	; 800d4f0 <xTaskResumeAll.part.0+0x130>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800d3f6:	68f3      	ldr	r3, [r6, #12]
 800d3f8:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800d3fa:	f104 0b04 	add.w	fp, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800d3fe:	f104 0018 	add.w	r0, r4, #24
 800d402:	f7fe fbc5 	bl	800bb90 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800d406:	4658      	mov	r0, fp
 800d408:	f7fe fbc2 	bl	800bb90 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800d40c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800d40e:	683a      	ldr	r2, [r7, #0]
 800d410:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 800d414:	4293      	cmp	r3, r2
 800d416:	4659      	mov	r1, fp
 800d418:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 800d41c:	bf88      	it	hi
 800d41e:	603b      	strhi	r3, [r7, #0]
 800d420:	f7fe fb8e 	bl	800bb40 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800d424:	f8d8 3000 	ldr.w	r3, [r8]
 800d428:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800d42a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d42c:	429a      	cmp	r2, r3
 800d42e:	d33d      	bcc.n	800d4ac <xTaskResumeAll.part.0+0xec>
						xYieldPending = pdTRUE;
 800d430:	2301      	movs	r3, #1
 800d432:	f8ca 3000 	str.w	r3, [sl]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800d436:	6833      	ldr	r3, [r6, #0]
 800d438:	2b00      	cmp	r3, #0
 800d43a:	d1dc      	bne.n	800d3f6 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800d43c:	4b27      	ldr	r3, [pc, #156]	; (800d4dc <xTaskResumeAll.part.0+0x11c>)
 800d43e:	681a      	ldr	r2, [r3, #0]
 800d440:	6812      	ldr	r2, [r2, #0]
 800d442:	2a00      	cmp	r2, #0
 800d444:	d03a      	beq.n	800d4bc <xTaskResumeAll.part.0+0xfc>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800d446:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800d448:	4b25      	ldr	r3, [pc, #148]	; (800d4e0 <xTaskResumeAll.part.0+0x120>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800d44a:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800d44c:	68d2      	ldr	r2, [r2, #12]
 800d44e:	6852      	ldr	r2, [r2, #4]
 800d450:	601a      	str	r2, [r3, #0]
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 800d452:	4e24      	ldr	r6, [pc, #144]	; (800d4e4 <xTaskResumeAll.part.0+0x124>)
 800d454:	6834      	ldr	r4, [r6, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 800d456:	b194      	cbz	r4, 800d47e <xTaskResumeAll.part.0+0xbe>
								xYieldPending = pdTRUE;
 800d458:	2701      	movs	r7, #1
 800d45a:	e006      	b.n	800d46a <xTaskResumeAll.part.0+0xaa>
 800d45c:	f7ff ff0c 	bl	800d278 <xTaskIncrementTick.part.0>
							if( xTaskIncrementTick() != pdFALSE )
 800d460:	b108      	cbz	r0, 800d466 <xTaskResumeAll.part.0+0xa6>
								xYieldPending = pdTRUE;
 800d462:	f8ca 7000 	str.w	r7, [sl]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800d466:	3c01      	subs	r4, #1
 800d468:	d008      	beq.n	800d47c <xTaskResumeAll.part.0+0xbc>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800d46a:	682b      	ldr	r3, [r5, #0]
 800d46c:	2b00      	cmp	r3, #0
 800d46e:	d0f5      	beq.n	800d45c <xTaskResumeAll.part.0+0x9c>
		++xPendedTicks;
 800d470:	6833      	ldr	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800d472:	3c01      	subs	r4, #1
		++xPendedTicks;
 800d474:	f103 0301 	add.w	r3, r3, #1
 800d478:	6033      	str	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800d47a:	d1f6      	bne.n	800d46a <xTaskResumeAll.part.0+0xaa>
						xPendedTicks = 0;
 800d47c:	6034      	str	r4, [r6, #0]
				if( xYieldPending != pdFALSE )
 800d47e:	f8da 3000 	ldr.w	r3, [sl]
 800d482:	b15b      	cbz	r3, 800d49c <xTaskResumeAll.part.0+0xdc>
					taskYIELD_IF_USING_PREEMPTION();
 800d484:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d488:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d48c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d490:	f3bf 8f4f 	dsb	sy
 800d494:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 800d498:	2001      	movs	r0, #1
 800d49a:	e000      	b.n	800d49e <xTaskResumeAll.part.0+0xde>
BaseType_t xAlreadyYielded = pdFALSE;
 800d49c:	2000      	movs	r0, #0
 800d49e:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800d4a0:	f7fe fc12 	bl	800bcc8 <vPortExitCritical>
}
 800d4a4:	9801      	ldr	r0, [sp, #4]
 800d4a6:	b003      	add	sp, #12
 800d4a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800d4ac:	6833      	ldr	r3, [r6, #0]
 800d4ae:	2b00      	cmp	r3, #0
 800d4b0:	d1a1      	bne.n	800d3f6 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800d4b2:	4b0a      	ldr	r3, [pc, #40]	; (800d4dc <xTaskResumeAll.part.0+0x11c>)
 800d4b4:	681a      	ldr	r2, [r3, #0]
 800d4b6:	6812      	ldr	r2, [r2, #0]
 800d4b8:	2a00      	cmp	r2, #0
 800d4ba:	d1c4      	bne.n	800d446 <xTaskResumeAll.part.0+0x86>
		xNextTaskUnblockTime = portMAX_DELAY;
 800d4bc:	4b08      	ldr	r3, [pc, #32]	; (800d4e0 <xTaskResumeAll.part.0+0x120>)
 800d4be:	f04f 32ff 	mov.w	r2, #4294967295
 800d4c2:	601a      	str	r2, [r3, #0]
 800d4c4:	e7c5      	b.n	800d452 <xTaskResumeAll.part.0+0x92>
 800d4c6:	f8df a028 	ldr.w	sl, [pc, #40]	; 800d4f0 <xTaskResumeAll.part.0+0x130>
 800d4ca:	e7c2      	b.n	800d452 <xTaskResumeAll.part.0+0x92>
 800d4cc:	200135fc 	.word	0x200135fc
 800d4d0:	200135f4 	.word	0x200135f4
 800d4d4:	2001363c 	.word	0x2001363c
 800d4d8:	20013604 	.word	0x20013604
 800d4dc:	2001318c 	.word	0x2001318c
 800d4e0:	20013630 	.word	0x20013630
 800d4e4:	20013638 	.word	0x20013638
 800d4e8:	20013194 	.word	0x20013194
 800d4ec:	20013188 	.word	0x20013188
 800d4f0:	20013680 	.word	0x20013680

0800d4f4 <xTaskCreateStatic>:
	{
 800d4f4:	b530      	push	{r4, r5, lr}
 800d4f6:	b087      	sub	sp, #28
 800d4f8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 800d4fa:	b1c4      	cbz	r4, 800d52e <xTaskCreateStatic+0x3a>
		configASSERT( pxTaskBuffer != NULL );
 800d4fc:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800d4fe:	b16d      	cbz	r5, 800d51c <xTaskCreateStatic+0x28>
			volatile size_t xSize = sizeof( StaticTask_t );
 800d500:	25ac      	movs	r5, #172	; 0xac
 800d502:	9505      	str	r5, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 800d504:	9d05      	ldr	r5, [sp, #20]
 800d506:	2dac      	cmp	r5, #172	; 0xac
 800d508:	d01a      	beq.n	800d540 <xTaskCreateStatic+0x4c>
 800d50a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d50e:	f383 8811 	msr	BASEPRI, r3
 800d512:	f3bf 8f6f 	isb	sy
 800d516:	f3bf 8f4f 	dsb	sy
 800d51a:	e7fe      	b.n	800d51a <xTaskCreateStatic+0x26>
 800d51c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d520:	f383 8811 	msr	BASEPRI, r3
 800d524:	f3bf 8f6f 	isb	sy
 800d528:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 800d52c:	e7fe      	b.n	800d52c <xTaskCreateStatic+0x38>
 800d52e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d532:	f383 8811 	msr	BASEPRI, r3
 800d536:	f3bf 8f6f 	isb	sy
 800d53a:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 800d53e:	e7fe      	b.n	800d53e <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800d540:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800d542:	632c      	str	r4, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800d544:	2402      	movs	r4, #2
 800d546:	f885 40a9 	strb.w	r4, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800d54a:	ac04      	add	r4, sp, #16
 800d54c:	e9cd 4501 	strd	r4, r5, [sp, #4]
 800d550:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800d552:	9400      	str	r4, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800d554:	9c05      	ldr	r4, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800d556:	f7ff fda9 	bl	800d0ac <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800d55a:	980c      	ldr	r0, [sp, #48]	; 0x30
 800d55c:	f7ff fd1e 	bl	800cf9c <prvAddNewTaskToReadyList>
	}
 800d560:	9804      	ldr	r0, [sp, #16]
 800d562:	b007      	add	sp, #28
 800d564:	bd30      	pop	{r4, r5, pc}
 800d566:	bf00      	nop

0800d568 <xTaskCreate>:
	{
 800d568:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d56c:	4607      	mov	r7, r0
 800d56e:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800d570:	0090      	lsls	r0, r2, #2
	{
 800d572:	4615      	mov	r5, r2
 800d574:	4688      	mov	r8, r1
 800d576:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800d578:	f7fe f9b2 	bl	800b8e0 <pvPortMalloc>
			if( pxStack != NULL )
 800d57c:	b1d8      	cbz	r0, 800d5b6 <xTaskCreate+0x4e>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800d57e:	4604      	mov	r4, r0
 800d580:	20ac      	movs	r0, #172	; 0xac
 800d582:	f7fe f9ad 	bl	800b8e0 <pvPortMalloc>
				if( pxNewTCB != NULL )
 800d586:	4606      	mov	r6, r0
 800d588:	b1d0      	cbz	r0, 800d5c0 <xTaskCreate+0x58>
					pxNewTCB->pxStack = pxStack;
 800d58a:	6304      	str	r4, [r0, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800d58c:	2400      	movs	r4, #0
 800d58e:	f886 40a9 	strb.w	r4, [r6, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800d592:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 800d594:	9401      	str	r4, [sp, #4]
 800d596:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800d598:	9602      	str	r6, [sp, #8]
 800d59a:	464b      	mov	r3, r9
 800d59c:	462a      	mov	r2, r5
 800d59e:	4641      	mov	r1, r8
 800d5a0:	4638      	mov	r0, r7
 800d5a2:	9400      	str	r4, [sp, #0]
 800d5a4:	f7ff fd82 	bl	800d0ac <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800d5a8:	4630      	mov	r0, r6
 800d5aa:	f7ff fcf7 	bl	800cf9c <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800d5ae:	2001      	movs	r0, #1
	}
 800d5b0:	b005      	add	sp, #20
 800d5b2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800d5b6:	f04f 30ff 	mov.w	r0, #4294967295
	}
 800d5ba:	b005      	add	sp, #20
 800d5bc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 800d5c0:	4620      	mov	r0, r4
 800d5c2:	f7fe fa49 	bl	800ba58 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800d5c6:	f04f 30ff 	mov.w	r0, #4294967295
 800d5ca:	e7f1      	b.n	800d5b0 <xTaskCreate+0x48>

0800d5cc <vTaskDelay>:
	{
 800d5cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 800d5ce:	b950      	cbnz	r0, 800d5e6 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 800d5d0:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d5d4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d5d8:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d5dc:	f3bf 8f4f 	dsb	sy
 800d5e0:	f3bf 8f6f 	isb	sy
	}
 800d5e4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 800d5e6:	4d1e      	ldr	r5, [pc, #120]	; (800d660 <vTaskDelay+0x94>)
 800d5e8:	682b      	ldr	r3, [r5, #0]
 800d5ea:	b143      	cbz	r3, 800d5fe <vTaskDelay+0x32>
 800d5ec:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d5f0:	f383 8811 	msr	BASEPRI, r3
 800d5f4:	f3bf 8f6f 	isb	sy
 800d5f8:	f3bf 8f4f 	dsb	sy
 800d5fc:	e7fe      	b.n	800d5fc <vTaskDelay+0x30>
	++uxSchedulerSuspended;
 800d5fe:	682b      	ldr	r3, [r5, #0]
 800d600:	3301      	adds	r3, #1
 800d602:	4604      	mov	r4, r0
 800d604:	602b      	str	r3, [r5, #0]
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 800d606:	4b17      	ldr	r3, [pc, #92]	; (800d664 <vTaskDelay+0x98>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800d608:	4e17      	ldr	r6, [pc, #92]	; (800d668 <vTaskDelay+0x9c>)
const TickType_t xConstTickCount = xTickCount;
 800d60a:	681f      	ldr	r7, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800d60c:	6830      	ldr	r0, [r6, #0]
 800d60e:	3004      	adds	r0, #4
 800d610:	f7fe fabe 	bl	800bb90 <uxListRemove>
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800d614:	6833      	ldr	r3, [r6, #0]
 800d616:	19e4      	adds	r4, r4, r7
 800d618:	605c      	str	r4, [r3, #4]

			if( xTimeToWake < xConstTickCount )
 800d61a:	d310      	bcc.n	800d63e <vTaskDelay+0x72>
			{
				/* Wake time has overflowed.  Place this item in the overflow
				list. */
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800d61c:	4b13      	ldr	r3, [pc, #76]	; (800d66c <vTaskDelay+0xa0>)
 800d61e:	6818      	ldr	r0, [r3, #0]
 800d620:	6831      	ldr	r1, [r6, #0]
 800d622:	3104      	adds	r1, #4
 800d624:	f7fe fa9c 	bl	800bb60 <vListInsert>
	configASSERT( uxSchedulerSuspended );
 800d628:	682b      	ldr	r3, [r5, #0]
 800d62a:	b9a3      	cbnz	r3, 800d656 <vTaskDelay+0x8a>
 800d62c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d630:	f383 8811 	msr	BASEPRI, r3
 800d634:	f3bf 8f6f 	isb	sy
 800d638:	f3bf 8f4f 	dsb	sy
 800d63c:	e7fe      	b.n	800d63c <vTaskDelay+0x70>
			}
			else
			{
				/* The wake time has not overflowed, so the current block list
				is used. */
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800d63e:	4b0c      	ldr	r3, [pc, #48]	; (800d670 <vTaskDelay+0xa4>)
 800d640:	6818      	ldr	r0, [r3, #0]
 800d642:	6831      	ldr	r1, [r6, #0]
 800d644:	3104      	adds	r1, #4
 800d646:	f7fe fa8b 	bl	800bb60 <vListInsert>

				/* If the task entering the blocked state was placed at the
				head of the list of blocked tasks then xNextTaskUnblockTime
				needs to be updated too. */
				if( xTimeToWake < xNextTaskUnblockTime )
 800d64a:	4b0a      	ldr	r3, [pc, #40]	; (800d674 <vTaskDelay+0xa8>)
 800d64c:	681a      	ldr	r2, [r3, #0]
 800d64e:	4294      	cmp	r4, r2
				{
					xNextTaskUnblockTime = xTimeToWake;
 800d650:	bf38      	it	cc
 800d652:	601c      	strcc	r4, [r3, #0]
 800d654:	e7e8      	b.n	800d628 <vTaskDelay+0x5c>
 800d656:	f7ff feb3 	bl	800d3c0 <xTaskResumeAll.part.0>
		if( xAlreadyYielded == pdFALSE )
 800d65a:	2800      	cmp	r0, #0
 800d65c:	d0b8      	beq.n	800d5d0 <vTaskDelay+0x4>
	}
 800d65e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d660:	200135fc 	.word	0x200135fc
 800d664:	2001367c 	.word	0x2001367c
 800d668:	20013188 	.word	0x20013188
 800d66c:	20013190 	.word	0x20013190
 800d670:	2001318c 	.word	0x2001318c
 800d674:	20013630 	.word	0x20013630

0800d678 <vTaskStartScheduler>:
{
 800d678:	b530      	push	{r4, r5, lr}
 800d67a:	b08b      	sub	sp, #44	; 0x2c
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800d67c:	aa07      	add	r2, sp, #28
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 800d67e:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800d680:	a906      	add	r1, sp, #24
 800d682:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 800d684:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800d688:	f7fe f90c 	bl	800b8a4 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 800d68c:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800d690:	9d05      	ldr	r5, [sp, #20]
		configASSERT( puxStackBuffer != NULL );
 800d692:	b1bb      	cbz	r3, 800d6c4 <vTaskStartScheduler+0x4c>
		configASSERT( pxTaskBuffer != NULL );
 800d694:	b16d      	cbz	r5, 800d6b2 <vTaskStartScheduler+0x3a>
			volatile size_t xSize = sizeof( StaticTask_t );
 800d696:	21ac      	movs	r1, #172	; 0xac
 800d698:	9109      	str	r1, [sp, #36]	; 0x24
			configASSERT( xSize == sizeof( TCB_t ) );
 800d69a:	9909      	ldr	r1, [sp, #36]	; 0x24
 800d69c:	29ac      	cmp	r1, #172	; 0xac
 800d69e:	d01a      	beq.n	800d6d6 <vTaskStartScheduler+0x5e>
 800d6a0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d6a4:	f383 8811 	msr	BASEPRI, r3
 800d6a8:	f3bf 8f6f 	isb	sy
 800d6ac:	f3bf 8f4f 	dsb	sy
 800d6b0:	e7fe      	b.n	800d6b0 <vTaskStartScheduler+0x38>
 800d6b2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d6b6:	f383 8811 	msr	BASEPRI, r3
 800d6ba:	f3bf 8f6f 	isb	sy
 800d6be:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 800d6c2:	e7fe      	b.n	800d6c2 <vTaskStartScheduler+0x4a>
 800d6c4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d6c8:	f383 8811 	msr	BASEPRI, r3
 800d6cc:	f3bf 8f6f 	isb	sy
 800d6d0:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 800d6d4:	e7fe      	b.n	800d6d4 <vTaskStartScheduler+0x5c>
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800d6d6:	2102      	movs	r1, #2
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800d6d8:	a808      	add	r0, sp, #32
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800d6da:	632b      	str	r3, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800d6dc:	f885 10a9 	strb.w	r1, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800d6e0:	4623      	mov	r3, r4
 800d6e2:	e9cd 0501 	strd	r0, r5, [sp, #4]
 800d6e6:	491b      	ldr	r1, [pc, #108]	; (800d754 <vTaskStartScheduler+0xdc>)
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800d6e8:	9809      	ldr	r0, [sp, #36]	; 0x24
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800d6ea:	9400      	str	r4, [sp, #0]
 800d6ec:	481a      	ldr	r0, [pc, #104]	; (800d758 <vTaskStartScheduler+0xe0>)
 800d6ee:	f7ff fcdd 	bl	800d0ac <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800d6f2:	4628      	mov	r0, r5
 800d6f4:	f7ff fc52 	bl	800cf9c <prvAddNewTaskToReadyList>
		return xReturn;
 800d6f8:	9b08      	ldr	r3, [sp, #32]
		if( xIdleTaskHandle != NULL )
 800d6fa:	b1eb      	cbz	r3, 800d738 <vTaskStartScheduler+0xc0>
			xReturn = xTimerCreateTimerTask();
 800d6fc:	f000 fc6e 	bl	800dfdc <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 800d700:	2801      	cmp	r0, #1
 800d702:	d11b      	bne.n	800d73c <vTaskStartScheduler+0xc4>
 800d704:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d708:	f383 8811 	msr	BASEPRI, r3
 800d70c:	f3bf 8f6f 	isb	sy
 800d710:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800d714:	4b11      	ldr	r3, [pc, #68]	; (800d75c <vTaskStartScheduler+0xe4>)
 800d716:	4a12      	ldr	r2, [pc, #72]	; (800d760 <vTaskStartScheduler+0xe8>)
 800d718:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 800d71a:	4912      	ldr	r1, [pc, #72]	; (800d764 <vTaskStartScheduler+0xec>)
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800d71c:	3358      	adds	r3, #88	; 0x58
 800d71e:	6013      	str	r3, [r2, #0]
		xSchedulerRunning = pdTRUE;
 800d720:	4a11      	ldr	r2, [pc, #68]	; (800d768 <vTaskStartScheduler+0xf0>)
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800d722:	4b12      	ldr	r3, [pc, #72]	; (800d76c <vTaskStartScheduler+0xf4>)
		xNextTaskUnblockTime = portMAX_DELAY;
 800d724:	f04f 35ff 	mov.w	r5, #4294967295
 800d728:	600d      	str	r5, [r1, #0]
		xSchedulerRunning = pdTRUE;
 800d72a:	6010      	str	r0, [r2, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800d72c:	601c      	str	r4, [r3, #0]
}
 800d72e:	b00b      	add	sp, #44	; 0x2c
 800d730:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
		if( xPortStartScheduler() != pdFALSE )
 800d734:	f7fe bb38 	b.w	800bda8 <xPortStartScheduler>
}
 800d738:	b00b      	add	sp, #44	; 0x2c
 800d73a:	bd30      	pop	{r4, r5, pc}
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800d73c:	3001      	adds	r0, #1
 800d73e:	d1fb      	bne.n	800d738 <vTaskStartScheduler+0xc0>
 800d740:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d744:	f383 8811 	msr	BASEPRI, r3
 800d748:	f3bf 8f6f 	isb	sy
 800d74c:	f3bf 8f4f 	dsb	sy
 800d750:	e7fe      	b.n	800d750 <vTaskStartScheduler+0xd8>
 800d752:	bf00      	nop
 800d754:	0802ac24 	.word	0x0802ac24
 800d758:	0800d1d9 	.word	0x0800d1d9
 800d75c:	20013188 	.word	0x20013188
 800d760:	20000160 	.word	0x20000160
 800d764:	20013630 	.word	0x20013630
 800d768:	20013650 	.word	0x20013650
 800d76c:	2001367c 	.word	0x2001367c

0800d770 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 800d770:	4a02      	ldr	r2, [pc, #8]	; (800d77c <vTaskSuspendAll+0xc>)
 800d772:	6813      	ldr	r3, [r2, #0]
 800d774:	3301      	adds	r3, #1
 800d776:	6013      	str	r3, [r2, #0]
}
 800d778:	4770      	bx	lr
 800d77a:	bf00      	nop
 800d77c:	200135fc 	.word	0x200135fc

0800d780 <xTaskResumeAll>:
	configASSERT( uxSchedulerSuspended );
 800d780:	4b06      	ldr	r3, [pc, #24]	; (800d79c <xTaskResumeAll+0x1c>)
 800d782:	681b      	ldr	r3, [r3, #0]
 800d784:	b943      	cbnz	r3, 800d798 <xTaskResumeAll+0x18>
 800d786:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d78a:	f383 8811 	msr	BASEPRI, r3
 800d78e:	f3bf 8f6f 	isb	sy
 800d792:	f3bf 8f4f 	dsb	sy
 800d796:	e7fe      	b.n	800d796 <xTaskResumeAll+0x16>
 800d798:	f7ff be12 	b.w	800d3c0 <xTaskResumeAll.part.0>
 800d79c:	200135fc 	.word	0x200135fc

0800d7a0 <xTaskGetTickCount>:
		xTicks = xTickCount;
 800d7a0:	4b01      	ldr	r3, [pc, #4]	; (800d7a8 <xTaskGetTickCount+0x8>)
 800d7a2:	6818      	ldr	r0, [r3, #0]
}
 800d7a4:	4770      	bx	lr
 800d7a6:	bf00      	nop
 800d7a8:	2001367c 	.word	0x2001367c

0800d7ac <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800d7ac:	4b05      	ldr	r3, [pc, #20]	; (800d7c4 <xTaskIncrementTick+0x18>)
 800d7ae:	681b      	ldr	r3, [r3, #0]
 800d7b0:	b90b      	cbnz	r3, 800d7b6 <xTaskIncrementTick+0xa>
 800d7b2:	f7ff bd61 	b.w	800d278 <xTaskIncrementTick.part.0>
		++xPendedTicks;
 800d7b6:	4a04      	ldr	r2, [pc, #16]	; (800d7c8 <xTaskIncrementTick+0x1c>)
 800d7b8:	6813      	ldr	r3, [r2, #0]
 800d7ba:	3301      	adds	r3, #1
}
 800d7bc:	2000      	movs	r0, #0
		++xPendedTicks;
 800d7be:	6013      	str	r3, [r2, #0]
}
 800d7c0:	4770      	bx	lr
 800d7c2:	bf00      	nop
 800d7c4:	200135fc 	.word	0x200135fc
 800d7c8:	20013638 	.word	0x20013638

0800d7cc <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800d7cc:	4b1f      	ldr	r3, [pc, #124]	; (800d84c <vTaskSwitchContext+0x80>)
 800d7ce:	681b      	ldr	r3, [r3, #0]
 800d7d0:	b11b      	cbz	r3, 800d7da <vTaskSwitchContext+0xe>
		xYieldPending = pdTRUE;
 800d7d2:	4b1f      	ldr	r3, [pc, #124]	; (800d850 <vTaskSwitchContext+0x84>)
 800d7d4:	2201      	movs	r2, #1
 800d7d6:	601a      	str	r2, [r3, #0]
 800d7d8:	4770      	bx	lr
		xYieldPending = pdFALSE;
 800d7da:	4a1d      	ldr	r2, [pc, #116]	; (800d850 <vTaskSwitchContext+0x84>)
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800d7dc:	491d      	ldr	r1, [pc, #116]	; (800d854 <vTaskSwitchContext+0x88>)
{
 800d7de:	b410      	push	{r4}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800d7e0:	4c1d      	ldr	r4, [pc, #116]	; (800d858 <vTaskSwitchContext+0x8c>)
		xYieldPending = pdFALSE;
 800d7e2:	6013      	str	r3, [r2, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800d7e4:	6823      	ldr	r3, [r4, #0]
 800d7e6:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800d7ea:	0092      	lsls	r2, r2, #2
 800d7ec:	0098      	lsls	r0, r3, #2
 800d7ee:	588a      	ldr	r2, [r1, r2]
 800d7f0:	b942      	cbnz	r2, 800d804 <vTaskSwitchContext+0x38>
 800d7f2:	b313      	cbz	r3, 800d83a <vTaskSwitchContext+0x6e>
 800d7f4:	3b01      	subs	r3, #1
 800d7f6:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800d7fa:	0098      	lsls	r0, r3, #2
 800d7fc:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 800d800:	2a00      	cmp	r2, #0
 800d802:	d0f6      	beq.n	800d7f2 <vTaskSwitchContext+0x26>
 800d804:	4418      	add	r0, r3
 800d806:	eb01 0c80 	add.w	ip, r1, r0, lsl #2
 800d80a:	4662      	mov	r2, ip
 800d80c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 800d810:	6849      	ldr	r1, [r1, #4]
 800d812:	f8cc 1004 	str.w	r1, [ip, #4]
 800d816:	3208      	adds	r2, #8
 800d818:	4291      	cmp	r1, r2
 800d81a:	bf08      	it	eq
 800d81c:	6849      	ldreq	r1, [r1, #4]
 800d81e:	4a0f      	ldr	r2, [pc, #60]	; (800d85c <vTaskSwitchContext+0x90>)
 800d820:	bf08      	it	eq
 800d822:	f8cc 1004 	streq.w	r1, [ip, #4]
 800d826:	68c9      	ldr	r1, [r1, #12]
 800d828:	6011      	str	r1, [r2, #0]
 800d82a:	6023      	str	r3, [r4, #0]
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800d82c:	6813      	ldr	r3, [r2, #0]
 800d82e:	4a0c      	ldr	r2, [pc, #48]	; (800d860 <vTaskSwitchContext+0x94>)
}
 800d830:	f85d 4b04 	ldr.w	r4, [sp], #4
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800d834:	3358      	adds	r3, #88	; 0x58
 800d836:	6013      	str	r3, [r2, #0]
}
 800d838:	4770      	bx	lr
 800d83a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d83e:	f383 8811 	msr	BASEPRI, r3
 800d842:	f3bf 8f6f 	isb	sy
 800d846:	f3bf 8f4f 	dsb	sy
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800d84a:	e7fe      	b.n	800d84a <vTaskSwitchContext+0x7e>
 800d84c:	200135fc 	.word	0x200135fc
 800d850:	20013680 	.word	0x20013680
 800d854:	20013194 	.word	0x20013194
 800d858:	20013604 	.word	0x20013604
 800d85c:	20013188 	.word	0x20013188
 800d860:	20000160 	.word	0x20000160

0800d864 <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
 800d864:	b1d0      	cbz	r0, 800d89c <vTaskPlaceOnEventList+0x38>
{
 800d866:	b570      	push	{r4, r5, r6, lr}
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800d868:	4d1a      	ldr	r5, [pc, #104]	; (800d8d4 <vTaskPlaceOnEventList+0x70>)
 800d86a:	460c      	mov	r4, r1
 800d86c:	6829      	ldr	r1, [r5, #0]
 800d86e:	3118      	adds	r1, #24
 800d870:	f7fe f976 	bl	800bb60 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 800d874:	4b18      	ldr	r3, [pc, #96]	; (800d8d8 <vTaskPlaceOnEventList+0x74>)
 800d876:	681e      	ldr	r6, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800d878:	6828      	ldr	r0, [r5, #0]
 800d87a:	3004      	adds	r0, #4
 800d87c:	f7fe f988 	bl	800bb90 <uxListRemove>
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 800d880:	1c63      	adds	r3, r4, #1
 800d882:	d014      	beq.n	800d8ae <vTaskPlaceOnEventList+0x4a>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800d884:	682b      	ldr	r3, [r5, #0]
 800d886:	19a4      	adds	r4, r4, r6
 800d888:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800d88a:	d317      	bcc.n	800d8bc <vTaskPlaceOnEventList+0x58>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800d88c:	4b13      	ldr	r3, [pc, #76]	; (800d8dc <vTaskPlaceOnEventList+0x78>)
 800d88e:	6818      	ldr	r0, [r3, #0]
 800d890:	6829      	ldr	r1, [r5, #0]
}
 800d892:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800d896:	3104      	adds	r1, #4
 800d898:	f7fe b962 	b.w	800bb60 <vListInsert>
 800d89c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d8a0:	f383 8811 	msr	BASEPRI, r3
 800d8a4:	f3bf 8f6f 	isb	sy
 800d8a8:	f3bf 8f4f 	dsb	sy
	configASSERT( pxEventList );
 800d8ac:	e7fe      	b.n	800d8ac <vTaskPlaceOnEventList+0x48>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800d8ae:	6829      	ldr	r1, [r5, #0]
 800d8b0:	480b      	ldr	r0, [pc, #44]	; (800d8e0 <vTaskPlaceOnEventList+0x7c>)
}
 800d8b2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800d8b6:	3104      	adds	r1, #4
 800d8b8:	f7fe b942 	b.w	800bb40 <vListInsertEnd>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800d8bc:	4b09      	ldr	r3, [pc, #36]	; (800d8e4 <vTaskPlaceOnEventList+0x80>)
 800d8be:	6818      	ldr	r0, [r3, #0]
 800d8c0:	6829      	ldr	r1, [r5, #0]
 800d8c2:	3104      	adds	r1, #4
 800d8c4:	f7fe f94c 	bl	800bb60 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800d8c8:	4b07      	ldr	r3, [pc, #28]	; (800d8e8 <vTaskPlaceOnEventList+0x84>)
 800d8ca:	681a      	ldr	r2, [r3, #0]
 800d8cc:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 800d8ce:	bf38      	it	cc
 800d8d0:	601c      	strcc	r4, [r3, #0]
}
 800d8d2:	bd70      	pop	{r4, r5, r6, pc}
 800d8d4:	20013188 	.word	0x20013188
 800d8d8:	2001367c 	.word	0x2001367c
 800d8dc:	20013190 	.word	0x20013190
 800d8e0:	20013654 	.word	0x20013654
 800d8e4:	2001318c 	.word	0x2001318c
 800d8e8:	20013630 	.word	0x20013630

0800d8ec <vTaskPlaceOnEventListRestricted>:
		configASSERT( pxEventList );
 800d8ec:	b330      	cbz	r0, 800d93c <vTaskPlaceOnEventListRestricted+0x50>
	{
 800d8ee:	b570      	push	{r4, r5, r6, lr}
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800d8f0:	4e1d      	ldr	r6, [pc, #116]	; (800d968 <vTaskPlaceOnEventListRestricted+0x7c>)
 800d8f2:	460c      	mov	r4, r1
 800d8f4:	6831      	ldr	r1, [r6, #0]
 800d8f6:	4615      	mov	r5, r2
 800d8f8:	3118      	adds	r1, #24
 800d8fa:	f7fe f921 	bl	800bb40 <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
 800d8fe:	4b1b      	ldr	r3, [pc, #108]	; (800d96c <vTaskPlaceOnEventListRestricted+0x80>)
		if( xWaitIndefinitely != pdFALSE )
 800d900:	b985      	cbnz	r5, 800d924 <vTaskPlaceOnEventListRestricted+0x38>
const TickType_t xConstTickCount = xTickCount;
 800d902:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800d904:	6830      	ldr	r0, [r6, #0]
 800d906:	3004      	adds	r0, #4
 800d908:	f7fe f942 	bl	800bb90 <uxListRemove>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800d90c:	6833      	ldr	r3, [r6, #0]
 800d90e:	1964      	adds	r4, r4, r5
 800d910:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800d912:	d31c      	bcc.n	800d94e <vTaskPlaceOnEventListRestricted+0x62>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800d914:	4b16      	ldr	r3, [pc, #88]	; (800d970 <vTaskPlaceOnEventListRestricted+0x84>)
 800d916:	6818      	ldr	r0, [r3, #0]
 800d918:	6831      	ldr	r1, [r6, #0]
	}
 800d91a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800d91e:	3104      	adds	r1, #4
 800d920:	f7fe b91e 	b.w	800bb60 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 800d924:	681b      	ldr	r3, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800d926:	6830      	ldr	r0, [r6, #0]
 800d928:	3004      	adds	r0, #4
 800d92a:	f7fe f931 	bl	800bb90 <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800d92e:	6831      	ldr	r1, [r6, #0]
 800d930:	4810      	ldr	r0, [pc, #64]	; (800d974 <vTaskPlaceOnEventListRestricted+0x88>)
	}
 800d932:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800d936:	3104      	adds	r1, #4
 800d938:	f7fe b902 	b.w	800bb40 <vListInsertEnd>
 800d93c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d940:	f383 8811 	msr	BASEPRI, r3
 800d944:	f3bf 8f6f 	isb	sy
 800d948:	f3bf 8f4f 	dsb	sy
		configASSERT( pxEventList );
 800d94c:	e7fe      	b.n	800d94c <vTaskPlaceOnEventListRestricted+0x60>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800d94e:	4b0a      	ldr	r3, [pc, #40]	; (800d978 <vTaskPlaceOnEventListRestricted+0x8c>)
 800d950:	6818      	ldr	r0, [r3, #0]
 800d952:	6831      	ldr	r1, [r6, #0]
 800d954:	3104      	adds	r1, #4
 800d956:	f7fe f903 	bl	800bb60 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800d95a:	4b08      	ldr	r3, [pc, #32]	; (800d97c <vTaskPlaceOnEventListRestricted+0x90>)
 800d95c:	681a      	ldr	r2, [r3, #0]
 800d95e:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 800d960:	bf38      	it	cc
 800d962:	601c      	strcc	r4, [r3, #0]
	}
 800d964:	bd70      	pop	{r4, r5, r6, pc}
 800d966:	bf00      	nop
 800d968:	20013188 	.word	0x20013188
 800d96c:	2001367c 	.word	0x2001367c
 800d970:	20013190 	.word	0x20013190
 800d974:	20013654 	.word	0x20013654
 800d978:	2001318c 	.word	0x2001318c
 800d97c:	20013630 	.word	0x20013630

0800d980 <xTaskRemoveFromEventList>:
{
 800d980:	b530      	push	{r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800d982:	68c3      	ldr	r3, [r0, #12]
 800d984:	68dc      	ldr	r4, [r3, #12]
{
 800d986:	b083      	sub	sp, #12
	configASSERT( pxUnblockedTCB );
 800d988:	2c00      	cmp	r4, #0
 800d98a:	d02b      	beq.n	800d9e4 <xTaskRemoveFromEventList+0x64>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800d98c:	f104 0518 	add.w	r5, r4, #24
 800d990:	4628      	mov	r0, r5
 800d992:	f7fe f8fd 	bl	800bb90 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800d996:	4b18      	ldr	r3, [pc, #96]	; (800d9f8 <xTaskRemoveFromEventList+0x78>)
 800d998:	681b      	ldr	r3, [r3, #0]
 800d99a:	b17b      	cbz	r3, 800d9bc <xTaskRemoveFromEventList+0x3c>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800d99c:	4817      	ldr	r0, [pc, #92]	; (800d9fc <xTaskRemoveFromEventList+0x7c>)
 800d99e:	4629      	mov	r1, r5
 800d9a0:	f7fe f8ce 	bl	800bb40 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800d9a4:	4b16      	ldr	r3, [pc, #88]	; (800da00 <xTaskRemoveFromEventList+0x80>)
 800d9a6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800d9a8:	681b      	ldr	r3, [r3, #0]
 800d9aa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d9ac:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800d9ae:	bf85      	ittet	hi
 800d9b0:	4b14      	ldrhi	r3, [pc, #80]	; (800da04 <xTaskRemoveFromEventList+0x84>)
 800d9b2:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 800d9b4:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 800d9b6:	6018      	strhi	r0, [r3, #0]
}
 800d9b8:	b003      	add	sp, #12
 800d9ba:	bd30      	pop	{r4, r5, pc}
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800d9bc:	1d21      	adds	r1, r4, #4
 800d9be:	4608      	mov	r0, r1
 800d9c0:	9101      	str	r1, [sp, #4]
 800d9c2:	f7fe f8e5 	bl	800bb90 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800d9c6:	4a10      	ldr	r2, [pc, #64]	; (800da08 <xTaskRemoveFromEventList+0x88>)
 800d9c8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800d9ca:	6810      	ldr	r0, [r2, #0]
 800d9cc:	9901      	ldr	r1, [sp, #4]
 800d9ce:	4283      	cmp	r3, r0
 800d9d0:	480e      	ldr	r0, [pc, #56]	; (800da0c <xTaskRemoveFromEventList+0x8c>)
 800d9d2:	bf88      	it	hi
 800d9d4:	6013      	strhi	r3, [r2, #0]
 800d9d6:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800d9da:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800d9de:	f7fe f8af 	bl	800bb40 <vListInsertEnd>
 800d9e2:	e7df      	b.n	800d9a4 <xTaskRemoveFromEventList+0x24>
 800d9e4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d9e8:	f383 8811 	msr	BASEPRI, r3
 800d9ec:	f3bf 8f6f 	isb	sy
 800d9f0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxUnblockedTCB );
 800d9f4:	e7fe      	b.n	800d9f4 <xTaskRemoveFromEventList+0x74>
 800d9f6:	bf00      	nop
 800d9f8:	200135fc 	.word	0x200135fc
 800d9fc:	2001363c 	.word	0x2001363c
 800da00:	20013188 	.word	0x20013188
 800da04:	20013680 	.word	0x20013680
 800da08:	20013604 	.word	0x20013604
 800da0c:	20013194 	.word	0x20013194

0800da10 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800da10:	4a03      	ldr	r2, [pc, #12]	; (800da20 <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
 800da12:	4b04      	ldr	r3, [pc, #16]	; (800da24 <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800da14:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800da16:	681b      	ldr	r3, [r3, #0]
 800da18:	e9c0 2300 	strd	r2, r3, [r0]
}
 800da1c:	4770      	bx	lr
 800da1e:	bf00      	nop
 800da20:	20013634 	.word	0x20013634
 800da24:	2001367c 	.word	0x2001367c

0800da28 <xTaskCheckForTimeOut>:
	configASSERT( pxTimeOut );
 800da28:	b328      	cbz	r0, 800da76 <xTaskCheckForTimeOut+0x4e>
{
 800da2a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800da2c:	460d      	mov	r5, r1
 800da2e:	b083      	sub	sp, #12
	configASSERT( pxTicksToWait );
 800da30:	b1c1      	cbz	r1, 800da64 <xTaskCheckForTimeOut+0x3c>
 800da32:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 800da34:	f7fe f926 	bl	800bc84 <vPortEnterCritical>
			if( *pxTicksToWait == portMAX_DELAY )
 800da38:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
 800da3a:	4a1d      	ldr	r2, [pc, #116]	; (800dab0 <xTaskCheckForTimeOut+0x88>)
			if( *pxTicksToWait == portMAX_DELAY )
 800da3c:	1c58      	adds	r0, r3, #1
		const TickType_t xConstTickCount = xTickCount;
 800da3e:	6811      	ldr	r1, [r2, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800da40:	d030      	beq.n	800daa4 <xTaskCheckForTimeOut+0x7c>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800da42:	f8df c070 	ldr.w	ip, [pc, #112]	; 800dab4 <xTaskCheckForTimeOut+0x8c>
 800da46:	e9d4 6000 	ldrd	r6, r0, [r4]
 800da4a:	f8dc 7000 	ldr.w	r7, [ip]
 800da4e:	42be      	cmp	r6, r7
 800da50:	d01a      	beq.n	800da88 <xTaskCheckForTimeOut+0x60>
 800da52:	4288      	cmp	r0, r1
 800da54:	d818      	bhi.n	800da88 <xTaskCheckForTimeOut+0x60>
			xReturn = pdTRUE;
 800da56:	2001      	movs	r0, #1
 800da58:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800da5a:	f7fe f935 	bl	800bcc8 <vPortExitCritical>
}
 800da5e:	9801      	ldr	r0, [sp, #4]
 800da60:	b003      	add	sp, #12
 800da62:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800da64:	f04f 0350 	mov.w	r3, #80	; 0x50
 800da68:	f383 8811 	msr	BASEPRI, r3
 800da6c:	f3bf 8f6f 	isb	sy
 800da70:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTicksToWait );
 800da74:	e7fe      	b.n	800da74 <xTaskCheckForTimeOut+0x4c>
 800da76:	f04f 0350 	mov.w	r3, #80	; 0x50
 800da7a:	f383 8811 	msr	BASEPRI, r3
 800da7e:	f3bf 8f6f 	isb	sy
 800da82:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTimeOut );
 800da86:	e7fe      	b.n	800da86 <xTaskCheckForTimeOut+0x5e>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800da88:	eba1 0e00 	sub.w	lr, r1, r0
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800da8c:	4573      	cmp	r3, lr
 800da8e:	d90b      	bls.n	800daa8 <xTaskCheckForTimeOut+0x80>
			*pxTicksToWait -= xElapsedTime;
 800da90:	1a5b      	subs	r3, r3, r1
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800da92:	f8dc 1000 	ldr.w	r1, [ip]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800da96:	6812      	ldr	r2, [r2, #0]
			*pxTicksToWait -= xElapsedTime;
 800da98:	4403      	add	r3, r0
 800da9a:	602b      	str	r3, [r5, #0]
			xReturn = pdFALSE;
 800da9c:	2000      	movs	r0, #0
	pxTimeOut->xTimeOnEntering = xTickCount;
 800da9e:	e9c4 1200 	strd	r1, r2, [r4]
			xReturn = pdFALSE;
 800daa2:	e7d9      	b.n	800da58 <xTaskCheckForTimeOut+0x30>
				xReturn = pdFALSE;
 800daa4:	2000      	movs	r0, #0
 800daa6:	e7d7      	b.n	800da58 <xTaskCheckForTimeOut+0x30>
			*pxTicksToWait = 0;
 800daa8:	2300      	movs	r3, #0
 800daaa:	602b      	str	r3, [r5, #0]
			xReturn = pdTRUE;
 800daac:	2001      	movs	r0, #1
 800daae:	e7d3      	b.n	800da58 <xTaskCheckForTimeOut+0x30>
 800dab0:	2001367c 	.word	0x2001367c
 800dab4:	20013634 	.word	0x20013634

0800dab8 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 800dab8:	4b01      	ldr	r3, [pc, #4]	; (800dac0 <vTaskMissedYield+0x8>)
 800daba:	2201      	movs	r2, #1
 800dabc:	601a      	str	r2, [r3, #0]
}
 800dabe:	4770      	bx	lr
 800dac0:	20013680 	.word	0x20013680

0800dac4 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800dac4:	4b05      	ldr	r3, [pc, #20]	; (800dadc <xTaskGetSchedulerState+0x18>)
 800dac6:	681b      	ldr	r3, [r3, #0]
 800dac8:	b133      	cbz	r3, 800dad8 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800daca:	4b05      	ldr	r3, [pc, #20]	; (800dae0 <xTaskGetSchedulerState+0x1c>)
 800dacc:	6818      	ldr	r0, [r3, #0]
 800dace:	fab0 f080 	clz	r0, r0
 800dad2:	0940      	lsrs	r0, r0, #5
 800dad4:	0040      	lsls	r0, r0, #1
 800dad6:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 800dad8:	2001      	movs	r0, #1
	}
 800dada:	4770      	bx	lr
 800dadc:	20013650 	.word	0x20013650
 800dae0:	200135fc 	.word	0x200135fc

0800dae4 <xTaskPriorityInherit>:
	{
 800dae4:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800dae6:	4604      	mov	r4, r0
	{
 800dae8:	b082      	sub	sp, #8
		if( pxMutexHolder != NULL )
 800daea:	b1c8      	cbz	r0, 800db20 <xTaskPriorityInherit+0x3c>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800daec:	4d1d      	ldr	r5, [pc, #116]	; (800db64 <xTaskPriorityInherit+0x80>)
 800daee:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800daf0:	682a      	ldr	r2, [r5, #0]
 800daf2:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800daf4:	4293      	cmp	r3, r2
 800daf6:	d215      	bcs.n	800db24 <xTaskPriorityInherit+0x40>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800daf8:	6982      	ldr	r2, [r0, #24]
 800dafa:	2a00      	cmp	r2, #0
 800dafc:	db04      	blt.n	800db08 <xTaskPriorityInherit+0x24>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800dafe:	682a      	ldr	r2, [r5, #0]
 800db00:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800db02:	f1c2 0238 	rsb	r2, r2, #56	; 0x38
 800db06:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800db08:	4e17      	ldr	r6, [pc, #92]	; (800db68 <xTaskPriorityInherit+0x84>)
 800db0a:	6962      	ldr	r2, [r4, #20]
 800db0c:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800db10:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 800db14:	429a      	cmp	r2, r3
 800db16:	d00e      	beq.n	800db36 <xTaskPriorityInherit+0x52>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800db18:	682b      	ldr	r3, [r5, #0]
 800db1a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800db1c:	62e3      	str	r3, [r4, #44]	; 0x2c
				xReturn = pdTRUE;
 800db1e:	2001      	movs	r0, #1
	}
 800db20:	b002      	add	sp, #8
 800db22:	bd70      	pop	{r4, r5, r6, pc}
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800db24:	682b      	ldr	r3, [r5, #0]
 800db26:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800db28:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800db2a:	4298      	cmp	r0, r3
 800db2c:	bf2c      	ite	cs
 800db2e:	2000      	movcs	r0, #0
 800db30:	2001      	movcc	r0, #1
	}
 800db32:	b002      	add	sp, #8
 800db34:	bd70      	pop	{r4, r5, r6, pc}
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800db36:	1d21      	adds	r1, r4, #4
 800db38:	4608      	mov	r0, r1
 800db3a:	9101      	str	r1, [sp, #4]
 800db3c:	f7fe f828 	bl	800bb90 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800db40:	682a      	ldr	r2, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800db42:	4b0a      	ldr	r3, [pc, #40]	; (800db6c <xTaskPriorityInherit+0x88>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800db44:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800db46:	681a      	ldr	r2, [r3, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800db48:	62e0      	str	r0, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800db4a:	4290      	cmp	r0, r2
 800db4c:	bf88      	it	hi
 800db4e:	6018      	strhi	r0, [r3, #0]
 800db50:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800db54:	eb06 0080 	add.w	r0, r6, r0, lsl #2
 800db58:	9901      	ldr	r1, [sp, #4]
 800db5a:	f7fd fff1 	bl	800bb40 <vListInsertEnd>
				xReturn = pdTRUE;
 800db5e:	2001      	movs	r0, #1
 800db60:	e7de      	b.n	800db20 <xTaskPriorityInherit+0x3c>
 800db62:	bf00      	nop
 800db64:	20013188 	.word	0x20013188
 800db68:	20013194 	.word	0x20013194
 800db6c:	20013604 	.word	0x20013604

0800db70 <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
 800db70:	b318      	cbz	r0, 800dbba <xTaskPriorityDisinherit+0x4a>
	{
 800db72:	b510      	push	{r4, lr}
			configASSERT( pxTCB == pxCurrentTCB );
 800db74:	4b1e      	ldr	r3, [pc, #120]	; (800dbf0 <xTaskPriorityDisinherit+0x80>)
 800db76:	681c      	ldr	r4, [r3, #0]
 800db78:	4284      	cmp	r4, r0
	{
 800db7a:	b082      	sub	sp, #8
			configASSERT( pxTCB == pxCurrentTCB );
 800db7c:	d008      	beq.n	800db90 <xTaskPriorityDisinherit+0x20>
 800db7e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800db82:	f383 8811 	msr	BASEPRI, r3
 800db86:	f3bf 8f6f 	isb	sy
 800db8a:	f3bf 8f4f 	dsb	sy
 800db8e:	e7fe      	b.n	800db8e <xTaskPriorityDisinherit+0x1e>
			configASSERT( pxTCB->uxMutexesHeld );
 800db90:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800db92:	b14b      	cbz	r3, 800dba8 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800db94:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800db96:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 800db98:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800db9a:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 800db9c:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800db9e:	d000      	beq.n	800dba2 <xTaskPriorityDisinherit+0x32>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800dba0:	b16b      	cbz	r3, 800dbbe <xTaskPriorityDisinherit+0x4e>
	BaseType_t xReturn = pdFALSE;
 800dba2:	2000      	movs	r0, #0
	}
 800dba4:	b002      	add	sp, #8
 800dba6:	bd10      	pop	{r4, pc}
 800dba8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dbac:	f383 8811 	msr	BASEPRI, r3
 800dbb0:	f3bf 8f6f 	isb	sy
 800dbb4:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 800dbb8:	e7fe      	b.n	800dbb8 <xTaskPriorityDisinherit+0x48>
	BaseType_t xReturn = pdFALSE;
 800dbba:	2000      	movs	r0, #0
	}
 800dbbc:	4770      	bx	lr
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800dbbe:	1d21      	adds	r1, r4, #4
 800dbc0:	4608      	mov	r0, r1
 800dbc2:	9101      	str	r1, [sp, #4]
 800dbc4:	f7fd ffe4 	bl	800bb90 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800dbc8:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 800dbca:	4a0a      	ldr	r2, [pc, #40]	; (800dbf4 <xTaskPriorityDisinherit+0x84>)
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800dbcc:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800dbce:	f1c3 0038 	rsb	r0, r3, #56	; 0x38
 800dbd2:	61a0      	str	r0, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800dbd4:	6810      	ldr	r0, [r2, #0]
 800dbd6:	9901      	ldr	r1, [sp, #4]
 800dbd8:	4283      	cmp	r3, r0
 800dbda:	4807      	ldr	r0, [pc, #28]	; (800dbf8 <xTaskPriorityDisinherit+0x88>)
 800dbdc:	bf88      	it	hi
 800dbde:	6013      	strhi	r3, [r2, #0]
 800dbe0:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800dbe4:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800dbe8:	f7fd ffaa 	bl	800bb40 <vListInsertEnd>
					xReturn = pdTRUE;
 800dbec:	2001      	movs	r0, #1
		return xReturn;
 800dbee:	e7d9      	b.n	800dba4 <xTaskPriorityDisinherit+0x34>
 800dbf0:	20013188 	.word	0x20013188
 800dbf4:	20013604 	.word	0x20013604
 800dbf8:	20013194 	.word	0x20013194

0800dbfc <vTaskPriorityDisinheritAfterTimeout>:
		if( pxMutexHolder != NULL )
 800dbfc:	2800      	cmp	r0, #0
 800dbfe:	d041      	beq.n	800dc84 <vTaskPriorityDisinheritAfterTimeout+0x88>
	{
 800dc00:	b530      	push	{r4, r5, lr}
			configASSERT( pxTCB->uxMutexesHeld );
 800dc02:	6d03      	ldr	r3, [r0, #80]	; 0x50
	{
 800dc04:	b083      	sub	sp, #12
 800dc06:	4604      	mov	r4, r0
			configASSERT( pxTCB->uxMutexesHeld );
 800dc08:	b153      	cbz	r3, 800dc20 <vTaskPriorityDisinheritAfterTimeout+0x24>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800dc0a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
			if( pxTCB->uxPriority != uxPriorityToUse )
 800dc0c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800dc0e:	4281      	cmp	r1, r0
 800dc10:	bf38      	it	cc
 800dc12:	4601      	movcc	r1, r0
 800dc14:	428a      	cmp	r2, r1
 800dc16:	d001      	beq.n	800dc1c <vTaskPriorityDisinheritAfterTimeout+0x20>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800dc18:	2b01      	cmp	r3, #1
 800dc1a:	d00a      	beq.n	800dc32 <vTaskPriorityDisinheritAfterTimeout+0x36>
	}
 800dc1c:	b003      	add	sp, #12
 800dc1e:	bd30      	pop	{r4, r5, pc}
 800dc20:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dc24:	f383 8811 	msr	BASEPRI, r3
 800dc28:	f3bf 8f6f 	isb	sy
 800dc2c:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 800dc30:	e7fe      	b.n	800dc30 <vTaskPriorityDisinheritAfterTimeout+0x34>
					configASSERT( pxTCB != pxCurrentTCB );
 800dc32:	4b19      	ldr	r3, [pc, #100]	; (800dc98 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
 800dc34:	681b      	ldr	r3, [r3, #0]
 800dc36:	42a3      	cmp	r3, r4
 800dc38:	d025      	beq.n	800dc86 <vTaskPriorityDisinheritAfterTimeout+0x8a>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800dc3a:	69a3      	ldr	r3, [r4, #24]
					pxTCB->uxPriority = uxPriorityToUse;
 800dc3c:	62e1      	str	r1, [r4, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800dc3e:	2b00      	cmp	r3, #0
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800dc40:	bfa8      	it	ge
 800dc42:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800dc46:	4d15      	ldr	r5, [pc, #84]	; (800dc9c <vTaskPriorityDisinheritAfterTimeout+0xa0>)
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800dc48:	bfa8      	it	ge
 800dc4a:	61a1      	strge	r1, [r4, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800dc4c:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800dc50:	6961      	ldr	r1, [r4, #20]
 800dc52:	eb05 0382 	add.w	r3, r5, r2, lsl #2
 800dc56:	4299      	cmp	r1, r3
 800dc58:	d1e0      	bne.n	800dc1c <vTaskPriorityDisinheritAfterTimeout+0x20>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800dc5a:	1d21      	adds	r1, r4, #4
 800dc5c:	4608      	mov	r0, r1
 800dc5e:	9101      	str	r1, [sp, #4]
 800dc60:	f7fd ff96 	bl	800bb90 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 800dc64:	4b0e      	ldr	r3, [pc, #56]	; (800dca0 <vTaskPriorityDisinheritAfterTimeout+0xa4>)
 800dc66:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800dc68:	681a      	ldr	r2, [r3, #0]
 800dc6a:	9901      	ldr	r1, [sp, #4]
 800dc6c:	4290      	cmp	r0, r2
 800dc6e:	bf88      	it	hi
 800dc70:	6018      	strhi	r0, [r3, #0]
 800dc72:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800dc76:	eb05 0080 	add.w	r0, r5, r0, lsl #2
	}
 800dc7a:	b003      	add	sp, #12
 800dc7c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 800dc80:	f7fd bf5e 	b.w	800bb40 <vListInsertEnd>
 800dc84:	4770      	bx	lr
 800dc86:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dc8a:	f383 8811 	msr	BASEPRI, r3
 800dc8e:	f3bf 8f6f 	isb	sy
 800dc92:	f3bf 8f4f 	dsb	sy
					configASSERT( pxTCB != pxCurrentTCB );
 800dc96:	e7fe      	b.n	800dc96 <vTaskPriorityDisinheritAfterTimeout+0x9a>
 800dc98:	20013188 	.word	0x20013188
 800dc9c:	20013194 	.word	0x20013194
 800dca0:	20013604 	.word	0x20013604

0800dca4 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800dca4:	4b04      	ldr	r3, [pc, #16]	; (800dcb8 <pvTaskIncrementMutexHeldCount+0x14>)
 800dca6:	681a      	ldr	r2, [r3, #0]
 800dca8:	b11a      	cbz	r2, 800dcb2 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800dcaa:	6819      	ldr	r1, [r3, #0]
 800dcac:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 800dcae:	3201      	adds	r2, #1
 800dcb0:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 800dcb2:	6818      	ldr	r0, [r3, #0]
	}
 800dcb4:	4770      	bx	lr
 800dcb6:	bf00      	nop
 800dcb8:	20013188 	.word	0x20013188

0800dcbc <prvSwitchTimerLists>:
	}
}
/*-----------------------------------------------------------*/

static void prvSwitchTimerLists( void )
{
 800dcbc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800dcc0:	4e22      	ldr	r6, [pc, #136]	; (800dd4c <prvSwitchTimerLists+0x90>)
	if( xTimerQueue != NULL )
 800dcc2:	f8df 9090 	ldr.w	r9, [pc, #144]	; 800dd54 <prvSwitchTimerLists+0x98>
{
 800dcc6:	b085      	sub	sp, #20
		xMessage.xMessageID = xCommandID;
 800dcc8:	f04f 0800 	mov.w	r8, #0

	/* The tick count has overflowed.  The timer lists must be switched.
	If there are any timers still referenced from the current timer list
	then they must have expired and should be processed before the lists
	are switched. */
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800dccc:	e00d      	b.n	800dcea <prvSwitchTimerLists+0x2e>
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800dcce:	68db      	ldr	r3, [r3, #12]

		/* Remove the timer from the list. */
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800dcd0:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800dcd2:	681f      	ldr	r7, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800dcd4:	1d25      	adds	r5, r4, #4
 800dcd6:	4628      	mov	r0, r5
 800dcd8:	f7fd ff5a 	bl	800bb90 <uxListRemove>
		traceTIMER_EXPIRED( pxTimer );

		/* Execute its callback, then send a command to restart the timer if
		it is an auto-reload timer.  It cannot be restarted here as the lists
		have not yet been switched. */
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800dcdc:	6a23      	ldr	r3, [r4, #32]
 800dcde:	4620      	mov	r0, r4
 800dce0:	4798      	blx	r3

		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800dce2:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800dce6:	075b      	lsls	r3, r3, #29
 800dce8:	d40a      	bmi.n	800dd00 <prvSwitchTimerLists+0x44>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800dcea:	6833      	ldr	r3, [r6, #0]
 800dcec:	681a      	ldr	r2, [r3, #0]
 800dcee:	2a00      	cmp	r2, #0
 800dcf0:	d1ed      	bne.n	800dcce <prvSwitchTimerLists+0x12>
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxTemp = pxCurrentTimerList;
	pxCurrentTimerList = pxOverflowTimerList;
 800dcf2:	4a17      	ldr	r2, [pc, #92]	; (800dd50 <prvSwitchTimerLists+0x94>)
 800dcf4:	6811      	ldr	r1, [r2, #0]
 800dcf6:	6031      	str	r1, [r6, #0]
	pxOverflowTimerList = pxTemp;
 800dcf8:	6013      	str	r3, [r2, #0]
}
 800dcfa:	b005      	add	sp, #20
 800dcfc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800dd00:	69a3      	ldr	r3, [r4, #24]
 800dd02:	443b      	add	r3, r7
			if( xReloadTime > xNextExpireTime )
 800dd04:	429f      	cmp	r7, r3
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800dd06:	4629      	mov	r1, r5
			if( xReloadTime > xNextExpireTime )
 800dd08:	d205      	bcs.n	800dd16 <prvSwitchTimerLists+0x5a>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800dd0a:	6830      	ldr	r0, [r6, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800dd0c:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800dd0e:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800dd10:	f7fd ff26 	bl	800bb60 <vListInsert>
 800dd14:	e7e9      	b.n	800dcea <prvSwitchTimerLists+0x2e>
	if( xTimerQueue != NULL )
 800dd16:	f8d9 3000 	ldr.w	r3, [r9]
 800dd1a:	b16b      	cbz	r3, 800dd38 <prvSwitchTimerLists+0x7c>
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800dd1c:	e9cd 8700 	strd	r8, r7, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800dd20:	9402      	str	r4, [sp, #8]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800dd22:	f7ff fecf 	bl	800dac4 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800dd26:	2300      	movs	r3, #0
 800dd28:	f8d9 0000 	ldr.w	r0, [r9]
 800dd2c:	461a      	mov	r2, r3
 800dd2e:	4669      	mov	r1, sp
 800dd30:	f7fe fa9c 	bl	800c26c <xQueueGenericSend>
				configASSERT( xResult );
 800dd34:	2800      	cmp	r0, #0
 800dd36:	d1d8      	bne.n	800dcea <prvSwitchTimerLists+0x2e>
 800dd38:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dd3c:	f383 8811 	msr	BASEPRI, r3
 800dd40:	f3bf 8f6f 	isb	sy
 800dd44:	f3bf 8f4f 	dsb	sy
 800dd48:	e7fe      	b.n	800dd48 <prvSwitchTimerLists+0x8c>
 800dd4a:	bf00      	nop
 800dd4c:	20013684 	.word	0x20013684
 800dd50:	20013688 	.word	0x20013688
 800dd54:	200137a8 	.word	0x200137a8

0800dd58 <prvTimerTask>:
{
 800dd58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dd5c:	4e9b      	ldr	r6, [pc, #620]	; (800dfcc <prvTimerTask+0x274>)
 800dd5e:	4d9c      	ldr	r5, [pc, #624]	; (800dfd0 <prvTimerTask+0x278>)
 800dd60:	4c9c      	ldr	r4, [pc, #624]	; (800dfd4 <prvTimerTask+0x27c>)
 800dd62:	b08b      	sub	sp, #44	; 0x2c
					portYIELD_WITHIN_API();
 800dd64:	f04f 29e0 	mov.w	r9, #3758153728	; 0xe000e000
 800dd68:	f04f 5880 	mov.w	r8, #268435456	; 0x10000000
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800dd6c:	6833      	ldr	r3, [r6, #0]
 800dd6e:	681f      	ldr	r7, [r3, #0]
 800dd70:	2f00      	cmp	r7, #0
 800dd72:	f000 80a8 	beq.w	800dec6 <prvTimerTask+0x16e>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800dd76:	68db      	ldr	r3, [r3, #12]
 800dd78:	681f      	ldr	r7, [r3, #0]
	vTaskSuspendAll();
 800dd7a:	f7ff fcf9 	bl	800d770 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 800dd7e:	f7ff fd0f 	bl	800d7a0 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800dd82:	682a      	ldr	r2, [r5, #0]
 800dd84:	4290      	cmp	r0, r2
	xTimeNow = xTaskGetTickCount();
 800dd86:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800dd88:	f0c0 80ae 	bcc.w	800dee8 <prvTimerTask+0x190>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800dd8c:	4287      	cmp	r7, r0
	xLastTime = xTimeNow;
 800dd8e:	6028      	str	r0, [r5, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800dd90:	f240 80b4 	bls.w	800defc <prvTimerTask+0x1a4>
 800dd94:	2200      	movs	r2, #0
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800dd96:	6820      	ldr	r0, [r4, #0]
 800dd98:	eba7 010a 	sub.w	r1, r7, sl
 800dd9c:	f7ff f89a 	bl	800ced4 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800dda0:	f7ff fcee 	bl	800d780 <xTaskResumeAll>
 800dda4:	b928      	cbnz	r0, 800ddb2 <prvTimerTask+0x5a>
					portYIELD_WITHIN_API();
 800dda6:	f8c9 8d04 	str.w	r8, [r9, #3332]	; 0xd04
 800ddaa:	f3bf 8f4f 	dsb	sy
 800ddae:	f3bf 8f6f 	isb	sy
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800ddb2:	6820      	ldr	r0, [r4, #0]
 800ddb4:	2200      	movs	r2, #0
 800ddb6:	a902      	add	r1, sp, #8
 800ddb8:	f7fe fc94 	bl	800c6e4 <xQueueReceive>
 800ddbc:	2800      	cmp	r0, #0
 800ddbe:	d0d5      	beq.n	800dd6c <prvTimerTask+0x14>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800ddc0:	9b02      	ldr	r3, [sp, #8]
 800ddc2:	2b00      	cmp	r3, #0
 800ddc4:	db76      	blt.n	800deb4 <prvTimerTask+0x15c>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800ddc6:	9f04      	ldr	r7, [sp, #16]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800ddc8:	697b      	ldr	r3, [r7, #20]
 800ddca:	b113      	cbz	r3, 800ddd2 <prvTimerTask+0x7a>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800ddcc:	1d38      	adds	r0, r7, #4
 800ddce:	f7fd fedf 	bl	800bb90 <uxListRemove>
	xTimeNow = xTaskGetTickCount();
 800ddd2:	f7ff fce5 	bl	800d7a0 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800ddd6:	682b      	ldr	r3, [r5, #0]
 800ddd8:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 800ddda:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800dddc:	f0c0 808b 	bcc.w	800def6 <prvTimerTask+0x19e>
			switch( xMessage.xMessageID )
 800dde0:	9b02      	ldr	r3, [sp, #8]
	xLastTime = xTimeNow;
 800dde2:	f8c5 a000 	str.w	sl, [r5]
			switch( xMessage.xMessageID )
 800dde6:	2b09      	cmp	r3, #9
 800dde8:	d8e3      	bhi.n	800ddb2 <prvTimerTask+0x5a>
 800ddea:	e8df f003 	tbb	[pc, r3]
 800ddee:	0505      	.short	0x0505
 800ddf0:	5a3d5305 	.word	0x5a3d5305
 800ddf4:	3d530505 	.word	0x3d530505
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800ddf8:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800ddfc:	69ba      	ldr	r2, [r7, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800ddfe:	613f      	str	r7, [r7, #16]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800de00:	f043 0301 	orr.w	r3, r3, #1
 800de04:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800de08:	9b03      	ldr	r3, [sp, #12]
 800de0a:	1899      	adds	r1, r3, r2
 800de0c:	bf2c      	ite	cs
 800de0e:	2001      	movcs	r0, #1
 800de10:	2000      	movcc	r0, #0
	if( xNextExpiryTime <= xTimeNow )
 800de12:	4551      	cmp	r1, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800de14:	6079      	str	r1, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
 800de16:	f200 808c 	bhi.w	800df32 <prvTimerTask+0x1da>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800de1a:	ebaa 0303 	sub.w	r3, sl, r3
 800de1e:	429a      	cmp	r2, r3
 800de20:	d832      	bhi.n	800de88 <prvTimerTask+0x130>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800de22:	6a3b      	ldr	r3, [r7, #32]
 800de24:	4638      	mov	r0, r7
 800de26:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800de28:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800de2c:	075b      	lsls	r3, r3, #29
 800de2e:	d5c0      	bpl.n	800ddb2 <prvTimerTask+0x5a>
	if( xTimerQueue != NULL )
 800de30:	6822      	ldr	r2, [r4, #0]
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800de32:	9903      	ldr	r1, [sp, #12]
 800de34:	69bb      	ldr	r3, [r7, #24]
	if( xTimerQueue != NULL )
 800de36:	b172      	cbz	r2, 800de56 <prvTimerTask+0xfe>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800de38:	440b      	add	r3, r1
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800de3a:	e9cd 3707 	strd	r3, r7, [sp, #28]
		xMessage.xMessageID = xCommandID;
 800de3e:	2300      	movs	r3, #0
 800de40:	9306      	str	r3, [sp, #24]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800de42:	f7ff fe3f 	bl	800dac4 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800de46:	2300      	movs	r3, #0
 800de48:	6820      	ldr	r0, [r4, #0]
 800de4a:	461a      	mov	r2, r3
 800de4c:	a906      	add	r1, sp, #24
 800de4e:	f7fe fa0d 	bl	800c26c <xQueueGenericSend>
							configASSERT( xResult );
 800de52:	2800      	cmp	r0, #0
 800de54:	d1ad      	bne.n	800ddb2 <prvTimerTask+0x5a>
 800de56:	f04f 0350 	mov.w	r3, #80	; 0x50
 800de5a:	f383 8811 	msr	BASEPRI, r3
 800de5e:	f3bf 8f6f 	isb	sy
 800de62:	f3bf 8f4f 	dsb	sy
 800de66:	e7fe      	b.n	800de66 <prvTimerTask+0x10e>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800de68:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800de6c:	f043 0301 	orr.w	r3, r3, #1
 800de70:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800de74:	9b03      	ldr	r3, [sp, #12]
 800de76:	61bb      	str	r3, [r7, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800de78:	2b00      	cmp	r3, #0
 800de7a:	f000 809d 	beq.w	800dfb8 <prvTimerTask+0x260>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800de7e:	4453      	add	r3, sl
	if( xNextExpiryTime <= xTimeNow )
 800de80:	4553      	cmp	r3, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800de82:	607b      	str	r3, [r7, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800de84:	613f      	str	r7, [r7, #16]
	if( xNextExpiryTime <= xTimeNow )
 800de86:	d85e      	bhi.n	800df46 <prvTimerTask+0x1ee>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800de88:	4b53      	ldr	r3, [pc, #332]	; (800dfd8 <prvTimerTask+0x280>)
 800de8a:	1d39      	adds	r1, r7, #4
 800de8c:	6818      	ldr	r0, [r3, #0]
 800de8e:	f7fd fe67 	bl	800bb60 <vListInsert>
	return xProcessTimerNow;
 800de92:	e78e      	b.n	800ddb2 <prvTimerTask+0x5a>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800de94:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800de98:	f023 0301 	bic.w	r3, r3, #1
 800de9c:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					break;
 800dea0:	e787      	b.n	800ddb2 <prvTimerTask+0x5a>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800dea2:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800dea6:	079a      	lsls	r2, r3, #30
 800dea8:	d552      	bpl.n	800df50 <prvTimerTask+0x1f8>
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800deaa:	f023 0301 	bic.w	r3, r3, #1
 800deae:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
 800deb2:	e77e      	b.n	800ddb2 <prvTimerTask+0x5a>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800deb4:	9b03      	ldr	r3, [sp, #12]
 800deb6:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800deba:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800debc:	9b02      	ldr	r3, [sp, #8]
 800debe:	2b00      	cmp	r3, #0
 800dec0:	f6ff af77 	blt.w	800ddb2 <prvTimerTask+0x5a>
 800dec4:	e77f      	b.n	800ddc6 <prvTimerTask+0x6e>
	vTaskSuspendAll();
 800dec6:	f7ff fc53 	bl	800d770 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 800deca:	f7ff fc69 	bl	800d7a0 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800dece:	682a      	ldr	r2, [r5, #0]
 800ded0:	4282      	cmp	r2, r0
	xTimeNow = xTaskGetTickCount();
 800ded2:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800ded4:	d808      	bhi.n	800dee8 <prvTimerTask+0x190>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800ded6:	4b40      	ldr	r3, [pc, #256]	; (800dfd8 <prvTimerTask+0x280>)
	xLastTime = xTimeNow;
 800ded8:	f8c5 a000 	str.w	sl, [r5]
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800dedc:	681a      	ldr	r2, [r3, #0]
 800dede:	6812      	ldr	r2, [r2, #0]
 800dee0:	fab2 f282 	clz	r2, r2
 800dee4:	0952      	lsrs	r2, r2, #5
 800dee6:	e756      	b.n	800dd96 <prvTimerTask+0x3e>
		prvSwitchTimerLists();
 800dee8:	f7ff fee8 	bl	800dcbc <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 800deec:	f8c5 a000 	str.w	sl, [r5]
			( void ) xTaskResumeAll();
 800def0:	f7ff fc46 	bl	800d780 <xTaskResumeAll>
 800def4:	e75d      	b.n	800ddb2 <prvTimerTask+0x5a>
		prvSwitchTimerLists();
 800def6:	f7ff fee1 	bl	800dcbc <prvSwitchTimerLists>
		*pxTimerListsWereSwitched = pdTRUE;
 800defa:	e771      	b.n	800dde0 <prvTimerTask+0x88>
				( void ) xTaskResumeAll();
 800defc:	f7ff fc40 	bl	800d780 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800df00:	6832      	ldr	r2, [r6, #0]
 800df02:	68d2      	ldr	r2, [r2, #12]
 800df04:	f8d2 b00c 	ldr.w	fp, [r2, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800df08:	f10b 0104 	add.w	r1, fp, #4
 800df0c:	4608      	mov	r0, r1
 800df0e:	9101      	str	r1, [sp, #4]
 800df10:	f7fd fe3e 	bl	800bb90 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800df14:	f89b 0028 	ldrb.w	r0, [fp, #40]	; 0x28
 800df18:	9901      	ldr	r1, [sp, #4]
 800df1a:	f010 0f04 	tst.w	r0, #4
 800df1e:	d11b      	bne.n	800df58 <prvTimerTask+0x200>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800df20:	f020 0001 	bic.w	r0, r0, #1
 800df24:	f88b 0028 	strb.w	r0, [fp, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800df28:	f8db 3020 	ldr.w	r3, [fp, #32]
 800df2c:	4658      	mov	r0, fp
 800df2e:	4798      	blx	r3
}
 800df30:	e73f      	b.n	800ddb2 <prvTimerTask+0x5a>
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800df32:	4553      	cmp	r3, sl
 800df34:	d902      	bls.n	800df3c <prvTimerTask+0x1e4>
 800df36:	2800      	cmp	r0, #0
 800df38:	f43f af73 	beq.w	800de22 <prvTimerTask+0xca>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800df3c:	6830      	ldr	r0, [r6, #0]
 800df3e:	1d39      	adds	r1, r7, #4
 800df40:	f7fd fe0e 	bl	800bb60 <vListInsert>
	return xProcessTimerNow;
 800df44:	e735      	b.n	800ddb2 <prvTimerTask+0x5a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800df46:	6830      	ldr	r0, [r6, #0]
 800df48:	1d39      	adds	r1, r7, #4
 800df4a:	f7fd fe09 	bl	800bb60 <vListInsert>
 800df4e:	e730      	b.n	800ddb2 <prvTimerTask+0x5a>
							vPortFree( pxTimer );
 800df50:	4638      	mov	r0, r7
 800df52:	f7fd fd81 	bl	800ba58 <vPortFree>
 800df56:	e72c      	b.n	800ddb2 <prvTimerTask+0x5a>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800df58:	f8db 2018 	ldr.w	r2, [fp, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800df5c:	f8cb b010 	str.w	fp, [fp, #16]
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800df60:	18b8      	adds	r0, r7, r2
	if( xNextExpiryTime <= xTimeNow )
 800df62:	4550      	cmp	r0, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800df64:	f8cb 0004 	str.w	r0, [fp, #4]
	if( xNextExpiryTime <= xTimeNow )
 800df68:	d903      	bls.n	800df72 <prvTimerTask+0x21a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800df6a:	6830      	ldr	r0, [r6, #0]
 800df6c:	f7fd fdf8 	bl	800bb60 <vListInsert>
	return xProcessTimerNow;
 800df70:	e7da      	b.n	800df28 <prvTimerTask+0x1d0>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800df72:	ebaa 0307 	sub.w	r3, sl, r7
 800df76:	429a      	cmp	r2, r3
 800df78:	d819      	bhi.n	800dfae <prvTimerTask+0x256>
	if( xTimerQueue != NULL )
 800df7a:	6823      	ldr	r3, [r4, #0]
 800df7c:	b173      	cbz	r3, 800df9c <prvTimerTask+0x244>
		xMessage.xMessageID = xCommandID;
 800df7e:	2300      	movs	r3, #0
 800df80:	9306      	str	r3, [sp, #24]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800df82:	9707      	str	r7, [sp, #28]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800df84:	f8cd b020 	str.w	fp, [sp, #32]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800df88:	f7ff fd9c 	bl	800dac4 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800df8c:	2300      	movs	r3, #0
 800df8e:	6820      	ldr	r0, [r4, #0]
 800df90:	461a      	mov	r2, r3
 800df92:	a906      	add	r1, sp, #24
 800df94:	f7fe f96a 	bl	800c26c <xQueueGenericSend>
			configASSERT( xResult );
 800df98:	2800      	cmp	r0, #0
 800df9a:	d1c5      	bne.n	800df28 <prvTimerTask+0x1d0>
 800df9c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dfa0:	f383 8811 	msr	BASEPRI, r3
 800dfa4:	f3bf 8f6f 	isb	sy
 800dfa8:	f3bf 8f4f 	dsb	sy
 800dfac:	e7fe      	b.n	800dfac <prvTimerTask+0x254>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800dfae:	4b0a      	ldr	r3, [pc, #40]	; (800dfd8 <prvTimerTask+0x280>)
 800dfb0:	6818      	ldr	r0, [r3, #0]
 800dfb2:	f7fd fdd5 	bl	800bb60 <vListInsert>
	return xProcessTimerNow;
 800dfb6:	e7b7      	b.n	800df28 <prvTimerTask+0x1d0>
 800dfb8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dfbc:	f383 8811 	msr	BASEPRI, r3
 800dfc0:	f3bf 8f6f 	isb	sy
 800dfc4:	f3bf 8f4f 	dsb	sy
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800dfc8:	e7fe      	b.n	800dfc8 <prvTimerTask+0x270>
 800dfca:	bf00      	nop
 800dfcc:	20013684 	.word	0x20013684
 800dfd0:	20013754 	.word	0x20013754
 800dfd4:	200137a8 	.word	0x200137a8
 800dfd8:	20013688 	.word	0x20013688

0800dfdc <xTimerCreateTimerTask>:
{
 800dfdc:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 800dfde:	4c23      	ldr	r4, [pc, #140]	; (800e06c <xTimerCreateTimerTask+0x90>)
{
 800dfe0:	b089      	sub	sp, #36	; 0x24
	taskENTER_CRITICAL();
 800dfe2:	f7fd fe4f 	bl	800bc84 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 800dfe6:	6825      	ldr	r5, [r4, #0]
 800dfe8:	b335      	cbz	r5, 800e038 <xTimerCreateTimerTask+0x5c>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
 800dfea:	f7fd fe6d 	bl	800bcc8 <vPortExitCritical>
	if( xTimerQueue != NULL )
 800dfee:	6823      	ldr	r3, [r4, #0]
 800dff0:	b1cb      	cbz	r3, 800e026 <xTimerCreateTimerTask+0x4a>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800dff2:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800dff4:	aa07      	add	r2, sp, #28
 800dff6:	a906      	add	r1, sp, #24
 800dff8:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 800dffa:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800dffe:	f7fd fc5f 	bl	800b8c0 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800e002:	e9dd 0105 	ldrd	r0, r1, [sp, #20]
 800e006:	2302      	movs	r3, #2
 800e008:	e9cd 1001 	strd	r1, r0, [sp, #4]
 800e00c:	9300      	str	r3, [sp, #0]
 800e00e:	9a07      	ldr	r2, [sp, #28]
 800e010:	4917      	ldr	r1, [pc, #92]	; (800e070 <xTimerCreateTimerTask+0x94>)
 800e012:	4818      	ldr	r0, [pc, #96]	; (800e074 <xTimerCreateTimerTask+0x98>)
 800e014:	4623      	mov	r3, r4
 800e016:	f7ff fa6d 	bl	800d4f4 <xTaskCreateStatic>
 800e01a:	4b17      	ldr	r3, [pc, #92]	; (800e078 <xTimerCreateTimerTask+0x9c>)
 800e01c:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 800e01e:	b110      	cbz	r0, 800e026 <xTimerCreateTimerTask+0x4a>
}
 800e020:	2001      	movs	r0, #1
 800e022:	b009      	add	sp, #36	; 0x24
 800e024:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e026:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e02a:	f383 8811 	msr	BASEPRI, r3
 800e02e:	f3bf 8f6f 	isb	sy
 800e032:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 800e036:	e7fe      	b.n	800e036 <xTimerCreateTimerTask+0x5a>
			vListInitialise( &xActiveTimerList1 );
 800e038:	4f10      	ldr	r7, [pc, #64]	; (800e07c <xTimerCreateTimerTask+0xa0>)
			vListInitialise( &xActiveTimerList2 );
 800e03a:	4e11      	ldr	r6, [pc, #68]	; (800e080 <xTimerCreateTimerTask+0xa4>)
			vListInitialise( &xActiveTimerList1 );
 800e03c:	4638      	mov	r0, r7
 800e03e:	f7fd fd6f 	bl	800bb20 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800e042:	4630      	mov	r0, r6
 800e044:	f7fd fd6c 	bl	800bb20 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 800e048:	4a0e      	ldr	r2, [pc, #56]	; (800e084 <xTimerCreateTimerTask+0xa8>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800e04a:	9500      	str	r5, [sp, #0]
			pxCurrentTimerList = &xActiveTimerList1;
 800e04c:	6017      	str	r7, [r2, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 800e04e:	4a0e      	ldr	r2, [pc, #56]	; (800e088 <xTimerCreateTimerTask+0xac>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800e050:	4b0e      	ldr	r3, [pc, #56]	; (800e08c <xTimerCreateTimerTask+0xb0>)
			pxOverflowTimerList = &xActiveTimerList2;
 800e052:	6016      	str	r6, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800e054:	2110      	movs	r1, #16
 800e056:	4a0e      	ldr	r2, [pc, #56]	; (800e090 <xTimerCreateTimerTask+0xb4>)
 800e058:	200a      	movs	r0, #10
 800e05a:	f7fd ffb1 	bl	800bfc0 <xQueueGenericCreateStatic>
 800e05e:	6020      	str	r0, [r4, #0]
				if( xTimerQueue != NULL )
 800e060:	2800      	cmp	r0, #0
 800e062:	d0c2      	beq.n	800dfea <xTimerCreateTimerTask+0xe>
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800e064:	490b      	ldr	r1, [pc, #44]	; (800e094 <xTimerCreateTimerTask+0xb8>)
 800e066:	f7fe ff0d 	bl	800ce84 <vQueueAddToRegistry>
 800e06a:	e7be      	b.n	800dfea <xTimerCreateTimerTask+0xe>
 800e06c:	200137a8 	.word	0x200137a8
 800e070:	0802ac34 	.word	0x0802ac34
 800e074:	0800dd59 	.word	0x0800dd59
 800e078:	200137ac 	.word	0x200137ac
 800e07c:	2001372c 	.word	0x2001372c
 800e080:	20013740 	.word	0x20013740
 800e084:	20013684 	.word	0x20013684
 800e088:	20013688 	.word	0x20013688
 800e08c:	20013758 	.word	0x20013758
 800e090:	2001368c 	.word	0x2001368c
 800e094:	0802ac2c 	.word	0x0802ac2c

0800e098 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800e098:	8880      	ldrh	r0, [r0, #4]
 800e09a:	4770      	bx	lr

0800e09c <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800e09c:	b570      	push	{r4, r5, r6, lr}
 800e09e:	6803      	ldr	r3, [r0, #0]
 800e0a0:	4605      	mov	r5, r0
 800e0a2:	460c      	mov	r4, r1
 800e0a4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800e0a6:	2100      	movs	r1, #0
 800e0a8:	4798      	blx	r3
 800e0aa:	682b      	ldr	r3, [r5, #0]
 800e0ac:	4606      	mov	r6, r0
 800e0ae:	6a1b      	ldr	r3, [r3, #32]
 800e0b0:	4628      	mov	r0, r5
 800e0b2:	4798      	blx	r3
 800e0b4:	1ba4      	subs	r4, r4, r6
 800e0b6:	b2a4      	uxth	r4, r4
 800e0b8:	fbb4 f0f0 	udiv	r0, r4, r0
 800e0bc:	bd70      	pop	{r4, r5, r6, pc}

0800e0be <_ZN8touchgfx17AbstractPartition5clearEv>:
 800e0be:	2300      	movs	r3, #0
 800e0c0:	8083      	strh	r3, [r0, #4]
 800e0c2:	4770      	bx	lr

0800e0c4 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800e0c4:	b510      	push	{r4, lr}
 800e0c6:	6803      	ldr	r3, [r0, #0]
 800e0c8:	8881      	ldrh	r1, [r0, #4]
 800e0ca:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800e0cc:	4604      	mov	r4, r0
 800e0ce:	4798      	blx	r3
 800e0d0:	88a3      	ldrh	r3, [r4, #4]
 800e0d2:	3301      	adds	r3, #1
 800e0d4:	80a3      	strh	r3, [r4, #4]
 800e0d6:	bd10      	pop	{r4, pc}

0800e0d8 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800e0d8:	6803      	ldr	r3, [r0, #0]
 800e0da:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800e0dc:	4718      	bx	r3

0800e0de <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800e0de:	4770      	bx	lr

0800e0e0 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800e0e0:	4a02      	ldr	r2, [pc, #8]	; (800e0ec <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800e0e2:	6002      	str	r2, [r0, #0]
 800e0e4:	2200      	movs	r2, #0
 800e0e6:	8082      	strh	r2, [r0, #4]
 800e0e8:	4770      	bx	lr
 800e0ea:	bf00      	nop
 800e0ec:	0802ac44 	.word	0x0802ac44

0800e0f0 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv>:
 800e0f0:	b510      	push	{r4, lr}
 800e0f2:	6803      	ldr	r3, [r0, #0]
 800e0f4:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800e0f8:	4604      	mov	r4, r0
 800e0fa:	4798      	blx	r3
 800e0fc:	b110      	cbz	r0, 800e104 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv+0x14>
 800e0fe:	4620      	mov	r0, r4
 800e100:	f7f3 f8b8 	bl	8001274 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 800e104:	bd10      	pop	{r4, pc}

0800e106 <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorXEv>:
 800e106:	f9b0 005c 	ldrsh.w	r0, [r0, #92]	; 0x5c
 800e10a:	4770      	bx	lr

0800e10c <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorYEv>:
 800e10c:	f9b0 005e 	ldrsh.w	r0, [r0, #94]	; 0x5e
 800e110:	4770      	bx	lr

0800e112 <_ZNK8touchgfx25AbstractProgressIndicator25getProgressIndicatorWidthEv>:
 800e112:	f9b0 0060 	ldrsh.w	r0, [r0, #96]	; 0x60
 800e116:	4770      	bx	lr

0800e118 <_ZNK8touchgfx25AbstractProgressIndicator26getProgressIndicatorHeightEv>:
 800e118:	f9b0 0062 	ldrsh.w	r0, [r0, #98]	; 0x62
 800e11c:	4770      	bx	lr

0800e11e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>:
 800e11e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e120:	e9c0 1221 	strd	r1, r2, [r0, #132]	; 0x84
 800e124:	461e      	mov	r6, r3
 800e126:	6803      	ldr	r3, [r0, #0]
 800e128:	460f      	mov	r7, r1
 800e12a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800e12e:	f8d0 108c 	ldr.w	r1, [r0, #140]	; 0x8c
 800e132:	4604      	mov	r4, r0
 800e134:	4615      	mov	r5, r2
 800e136:	4798      	blx	r3
 800e138:	b93e      	cbnz	r6, 800e14a <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x2c>
 800e13a:	1bed      	subs	r5, r5, r7
 800e13c:	f8a4 5090 	strh.w	r5, [r4, #144]	; 0x90
 800e140:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 800e144:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 800e148:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e14a:	f8a4 6090 	strh.w	r6, [r4, #144]	; 0x90
 800e14e:	e7f7      	b.n	800e140 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x22>

0800e150 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_RtS2_>:
 800e150:	b510      	push	{r4, lr}
 800e152:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 800e156:	600c      	str	r4, [r1, #0]
 800e158:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800e15c:	6011      	str	r1, [r2, #0]
 800e15e:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 800e162:	801a      	strh	r2, [r3, #0]
 800e164:	9b02      	ldr	r3, [sp, #8]
 800e166:	f8b0 2092 	ldrh.w	r2, [r0, #146]	; 0x92
 800e16a:	801a      	strh	r2, [r3, #0]
 800e16c:	bd10      	pop	{r4, pc}

0800e16e <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_Rt>:
 800e16e:	b510      	push	{r4, lr}
 800e170:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 800e174:	600c      	str	r4, [r1, #0]
 800e176:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800e17a:	6011      	str	r1, [r2, #0]
 800e17c:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 800e180:	801a      	strh	r2, [r3, #0]
 800e182:	bd10      	pop	{r4, pc}

0800e184 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_>:
 800e184:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 800e188:	600b      	str	r3, [r1, #0]
 800e18a:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 800e18e:	6013      	str	r3, [r2, #0]
 800e190:	4770      	bx	lr

0800e192 <_ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE>:
 800e192:	f8c0 1094 	str.w	r1, [r0, #148]	; 0x94
 800e196:	4770      	bx	lr

0800e198 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>:
 800e198:	f8d0 008c 	ldr.w	r0, [r0, #140]	; 0x8c
 800e19c:	4770      	bx	lr

0800e19e <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>:
 800e19e:	f880 1054 	strb.w	r1, [r0, #84]	; 0x54
 800e1a2:	4770      	bx	lr

0800e1a4 <_ZNK8touchgfx25AbstractProgressIndicator8getAlphaEv>:
 800e1a4:	f890 0054 	ldrb.w	r0, [r0, #84]	; 0x54
 800e1a8:	4770      	bx	lr

0800e1aa <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>:
 800e1aa:	4770      	bx	lr

0800e1ac <_ZN8touchgfx25AbstractProgressIndicatorD0Ev>:
 800e1ac:	b510      	push	{r4, lr}
 800e1ae:	21b4      	movs	r1, #180	; 0xb4
 800e1b0:	4604      	mov	r4, r0
 800e1b2:	f018 f96c 	bl	802648e <_ZdlPvj>
 800e1b6:	4620      	mov	r0, r4
 800e1b8:	bd10      	pop	{r4, pc}

0800e1ba <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>:
 800e1ba:	b570      	push	{r4, r5, r6, lr}
 800e1bc:	f8d0 5084 	ldr.w	r5, [r0, #132]	; 0x84
 800e1c0:	428d      	cmp	r5, r1
 800e1c2:	bfb8      	it	lt
 800e1c4:	460d      	movlt	r5, r1
 800e1c6:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800e1ca:	428d      	cmp	r5, r1
 800e1cc:	4604      	mov	r4, r0
 800e1ce:	bfa8      	it	ge
 800e1d0:	460d      	movge	r5, r1
 800e1d2:	4616      	mov	r6, r2
 800e1d4:	b99a      	cbnz	r2, 800e1fe <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x44>
 800e1d6:	6803      	ldr	r3, [r0, #0]
 800e1d8:	4629      	mov	r1, r5
 800e1da:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800e1de:	4798      	blx	r3
 800e1e0:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800e1e4:	b368      	cbz	r0, 800e242 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 800e1e6:	6803      	ldr	r3, [r0, #0]
 800e1e8:	68db      	ldr	r3, [r3, #12]
 800e1ea:	4798      	blx	r3
 800e1ec:	b348      	cbz	r0, 800e242 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 800e1ee:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800e1f2:	6803      	ldr	r3, [r0, #0]
 800e1f4:	4621      	mov	r1, r4
 800e1f6:	689b      	ldr	r3, [r3, #8]
 800e1f8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e1fc:	4718      	bx	r3
 800e1fe:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800e202:	2b00      	cmp	r3, #0
 800e204:	dd08      	ble.n	800e218 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x5e>
 800e206:	f005 fbe3 	bl	80139d0 <_ZN8touchgfx11Application11getInstanceEv>
 800e20a:	4621      	mov	r1, r4
 800e20c:	3004      	adds	r0, #4
 800e20e:	f005 fc2c 	bl	8013a6a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 800e212:	2300      	movs	r3, #0
 800e214:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 800e218:	6823      	ldr	r3, [r4, #0]
 800e21a:	4620      	mov	r0, r4
 800e21c:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800e220:	4798      	blx	r3
 800e222:	2300      	movs	r3, #0
 800e224:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 800e228:	e9c4 0527 	strd	r0, r5, [r4, #156]	; 0x9c
 800e22c:	f8c4 60a4 	str.w	r6, [r4, #164]	; 0xa4
 800e230:	f005 fbce 	bl	80139d0 <_ZN8touchgfx11Application11getInstanceEv>
 800e234:	4621      	mov	r1, r4
 800e236:	3004      	adds	r0, #4
 800e238:	f005 fcc0 	bl	8013bbc <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 800e23c:	2301      	movs	r3, #1
 800e23e:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 800e242:	bd70      	pop	{r4, r5, r6, pc}

0800e244 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>:
 800e244:	b510      	push	{r4, lr}
 800e246:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 800e24a:	4299      	cmp	r1, r3
 800e24c:	bfb8      	it	lt
 800e24e:	4619      	movlt	r1, r3
 800e250:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 800e254:	4299      	cmp	r1, r3
 800e256:	bfa8      	it	ge
 800e258:	4619      	movge	r1, r3
 800e25a:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 800e25e:	428b      	cmp	r3, r1
 800e260:	4604      	mov	r4, r0
 800e262:	d010      	beq.n	800e286 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800e264:	f8c0 108c 	str.w	r1, [r0, #140]	; 0x8c
 800e268:	f8d0 00ac 	ldr.w	r0, [r0, #172]	; 0xac
 800e26c:	b158      	cbz	r0, 800e286 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800e26e:	6803      	ldr	r3, [r0, #0]
 800e270:	68db      	ldr	r3, [r3, #12]
 800e272:	4798      	blx	r3
 800e274:	b138      	cbz	r0, 800e286 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800e276:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
 800e27a:	6803      	ldr	r3, [r0, #0]
 800e27c:	4621      	mov	r1, r4
 800e27e:	689b      	ldr	r3, [r3, #8]
 800e280:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e284:	4718      	bx	r3
 800e286:	bd10      	pop	{r4, pc}

0800e288 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>:
 800e288:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800e28a:	4604      	mov	r4, r0
 800e28c:	460d      	mov	r5, r1
 800e28e:	b1a9      	cbz	r1, 800e2bc <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt+0x34>
 800e290:	f8b0 6092 	ldrh.w	r6, [r0, #146]	; 0x92
 800e294:	f8b4 1090 	ldrh.w	r1, [r4, #144]	; 0x90
 800e298:	f8d4 708c 	ldr.w	r7, [r4, #140]	; 0x8c
 800e29c:	e9d0 0221 	ldrd	r0, r2, [r0, #132]	; 0x84
 800e2a0:	ab01      	add	r3, sp, #4
 800e2a2:	1a12      	subs	r2, r2, r0
 800e2a4:	1b89      	subs	r1, r1, r6
 800e2a6:	1a38      	subs	r0, r7, r0
 800e2a8:	f006 fe48 	bl	8014f3c <_ZN8touchgfx6muldivElllRl>
 800e2ac:	4629      	mov	r1, r5
 800e2ae:	ab01      	add	r3, sp, #4
 800e2b0:	f8b4 2090 	ldrh.w	r2, [r4, #144]	; 0x90
 800e2b4:	4430      	add	r0, r6
 800e2b6:	f006 fe41 	bl	8014f3c <_ZN8touchgfx6muldivElllRl>
 800e2ba:	b285      	uxth	r5, r0
 800e2bc:	4628      	mov	r0, r5
 800e2be:	b003      	add	sp, #12
 800e2c0:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800e2c2 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv>:
 800e2c2:	b570      	push	{r4, r5, r6, lr}
 800e2c4:	f890 3098 	ldrb.w	r3, [r0, #152]	; 0x98
 800e2c8:	4604      	mov	r4, r0
 800e2ca:	2b00      	cmp	r3, #0
 800e2cc:	d035      	beq.n	800e33a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800e2ce:	e9d4 3227 	ldrd	r3, r2, [r4, #156]	; 0x9c
 800e2d2:	f8d0 00a8 	ldr.w	r0, [r0, #168]	; 0xa8
 800e2d6:	f8d4 5094 	ldr.w	r5, [r4, #148]	; 0x94
 800e2da:	3001      	adds	r0, #1
 800e2dc:	1ad2      	subs	r2, r2, r3
 800e2de:	b212      	sxth	r2, r2
 800e2e0:	f8c4 00a8 	str.w	r0, [r4, #168]	; 0xa8
 800e2e4:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 800e2e8:	2100      	movs	r1, #0
 800e2ea:	b280      	uxth	r0, r0
 800e2ec:	47a8      	blx	r5
 800e2ee:	f8d4 109c 	ldr.w	r1, [r4, #156]	; 0x9c
 800e2f2:	6823      	ldr	r3, [r4, #0]
 800e2f4:	4401      	add	r1, r0
 800e2f6:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800e2fa:	4620      	mov	r0, r4
 800e2fc:	4798      	blx	r3
 800e2fe:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 800e302:	429a      	cmp	r2, r3
 800e304:	db19      	blt.n	800e33a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800e306:	2500      	movs	r5, #0
 800e308:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 800e30c:	f005 fb60 	bl	80139d0 <_ZN8touchgfx11Application11getInstanceEv>
 800e310:	4621      	mov	r1, r4
 800e312:	3004      	adds	r0, #4
 800e314:	f005 fba9 	bl	8013a6a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 800e318:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800e31c:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 800e320:	b158      	cbz	r0, 800e33a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800e322:	6803      	ldr	r3, [r0, #0]
 800e324:	68db      	ldr	r3, [r3, #12]
 800e326:	4798      	blx	r3
 800e328:	b138      	cbz	r0, 800e33a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800e32a:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800e32e:	6803      	ldr	r3, [r0, #0]
 800e330:	4621      	mov	r1, r4
 800e332:	689b      	ldr	r3, [r3, #8]
 800e334:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e338:	4718      	bx	r3
 800e33a:	bd70      	pop	{r4, r5, r6, pc}

0800e33c <_ZN8touchgfx8DrawableC1Ev>:
 800e33c:	4a0a      	ldr	r2, [pc, #40]	; (800e368 <_ZN8touchgfx8DrawableC1Ev+0x2c>)
 800e33e:	6002      	str	r2, [r0, #0]
 800e340:	2200      	movs	r2, #0
 800e342:	8082      	strh	r2, [r0, #4]
 800e344:	80c2      	strh	r2, [r0, #6]
 800e346:	8102      	strh	r2, [r0, #8]
 800e348:	8142      	strh	r2, [r0, #10]
 800e34a:	8182      	strh	r2, [r0, #12]
 800e34c:	81c2      	strh	r2, [r0, #14]
 800e34e:	8202      	strh	r2, [r0, #16]
 800e350:	8242      	strh	r2, [r0, #18]
 800e352:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800e356:	61c2      	str	r2, [r0, #28]
 800e358:	8402      	strh	r2, [r0, #32]
 800e35a:	8442      	strh	r2, [r0, #34]	; 0x22
 800e35c:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800e360:	2201      	movs	r2, #1
 800e362:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 800e366:	4770      	bx	lr
 800e368:	0802b3e4 	.word	0x0802b3e4

0800e36c <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800e36c:	b570      	push	{r4, r5, r6, lr}
 800e36e:	6803      	ldr	r3, [r0, #0]
 800e370:	4604      	mov	r4, r0
 800e372:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800e374:	4615      	mov	r5, r2
 800e376:	4798      	blx	r3
 800e378:	6823      	ldr	r3, [r4, #0]
 800e37a:	4629      	mov	r1, r5
 800e37c:	4620      	mov	r0, r4
 800e37e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800e380:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e384:	4718      	bx	r3

0800e386 <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>:
 800e386:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e38a:	4604      	mov	r4, r0
 800e38c:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
 800e390:	f8a4 105c 	strh.w	r1, [r4, #92]	; 0x5c
 800e394:	460e      	mov	r6, r1
 800e396:	4615      	mov	r5, r2
 800e398:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 800e39c:	4619      	mov	r1, r3
 800e39e:	463a      	mov	r2, r7
 800e3a0:	3058      	adds	r0, #88	; 0x58
 800e3a2:	4698      	mov	r8, r3
 800e3a4:	f7ff ffe2 	bl	800e36c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800e3a8:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800e3ac:	4446      	add	r6, r8
 800e3ae:	42b3      	cmp	r3, r6
 800e3b0:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800e3b4:	bfb8      	it	lt
 800e3b6:	8126      	strhlt	r6, [r4, #8]
 800e3b8:	443d      	add	r5, r7
 800e3ba:	42ab      	cmp	r3, r5
 800e3bc:	bfb8      	it	lt
 800e3be:	8165      	strhlt	r5, [r4, #10]
 800e3c0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800e3c4 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>:
 800e3c4:	b510      	push	{r4, lr}
 800e3c6:	4604      	mov	r4, r0
 800e3c8:	302c      	adds	r0, #44	; 0x2c
 800e3ca:	f002 fdf8 	bl	8010fbe <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800e3ce:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 800e3d2:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 800e3d6:	4620      	mov	r0, r4
 800e3d8:	f7ff ffc8 	bl	800e36c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800e3dc:	bd10      	pop	{r4, pc}
	...

0800e3e0 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>:
 800e3e0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800e3e2:	4604      	mov	r4, r0
 800e3e4:	4626      	mov	r6, r4
 800e3e6:	2500      	movs	r5, #0
 800e3e8:	f7ff ffa8 	bl	800e33c <_ZN8touchgfx8DrawableC1Ev>
 800e3ec:	4b23      	ldr	r3, [pc, #140]	; (800e47c <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0x9c>)
 800e3ee:	62a5      	str	r5, [r4, #40]	; 0x28
 800e3f0:	f846 3b2c 	str.w	r3, [r6], #44
 800e3f4:	2226      	movs	r2, #38	; 0x26
 800e3f6:	4629      	mov	r1, r5
 800e3f8:	f64f 77ff 	movw	r7, #65535	; 0xffff
 800e3fc:	4630      	mov	r0, r6
 800e3fe:	f8ad 7004 	strh.w	r7, [sp, #4]
 800e402:	f019 f83a 	bl	802747a <memset>
 800e406:	4630      	mov	r0, r6
 800e408:	f7ff ff98 	bl	800e33c <_ZN8touchgfx8DrawableC1Ev>
 800e40c:	a902      	add	r1, sp, #8
 800e40e:	4b1c      	ldr	r3, [pc, #112]	; (800e480 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa0>)
 800e410:	62e3      	str	r3, [r4, #44]	; 0x2c
 800e412:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 800e416:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800e41a:	f884 7054 	strb.w	r7, [r4, #84]	; 0x54
 800e41e:	4630      	mov	r0, r6
 800e420:	f104 0758 	add.w	r7, r4, #88	; 0x58
 800e424:	f002 fdcb 	bl	8010fbe <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800e428:	4638      	mov	r0, r7
 800e42a:	f7ff ff87 	bl	800e33c <_ZN8touchgfx8DrawableC1Ev>
 800e42e:	4b15      	ldr	r3, [pc, #84]	; (800e484 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa4>)
 800e430:	65a3      	str	r3, [r4, #88]	; 0x58
 800e432:	2364      	movs	r3, #100	; 0x64
 800e434:	e9c4 3522 	strd	r3, r5, [r4, #136]	; 0x88
 800e438:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
 800e43c:	4b12      	ldr	r3, [pc, #72]	; (800e488 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa8>)
 800e43e:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 800e442:	4629      	mov	r1, r5
 800e444:	4630      	mov	r0, r6
 800e446:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
 800e44a:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 800e44e:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
 800e452:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 800e456:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
 800e45a:	f7f2 fe6d 	bl	8001138 <_ZN8touchgfx8Drawable4setXEs>
 800e45e:	4629      	mov	r1, r5
 800e460:	4630      	mov	r0, r6
 800e462:	f7f2 fe6b 	bl	800113c <_ZN8touchgfx8Drawable4setYEs>
 800e466:	4631      	mov	r1, r6
 800e468:	4620      	mov	r0, r4
 800e46a:	f000 f819 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800e46e:	4620      	mov	r0, r4
 800e470:	4639      	mov	r1, r7
 800e472:	f000 f815 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800e476:	4620      	mov	r0, r4
 800e478:	b003      	add	sp, #12
 800e47a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e47c:	0802ac78 	.word	0x0802ac78
 800e480:	0802b2a0 	.word	0x0802b2a0
 800e484:	0802ad4c 	.word	0x0802ad4c
 800e488:	0801569b 	.word	0x0801569b

0800e48c <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800e48c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800e48e:	2000      	movs	r0, #0
 800e490:	b12b      	cbz	r3, 800e49e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800e492:	b920      	cbnz	r0, 800e49e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800e494:	1a5a      	subs	r2, r3, r1
 800e496:	4250      	negs	r0, r2
 800e498:	4150      	adcs	r0, r2
 800e49a:	699b      	ldr	r3, [r3, #24]
 800e49c:	e7f8      	b.n	800e490 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800e49e:	4770      	bx	lr

0800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800e4a0:	2300      	movs	r3, #0
 800e4a2:	6148      	str	r0, [r1, #20]
 800e4a4:	618b      	str	r3, [r1, #24]
 800e4a6:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800e4a8:	b913      	cbnz	r3, 800e4b0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800e4aa:	6281      	str	r1, [r0, #40]	; 0x28
 800e4ac:	4770      	bx	lr
 800e4ae:	4613      	mov	r3, r2
 800e4b0:	699a      	ldr	r2, [r3, #24]
 800e4b2:	2a00      	cmp	r2, #0
 800e4b4:	d1fb      	bne.n	800e4ae <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800e4b6:	6199      	str	r1, [r3, #24]
 800e4b8:	4770      	bx	lr

0800e4ba <_ZN8touchgfx9Container9removeAllEv>:
 800e4ba:	2200      	movs	r2, #0
 800e4bc:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800e4be:	b123      	cbz	r3, 800e4ca <_ZN8touchgfx9Container9removeAllEv+0x10>
 800e4c0:	6999      	ldr	r1, [r3, #24]
 800e4c2:	6281      	str	r1, [r0, #40]	; 0x28
 800e4c4:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800e4c8:	e7f8      	b.n	800e4bc <_ZN8touchgfx9Container9removeAllEv+0x2>
 800e4ca:	4770      	bx	lr

0800e4cc <_ZN8touchgfx9Container6unlinkEv>:
 800e4cc:	2300      	movs	r3, #0
 800e4ce:	6283      	str	r3, [r0, #40]	; 0x28
 800e4d0:	4770      	bx	lr

0800e4d2 <_ZNK8touchgfx9Container12getSolidRectEv>:
 800e4d2:	2200      	movs	r2, #0
 800e4d4:	8002      	strh	r2, [r0, #0]
 800e4d6:	8042      	strh	r2, [r0, #2]
 800e4d8:	8082      	strh	r2, [r0, #4]
 800e4da:	80c2      	strh	r2, [r0, #6]
 800e4dc:	4770      	bx	lr

0800e4de <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800e4de:	b570      	push	{r4, r5, r6, lr}
 800e4e0:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800e4e2:	460d      	mov	r5, r1
 800e4e4:	4616      	mov	r6, r2
 800e4e6:	b13c      	cbz	r4, 800e4f8 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800e4e8:	6823      	ldr	r3, [r4, #0]
 800e4ea:	4620      	mov	r0, r4
 800e4ec:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800e4ee:	4632      	mov	r2, r6
 800e4f0:	4629      	mov	r1, r5
 800e4f2:	4798      	blx	r3
 800e4f4:	69a4      	ldr	r4, [r4, #24]
 800e4f6:	e7f6      	b.n	800e4e6 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800e4f8:	bd70      	pop	{r4, r5, r6, pc}

0800e4fa <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800e4fa:	b538      	push	{r3, r4, r5, lr}
 800e4fc:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800e4fe:	460d      	mov	r5, r1
 800e500:	b134      	cbz	r4, 800e510 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800e502:	682b      	ldr	r3, [r5, #0]
 800e504:	4621      	mov	r1, r4
 800e506:	689b      	ldr	r3, [r3, #8]
 800e508:	4628      	mov	r0, r5
 800e50a:	4798      	blx	r3
 800e50c:	69a4      	ldr	r4, [r4, #24]
 800e50e:	e7f7      	b.n	800e500 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800e510:	bd38      	pop	{r3, r4, r5, pc}

0800e512 <_ZN8touchgfx9ContainerD1Ev>:
 800e512:	4770      	bx	lr

0800e514 <_ZN8touchgfx9ContainerD0Ev>:
 800e514:	b510      	push	{r4, lr}
 800e516:	212c      	movs	r1, #44	; 0x2c
 800e518:	4604      	mov	r4, r0
 800e51a:	f017 ffb8 	bl	802648e <_ZdlPvj>
 800e51e:	4620      	mov	r0, r4
 800e520:	bd10      	pop	{r4, pc}

0800e522 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800e522:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800e524:	b19b      	cbz	r3, 800e54e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800e526:	428b      	cmp	r3, r1
 800e528:	d109      	bne.n	800e53e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800e52a:	699a      	ldr	r2, [r3, #24]
 800e52c:	2100      	movs	r1, #0
 800e52e:	6159      	str	r1, [r3, #20]
 800e530:	6282      	str	r2, [r0, #40]	; 0x28
 800e532:	b902      	cbnz	r2, 800e536 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800e534:	4770      	bx	lr
 800e536:	6199      	str	r1, [r3, #24]
 800e538:	4770      	bx	lr
 800e53a:	4613      	mov	r3, r2
 800e53c:	b13a      	cbz	r2, 800e54e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800e53e:	699a      	ldr	r2, [r3, #24]
 800e540:	428a      	cmp	r2, r1
 800e542:	d1fa      	bne.n	800e53a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800e544:	698a      	ldr	r2, [r1, #24]
 800e546:	619a      	str	r2, [r3, #24]
 800e548:	2300      	movs	r3, #0
 800e54a:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800e54e:	4770      	bx	lr

0800e550 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800e550:	b410      	push	{r4}
 800e552:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800e554:	4604      	mov	r4, r0
 800e556:	b92b      	cbnz	r3, 800e564 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800e558:	6803      	ldr	r3, [r0, #0]
 800e55a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800e55e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800e560:	4611      	mov	r1, r2
 800e562:	4718      	bx	r3
 800e564:	b941      	cbnz	r1, 800e578 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800e566:	6193      	str	r3, [r2, #24]
 800e568:	6282      	str	r2, [r0, #40]	; 0x28
 800e56a:	6154      	str	r4, [r2, #20]
 800e56c:	f85d 4b04 	ldr.w	r4, [sp], #4
 800e570:	4770      	bx	lr
 800e572:	4603      	mov	r3, r0
 800e574:	2800      	cmp	r0, #0
 800e576:	d0f9      	beq.n	800e56c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800e578:	4299      	cmp	r1, r3
 800e57a:	6998      	ldr	r0, [r3, #24]
 800e57c:	d1f9      	bne.n	800e572 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800e57e:	6190      	str	r0, [r2, #24]
 800e580:	618a      	str	r2, [r1, #24]
 800e582:	e7f2      	b.n	800e56a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800e584 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800e584:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e588:	461f      	mov	r7, r3
 800e58a:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800e58e:	460d      	mov	r5, r1
 800e590:	4616      	mov	r6, r2
 800e592:	b103      	cbz	r3, 800e596 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800e594:	6038      	str	r0, [r7, #0]
 800e596:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800e598:	b314      	cbz	r4, 800e5e0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800e59a:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800e59e:	b1eb      	cbz	r3, 800e5dc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800e5a0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800e5a4:	428d      	cmp	r5, r1
 800e5a6:	db19      	blt.n	800e5dc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800e5a8:	8923      	ldrh	r3, [r4, #8]
 800e5aa:	b289      	uxth	r1, r1
 800e5ac:	440b      	add	r3, r1
 800e5ae:	b21b      	sxth	r3, r3
 800e5b0:	429d      	cmp	r5, r3
 800e5b2:	da13      	bge.n	800e5dc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800e5b4:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800e5b8:	4296      	cmp	r6, r2
 800e5ba:	db0f      	blt.n	800e5dc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800e5bc:	8963      	ldrh	r3, [r4, #10]
 800e5be:	b292      	uxth	r2, r2
 800e5c0:	4413      	add	r3, r2
 800e5c2:	b21b      	sxth	r3, r3
 800e5c4:	429e      	cmp	r6, r3
 800e5c6:	da09      	bge.n	800e5dc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800e5c8:	6823      	ldr	r3, [r4, #0]
 800e5ca:	1ab2      	subs	r2, r6, r2
 800e5cc:	1a69      	subs	r1, r5, r1
 800e5ce:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 800e5d2:	b212      	sxth	r2, r2
 800e5d4:	463b      	mov	r3, r7
 800e5d6:	b209      	sxth	r1, r1
 800e5d8:	4620      	mov	r0, r4
 800e5da:	47c0      	blx	r8
 800e5dc:	69a4      	ldr	r4, [r4, #24]
 800e5de:	e7db      	b.n	800e598 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800e5e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800e5e4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800e5e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e5e8:	4c6e      	ldr	r4, [pc, #440]	; (800e7a4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800e5ea:	b0a1      	sub	sp, #132	; 0x84
 800e5ec:	6824      	ldr	r4, [r4, #0]
 800e5ee:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 800e5f0:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 800e5f4:	9303      	str	r3, [sp, #12]
 800e5f6:	2400      	movs	r4, #0
 800e5f8:	802c      	strh	r4, [r5, #0]
 800e5fa:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 800e5fc:	802c      	strh	r4, [r5, #0]
 800e5fe:	601c      	str	r4, [r3, #0]
 800e600:	4606      	mov	r6, r0
 800e602:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800e606:	f7ff ffbd 	bl	800e584 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800e60a:	f1b9 0f03 	cmp.w	r9, #3
 800e60e:	f340 80c2 	ble.w	800e796 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 800e612:	4631      	mov	r1, r6
 800e614:	a80c      	add	r0, sp, #48	; 0x30
 800e616:	f006 fb5f 	bl	8014cd8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e61a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 800e61e:	9306      	str	r3, [sp, #24]
 800e620:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800e624:	9307      	str	r3, [sp, #28]
 800e626:	9b03      	ldr	r3, [sp, #12]
 800e628:	f8d3 a000 	ldr.w	sl, [r3]
 800e62c:	f1ba 0f00 	cmp.w	sl, #0
 800e630:	f000 80b4 	beq.w	800e79c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 800e634:	4651      	mov	r1, sl
 800e636:	a810      	add	r0, sp, #64	; 0x40
 800e638:	f006 fb4e 	bl	8014cd8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e63c:	9b01      	ldr	r3, [sp, #4]
 800e63e:	9a06      	ldr	r2, [sp, #24]
 800e640:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 800e644:	189d      	adds	r5, r3, r2
 800e646:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 800e64a:	9a07      	ldr	r2, [sp, #28]
 800e64c:	2002      	movs	r0, #2
 800e64e:	fb91 f1f0 	sdiv	r1, r1, r0
 800e652:	4419      	add	r1, r3
 800e654:	1a6d      	subs	r5, r5, r1
 800e656:	9b02      	ldr	r3, [sp, #8]
 800e658:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800e65c:	4413      	add	r3, r2
 800e65e:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 800e662:	fb92 f2f0 	sdiv	r2, r2, r0
 800e666:	440a      	add	r2, r1
 800e668:	1a9b      	subs	r3, r3, r2
 800e66a:	435b      	muls	r3, r3
 800e66c:	fb05 3505 	mla	r5, r5, r5, r3
 800e670:	4f4d      	ldr	r7, [pc, #308]	; (800e7a8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 800e672:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800e674:	ac10      	add	r4, sp, #64	; 0x40
 800e676:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800e678:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800e67a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800e67c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800e67e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800e680:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800e684:	f1b9 0f0c 	cmp.w	r9, #12
 800e688:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800e68c:	f04f 0303 	mov.w	r3, #3
 800e690:	bfc8      	it	gt
 800e692:	4698      	movgt	r8, r3
 800e694:	f8cd 9000 	str.w	r9, [sp]
 800e698:	f04f 0400 	mov.w	r4, #0
 800e69c:	bfdc      	itt	le
 800e69e:	f109 32ff 	addle.w	r2, r9, #4294967295
 800e6a2:	fb92 f8f3 	sdivle	r8, r2, r3
 800e6a6:	1c63      	adds	r3, r4, #1
 800e6a8:	aa10      	add	r2, sp, #64	; 0x40
 800e6aa:	f004 0401 	and.w	r4, r4, #1
 800e6ae:	9308      	str	r3, [sp, #32]
 800e6b0:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800e6b4:	9b00      	ldr	r3, [sp, #0]
 800e6b6:	fb93 f3f8 	sdiv	r3, r3, r8
 800e6ba:	b29b      	uxth	r3, r3
 800e6bc:	3404      	adds	r4, #4
 800e6be:	f04f 0b00 	mov.w	fp, #0
 800e6c2:	9304      	str	r3, [sp, #16]
 800e6c4:	9a04      	ldr	r2, [sp, #16]
 800e6c6:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800e6ca:	fb13 f302 	smulbb	r3, r3, r2
 800e6ce:	9a01      	ldr	r2, [sp, #4]
 800e6d0:	b29b      	uxth	r3, r3
 800e6d2:	1899      	adds	r1, r3, r2
 800e6d4:	9305      	str	r3, [sp, #20]
 800e6d6:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800e6da:	b209      	sxth	r1, r1
 800e6dc:	4299      	cmp	r1, r3
 800e6de:	db4d      	blt.n	800e77c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800e6e0:	8932      	ldrh	r2, [r6, #8]
 800e6e2:	4413      	add	r3, r2
 800e6e4:	b21b      	sxth	r3, r3
 800e6e6:	4299      	cmp	r1, r3
 800e6e8:	da48      	bge.n	800e77c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800e6ea:	9b04      	ldr	r3, [sp, #16]
 800e6ec:	6827      	ldr	r7, [r4, #0]
 800e6ee:	fb17 f703 	smulbb	r7, r7, r3
 800e6f2:	9b02      	ldr	r3, [sp, #8]
 800e6f4:	b2bf      	uxth	r7, r7
 800e6f6:	18fa      	adds	r2, r7, r3
 800e6f8:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800e6fc:	b212      	sxth	r2, r2
 800e6fe:	429a      	cmp	r2, r3
 800e700:	db3c      	blt.n	800e77c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800e702:	8970      	ldrh	r0, [r6, #10]
 800e704:	4403      	add	r3, r0
 800e706:	b21b      	sxth	r3, r3
 800e708:	429a      	cmp	r2, r3
 800e70a:	da37      	bge.n	800e77c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800e70c:	2300      	movs	r3, #0
 800e70e:	930b      	str	r3, [sp, #44]	; 0x2c
 800e710:	4630      	mov	r0, r6
 800e712:	ab0b      	add	r3, sp, #44	; 0x2c
 800e714:	f7ff ff36 	bl	800e584 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800e718:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800e71a:	b37a      	cbz	r2, 800e77c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800e71c:	4552      	cmp	r2, sl
 800e71e:	d02d      	beq.n	800e77c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800e720:	4611      	mov	r1, r2
 800e722:	a80e      	add	r0, sp, #56	; 0x38
 800e724:	9209      	str	r2, [sp, #36]	; 0x24
 800e726:	f006 fad7 	bl	8014cd8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e72a:	9a06      	ldr	r2, [sp, #24]
 800e72c:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 800e730:	9b01      	ldr	r3, [sp, #4]
 800e732:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 800e736:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 800e73a:	4413      	add	r3, r2
 800e73c:	f04f 0e02 	mov.w	lr, #2
 800e740:	fb91 f1fe 	sdiv	r1, r1, lr
 800e744:	4401      	add	r1, r0
 800e746:	1a58      	subs	r0, r3, r1
 800e748:	9a07      	ldr	r2, [sp, #28]
 800e74a:	9b02      	ldr	r3, [sp, #8]
 800e74c:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 800e750:	fb9c fcfe 	sdiv	ip, ip, lr
 800e754:	4413      	add	r3, r2
 800e756:	448c      	add	ip, r1
 800e758:	eba3 030c 	sub.w	r3, r3, ip
 800e75c:	435b      	muls	r3, r3
 800e75e:	fb00 3300 	mla	r3, r0, r0, r3
 800e762:	42ab      	cmp	r3, r5
 800e764:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800e766:	d208      	bcs.n	800e77a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800e768:	9803      	ldr	r0, [sp, #12]
 800e76a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800e76c:	6001      	str	r1, [r0, #0]
 800e76e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 800e770:	9805      	ldr	r0, [sp, #20]
 800e772:	8008      	strh	r0, [r1, #0]
 800e774:	992b      	ldr	r1, [sp, #172]	; 0xac
 800e776:	461d      	mov	r5, r3
 800e778:	800f      	strh	r7, [r1, #0]
 800e77a:	4692      	mov	sl, r2
 800e77c:	f10b 0b01 	add.w	fp, fp, #1
 800e780:	f1bb 0f04 	cmp.w	fp, #4
 800e784:	f104 0408 	add.w	r4, r4, #8
 800e788:	d19c      	bne.n	800e6c4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800e78a:	9b00      	ldr	r3, [sp, #0]
 800e78c:	9c08      	ldr	r4, [sp, #32]
 800e78e:	444b      	add	r3, r9
 800e790:	4544      	cmp	r4, r8
 800e792:	9300      	str	r3, [sp, #0]
 800e794:	d187      	bne.n	800e6a6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800e796:	b021      	add	sp, #132	; 0x84
 800e798:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e79c:	f04f 35ff 	mov.w	r5, #4294967295
 800e7a0:	e766      	b.n	800e670 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800e7a2:	bf00      	nop
 800e7a4:	200137bc 	.word	0x200137bc
 800e7a8:	08028188 	.word	0x08028188

0800e7ac <_ZN8touchgfx4RectaNERKS0_>:
 800e7ac:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e7b0:	f9b1 7000 	ldrsh.w	r7, [r1]
 800e7b4:	888c      	ldrh	r4, [r1, #4]
 800e7b6:	f9b0 9000 	ldrsh.w	r9, [r0]
 800e7ba:	443c      	add	r4, r7
 800e7bc:	b2a4      	uxth	r4, r4
 800e7be:	fa0f f884 	sxth.w	r8, r4
 800e7c2:	45c1      	cmp	r9, r8
 800e7c4:	da2f      	bge.n	800e826 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800e7c6:	8882      	ldrh	r2, [r0, #4]
 800e7c8:	444a      	add	r2, r9
 800e7ca:	b292      	uxth	r2, r2
 800e7cc:	fa0f fe82 	sxth.w	lr, r2
 800e7d0:	4577      	cmp	r7, lr
 800e7d2:	da28      	bge.n	800e826 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800e7d4:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800e7d8:	88cb      	ldrh	r3, [r1, #6]
 800e7da:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800e7de:	442b      	add	r3, r5
 800e7e0:	b21b      	sxth	r3, r3
 800e7e2:	429e      	cmp	r6, r3
 800e7e4:	da1f      	bge.n	800e826 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800e7e6:	88c3      	ldrh	r3, [r0, #6]
 800e7e8:	4433      	add	r3, r6
 800e7ea:	b29b      	uxth	r3, r3
 800e7ec:	fa0f fc83 	sxth.w	ip, r3
 800e7f0:	4565      	cmp	r5, ip
 800e7f2:	da18      	bge.n	800e826 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800e7f4:	454f      	cmp	r7, r9
 800e7f6:	bfb8      	it	lt
 800e7f8:	464f      	movlt	r7, r9
 800e7fa:	42b5      	cmp	r5, r6
 800e7fc:	bfb8      	it	lt
 800e7fe:	4635      	movlt	r5, r6
 800e800:	45f0      	cmp	r8, lr
 800e802:	bfd8      	it	le
 800e804:	4622      	movle	r2, r4
 800e806:	1bd2      	subs	r2, r2, r7
 800e808:	8082      	strh	r2, [r0, #4]
 800e80a:	884a      	ldrh	r2, [r1, #2]
 800e80c:	88c9      	ldrh	r1, [r1, #6]
 800e80e:	8007      	strh	r7, [r0, #0]
 800e810:	440a      	add	r2, r1
 800e812:	b292      	uxth	r2, r2
 800e814:	b211      	sxth	r1, r2
 800e816:	458c      	cmp	ip, r1
 800e818:	bfa8      	it	ge
 800e81a:	4613      	movge	r3, r2
 800e81c:	1b5b      	subs	r3, r3, r5
 800e81e:	80c3      	strh	r3, [r0, #6]
 800e820:	8045      	strh	r5, [r0, #2]
 800e822:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e826:	2300      	movs	r3, #0
 800e828:	8003      	strh	r3, [r0, #0]
 800e82a:	8043      	strh	r3, [r0, #2]
 800e82c:	8083      	strh	r3, [r0, #4]
 800e82e:	80c3      	strh	r3, [r0, #6]
 800e830:	e7f7      	b.n	800e822 <_ZN8touchgfx4RectaNERKS0_+0x76>

0800e832 <_ZNK8touchgfx4Rect7isEmptyEv>:
 800e832:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800e836:	2b00      	cmp	r3, #0
 800e838:	dd06      	ble.n	800e848 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800e83a:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800e83e:	2800      	cmp	r0, #0
 800e840:	bfcc      	ite	gt
 800e842:	2000      	movgt	r0, #0
 800e844:	2001      	movle	r0, #1
 800e846:	4770      	bx	lr
 800e848:	2001      	movs	r0, #1
 800e84a:	4770      	bx	lr

0800e84c <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800e84c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e850:	2300      	movs	r3, #0
 800e852:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800e854:	8003      	strh	r3, [r0, #0]
 800e856:	4604      	mov	r4, r0
 800e858:	8043      	strh	r3, [r0, #2]
 800e85a:	8083      	strh	r3, [r0, #4]
 800e85c:	80c3      	strh	r3, [r0, #6]
 800e85e:	2d00      	cmp	r5, #0
 800e860:	d040      	beq.n	800e8e4 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800e862:	1d28      	adds	r0, r5, #4
 800e864:	f7ff ffe5 	bl	800e832 <_ZNK8touchgfx4Rect7isEmptyEv>
 800e868:	b988      	cbnz	r0, 800e88e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800e86a:	4620      	mov	r0, r4
 800e86c:	f7ff ffe1 	bl	800e832 <_ZNK8touchgfx4Rect7isEmptyEv>
 800e870:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800e874:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800e878:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800e87c:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800e880:	b138      	cbz	r0, 800e892 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800e882:	8022      	strh	r2, [r4, #0]
 800e884:	8063      	strh	r3, [r4, #2]
 800e886:	f8a4 e004 	strh.w	lr, [r4, #4]
 800e88a:	f8a4 c006 	strh.w	ip, [r4, #6]
 800e88e:	69ad      	ldr	r5, [r5, #24]
 800e890:	e7e5      	b.n	800e85e <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800e892:	f9b4 0000 	ldrsh.w	r0, [r4]
 800e896:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800e89a:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800e89e:	4290      	cmp	r0, r2
 800e8a0:	4607      	mov	r7, r0
 800e8a2:	bfa8      	it	ge
 800e8a4:	4617      	movge	r7, r2
 800e8a6:	4472      	add	r2, lr
 800e8a8:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800e8ac:	8027      	strh	r7, [r4, #0]
 800e8ae:	4299      	cmp	r1, r3
 800e8b0:	460e      	mov	r6, r1
 800e8b2:	4440      	add	r0, r8
 800e8b4:	bfa8      	it	ge
 800e8b6:	461e      	movge	r6, r3
 800e8b8:	4471      	add	r1, lr
 800e8ba:	4463      	add	r3, ip
 800e8bc:	b200      	sxth	r0, r0
 800e8be:	b212      	sxth	r2, r2
 800e8c0:	b209      	sxth	r1, r1
 800e8c2:	b21b      	sxth	r3, r3
 800e8c4:	4290      	cmp	r0, r2
 800e8c6:	bfac      	ite	ge
 800e8c8:	ebc7 0200 	rsbge	r2, r7, r0
 800e8cc:	ebc7 0202 	rsblt	r2, r7, r2
 800e8d0:	4299      	cmp	r1, r3
 800e8d2:	bfac      	ite	ge
 800e8d4:	ebc6 0301 	rsbge	r3, r6, r1
 800e8d8:	ebc6 0303 	rsblt	r3, r6, r3
 800e8dc:	8066      	strh	r6, [r4, #2]
 800e8de:	80a2      	strh	r2, [r4, #4]
 800e8e0:	80e3      	strh	r3, [r4, #6]
 800e8e2:	e7d4      	b.n	800e88e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800e8e4:	4620      	mov	r0, r4
 800e8e6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800e8ea <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800e8ea:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800e8ee:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800e8f2:	b383      	cbz	r3, 800e956 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800e8f4:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800e8f6:	b374      	cbz	r4, 800e956 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800e8f8:	f9b1 5000 	ldrsh.w	r5, [r1]
 800e8fc:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800e900:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800e904:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800e908:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800e90c:	b303      	cbz	r3, 800e950 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800e90e:	4668      	mov	r0, sp
 800e910:	1d21      	adds	r1, r4, #4
 800e912:	f8ad 5000 	strh.w	r5, [sp]
 800e916:	f8ad 6002 	strh.w	r6, [sp, #2]
 800e91a:	f8ad 7004 	strh.w	r7, [sp, #4]
 800e91e:	f8ad 8006 	strh.w	r8, [sp, #6]
 800e922:	f7ff ff43 	bl	800e7ac <_ZN8touchgfx4RectaNERKS0_>
 800e926:	4668      	mov	r0, sp
 800e928:	f7ff ff83 	bl	800e832 <_ZNK8touchgfx4Rect7isEmptyEv>
 800e92c:	b980      	cbnz	r0, 800e950 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800e92e:	f8bd 3000 	ldrh.w	r3, [sp]
 800e932:	88a2      	ldrh	r2, [r4, #4]
 800e934:	1a9b      	subs	r3, r3, r2
 800e936:	f8ad 3000 	strh.w	r3, [sp]
 800e93a:	88e2      	ldrh	r2, [r4, #6]
 800e93c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800e940:	1a9b      	subs	r3, r3, r2
 800e942:	f8ad 3002 	strh.w	r3, [sp, #2]
 800e946:	6823      	ldr	r3, [r4, #0]
 800e948:	4669      	mov	r1, sp
 800e94a:	689b      	ldr	r3, [r3, #8]
 800e94c:	4620      	mov	r0, r4
 800e94e:	4798      	blx	r3
 800e950:	69a4      	ldr	r4, [r4, #24]
 800e952:	2c00      	cmp	r4, #0
 800e954:	d1d8      	bne.n	800e908 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800e956:	b002      	add	sp, #8
 800e958:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800e95c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800e95c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800e95e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800e962:	460d      	mov	r5, r1
 800e964:	4616      	mov	r6, r2
 800e966:	b323      	cbz	r3, 800e9b2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800e968:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800e96a:	b314      	cbz	r4, 800e9b2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800e96c:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800e970:	b1eb      	cbz	r3, 800e9ae <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800e972:	6828      	ldr	r0, [r5, #0]
 800e974:	6869      	ldr	r1, [r5, #4]
 800e976:	466b      	mov	r3, sp
 800e978:	c303      	stmia	r3!, {r0, r1}
 800e97a:	4668      	mov	r0, sp
 800e97c:	1d21      	adds	r1, r4, #4
 800e97e:	f7ff ff15 	bl	800e7ac <_ZN8touchgfx4RectaNERKS0_>
 800e982:	4668      	mov	r0, sp
 800e984:	f7ff ff55 	bl	800e832 <_ZNK8touchgfx4Rect7isEmptyEv>
 800e988:	b988      	cbnz	r0, 800e9ae <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800e98a:	f8bd 3000 	ldrh.w	r3, [sp]
 800e98e:	88a2      	ldrh	r2, [r4, #4]
 800e990:	1a9b      	subs	r3, r3, r2
 800e992:	f8ad 3000 	strh.w	r3, [sp]
 800e996:	88e2      	ldrh	r2, [r4, #6]
 800e998:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800e99c:	1a9b      	subs	r3, r3, r2
 800e99e:	f8ad 3002 	strh.w	r3, [sp, #2]
 800e9a2:	6823      	ldr	r3, [r4, #0]
 800e9a4:	4632      	mov	r2, r6
 800e9a6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800e9a8:	4669      	mov	r1, sp
 800e9aa:	4620      	mov	r0, r4
 800e9ac:	4798      	blx	r3
 800e9ae:	69a4      	ldr	r4, [r4, #24]
 800e9b0:	e7db      	b.n	800e96a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800e9b2:	b002      	add	sp, #8
 800e9b4:	bd70      	pop	{r4, r5, r6, pc}

0800e9b6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800e9b6:	b513      	push	{r0, r1, r4, lr}
 800e9b8:	6803      	ldr	r3, [r0, #0]
 800e9ba:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 800e9be:	2300      	movs	r3, #0
 800e9c0:	e9cd 3300 	strd	r3, r3, [sp]
 800e9c4:	466b      	mov	r3, sp
 800e9c6:	47a0      	blx	r4
 800e9c8:	b002      	add	sp, #8
 800e9ca:	bd10      	pop	{r4, pc}

0800e9cc <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800e9cc:	2301      	movs	r3, #1
 800e9ce:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800e9d2:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 800e9d6:	4770      	bx	lr

0800e9d8 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800e9d8:	2301      	movs	r3, #1
 800e9da:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800e9de:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 800e9e2:	4770      	bx	lr

0800e9e4 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800e9e4:	6843      	ldr	r3, [r0, #4]
 800e9e6:	2201      	movs	r2, #1
 800e9e8:	725a      	strb	r2, [r3, #9]
 800e9ea:	6840      	ldr	r0, [r0, #4]
 800e9ec:	6803      	ldr	r3, [r0, #0]
 800e9ee:	691b      	ldr	r3, [r3, #16]
 800e9f0:	4718      	bx	r3

0800e9f2 <_ZN8touchgfx3HAL8flushDMAEv>:
 800e9f2:	6840      	ldr	r0, [r0, #4]
 800e9f4:	6803      	ldr	r3, [r0, #0]
 800e9f6:	689b      	ldr	r3, [r3, #8]
 800e9f8:	4718      	bx	r3

0800e9fa <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800e9fa:	b530      	push	{r4, r5, lr}
 800e9fc:	b08b      	sub	sp, #44	; 0x2c
 800e9fe:	6804      	ldr	r4, [r0, #0]
 800ea00:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 800ea04:	9509      	str	r5, [sp, #36]	; 0x24
 800ea06:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 800ea0a:	9508      	str	r5, [sp, #32]
 800ea0c:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 800ea10:	9507      	str	r5, [sp, #28]
 800ea12:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 800ea16:	9506      	str	r5, [sp, #24]
 800ea18:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 800ea1c:	9505      	str	r5, [sp, #20]
 800ea1e:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 800ea22:	9504      	str	r5, [sp, #16]
 800ea24:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 800ea28:	9503      	str	r5, [sp, #12]
 800ea2a:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800ea2e:	9502      	str	r5, [sp, #8]
 800ea30:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 800ea34:	e9cd 3500 	strd	r3, r5, [sp]
 800ea38:	4613      	mov	r3, r2
 800ea3a:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 800ea3c:	2200      	movs	r2, #0
 800ea3e:	47a0      	blx	r4
 800ea40:	b00b      	add	sp, #44	; 0x2c
 800ea42:	bd30      	pop	{r4, r5, pc}

0800ea44 <_ZN8touchgfx3HAL10beginFrameEv>:
 800ea44:	4b04      	ldr	r3, [pc, #16]	; (800ea58 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800ea46:	781b      	ldrb	r3, [r3, #0]
 800ea48:	b123      	cbz	r3, 800ea54 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800ea4a:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
 800ea4e:	f080 0001 	eor.w	r0, r0, #1
 800ea52:	4770      	bx	lr
 800ea54:	2001      	movs	r0, #1
 800ea56:	4770      	bx	lr
 800ea58:	200137ba 	.word	0x200137ba

0800ea5c <_ZN8touchgfx3HAL8endFrameEv>:
 800ea5c:	b510      	push	{r4, lr}
 800ea5e:	4604      	mov	r4, r0
 800ea60:	6840      	ldr	r0, [r0, #4]
 800ea62:	6803      	ldr	r3, [r0, #0]
 800ea64:	689b      	ldr	r3, [r3, #8]
 800ea66:	4798      	blx	r3
 800ea68:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
 800ea6c:	b113      	cbz	r3, 800ea74 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800ea6e:	2301      	movs	r3, #1
 800ea70:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 800ea74:	bd10      	pop	{r4, pc}

0800ea76 <_ZN8touchgfx3HAL10initializeEv>:
 800ea76:	b510      	push	{r4, lr}
 800ea78:	4604      	mov	r4, r0
 800ea7a:	f7f1 ffb7 	bl	80009ec <_ZN8touchgfx10OSWrappers10initializeEv>
 800ea7e:	f7f1 fec3 	bl	8000808 <_ZN8touchgfx4GPIO4initEv>
 800ea82:	6860      	ldr	r0, [r4, #4]
 800ea84:	6803      	ldr	r3, [r0, #0]
 800ea86:	68db      	ldr	r3, [r3, #12]
 800ea88:	4798      	blx	r3
 800ea8a:	68e0      	ldr	r0, [r4, #12]
 800ea8c:	6803      	ldr	r3, [r0, #0]
 800ea8e:	689b      	ldr	r3, [r3, #8]
 800ea90:	4798      	blx	r3
 800ea92:	6823      	ldr	r3, [r4, #0]
 800ea94:	4620      	mov	r0, r4
 800ea96:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800ea98:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ea9c:	4718      	bx	r3
	...

0800eaa0 <_ZN8touchgfx3HAL4tickEv>:
 800eaa0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800eaa2:	6803      	ldr	r3, [r0, #0]
 800eaa4:	4d5b      	ldr	r5, [pc, #364]	; (800ec14 <_ZN8touchgfx3HAL4tickEv+0x174>)
 800eaa6:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800eaaa:	4604      	mov	r4, r0
 800eaac:	4798      	blx	r3
 800eaae:	2800      	cmp	r0, #0
 800eab0:	f000 8095 	beq.w	800ebde <_ZN8touchgfx3HAL4tickEv+0x13e>
 800eab4:	2001      	movs	r0, #1
 800eab6:	f7f1 fe59 	bl	800076c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800eaba:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
 800eabe:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800eac2:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
 800eac6:	2600      	movs	r6, #0
 800eac8:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
 800eacc:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 800ead0:	b133      	cbz	r3, 800eae0 <_ZN8touchgfx3HAL4tickEv+0x40>
 800ead2:	6823      	ldr	r3, [r4, #0]
 800ead4:	4620      	mov	r0, r4
 800ead6:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 800eada:	4798      	blx	r3
 800eadc:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
 800eae0:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800eae4:	6862      	ldr	r2, [r4, #4]
 800eae6:	f083 0301 	eor.w	r3, r3, #1
 800eaea:	7253      	strb	r3, [r2, #9]
 800eaec:	2601      	movs	r6, #1
 800eaee:	702e      	strb	r6, [r5, #0]
 800eaf0:	f004 ff6e 	bl	80139d0 <_ZN8touchgfx11Application11getInstanceEv>
 800eaf4:	6803      	ldr	r3, [r0, #0]
 800eaf6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800eaf8:	4798      	blx	r3
 800eafa:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 800eafe:	b90b      	cbnz	r3, 800eb04 <_ZN8touchgfx3HAL4tickEv+0x64>
 800eb00:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
 800eb04:	f004 ff64 	bl	80139d0 <_ZN8touchgfx11Application11getInstanceEv>
 800eb08:	6803      	ldr	r3, [r0, #0]
 800eb0a:	695b      	ldr	r3, [r3, #20]
 800eb0c:	4798      	blx	r3
 800eb0e:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 800eb10:	6803      	ldr	r3, [r0, #0]
 800eb12:	691b      	ldr	r3, [r3, #16]
 800eb14:	4798      	blx	r3
 800eb16:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 800eb1a:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
 800eb1e:	3b01      	subs	r3, #1
 800eb20:	b2db      	uxtb	r3, r3
 800eb22:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800eb26:	b10a      	cbz	r2, 800eb2c <_ZN8touchgfx3HAL4tickEv+0x8c>
 800eb28:	2b00      	cmp	r3, #0
 800eb2a:	d1eb      	bne.n	800eb04 <_ZN8touchgfx3HAL4tickEv+0x64>
 800eb2c:	4a3a      	ldr	r2, [pc, #232]	; (800ec18 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800eb2e:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
 800eb32:	7813      	ldrb	r3, [r2, #0]
 800eb34:	3301      	adds	r3, #1
 800eb36:	b25b      	sxtb	r3, r3
 800eb38:	4299      	cmp	r1, r3
 800eb3a:	7013      	strb	r3, [r2, #0]
 800eb3c:	dc10      	bgt.n	800eb60 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800eb3e:	68e0      	ldr	r0, [r4, #12]
 800eb40:	2300      	movs	r3, #0
 800eb42:	7013      	strb	r3, [r2, #0]
 800eb44:	6803      	ldr	r3, [r0, #0]
 800eb46:	aa03      	add	r2, sp, #12
 800eb48:	68db      	ldr	r3, [r3, #12]
 800eb4a:	a902      	add	r1, sp, #8
 800eb4c:	4798      	blx	r3
 800eb4e:	6823      	ldr	r3, [r4, #0]
 800eb50:	2800      	cmp	r0, #0
 800eb52:	d050      	beq.n	800ebf6 <_ZN8touchgfx3HAL4tickEv+0x156>
 800eb54:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800eb58:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800eb5c:	4620      	mov	r0, r4
 800eb5e:	4798      	blx	r3
 800eb60:	6960      	ldr	r0, [r4, #20]
 800eb62:	2300      	movs	r3, #0
 800eb64:	f88d 3007 	strb.w	r3, [sp, #7]
 800eb68:	b158      	cbz	r0, 800eb82 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800eb6a:	6803      	ldr	r3, [r0, #0]
 800eb6c:	f10d 0107 	add.w	r1, sp, #7
 800eb70:	68db      	ldr	r3, [r3, #12]
 800eb72:	4798      	blx	r3
 800eb74:	b128      	cbz	r0, 800eb82 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800eb76:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 800eb78:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800eb7c:	6803      	ldr	r3, [r0, #0]
 800eb7e:	68db      	ldr	r3, [r3, #12]
 800eb80:	4798      	blx	r3
 800eb82:	f104 001c 	add.w	r0, r4, #28
 800eb86:	f015 fcc5 	bl	8024514 <_ZN8touchgfx8Gestures4tickEv>
 800eb8a:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
 800eb8e:	b30b      	cbz	r3, 800ebd4 <_ZN8touchgfx3HAL4tickEv+0x134>
 800eb90:	6920      	ldr	r0, [r4, #16]
 800eb92:	6803      	ldr	r3, [r0, #0]
 800eb94:	691b      	ldr	r3, [r3, #16]
 800eb96:	4798      	blx	r3
 800eb98:	6f63      	ldr	r3, [r4, #116]	; 0x74
 800eb9a:	4606      	mov	r6, r0
 800eb9c:	b903      	cbnz	r3, 800eba0 <_ZN8touchgfx3HAL4tickEv+0x100>
 800eb9e:	6760      	str	r0, [r4, #116]	; 0x74
 800eba0:	6f63      	ldr	r3, [r4, #116]	; 0x74
 800eba2:	4a1e      	ldr	r2, [pc, #120]	; (800ec1c <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800eba4:	1af3      	subs	r3, r6, r3
 800eba6:	4293      	cmp	r3, r2
 800eba8:	d914      	bls.n	800ebd4 <_ZN8touchgfx3HAL4tickEv+0x134>
 800ebaa:	6920      	ldr	r0, [r4, #16]
 800ebac:	6803      	ldr	r3, [r0, #0]
 800ebae:	699b      	ldr	r3, [r3, #24]
 800ebb0:	4798      	blx	r3
 800ebb2:	6f63      	ldr	r3, [r4, #116]	; 0x74
 800ebb4:	2264      	movs	r2, #100	; 0x64
 800ebb6:	1af3      	subs	r3, r6, r3
 800ebb8:	fbb3 f3f2 	udiv	r3, r3, r2
 800ebbc:	fbb0 f0f3 	udiv	r0, r0, r3
 800ebc0:	2800      	cmp	r0, #0
 800ebc2:	dc1d      	bgt.n	800ec00 <_ZN8touchgfx3HAL4tickEv+0x160>
 800ebc4:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
 800ebc8:	6920      	ldr	r0, [r4, #16]
 800ebca:	6803      	ldr	r3, [r0, #0]
 800ebcc:	2100      	movs	r1, #0
 800ebce:	69db      	ldr	r3, [r3, #28]
 800ebd0:	4798      	blx	r3
 800ebd2:	6766      	str	r6, [r4, #116]	; 0x74
 800ebd4:	f004 fefc 	bl	80139d0 <_ZN8touchgfx11Application11getInstanceEv>
 800ebd8:	6803      	ldr	r3, [r0, #0]
 800ebda:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800ebdc:	4798      	blx	r3
 800ebde:	6823      	ldr	r3, [r4, #0]
 800ebe0:	4620      	mov	r0, r4
 800ebe2:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800ebe6:	4798      	blx	r3
 800ebe8:	2001      	movs	r0, #1
 800ebea:	f7f1 fdd7 	bl	800079c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800ebee:	2300      	movs	r3, #0
 800ebf0:	702b      	strb	r3, [r5, #0]
 800ebf2:	b004      	add	sp, #16
 800ebf4:	bd70      	pop	{r4, r5, r6, pc}
 800ebf6:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 800ebfa:	4620      	mov	r0, r4
 800ebfc:	4798      	blx	r3
 800ebfe:	e7af      	b.n	800eb60 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800ec00:	2863      	cmp	r0, #99	; 0x63
 800ec02:	bfcb      	itete	gt
 800ec04:	2300      	movgt	r3, #0
 800ec06:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 800ec0a:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
 800ec0e:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
 800ec12:	e7d9      	b.n	800ebc8 <_ZN8touchgfx3HAL4tickEv+0x128>
 800ec14:	200137c0 	.word	0x200137c0
 800ec18:	200137c1 	.word	0x200137c1
 800ec1c:	05f5e100 	.word	0x05f5e100

0800ec20 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800ec20:	b510      	push	{r4, lr}
 800ec22:	4604      	mov	r4, r0
 800ec24:	f7f1 ff12 	bl	8000a4c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 800ec28:	6863      	ldr	r3, [r4, #4]
 800ec2a:	2200      	movs	r2, #0
 800ec2c:	729a      	strb	r2, [r3, #10]
 800ec2e:	bd10      	pop	{r4, pc}

0800ec30 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800ec30:	65c1      	str	r1, [r0, #92]	; 0x5c
 800ec32:	301c      	adds	r0, #28
 800ec34:	f015 bc6c 	b.w	8024510 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800ec38 <_ZN8touchgfx3HAL5touchEll>:
 800ec38:	b530      	push	{r4, r5, lr}
 800ec3a:	b087      	sub	sp, #28
 800ec3c:	4604      	mov	r4, r0
 800ec3e:	a804      	add	r0, sp, #16
 800ec40:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800ec44:	f004 fc90 	bl	8013568 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800ec48:	9b04      	ldr	r3, [sp, #16]
 800ec4a:	f8ad 300c 	strh.w	r3, [sp, #12]
 800ec4e:	a906      	add	r1, sp, #24
 800ec50:	9b05      	ldr	r3, [sp, #20]
 800ec52:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800ec56:	a803      	add	r0, sp, #12
 800ec58:	f004 fcd8 	bl	801360c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800ec5c:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
 800ec60:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800ec64:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800ec68:	f104 001c 	add.w	r0, r4, #28
 800ec6c:	b189      	cbz	r1, 800ec92 <_ZN8touchgfx3HAL5touchEll+0x5a>
 800ec6e:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
 800ec72:	9300      	str	r3, [sp, #0]
 800ec74:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
 800ec78:	4613      	mov	r3, r2
 800ec7a:	462a      	mov	r2, r5
 800ec7c:	f015 fc58 	bl	8024530 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800ec80:	b128      	cbz	r0, 800ec8e <_ZN8touchgfx3HAL5touchEll+0x56>
 800ec82:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800ec86:	6623      	str	r3, [r4, #96]	; 0x60
 800ec88:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800ec8c:	6663      	str	r3, [r4, #100]	; 0x64
 800ec8e:	b007      	add	sp, #28
 800ec90:	bd30      	pop	{r4, r5, pc}
 800ec92:	f015 fc8d 	bl	80245b0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800ec96:	2301      	movs	r3, #1
 800ec98:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 800ec9c:	e7f1      	b.n	800ec82 <_ZN8touchgfx3HAL5touchEll+0x4a>

0800ec9e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800ec9e:	b510      	push	{r4, lr}
 800eca0:	2b00      	cmp	r3, #0
 800eca2:	d046      	beq.n	800ed32 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800eca4:	ea81 0002 	eor.w	r0, r1, r2
 800eca8:	07c4      	lsls	r4, r0, #31
 800ecaa:	d508      	bpl.n	800ecbe <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800ecac:	440b      	add	r3, r1
 800ecae:	3a01      	subs	r2, #1
 800ecb0:	428b      	cmp	r3, r1
 800ecb2:	d93e      	bls.n	800ed32 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800ecb4:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800ecb8:	f801 0b01 	strb.w	r0, [r1], #1
 800ecbc:	e7f8      	b.n	800ecb0 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800ecbe:	07d0      	lsls	r0, r2, #31
 800ecc0:	bf42      	ittt	mi
 800ecc2:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800ecc6:	f801 0b01 	strbmi.w	r0, [r1], #1
 800ecca:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800ecce:	2b01      	cmp	r3, #1
 800ecd0:	d911      	bls.n	800ecf6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800ecd2:	ea81 0402 	eor.w	r4, r1, r2
 800ecd6:	07a4      	lsls	r4, r4, #30
 800ecd8:	4610      	mov	r0, r2
 800ecda:	d022      	beq.n	800ed22 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800ecdc:	f023 0401 	bic.w	r4, r3, #1
 800ece0:	440c      	add	r4, r1
 800ece2:	428c      	cmp	r4, r1
 800ece4:	4602      	mov	r2, r0
 800ece6:	d904      	bls.n	800ecf2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800ece8:	8812      	ldrh	r2, [r2, #0]
 800ecea:	f821 2b02 	strh.w	r2, [r1], #2
 800ecee:	3002      	adds	r0, #2
 800ecf0:	e7f7      	b.n	800ece2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800ecf2:	f003 0301 	and.w	r3, r3, #1
 800ecf6:	f023 0003 	bic.w	r0, r3, #3
 800ecfa:	4408      	add	r0, r1
 800ecfc:	4288      	cmp	r0, r1
 800ecfe:	4614      	mov	r4, r2
 800ed00:	d904      	bls.n	800ed0c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800ed02:	6824      	ldr	r4, [r4, #0]
 800ed04:	f841 4b04 	str.w	r4, [r1], #4
 800ed08:	3204      	adds	r2, #4
 800ed0a:	e7f7      	b.n	800ecfc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800ed0c:	f003 0303 	and.w	r3, r3, #3
 800ed10:	440b      	add	r3, r1
 800ed12:	3a01      	subs	r2, #1
 800ed14:	428b      	cmp	r3, r1
 800ed16:	d90c      	bls.n	800ed32 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800ed18:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800ed1c:	f801 0b01 	strb.w	r0, [r1], #1
 800ed20:	e7f8      	b.n	800ed14 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800ed22:	0790      	lsls	r0, r2, #30
 800ed24:	d0e7      	beq.n	800ecf6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800ed26:	f832 0b02 	ldrh.w	r0, [r2], #2
 800ed2a:	f821 0b02 	strh.w	r0, [r1], #2
 800ed2e:	3b02      	subs	r3, #2
 800ed30:	e7e1      	b.n	800ecf6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800ed32:	2001      	movs	r0, #1
 800ed34:	bd10      	pop	{r4, pc}

0800ed36 <_ZN8touchgfx3HAL7noTouchEv>:
 800ed36:	b510      	push	{r4, lr}
 800ed38:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
 800ed3c:	4604      	mov	r4, r0
 800ed3e:	b153      	cbz	r3, 800ed56 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800ed40:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
 800ed44:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
 800ed48:	2101      	movs	r1, #1
 800ed4a:	301c      	adds	r0, #28
 800ed4c:	f015 fc30 	bl	80245b0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800ed50:	2300      	movs	r3, #0
 800ed52:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 800ed56:	bd10      	pop	{r4, pc}

0800ed58 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800ed58:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ed5c:	b085      	sub	sp, #20
 800ed5e:	ad04      	add	r5, sp, #16
 800ed60:	4604      	mov	r4, r0
 800ed62:	2000      	movs	r0, #0
 800ed64:	f845 0d04 	str.w	r0, [r5, #-4]!
 800ed68:	69a0      	ldr	r0, [r4, #24]
 800ed6a:	6806      	ldr	r6, [r0, #0]
 800ed6c:	9501      	str	r5, [sp, #4]
 800ed6e:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 800ed72:	9500      	str	r5, [sp, #0]
 800ed74:	6835      	ldr	r5, [r6, #0]
 800ed76:	4699      	mov	r9, r3
 800ed78:	460f      	mov	r7, r1
 800ed7a:	4690      	mov	r8, r2
 800ed7c:	47a8      	blx	r5
 800ed7e:	4d10      	ldr	r5, [pc, #64]	; (800edc0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800ed80:	4606      	mov	r6, r0
 800ed82:	f8a5 9000 	strh.w	r9, [r5]
 800ed86:	f7f3 ffad 	bl	8002ce4 <_ZN8touchgfx3HAL3lcdEv>
 800ed8a:	6803      	ldr	r3, [r0, #0]
 800ed8c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ed8e:	4798      	blx	r3
 800ed90:	b128      	cbz	r0, 800ed9e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 800ed92:	2801      	cmp	r0, #1
 800ed94:	d00b      	beq.n	800edae <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 800ed96:	4630      	mov	r0, r6
 800ed98:	b005      	add	sp, #20
 800ed9a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ed9e:	882b      	ldrh	r3, [r5, #0]
 800eda0:	fb08 7203 	mla	r2, r8, r3, r7
 800eda4:	9b03      	ldr	r3, [sp, #12]
 800eda6:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800edaa:	63e3      	str	r3, [r4, #60]	; 0x3c
 800edac:	e7f3      	b.n	800ed96 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800edae:	882a      	ldrh	r2, [r5, #0]
 800edb0:	9b03      	ldr	r3, [sp, #12]
 800edb2:	fb08 7202 	mla	r2, r8, r2, r7
 800edb6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800edba:	1a9a      	subs	r2, r3, r2
 800edbc:	63e2      	str	r2, [r4, #60]	; 0x3c
 800edbe:	e7ea      	b.n	800ed96 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800edc0:	200137b6 	.word	0x200137b6

0800edc4 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800edc4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800edc6:	b08b      	sub	sp, #44	; 0x2c
 800edc8:	4617      	mov	r7, r2
 800edca:	4604      	mov	r4, r0
 800edcc:	460e      	mov	r6, r1
 800edce:	461d      	mov	r5, r3
 800edd0:	f7f3 ff88 	bl	8002ce4 <_ZN8touchgfx3HAL3lcdEv>
 800edd4:	6803      	ldr	r3, [r0, #0]
 800edd6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800edd8:	4798      	blx	r3
 800edda:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800edde:	9007      	str	r0, [sp, #28]
 800ede0:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800ede4:	4b0d      	ldr	r3, [pc, #52]	; (800ee1c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800ede6:	6822      	ldr	r2, [r4, #0]
 800ede8:	881b      	ldrh	r3, [r3, #0]
 800edea:	9306      	str	r3, [sp, #24]
 800edec:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800edf0:	9305      	str	r3, [sp, #20]
 800edf2:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800edf6:	9304      	str	r3, [sp, #16]
 800edf8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800edfc:	9303      	str	r3, [sp, #12]
 800edfe:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800ee02:	9302      	str	r3, [sp, #8]
 800ee04:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800ee08:	e9cd 5300 	strd	r5, r3, [sp]
 800ee0c:	4631      	mov	r1, r6
 800ee0e:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 800ee10:	463b      	mov	r3, r7
 800ee12:	2200      	movs	r2, #0
 800ee14:	4620      	mov	r0, r4
 800ee16:	47a8      	blx	r5
 800ee18:	b00b      	add	sp, #44	; 0x2c
 800ee1a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ee1c:	200137b6 	.word	0x200137b6

0800ee20 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800ee20:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ee24:	4698      	mov	r8, r3
 800ee26:	6803      	ldr	r3, [r0, #0]
 800ee28:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 800ee2a:	4b15      	ldr	r3, [pc, #84]	; (800ee80 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800ee2c:	b08b      	sub	sp, #44	; 0x2c
 800ee2e:	4617      	mov	r7, r2
 800ee30:	f8b3 9000 	ldrh.w	r9, [r3]
 800ee34:	460e      	mov	r6, r1
 800ee36:	4604      	mov	r4, r0
 800ee38:	f7f3 ff54 	bl	8002ce4 <_ZN8touchgfx3HAL3lcdEv>
 800ee3c:	6803      	ldr	r3, [r0, #0]
 800ee3e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ee40:	4798      	blx	r3
 800ee42:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800ee46:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800ee4a:	2302      	movs	r3, #2
 800ee4c:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800ee50:	2301      	movs	r3, #1
 800ee52:	9305      	str	r3, [sp, #20]
 800ee54:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800ee58:	9304      	str	r3, [sp, #16]
 800ee5a:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800ee5e:	9303      	str	r3, [sp, #12]
 800ee60:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800ee64:	9302      	str	r3, [sp, #8]
 800ee66:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800ee6a:	2200      	movs	r2, #0
 800ee6c:	e9cd 8300 	strd	r8, r3, [sp]
 800ee70:	4631      	mov	r1, r6
 800ee72:	463b      	mov	r3, r7
 800ee74:	4620      	mov	r0, r4
 800ee76:	47a8      	blx	r5
 800ee78:	b00b      	add	sp, #44	; 0x2c
 800ee7a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ee7e:	bf00      	nop
 800ee80:	200137b6 	.word	0x200137b6

0800ee84 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800ee84:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ee88:	4698      	mov	r8, r3
 800ee8a:	6803      	ldr	r3, [r0, #0]
 800ee8c:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 800ee8e:	4b11      	ldr	r3, [pc, #68]	; (800eed4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800ee90:	b087      	sub	sp, #28
 800ee92:	f8b3 9000 	ldrh.w	r9, [r3]
 800ee96:	460e      	mov	r6, r1
 800ee98:	4617      	mov	r7, r2
 800ee9a:	4604      	mov	r4, r0
 800ee9c:	f7f3 ff22 	bl	8002ce4 <_ZN8touchgfx3HAL3lcdEv>
 800eea0:	6803      	ldr	r3, [r0, #0]
 800eea2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800eea4:	4798      	blx	r3
 800eea6:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 800eeaa:	f8cd 900c 	str.w	r9, [sp, #12]
 800eeae:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800eeb2:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 800eeb6:	9302      	str	r3, [sp, #8]
 800eeb8:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800eebc:	9301      	str	r3, [sp, #4]
 800eebe:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800eec2:	9300      	str	r3, [sp, #0]
 800eec4:	463a      	mov	r2, r7
 800eec6:	4643      	mov	r3, r8
 800eec8:	4631      	mov	r1, r6
 800eeca:	4620      	mov	r0, r4
 800eecc:	47a8      	blx	r5
 800eece:	b007      	add	sp, #28
 800eed0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800eed4:	200137b6 	.word	0x200137b6

0800eed8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800eed8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800eedc:	4604      	mov	r4, r0
 800eede:	b08f      	sub	sp, #60	; 0x3c
 800eee0:	4610      	mov	r0, r2
 800eee2:	460d      	mov	r5, r1
 800eee4:	4691      	mov	r9, r2
 800eee6:	461e      	mov	r6, r3
 800eee8:	f007 fefc 	bl	8016ce4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800eeec:	2800      	cmp	r0, #0
 800eeee:	f000 809d 	beq.w	800f02c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 800eef2:	6823      	ldr	r3, [r4, #0]
 800eef4:	f8df b198 	ldr.w	fp, [pc, #408]	; 800f090 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800eef8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800eefa:	f8df a198 	ldr.w	sl, [pc, #408]	; 800f094 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 800eefe:	4f61      	ldr	r7, [pc, #388]	; (800f084 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800ef00:	4620      	mov	r0, r4
 800ef02:	4798      	blx	r3
 800ef04:	6823      	ldr	r3, [r4, #0]
 800ef06:	4620      	mov	r0, r4
 800ef08:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ef0a:	4798      	blx	r3
 800ef0c:	f8bb 3000 	ldrh.w	r3, [fp]
 800ef10:	9301      	str	r3, [sp, #4]
 800ef12:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 800ef16:	f8ba 3000 	ldrh.w	r3, [sl]
 800ef1a:	9302      	str	r3, [sp, #8]
 800ef1c:	883b      	ldrh	r3, [r7, #0]
 800ef1e:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800ef22:	9303      	str	r3, [sp, #12]
 800ef24:	4b58      	ldr	r3, [pc, #352]	; (800f088 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800ef26:	9305      	str	r3, [sp, #20]
 800ef28:	881a      	ldrh	r2, [r3, #0]
 800ef2a:	9204      	str	r2, [sp, #16]
 800ef2c:	4640      	mov	r0, r8
 800ef2e:	f007 ff6d 	bl	8016e0c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800ef32:	8038      	strh	r0, [r7, #0]
 800ef34:	4640      	mov	r0, r8
 800ef36:	f007 ff9d 	bl	8016e74 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800ef3a:	9b05      	ldr	r3, [sp, #20]
 800ef3c:	b280      	uxth	r0, r0
 800ef3e:	8018      	strh	r0, [r3, #0]
 800ef40:	4b52      	ldr	r3, [pc, #328]	; (800f08c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800ef42:	781b      	ldrb	r3, [r3, #0]
 800ef44:	2b00      	cmp	r3, #0
 800ef46:	d174      	bne.n	800f032 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800ef48:	883b      	ldrh	r3, [r7, #0]
 800ef4a:	f8ab 3000 	strh.w	r3, [fp]
 800ef4e:	f8aa 0000 	strh.w	r0, [sl]
 800ef52:	4648      	mov	r0, r9
 800ef54:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 800ef58:	f007 fec4 	bl	8016ce4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800ef5c:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 800ef60:	2200      	movs	r2, #0
 800ef62:	4611      	mov	r1, r2
 800ef64:	4628      	mov	r0, r5
 800ef66:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800ef6a:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800ef6e:	f7f3 f9fd 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
 800ef72:	2301      	movs	r3, #1
 800ef74:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 800ef78:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 800ef7c:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800ef80:	2b00      	cmp	r3, #0
 800ef82:	dd5c      	ble.n	800f03e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800ef84:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800ef88:	2b00      	cmp	r3, #0
 800ef8a:	dd58      	ble.n	800f03e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800ef8c:	462a      	mov	r2, r5
 800ef8e:	ab0a      	add	r3, sp, #40	; 0x28
 800ef90:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800ef94:	6851      	ldr	r1, [r2, #4]
 800ef96:	c303      	stmia	r3!, {r0, r1}
 800ef98:	4631      	mov	r1, r6
 800ef9a:	a80a      	add	r0, sp, #40	; 0x28
 800ef9c:	f7ff fc06 	bl	800e7ac <_ZN8touchgfx4RectaNERKS0_>
 800efa0:	4b38      	ldr	r3, [pc, #224]	; (800f084 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800efa2:	f9b3 2000 	ldrsh.w	r2, [r3]
 800efa6:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800efaa:	2100      	movs	r1, #0
 800efac:	aa0a      	add	r2, sp, #40	; 0x28
 800efae:	4b36      	ldr	r3, [pc, #216]	; (800f088 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800efb0:	910c      	str	r1, [sp, #48]	; 0x30
 800efb2:	e892 0003 	ldmia.w	r2, {r0, r1}
 800efb6:	f9b3 3000 	ldrsh.w	r3, [r3]
 800efba:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800efbe:	ab08      	add	r3, sp, #32
 800efc0:	e883 0003 	stmia.w	r3, {r0, r1}
 800efc4:	4618      	mov	r0, r3
 800efc6:	a90c      	add	r1, sp, #48	; 0x30
 800efc8:	f7ff fbf0 	bl	800e7ac <_ZN8touchgfx4RectaNERKS0_>
 800efcc:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 800efce:	2b00      	cmp	r3, #0
 800efd0:	d13c      	bne.n	800f04c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 800efd2:	2000      	movs	r0, #0
 800efd4:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
 800efd8:	2600      	movs	r6, #0
 800efda:	682a      	ldr	r2, [r5, #0]
 800efdc:	696b      	ldr	r3, [r5, #20]
 800efde:	616e      	str	r6, [r5, #20]
 800efe0:	9305      	str	r3, [sp, #20]
 800efe2:	6892      	ldr	r2, [r2, #8]
 800efe4:	a908      	add	r1, sp, #32
 800efe6:	4628      	mov	r0, r5
 800efe8:	4790      	blx	r2
 800efea:	9b05      	ldr	r3, [sp, #20]
 800efec:	616b      	str	r3, [r5, #20]
 800efee:	4652      	mov	r2, sl
 800eff0:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
 800eff4:	4649      	mov	r1, r9
 800eff6:	4628      	mov	r0, r5
 800eff8:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 800effc:	f7f3 f9b6 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
 800f000:	4b23      	ldr	r3, [pc, #140]	; (800f090 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800f002:	9a01      	ldr	r2, [sp, #4]
 800f004:	801a      	strh	r2, [r3, #0]
 800f006:	4b23      	ldr	r3, [pc, #140]	; (800f094 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 800f008:	9a02      	ldr	r2, [sp, #8]
 800f00a:	801a      	strh	r2, [r3, #0]
 800f00c:	4b1d      	ldr	r3, [pc, #116]	; (800f084 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800f00e:	9a03      	ldr	r2, [sp, #12]
 800f010:	801a      	strh	r2, [r3, #0]
 800f012:	4b1d      	ldr	r3, [pc, #116]	; (800f088 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800f014:	9a04      	ldr	r2, [sp, #16]
 800f016:	801a      	strh	r2, [r3, #0]
 800f018:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 800f01c:	6823      	ldr	r3, [r4, #0]
 800f01e:	4620      	mov	r0, r4
 800f020:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800f022:	4798      	blx	r3
 800f024:	6823      	ldr	r3, [r4, #0]
 800f026:	4620      	mov	r0, r4
 800f028:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f02a:	4798      	blx	r3
 800f02c:	b00f      	add	sp, #60	; 0x3c
 800f02e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f032:	883b      	ldrh	r3, [r7, #0]
 800f034:	f8ab 0000 	strh.w	r0, [fp]
 800f038:	f8aa 3000 	strh.w	r3, [sl]
 800f03c:	e789      	b.n	800ef52 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 800f03e:	462a      	mov	r2, r5
 800f040:	ab0a      	add	r3, sp, #40	; 0x28
 800f042:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800f046:	6851      	ldr	r1, [r2, #4]
 800f048:	c303      	stmia	r3!, {r0, r1}
 800f04a:	e7a9      	b.n	800efa0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 800f04c:	a807      	add	r0, sp, #28
 800f04e:	f008 f84d 	bl	80170ec <_ZNK8touchgfx6Bitmap9getFormatEv>
 800f052:	4606      	mov	r6, r0
 800f054:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 800f056:	6803      	ldr	r3, [r0, #0]
 800f058:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f05a:	4798      	blx	r3
 800f05c:	4286      	cmp	r6, r0
 800f05e:	d1b8      	bne.n	800efd2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800f060:	f7f3 fe40 	bl	8002ce4 <_ZN8touchgfx3HAL3lcdEv>
 800f064:	6803      	ldr	r3, [r0, #0]
 800f066:	4606      	mov	r6, r0
 800f068:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800f06a:	9305      	str	r3, [sp, #20]
 800f06c:	a807      	add	r0, sp, #28
 800f06e:	f008 f83d 	bl	80170ec <_ZNK8touchgfx6Bitmap9getFormatEv>
 800f072:	9b05      	ldr	r3, [sp, #20]
 800f074:	4601      	mov	r1, r0
 800f076:	4630      	mov	r0, r6
 800f078:	4798      	blx	r3
 800f07a:	f080 0001 	eor.w	r0, r0, #1
 800f07e:	b2c0      	uxtb	r0, r0
 800f080:	e7a8      	b.n	800efd4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 800f082:	bf00      	nop
 800f084:	200137b0 	.word	0x200137b0
 800f088:	200137b2 	.word	0x200137b2
 800f08c:	200137b4 	.word	0x200137b4
 800f090:	200137b6 	.word	0x200137b6
 800f094:	200137b8 	.word	0x200137b8

0800f098 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800f098:	b510      	push	{r4, lr}
 800f09a:	4b07      	ldr	r3, [pc, #28]	; (800f0b8 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800f09c:	781b      	ldrb	r3, [r3, #0]
 800f09e:	4604      	mov	r4, r0
 800f0a0:	b13b      	cbz	r3, 800f0b2 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800f0a2:	6803      	ldr	r3, [r0, #0]
 800f0a4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800f0a6:	4798      	blx	r3
 800f0a8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800f0aa:	4283      	cmp	r3, r0
 800f0ac:	d101      	bne.n	800f0b2 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800f0ae:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800f0b0:	bd10      	pop	{r4, pc}
 800f0b2:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800f0b4:	e7fc      	b.n	800f0b0 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800f0b6:	bf00      	nop
 800f0b8:	200137ba 	.word	0x200137ba

0800f0bc <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800f0bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f0c0:	b08a      	sub	sp, #40	; 0x28
 800f0c2:	461d      	mov	r5, r3
 800f0c4:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800f0c8:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800f0cc:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800f0d0:	f8ad 3018 	strh.w	r3, [sp, #24]
 800f0d4:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800f0d8:	f8ad 301a 	strh.w	r3, [sp, #26]
 800f0dc:	2400      	movs	r4, #0
 800f0de:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800f0e2:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 800f0e6:	f8ad 301c 	strh.w	r3, [sp, #28]
 800f0ea:	4690      	mov	r8, r2
 800f0ec:	4607      	mov	r7, r0
 800f0ee:	9404      	str	r4, [sp, #16]
 800f0f0:	f88d 4020 	strb.w	r4, [sp, #32]
 800f0f4:	f7ff ffd0 	bl	800f098 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800f0f8:	fb06 8505 	mla	r5, r6, r5, r8
 800f0fc:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800f100:	6878      	ldr	r0, [r7, #4]
 800f102:	9505      	str	r5, [sp, #20]
 800f104:	f8ad 601e 	strh.w	r6, [sp, #30]
 800f108:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800f10c:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 800f110:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800f114:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800f118:	6803      	ldr	r3, [r0, #0]
 800f11a:	a901      	add	r1, sp, #4
 800f11c:	685b      	ldr	r3, [r3, #4]
 800f11e:	4798      	blx	r3
 800f120:	b00a      	add	sp, #40	; 0x28
 800f122:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800f126 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800f126:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f12a:	b08b      	sub	sp, #44	; 0x2c
 800f12c:	2400      	movs	r4, #0
 800f12e:	461d      	mov	r5, r3
 800f130:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800f134:	4688      	mov	r8, r1
 800f136:	4691      	mov	r9, r2
 800f138:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 800f13c:	9404      	str	r4, [sp, #16]
 800f13e:	4607      	mov	r7, r0
 800f140:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800f144:	f7ff ffa8 	bl	800f098 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800f148:	fb06 9505 	mla	r5, r6, r5, r9
 800f14c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800f150:	f8ad 3018 	strh.w	r3, [sp, #24]
 800f154:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800f158:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800f15c:	6878      	ldr	r0, [r7, #4]
 800f15e:	9505      	str	r5, [sp, #20]
 800f160:	f8ad 301a 	strh.w	r3, [sp, #26]
 800f164:	f8ad 401c 	strh.w	r4, [sp, #28]
 800f168:	f8ad 601e 	strh.w	r6, [sp, #30]
 800f16c:	f8cd 8010 	str.w	r8, [sp, #16]
 800f170:	f8ad 4020 	strh.w	r4, [sp, #32]
 800f174:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800f178:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800f17c:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800f180:	6803      	ldr	r3, [r0, #0]
 800f182:	a901      	add	r1, sp, #4
 800f184:	685b      	ldr	r3, [r3, #4]
 800f186:	4798      	blx	r3
 800f188:	b00b      	add	sp, #44	; 0x2c
 800f18a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800f190 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800f190:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f194:	b08a      	sub	sp, #40	; 0x28
 800f196:	4698      	mov	r8, r3
 800f198:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 800f19c:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 800f1a0:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 800f1a4:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 800f1a8:	2300      	movs	r3, #0
 800f1aa:	2d0b      	cmp	r5, #11
 800f1ac:	4606      	mov	r6, r0
 800f1ae:	9304      	str	r3, [sp, #16]
 800f1b0:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 800f1b4:	d138      	bne.n	800f228 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 800f1b6:	2380      	movs	r3, #128	; 0x80
 800f1b8:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800f1bc:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800f1c0:	f8ad 3018 	strh.w	r3, [sp, #24]
 800f1c4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800f1c8:	f8ad 301a 	strh.w	r3, [sp, #26]
 800f1cc:	f88d 0020 	strb.w	r0, [sp, #32]
 800f1d0:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800f1d4:	f8ad 301c 	strh.w	r3, [sp, #28]
 800f1d8:	4630      	mov	r0, r6
 800f1da:	9203      	str	r2, [sp, #12]
 800f1dc:	f7ff ff5c 	bl	800f098 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800f1e0:	2c0b      	cmp	r4, #11
 800f1e2:	bf98      	it	ls
 800f1e4:	4b1b      	ldrls	r3, [pc, #108]	; (800f254 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 800f1e6:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 800f1ea:	bf98      	it	ls
 800f1ec:	5d19      	ldrbls	r1, [r3, r4]
 800f1ee:	f8ad 701e 	strh.w	r7, [sp, #30]
 800f1f2:	bf88      	it	hi
 800f1f4:	2100      	movhi	r1, #0
 800f1f6:	fb02 8307 	mla	r3, r2, r7, r8
 800f1fa:	10c9      	asrs	r1, r1, #3
 800f1fc:	fb01 0003 	mla	r0, r1, r3, r0
 800f200:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 800f204:	9005      	str	r0, [sp, #20]
 800f206:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800f20a:	6870      	ldr	r0, [r6, #4]
 800f20c:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 800f210:	2300      	movs	r3, #0
 800f212:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800f216:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800f21a:	6803      	ldr	r3, [r0, #0]
 800f21c:	a901      	add	r1, sp, #4
 800f21e:	685b      	ldr	r3, [r3, #4]
 800f220:	4798      	blx	r3
 800f222:	b00a      	add	sp, #40	; 0x28
 800f224:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f228:	2d02      	cmp	r5, #2
 800f22a:	d109      	bne.n	800f240 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 800f22c:	28ff      	cmp	r0, #255	; 0xff
 800f22e:	d105      	bne.n	800f23c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 800f230:	f1bc 0f00 	cmp.w	ip, #0
 800f234:	bf14      	ite	ne
 800f236:	2340      	movne	r3, #64	; 0x40
 800f238:	2320      	moveq	r3, #32
 800f23a:	e7bd      	b.n	800f1b8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800f23c:	2340      	movs	r3, #64	; 0x40
 800f23e:	e7bb      	b.n	800f1b8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800f240:	28ff      	cmp	r0, #255	; 0xff
 800f242:	d105      	bne.n	800f250 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 800f244:	f1bc 0f00 	cmp.w	ip, #0
 800f248:	bf14      	ite	ne
 800f24a:	2304      	movne	r3, #4
 800f24c:	2301      	moveq	r3, #1
 800f24e:	e7b3      	b.n	800f1b8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800f250:	2304      	movs	r3, #4
 800f252:	e7b1      	b.n	800f1b8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800f254:	0802add4 	.word	0x0802add4

0800f258 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800f258:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f25c:	b08b      	sub	sp, #44	; 0x2c
 800f25e:	461d      	mov	r5, r3
 800f260:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 800f264:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 800f268:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 800f26c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 800f270:	bf14      	ite	ne
 800f272:	2308      	movne	r3, #8
 800f274:	2302      	moveq	r3, #2
 800f276:	2400      	movs	r4, #0
 800f278:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800f27c:	4688      	mov	r8, r1
 800f27e:	4693      	mov	fp, r2
 800f280:	9404      	str	r4, [sp, #16]
 800f282:	4607      	mov	r7, r0
 800f284:	f7ff ff08 	bl	800f098 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800f288:	2e0b      	cmp	r6, #11
 800f28a:	bf98      	it	ls
 800f28c:	4b15      	ldrls	r3, [pc, #84]	; (800f2e4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 800f28e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 800f292:	bf98      	it	ls
 800f294:	5d9c      	ldrbls	r4, [r3, r6]
 800f296:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800f29a:	f8ad 3018 	strh.w	r3, [sp, #24]
 800f29e:	fb05 b50a 	mla	r5, r5, sl, fp
 800f2a2:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800f2a6:	f8ad 301a 	strh.w	r3, [sp, #26]
 800f2aa:	10e4      	asrs	r4, r4, #3
 800f2ac:	fb04 0405 	mla	r4, r4, r5, r0
 800f2b0:	2300      	movs	r3, #0
 800f2b2:	6878      	ldr	r0, [r7, #4]
 800f2b4:	9405      	str	r4, [sp, #20]
 800f2b6:	f8ad 301c 	strh.w	r3, [sp, #28]
 800f2ba:	f8ad a01e 	strh.w	sl, [sp, #30]
 800f2be:	f8cd 8010 	str.w	r8, [sp, #16]
 800f2c2:	f88d 9020 	strb.w	r9, [sp, #32]
 800f2c6:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 800f2ca:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800f2ce:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 800f2d2:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 800f2d6:	6803      	ldr	r3, [r0, #0]
 800f2d8:	a901      	add	r1, sp, #4
 800f2da:	685b      	ldr	r3, [r3, #4]
 800f2dc:	4798      	blx	r3
 800f2de:	b00b      	add	sp, #44	; 0x2c
 800f2e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f2e4:	0802add4 	.word	0x0802add4

0800f2e8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800f2e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f2ec:	461e      	mov	r6, r3
 800f2ee:	4b0a      	ldr	r3, [pc, #40]	; (800f318 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 800f2f0:	460f      	mov	r7, r1
 800f2f2:	881d      	ldrh	r5, [r3, #0]
 800f2f4:	4690      	mov	r8, r2
 800f2f6:	f7f3 fcf5 	bl	8002ce4 <_ZN8touchgfx3HAL3lcdEv>
 800f2fa:	6803      	ldr	r3, [r0, #0]
 800f2fc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f2fe:	4798      	blx	r3
 800f300:	280b      	cmp	r0, #11
 800f302:	bf9a      	itte	ls
 800f304:	4b05      	ldrls	r3, [pc, #20]	; (800f31c <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800f306:	5c1c      	ldrbls	r4, [r3, r0]
 800f308:	2400      	movhi	r4, #0
 800f30a:	fb08 7005 	mla	r0, r8, r5, r7
 800f30e:	10e4      	asrs	r4, r4, #3
 800f310:	fb04 6000 	mla	r0, r4, r0, r6
 800f314:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f318:	200137b6 	.word	0x200137b6
 800f31c:	0802add4 	.word	0x0802add4

0800f320 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800f320:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f322:	b08b      	sub	sp, #44	; 0x2c
 800f324:	461f      	mov	r7, r3
 800f326:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800f32a:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800f32e:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800f332:	f8ad 3018 	strh.w	r3, [sp, #24]
 800f336:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800f33a:	f8ad 301a 	strh.w	r3, [sp, #26]
 800f33e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800f342:	f8ad 301c 	strh.w	r3, [sp, #28]
 800f346:	2500      	movs	r5, #0
 800f348:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800f34c:	f88d 3020 	strb.w	r3, [sp, #32]
 800f350:	4604      	mov	r4, r0
 800f352:	4616      	mov	r6, r2
 800f354:	9504      	str	r5, [sp, #16]
 800f356:	f7ff fe9f 	bl	800f098 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800f35a:	463a      	mov	r2, r7
 800f35c:	4631      	mov	r1, r6
 800f35e:	4603      	mov	r3, r0
 800f360:	4620      	mov	r0, r4
 800f362:	f7ff ffc1 	bl	800f2e8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800f366:	4b0e      	ldr	r3, [pc, #56]	; (800f3a0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 800f368:	9005      	str	r0, [sp, #20]
 800f36a:	881b      	ldrh	r3, [r3, #0]
 800f36c:	f8ad 301e 	strh.w	r3, [sp, #30]
 800f370:	f7f3 fcb8 	bl	8002ce4 <_ZN8touchgfx3HAL3lcdEv>
 800f374:	6803      	ldr	r3, [r0, #0]
 800f376:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f378:	4798      	blx	r3
 800f37a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800f37c:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 800f380:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 800f384:	9304      	str	r3, [sp, #16]
 800f386:	6860      	ldr	r0, [r4, #4]
 800f388:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800f38c:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800f390:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 800f394:	6803      	ldr	r3, [r0, #0]
 800f396:	a901      	add	r1, sp, #4
 800f398:	685b      	ldr	r3, [r3, #4]
 800f39a:	4798      	blx	r3
 800f39c:	b00b      	add	sp, #44	; 0x2c
 800f39e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f3a0:	200137b6 	.word	0x200137b6

0800f3a4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800f3a4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f3a6:	b08d      	sub	sp, #52	; 0x34
 800f3a8:	466b      	mov	r3, sp
 800f3aa:	e883 0006 	stmia.w	r3, {r1, r2}
 800f3ae:	2300      	movs	r3, #0
 800f3b0:	9306      	str	r3, [sp, #24]
 800f3b2:	6803      	ldr	r3, [r0, #0]
 800f3b4:	f8bd 6000 	ldrh.w	r6, [sp]
 800f3b8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800f3ba:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800f3be:	2501      	movs	r5, #1
 800f3c0:	9503      	str	r5, [sp, #12]
 800f3c2:	4604      	mov	r4, r0
 800f3c4:	4798      	blx	r3
 800f3c6:	463a      	mov	r2, r7
 800f3c8:	4631      	mov	r1, r6
 800f3ca:	4603      	mov	r3, r0
 800f3cc:	4620      	mov	r0, r4
 800f3ce:	f7ff ff8b 	bl	800f2e8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800f3d2:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800f3d4:	9307      	str	r3, [sp, #28]
 800f3d6:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800f3da:	f8ad 3020 	strh.w	r3, [sp, #32]
 800f3de:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800f3e2:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800f3e6:	4b0f      	ldr	r3, [pc, #60]	; (800f424 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 800f3e8:	9004      	str	r0, [sp, #16]
 800f3ea:	881b      	ldrh	r3, [r3, #0]
 800f3ec:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800f3f0:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800f3f4:	f7f3 fc76 	bl	8002ce4 <_ZN8touchgfx3HAL3lcdEv>
 800f3f8:	6803      	ldr	r3, [r0, #0]
 800f3fa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f3fc:	4798      	blx	r3
 800f3fe:	23ff      	movs	r3, #255	; 0xff
 800f400:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800f404:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800f408:	6860      	ldr	r0, [r4, #4]
 800f40a:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800f40e:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800f412:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800f416:	6803      	ldr	r3, [r0, #0]
 800f418:	a903      	add	r1, sp, #12
 800f41a:	685b      	ldr	r3, [r3, #4]
 800f41c:	4798      	blx	r3
 800f41e:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800f420:	b00d      	add	sp, #52	; 0x34
 800f422:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f424:	200137b6 	.word	0x200137b6

0800f428 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800f428:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f42c:	b08c      	sub	sp, #48	; 0x30
 800f42e:	461e      	mov	r6, r3
 800f430:	466d      	mov	r5, sp
 800f432:	2300      	movs	r3, #0
 800f434:	e885 0006 	stmia.w	r5, {r1, r2}
 800f438:	9306      	str	r3, [sp, #24]
 800f43a:	6803      	ldr	r3, [r0, #0]
 800f43c:	f8bd 7000 	ldrh.w	r7, [sp]
 800f440:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800f442:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800f446:	2501      	movs	r5, #1
 800f448:	9503      	str	r5, [sp, #12]
 800f44a:	4604      	mov	r4, r0
 800f44c:	4798      	blx	r3
 800f44e:	4642      	mov	r2, r8
 800f450:	4639      	mov	r1, r7
 800f452:	4603      	mov	r3, r0
 800f454:	4620      	mov	r0, r4
 800f456:	f7ff ff47 	bl	800f2e8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800f45a:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800f45e:	f8ad 3020 	strh.w	r3, [sp, #32]
 800f462:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800f466:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800f46a:	4b11      	ldr	r3, [pc, #68]	; (800f4b0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800f46c:	9004      	str	r0, [sp, #16]
 800f46e:	881b      	ldrh	r3, [r3, #0]
 800f470:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800f474:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800f476:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800f47a:	9607      	str	r6, [sp, #28]
 800f47c:	f7f3 fc32 	bl	8002ce4 <_ZN8touchgfx3HAL3lcdEv>
 800f480:	6803      	ldr	r3, [r0, #0]
 800f482:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f484:	4798      	blx	r3
 800f486:	23ff      	movs	r3, #255	; 0xff
 800f488:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800f48c:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800f490:	6860      	ldr	r0, [r4, #4]
 800f492:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800f496:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800f49a:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800f49e:	6803      	ldr	r3, [r0, #0]
 800f4a0:	a903      	add	r1, sp, #12
 800f4a2:	685b      	ldr	r3, [r3, #4]
 800f4a4:	4798      	blx	r3
 800f4a6:	4630      	mov	r0, r6
 800f4a8:	b00c      	add	sp, #48	; 0x30
 800f4aa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f4ae:	bf00      	nop
 800f4b0:	200137b6 	.word	0x200137b6

0800f4b4 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800f4b4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f4b6:	b085      	sub	sp, #20
 800f4b8:	ac02      	add	r4, sp, #8
 800f4ba:	e884 0006 	stmia.w	r4, {r1, r2}
 800f4be:	4605      	mov	r5, r0
 800f4c0:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800f4c4:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800f4c8:	f7ff fde6 	bl	800f098 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800f4cc:	463a      	mov	r2, r7
 800f4ce:	4603      	mov	r3, r0
 800f4d0:	4631      	mov	r1, r6
 800f4d2:	4628      	mov	r0, r5
 800f4d4:	f7ff ff08 	bl	800f2e8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800f4d8:	4a05      	ldr	r2, [pc, #20]	; (800f4f0 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800f4da:	682b      	ldr	r3, [r5, #0]
 800f4dc:	8812      	ldrh	r2, [r2, #0]
 800f4de:	9200      	str	r2, [sp, #0]
 800f4e0:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 800f4e2:	e894 0006 	ldmia.w	r4, {r1, r2}
 800f4e6:	4603      	mov	r3, r0
 800f4e8:	4628      	mov	r0, r5
 800f4ea:	47b0      	blx	r6
 800f4ec:	b005      	add	sp, #20
 800f4ee:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f4f0:	200137b6 	.word	0x200137b6

0800f4f4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800f4f4:	b570      	push	{r4, r5, r6, lr}
 800f4f6:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
 800f4fa:	4604      	mov	r4, r0
 800f4fc:	b19b      	cbz	r3, 800f526 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800f4fe:	2002      	movs	r0, #2
 800f500:	f7f1 f964 	bl	80007cc <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800f504:	2300      	movs	r3, #0
 800f506:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 800f50a:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 800f50e:	6823      	ldr	r3, [r4, #0]
 800f510:	4620      	mov	r0, r4
 800f512:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 800f516:	f7ff fdbf 	bl	800f098 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800f51a:	462b      	mov	r3, r5
 800f51c:	4601      	mov	r1, r0
 800f51e:	4620      	mov	r0, r4
 800f520:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f524:	4718      	bx	r3
 800f526:	bd70      	pop	{r4, r5, r6, pc}

0800f528 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800f528:	b538      	push	{r3, r4, r5, lr}
 800f52a:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
 800f52e:	428b      	cmp	r3, r1
 800f530:	4604      	mov	r4, r0
 800f532:	460d      	mov	r5, r1
 800f534:	d006      	beq.n	800f544 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800f536:	6803      	ldr	r3, [r0, #0]
 800f538:	b929      	cbnz	r1, 800f546 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800f53a:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800f53e:	4798      	blx	r3
 800f540:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
 800f544:	bd38      	pop	{r3, r4, r5, pc}
 800f546:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 800f54a:	e7f8      	b.n	800f53e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800f54c <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800f54c:	b510      	push	{r4, lr}
 800f54e:	4b0d      	ldr	r3, [pc, #52]	; (800f584 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 800f550:	781b      	ldrb	r3, [r3, #0]
 800f552:	4604      	mov	r4, r0
 800f554:	b95b      	cbnz	r3, 800f56e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800f556:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 800f55a:	2b02      	cmp	r3, #2
 800f55c:	d007      	beq.n	800f56e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800f55e:	6840      	ldr	r0, [r0, #4]
 800f560:	f000 f92c 	bl	800f7bc <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800f564:	b118      	cbz	r0, 800f56e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800f566:	6862      	ldr	r2, [r4, #4]
 800f568:	7a53      	ldrb	r3, [r2, #9]
 800f56a:	2b00      	cmp	r3, #0
 800f56c:	d0fc      	beq.n	800f568 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800f56e:	f7f1 fa65 	bl	8000a3c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800f572:	4620      	mov	r0, r4
 800f574:	2100      	movs	r1, #0
 800f576:	f7ff ffd7 	bl	800f528 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800f57a:	4620      	mov	r0, r4
 800f57c:	f7ff fd8c 	bl	800f098 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800f580:	bd10      	pop	{r4, pc}
 800f582:	bf00      	nop
 800f584:	200137ba 	.word	0x200137ba

0800f588 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 800f588:	b570      	push	{r4, r5, r6, lr}
 800f58a:	4604      	mov	r4, r0
 800f58c:	6803      	ldr	r3, [r0, #0]
 800f58e:	b919      	cbnz	r1, 800f598 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 800f590:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800f592:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f596:	4718      	bx	r3
 800f598:	2200      	movs	r2, #0
 800f59a:	f890 607b 	ldrb.w	r6, [r0, #123]	; 0x7b
 800f59e:	f880 207b 	strb.w	r2, [r0, #123]	; 0x7b
 800f5a2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800f5a4:	4798      	blx	r3
 800f5a6:	6863      	ldr	r3, [r4, #4]
 800f5a8:	2101      	movs	r1, #1
 800f5aa:	4605      	mov	r5, r0
 800f5ac:	7299      	strb	r1, [r3, #10]
 800f5ae:	4620      	mov	r0, r4
 800f5b0:	f884 607b 	strb.w	r6, [r4, #123]	; 0x7b
 800f5b4:	f7ff ffb8 	bl	800f528 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800f5b8:	4628      	mov	r0, r5
 800f5ba:	bd70      	pop	{r4, r5, r6, pc}

0800f5bc <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800f5bc:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800f5c0:	1a13      	subs	r3, r2, r0
 800f5c2:	4258      	negs	r0, r3
 800f5c4:	4158      	adcs	r0, r3
 800f5c6:	4770      	bx	lr

0800f5c8 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800f5c8:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800f5cc:	1a9b      	subs	r3, r3, r2
 800f5ce:	2b00      	cmp	r3, #0
 800f5d0:	bfdc      	itt	le
 800f5d2:	6882      	ldrle	r2, [r0, #8]
 800f5d4:	189b      	addle	r3, r3, r2
 800f5d6:	2b01      	cmp	r3, #1
 800f5d8:	bfcc      	ite	gt
 800f5da:	2000      	movgt	r0, #0
 800f5dc:	2001      	movle	r0, #1
 800f5de:	4770      	bx	lr

0800f5e0 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800f5e0:	6902      	ldr	r2, [r0, #16]
 800f5e2:	6843      	ldr	r3, [r0, #4]
 800f5e4:	2024      	movs	r0, #36	; 0x24
 800f5e6:	fb00 3002 	mla	r0, r0, r2, r3
 800f5ea:	4770      	bx	lr

0800f5ec <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800f5ec:	6803      	ldr	r3, [r0, #0]
 800f5ee:	691b      	ldr	r3, [r3, #16]
 800f5f0:	4718      	bx	r3

0800f5f2 <_ZN8touchgfx13DMA_Interface7executeEv>:
 800f5f2:	b570      	push	{r4, r5, r6, lr}
 800f5f4:	2301      	movs	r3, #1
 800f5f6:	7203      	strb	r3, [r0, #8]
 800f5f8:	4604      	mov	r4, r0
 800f5fa:	6840      	ldr	r0, [r0, #4]
 800f5fc:	6803      	ldr	r3, [r0, #0]
 800f5fe:	699b      	ldr	r3, [r3, #24]
 800f600:	4798      	blx	r3
 800f602:	6803      	ldr	r3, [r0, #0]
 800f604:	2b40      	cmp	r3, #64	; 0x40
 800f606:	4605      	mov	r5, r0
 800f608:	d00c      	beq.n	800f624 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800f60a:	d810      	bhi.n	800f62e <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800f60c:	2b04      	cmp	r3, #4
 800f60e:	d01d      	beq.n	800f64c <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 800f610:	d804      	bhi.n	800f61c <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 800f612:	2b01      	cmp	r3, #1
 800f614:	d006      	beq.n	800f624 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800f616:	2b02      	cmp	r3, #2
 800f618:	d02c      	beq.n	800f674 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800f61a:	bd70      	pop	{r4, r5, r6, pc}
 800f61c:	2b08      	cmp	r3, #8
 800f61e:	d01d      	beq.n	800f65c <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 800f620:	2b20      	cmp	r3, #32
 800f622:	d1fa      	bne.n	800f61a <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 800f624:	6823      	ldr	r3, [r4, #0]
 800f626:	4620      	mov	r0, r4
 800f628:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800f62a:	4798      	blx	r3
 800f62c:	e013      	b.n	800f656 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800f62e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800f632:	d0f7      	beq.n	800f624 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800f634:	d804      	bhi.n	800f640 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 800f636:	2b80      	cmp	r3, #128	; 0x80
 800f638:	d0f4      	beq.n	800f624 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800f63a:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800f63e:	e7f0      	b.n	800f622 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 800f640:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800f644:	d0ee      	beq.n	800f624 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800f646:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800f64a:	e7e5      	b.n	800f618 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800f64c:	6823      	ldr	r3, [r4, #0]
 800f64e:	7f01      	ldrb	r1, [r0, #28]
 800f650:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800f652:	4620      	mov	r0, r4
 800f654:	4798      	blx	r3
 800f656:	6823      	ldr	r3, [r4, #0]
 800f658:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800f65a:	e006      	b.n	800f66a <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800f65c:	6823      	ldr	r3, [r4, #0]
 800f65e:	7f01      	ldrb	r1, [r0, #28]
 800f660:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800f662:	4620      	mov	r0, r4
 800f664:	4798      	blx	r3
 800f666:	6823      	ldr	r3, [r4, #0]
 800f668:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800f66a:	4629      	mov	r1, r5
 800f66c:	4620      	mov	r0, r4
 800f66e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f672:	4718      	bx	r3
 800f674:	6823      	ldr	r3, [r4, #0]
 800f676:	4620      	mov	r0, r4
 800f678:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800f67a:	4798      	blx	r3
 800f67c:	e7f3      	b.n	800f666 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0800f67e <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800f67e:	4770      	bx	lr

0800f680 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800f680:	4770      	bx	lr

0800f682 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800f682:	4770      	bx	lr

0800f684 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800f684:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800f688:	1ad2      	subs	r2, r2, r3
 800f68a:	2a00      	cmp	r2, #0
 800f68c:	b510      	push	{r4, lr}
 800f68e:	bfdc      	itt	le
 800f690:	6884      	ldrle	r4, [r0, #8]
 800f692:	1912      	addle	r2, r2, r4
 800f694:	2a01      	cmp	r2, #1
 800f696:	dd16      	ble.n	800f6c6 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 800f698:	6842      	ldr	r2, [r0, #4]
 800f69a:	2424      	movs	r4, #36	; 0x24
 800f69c:	fb04 2303 	mla	r3, r4, r3, r2
 800f6a0:	f101 0220 	add.w	r2, r1, #32
 800f6a4:	f851 4b04 	ldr.w	r4, [r1], #4
 800f6a8:	f843 4b04 	str.w	r4, [r3], #4
 800f6ac:	4291      	cmp	r1, r2
 800f6ae:	d1f9      	bne.n	800f6a4 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800f6b0:	780a      	ldrb	r2, [r1, #0]
 800f6b2:	701a      	strb	r2, [r3, #0]
 800f6b4:	68c3      	ldr	r3, [r0, #12]
 800f6b6:	6882      	ldr	r2, [r0, #8]
 800f6b8:	f3bf 8f5b 	dmb	ish
 800f6bc:	3301      	adds	r3, #1
 800f6be:	429a      	cmp	r2, r3
 800f6c0:	bfd8      	it	le
 800f6c2:	1a9b      	suble	r3, r3, r2
 800f6c4:	60c3      	str	r3, [r0, #12]
 800f6c6:	bd10      	pop	{r4, pc}

0800f6c8 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800f6c8:	6903      	ldr	r3, [r0, #16]
 800f6ca:	6882      	ldr	r2, [r0, #8]
 800f6cc:	f3bf 8f5b 	dmb	ish
 800f6d0:	3301      	adds	r3, #1
 800f6d2:	429a      	cmp	r2, r3
 800f6d4:	bfd8      	it	le
 800f6d6:	1a9b      	suble	r3, r3, r2
 800f6d8:	6103      	str	r3, [r0, #16]
 800f6da:	4770      	bx	lr

0800f6dc <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800f6dc:	b570      	push	{r4, r5, r6, lr}
 800f6de:	4604      	mov	r4, r0
 800f6e0:	460e      	mov	r6, r1
 800f6e2:	6860      	ldr	r0, [r4, #4]
 800f6e4:	6803      	ldr	r3, [r0, #0]
 800f6e6:	685b      	ldr	r3, [r3, #4]
 800f6e8:	4798      	blx	r3
 800f6ea:	2800      	cmp	r0, #0
 800f6ec:	d1f9      	bne.n	800f6e2 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800f6ee:	4d0d      	ldr	r5, [pc, #52]	; (800f724 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800f6f0:	6828      	ldr	r0, [r5, #0]
 800f6f2:	6803      	ldr	r3, [r0, #0]
 800f6f4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800f6f6:	4798      	blx	r3
 800f6f8:	f7f1 f9ae 	bl	8000a58 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800f6fc:	6828      	ldr	r0, [r5, #0]
 800f6fe:	2101      	movs	r1, #1
 800f700:	f7ff ff12 	bl	800f528 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800f704:	6860      	ldr	r0, [r4, #4]
 800f706:	6803      	ldr	r3, [r0, #0]
 800f708:	4631      	mov	r1, r6
 800f70a:	689b      	ldr	r3, [r3, #8]
 800f70c:	4798      	blx	r3
 800f70e:	6823      	ldr	r3, [r4, #0]
 800f710:	4620      	mov	r0, r4
 800f712:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f714:	4798      	blx	r3
 800f716:	6828      	ldr	r0, [r5, #0]
 800f718:	6803      	ldr	r3, [r0, #0]
 800f71a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f71e:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800f720:	4718      	bx	r3
 800f722:	bf00      	nop
 800f724:	200137bc 	.word	0x200137bc

0800f728 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800f728:	b508      	push	{r3, lr}
 800f72a:	f7f1 f987 	bl	8000a3c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800f72e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800f732:	f7f1 b98b 	b.w	8000a4c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800f736 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800f736:	b510      	push	{r4, lr}
 800f738:	2114      	movs	r1, #20
 800f73a:	4604      	mov	r4, r0
 800f73c:	f016 fea7 	bl	802648e <_ZdlPvj>
 800f740:	4620      	mov	r0, r4
 800f742:	bd10      	pop	{r4, pc}

0800f744 <_ZN8touchgfx13DMA_Interface5startEv>:
 800f744:	b510      	push	{r4, lr}
 800f746:	4604      	mov	r4, r0
 800f748:	6840      	ldr	r0, [r0, #4]
 800f74a:	6803      	ldr	r3, [r0, #0]
 800f74c:	681b      	ldr	r3, [r3, #0]
 800f74e:	4798      	blx	r3
 800f750:	b948      	cbnz	r0, 800f766 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800f752:	7a63      	ldrb	r3, [r4, #9]
 800f754:	b13b      	cbz	r3, 800f766 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800f756:	7a23      	ldrb	r3, [r4, #8]
 800f758:	b92b      	cbnz	r3, 800f766 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800f75a:	6823      	ldr	r3, [r4, #0]
 800f75c:	4620      	mov	r0, r4
 800f75e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f760:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f764:	4718      	bx	r3
 800f766:	bd10      	pop	{r4, pc}

0800f768 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800f768:	b570      	push	{r4, r5, r6, lr}
 800f76a:	4604      	mov	r4, r0
 800f76c:	6840      	ldr	r0, [r0, #4]
 800f76e:	6803      	ldr	r3, [r0, #0]
 800f770:	681b      	ldr	r3, [r3, #0]
 800f772:	4798      	blx	r3
 800f774:	4605      	mov	r5, r0
 800f776:	b930      	cbnz	r0, 800f786 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800f778:	7a23      	ldrb	r3, [r4, #8]
 800f77a:	b123      	cbz	r3, 800f786 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800f77c:	6860      	ldr	r0, [r4, #4]
 800f77e:	6803      	ldr	r3, [r0, #0]
 800f780:	695b      	ldr	r3, [r3, #20]
 800f782:	4798      	blx	r3
 800f784:	7225      	strb	r5, [r4, #8]
 800f786:	6860      	ldr	r0, [r4, #4]
 800f788:	6803      	ldr	r3, [r0, #0]
 800f78a:	681b      	ldr	r3, [r3, #0]
 800f78c:	4798      	blx	r3
 800f78e:	b928      	cbnz	r0, 800f79c <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800f790:	6823      	ldr	r3, [r4, #0]
 800f792:	4620      	mov	r0, r4
 800f794:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f796:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f79a:	4718      	bx	r3
 800f79c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f7a0:	f7f1 b962 	b.w	8000a68 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800f7a4 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800f7a4:	b510      	push	{r4, lr}
 800f7a6:	4c04      	ldr	r4, [pc, #16]	; (800f7b8 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800f7a8:	6082      	str	r2, [r0, #8]
 800f7aa:	2200      	movs	r2, #0
 800f7ac:	e9c0 4100 	strd	r4, r1, [r0]
 800f7b0:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800f7b4:	bd10      	pop	{r4, pc}
 800f7b6:	bf00      	nop
 800f7b8:	0802ade8 	.word	0x0802ade8

0800f7bc <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800f7bc:	6840      	ldr	r0, [r0, #4]
 800f7be:	6803      	ldr	r3, [r0, #0]
 800f7c0:	681b      	ldr	r3, [r3, #0]
 800f7c2:	4718      	bx	r3

0800f7c4 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 800f7c4:	4b06      	ldr	r3, [pc, #24]	; (800f7e0 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 800f7c6:	60c1      	str	r1, [r0, #12]
 800f7c8:	094a      	lsrs	r2, r1, #5
 800f7ca:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 800f7ce:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 800f7d2:	4313      	orrs	r3, r2
 800f7d4:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 800f7d8:	4319      	orrs	r1, r3
 800f7da:	8201      	strh	r1, [r0, #16]
 800f7dc:	4770      	bx	lr
 800f7de:	bf00      	nop
 800f7e0:	fffff800 	.word	0xfffff800

0800f7e4 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 800f7e4:	f1a0 0008 	sub.w	r0, r0, #8
 800f7e8:	e7ec      	b.n	800f7c4 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 800f7ea:	bf00      	nop

0800f7ec <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 800f7ec:	b508      	push	{r3, lr}
 800f7ee:	4b05      	ldr	r3, [pc, #20]	; (800f804 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 800f7f0:	6818      	ldr	r0, [r3, #0]
 800f7f2:	6803      	ldr	r3, [r0, #0]
 800f7f4:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 800f7f8:	4798      	blx	r3
 800f7fa:	1e43      	subs	r3, r0, #1
 800f7fc:	4258      	negs	r0, r3
 800f7fe:	4158      	adcs	r0, r3
 800f800:	bd08      	pop	{r3, pc}
 800f802:	bf00      	nop
 800f804:	200137bc 	.word	0x200137bc

0800f808 <_ZN8touchgfx13PainterRGB565D1Ev>:
 800f808:	4770      	bx	lr

0800f80a <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 800f80a:	3808      	subs	r0, #8
 800f80c:	4770      	bx	lr

0800f80e <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 800f80e:	b430      	push	{r4, r5}
 800f810:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 800f814:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 800f818:	8a02      	ldrh	r2, [r0, #16]
 800f81a:	9202      	str	r2, [sp, #8]
 800f81c:	f89d 3010 	ldrb.w	r3, [sp, #16]
 800f820:	68c2      	ldr	r2, [r0, #12]
 800f822:	4629      	mov	r1, r5
 800f824:	4620      	mov	r0, r4
 800f826:	bc30      	pop	{r4, r5}
 800f828:	f7f1 bae2 	b.w	8000df0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

0800f82c <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 800f82c:	f7f1 bad6 	b.w	8000ddc <_ZN8touchgfx5paint8tearDownEv>

0800f830 <_ZN8touchgfx13PainterRGB565D0Ev>:
 800f830:	b510      	push	{r4, lr}
 800f832:	2114      	movs	r1, #20
 800f834:	4604      	mov	r4, r0
 800f836:	f016 fe2a 	bl	802648e <_ZdlPvj>
 800f83a:	4620      	mov	r0, r4
 800f83c:	bd10      	pop	{r4, pc}

0800f83e <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 800f83e:	f1a0 0008 	sub.w	r0, r0, #8
 800f842:	e7f5      	b.n	800f830 <_ZN8touchgfx13PainterRGB565D0Ev>

0800f844 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 800f844:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800f846:	6803      	ldr	r3, [r0, #0]
 800f848:	460d      	mov	r5, r1
 800f84a:	4604      	mov	r4, r0
 800f84c:	4601      	mov	r1, r0
 800f84e:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800f850:	a802      	add	r0, sp, #8
 800f852:	4798      	blx	r3
 800f854:	6828      	ldr	r0, [r5, #0]
 800f856:	6869      	ldr	r1, [r5, #4]
 800f858:	466b      	mov	r3, sp
 800f85a:	c303      	stmia	r3!, {r0, r1}
 800f85c:	4668      	mov	r0, sp
 800f85e:	4619      	mov	r1, r3
 800f860:	f7fe ffa4 	bl	800e7ac <_ZN8touchgfx4RectaNERKS0_>
 800f864:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800f866:	b188      	cbz	r0, 800f88c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800f868:	6803      	ldr	r3, [r0, #0]
 800f86a:	1d21      	adds	r1, r4, #4
 800f86c:	68db      	ldr	r3, [r3, #12]
 800f86e:	4798      	blx	r3
 800f870:	b160      	cbz	r0, 800f88c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800f872:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800f876:	2b00      	cmp	r3, #0
 800f878:	dd08      	ble.n	800f88c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800f87a:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 800f87e:	2d00      	cmp	r5, #0
 800f880:	dd04      	ble.n	800f88c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800f882:	4a2b      	ldr	r2, [pc, #172]	; (800f930 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 800f884:	7812      	ldrb	r2, [r2, #0]
 800f886:	b11a      	cbz	r2, 800f890 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 800f888:	2a01      	cmp	r2, #1
 800f88a:	d029      	beq.n	800f8e0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 800f88c:	b004      	add	sp, #16
 800f88e:	bd70      	pop	{r4, r5, r6, pc}
 800f890:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800f894:	441d      	add	r5, r3
 800f896:	b2ad      	uxth	r5, r5
 800f898:	b22e      	sxth	r6, r5
 800f89a:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 800f89e:	42b3      	cmp	r3, r6
 800f8a0:	daf4      	bge.n	800f88c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800f8a2:	6823      	ldr	r3, [r4, #0]
 800f8a4:	4669      	mov	r1, sp
 800f8a6:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800f8a8:	4620      	mov	r0, r4
 800f8aa:	4798      	blx	r3
 800f8ac:	b940      	cbnz	r0, 800f8c0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 800f8ae:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800f8b2:	2b01      	cmp	r3, #1
 800f8b4:	d004      	beq.n	800f8c0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 800f8b6:	3301      	adds	r3, #1
 800f8b8:	105b      	asrs	r3, r3, #1
 800f8ba:	f8ad 3006 	strh.w	r3, [sp, #6]
 800f8be:	e7f0      	b.n	800f8a2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 800f8c0:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800f8c4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800f8c8:	4413      	add	r3, r2
 800f8ca:	b29b      	uxth	r3, r3
 800f8cc:	441a      	add	r2, r3
 800f8ce:	b212      	sxth	r2, r2
 800f8d0:	4296      	cmp	r6, r2
 800f8d2:	f8ad 3002 	strh.w	r3, [sp, #2]
 800f8d6:	dae0      	bge.n	800f89a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 800f8d8:	1aeb      	subs	r3, r5, r3
 800f8da:	f8ad 3006 	strh.w	r3, [sp, #6]
 800f8de:	e7dc      	b.n	800f89a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 800f8e0:	f8bd 5000 	ldrh.w	r5, [sp]
 800f8e4:	441d      	add	r5, r3
 800f8e6:	b2ad      	uxth	r5, r5
 800f8e8:	b22e      	sxth	r6, r5
 800f8ea:	f9bd 3000 	ldrsh.w	r3, [sp]
 800f8ee:	42b3      	cmp	r3, r6
 800f8f0:	dacc      	bge.n	800f88c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800f8f2:	6823      	ldr	r3, [r4, #0]
 800f8f4:	4669      	mov	r1, sp
 800f8f6:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800f8f8:	4620      	mov	r0, r4
 800f8fa:	4798      	blx	r3
 800f8fc:	b940      	cbnz	r0, 800f910 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 800f8fe:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800f902:	2b01      	cmp	r3, #1
 800f904:	d004      	beq.n	800f910 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 800f906:	3301      	adds	r3, #1
 800f908:	105b      	asrs	r3, r3, #1
 800f90a:	f8ad 3004 	strh.w	r3, [sp, #4]
 800f90e:	e7f0      	b.n	800f8f2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 800f910:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 800f914:	f8bd 3000 	ldrh.w	r3, [sp]
 800f918:	4413      	add	r3, r2
 800f91a:	b29b      	uxth	r3, r3
 800f91c:	441a      	add	r2, r3
 800f91e:	b212      	sxth	r2, r2
 800f920:	4296      	cmp	r6, r2
 800f922:	f8ad 3000 	strh.w	r3, [sp]
 800f926:	dae0      	bge.n	800f8ea <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 800f928:	1aeb      	subs	r3, r5, r3
 800f92a:	f8ad 3004 	strh.w	r3, [sp, #4]
 800f92e:	e7dc      	b.n	800f8ea <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 800f930:	200137b4 	.word	0x200137b4

0800f934 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 800f934:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800f936:	6803      	ldr	r3, [r0, #0]
 800f938:	4604      	mov	r4, r0
 800f93a:	4601      	mov	r1, r0
 800f93c:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800f93e:	4668      	mov	r0, sp
 800f940:	4798      	blx	r3
 800f942:	2100      	movs	r1, #0
 800f944:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800f948:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800f94c:	9102      	str	r1, [sp, #8]
 800f94e:	4668      	mov	r0, sp
 800f950:	a902      	add	r1, sp, #8
 800f952:	f8ad 200c 	strh.w	r2, [sp, #12]
 800f956:	f8ad 300e 	strh.w	r3, [sp, #14]
 800f95a:	f7fe ff27 	bl	800e7ac <_ZN8touchgfx4RectaNERKS0_>
 800f95e:	6823      	ldr	r3, [r4, #0]
 800f960:	4669      	mov	r1, sp
 800f962:	691b      	ldr	r3, [r3, #16]
 800f964:	4620      	mov	r0, r4
 800f966:	4798      	blx	r3
 800f968:	b004      	add	sp, #16
 800f96a:	bd10      	pop	{r4, pc}

0800f96c <_ZN8touchgfx12CanvasWidgetC1Ev>:
 800f96c:	2101      	movs	r1, #1
 800f96e:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800f972:	490b      	ldr	r1, [pc, #44]	; (800f9a0 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 800f974:	6001      	str	r1, [r0, #0]
 800f976:	2200      	movs	r2, #0
 800f978:	21ff      	movs	r1, #255	; 0xff
 800f97a:	8082      	strh	r2, [r0, #4]
 800f97c:	80c2      	strh	r2, [r0, #6]
 800f97e:	8102      	strh	r2, [r0, #8]
 800f980:	8142      	strh	r2, [r0, #10]
 800f982:	8182      	strh	r2, [r0, #12]
 800f984:	81c2      	strh	r2, [r0, #14]
 800f986:	8202      	strh	r2, [r0, #16]
 800f988:	8242      	strh	r2, [r0, #18]
 800f98a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800f98e:	61c2      	str	r2, [r0, #28]
 800f990:	8402      	strh	r2, [r0, #32]
 800f992:	8442      	strh	r2, [r0, #34]	; 0x22
 800f994:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800f998:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 800f99c:	6282      	str	r2, [r0, #40]	; 0x28
 800f99e:	4770      	bx	lr
 800f9a0:	0802ae44 	.word	0x0802ae44

0800f9a4 <_ZNK8touchgfx4Line14getMinimalRectEv>:
 800f9a4:	f101 0364 	add.w	r3, r1, #100	; 0x64
 800f9a8:	4602      	mov	r2, r0
 800f9aa:	cb03      	ldmia	r3!, {r0, r1}
 800f9ac:	6010      	str	r0, [r2, #0]
 800f9ae:	6051      	str	r1, [r2, #4]
 800f9b0:	4610      	mov	r0, r2
 800f9b2:	4770      	bx	lr

0800f9b4 <_ZN8touchgfx4LineD1Ev>:
 800f9b4:	4770      	bx	lr

0800f9b6 <_ZN8touchgfx4LineD0Ev>:
 800f9b6:	b510      	push	{r4, lr}
 800f9b8:	2170      	movs	r1, #112	; 0x70
 800f9ba:	4604      	mov	r4, r0
 800f9bc:	f016 fd67 	bl	802648e <_ZdlPvj>
 800f9c0:	4620      	mov	r0, r4
 800f9c2:	bd10      	pop	{r4, pc}

0800f9c4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 800f9c4:	b507      	push	{r0, r1, r2, lr}
 800f9c6:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 800f9ca:	ab01      	add	r3, sp, #4
 800f9cc:	6809      	ldr	r1, [r1, #0]
 800f9ce:	6800      	ldr	r0, [r0, #0]
 800f9d0:	f005 fab4 	bl	8014f3c <_ZN8touchgfx6muldivElllRl>
 800f9d4:	b003      	add	sp, #12
 800f9d6:	f85d fb04 	ldr.w	pc, [sp], #4

0800f9da <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 800f9da:	6800      	ldr	r0, [r0, #0]
 800f9dc:	2800      	cmp	r0, #0
 800f9de:	bfb9      	ittee	lt
 800f9e0:	2320      	movlt	r3, #32
 800f9e2:	fb90 f0f3 	sdivlt	r0, r0, r3
 800f9e6:	301f      	addge	r0, #31
 800f9e8:	1140      	asrge	r0, r0, #5
 800f9ea:	4770      	bx	lr

0800f9ec <_ZNK8touchgfx4Line17invalidateContentEv>:
 800f9ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f9f0:	f890 3026 	ldrb.w	r3, [r0, #38]	; 0x26
 800f9f4:	b089      	sub	sp, #36	; 0x24
 800f9f6:	4604      	mov	r4, r0
 800f9f8:	b353      	cbz	r3, 800fa50 <_ZNK8touchgfx4Line17invalidateContentEv+0x64>
 800f9fa:	6803      	ldr	r3, [r0, #0]
 800f9fc:	4601      	mov	r1, r0
 800f9fe:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800fa00:	a802      	add	r0, sp, #8
 800fa02:	4798      	blx	r3
 800fa04:	2220      	movs	r2, #32
 800fa06:	f8d4 a02c 	ldr.w	sl, [r4, #44]	; 0x2c
 800fa0a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800fa0c:	fb9a f0f2 	sdiv	r0, sl, r2
 800fa10:	fb91 f5f2 	sdiv	r5, r1, r2
 800fa14:	1b40      	subs	r0, r0, r5
 800fa16:	2800      	cmp	r0, #0
 800fa18:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800fa1a:	fb93 f6f2 	sdiv	r6, r3, r2
 800fa1e:	bfb8      	it	lt
 800fa20:	4240      	neglt	r0, r0
 800fa22:	0076      	lsls	r6, r6, #1
 800fa24:	4286      	cmp	r6, r0
 800fa26:	f8d4 b000 	ldr.w	fp, [r4]
 800fa2a:	dc0c      	bgt.n	800fa46 <_ZNK8touchgfx4Line17invalidateContentEv+0x5a>
 800fa2c:	6b25      	ldr	r5, [r4, #48]	; 0x30
 800fa2e:	f8d4 8038 	ldr.w	r8, [r4, #56]	; 0x38
 800fa32:	fb95 f0f2 	sdiv	r0, r5, r2
 800fa36:	fb98 f7f2 	sdiv	r7, r8, r2
 800fa3a:	1bc0      	subs	r0, r0, r7
 800fa3c:	2800      	cmp	r0, #0
 800fa3e:	bfb8      	it	lt
 800fa40:	4240      	neglt	r0, r0
 800fa42:	4286      	cmp	r6, r0
 800fa44:	dd07      	ble.n	800fa56 <_ZNK8touchgfx4Line17invalidateContentEv+0x6a>
 800fa46:	f8db 3010 	ldr.w	r3, [fp, #16]
 800fa4a:	a902      	add	r1, sp, #8
 800fa4c:	4620      	mov	r0, r4
 800fa4e:	4798      	blx	r3
 800fa50:	b009      	add	sp, #36	; 0x24
 800fa52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fa56:	3301      	adds	r3, #1
 800fa58:	2002      	movs	r0, #2
 800fa5a:	f10d 0920 	add.w	r9, sp, #32
 800fa5e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 800fa62:	4103      	asrs	r3, r0
 800fa64:	f849 3d08 	str.w	r3, [r9, #-8]!
 800fa68:	eb01 060a 	add.w	r6, r1, sl
 800fa6c:	eb08 0705 	add.w	r7, r8, r5
 800fa70:	fb96 f6f0 	sdiv	r6, r6, r0
 800fa74:	fb97 f7f0 	sdiv	r7, r7, r0
 800fa78:	4648      	mov	r0, r9
 800fa7a:	9101      	str	r1, [sp, #4]
 800fa7c:	b236      	sxth	r6, r6
 800fa7e:	b23f      	sxth	r7, r7
 800fa80:	fb96 f6f2 	sdiv	r6, r6, r2
 800fa84:	fb97 f7f2 	sdiv	r7, r7, r2
 800fa88:	f7ff ffa7 	bl	800f9da <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800fa8c:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800fa90:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 800fa94:	9901      	ldr	r1, [sp, #4]
 800fa96:	4293      	cmp	r3, r2
 800fa98:	fa1f fe87 	uxth.w	lr, r7
 800fa9c:	fa1f fc86 	uxth.w	ip, r6
 800faa0:	eba1 0a0a 	sub.w	sl, r1, sl
 800faa4:	b280      	uxth	r0, r0
 800faa6:	da54      	bge.n	800fb52 <_ZNK8touchgfx4Line17invalidateContentEv+0x166>
 800faa8:	ebac 0100 	sub.w	r1, ip, r0
 800faac:	b289      	uxth	r1, r1
 800faae:	4460      	add	r0, ip
 800fab0:	f1ba 0f00 	cmp.w	sl, #0
 800fab4:	b20e      	sxth	r6, r1
 800fab6:	b280      	uxth	r0, r0
 800fab8:	f9bd a008 	ldrsh.w	sl, [sp, #8]
 800fabc:	f9bd c00a 	ldrsh.w	ip, [sp, #10]
 800fac0:	da29      	bge.n	800fb16 <_ZNK8touchgfx4Line17invalidateContentEv+0x12a>
 800fac2:	eba8 0505 	sub.w	r5, r8, r5
 800fac6:	2d00      	cmp	r5, #0
 800fac8:	da2a      	bge.n	800fb20 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 800faca:	fa1f f88a 	uxth.w	r8, sl
 800face:	eba0 0008 	sub.w	r0, r0, r8
 800fad2:	fa1f f58c 	uxth.w	r5, ip
 800fad6:	4443      	add	r3, r8
 800fad8:	f8ad 0014 	strh.w	r0, [sp, #20]
 800fadc:	1a59      	subs	r1, r3, r1
 800fade:	ebae 0005 	sub.w	r0, lr, r5
 800fae2:	f8ad a010 	strh.w	sl, [sp, #16]
 800fae6:	f8ad c012 	strh.w	ip, [sp, #18]
 800faea:	f8ad 0016 	strh.w	r0, [sp, #22]
 800faee:	f8ad 6018 	strh.w	r6, [sp, #24]
 800faf2:	f8ad 701a 	strh.w	r7, [sp, #26]
 800faf6:	f8ad 101c 	strh.w	r1, [sp, #28]
 800fafa:	442a      	add	r2, r5
 800fafc:	eba2 0e0e 	sub.w	lr, r2, lr
 800fb00:	f8ad e01e 	strh.w	lr, [sp, #30]
 800fb04:	f8db 3010 	ldr.w	r3, [fp, #16]
 800fb08:	a904      	add	r1, sp, #16
 800fb0a:	4620      	mov	r0, r4
 800fb0c:	4798      	blx	r3
 800fb0e:	6823      	ldr	r3, [r4, #0]
 800fb10:	4649      	mov	r1, r9
 800fb12:	691b      	ldr	r3, [r3, #16]
 800fb14:	e79a      	b.n	800fa4c <_ZNK8touchgfx4Line17invalidateContentEv+0x60>
 800fb16:	d003      	beq.n	800fb20 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 800fb18:	eba8 0505 	sub.w	r5, r8, r5
 800fb1c:	2d00      	cmp	r5, #0
 800fb1e:	dcd4      	bgt.n	800faca <_ZNK8touchgfx4Line17invalidateContentEv+0xde>
 800fb20:	fa1f f88a 	uxth.w	r8, sl
 800fb24:	4443      	add	r3, r8
 800fb26:	fa1f f58c 	uxth.w	r5, ip
 800fb2a:	1a59      	subs	r1, r3, r1
 800fb2c:	eba0 0008 	sub.w	r0, r0, r8
 800fb30:	ebae 0305 	sub.w	r3, lr, r5
 800fb34:	f8ad 6010 	strh.w	r6, [sp, #16]
 800fb38:	f8ad c012 	strh.w	ip, [sp, #18]
 800fb3c:	f8ad 1014 	strh.w	r1, [sp, #20]
 800fb40:	f8ad 3016 	strh.w	r3, [sp, #22]
 800fb44:	f8ad a018 	strh.w	sl, [sp, #24]
 800fb48:	f8ad 701a 	strh.w	r7, [sp, #26]
 800fb4c:	f8ad 001c 	strh.w	r0, [sp, #28]
 800fb50:	e7d3      	b.n	800fafa <_ZNK8touchgfx4Line17invalidateContentEv+0x10e>
 800fb52:	ebae 0100 	sub.w	r1, lr, r0
 800fb56:	b289      	uxth	r1, r1
 800fb58:	4470      	add	r0, lr
 800fb5a:	f1ba 0f00 	cmp.w	sl, #0
 800fb5e:	b20f      	sxth	r7, r1
 800fb60:	b280      	uxth	r0, r0
 800fb62:	f9bd e008 	ldrsh.w	lr, [sp, #8]
 800fb66:	f9bd a00a 	ldrsh.w	sl, [sp, #10]
 800fb6a:	da20      	bge.n	800fbae <_ZNK8touchgfx4Line17invalidateContentEv+0x1c2>
 800fb6c:	eba8 0505 	sub.w	r5, r8, r5
 800fb70:	2d00      	cmp	r5, #0
 800fb72:	da21      	bge.n	800fbb8 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 800fb74:	fa1f f88e 	uxth.w	r8, lr
 800fb78:	fa1f f58a 	uxth.w	r5, sl
 800fb7c:	4443      	add	r3, r8
 800fb7e:	442a      	add	r2, r5
 800fb80:	f8ad e010 	strh.w	lr, [sp, #16]
 800fb84:	1b40      	subs	r0, r0, r5
 800fb86:	ebac 0e08 	sub.w	lr, ip, r8
 800fb8a:	1a51      	subs	r1, r2, r1
 800fb8c:	eba3 0c0c 	sub.w	ip, r3, ip
 800fb90:	f8ad a012 	strh.w	sl, [sp, #18]
 800fb94:	f8ad e014 	strh.w	lr, [sp, #20]
 800fb98:	f8ad 0016 	strh.w	r0, [sp, #22]
 800fb9c:	f8ad 6018 	strh.w	r6, [sp, #24]
 800fba0:	f8ad 701a 	strh.w	r7, [sp, #26]
 800fba4:	f8ad c01c 	strh.w	ip, [sp, #28]
 800fba8:	f8ad 101e 	strh.w	r1, [sp, #30]
 800fbac:	e7aa      	b.n	800fb04 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>
 800fbae:	d003      	beq.n	800fbb8 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 800fbb0:	eba8 0505 	sub.w	r5, r8, r5
 800fbb4:	2d00      	cmp	r5, #0
 800fbb6:	dcdd      	bgt.n	800fb74 <_ZNK8touchgfx4Line17invalidateContentEv+0x188>
 800fbb8:	fa1f f58e 	uxth.w	r5, lr
 800fbbc:	fa1f f88a 	uxth.w	r8, sl
 800fbc0:	4442      	add	r2, r8
 800fbc2:	442b      	add	r3, r5
 800fbc4:	f8ad 7012 	strh.w	r7, [sp, #18]
 800fbc8:	1a51      	subs	r1, r2, r1
 800fbca:	ebac 0705 	sub.w	r7, ip, r5
 800fbce:	eba0 0008 	sub.w	r0, r0, r8
 800fbd2:	eba3 0c0c 	sub.w	ip, r3, ip
 800fbd6:	f8ad e010 	strh.w	lr, [sp, #16]
 800fbda:	f8ad 7014 	strh.w	r7, [sp, #20]
 800fbde:	f8ad 1016 	strh.w	r1, [sp, #22]
 800fbe2:	f8ad 6018 	strh.w	r6, [sp, #24]
 800fbe6:	f8ad a01a 	strh.w	sl, [sp, #26]
 800fbea:	f8ad c01c 	strh.w	ip, [sp, #28]
 800fbee:	f8ad 001e 	strh.w	r0, [sp, #30]
 800fbf2:	e787      	b.n	800fb04 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>

0800fbf4 <_ZN8touchgfx7CWRUtil4sineEi>:
 800fbf4:	f44f 73b4 	mov.w	r3, #360	; 0x168
 800fbf8:	fb90 f2f3 	sdiv	r2, r0, r3
 800fbfc:	fb02 0013 	mls	r0, r2, r3, r0
 800fc00:	2800      	cmp	r0, #0
 800fc02:	bfb8      	it	lt
 800fc04:	18c0      	addlt	r0, r0, r3
 800fc06:	285a      	cmp	r0, #90	; 0x5a
 800fc08:	4b09      	ldr	r3, [pc, #36]	; (800fc30 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
 800fc0a:	dc02      	bgt.n	800fc12 <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
 800fc0c:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 800fc10:	4770      	bx	lr
 800fc12:	28b4      	cmp	r0, #180	; 0xb4
 800fc14:	dc02      	bgt.n	800fc1c <_ZN8touchgfx7CWRUtil4sineEi+0x28>
 800fc16:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
 800fc1a:	e7f7      	b.n	800fc0c <_ZN8touchgfx7CWRUtil4sineEi+0x18>
 800fc1c:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
 800fc20:	bfd4      	ite	le
 800fc22:	38b4      	suble	r0, #180	; 0xb4
 800fc24:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
 800fc28:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 800fc2c:	4240      	negs	r0, r0
 800fc2e:	4770      	bx	lr
 800fc30:	0802af10 	.word	0x0802af10

0800fc34 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
 800fc34:	f44f 5334 	mov.w	r3, #11520	; 0x2d00
 800fc38:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800fc3a:	fb90 f2f3 	sdiv	r2, r0, r3
 800fc3e:	fb02 0013 	mls	r0, r2, r3, r0
 800fc42:	2800      	cmp	r0, #0
 800fc44:	bfb8      	it	lt
 800fc46:	18c0      	addlt	r0, r0, r3
 800fc48:	1144      	asrs	r4, r0, #5
 800fc4a:	f000 061f 	and.w	r6, r0, #31
 800fc4e:	4620      	mov	r0, r4
 800fc50:	f7ff ffd0 	bl	800fbf4 <_ZN8touchgfx7CWRUtil4sineEi>
 800fc54:	4605      	mov	r5, r0
 800fc56:	b90e      	cbnz	r6, 800fc5c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
 800fc58:	b002      	add	sp, #8
 800fc5a:	bd70      	pop	{r4, r5, r6, pc}
 800fc5c:	1c60      	adds	r0, r4, #1
 800fc5e:	f7ff ffc9 	bl	800fbf4 <_ZN8touchgfx7CWRUtil4sineEi>
 800fc62:	ab01      	add	r3, sp, #4
 800fc64:	2220      	movs	r2, #32
 800fc66:	4631      	mov	r1, r6
 800fc68:	1b40      	subs	r0, r0, r5
 800fc6a:	f005 f967 	bl	8014f3c <_ZN8touchgfx6muldivElllRl>
 800fc6e:	4428      	add	r0, r5
 800fc70:	e7f2      	b.n	800fc58 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

0800fc72 <_ZN8touchgfx7CWRUtil5isqrtEm>:
 800fc72:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
 800fc76:	bf2c      	ite	cs
 800fc78:	f04f 4280 	movcs.w	r2, #1073741824	; 0x40000000
 800fc7c:	f44f 4280 	movcc.w	r2, #16384	; 0x4000
 800fc80:	2300      	movs	r3, #0
 800fc82:	1899      	adds	r1, r3, r2
 800fc84:	4288      	cmp	r0, r1
 800fc86:	bf24      	itt	cs
 800fc88:	1853      	addcs	r3, r2, r1
 800fc8a:	1a40      	subcs	r0, r0, r1
 800fc8c:	0892      	lsrs	r2, r2, #2
 800fc8e:	ea4f 0353 	mov.w	r3, r3, lsr #1
 800fc92:	d1f6      	bne.n	800fc82 <_ZN8touchgfx7CWRUtil5isqrtEm+0x10>
 800fc94:	4618      	mov	r0, r3
 800fc96:	4770      	bx	lr

0800fc98 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 800fc98:	b510      	push	{r4, lr}
 800fc9a:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 800fc9e:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 800fca2:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 800fca6:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 800fcaa:	13a4      	asrs	r4, r4, #14
 800fcac:	139b      	asrs	r3, r3, #14
 800fcae:	429c      	cmp	r4, r3
 800fcb0:	bfb8      	it	lt
 800fcb2:	461c      	movlt	r4, r3
 800fcb4:	2c01      	cmp	r4, #1
 800fcb6:	dd07      	ble.n	800fcc8 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 800fcb8:	fb91 f1f4 	sdiv	r1, r1, r4
 800fcbc:	fb90 f0f4 	sdiv	r0, r0, r4
 800fcc0:	f7ff ffea 	bl	800fc98 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 800fcc4:	4360      	muls	r0, r4
 800fcc6:	bd10      	pop	{r4, pc}
 800fcc8:	4340      	muls	r0, r0
 800fcca:	fb01 0001 	mla	r0, r1, r1, r0
 800fcce:	f7ff ffd0 	bl	800fc72 <_ZN8touchgfx7CWRUtil5isqrtEm>
 800fcd2:	e7f8      	b.n	800fcc6 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

0800fcd4 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>:
 800fcd4:	2800      	cmp	r0, #0
 800fcd6:	b508      	push	{r3, lr}
 800fcd8:	da05      	bge.n	800fce6 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x12>
 800fcda:	4240      	negs	r0, r0
 800fcdc:	f7ff fffa 	bl	800fcd4 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 800fce0:	4240      	negs	r0, r0
 800fce2:	b240      	sxtb	r0, r0
 800fce4:	bd08      	pop	{r3, pc}
 800fce6:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 800fcea:	dc11      	bgt.n	800fd10 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x3c>
 800fcec:	f5b0 7f35 	cmp.w	r0, #724	; 0x2d4
 800fcf0:	dd09      	ble.n	800fd06 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x32>
 800fcf2:	4340      	muls	r0, r0
 800fcf4:	f5c0 1080 	rsb	r0, r0, #1048576	; 0x100000
 800fcf8:	f7ff ffbb 	bl	800fc72 <_ZN8touchgfx7CWRUtil5isqrtEm>
 800fcfc:	f7ff ffea 	bl	800fcd4 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 800fd00:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 800fd04:	e7ed      	b.n	800fce2 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0xe>
 800fd06:	3003      	adds	r0, #3
 800fd08:	10c0      	asrs	r0, r0, #3
 800fd0a:	4b02      	ldr	r3, [pc, #8]	; (800fd14 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x40>)
 800fd0c:	5618      	ldrsb	r0, [r3, r0]
 800fd0e:	e7e9      	b.n	800fce4 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 800fd10:	2000      	movs	r0, #0
 800fd12:	e7e7      	b.n	800fce4 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 800fd14:	0802aeb4 	.word	0x0802aeb4

0800fd18 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>:
 800fd18:	4281      	cmp	r1, r0
 800fd1a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800fd1c:	460c      	mov	r4, r1
 800fd1e:	4615      	mov	r5, r2
 800fd20:	dd07      	ble.n	800fd32 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x1a>
 800fd22:	4601      	mov	r1, r0
 800fd24:	4620      	mov	r0, r4
 800fd26:	f7ff fff7 	bl	800fd18 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 800fd2a:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 800fd2e:	b003      	add	sp, #12
 800fd30:	bd30      	pop	{r4, r5, pc}
 800fd32:	f7ff ffb1 	bl	800fc98 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 800fd36:	6028      	str	r0, [r5, #0]
 800fd38:	2800      	cmp	r0, #0
 800fd3a:	d0f8      	beq.n	800fd2e <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>
 800fd3c:	4602      	mov	r2, r0
 800fd3e:	ab01      	add	r3, sp, #4
 800fd40:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800fd44:	4620      	mov	r0, r4
 800fd46:	f005 f8f9 	bl	8014f3c <_ZN8touchgfx6muldivElllRl>
 800fd4a:	f7ff ffc3 	bl	800fcd4 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 800fd4e:	e7ee      	b.n	800fd2e <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>

0800fd50 <_ZN8touchgfx4LineC1Ev>:
 800fd50:	b510      	push	{r4, lr}
 800fd52:	4604      	mov	r4, r0
 800fd54:	f7ff fe0a 	bl	800f96c <_ZN8touchgfx12CanvasWidgetC1Ev>
 800fd58:	4b0c      	ldr	r3, [pc, #48]	; (800fd8c <_ZN8touchgfx4LineC1Ev+0x3c>)
 800fd5a:	6023      	str	r3, [r4, #0]
 800fd5c:	2220      	movs	r2, #32
 800fd5e:	2300      	movs	r3, #0
 800fd60:	63e2      	str	r2, [r4, #60]	; 0x3c
 800fd62:	2212      	movs	r2, #18
 800fd64:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 800fd68:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 800fd6c:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800fd70:	e9c4 3311 	strd	r3, r3, [r4, #68]	; 0x44
 800fd74:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
 800fd78:	e9c4 3315 	strd	r3, r3, [r4, #84]	; 0x54
 800fd7c:	e9c4 3317 	strd	r3, r3, [r4, #92]	; 0x5c
 800fd80:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
 800fd84:	66e2      	str	r2, [r4, #108]	; 0x6c
 800fd86:	60a3      	str	r3, [r4, #8]
 800fd88:	4620      	mov	r0, r4
 800fd8a:	bd10      	pop	{r4, pc}
 800fd8c:	0802afd0 	.word	0x0802afd0

0800fd90 <_ZN8touchgfx4Line17updateCachedShapeEv>:
 800fd90:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800fd94:	6b47      	ldr	r7, [r0, #52]	; 0x34
 800fd96:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800fd98:	6b85      	ldr	r5, [r0, #56]	; 0x38
 800fd9a:	6b02      	ldr	r2, [r0, #48]	; 0x30
 800fd9c:	1aff      	subs	r7, r7, r3
 800fd9e:	4604      	mov	r4, r0
 800fda0:	eba5 0502 	sub.w	r5, r5, r2
 800fda4:	d142      	bne.n	800fe2c <_ZN8touchgfx4Line17updateCachedShapeEv+0x9c>
 800fda6:	b955      	cbnz	r5, 800fdbe <_ZN8touchgfx4Line17updateCachedShapeEv+0x2e>
 800fda8:	e9c0 3313 	strd	r3, r3, [r0, #76]	; 0x4c
 800fdac:	e9c0 3311 	strd	r3, r3, [r0, #68]	; 0x44
 800fdb0:	e9c0 2217 	strd	r2, r2, [r0, #92]	; 0x5c
 800fdb4:	e9c0 2215 	strd	r2, r2, [r0, #84]	; 0x54
 800fdb8:	b002      	add	sp, #8
 800fdba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800fdbe:	ea85 78e5 	eor.w	r8, r5, r5, asr #31
 800fdc2:	eba8 78e5 	sub.w	r8, r8, r5, asr #31
 800fdc6:	4629      	mov	r1, r5
 800fdc8:	4642      	mov	r2, r8
 800fdca:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800fdcc:	f005 f8d5 	bl	8014f7a <_ZN8touchgfx6muldivElll>
 800fdd0:	2502      	movs	r5, #2
 800fdd2:	4642      	mov	r2, r8
 800fdd4:	fb90 f6f5 	sdiv	r6, r0, r5
 800fdd8:	4639      	mov	r1, r7
 800fdda:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800fddc:	f005 f8cd 	bl	8014f7a <_ZN8touchgfx6muldivElll>
 800fde0:	f894 9040 	ldrb.w	r9, [r4, #64]	; 0x40
 800fde4:	fb90 f5f5 	sdiv	r5, r0, r5
 800fde8:	f1b9 0f00 	cmp.w	r9, #0
 800fdec:	d067      	beq.n	800febe <_ZN8touchgfx4Line17updateCachedShapeEv+0x12e>
 800fdee:	f1b9 0f02 	cmp.w	r9, #2
 800fdf2:	d878      	bhi.n	800fee6 <_ZN8touchgfx4Line17updateCachedShapeEv+0x156>
 800fdf4:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800fdf6:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800fdf8:	1b93      	subs	r3, r2, r6
 800fdfa:	1b5b      	subs	r3, r3, r5
 800fdfc:	6463      	str	r3, [r4, #68]	; 0x44
 800fdfe:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800fe00:	18e9      	adds	r1, r5, r3
 800fe02:	1b89      	subs	r1, r1, r6
 800fe04:	6561      	str	r1, [r4, #84]	; 0x54
 800fe06:	1b81      	subs	r1, r0, r6
 800fe08:	4429      	add	r1, r5
 800fe0a:	64a1      	str	r1, [r4, #72]	; 0x48
 800fe0c:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800fe0e:	4430      	add	r0, r6
 800fe10:	186f      	adds	r7, r5, r1
 800fe12:	4432      	add	r2, r6
 800fe14:	1b49      	subs	r1, r1, r5
 800fe16:	4437      	add	r7, r6
 800fe18:	4428      	add	r0, r5
 800fe1a:	4431      	add	r1, r6
 800fe1c:	1b52      	subs	r2, r2, r5
 800fe1e:	1b5b      	subs	r3, r3, r5
 800fe20:	65a7      	str	r7, [r4, #88]	; 0x58
 800fe22:	64e0      	str	r0, [r4, #76]	; 0x4c
 800fe24:	65e1      	str	r1, [r4, #92]	; 0x5c
 800fe26:	6522      	str	r2, [r4, #80]	; 0x50
 800fe28:	1b9b      	subs	r3, r3, r6
 800fe2a:	e05b      	b.n	800fee4 <_ZN8touchgfx4Line17updateCachedShapeEv+0x154>
 800fe2c:	ea87 78e7 	eor.w	r8, r7, r7, asr #31
 800fe30:	eba8 78e7 	sub.w	r8, r8, r7, asr #31
 800fe34:	2d00      	cmp	r5, #0
 800fe36:	d0c6      	beq.n	800fdc6 <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 800fe38:	ea85 73e5 	eor.w	r3, r5, r5, asr #31
 800fe3c:	eba3 73e5 	sub.w	r3, r3, r5, asr #31
 800fe40:	fb93 f2f8 	sdiv	r2, r3, r8
 800fe44:	fb08 3312 	mls	r3, r8, r2, r3
 800fe48:	b353      	cbz	r3, 800fea0 <_ZN8touchgfx4Line17updateCachedShapeEv+0x110>
 800fe4a:	fb98 f2f3 	sdiv	r2, r8, r3
 800fe4e:	fb03 8812 	mls	r8, r3, r2, r8
 800fe52:	f1b8 0f00 	cmp.w	r8, #0
 800fe56:	d1f3      	bne.n	800fe40 <_ZN8touchgfx4Line17updateCachedShapeEv+0xb0>
 800fe58:	2b01      	cmp	r3, #1
 800fe5a:	bf1c      	itt	ne
 800fe5c:	fb95 f5f3 	sdivne	r5, r5, r3
 800fe60:	fb97 f7f3 	sdivne	r7, r7, r3
 800fe64:	ea87 73e7 	eor.w	r3, r7, r7, asr #31
 800fe68:	f24b 5104 	movw	r1, #46340	; 0xb504
 800fe6c:	eba3 73e7 	sub.w	r3, r3, r7, asr #31
 800fe70:	ea85 72e5 	eor.w	r2, r5, r5, asr #31
 800fe74:	428b      	cmp	r3, r1
 800fe76:	eba2 72e5 	sub.w	r2, r2, r5, asr #31
 800fe7a:	4608      	mov	r0, r1
 800fe7c:	dd01      	ble.n	800fe82 <_ZN8touchgfx4Line17updateCachedShapeEv+0xf2>
 800fe7e:	428a      	cmp	r2, r1
 800fe80:	dc10      	bgt.n	800fea4 <_ZN8touchgfx4Line17updateCachedShapeEv+0x114>
 800fe82:	fb90 f3f3 	sdiv	r3, r0, r3
 800fe86:	fb90 f2f2 	sdiv	r2, r0, r2
 800fe8a:	4293      	cmp	r3, r2
 800fe8c:	bfa8      	it	ge
 800fe8e:	4613      	movge	r3, r2
 800fe90:	435f      	muls	r7, r3
 800fe92:	435d      	muls	r5, r3
 800fe94:	4629      	mov	r1, r5
 800fe96:	4638      	mov	r0, r7
 800fe98:	f7ff fefe 	bl	800fc98 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 800fe9c:	4680      	mov	r8, r0
 800fe9e:	e792      	b.n	800fdc6 <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 800fea0:	4643      	mov	r3, r8
 800fea2:	e7d9      	b.n	800fe58 <_ZN8touchgfx4Line17updateCachedShapeEv+0xc8>
 800fea4:	fb93 f3f1 	sdiv	r3, r3, r1
 800fea8:	fb92 f2f1 	sdiv	r2, r2, r1
 800feac:	4293      	cmp	r3, r2
 800feae:	bfcc      	ite	gt
 800feb0:	3301      	addgt	r3, #1
 800feb2:	1c53      	addle	r3, r2, #1
 800feb4:	fb97 f7f3 	sdiv	r7, r7, r3
 800feb8:	fb95 f5f3 	sdiv	r5, r5, r3
 800febc:	e7ea      	b.n	800fe94 <_ZN8touchgfx4Line17updateCachedShapeEv+0x104>
 800febe:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800fec0:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800fec2:	1b93      	subs	r3, r2, r6
 800fec4:	6463      	str	r3, [r4, #68]	; 0x44
 800fec6:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800fec8:	18e9      	adds	r1, r5, r3
 800feca:	6561      	str	r1, [r4, #84]	; 0x54
 800fecc:	1b81      	subs	r1, r0, r6
 800fece:	64a1      	str	r1, [r4, #72]	; 0x48
 800fed0:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800fed2:	4430      	add	r0, r6
 800fed4:	186f      	adds	r7, r5, r1
 800fed6:	4432      	add	r2, r6
 800fed8:	1b49      	subs	r1, r1, r5
 800feda:	65a7      	str	r7, [r4, #88]	; 0x58
 800fedc:	64e0      	str	r0, [r4, #76]	; 0x4c
 800fede:	65e1      	str	r1, [r4, #92]	; 0x5c
 800fee0:	6522      	str	r2, [r4, #80]	; 0x50
 800fee2:	1b5b      	subs	r3, r3, r5
 800fee4:	6623      	str	r3, [r4, #96]	; 0x60
 800fee6:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800fee8:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800feea:	9200      	str	r2, [sp, #0]
 800feec:	9301      	str	r3, [sp, #4]
 800feee:	f104 0148 	add.w	r1, r4, #72	; 0x48
 800fef2:	f104 0c54 	add.w	ip, r4, #84	; 0x54
 800fef6:	680f      	ldr	r7, [r1, #0]
 800fef8:	9800      	ldr	r0, [sp, #0]
 800fefa:	42ba      	cmp	r2, r7
 800fefc:	bfa8      	it	ge
 800fefe:	463a      	movge	r2, r7
 800ff00:	4287      	cmp	r7, r0
 800ff02:	bfc8      	it	gt
 800ff04:	9700      	strgt	r7, [sp, #0]
 800ff06:	690f      	ldr	r7, [r1, #16]
 800ff08:	9801      	ldr	r0, [sp, #4]
 800ff0a:	42bb      	cmp	r3, r7
 800ff0c:	bfa8      	it	ge
 800ff0e:	463b      	movge	r3, r7
 800ff10:	3104      	adds	r1, #4
 800ff12:	4287      	cmp	r7, r0
 800ff14:	bfc8      	it	gt
 800ff16:	9701      	strgt	r7, [sp, #4]
 800ff18:	458c      	cmp	ip, r1
 800ff1a:	d1ec      	bne.n	800fef6 <_ZN8touchgfx4Line17updateCachedShapeEv+0x166>
 800ff1c:	4668      	mov	r0, sp
 800ff1e:	2720      	movs	r7, #32
 800ff20:	fb92 f8f7 	sdiv	r8, r2, r7
 800ff24:	fb93 f7f7 	sdiv	r7, r3, r7
 800ff28:	f7ff fd57 	bl	800f9da <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800ff2c:	4682      	mov	sl, r0
 800ff2e:	a801      	add	r0, sp, #4
 800ff30:	f7ff fd53 	bl	800f9da <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800ff34:	ebaa 0208 	sub.w	r2, sl, r8
 800ff38:	1bc0      	subs	r0, r0, r7
 800ff3a:	f1b9 0f01 	cmp.w	r9, #1
 800ff3e:	f8a4 8064 	strh.w	r8, [r4, #100]	; 0x64
 800ff42:	f8a4 7066 	strh.w	r7, [r4, #102]	; 0x66
 800ff46:	f8a4 2068 	strh.w	r2, [r4, #104]	; 0x68
 800ff4a:	f8a4 006a 	strh.w	r0, [r4, #106]	; 0x6a
 800ff4e:	f47f af33 	bne.w	800fdb8 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>
 800ff52:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800ff54:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800ff56:	1b83      	subs	r3, r0, r6
 800ff58:	6463      	str	r3, [r4, #68]	; 0x44
 800ff5a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800ff5c:	18ea      	adds	r2, r5, r3
 800ff5e:	6562      	str	r2, [r4, #84]	; 0x54
 800ff60:	1b8a      	subs	r2, r1, r6
 800ff62:	64a2      	str	r2, [r4, #72]	; 0x48
 800ff64:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800ff66:	4431      	add	r1, r6
 800ff68:	18af      	adds	r7, r5, r2
 800ff6a:	4406      	add	r6, r0
 800ff6c:	1b52      	subs	r2, r2, r5
 800ff6e:	1b5d      	subs	r5, r3, r5
 800ff70:	65a7      	str	r7, [r4, #88]	; 0x58
 800ff72:	64e1      	str	r1, [r4, #76]	; 0x4c
 800ff74:	65e2      	str	r2, [r4, #92]	; 0x5c
 800ff76:	6526      	str	r6, [r4, #80]	; 0x50
 800ff78:	6625      	str	r5, [r4, #96]	; 0x60
 800ff7a:	e71d      	b.n	800fdb8 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>

0800ff7c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>:
 800ff7c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800ff7e:	428b      	cmp	r3, r1
 800ff80:	d102      	bne.n	800ff88 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0xc>
 800ff82:	6b03      	ldr	r3, [r0, #48]	; 0x30
 800ff84:	4293      	cmp	r3, r2
 800ff86:	d003      	beq.n	800ff90 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0x14>
 800ff88:	e9c0 120b 	strd	r1, r2, [r0, #44]	; 0x2c
 800ff8c:	f7ff bf00 	b.w	800fd90 <_ZN8touchgfx4Line17updateCachedShapeEv>
 800ff90:	4770      	bx	lr

0800ff92 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>:
 800ff92:	6b43      	ldr	r3, [r0, #52]	; 0x34
 800ff94:	428b      	cmp	r3, r1
 800ff96:	d102      	bne.n	800ff9e <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0xc>
 800ff98:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800ff9a:	4293      	cmp	r3, r2
 800ff9c:	d003      	beq.n	800ffa6 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0x14>
 800ff9e:	e9c0 120d 	strd	r1, r2, [r0, #52]	; 0x34
 800ffa2:	f7ff bef5 	b.w	800fd90 <_ZN8touchgfx4Line17updateCachedShapeEv>
 800ffa6:	4770      	bx	lr

0800ffa8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>:
 800ffa8:	f880 1040 	strb.w	r1, [r0, #64]	; 0x40
 800ffac:	f7ff bef0 	b.w	800fd90 <_ZN8touchgfx4Line17updateCachedShapeEv>

0800ffb0 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE>:
 800ffb0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ffb4:	b0a0      	sub	sp, #128	; 0x80
 800ffb6:	4604      	mov	r4, r0
 800ffb8:	460a      	mov	r2, r1
 800ffba:	4601      	mov	r1, r0
 800ffbc:	a804      	add	r0, sp, #16
 800ffbe:	f014 fc47 	bl	8024850 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 800ffc2:	2300      	movs	r3, #0
 800ffc4:	9301      	str	r3, [sp, #4]
 800ffc6:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800ffca:	2b01      	cmp	r3, #1
 800ffcc:	d17c      	bne.n	80100c8 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x118>
 800ffce:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800ffd0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800ffd2:	6d61      	ldr	r1, [r4, #84]	; 0x54
 800ffd4:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800ffd6:	1ac0      	subs	r0, r0, r3
 800ffd8:	eba1 0102 	sub.w	r1, r1, r2
 800ffdc:	d437      	bmi.n	801004e <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x9e>
 800ffde:	2900      	cmp	r1, #0
 800ffe0:	aa01      	add	r2, sp, #4
 800ffe2:	db2e      	blt.n	8010042 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x92>
 800ffe4:	f7ff fe98 	bl	800fd18 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 800ffe8:	f100 065a 	add.w	r6, r0, #90	; 0x5a
 800ffec:	6d62      	ldr	r2, [r4, #84]	; 0x54
 800ffee:	6c61      	ldr	r1, [r4, #68]	; 0x44
 800fff0:	a804      	add	r0, sp, #16
 800fff2:	f014 fdad 	bl	8024b50 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 800fff6:	6da2      	ldr	r2, [r4, #88]	; 0x58
 800fff8:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 800fffa:	a804      	add	r0, sp, #16
 800fffc:	f014 fdf5 	bl	8024bea <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8010000:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 8010002:	2db3      	cmp	r5, #179	; 0xb3
 8010004:	dc33      	bgt.n	801006e <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xbe>
 8010006:	eba6 0805 	sub.w	r8, r6, r5
 801000a:	4640      	mov	r0, r8
 801000c:	f7ff fdf2 	bl	800fbf4 <_ZN8touchgfx7CWRUtil4sineEi>
 8010010:	a902      	add	r1, sp, #8
 8010012:	9002      	str	r0, [sp, #8]
 8010014:	a801      	add	r0, sp, #4
 8010016:	f7ff fcd5 	bl	800f9c4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 801001a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801001c:	1847      	adds	r7, r0, r1
 801001e:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 8010022:	f7ff fde7 	bl	800fbf4 <_ZN8touchgfx7CWRUtil4sineEi>
 8010026:	a903      	add	r1, sp, #12
 8010028:	9003      	str	r0, [sp, #12]
 801002a:	a801      	add	r0, sp, #4
 801002c:	f7ff fcca 	bl	800f9c4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8010030:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8010032:	4639      	mov	r1, r7
 8010034:	1a12      	subs	r2, r2, r0
 8010036:	a804      	add	r0, sp, #16
 8010038:	f014 fdd7 	bl	8024bea <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 801003c:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 801003e:	441d      	add	r5, r3
 8010040:	e7df      	b.n	8010002 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x52>
 8010042:	4249      	negs	r1, r1
 8010044:	f7ff fe68 	bl	800fd18 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8010048:	f1c0 065a 	rsb	r6, r0, #90	; 0x5a
 801004c:	e7ce      	b.n	800ffec <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 801004e:	2900      	cmp	r1, #0
 8010050:	f1c0 0000 	rsb	r0, r0, #0
 8010054:	aa01      	add	r2, sp, #4
 8010056:	db04      	blt.n	8010062 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xb2>
 8010058:	f7ff fe5e 	bl	800fd18 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 801005c:	f5c0 7687 	rsb	r6, r0, #270	; 0x10e
 8010060:	e7c4      	b.n	800ffec <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8010062:	4249      	negs	r1, r1
 8010064:	f7ff fe58 	bl	800fd18 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8010068:	f500 7687 	add.w	r6, r0, #270	; 0x10e
 801006c:	e7be      	b.n	800ffec <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 801006e:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8010070:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8010072:	a804      	add	r0, sp, #16
 8010074:	f014 fdb9 	bl	8024bea <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8010078:	6e22      	ldr	r2, [r4, #96]	; 0x60
 801007a:	6d21      	ldr	r1, [r4, #80]	; 0x50
 801007c:	a804      	add	r0, sp, #16
 801007e:	f014 fdb4 	bl	8024bea <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8010082:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 8010084:	f1c5 05b4 	rsb	r5, r5, #180	; 0xb4
 8010088:	2d00      	cmp	r5, #0
 801008a:	dd31      	ble.n	80100f0 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x140>
 801008c:	eb05 0806 	add.w	r8, r5, r6
 8010090:	4640      	mov	r0, r8
 8010092:	f7ff fdaf 	bl	800fbf4 <_ZN8touchgfx7CWRUtil4sineEi>
 8010096:	a902      	add	r1, sp, #8
 8010098:	9002      	str	r0, [sp, #8]
 801009a:	a801      	add	r0, sp, #4
 801009c:	f7ff fc92 	bl	800f9c4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80100a0:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 80100a2:	1847      	adds	r7, r0, r1
 80100a4:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 80100a8:	f7ff fda4 	bl	800fbf4 <_ZN8touchgfx7CWRUtil4sineEi>
 80100ac:	a903      	add	r1, sp, #12
 80100ae:	9003      	str	r0, [sp, #12]
 80100b0:	a801      	add	r0, sp, #4
 80100b2:	f7ff fc87 	bl	800f9c4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80100b6:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80100b8:	4639      	mov	r1, r7
 80100ba:	1a12      	subs	r2, r2, r0
 80100bc:	a804      	add	r0, sp, #16
 80100be:	f014 fd94 	bl	8024bea <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80100c2:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 80100c4:	1aed      	subs	r5, r5, r3
 80100c6:	e7df      	b.n	8010088 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xd8>
 80100c8:	6d62      	ldr	r2, [r4, #84]	; 0x54
 80100ca:	6c61      	ldr	r1, [r4, #68]	; 0x44
 80100cc:	a804      	add	r0, sp, #16
 80100ce:	f014 fd3f 	bl	8024b50 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 80100d2:	6da2      	ldr	r2, [r4, #88]	; 0x58
 80100d4:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 80100d6:	a804      	add	r0, sp, #16
 80100d8:	f014 fd87 	bl	8024bea <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80100dc:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 80100de:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 80100e0:	a804      	add	r0, sp, #16
 80100e2:	f014 fd82 	bl	8024bea <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80100e6:	6e22      	ldr	r2, [r4, #96]	; 0x60
 80100e8:	6d21      	ldr	r1, [r4, #80]	; 0x50
 80100ea:	a804      	add	r0, sp, #16
 80100ec:	f014 fd7d 	bl	8024bea <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80100f0:	21ff      	movs	r1, #255	; 0xff
 80100f2:	a804      	add	r0, sp, #16
 80100f4:	f014 fc68 	bl	80249c8 <_ZN8touchgfx6Canvas6renderEh>
 80100f8:	4b04      	ldr	r3, [pc, #16]	; (801010c <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x15c>)
 80100fa:	9304      	str	r3, [sp, #16]
 80100fc:	4604      	mov	r4, r0
 80100fe:	a80c      	add	r0, sp, #48	; 0x30
 8010100:	f001 f8cc 	bl	801129c <_ZN8touchgfx7OutlineD1Ev>
 8010104:	4620      	mov	r0, r4
 8010106:	b020      	add	sp, #128	; 0x80
 8010108:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801010c:	0802b7f8 	.word	0x0802b7f8

08010110 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 8010110:	2000      	movs	r0, #0
 8010112:	4770      	bx	lr

08010114 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 8010114:	4b07      	ldr	r3, [pc, #28]	; (8010134 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 8010116:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8010118:	881b      	ldrh	r3, [r3, #0]
 801011a:	4293      	cmp	r3, r2
 801011c:	bf81      	itttt	hi
 801011e:	4b06      	ldrhi	r3, [pc, #24]	; (8010138 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 8010120:	681b      	ldrhi	r3, [r3, #0]
 8010122:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 8010126:	7858      	ldrbhi	r0, [r3, #1]
 8010128:	bf8c      	ite	hi
 801012a:	f000 0003 	andhi.w	r0, r0, #3
 801012e:	2000      	movls	r0, #0
 8010130:	4770      	bx	lr
 8010132:	bf00      	nop
 8010134:	20013818 	.word	0x20013818
 8010138:	20013814 	.word	0x20013814

0801013c <_ZN8touchgfx8TextAreaD1Ev>:
 801013c:	4770      	bx	lr
	...

08010140 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 8010140:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010144:	4b10      	ldr	r3, [pc, #64]	; (8010188 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 8010146:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8010148:	881b      	ldrh	r3, [r3, #0]
 801014a:	428b      	cmp	r3, r1
 801014c:	4604      	mov	r4, r0
 801014e:	d918      	bls.n	8010182 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 8010150:	6803      	ldr	r3, [r0, #0]
 8010152:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 8010154:	4b0d      	ldr	r3, [pc, #52]	; (801018c <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 8010156:	6818      	ldr	r0, [r3, #0]
 8010158:	f7f6 fd74 	bl	8006c44 <_ZNK8touchgfx5Texts7getTextEt>
 801015c:	6823      	ldr	r3, [r4, #0]
 801015e:	4606      	mov	r6, r0
 8010160:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8010162:	4620      	mov	r0, r4
 8010164:	4798      	blx	r3
 8010166:	6823      	ldr	r3, [r4, #0]
 8010168:	4607      	mov	r7, r0
 801016a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 801016e:	4620      	mov	r0, r4
 8010170:	4798      	blx	r3
 8010172:	463a      	mov	r2, r7
 8010174:	4603      	mov	r3, r0
 8010176:	4631      	mov	r1, r6
 8010178:	4620      	mov	r0, r4
 801017a:	46ac      	mov	ip, r5
 801017c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8010180:	4760      	bx	ip
 8010182:	2000      	movs	r0, #0
 8010184:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010188:	20013818 	.word	0x20013818
 801018c:	20013820 	.word	0x20013820

08010190 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 8010190:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8010194:	4b17      	ldr	r3, [pc, #92]	; (80101f4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 8010196:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8010198:	881b      	ldrh	r3, [r3, #0]
 801019a:	428b      	cmp	r3, r1
 801019c:	4604      	mov	r4, r0
 801019e:	d926      	bls.n	80101ee <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 80101a0:	4b15      	ldr	r3, [pc, #84]	; (80101f8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 80101a2:	681b      	ldr	r3, [r3, #0]
 80101a4:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 80101a8:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 80101ac:	4b13      	ldr	r3, [pc, #76]	; (80101fc <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 80101ae:	7855      	ldrb	r5, [r2, #1]
 80101b0:	681b      	ldr	r3, [r3, #0]
 80101b2:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 80101b6:	6833      	ldr	r3, [r6, #0]
 80101b8:	69df      	ldr	r7, [r3, #28]
 80101ba:	4b11      	ldr	r3, [pc, #68]	; (8010200 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 80101bc:	6818      	ldr	r0, [r3, #0]
 80101be:	f7f6 fd41 	bl	8006c44 <_ZNK8touchgfx5Texts7getTextEt>
 80101c2:	6823      	ldr	r3, [r4, #0]
 80101c4:	4680      	mov	r8, r0
 80101c6:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80101c8:	4620      	mov	r0, r4
 80101ca:	4798      	blx	r3
 80101cc:	6823      	ldr	r3, [r4, #0]
 80101ce:	4681      	mov	r9, r0
 80101d0:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80101d4:	4620      	mov	r0, r4
 80101d6:	4798      	blx	r3
 80101d8:	f3c5 0581 	ubfx	r5, r5, #2, #2
 80101dc:	9000      	str	r0, [sp, #0]
 80101de:	464b      	mov	r3, r9
 80101e0:	4642      	mov	r2, r8
 80101e2:	4629      	mov	r1, r5
 80101e4:	4630      	mov	r0, r6
 80101e6:	47b8      	blx	r7
 80101e8:	b003      	add	sp, #12
 80101ea:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80101ee:	2000      	movs	r0, #0
 80101f0:	e7fa      	b.n	80101e8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 80101f2:	bf00      	nop
 80101f4:	20013818 	.word	0x20013818
 80101f8:	20013814 	.word	0x20013814
 80101fc:	2001381c 	.word	0x2001381c
 8010200:	20013820 	.word	0x20013820

08010204 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 8010204:	b40e      	push	{r1, r2, r3}
 8010206:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801020a:	4b2f      	ldr	r3, [pc, #188]	; (80102c8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 801020c:	881a      	ldrh	r2, [r3, #0]
 801020e:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 8010210:	429a      	cmp	r2, r3
 8010212:	b09d      	sub	sp, #116	; 0x74
 8010214:	4604      	mov	r4, r0
 8010216:	d954      	bls.n	80102c2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 8010218:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 80102cc <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 801021c:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 80102d0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 8010220:	aa26      	add	r2, sp, #152	; 0x98
 8010222:	9202      	str	r2, [sp, #8]
 8010224:	f8d9 2000 	ldr.w	r2, [r9]
 8010228:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 801022c:	f8d8 3000 	ldr.w	r3, [r8]
 8010230:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8010234:	682b      	ldr	r3, [r5, #0]
 8010236:	4628      	mov	r0, r5
 8010238:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801023a:	4798      	blx	r3
 801023c:	b207      	sxth	r7, r0
 801023e:	4606      	mov	r6, r0
 8010240:	a803      	add	r0, sp, #12
 8010242:	f005 fa57 	bl	80156f4 <_ZN8touchgfx12TextProviderC1Ev>
 8010246:	682b      	ldr	r3, [r5, #0]
 8010248:	4628      	mov	r0, r5
 801024a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801024c:	4798      	blx	r3
 801024e:	682b      	ldr	r3, [r5, #0]
 8010250:	4682      	mov	sl, r0
 8010252:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8010254:	4628      	mov	r0, r5
 8010256:	4798      	blx	r3
 8010258:	4653      	mov	r3, sl
 801025a:	9000      	str	r0, [sp, #0]
 801025c:	9a02      	ldr	r2, [sp, #8]
 801025e:	9925      	ldr	r1, [sp, #148]	; 0x94
 8010260:	a803      	add	r0, sp, #12
 8010262:	f005 faa2 	bl	80157aa <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8010266:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8010268:	f8d9 3000 	ldr.w	r3, [r9]
 801026c:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 8010270:	8925      	ldrh	r5, [r4, #8]
 8010272:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 8010276:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 801027a:	eba5 050c 	sub.w	r5, r5, ip
 801027e:	784a      	ldrb	r2, [r1, #1]
 8010280:	f8d8 3000 	ldr.w	r3, [r8]
 8010284:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 8010288:	b22d      	sxth	r5, r5
 801028a:	9500      	str	r5, [sp, #0]
 801028c:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8010290:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8010294:	a803      	add	r0, sp, #12
 8010296:	f002 feed 	bl	8013074 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 801029a:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 801029e:	18b9      	adds	r1, r7, r2
 80102a0:	2900      	cmp	r1, #0
 80102a2:	b203      	sxth	r3, r0
 80102a4:	dd0b      	ble.n	80102be <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 80102a6:	3b01      	subs	r3, #1
 80102a8:	fb13 f302 	smulbb	r3, r3, r2
 80102ac:	fb16 3300 	smlabb	r3, r6, r0, r3
 80102b0:	b21f      	sxth	r7, r3
 80102b2:	4638      	mov	r0, r7
 80102b4:	b01d      	add	sp, #116	; 0x74
 80102b6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80102ba:	b003      	add	sp, #12
 80102bc:	4770      	bx	lr
 80102be:	2b00      	cmp	r3, #0
 80102c0:	dcf7      	bgt.n	80102b2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 80102c2:	2700      	movs	r7, #0
 80102c4:	e7f5      	b.n	80102b2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 80102c6:	bf00      	nop
 80102c8:	20013818 	.word	0x20013818
 80102cc:	20013814 	.word	0x20013814
 80102d0:	2001381c 	.word	0x2001381c

080102d4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 80102d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80102d8:	4bbc      	ldr	r3, [pc, #752]	; (80105cc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 80102da:	460c      	mov	r4, r1
 80102dc:	881b      	ldrh	r3, [r3, #0]
 80102de:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 80102e0:	428b      	cmp	r3, r1
 80102e2:	b0a9      	sub	sp, #164	; 0xa4
 80102e4:	4680      	mov	r8, r0
 80102e6:	d809      	bhi.n	80102fc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 80102e8:	2300      	movs	r3, #0
 80102ea:	f04f 32ff 	mov.w	r2, #4294967295
 80102ee:	e9c0 3200 	strd	r3, r2, [r0]
 80102f2:	6083      	str	r3, [r0, #8]
 80102f4:	4640      	mov	r0, r8
 80102f6:	b029      	add	sp, #164	; 0xa4
 80102f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80102fc:	4eb4      	ldr	r6, [pc, #720]	; (80105d0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 80102fe:	6833      	ldr	r3, [r6, #0]
 8010300:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8010304:	4bb3      	ldr	r3, [pc, #716]	; (80105d4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 8010306:	681b      	ldr	r3, [r3, #0]
 8010308:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801030c:	4bb2      	ldr	r3, [pc, #712]	; (80105d8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 801030e:	6818      	ldr	r0, [r3, #0]
 8010310:	f7f6 fc98 	bl	8006c44 <_ZNK8touchgfx5Texts7getTextEt>
 8010314:	682b      	ldr	r3, [r5, #0]
 8010316:	4681      	mov	r9, r0
 8010318:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801031a:	4628      	mov	r0, r5
 801031c:	4798      	blx	r3
 801031e:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 8010320:	b203      	sxth	r3, r0
 8010322:	4407      	add	r7, r0
 8010324:	9304      	str	r3, [sp, #16]
 8010326:	b2bb      	uxth	r3, r7
 8010328:	9303      	str	r3, [sp, #12]
 801032a:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 801032e:	4682      	mov	sl, r0
 8010330:	a80f      	add	r0, sp, #60	; 0x3c
 8010332:	2b00      	cmp	r3, #0
 8010334:	f040 80a6 	bne.w	8010484 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 8010338:	f005 f9dc 	bl	80156f4 <_ZN8touchgfx12TextProviderC1Ev>
 801033c:	682b      	ldr	r3, [r5, #0]
 801033e:	4628      	mov	r0, r5
 8010340:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8010342:	4798      	blx	r3
 8010344:	682b      	ldr	r3, [r5, #0]
 8010346:	4606      	mov	r6, r0
 8010348:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801034a:	4628      	mov	r0, r5
 801034c:	4798      	blx	r3
 801034e:	6823      	ldr	r3, [r4, #0]
 8010350:	4607      	mov	r7, r0
 8010352:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8010354:	4620      	mov	r0, r4
 8010356:	4798      	blx	r3
 8010358:	6823      	ldr	r3, [r4, #0]
 801035a:	4683      	mov	fp, r0
 801035c:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8010360:	4620      	mov	r0, r4
 8010362:	4798      	blx	r3
 8010364:	463b      	mov	r3, r7
 8010366:	e9cd b000 	strd	fp, r0, [sp]
 801036a:	4649      	mov	r1, r9
 801036c:	4632      	mov	r2, r6
 801036e:	a80f      	add	r0, sp, #60	; 0x3c
 8010370:	f005 fa30 	bl	80157d4 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8010374:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8010378:	f8df b254 	ldr.w	fp, [pc, #596]	; 80105d0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 801037c:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8010380:	f04f 0600 	mov.w	r6, #0
 8010384:	bf0c      	ite	eq
 8010386:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 801038a:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 801038e:	4637      	mov	r7, r6
 8010390:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8010392:	f8db 3000 	ldr.w	r3, [fp]
 8010396:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 801039a:	4629      	mov	r1, r5
 801039c:	785b      	ldrb	r3, [r3, #1]
 801039e:	f647 72ff 	movw	r2, #32767	; 0x7fff
 80103a2:	f3c3 0381 	ubfx	r3, r3, #2, #2
 80103a6:	a80f      	add	r0, sp, #60	; 0x3c
 80103a8:	f002 fb7f 	bl	8012aaa <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 80103ac:	9b03      	ldr	r3, [sp, #12]
 80103ae:	4286      	cmp	r6, r0
 80103b0:	bfb8      	it	lt
 80103b2:	4606      	movlt	r6, r0
 80103b4:	3701      	adds	r7, #1
 80103b6:	eba9 0903 	sub.w	r9, r9, r3
 80103ba:	a80f      	add	r0, sp, #60	; 0x3c
 80103bc:	b236      	sxth	r6, r6
 80103be:	b2bf      	uxth	r7, r7
 80103c0:	fa0f f989 	sxth.w	r9, r9
 80103c4:	f005 f9bd 	bl	8015742 <_ZN8touchgfx12TextProvider11endOfStringEv>
 80103c8:	b918      	cbnz	r0, 80103d2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 80103ca:	7a2b      	ldrb	r3, [r5, #8]
 80103cc:	444b      	add	r3, r9
 80103ce:	2b00      	cmp	r3, #0
 80103d0:	dcde      	bgt.n	8010390 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 80103d2:	9b03      	ldr	r3, [sp, #12]
 80103d4:	9a04      	ldr	r2, [sp, #16]
 80103d6:	f895 9009 	ldrb.w	r9, [r5, #9]
 80103da:	fb13 f707 	smulbb	r7, r3, r7
 80103de:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 80103e0:	1aff      	subs	r7, r7, r3
 80103e2:	b2bf      	uxth	r7, r7
 80103e4:	b23b      	sxth	r3, r7
 80103e6:	429a      	cmp	r2, r3
 80103e8:	bfa8      	it	ge
 80103ea:	4657      	movge	r7, sl
 80103ec:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80103f0:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 80103f4:	6823      	ldr	r3, [r4, #0]
 80103f6:	bf08      	it	eq
 80103f8:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 80103fc:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80103fe:	bf18      	it	ne
 8010400:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 8010404:	4620      	mov	r0, r4
 8010406:	4798      	blx	r3
 8010408:	444f      	add	r7, r9
 801040a:	fa1f f987 	uxth.w	r9, r7
 801040e:	2801      	cmp	r0, #1
 8010410:	fa0f f789 	sxth.w	r7, r9
 8010414:	b2b3      	uxth	r3, r6
 8010416:	f000 80e1 	beq.w	80105dc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 801041a:	2802      	cmp	r0, #2
 801041c:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
 8010420:	f000 80e2 	beq.w	80105e8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 8010424:	7aea      	ldrb	r2, [r5, #11]
 8010426:	7b2d      	ldrb	r5, [r5, #12]
 8010428:	b236      	sxth	r6, r6
 801042a:	1ab6      	subs	r6, r6, r2
 801042c:	442a      	add	r2, r5
 801042e:	4413      	add	r3, r2
 8010430:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 8010434:	fa1f fa86 	uxth.w	sl, r6
 8010438:	b29b      	uxth	r3, r3
 801043a:	2a02      	cmp	r2, #2
 801043c:	fa0f fb8a 	sxth.w	fp, sl
 8010440:	b21e      	sxth	r6, r3
 8010442:	f000 80d5 	beq.w	80105f0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 8010446:	2a03      	cmp	r2, #3
 8010448:	f000 80dd 	beq.w	8010606 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 801044c:	2a01      	cmp	r2, #1
 801044e:	f040 80e5 	bne.w	801061c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 8010452:	8925      	ldrh	r5, [r4, #8]
 8010454:	4633      	mov	r3, r6
 8010456:	eba5 0909 	sub.w	r9, r5, r9
 801045a:	463e      	mov	r6, r7
 801045c:	465d      	mov	r5, fp
 801045e:	461f      	mov	r7, r3
 8010460:	fa0f fb89 	sxth.w	fp, r9
 8010464:	4b5c      	ldr	r3, [pc, #368]	; (80105d8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8010466:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8010468:	6818      	ldr	r0, [r3, #0]
 801046a:	f7f6 fbeb 	bl	8006c44 <_ZNK8touchgfx5Texts7getTextEt>
 801046e:	f8a8 b000 	strh.w	fp, [r8]
 8010472:	f8a8 5002 	strh.w	r5, [r8, #2]
 8010476:	f8a8 6004 	strh.w	r6, [r8, #4]
 801047a:	f8a8 7006 	strh.w	r7, [r8, #6]
 801047e:	f8c8 0008 	str.w	r0, [r8, #8]
 8010482:	e737      	b.n	80102f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 8010484:	f005 f936 	bl	80156f4 <_ZN8touchgfx12TextProviderC1Ev>
 8010488:	682b      	ldr	r3, [r5, #0]
 801048a:	4628      	mov	r0, r5
 801048c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801048e:	4798      	blx	r3
 8010490:	682b      	ldr	r3, [r5, #0]
 8010492:	4607      	mov	r7, r0
 8010494:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8010496:	4628      	mov	r0, r5
 8010498:	4798      	blx	r3
 801049a:	6823      	ldr	r3, [r4, #0]
 801049c:	4683      	mov	fp, r0
 801049e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80104a0:	4620      	mov	r0, r4
 80104a2:	4798      	blx	r3
 80104a4:	6822      	ldr	r2, [r4, #0]
 80104a6:	9005      	str	r0, [sp, #20]
 80104a8:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 80104ac:	4620      	mov	r0, r4
 80104ae:	4790      	blx	r2
 80104b0:	9b05      	ldr	r3, [sp, #20]
 80104b2:	9001      	str	r0, [sp, #4]
 80104b4:	463a      	mov	r2, r7
 80104b6:	4649      	mov	r1, r9
 80104b8:	9300      	str	r3, [sp, #0]
 80104ba:	a80f      	add	r0, sp, #60	; 0x3c
 80104bc:	465b      	mov	r3, fp
 80104be:	f005 f989 	bl	80157d4 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 80104c2:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80104c6:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 80104ca:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 80104cc:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 80104d0:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 80104d4:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 80104d8:	bf0a      	itet	eq
 80104da:	464a      	moveq	r2, r9
 80104dc:	461a      	movne	r2, r3
 80104de:	4699      	moveq	r9, r3
 80104e0:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 80104e4:	1ad2      	subs	r2, r2, r3
 80104e6:	6833      	ldr	r3, [r6, #0]
 80104e8:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
 80104ec:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 80104f0:	af0f      	add	r7, sp, #60	; 0x3c
 80104f2:	7859      	ldrb	r1, [r3, #1]
 80104f4:	9707      	str	r7, [sp, #28]
 80104f6:	2300      	movs	r3, #0
 80104f8:	f3c1 0181 	ubfx	r1, r1, #2, #2
 80104fc:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010500:	f88d 1020 	strb.w	r1, [sp, #32]
 8010504:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8010508:	9509      	str	r5, [sp, #36]	; 0x24
 801050a:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801050e:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 8010512:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 8010516:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 801051a:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 801051e:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8010522:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8010526:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801052a:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 801052e:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 8010532:	b350      	cbz	r0, 801058a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8010534:	682b      	ldr	r3, [r5, #0]
 8010536:	4628      	mov	r0, r5
 8010538:	695b      	ldr	r3, [r3, #20]
 801053a:	4798      	blx	r3
 801053c:	4607      	mov	r7, r0
 801053e:	b320      	cbz	r0, 801058a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8010540:	9809      	ldr	r0, [sp, #36]	; 0x24
 8010542:	6803      	ldr	r3, [r0, #0]
 8010544:	4639      	mov	r1, r7
 8010546:	68db      	ldr	r3, [r3, #12]
 8010548:	4798      	blx	r3
 801054a:	4606      	mov	r6, r0
 801054c:	b1e8      	cbz	r0, 801058a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 801054e:	7b43      	ldrb	r3, [r0, #13]
 8010550:	7a82      	ldrb	r2, [r0, #10]
 8010552:	005b      	lsls	r3, r3, #1
 8010554:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8010558:	4313      	orrs	r3, r2
 801055a:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 801055e:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 8010562:	2b06      	cmp	r3, #6
 8010564:	d111      	bne.n	801058a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8010566:	9809      	ldr	r0, [sp, #36]	; 0x24
 8010568:	6803      	ldr	r3, [r0, #0]
 801056a:	4632      	mov	r2, r6
 801056c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801056e:	4639      	mov	r1, r7
 8010570:	4798      	blx	r3
 8010572:	7b73      	ldrb	r3, [r6, #13]
 8010574:	005b      	lsls	r3, r3, #1
 8010576:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801057a:	7ab3      	ldrb	r3, [r6, #10]
 801057c:	4313      	orrs	r3, r2
 801057e:	4418      	add	r0, r3
 8010580:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8010584:	4418      	add	r0, r3
 8010586:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 801058a:	2600      	movs	r6, #0
 801058c:	4637      	mov	r7, r6
 801058e:	a806      	add	r0, sp, #24
 8010590:	f002 fc6c 	bl	8012e6c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8010594:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
 8010598:	9b03      	ldr	r3, [sp, #12]
 801059a:	4286      	cmp	r6, r0
 801059c:	eba9 0903 	sub.w	r9, r9, r3
 80105a0:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 80105a4:	bfb8      	it	lt
 80105a6:	4606      	movlt	r6, r0
 80105a8:	3701      	adds	r7, #1
 80105aa:	b236      	sxth	r6, r6
 80105ac:	b2bf      	uxth	r7, r7
 80105ae:	fa0f f989 	sxth.w	r9, r9
 80105b2:	2b00      	cmp	r3, #0
 80105b4:	f43f af0d 	beq.w	80103d2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 80105b8:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
 80105bc:	2b00      	cmp	r3, #0
 80105be:	f47f af08 	bne.w	80103d2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 80105c2:	7a2b      	ldrb	r3, [r5, #8]
 80105c4:	444b      	add	r3, r9
 80105c6:	2b00      	cmp	r3, #0
 80105c8:	dce1      	bgt.n	801058e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 80105ca:	e702      	b.n	80103d2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 80105cc:	20013818 	.word	0x20013818
 80105d0:	20013814 	.word	0x20013814
 80105d4:	2001381c 	.word	0x2001381c
 80105d8:	20013820 	.word	0x20013820
 80105dc:	ebaa 0606 	sub.w	r6, sl, r6
 80105e0:	2002      	movs	r0, #2
 80105e2:	fb96 f6f0 	sdiv	r6, r6, r0
 80105e6:	e71d      	b.n	8010424 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 80105e8:	441e      	add	r6, r3
 80105ea:	ebaa 0606 	sub.w	r6, sl, r6
 80105ee:	e719      	b.n	8010424 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 80105f0:	8925      	ldrh	r5, [r4, #8]
 80105f2:	1aed      	subs	r5, r5, r3
 80105f4:	eba5 050a 	sub.w	r5, r5, sl
 80105f8:	fa0f fb85 	sxth.w	fp, r5
 80105fc:	8965      	ldrh	r5, [r4, #10]
 80105fe:	eba5 0509 	sub.w	r5, r5, r9
 8010602:	b22d      	sxth	r5, r5
 8010604:	e72e      	b.n	8010464 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 8010606:	8965      	ldrh	r5, [r4, #10]
 8010608:	1aed      	subs	r5, r5, r3
 801060a:	eba5 050a 	sub.w	r5, r5, sl
 801060e:	4633      	mov	r3, r6
 8010610:	b22d      	sxth	r5, r5
 8010612:	463e      	mov	r6, r7
 8010614:	f04f 0b00 	mov.w	fp, #0
 8010618:	461f      	mov	r7, r3
 801061a:	e723      	b.n	8010464 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 801061c:	2500      	movs	r5, #0
 801061e:	e721      	b.n	8010464 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

08010620 <_ZN8touchgfx8TextAreaD0Ev>:
 8010620:	b510      	push	{r4, lr}
 8010622:	2148      	movs	r1, #72	; 0x48
 8010624:	4604      	mov	r4, r0
 8010626:	f015 ff32 	bl	802648e <_ZdlPvj>
 801062a:	4620      	mov	r0, r4
 801062c:	bd10      	pop	{r4, pc}
	...

08010630 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 8010630:	b513      	push	{r0, r1, r4, lr}
 8010632:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 8010636:	4604      	mov	r4, r0
 8010638:	b1fb      	cbz	r3, 801067a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 801063a:	4b16      	ldr	r3, [pc, #88]	; (8010694 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 801063c:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 801063e:	881b      	ldrh	r3, [r3, #0]
 8010640:	428b      	cmp	r3, r1
 8010642:	d91a      	bls.n	801067a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8010644:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8010648:	2b00      	cmp	r3, #0
 801064a:	dd16      	ble.n	801067a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 801064c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8010650:	2b00      	cmp	r3, #0
 8010652:	dd12      	ble.n	801067a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8010654:	4b10      	ldr	r3, [pc, #64]	; (8010698 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 8010656:	6818      	ldr	r0, [r3, #0]
 8010658:	f7f6 faf4 	bl	8006c44 <_ZNK8touchgfx5Texts7getTextEt>
 801065c:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8010660:	6822      	ldr	r2, [r4, #0]
 8010662:	2b00      	cmp	r3, #0
 8010664:	db06      	blt.n	8010674 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8010666:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 801066a:	2b00      	cmp	r3, #0
 801066c:	db02      	blt.n	8010674 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 801066e:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8010670:	4298      	cmp	r0, r3
 8010672:	d004      	beq.n	801067e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 8010674:	6953      	ldr	r3, [r2, #20]
 8010676:	4620      	mov	r0, r4
 8010678:	4798      	blx	r3
 801067a:	b002      	add	sp, #8
 801067c:	bd10      	pop	{r4, pc}
 801067e:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 8010682:	c903      	ldmia	r1, {r0, r1}
 8010684:	466b      	mov	r3, sp
 8010686:	e883 0003 	stmia.w	r3, {r0, r1}
 801068a:	6912      	ldr	r2, [r2, #16]
 801068c:	4619      	mov	r1, r3
 801068e:	4620      	mov	r0, r4
 8010690:	4790      	blx	r2
 8010692:	e7f2      	b.n	801067a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8010694:	20013818 	.word	0x20013818
 8010698:	20013820 	.word	0x20013820

0801069c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 801069c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80106a0:	4b44      	ldr	r3, [pc, #272]	; (80107b4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 80106a2:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 80106a4:	881b      	ldrh	r3, [r3, #0]
 80106a6:	4293      	cmp	r3, r2
 80106a8:	b08e      	sub	sp, #56	; 0x38
 80106aa:	4604      	mov	r4, r0
 80106ac:	d97e      	bls.n	80107ac <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80106ae:	6808      	ldr	r0, [r1, #0]
 80106b0:	4d41      	ldr	r5, [pc, #260]	; (80107b8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 80106b2:	6849      	ldr	r1, [r1, #4]
 80106b4:	ab05      	add	r3, sp, #20
 80106b6:	c303      	stmia	r3!, {r0, r1}
 80106b8:	4611      	mov	r1, r2
 80106ba:	6828      	ldr	r0, [r5, #0]
 80106bc:	f7f6 fac2 	bl	8006c44 <_ZNK8touchgfx5Texts7getTextEt>
 80106c0:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 80106c4:	2b00      	cmp	r3, #0
 80106c6:	db11      	blt.n	80106ec <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 80106c8:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 80106cc:	2b00      	cmp	r3, #0
 80106ce:	db0d      	blt.n	80106ec <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 80106d0:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80106d2:	4298      	cmp	r0, r3
 80106d4:	d10a      	bne.n	80106ec <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 80106d6:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 80106da:	e892 0003 	ldmia.w	r2, {r0, r1}
 80106de:	ab09      	add	r3, sp, #36	; 0x24
 80106e0:	e883 0003 	stmia.w	r3, {r0, r1}
 80106e4:	4619      	mov	r1, r3
 80106e6:	a805      	add	r0, sp, #20
 80106e8:	f7fe f860 	bl	800e7ac <_ZN8touchgfx4RectaNERKS0_>
 80106ec:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80106f0:	2b00      	cmp	r3, #0
 80106f2:	dd5b      	ble.n	80107ac <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80106f4:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 80106f8:	2b00      	cmp	r3, #0
 80106fa:	dd57      	ble.n	80107ac <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80106fc:	4f2f      	ldr	r7, [pc, #188]	; (80107bc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 80106fe:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8010700:	683b      	ldr	r3, [r7, #0]
 8010702:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8010706:	4b2e      	ldr	r3, [pc, #184]	; (80107c0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 8010708:	681b      	ldr	r3, [r3, #0]
 801070a:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801070e:	2e00      	cmp	r6, #0
 8010710:	d04c      	beq.n	80107ac <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8010712:	6823      	ldr	r3, [r4, #0]
 8010714:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 8010718:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 801071a:	4620      	mov	r0, r4
 801071c:	4798      	blx	r3
 801071e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8010720:	683b      	ldr	r3, [r7, #0]
 8010722:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 8010726:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 801072a:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 801072e:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8010730:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8010734:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 8010738:	785b      	ldrb	r3, [r3, #1]
 801073a:	9609      	str	r6, [sp, #36]	; 0x24
 801073c:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8010740:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8010744:	4b1f      	ldr	r3, [pc, #124]	; (80107c4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 8010746:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 801074a:	681b      	ldr	r3, [r3, #0]
 801074c:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 8010750:	910b      	str	r1, [sp, #44]	; 0x2c
 8010752:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 8010756:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 801075a:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 801075e:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 8010762:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8010766:	b10a      	cbz	r2, 801076c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 8010768:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 801076a:	b906      	cbnz	r6, 801076e <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 801076c:	689e      	ldr	r6, [r3, #8]
 801076e:	af07      	add	r7, sp, #28
 8010770:	4621      	mov	r1, r4
 8010772:	4638      	mov	r0, r7
 8010774:	f004 fab0 	bl	8014cd8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010778:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 801077a:	6828      	ldr	r0, [r5, #0]
 801077c:	f7f6 fa62 	bl	8006c44 <_ZNK8touchgfx5Texts7getTextEt>
 8010780:	6823      	ldr	r3, [r4, #0]
 8010782:	4605      	mov	r5, r0
 8010784:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8010786:	4620      	mov	r0, r4
 8010788:	4798      	blx	r3
 801078a:	6823      	ldr	r3, [r4, #0]
 801078c:	4680      	mov	r8, r0
 801078e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8010792:	4620      	mov	r0, r4
 8010794:	4798      	blx	r3
 8010796:	e9cd 8002 	strd	r8, r0, [sp, #8]
 801079a:	ab09      	add	r3, sp, #36	; 0x24
 801079c:	9300      	str	r3, [sp, #0]
 801079e:	9501      	str	r5, [sp, #4]
 80107a0:	ab05      	add	r3, sp, #20
 80107a2:	e897 0006 	ldmia.w	r7, {r1, r2}
 80107a6:	4630      	mov	r0, r6
 80107a8:	f7f6 f9fe 	bl	8006ba8 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 80107ac:	b00e      	add	sp, #56	; 0x38
 80107ae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80107b2:	bf00      	nop
 80107b4:	20013818 	.word	0x20013818
 80107b8:	20013820 	.word	0x20013820
 80107bc:	20013814 	.word	0x20013814
 80107c0:	2001381c 	.word	0x2001381c
 80107c4:	200137bc 	.word	0x200137bc

080107c8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 80107c8:	b538      	push	{r3, r4, r5, lr}
 80107ca:	4b0e      	ldr	r3, [pc, #56]	; (8010804 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 80107cc:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 80107ce:	881b      	ldrh	r3, [r3, #0]
 80107d0:	429a      	cmp	r2, r3
 80107d2:	4604      	mov	r4, r0
 80107d4:	d214      	bcs.n	8010800 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 80107d6:	6803      	ldr	r3, [r0, #0]
 80107d8:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80107da:	4798      	blx	r3
 80107dc:	6823      	ldr	r3, [r4, #0]
 80107de:	4605      	mov	r5, r0
 80107e0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80107e2:	4620      	mov	r0, r4
 80107e4:	4798      	blx	r3
 80107e6:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80107ea:	b22d      	sxth	r5, r5
 80107ec:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 80107f0:	4601      	mov	r1, r0
 80107f2:	bf06      	itte	eq
 80107f4:	4602      	moveq	r2, r0
 80107f6:	4629      	moveq	r1, r5
 80107f8:	462a      	movne	r2, r5
 80107fa:	4620      	mov	r0, r4
 80107fc:	f7fd fdb6 	bl	800e36c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8010800:	bd38      	pop	{r3, r4, r5, pc}
 8010802:	bf00      	nop
 8010804:	20013818 	.word	0x20013818

08010808 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 8010808:	b530      	push	{r4, r5, lr}
 801080a:	888b      	ldrh	r3, [r1, #4]
 801080c:	8583      	strh	r3, [r0, #44]	; 0x2c
 801080e:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8010812:	b085      	sub	sp, #20
 8010814:	4604      	mov	r4, r0
 8010816:	b923      	cbnz	r3, 8010822 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8010818:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 801081c:	b90b      	cbnz	r3, 8010822 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 801081e:	f7ff ffd3 	bl	80107c8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 8010822:	6823      	ldr	r3, [r4, #0]
 8010824:	466d      	mov	r5, sp
 8010826:	4621      	mov	r1, r4
 8010828:	4628      	mov	r0, r5
 801082a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 801082e:	4798      	blx	r3
 8010830:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8010834:	343c      	adds	r4, #60	; 0x3c
 8010836:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 801083a:	b005      	add	sp, #20
 801083c:	bd30      	pop	{r4, r5, pc}

0801083e <_ZNK8touchgfx3Box12getSolidRectEv>:
 801083e:	2300      	movs	r3, #0
 8010840:	8083      	strh	r3, [r0, #4]
 8010842:	80c3      	strh	r3, [r0, #6]
 8010844:	8003      	strh	r3, [r0, #0]
 8010846:	8043      	strh	r3, [r0, #2]
 8010848:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 801084c:	2bff      	cmp	r3, #255	; 0xff
 801084e:	bf01      	itttt	eq
 8010850:	890b      	ldrheq	r3, [r1, #8]
 8010852:	8083      	strheq	r3, [r0, #4]
 8010854:	894b      	ldrheq	r3, [r1, #10]
 8010856:	80c3      	strheq	r3, [r0, #6]
 8010858:	4770      	bx	lr
	...

0801085c <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 801085c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801085e:	4604      	mov	r4, r0
 8010860:	6808      	ldr	r0, [r1, #0]
 8010862:	6849      	ldr	r1, [r1, #4]
 8010864:	466b      	mov	r3, sp
 8010866:	c303      	stmia	r3!, {r0, r1}
 8010868:	6823      	ldr	r3, [r4, #0]
 801086a:	4669      	mov	r1, sp
 801086c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801086e:	4620      	mov	r0, r4
 8010870:	4798      	blx	r3
 8010872:	4b08      	ldr	r3, [pc, #32]	; (8010894 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 8010874:	681b      	ldr	r3, [r3, #0]
 8010876:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801087a:	b10a      	cbz	r2, 8010880 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 801087c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 801087e:	b900      	cbnz	r0, 8010882 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 8010880:	6898      	ldr	r0, [r3, #8]
 8010882:	6803      	ldr	r3, [r0, #0]
 8010884:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8010886:	6a1d      	ldr	r5, [r3, #32]
 8010888:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 801088c:	4669      	mov	r1, sp
 801088e:	47a8      	blx	r5
 8010890:	b003      	add	sp, #12
 8010892:	bd30      	pop	{r4, r5, pc}
 8010894:	200137bc 	.word	0x200137bc

08010898 <_ZN8touchgfx3BoxD1Ev>:
 8010898:	4770      	bx	lr

0801089a <_ZN8touchgfx3BoxD0Ev>:
 801089a:	b510      	push	{r4, lr}
 801089c:	212c      	movs	r1, #44	; 0x2c
 801089e:	4604      	mov	r4, r0
 80108a0:	f015 fdf5 	bl	802648e <_ZdlPvj>
 80108a4:	4620      	mov	r0, r4
 80108a6:	bd10      	pop	{r4, pc}

080108a8 <_ZNK8touchgfx3Box17invalidateContentEv>:
 80108a8:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 80108ac:	b12a      	cbz	r2, 80108ba <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 80108ae:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80108b2:	b112      	cbz	r2, 80108ba <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 80108b4:	6803      	ldr	r3, [r0, #0]
 80108b6:	695b      	ldr	r3, [r3, #20]
 80108b8:	4718      	bx	r3
 80108ba:	4770      	bx	lr

080108bc <_ZNK8touchgfx5Gauge9getCenterERiS1_>:
 80108bc:	f9b0 3150 	ldrsh.w	r3, [r0, #336]	; 0x150
 80108c0:	600b      	str	r3, [r1, #0]
 80108c2:	f9b0 3152 	ldrsh.w	r3, [r0, #338]	; 0x152
 80108c6:	6013      	str	r3, [r2, #0]
 80108c8:	4770      	bx	lr

080108ca <_ZN8touchgfx5Gauge8setWidthEs>:
 80108ca:	8101      	strh	r1, [r0, #8]
 80108cc:	f8a0 10bc 	strh.w	r1, [r0, #188]	; 0xbc
 80108d0:	f8a0 1160 	strh.w	r1, [r0, #352]	; 0x160
 80108d4:	4770      	bx	lr

080108d6 <_ZN8touchgfx5Gauge9setHeightEs>:
 80108d6:	8141      	strh	r1, [r0, #10]
 80108d8:	f8a0 10be 	strh.w	r1, [r0, #190]	; 0xbe
 80108dc:	f8a0 1162 	strh.w	r1, [r0, #354]	; 0x162
 80108e0:	4770      	bx	lr

080108e2 <_ZNK8touchgfx5Gauge13getStartAngleEv>:
 80108e2:	f8d0 0148 	ldr.w	r0, [r0, #328]	; 0x148
 80108e6:	4770      	bx	lr

080108e8 <_ZNK8touchgfx5Gauge11getEndAngleEv>:
 80108e8:	f8d0 014c 	ldr.w	r0, [r0, #332]	; 0x14c
 80108ec:	4770      	bx	lr

080108ee <_ZN8touchgfx5Gauge28setProgressIndicatorPositionEssss>:
 80108ee:	4770      	bx	lr

080108f0 <_ZN8touchgfx5GaugeD1Ev>:
 80108f0:	4770      	bx	lr

080108f2 <_ZN8touchgfx5Gauge8setAlphaEh>:
 80108f2:	b538      	push	{r3, r4, r5, lr}
 80108f4:	4604      	mov	r4, r0
 80108f6:	460d      	mov	r5, r1
 80108f8:	f7fd fc51 	bl	800e19e <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>
 80108fc:	f884 50dc 	strb.w	r5, [r4, #220]	; 0xdc
 8010900:	f884 517e 	strb.w	r5, [r4, #382]	; 0x17e
 8010904:	bd38      	pop	{r3, r4, r5, pc}

08010906 <_ZN8touchgfx5GaugeD0Ev>:
 8010906:	b510      	push	{r4, lr}
 8010908:	f44f 71d0 	mov.w	r1, #416	; 0x1a0
 801090c:	4604      	mov	r4, r0
 801090e:	f015 fdbe 	bl	802648e <_ZdlPvj>
 8010912:	4620      	mov	r0, r4
 8010914:	bd10      	pop	{r4, pc}

08010916 <_ZNK8touchgfx5Gauge17invalidateContentEv>:
 8010916:	b510      	push	{r4, lr}
 8010918:	6803      	ldr	r3, [r0, #0]
 801091a:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 801091e:	4604      	mov	r4, r0
 8010920:	4798      	blx	r3
 8010922:	b170      	cbz	r0, 8010942 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8010924:	6823      	ldr	r3, [r4, #0]
 8010926:	4620      	mov	r0, r4
 8010928:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 801092c:	4798      	blx	r3
 801092e:	b140      	cbz	r0, 8010942 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8010930:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8010934:	b12b      	cbz	r3, 8010942 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8010936:	6823      	ldr	r3, [r4, #0]
 8010938:	4620      	mov	r0, r4
 801093a:	695b      	ldr	r3, [r3, #20]
 801093c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010940:	4718      	bx	r3
 8010942:	bd10      	pop	{r4, pc}

08010944 <_ZN8touchgfx5GaugeC1Ev>:
 8010944:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8010946:	4604      	mov	r4, r0
 8010948:	4626      	mov	r6, r4
 801094a:	f7fd fd49 	bl	800e3e0 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>
 801094e:	4b18      	ldr	r3, [pc, #96]	; (80109b0 <_ZN8touchgfx5GaugeC1Ev+0x6c>)
 8010950:	f846 3bb4 	str.w	r3, [r6], #180
 8010954:	a902      	add	r1, sp, #8
 8010956:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801095a:	f821 3d04 	strh.w	r3, [r1, #-4]!
 801095e:	4630      	mov	r0, r6
 8010960:	f014 ff7c 	bl	802585c <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>
 8010964:	2500      	movs	r5, #0
 8010966:	2301      	movs	r3, #1
 8010968:	f504 77ac 	add.w	r7, r4, #344	; 0x158
 801096c:	f884 3144 	strb.w	r3, [r4, #324]	; 0x144
 8010970:	f884 3145 	strb.w	r3, [r4, #325]	; 0x145
 8010974:	f8c4 5148 	str.w	r5, [r4, #328]	; 0x148
 8010978:	f8c4 514c 	str.w	r5, [r4, #332]	; 0x14c
 801097c:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
 8010980:	f8c4 5154 	str.w	r5, [r4, #340]	; 0x154
 8010984:	4638      	mov	r0, r7
 8010986:	f014 f9ad 	bl	8024ce4 <_ZN8touchgfx6CircleC1Ev>
 801098a:	f104 0158 	add.w	r1, r4, #88	; 0x58
 801098e:	4620      	mov	r0, r4
 8010990:	f7fd fdc7 	bl	800e522 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8010994:	4639      	mov	r1, r7
 8010996:	4620      	mov	r0, r4
 8010998:	f7fd fd82 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 801099c:	4620      	mov	r0, r4
 801099e:	4631      	mov	r1, r6
 80109a0:	f7fd fd7e 	bl	800e4a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80109a4:	4620      	mov	r0, r4
 80109a6:	f884 517d 	strb.w	r5, [r4, #381]	; 0x17d
 80109aa:	b003      	add	sp, #12
 80109ac:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80109ae:	bf00      	nop
 80109b0:	0802b140 	.word	0x0802b140

080109b4 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 80109b4:	f880 1144 	strb.w	r1, [r0, #324]	; 0x144
 80109b8:	4770      	bx	lr

080109ba <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 80109ba:	f880 1145 	strb.w	r1, [r0, #325]	; 0x145
 80109be:	4770      	bx	lr

080109c0 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>:
 80109c0:	b538      	push	{r3, r4, r5, lr}
 80109c2:	8902      	ldrh	r2, [r0, #8]
 80109c4:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80109c8:	f8a0 20bc 	strh.w	r2, [r0, #188]	; 0xbc
 80109cc:	4604      	mov	r4, r0
 80109ce:	f100 05b4 	add.w	r5, r0, #180	; 0xb4
 80109d2:	2200      	movs	r2, #0
 80109d4:	4611      	mov	r1, r2
 80109d6:	f8a0 30be 	strh.w	r3, [r0, #190]	; 0xbe
 80109da:	4628      	mov	r0, r5
 80109dc:	f7f1 fcc6 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
 80109e0:	f9b4 2156 	ldrsh.w	r2, [r4, #342]	; 0x156
 80109e4:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 80109e8:	1a9b      	subs	r3, r3, r2
 80109ea:	ee07 3a90 	vmov	s15, r3
 80109ee:	f9b4 2154 	ldrsh.w	r2, [r4, #340]	; 0x154
 80109f2:	f9b4 3150 	ldrsh.w	r3, [r4, #336]	; 0x150
 80109f6:	1a9b      	subs	r3, r3, r2
 80109f8:	ee07 3a10 	vmov	s14, r3
 80109fc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8010a00:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8010a04:	edc4 7a39 	vstr	s15, [r4, #228]	; 0xe4
 8010a08:	ed84 7a38 	vstr	s14, [r4, #224]	; 0xe0
 8010a0c:	4628      	mov	r0, r5
 8010a0e:	f014 ff71 	bl	80258f4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8010a12:	4b16      	ldr	r3, [pc, #88]	; (8010a6c <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv+0xac>)
 8010a14:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
 8010a18:	4628      	mov	r0, r5
 8010a1a:	f014 ff6b 	bl	80258f4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8010a1e:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 8010a22:	f9b4 2150 	ldrsh.w	r2, [r4, #336]	; 0x150
 8010a26:	ee07 3a90 	vmov	s15, r3
 8010a2a:	ee07 2a10 	vmov	s14, r2
 8010a2e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8010a32:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8010a36:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 8010a3a:	ed84 7a3e 	vstr	s14, [r4, #248]	; 0xf8
 8010a3e:	edc4 7a3f 	vstr	s15, [r4, #252]	; 0xfc
 8010a42:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8010a46:	4628      	mov	r0, r5
 8010a48:	f014 ff54 	bl	80258f4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8010a4c:	f8d4 30fc 	ldr.w	r3, [r4, #252]	; 0xfc
 8010a50:	f8d4 20f8 	ldr.w	r2, [r4, #248]	; 0xf8
 8010a54:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 8010a58:	f8c4 2104 	str.w	r2, [r4, #260]	; 0x104
 8010a5c:	4628      	mov	r0, r5
 8010a5e:	f014 ff49 	bl	80258f4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8010a62:	2301      	movs	r3, #1
 8010a64:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8010a68:	bd38      	pop	{r3, r4, r5, pc}
 8010a6a:	bf00      	nop
 8010a6c:	43960000 	.word	0x43960000

08010a70 <_ZN8touchgfx5Gauge9setNeedleEtss>:
 8010a70:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8010a72:	4604      	mov	r4, r0
 8010a74:	a802      	add	r0, sp, #8
 8010a76:	4616      	mov	r6, r2
 8010a78:	f820 1d04 	strh.w	r1, [r0, #-4]!
 8010a7c:	461d      	mov	r5, r3
 8010a7e:	4601      	mov	r1, r0
 8010a80:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8010a84:	f015 f88c 	bl	8025ba0 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>
 8010a88:	f8a4 6154 	strh.w	r6, [r4, #340]	; 0x154
 8010a8c:	f8a4 5156 	strh.w	r5, [r4, #342]	; 0x156
 8010a90:	4620      	mov	r0, r4
 8010a92:	f7ff ff95 	bl	80109c0 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 8010a96:	b002      	add	sp, #8
 8010a98:	bd70      	pop	{r4, r5, r6, pc}

08010a9a <_ZN8touchgfx5Gauge9setCenterEii>:
 8010a9a:	b570      	push	{r4, r5, r6, lr}
 8010a9c:	4606      	mov	r6, r0
 8010a9e:	460d      	mov	r5, r1
 8010aa0:	f8a6 1150 	strh.w	r1, [r6, #336]	; 0x150
 8010aa4:	f8a6 2152 	strh.w	r2, [r6, #338]	; 0x152
 8010aa8:	4614      	mov	r4, r2
 8010aaa:	f7ff ff89 	bl	80109c0 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 8010aae:	f9b6 215e 	ldrsh.w	r2, [r6, #350]	; 0x15e
 8010ab2:	f9b6 115c 	ldrsh.w	r1, [r6, #348]	; 0x15c
 8010ab6:	1aa4      	subs	r4, r4, r2
 8010ab8:	1a6d      	subs	r5, r5, r1
 8010aba:	0164      	lsls	r4, r4, #5
 8010abc:	016d      	lsls	r5, r5, #5
 8010abe:	3410      	adds	r4, #16
 8010ac0:	3510      	adds	r5, #16
 8010ac2:	f8c6 5184 	str.w	r5, [r6, #388]	; 0x184
 8010ac6:	f8c6 4188 	str.w	r4, [r6, #392]	; 0x188
 8010aca:	bd70      	pop	{r4, r5, r6, pc}

08010acc <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>:
 8010acc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8010ace:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 8010ad0:	0149      	lsls	r1, r1, #5
 8010ad2:	4299      	cmp	r1, r3
 8010ad4:	4604      	mov	r4, r0
 8010ad6:	9101      	str	r1, [sp, #4]
 8010ad8:	d00b      	beq.n	8010af2 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_+0x26>
 8010ada:	4601      	mov	r1, r0
 8010adc:	aa01      	add	r2, sp, #4
 8010ade:	a802      	add	r0, sp, #8
 8010ae0:	f014 fafe 	bl	80250e0 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>
 8010ae4:	9b01      	ldr	r3, [sp, #4]
 8010ae6:	63e3      	str	r3, [r4, #60]	; 0x3c
 8010ae8:	6823      	ldr	r3, [r4, #0]
 8010aea:	a902      	add	r1, sp, #8
 8010aec:	691b      	ldr	r3, [r3, #16]
 8010aee:	4620      	mov	r0, r4
 8010af0:	4798      	blx	r3
 8010af2:	b004      	add	sp, #16
 8010af4:	bd10      	pop	{r4, pc}
	...

08010af8 <_ZN8touchgfx5Gauge8setValueEi>:
 8010af8:	b570      	push	{r4, r5, r6, lr}
 8010afa:	4604      	mov	r4, r0
 8010afc:	f7fd fba2 	bl	800e244 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>
 8010b00:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 8010b04:	429a      	cmp	r2, r3
 8010b06:	bfac      	ite	ge
 8010b08:	f894 3145 	ldrbge.w	r3, [r4, #325]	; 0x145
 8010b0c:	f894 3144 	ldrblt.w	r3, [r4, #324]	; 0x144
 8010b10:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8010b14:	f8d4 114c 	ldr.w	r1, [r4, #332]	; 0x14c
 8010b18:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8010b1c:	1ac9      	subs	r1, r1, r3
 8010b1e:	2900      	cmp	r1, #0
 8010b20:	bfb8      	it	lt
 8010b22:	4249      	neglt	r1, r1
 8010b24:	b289      	uxth	r1, r1
 8010b26:	4620      	mov	r0, r4
 8010b28:	f7fd fbae 	bl	800e288 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>
 8010b2c:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8010b30:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 8010b34:	eddf 6a19 	vldr	s13, [pc, #100]	; 8010b9c <_ZN8touchgfx5Gauge8setValueEi+0xa4>
 8010b38:	ed9f 7a19 	vldr	s14, [pc, #100]	; 8010ba0 <_ZN8touchgfx5Gauge8setValueEi+0xa8>
 8010b3c:	429a      	cmp	r2, r3
 8010b3e:	4605      	mov	r5, r0
 8010b40:	f504 76ac 	add.w	r6, r4, #344	; 0x158
 8010b44:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8010b48:	da15      	bge.n	8010b76 <_ZN8touchgfx5Gauge8setValueEi+0x7e>
 8010b4a:	1b5b      	subs	r3, r3, r5
 8010b4c:	ee07 3a90 	vmov	s15, r3
 8010b50:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8010b54:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8010b58:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 8010b5c:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 8010b60:	ee21 1a07 	vmul.f32	s2, s2, s14
 8010b64:	f014 fe35 	bl	80257d2 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8010b68:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 8010b6c:	1b49      	subs	r1, r1, r5
 8010b6e:	4630      	mov	r0, r6
 8010b70:	f7ff ffac 	bl	8010acc <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>
 8010b74:	bd70      	pop	{r4, r5, r6, pc}
 8010b76:	442b      	add	r3, r5
 8010b78:	ee07 3a90 	vmov	s15, r3
 8010b7c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8010b80:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8010b84:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 8010b88:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 8010b8c:	ee21 1a07 	vmul.f32	s2, s2, s14
 8010b90:	f014 fe1f 	bl	80257d2 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8010b94:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 8010b98:	4429      	add	r1, r5
 8010b9a:	e7e8      	b.n	8010b6e <_ZN8touchgfx5Gauge8setValueEi+0x76>
 8010b9c:	43340000 	.word	0x43340000
 8010ba0:	40490fdb 	.word	0x40490fdb

08010ba4 <_ZN8touchgfx5Gauge16setStartEndAngleEii>:
 8010ba4:	b510      	push	{r4, lr}
 8010ba6:	f8c0 1148 	str.w	r1, [r0, #328]	; 0x148
 8010baa:	f8c0 214c 	str.w	r2, [r0, #332]	; 0x14c
 8010bae:	0149      	lsls	r1, r1, #5
 8010bb0:	0152      	lsls	r2, r2, #5
 8010bb2:	f8c0 1190 	str.w	r1, [r0, #400]	; 0x190
 8010bb6:	f8c0 2194 	str.w	r2, [r0, #404]	; 0x194
 8010bba:	4604      	mov	r4, r0
 8010bbc:	f7fd faec 	bl	800e198 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>
 8010bc0:	4601      	mov	r1, r0
 8010bc2:	4620      	mov	r0, r4
 8010bc4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010bc8:	f7ff bf96 	b.w	8010af8 <_ZN8touchgfx5Gauge8setValueEi>

08010bcc <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 8010bcc:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8010bd0:	4770      	bx	lr

08010bd2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 8010bd2:	b570      	push	{r4, r5, r6, lr}
 8010bd4:	880b      	ldrh	r3, [r1, #0]
 8010bd6:	85c3      	strh	r3, [r0, #46]	; 0x2e
 8010bd8:	4605      	mov	r5, r0
 8010bda:	8813      	ldrh	r3, [r2, #0]
 8010bdc:	f825 3f30 	strh.w	r3, [r5, #48]!
 8010be0:	4604      	mov	r4, r0
 8010be2:	4628      	mov	r0, r5
 8010be4:	f006 f912 	bl	8016e0c <_ZNK8touchgfx6Bitmap8getWidthEv>
 8010be8:	4606      	mov	r6, r0
 8010bea:	4628      	mov	r0, r5
 8010bec:	f006 f942 	bl	8016e74 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8010bf0:	6823      	ldr	r3, [r4, #0]
 8010bf2:	4605      	mov	r5, r0
 8010bf4:	4631      	mov	r1, r6
 8010bf6:	4620      	mov	r0, r4
 8010bf8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010bfa:	4798      	blx	r3
 8010bfc:	6823      	ldr	r3, [r4, #0]
 8010bfe:	4629      	mov	r1, r5
 8010c00:	4620      	mov	r0, r4
 8010c02:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010c04:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010c08:	4718      	bx	r3

08010c0a <_ZN8touchgfx14AbstractButton13executeActionEv>:
 8010c0a:	b510      	push	{r4, lr}
 8010c0c:	4604      	mov	r4, r0
 8010c0e:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8010c10:	b150      	cbz	r0, 8010c28 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8010c12:	6803      	ldr	r3, [r0, #0]
 8010c14:	68db      	ldr	r3, [r3, #12]
 8010c16:	4798      	blx	r3
 8010c18:	b130      	cbz	r0, 8010c28 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8010c1a:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8010c1c:	6803      	ldr	r3, [r0, #0]
 8010c1e:	4621      	mov	r1, r4
 8010c20:	689b      	ldr	r3, [r3, #8]
 8010c22:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010c26:	4718      	bx	r3
 8010c28:	bd10      	pop	{r4, pc}

08010c2a <_ZNK8touchgfx6Button12getSolidRectEv>:
 8010c2a:	b510      	push	{r4, lr}
 8010c2c:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 8010c30:	2bff      	cmp	r3, #255	; 0xff
 8010c32:	4604      	mov	r4, r0
 8010c34:	d006      	beq.n	8010c44 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 8010c36:	2300      	movs	r3, #0
 8010c38:	8003      	strh	r3, [r0, #0]
 8010c3a:	8043      	strh	r3, [r0, #2]
 8010c3c:	8083      	strh	r3, [r0, #4]
 8010c3e:	80c3      	strh	r3, [r0, #6]
 8010c40:	4620      	mov	r0, r4
 8010c42:	bd10      	pop	{r4, pc}
 8010c44:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 8010c48:	b11b      	cbz	r3, 8010c52 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 8010c4a:	3130      	adds	r1, #48	; 0x30
 8010c4c:	f006 f946 	bl	8016edc <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8010c50:	e7f6      	b.n	8010c40 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 8010c52:	312e      	adds	r1, #46	; 0x2e
 8010c54:	e7fa      	b.n	8010c4c <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

08010c58 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 8010c58:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010c5c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8010c60:	b08a      	sub	sp, #40	; 0x28
 8010c62:	4604      	mov	r4, r0
 8010c64:	4688      	mov	r8, r1
 8010c66:	2b00      	cmp	r3, #0
 8010c68:	d066      	beq.n	8010d38 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 8010c6a:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8010c6c:	f8ad 3014 	strh.w	r3, [sp, #20]
 8010c70:	a805      	add	r0, sp, #20
 8010c72:	f006 f8cb 	bl	8016e0c <_ZNK8touchgfx6Bitmap8getWidthEv>
 8010c76:	4607      	mov	r7, r0
 8010c78:	a805      	add	r0, sp, #20
 8010c7a:	f006 f8fb 	bl	8016e74 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8010c7e:	f9b8 6000 	ldrsh.w	r6, [r8]
 8010c82:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 8010c86:	4432      	add	r2, r6
 8010c88:	b292      	uxth	r2, r2
 8010c8a:	2300      	movs	r3, #0
 8010c8c:	fa0f fc82 	sxth.w	ip, r2
 8010c90:	459c      	cmp	ip, r3
 8010c92:	9306      	str	r3, [sp, #24]
 8010c94:	dd52      	ble.n	8010d3c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8010c96:	42b7      	cmp	r7, r6
 8010c98:	dd50      	ble.n	8010d3c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8010c9a:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 8010c9e:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8010ca2:	442b      	add	r3, r5
 8010ca4:	b29b      	uxth	r3, r3
 8010ca6:	b219      	sxth	r1, r3
 8010ca8:	2900      	cmp	r1, #0
 8010caa:	dd47      	ble.n	8010d3c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8010cac:	42a8      	cmp	r0, r5
 8010cae:	dd45      	ble.n	8010d3c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8010cb0:	4567      	cmp	r7, ip
 8010cb2:	bfb8      	it	lt
 8010cb4:	b2ba      	uxthlt	r2, r7
 8010cb6:	4288      	cmp	r0, r1
 8010cb8:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 8010cbc:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8010cc0:	bfb8      	it	lt
 8010cc2:	b283      	uxthlt	r3, r0
 8010cc4:	1b92      	subs	r2, r2, r6
 8010cc6:	1b5b      	subs	r3, r3, r5
 8010cc8:	f8ad 201c 	strh.w	r2, [sp, #28]
 8010ccc:	f8ad 301e 	strh.w	r3, [sp, #30]
 8010cd0:	f8ad 6018 	strh.w	r6, [sp, #24]
 8010cd4:	f8ad 501a 	strh.w	r5, [sp, #26]
 8010cd8:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8010cdc:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8010ce0:	429a      	cmp	r2, r3
 8010ce2:	d026      	beq.n	8010d32 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8010ce4:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8010ce8:	2b00      	cmp	r3, #0
 8010cea:	dd22      	ble.n	8010d32 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8010cec:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8010cf0:	2b00      	cmp	r3, #0
 8010cf2:	dd1e      	ble.n	8010d32 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8010cf4:	2300      	movs	r3, #0
 8010cf6:	e9cd 3308 	strd	r3, r3, [sp, #32]
 8010cfa:	6823      	ldr	r3, [r4, #0]
 8010cfc:	a908      	add	r1, sp, #32
 8010cfe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010d00:	4620      	mov	r0, r4
 8010d02:	4798      	blx	r3
 8010d04:	4b0f      	ldr	r3, [pc, #60]	; (8010d44 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 8010d06:	681b      	ldr	r3, [r3, #0]
 8010d08:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8010d0c:	b10a      	cbz	r2, 8010d12 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 8010d0e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8010d10:	b900      	cbnz	r0, 8010d14 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 8010d12:	6898      	ldr	r0, [r3, #8]
 8010d14:	6801      	ldr	r1, [r0, #0]
 8010d16:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8010d1a:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8010d1e:	2501      	movs	r5, #1
 8010d20:	9502      	str	r5, [sp, #8]
 8010d22:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 8010d26:	9401      	str	r4, [sp, #4]
 8010d28:	ac06      	add	r4, sp, #24
 8010d2a:	9400      	str	r4, [sp, #0]
 8010d2c:	688c      	ldr	r4, [r1, #8]
 8010d2e:	a905      	add	r1, sp, #20
 8010d30:	47a0      	blx	r4
 8010d32:	b00a      	add	sp, #40	; 0x28
 8010d34:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010d38:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 8010d3a:	e797      	b.n	8010c6c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 8010d3c:	2300      	movs	r3, #0
 8010d3e:	9307      	str	r3, [sp, #28]
 8010d40:	e7ca      	b.n	8010cd8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 8010d42:	bf00      	nop
 8010d44:	200137bc 	.word	0x200137bc

08010d48 <_ZNK8touchgfx6Button17invalidateContentEv>:
 8010d48:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 8010d4c:	b12a      	cbz	r2, 8010d5a <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8010d4e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8010d52:	b112      	cbz	r2, 8010d5a <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8010d54:	6803      	ldr	r3, [r0, #0]
 8010d56:	695b      	ldr	r3, [r3, #20]
 8010d58:	4718      	bx	r3
 8010d5a:	4770      	bx	lr

08010d5c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 8010d5c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010d60:	4b2f      	ldr	r3, [pc, #188]	; (8010e20 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 8010d62:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8010d64:	881b      	ldrh	r3, [r3, #0]
 8010d66:	4293      	cmp	r3, r2
 8010d68:	b08d      	sub	sp, #52	; 0x34
 8010d6a:	4604      	mov	r4, r0
 8010d6c:	460f      	mov	r7, r1
 8010d6e:	d954      	bls.n	8010e1a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8010d70:	4b2c      	ldr	r3, [pc, #176]	; (8010e24 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 8010d72:	6819      	ldr	r1, [r3, #0]
 8010d74:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 8010d78:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 8010d7c:	4a2a      	ldr	r2, [pc, #168]	; (8010e28 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 8010d7e:	6812      	ldr	r2, [r2, #0]
 8010d80:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 8010d84:	2900      	cmp	r1, #0
 8010d86:	d048      	beq.n	8010e1a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8010d88:	785a      	ldrb	r2, [r3, #1]
 8010d8a:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 8010d8e:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 8010d92:	4b26      	ldr	r3, [pc, #152]	; (8010e2c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 8010d94:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 8010d98:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 8010d9c:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 8010da0:	6b26      	ldr	r6, [r4, #48]	; 0x30
 8010da2:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 8010da6:	9107      	str	r1, [sp, #28]
 8010da8:	f3c2 0801 	ubfx	r8, r2, #0, #2
 8010dac:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8010db0:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 8010db4:	681a      	ldr	r2, [r3, #0]
 8010db6:	f88d 8020 	strb.w	r8, [sp, #32]
 8010dba:	f892 3058 	ldrb.w	r3, [r2, #88]	; 0x58
 8010dbe:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 8010dc2:	9609      	str	r6, [sp, #36]	; 0x24
 8010dc4:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 8010dc8:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 8010dcc:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 8010dd0:	b10b      	cbz	r3, 8010dd6 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 8010dd2:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 8010dd4:	b905      	cbnz	r5, 8010dd8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 8010dd6:	6895      	ldr	r5, [r2, #8]
 8010dd8:	ae05      	add	r6, sp, #20
 8010dda:	4621      	mov	r1, r4
 8010ddc:	4630      	mov	r0, r6
 8010dde:	f003 ff7b 	bl	8014cd8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010de2:	4b13      	ldr	r3, [pc, #76]	; (8010e30 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 8010de4:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8010de6:	6818      	ldr	r0, [r3, #0]
 8010de8:	f7f5 ff2c 	bl	8006c44 <_ZNK8touchgfx5Texts7getTextEt>
 8010dec:	6823      	ldr	r3, [r4, #0]
 8010dee:	4680      	mov	r8, r0
 8010df0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8010df2:	4620      	mov	r0, r4
 8010df4:	4798      	blx	r3
 8010df6:	6823      	ldr	r3, [r4, #0]
 8010df8:	4681      	mov	r9, r0
 8010dfa:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8010dfe:	4620      	mov	r0, r4
 8010e00:	4798      	blx	r3
 8010e02:	e9cd 9002 	strd	r9, r0, [sp, #8]
 8010e06:	ab07      	add	r3, sp, #28
 8010e08:	9300      	str	r3, [sp, #0]
 8010e0a:	f8cd 8004 	str.w	r8, [sp, #4]
 8010e0e:	463b      	mov	r3, r7
 8010e10:	e896 0006 	ldmia.w	r6, {r1, r2}
 8010e14:	4628      	mov	r0, r5
 8010e16:	f7f5 fec7 	bl	8006ba8 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8010e1a:	b00d      	add	sp, #52	; 0x34
 8010e1c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010e20:	20013818 	.word	0x20013818
 8010e24:	20013814 	.word	0x20013814
 8010e28:	2001381c 	.word	0x2001381c
 8010e2c:	200137bc 	.word	0x200137bc
 8010e30:	20013820 	.word	0x20013820

08010e34 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_>:
 8010e34:	4770      	bx	lr

08010e36 <_ZN8touchgfx14ButtonWithIconD1Ev>:
 8010e36:	4770      	bx	lr

08010e38 <_ZN8touchgfx14ButtonWithIconD0Ev>:
 8010e38:	b510      	push	{r4, lr}
 8010e3a:	213c      	movs	r1, #60	; 0x3c
 8010e3c:	4604      	mov	r4, r0
 8010e3e:	f015 fb26 	bl	802648e <_ZdlPvj>
 8010e42:	4620      	mov	r0, r4
 8010e44:	bd10      	pop	{r4, pc}

08010e46 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
 8010e46:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010e4a:	461c      	mov	r4, r3
 8010e4c:	4606      	mov	r6, r0
 8010e4e:	9f06      	ldr	r7, [sp, #24]
 8010e50:	f7ff febf 	bl	8010bd2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8010e54:	8823      	ldrh	r3, [r4, #0]
 8010e56:	86b3      	strh	r3, [r6, #52]	; 0x34
 8010e58:	883b      	ldrh	r3, [r7, #0]
 8010e5a:	86f3      	strh	r3, [r6, #54]	; 0x36
 8010e5c:	4638      	mov	r0, r7
 8010e5e:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
 8010e62:	f005 ffd3 	bl	8016e0c <_ZNK8touchgfx6Bitmap8getWidthEv>
 8010e66:	f04f 0802 	mov.w	r8, #2
 8010e6a:	fb95 f5f8 	sdiv	r5, r5, r8
 8010e6e:	b2ad      	uxth	r5, r5
 8010e70:	fb90 f0f8 	sdiv	r0, r0, r8
 8010e74:	1a2d      	subs	r5, r5, r0
 8010e76:	8735      	strh	r5, [r6, #56]	; 0x38
 8010e78:	4638      	mov	r0, r7
 8010e7a:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
 8010e7e:	fb94 f4f8 	sdiv	r4, r4, r8
 8010e82:	f005 fff7 	bl	8016e74 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8010e86:	b2a4      	uxth	r4, r4
 8010e88:	fb90 f0f8 	sdiv	r0, r0, r8
 8010e8c:	1a24      	subs	r4, r4, r0
 8010e8e:	8774      	strh	r4, [r6, #58]	; 0x3a
 8010e90:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010e94 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
 8010e94:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010e98:	4604      	mov	r4, r0
 8010e9a:	b08c      	sub	sp, #48	; 0x30
 8010e9c:	460d      	mov	r5, r1
 8010e9e:	f7ff fedb 	bl	8010c58 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 8010ea2:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8010ea6:	2b00      	cmp	r3, #0
 8010ea8:	d05d      	beq.n	8010f66 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd2>
 8010eaa:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8010eac:	f8ad 3014 	strh.w	r3, [sp, #20]
 8010eb0:	a805      	add	r0, sp, #20
 8010eb2:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	; 0x38
 8010eb6:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	; 0x3a
 8010eba:	f005 ffa7 	bl	8016e0c <_ZNK8touchgfx6Bitmap8getWidthEv>
 8010ebe:	4606      	mov	r6, r0
 8010ec0:	a805      	add	r0, sp, #20
 8010ec2:	f005 ffd7 	bl	8016e74 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8010ec6:	6869      	ldr	r1, [r5, #4]
 8010ec8:	f8ad 001e 	strh.w	r0, [sp, #30]
 8010ecc:	6828      	ldr	r0, [r5, #0]
 8010ece:	f8ad 8018 	strh.w	r8, [sp, #24]
 8010ed2:	ab08      	add	r3, sp, #32
 8010ed4:	ad08      	add	r5, sp, #32
 8010ed6:	c303      	stmia	r3!, {r0, r1}
 8010ed8:	a906      	add	r1, sp, #24
 8010eda:	4628      	mov	r0, r5
 8010edc:	f8ad 701a 	strh.w	r7, [sp, #26]
 8010ee0:	f8ad 601c 	strh.w	r6, [sp, #28]
 8010ee4:	f7fd fc62 	bl	800e7ac <_ZN8touchgfx4RectaNERKS0_>
 8010ee8:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8010eec:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8010ef0:	429a      	cmp	r2, r3
 8010ef2:	d035      	beq.n	8010f60 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8010ef4:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8010ef8:	2b00      	cmp	r3, #0
 8010efa:	dd31      	ble.n	8010f60 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8010efc:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	; 0x26
 8010f00:	2b00      	cmp	r3, #0
 8010f02:	dd2d      	ble.n	8010f60 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8010f04:	2300      	movs	r3, #0
 8010f06:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
 8010f0a:	6823      	ldr	r3, [r4, #0]
 8010f0c:	a90a      	add	r1, sp, #40	; 0x28
 8010f0e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010f10:	4620      	mov	r0, r4
 8010f12:	4798      	blx	r3
 8010f14:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8010f18:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 8010f1a:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8010f1e:	1a9b      	subs	r3, r3, r2
 8010f20:	f8ad 3020 	strh.w	r3, [sp, #32]
 8010f24:	8f63      	ldrh	r3, [r4, #58]	; 0x3a
 8010f26:	1ac9      	subs	r1, r1, r3
 8010f28:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
 8010f2c:	490f      	ldr	r1, [pc, #60]	; (8010f6c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd8>)
 8010f2e:	6809      	ldr	r1, [r1, #0]
 8010f30:	f891 0058 	ldrb.w	r0, [r1, #88]	; 0x58
 8010f34:	b108      	cbz	r0, 8010f3a <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa6>
 8010f36:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
 8010f38:	b900      	cbnz	r0, 8010f3c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa8>
 8010f3a:	6888      	ldr	r0, [r1, #8]
 8010f3c:	f8bd 102a 	ldrh.w	r1, [sp, #42]	; 0x2a
 8010f40:	440b      	add	r3, r1
 8010f42:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 8010f46:	2601      	movs	r6, #1
 8010f48:	440a      	add	r2, r1
 8010f4a:	6801      	ldr	r1, [r0, #0]
 8010f4c:	9602      	str	r6, [sp, #8]
 8010f4e:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 8010f52:	e9cd 5400 	strd	r5, r4, [sp]
 8010f56:	b21b      	sxth	r3, r3
 8010f58:	688c      	ldr	r4, [r1, #8]
 8010f5a:	b212      	sxth	r2, r2
 8010f5c:	a905      	add	r1, sp, #20
 8010f5e:	47a0      	blx	r4
 8010f60:	b00c      	add	sp, #48	; 0x30
 8010f62:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010f66:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8010f68:	e7a0      	b.n	8010eac <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x18>
 8010f6a:	bf00      	nop
 8010f6c:	200137bc 	.word	0x200137bc

08010f70 <_ZN8touchgfx14ButtonWithIconC1Ev>:
 8010f70:	b510      	push	{r4, lr}
 8010f72:	2101      	movs	r1, #1
 8010f74:	2200      	movs	r2, #0
 8010f76:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8010f7a:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 8010f7e:	4c0e      	ldr	r4, [pc, #56]	; (8010fb8 <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
 8010f80:	8082      	strh	r2, [r0, #4]
 8010f82:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8010f86:	80c2      	strh	r2, [r0, #6]
 8010f88:	8102      	strh	r2, [r0, #8]
 8010f8a:	8142      	strh	r2, [r0, #10]
 8010f8c:	8182      	strh	r2, [r0, #12]
 8010f8e:	81c2      	strh	r2, [r0, #14]
 8010f90:	8202      	strh	r2, [r0, #16]
 8010f92:	8242      	strh	r2, [r0, #18]
 8010f94:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8010f98:	61c2      	str	r2, [r0, #28]
 8010f9a:	8402      	strh	r2, [r0, #32]
 8010f9c:	8442      	strh	r2, [r0, #34]	; 0x22
 8010f9e:	6282      	str	r2, [r0, #40]	; 0x28
 8010fa0:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 8010fa4:	85c1      	strh	r1, [r0, #46]	; 0x2e
 8010fa6:	8601      	strh	r1, [r0, #48]	; 0x30
 8010fa8:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 8010fac:	6004      	str	r4, [r0, #0]
 8010fae:	8681      	strh	r1, [r0, #52]	; 0x34
 8010fb0:	86c1      	strh	r1, [r0, #54]	; 0x36
 8010fb2:	8702      	strh	r2, [r0, #56]	; 0x38
 8010fb4:	8742      	strh	r2, [r0, #58]	; 0x3a
 8010fb6:	bd10      	pop	{r4, pc}
 8010fb8:	0802b228 	.word	0x0802b228

08010fbc <_ZN8touchgfx5ImageD1Ev>:
 8010fbc:	4770      	bx	lr

08010fbe <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 8010fbe:	b570      	push	{r4, r5, r6, lr}
 8010fc0:	880b      	ldrh	r3, [r1, #0]
 8010fc2:	84c3      	strh	r3, [r0, #38]	; 0x26
 8010fc4:	4604      	mov	r4, r0
 8010fc6:	4608      	mov	r0, r1
 8010fc8:	460d      	mov	r5, r1
 8010fca:	f005 ff1f 	bl	8016e0c <_ZNK8touchgfx6Bitmap8getWidthEv>
 8010fce:	4606      	mov	r6, r0
 8010fd0:	4628      	mov	r0, r5
 8010fd2:	f005 ff4f 	bl	8016e74 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8010fd6:	6823      	ldr	r3, [r4, #0]
 8010fd8:	4605      	mov	r5, r0
 8010fda:	4631      	mov	r1, r6
 8010fdc:	4620      	mov	r0, r4
 8010fde:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010fe0:	4798      	blx	r3
 8010fe2:	6823      	ldr	r3, [r4, #0]
 8010fe4:	4629      	mov	r1, r5
 8010fe6:	4620      	mov	r0, r4
 8010fe8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010fea:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010fee:	4718      	bx	r3

08010ff0 <_ZN8touchgfx5ImageD0Ev>:
 8010ff0:	b510      	push	{r4, lr}
 8010ff2:	212c      	movs	r1, #44	; 0x2c
 8010ff4:	4604      	mov	r4, r0
 8010ff6:	f015 fa4a 	bl	802648e <_ZdlPvj>
 8010ffa:	4620      	mov	r0, r4
 8010ffc:	bd10      	pop	{r4, pc}

08010ffe <_ZNK8touchgfx5Image12getSolidRectEv>:
 8010ffe:	b510      	push	{r4, lr}
 8011000:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 8011004:	2bff      	cmp	r3, #255	; 0xff
 8011006:	4604      	mov	r4, r0
 8011008:	d006      	beq.n	8011018 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 801100a:	2300      	movs	r3, #0
 801100c:	8003      	strh	r3, [r0, #0]
 801100e:	8043      	strh	r3, [r0, #2]
 8011010:	8083      	strh	r3, [r0, #4]
 8011012:	80c3      	strh	r3, [r0, #6]
 8011014:	4620      	mov	r0, r4
 8011016:	bd10      	pop	{r4, pc}
 8011018:	3126      	adds	r1, #38	; 0x26
 801101a:	f005 ff5f 	bl	8016edc <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801101e:	e7f9      	b.n	8011014 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

08011020 <_ZNK8touchgfx5Image17invalidateContentEv>:
 8011020:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 8011024:	b12a      	cbz	r2, 8011032 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 8011026:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 801102a:	b112      	cbz	r2, 8011032 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 801102c:	6803      	ldr	r3, [r0, #0]
 801102e:	695b      	ldr	r3, [r3, #20]
 8011030:	4718      	bx	r3
 8011032:	4770      	bx	lr

08011034 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 8011034:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011038:	4604      	mov	r4, r0
 801103a:	b088      	sub	sp, #32
 801103c:	f854 3b26 	ldr.w	r3, [r4], #38
 8011040:	2500      	movs	r5, #0
 8011042:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011044:	460f      	mov	r7, r1
 8011046:	e9cd 5504 	strd	r5, r5, [sp, #16]
 801104a:	a904      	add	r1, sp, #16
 801104c:	4606      	mov	r6, r0
 801104e:	4798      	blx	r3
 8011050:	4620      	mov	r0, r4
 8011052:	f005 fedb 	bl	8016e0c <_ZNK8touchgfx6Bitmap8getWidthEv>
 8011056:	4680      	mov	r8, r0
 8011058:	4620      	mov	r0, r4
 801105a:	f005 ff0b 	bl	8016e74 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801105e:	9506      	str	r5, [sp, #24]
 8011060:	ad06      	add	r5, sp, #24
 8011062:	f8ad 001e 	strh.w	r0, [sp, #30]
 8011066:	4639      	mov	r1, r7
 8011068:	4628      	mov	r0, r5
 801106a:	f8ad 801c 	strh.w	r8, [sp, #28]
 801106e:	f7fd fb9d 	bl	800e7ac <_ZN8touchgfx4RectaNERKS0_>
 8011072:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8011076:	2b00      	cmp	r3, #0
 8011078:	dd19      	ble.n	80110ae <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 801107a:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 801107e:	2b00      	cmp	r3, #0
 8011080:	dd15      	ble.n	80110ae <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8011082:	4b0c      	ldr	r3, [pc, #48]	; (80110b4 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 8011084:	681b      	ldr	r3, [r3, #0]
 8011086:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801108a:	b10a      	cbz	r2, 8011090 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 801108c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 801108e:	b900      	cbnz	r0, 8011092 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 8011090:	6898      	ldr	r0, [r3, #8]
 8011092:	6801      	ldr	r1, [r0, #0]
 8011094:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8011098:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801109c:	2701      	movs	r7, #1
 801109e:	9702      	str	r7, [sp, #8]
 80110a0:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 80110a4:	e9cd 5600 	strd	r5, r6, [sp]
 80110a8:	688d      	ldr	r5, [r1, #8]
 80110aa:	4621      	mov	r1, r4
 80110ac:	47a8      	blx	r5
 80110ae:	b008      	add	sp, #32
 80110b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80110b4:	200137bc 	.word	0x200137bc

080110b8 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 80110b8:	4770      	bx	lr

080110ba <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 80110ba:	b510      	push	{r4, lr}
 80110bc:	2148      	movs	r1, #72	; 0x48
 80110be:	4604      	mov	r4, r0
 80110c0:	f015 f9e5 	bl	802648e <_ZdlPvj>
 80110c4:	4620      	mov	r0, r4
 80110c6:	bd10      	pop	{r4, pc}

080110c8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 80110c8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80110cc:	b08d      	sub	sp, #52	; 0x34
 80110ce:	4604      	mov	r4, r0
 80110d0:	460f      	mov	r7, r1
 80110d2:	f7ff fdc1 	bl	8010c58 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 80110d6:	4a55      	ldr	r2, [pc, #340]	; (801122c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
 80110d8:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80110da:	8812      	ldrh	r2, [r2, #0]
 80110dc:	429a      	cmp	r2, r3
 80110de:	f240 8082 	bls.w	80111e6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 80110e2:	4d53      	ldr	r5, [pc, #332]	; (8011230 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
 80110e4:	682a      	ldr	r2, [r5, #0]
 80110e6:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 80110ea:	4b52      	ldr	r3, [pc, #328]	; (8011234 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 80110ec:	681b      	ldr	r3, [r3, #0]
 80110ee:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 80110f2:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	; 0x46
 80110f6:	2200      	movs	r2, #0
 80110f8:	e9cd 2203 	strd	r2, r2, [sp, #12]
 80110fc:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 8011100:	2a03      	cmp	r2, #3
 8011102:	d811      	bhi.n	8011128 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 8011104:	e8df f002 	tbb	[pc, r2]
 8011108:	89727902 	.word	0x89727902
 801110c:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8011110:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8011114:	1ad2      	subs	r2, r2, r3
 8011116:	2002      	movs	r0, #2
 8011118:	f8ad 1010 	strh.w	r1, [sp, #16]
 801111c:	fb92 f2f0 	sdiv	r2, r2, r0
 8011120:	f8ad 3012 	strh.w	r3, [sp, #18]
 8011124:	f8ad 200e 	strh.w	r2, [sp, #14]
 8011128:	f10d 080c 	add.w	r8, sp, #12
 801112c:	e898 0003 	ldmia.w	r8, {r0, r1}
 8011130:	f10d 0914 	add.w	r9, sp, #20
 8011134:	e889 0003 	stmia.w	r9, {r0, r1}
 8011138:	4639      	mov	r1, r7
 801113a:	4648      	mov	r0, r9
 801113c:	f7fd fb36 	bl	800e7ac <_ZN8touchgfx4RectaNERKS0_>
 8011140:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8011144:	2b00      	cmp	r3, #0
 8011146:	dd4e      	ble.n	80111e6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8011148:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 801114c:	2b00      	cmp	r3, #0
 801114e:	dd4a      	ble.n	80111e6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8011150:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8011154:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8011158:	1a9b      	subs	r3, r3, r2
 801115a:	f8ad 3014 	strh.w	r3, [sp, #20]
 801115e:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 8011162:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 8011166:	1a9b      	subs	r3, r3, r2
 8011168:	f8ad 3016 	strh.w	r3, [sp, #22]
 801116c:	6823      	ldr	r3, [r4, #0]
 801116e:	4641      	mov	r1, r8
 8011170:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011172:	4620      	mov	r0, r4
 8011174:	4798      	blx	r3
 8011176:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 801117a:	2b00      	cmp	r3, #0
 801117c:	d053      	beq.n	8011226 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
 801117e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8011180:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 8011182:	682b      	ldr	r3, [r5, #0]
 8011184:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 8011188:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 801118c:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8011190:	785b      	ldrb	r3, [r3, #1]
 8011192:	9209      	str	r2, [sp, #36]	; 0x24
 8011194:	f3c3 0501 	ubfx	r5, r3, #0, #2
 8011198:	f3c3 0381 	ubfx	r3, r3, #2, #2
 801119c:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 80111a0:	2300      	movs	r3, #0
 80111a2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80111a6:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 80111aa:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 80111ae:	4b22      	ldr	r3, [pc, #136]	; (8011238 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 80111b0:	9607      	str	r6, [sp, #28]
 80111b2:	681b      	ldr	r3, [r3, #0]
 80111b4:	f88d 5020 	strb.w	r5, [sp, #32]
 80111b8:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80111bc:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 80111c0:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 80111c4:	b10a      	cbz	r2, 80111ca <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 80111c6:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 80111c8:	b904      	cbnz	r4, 80111cc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
 80111ca:	689c      	ldr	r4, [r3, #8]
 80111cc:	4b1b      	ldr	r3, [pc, #108]	; (801123c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 80111ce:	6818      	ldr	r0, [r3, #0]
 80111d0:	f7f5 fd38 	bl	8006c44 <_ZNK8touchgfx5Texts7getTextEt>
 80111d4:	ab07      	add	r3, sp, #28
 80111d6:	9001      	str	r0, [sp, #4]
 80111d8:	9300      	str	r3, [sp, #0]
 80111da:	e898 0006 	ldmia.w	r8, {r1, r2}
 80111de:	464b      	mov	r3, r9
 80111e0:	4620      	mov	r0, r4
 80111e2:	f7f5 fce1 	bl	8006ba8 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 80111e6:	b00d      	add	sp, #52	; 0x34
 80111e8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80111ec:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 80111f0:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 80111f4:	1ad2      	subs	r2, r2, r3
 80111f6:	3201      	adds	r2, #1
 80111f8:	e78d      	b.n	8011116 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
 80111fa:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 80111fe:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 8011202:	1ad2      	subs	r2, r2, r3
 8011204:	3201      	adds	r2, #1
 8011206:	2002      	movs	r0, #2
 8011208:	f8ad 3010 	strh.w	r3, [sp, #16]
 801120c:	fb92 f2f0 	sdiv	r2, r2, r0
 8011210:	f8ad 1012 	strh.w	r1, [sp, #18]
 8011214:	f8ad 200c 	strh.w	r2, [sp, #12]
 8011218:	e786      	b.n	8011128 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 801121a:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 801121e:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 8011222:	1ad2      	subs	r2, r2, r3
 8011224:	e7ef      	b.n	8011206 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
 8011226:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8011228:	e7aa      	b.n	8011180 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
 801122a:	bf00      	nop
 801122c:	20013818 	.word	0x20013818
 8011230:	20013814 	.word	0x20013814
 8011234:	2001381c 	.word	0x2001381c
 8011238:	200137bc 	.word	0x200137bc
 801123c:	20013820 	.word	0x20013820

08011240 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 8011240:	b510      	push	{r4, lr}
 8011242:	2101      	movs	r1, #1
 8011244:	4c13      	ldr	r4, [pc, #76]	; (8011294 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 8011246:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 801124a:	2200      	movs	r2, #0
 801124c:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 8011250:	6004      	str	r4, [r0, #0]
 8011252:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8011256:	4c10      	ldr	r4, [pc, #64]	; (8011298 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 8011258:	8082      	strh	r2, [r0, #4]
 801125a:	80c2      	strh	r2, [r0, #6]
 801125c:	8102      	strh	r2, [r0, #8]
 801125e:	8142      	strh	r2, [r0, #10]
 8011260:	8182      	strh	r2, [r0, #12]
 8011262:	81c2      	strh	r2, [r0, #14]
 8011264:	8202      	strh	r2, [r0, #16]
 8011266:	8242      	strh	r2, [r0, #18]
 8011268:	e9c0 2205 	strd	r2, r2, [r0, #20]
 801126c:	61c2      	str	r2, [r0, #28]
 801126e:	8402      	strh	r2, [r0, #32]
 8011270:	8442      	strh	r2, [r0, #34]	; 0x22
 8011272:	6282      	str	r2, [r0, #40]	; 0x28
 8011274:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 8011278:	85c1      	strh	r1, [r0, #46]	; 0x2e
 801127a:	8601      	strh	r1, [r0, #48]	; 0x30
 801127c:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 8011280:	6344      	str	r4, [r0, #52]	; 0x34
 8011282:	8701      	strh	r1, [r0, #56]	; 0x38
 8011284:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 8011288:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 801128c:	f8a0 2046 	strh.w	r2, [r0, #70]	; 0x46
 8011290:	bd10      	pop	{r4, pc}
 8011292:	bf00      	nop
 8011294:	0802b30c 	.word	0x0802b30c
 8011298:	08028c00 	.word	0x08028c00

0801129c <_ZN8touchgfx7OutlineD1Ev>:
 801129c:	4770      	bx	lr

0801129e <_ZN8touchgfx7OutlineD0Ev>:
 801129e:	b510      	push	{r4, lr}
 80112a0:	2130      	movs	r1, #48	; 0x30
 80112a2:	4604      	mov	r4, r0
 80112a4:	f015 f8f3 	bl	802648e <_ZdlPvj>
 80112a8:	4620      	mov	r0, r4
 80112aa:	bd10      	pop	{r4, pc}

080112ac <_ZN8touchgfx7Outline5resetEv>:
 80112ac:	b510      	push	{r4, lr}
 80112ae:	4604      	mov	r4, r0
 80112b0:	f000 fe96 	bl	8011fe0 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 80112b4:	60e0      	str	r0, [r4, #12]
 80112b6:	f000 fe99 	bl	8011fec <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 80112ba:	68e3      	ldr	r3, [r4, #12]
 80112bc:	6123      	str	r3, [r4, #16]
 80112be:	08c0      	lsrs	r0, r0, #3
 80112c0:	2200      	movs	r2, #0
 80112c2:	f647 71ff 	movw	r1, #32767	; 0x7fff
 80112c6:	3801      	subs	r0, #1
 80112c8:	6060      	str	r0, [r4, #4]
 80112ca:	60a2      	str	r2, [r4, #8]
 80112cc:	8019      	strh	r1, [r3, #0]
 80112ce:	8059      	strh	r1, [r3, #2]
 80112d0:	809a      	strh	r2, [r3, #4]
 80112d2:	80da      	strh	r2, [r3, #6]
 80112d4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80112d6:	f023 0301 	bic.w	r3, r3, #1
 80112da:	f043 0302 	orr.w	r3, r3, #2
 80112de:	6263      	str	r3, [r4, #36]	; 0x24
 80112e0:	bd10      	pop	{r4, pc}
	...

080112e4 <_ZN8touchgfx7OutlineC1Ev>:
 80112e4:	b510      	push	{r4, lr}
 80112e6:	4b0a      	ldr	r3, [pc, #40]	; (8011310 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 80112e8:	6003      	str	r3, [r0, #0]
 80112ea:	2300      	movs	r3, #0
 80112ec:	e9c0 3301 	strd	r3, r3, [r0, #4]
 80112f0:	e9c0 3303 	strd	r3, r3, [r0, #12]
 80112f4:	e9c0 3305 	strd	r3, r3, [r0, #20]
 80112f8:	e9c0 3307 	strd	r3, r3, [r0, #28]
 80112fc:	6243      	str	r3, [r0, #36]	; 0x24
 80112fe:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 8011302:	4604      	mov	r4, r0
 8011304:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 8011308:	f7ff ffd0 	bl	80112ac <_ZN8touchgfx7Outline5resetEv>
 801130c:	4620      	mov	r0, r4
 801130e:	bd10      	pop	{r4, pc}
 8011310:	0802b380 	.word	0x0802b380

08011314 <_ZN8touchgfx7Outline10renderLineEiiii>:
 8011314:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011318:	b093      	sub	sp, #76	; 0x4c
 801131a:	1156      	asrs	r6, r2, #5
 801131c:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 801131e:	9305      	str	r3, [sp, #20]
 8011320:	f004 051f 	and.w	r5, r4, #31
 8011324:	1153      	asrs	r3, r2, #5
 8011326:	9504      	str	r5, [sp, #16]
 8011328:	1165      	asrs	r5, r4, #5
 801132a:	9303      	str	r3, [sp, #12]
 801132c:	42ae      	cmp	r6, r5
 801132e:	ea4f 1364 	mov.w	r3, r4, asr #5
 8011332:	9306      	str	r3, [sp, #24]
 8011334:	f002 031f 	and.w	r3, r2, #31
 8011338:	f040 80f8 	bne.w	801152c <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 801133c:	9c04      	ldr	r4, [sp, #16]
 801133e:	9a05      	ldr	r2, [sp, #20]
 8011340:	42a3      	cmp	r3, r4
 8011342:	ea4f 1e62 	mov.w	lr, r2, asr #5
 8011346:	6902      	ldr	r2, [r0, #16]
 8011348:	d125      	bne.n	8011396 <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 801134a:	f9b2 3000 	ldrsh.w	r3, [r2]
 801134e:	459e      	cmp	lr, r3
 8011350:	d103      	bne.n	801135a <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 8011352:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8011356:	429e      	cmp	r6, r3
 8011358:	d035      	beq.n	80113c6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801135a:	88d1      	ldrh	r1, [r2, #6]
 801135c:	8893      	ldrh	r3, [r2, #4]
 801135e:	430b      	orrs	r3, r1
 8011360:	d010      	beq.n	8011384 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8011362:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8011366:	2b00      	cmp	r3, #0
 8011368:	db0c      	blt.n	8011384 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 801136a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 801136c:	428b      	cmp	r3, r1
 801136e:	da09      	bge.n	8011384 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8011370:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8011374:	428b      	cmp	r3, r1
 8011376:	bf38      	it	cc
 8011378:	3208      	addcc	r2, #8
 801137a:	f103 0301 	add.w	r3, r3, #1
 801137e:	bf38      	it	cc
 8011380:	6102      	strcc	r2, [r0, #16]
 8011382:	6083      	str	r3, [r0, #8]
 8011384:	6903      	ldr	r3, [r0, #16]
 8011386:	9a03      	ldr	r2, [sp, #12]
 8011388:	f8a3 e000 	strh.w	lr, [r3]
 801138c:	805a      	strh	r2, [r3, #2]
 801138e:	2200      	movs	r2, #0
 8011390:	809a      	strh	r2, [r3, #4]
 8011392:	80da      	strh	r2, [r3, #6]
 8011394:	e017      	b.n	80113c6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8011396:	9c05      	ldr	r4, [sp, #20]
 8011398:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 801139c:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 80113a0:	f004 041f 	and.w	r4, r4, #31
 80113a4:	114e      	asrs	r6, r1, #5
 80113a6:	9402      	str	r4, [sp, #8]
 80113a8:	9c04      	ldr	r4, [sp, #16]
 80113aa:	4576      	cmp	r6, lr
 80113ac:	f001 0c1f 	and.w	ip, r1, #31
 80113b0:	eba4 0403 	sub.w	r4, r4, r3
 80113b4:	d10a      	bne.n	80113cc <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 80113b6:	9b02      	ldr	r3, [sp, #8]
 80113b8:	449c      	add	ip, r3
 80113ba:	44a0      	add	r8, r4
 80113bc:	fb04 a40c 	mla	r4, r4, ip, sl
 80113c0:	f8a2 8004 	strh.w	r8, [r2, #4]
 80113c4:	80d4      	strh	r4, [r2, #6]
 80113c6:	b013      	add	sp, #76	; 0x4c
 80113c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80113cc:	9d05      	ldr	r5, [sp, #20]
 80113ce:	1a69      	subs	r1, r5, r1
 80113d0:	bf5b      	ittet	pl
 80113d2:	f1cc 0520 	rsbpl	r5, ip, #32
 80113d6:	436c      	mulpl	r4, r5
 80113d8:	2500      	movmi	r5, #0
 80113da:	2520      	movpl	r5, #32
 80113dc:	bf44      	itt	mi
 80113de:	fb04 f40c 	mulmi.w	r4, r4, ip
 80113e2:	4249      	negmi	r1, r1
 80113e4:	9501      	str	r5, [sp, #4]
 80113e6:	9f01      	ldr	r7, [sp, #4]
 80113e8:	fb94 f5f1 	sdiv	r5, r4, r1
 80113ec:	fb01 4415 	mls	r4, r1, r5, r4
 80113f0:	bf54      	ite	pl
 80113f2:	f04f 0901 	movpl.w	r9, #1
 80113f6:	f04f 39ff 	movmi.w	r9, #4294967295
 80113fa:	2c00      	cmp	r4, #0
 80113fc:	bfb8      	it	lt
 80113fe:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8011402:	44bc      	add	ip, r7
 8011404:	44a8      	add	r8, r5
 8011406:	fb05 ac0c 	mla	ip, r5, ip, sl
 801140a:	f8a2 8004 	strh.w	r8, [r2, #4]
 801140e:	f8a2 c006 	strh.w	ip, [r2, #6]
 8011412:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8011416:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 801141a:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 801141e:	bfb8      	it	lt
 8011420:	1864      	addlt	r4, r4, r1
 8011422:	ea58 0202 	orrs.w	r2, r8, r2
 8011426:	444e      	add	r6, r9
 8011428:	d011      	beq.n	801144e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 801142a:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 801142e:	f1b8 0f00 	cmp.w	r8, #0
 8011432:	db0c      	blt.n	801144e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8011434:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8011436:	4590      	cmp	r8, r2
 8011438:	da09      	bge.n	801144e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 801143a:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 801143e:	4590      	cmp	r8, r2
 8011440:	bf3c      	itt	cc
 8011442:	f10c 0208 	addcc.w	r2, ip, #8
 8011446:	6102      	strcc	r2, [r0, #16]
 8011448:	f108 0201 	add.w	r2, r8, #1
 801144c:	6082      	str	r2, [r0, #8]
 801144e:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8011452:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8011456:	f8ac 6000 	strh.w	r6, [ip]
 801145a:	2700      	movs	r7, #0
 801145c:	45b6      	cmp	lr, r6
 801145e:	f8ac 2002 	strh.w	r2, [ip, #2]
 8011462:	f8ac 7004 	strh.w	r7, [ip, #4]
 8011466:	f8ac 7006 	strh.w	r7, [ip, #6]
 801146a:	442b      	add	r3, r5
 801146c:	d04d      	beq.n	801150a <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 801146e:	9f04      	ldr	r7, [sp, #16]
 8011470:	1aff      	subs	r7, r7, r3
 8011472:	443d      	add	r5, r7
 8011474:	016d      	lsls	r5, r5, #5
 8011476:	fb95 f8f1 	sdiv	r8, r5, r1
 801147a:	fb01 5518 	mls	r5, r1, r8, r5
 801147e:	2d00      	cmp	r5, #0
 8011480:	bfb8      	it	lt
 8011482:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8011486:	f108 0701 	add.w	r7, r8, #1
 801148a:	bfb8      	it	lt
 801148c:	186d      	addlt	r5, r5, r1
 801148e:	1a64      	subs	r4, r4, r1
 8011490:	9703      	str	r7, [sp, #12]
 8011492:	f04f 0a00 	mov.w	sl, #0
 8011496:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801149a:	1964      	adds	r4, r4, r5
 801149c:	bf58      	it	pl
 801149e:	9f03      	ldrpl	r7, [sp, #12]
 80114a0:	f8bc b004 	ldrh.w	fp, [ip, #4]
 80114a4:	bf48      	it	mi
 80114a6:	4647      	movmi	r7, r8
 80114a8:	44bb      	add	fp, r7
 80114aa:	f8ac b004 	strh.w	fp, [ip, #4]
 80114ae:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80114b2:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 80114b6:	f8ac b006 	strh.w	fp, [ip, #6]
 80114ba:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80114be:	443b      	add	r3, r7
 80114c0:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80114c4:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 80114c8:	bf58      	it	pl
 80114ca:	1a64      	subpl	r4, r4, r1
 80114cc:	ea5b 0707 	orrs.w	r7, fp, r7
 80114d0:	444e      	add	r6, r9
 80114d2:	d011      	beq.n	80114f8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 80114d4:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 80114d8:	f1bb 0f00 	cmp.w	fp, #0
 80114dc:	db0c      	blt.n	80114f8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 80114de:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80114e0:	45bb      	cmp	fp, r7
 80114e2:	da09      	bge.n	80114f8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 80114e4:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 80114e8:	45bb      	cmp	fp, r7
 80114ea:	bf3c      	itt	cc
 80114ec:	f10c 0708 	addcc.w	r7, ip, #8
 80114f0:	6107      	strcc	r7, [r0, #16]
 80114f2:	f10b 0701 	add.w	r7, fp, #1
 80114f6:	6087      	str	r7, [r0, #8]
 80114f8:	6907      	ldr	r7, [r0, #16]
 80114fa:	45b6      	cmp	lr, r6
 80114fc:	803e      	strh	r6, [r7, #0]
 80114fe:	807a      	strh	r2, [r7, #2]
 8011500:	f8a7 a004 	strh.w	sl, [r7, #4]
 8011504:	f8a7 a006 	strh.w	sl, [r7, #6]
 8011508:	d1c5      	bne.n	8011496 <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 801150a:	9a04      	ldr	r2, [sp, #16]
 801150c:	1ad3      	subs	r3, r2, r3
 801150e:	6902      	ldr	r2, [r0, #16]
 8011510:	8891      	ldrh	r1, [r2, #4]
 8011512:	88d6      	ldrh	r6, [r2, #6]
 8011514:	4419      	add	r1, r3
 8011516:	8091      	strh	r1, [r2, #4]
 8011518:	9902      	ldr	r1, [sp, #8]
 801151a:	f101 0c20 	add.w	ip, r1, #32
 801151e:	9901      	ldr	r1, [sp, #4]
 8011520:	ebac 0c01 	sub.w	ip, ip, r1
 8011524:	fb03 630c 	mla	r3, r3, ip, r6
 8011528:	80d3      	strh	r3, [r2, #6]
 801152a:	e74c      	b.n	80113c6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801152c:	9d05      	ldr	r5, [sp, #20]
 801152e:	1aa2      	subs	r2, r4, r2
 8011530:	eba5 0501 	sub.w	r5, r5, r1
 8011534:	9508      	str	r5, [sp, #32]
 8011536:	9202      	str	r2, [sp, #8]
 8011538:	f140 8128 	bpl.w	801178c <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 801153c:	9a03      	ldr	r2, [sp, #12]
 801153e:	2a00      	cmp	r2, #0
 8011540:	f6ff af41 	blt.w	80113c6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8011544:	9a02      	ldr	r2, [sp, #8]
 8011546:	4252      	negs	r2, r2
 8011548:	9202      	str	r2, [sp, #8]
 801154a:	9a06      	ldr	r2, [sp, #24]
 801154c:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 8011550:	f04f 34ff 	mov.w	r4, #4294967295
 8011554:	9206      	str	r2, [sp, #24]
 8011556:	462a      	mov	r2, r5
 8011558:	940b      	str	r4, [sp, #44]	; 0x2c
 801155a:	435a      	muls	r2, r3
 801155c:	2400      	movs	r4, #0
 801155e:	9d02      	ldr	r5, [sp, #8]
 8011560:	9401      	str	r4, [sp, #4]
 8011562:	9c02      	ldr	r4, [sp, #8]
 8011564:	fb92 f4f4 	sdiv	r4, r2, r4
 8011568:	fb05 2214 	mls	r2, r5, r4, r2
 801156c:	2a00      	cmp	r2, #0
 801156e:	9207      	str	r2, [sp, #28]
 8011570:	bfbc      	itt	lt
 8011572:	1952      	addlt	r2, r2, r5
 8011574:	9207      	strlt	r2, [sp, #28]
 8011576:	9a01      	ldr	r2, [sp, #4]
 8011578:	6905      	ldr	r5, [r0, #16]
 801157a:	bfb8      	it	lt
 801157c:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8011580:	eb04 0901 	add.w	r9, r4, r1
 8011584:	429a      	cmp	r2, r3
 8011586:	ea4f 1669 	mov.w	r6, r9, asr #5
 801158a:	f040 8112 	bne.w	80117b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 801158e:	f9b5 3000 	ldrsh.w	r3, [r5]
 8011592:	429e      	cmp	r6, r3
 8011594:	d104      	bne.n	80115a0 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 8011596:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801159a:	9a03      	ldr	r2, [sp, #12]
 801159c:	429a      	cmp	r2, r3
 801159e:	d01b      	beq.n	80115d8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 80115a0:	88ea      	ldrh	r2, [r5, #6]
 80115a2:	88ab      	ldrh	r3, [r5, #4]
 80115a4:	4313      	orrs	r3, r2
 80115a6:	d010      	beq.n	80115ca <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 80115a8:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80115ac:	2a00      	cmp	r2, #0
 80115ae:	db0c      	blt.n	80115ca <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 80115b0:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80115b2:	429a      	cmp	r2, r3
 80115b4:	da09      	bge.n	80115ca <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 80115b6:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 80115ba:	429a      	cmp	r2, r3
 80115bc:	bf38      	it	cc
 80115be:	3508      	addcc	r5, #8
 80115c0:	f102 0201 	add.w	r2, r2, #1
 80115c4:	bf38      	it	cc
 80115c6:	6105      	strcc	r5, [r0, #16]
 80115c8:	6082      	str	r2, [r0, #8]
 80115ca:	6903      	ldr	r3, [r0, #16]
 80115cc:	9a03      	ldr	r2, [sp, #12]
 80115ce:	805a      	strh	r2, [r3, #2]
 80115d0:	2200      	movs	r2, #0
 80115d2:	801e      	strh	r6, [r3, #0]
 80115d4:	809a      	strh	r2, [r3, #4]
 80115d6:	80da      	strh	r2, [r3, #6]
 80115d8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80115da:	9a03      	ldr	r2, [sp, #12]
 80115dc:	6901      	ldr	r1, [r0, #16]
 80115de:	441a      	add	r2, r3
 80115e0:	f9b1 3000 	ldrsh.w	r3, [r1]
 80115e4:	42b3      	cmp	r3, r6
 80115e6:	d103      	bne.n	80115f0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 80115e8:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 80115ec:	429a      	cmp	r2, r3
 80115ee:	d01a      	beq.n	8011626 <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 80115f0:	88cc      	ldrh	r4, [r1, #6]
 80115f2:	888b      	ldrh	r3, [r1, #4]
 80115f4:	4323      	orrs	r3, r4
 80115f6:	d010      	beq.n	801161a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80115f8:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 80115fc:	2c00      	cmp	r4, #0
 80115fe:	db0c      	blt.n	801161a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8011600:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8011602:	429c      	cmp	r4, r3
 8011604:	da09      	bge.n	801161a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8011606:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 801160a:	429c      	cmp	r4, r3
 801160c:	bf38      	it	cc
 801160e:	3108      	addcc	r1, #8
 8011610:	f104 0401 	add.w	r4, r4, #1
 8011614:	bf38      	it	cc
 8011616:	6101      	strcc	r1, [r0, #16]
 8011618:	6084      	str	r4, [r0, #8]
 801161a:	6903      	ldr	r3, [r0, #16]
 801161c:	2100      	movs	r1, #0
 801161e:	801e      	strh	r6, [r3, #0]
 8011620:	805a      	strh	r2, [r3, #2]
 8011622:	8099      	strh	r1, [r3, #4]
 8011624:	80d9      	strh	r1, [r3, #6]
 8011626:	9b06      	ldr	r3, [sp, #24]
 8011628:	4293      	cmp	r3, r2
 801162a:	f000 8082 	beq.w	8011732 <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 801162e:	9b08      	ldr	r3, [sp, #32]
 8011630:	9c02      	ldr	r4, [sp, #8]
 8011632:	9902      	ldr	r1, [sp, #8]
 8011634:	015b      	lsls	r3, r3, #5
 8011636:	fb93 f1f1 	sdiv	r1, r3, r1
 801163a:	fb04 3311 	mls	r3, r4, r1, r3
 801163e:	2b00      	cmp	r3, #0
 8011640:	9103      	str	r1, [sp, #12]
 8011642:	9308      	str	r3, [sp, #32]
 8011644:	da04      	bge.n	8011650 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 8011646:	1e4b      	subs	r3, r1, #1
 8011648:	9303      	str	r3, [sp, #12]
 801164a:	9b08      	ldr	r3, [sp, #32]
 801164c:	4423      	add	r3, r4
 801164e:	9308      	str	r3, [sp, #32]
 8011650:	9b07      	ldr	r3, [sp, #28]
 8011652:	9902      	ldr	r1, [sp, #8]
 8011654:	1a5b      	subs	r3, r3, r1
 8011656:	9307      	str	r3, [sp, #28]
 8011658:	9b01      	ldr	r3, [sp, #4]
 801165a:	f1c3 0320 	rsb	r3, r3, #32
 801165e:	930e      	str	r3, [sp, #56]	; 0x38
 8011660:	990e      	ldr	r1, [sp, #56]	; 0x38
 8011662:	9b01      	ldr	r3, [sp, #4]
 8011664:	1a5b      	subs	r3, r3, r1
 8011666:	464f      	mov	r7, r9
 8011668:	930a      	str	r3, [sp, #40]	; 0x28
 801166a:	2600      	movs	r6, #0
 801166c:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 8011670:	185b      	adds	r3, r3, r1
 8011672:	bf58      	it	pl
 8011674:	9902      	ldrpl	r1, [sp, #8]
 8011676:	9307      	str	r3, [sp, #28]
 8011678:	bf5d      	ittte	pl
 801167a:	1a5b      	subpl	r3, r3, r1
 801167c:	9307      	strpl	r3, [sp, #28]
 801167e:	9b03      	ldrpl	r3, [sp, #12]
 8011680:	9903      	ldrmi	r1, [sp, #12]
 8011682:	bf58      	it	pl
 8011684:	1c59      	addpl	r1, r3, #1
 8011686:	4489      	add	r9, r1
 8011688:	2a00      	cmp	r2, #0
 801168a:	ea4f 1a69 	mov.w	sl, r9, asr #5
 801168e:	db2e      	blt.n	80116ee <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8011690:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8011692:	4293      	cmp	r3, r2
 8011694:	dd2b      	ble.n	80116ee <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8011696:	9c01      	ldr	r4, [sp, #4]
 8011698:	6905      	ldr	r5, [r0, #16]
 801169a:	46a0      	mov	r8, r4
 801169c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801169e:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 80116a2:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 80116a6:	45a0      	cmp	r8, r4
 80116a8:	f040 814f 	bne.w	801194a <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 80116ac:	f9b5 1000 	ldrsh.w	r1, [r5]
 80116b0:	4551      	cmp	r1, sl
 80116b2:	d103      	bne.n	80116bc <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 80116b4:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 80116b8:	4291      	cmp	r1, r2
 80116ba:	d018      	beq.n	80116ee <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 80116bc:	ea5c 010e 	orrs.w	r1, ip, lr
 80116c0:	d00f      	beq.n	80116e2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 80116c2:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 80116c6:	2900      	cmp	r1, #0
 80116c8:	db0b      	blt.n	80116e2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 80116ca:	428b      	cmp	r3, r1
 80116cc:	dd09      	ble.n	80116e2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 80116ce:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 80116d2:	4299      	cmp	r1, r3
 80116d4:	bf38      	it	cc
 80116d6:	3508      	addcc	r5, #8
 80116d8:	f101 0101 	add.w	r1, r1, #1
 80116dc:	bf38      	it	cc
 80116de:	6105      	strcc	r5, [r0, #16]
 80116e0:	6081      	str	r1, [r0, #8]
 80116e2:	6903      	ldr	r3, [r0, #16]
 80116e4:	f8a3 a000 	strh.w	sl, [r3]
 80116e8:	805a      	strh	r2, [r3, #2]
 80116ea:	809e      	strh	r6, [r3, #4]
 80116ec:	80de      	strh	r6, [r3, #6]
 80116ee:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80116f0:	6901      	ldr	r1, [r0, #16]
 80116f2:	441a      	add	r2, r3
 80116f4:	88cc      	ldrh	r4, [r1, #6]
 80116f6:	888b      	ldrh	r3, [r1, #4]
 80116f8:	4323      	orrs	r3, r4
 80116fa:	d010      	beq.n	801171e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 80116fc:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 8011700:	2c00      	cmp	r4, #0
 8011702:	db0c      	blt.n	801171e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8011704:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8011706:	429c      	cmp	r4, r3
 8011708:	da09      	bge.n	801171e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 801170a:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 801170e:	429c      	cmp	r4, r3
 8011710:	bf38      	it	cc
 8011712:	3108      	addcc	r1, #8
 8011714:	f104 0401 	add.w	r4, r4, #1
 8011718:	bf38      	it	cc
 801171a:	6101      	strcc	r1, [r0, #16]
 801171c:	6084      	str	r4, [r0, #8]
 801171e:	6903      	ldr	r3, [r0, #16]
 8011720:	f8a3 a000 	strh.w	sl, [r3]
 8011724:	805a      	strh	r2, [r3, #2]
 8011726:	809e      	strh	r6, [r3, #4]
 8011728:	80de      	strh	r6, [r3, #6]
 801172a:	9b06      	ldr	r3, [sp, #24]
 801172c:	4293      	cmp	r3, r2
 801172e:	464f      	mov	r7, r9
 8011730:	d19c      	bne.n	801166c <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 8011732:	9b01      	ldr	r3, [sp, #4]
 8011734:	6907      	ldr	r7, [r0, #16]
 8011736:	f1c3 0620 	rsb	r6, r3, #32
 801173a:	9b05      	ldr	r3, [sp, #20]
 801173c:	ea4f 1e63 	mov.w	lr, r3, asr #5
 8011740:	9b04      	ldr	r3, [sp, #16]
 8011742:	429e      	cmp	r6, r3
 8011744:	f040 81cc 	bne.w	8011ae0 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 8011748:	f9b7 3000 	ldrsh.w	r3, [r7]
 801174c:	459e      	cmp	lr, r3
 801174e:	d104      	bne.n	801175a <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 8011750:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8011754:	429a      	cmp	r2, r3
 8011756:	f43f ae36 	beq.w	80113c6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801175a:	88f9      	ldrh	r1, [r7, #6]
 801175c:	88bb      	ldrh	r3, [r7, #4]
 801175e:	430b      	orrs	r3, r1
 8011760:	d010      	beq.n	8011784 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8011762:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8011766:	2b00      	cmp	r3, #0
 8011768:	db0c      	blt.n	8011784 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 801176a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 801176c:	428b      	cmp	r3, r1
 801176e:	da09      	bge.n	8011784 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8011770:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8011774:	428b      	cmp	r3, r1
 8011776:	bf38      	it	cc
 8011778:	3708      	addcc	r7, #8
 801177a:	f103 0301 	add.w	r3, r3, #1
 801177e:	bf38      	it	cc
 8011780:	6107      	strcc	r7, [r0, #16]
 8011782:	6083      	str	r3, [r0, #8]
 8011784:	6903      	ldr	r3, [r0, #16]
 8011786:	f8a3 e000 	strh.w	lr, [r3]
 801178a:	e5ff      	b.n	801138c <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 801178c:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 801178e:	9c03      	ldr	r4, [sp, #12]
 8011790:	42a2      	cmp	r2, r4
 8011792:	f6ff ae18 	blt.w	80113c6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8011796:	9c06      	ldr	r4, [sp, #24]
 8011798:	42a2      	cmp	r2, r4
 801179a:	bfb8      	it	lt
 801179c:	3201      	addlt	r2, #1
 801179e:	9c08      	ldr	r4, [sp, #32]
 80117a0:	bfb8      	it	lt
 80117a2:	9206      	strlt	r2, [sp, #24]
 80117a4:	f1c3 0220 	rsb	r2, r3, #32
 80117a8:	4362      	muls	r2, r4
 80117aa:	2401      	movs	r4, #1
 80117ac:	940b      	str	r4, [sp, #44]	; 0x2c
 80117ae:	2420      	movs	r4, #32
 80117b0:	e6d5      	b.n	801155e <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 80117b2:	f009 021f 	and.w	r2, r9, #31
 80117b6:	ea4f 1861 	mov.w	r8, r1, asr #5
 80117ba:	920c      	str	r2, [sp, #48]	; 0x30
 80117bc:	9a01      	ldr	r2, [sp, #4]
 80117be:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 80117c2:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 80117c6:	45b0      	cmp	r8, r6
 80117c8:	f001 011f 	and.w	r1, r1, #31
 80117cc:	eba2 0203 	sub.w	r2, r2, r3
 80117d0:	d108      	bne.n	80117e4 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 80117d2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80117d4:	4419      	add	r1, r3
 80117d6:	4496      	add	lr, r2
 80117d8:	fb02 a101 	mla	r1, r2, r1, sl
 80117dc:	f8a5 e004 	strh.w	lr, [r5, #4]
 80117e0:	80e9      	strh	r1, [r5, #6]
 80117e2:	e6f9      	b.n	80115d8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 80117e4:	2c00      	cmp	r4, #0
 80117e6:	f2c0 80a9 	blt.w	801193c <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 80117ea:	2701      	movs	r7, #1
 80117ec:	f1c1 0c20 	rsb	ip, r1, #32
 80117f0:	970a      	str	r7, [sp, #40]	; 0x28
 80117f2:	fb02 f20c 	mul.w	r2, r2, ip
 80117f6:	2720      	movs	r7, #32
 80117f8:	9709      	str	r7, [sp, #36]	; 0x24
 80117fa:	fb92 fcf4 	sdiv	ip, r2, r4
 80117fe:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8011800:	fb04 221c 	mls	r2, r4, ip, r2
 8011804:	2a00      	cmp	r2, #0
 8011806:	bfb8      	it	lt
 8011808:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 801180c:	4439      	add	r1, r7
 801180e:	fb0c a101 	mla	r1, ip, r1, sl
 8011812:	80e9      	strh	r1, [r5, #6]
 8011814:	44e6      	add	lr, ip
 8011816:	990a      	ldr	r1, [sp, #40]	; 0x28
 8011818:	f8a5 e004 	strh.w	lr, [r5, #4]
 801181c:	eb08 0501 	add.w	r5, r8, r1
 8011820:	6901      	ldr	r1, [r0, #16]
 8011822:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 8011826:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 801182a:	bfb8      	it	lt
 801182c:	1912      	addlt	r2, r2, r4
 801182e:	ea58 070e 	orrs.w	r7, r8, lr
 8011832:	d010      	beq.n	8011856 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8011834:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 8011838:	f1be 0f00 	cmp.w	lr, #0
 801183c:	db0b      	blt.n	8011856 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 801183e:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8011840:	45be      	cmp	lr, r7
 8011842:	da08      	bge.n	8011856 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8011844:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8011848:	45be      	cmp	lr, r7
 801184a:	bf3c      	itt	cc
 801184c:	3108      	addcc	r1, #8
 801184e:	6101      	strcc	r1, [r0, #16]
 8011850:	f10e 0101 	add.w	r1, lr, #1
 8011854:	6081      	str	r1, [r0, #8]
 8011856:	6901      	ldr	r1, [r0, #16]
 8011858:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801185c:	800d      	strh	r5, [r1, #0]
 801185e:	f04f 0e00 	mov.w	lr, #0
 8011862:	42ae      	cmp	r6, r5
 8011864:	f8a1 8002 	strh.w	r8, [r1, #2]
 8011868:	f8a1 e004 	strh.w	lr, [r1, #4]
 801186c:	f8a1 e006 	strh.w	lr, [r1, #6]
 8011870:	4463      	add	r3, ip
 8011872:	d054      	beq.n	801191e <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 8011874:	9901      	ldr	r1, [sp, #4]
 8011876:	1ac9      	subs	r1, r1, r3
 8011878:	4461      	add	r1, ip
 801187a:	0149      	lsls	r1, r1, #5
 801187c:	fb91 fef4 	sdiv	lr, r1, r4
 8011880:	fb04 111e 	mls	r1, r4, lr, r1
 8011884:	2900      	cmp	r1, #0
 8011886:	bfb8      	it	lt
 8011888:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 801188c:	f10e 0701 	add.w	r7, lr, #1
 8011890:	bfb8      	it	lt
 8011892:	1909      	addlt	r1, r1, r4
 8011894:	1b12      	subs	r2, r2, r4
 8011896:	970d      	str	r7, [sp, #52]	; 0x34
 8011898:	f8d0 a010 	ldr.w	sl, [r0, #16]
 801189c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801189e:	f8ba b004 	ldrh.w	fp, [sl, #4]
 80118a2:	1852      	adds	r2, r2, r1
 80118a4:	bf54      	ite	pl
 80118a6:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
 80118aa:	46f4      	movmi	ip, lr
 80118ac:	44e3      	add	fp, ip
 80118ae:	f8aa b004 	strh.w	fp, [sl, #4]
 80118b2:	f8ba b006 	ldrh.w	fp, [sl, #6]
 80118b6:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 80118ba:	f8aa b006 	strh.w	fp, [sl, #6]
 80118be:	4463      	add	r3, ip
 80118c0:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80118c4:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80118c8:	f8bc a004 	ldrh.w	sl, [ip, #4]
 80118cc:	bf58      	it	pl
 80118ce:	1b12      	subpl	r2, r2, r4
 80118d0:	443d      	add	r5, r7
 80118d2:	ea5b 070a 	orrs.w	r7, fp, sl
 80118d6:	d014      	beq.n	8011902 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 80118d8:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 80118dc:	f1ba 0f00 	cmp.w	sl, #0
 80118e0:	db0f      	blt.n	8011902 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 80118e2:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80118e4:	45ba      	cmp	sl, r7
 80118e6:	da0c      	bge.n	8011902 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 80118e8:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 80118ec:	45ba      	cmp	sl, r7
 80118ee:	bf38      	it	cc
 80118f0:	f10c 0c08 	addcc.w	ip, ip, #8
 80118f4:	f10a 0a01 	add.w	sl, sl, #1
 80118f8:	bf38      	it	cc
 80118fa:	f8c0 c010 	strcc.w	ip, [r0, #16]
 80118fe:	f8c0 a008 	str.w	sl, [r0, #8]
 8011902:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8011906:	f04f 0700 	mov.w	r7, #0
 801190a:	42ae      	cmp	r6, r5
 801190c:	f8ac 5000 	strh.w	r5, [ip]
 8011910:	f8ac 8002 	strh.w	r8, [ip, #2]
 8011914:	f8ac 7004 	strh.w	r7, [ip, #4]
 8011918:	f8ac 7006 	strh.w	r7, [ip, #6]
 801191c:	d1bc      	bne.n	8011898 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 801191e:	6904      	ldr	r4, [r0, #16]
 8011920:	9a01      	ldr	r2, [sp, #4]
 8011922:	990c      	ldr	r1, [sp, #48]	; 0x30
 8011924:	1ad3      	subs	r3, r2, r3
 8011926:	88a2      	ldrh	r2, [r4, #4]
 8011928:	441a      	add	r2, r3
 801192a:	80a2      	strh	r2, [r4, #4]
 801192c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801192e:	3120      	adds	r1, #32
 8011930:	1a89      	subs	r1, r1, r2
 8011932:	88e2      	ldrh	r2, [r4, #6]
 8011934:	fb03 2301 	mla	r3, r3, r1, r2
 8011938:	80e3      	strh	r3, [r4, #6]
 801193a:	e64d      	b.n	80115d8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 801193c:	f04f 37ff 	mov.w	r7, #4294967295
 8011940:	970a      	str	r7, [sp, #40]	; 0x28
 8011942:	434a      	muls	r2, r1
 8011944:	4264      	negs	r4, r4
 8011946:	2700      	movs	r7, #0
 8011948:	e756      	b.n	80117f8 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 801194a:	ea4f 1867 	mov.w	r8, r7, asr #5
 801194e:	f009 031f 	and.w	r3, r9, #31
 8011952:	45d0      	cmp	r8, sl
 8011954:	f007 071f 	and.w	r7, r7, #31
 8011958:	930f      	str	r3, [sp, #60]	; 0x3c
 801195a:	fa1f fc8c 	uxth.w	ip, ip
 801195e:	fa1f fe8e 	uxth.w	lr, lr
 8011962:	d10a      	bne.n	801197a <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 8011964:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8011966:	449c      	add	ip, r3
 8011968:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801196a:	f8a5 c004 	strh.w	ip, [r5, #4]
 801196e:	441f      	add	r7, r3
 8011970:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8011972:	fb03 e707 	mla	r7, r3, r7, lr
 8011976:	80ef      	strh	r7, [r5, #6]
 8011978:	e6b9      	b.n	80116ee <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 801197a:	2900      	cmp	r1, #0
 801197c:	f2c0 80a8 	blt.w	8011ad0 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 8011980:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8011982:	f1c7 0320 	rsb	r3, r7, #32
 8011986:	4363      	muls	r3, r4
 8011988:	2401      	movs	r4, #1
 801198a:	940d      	str	r4, [sp, #52]	; 0x34
 801198c:	2420      	movs	r4, #32
 801198e:	940c      	str	r4, [sp, #48]	; 0x30
 8011990:	fb93 f4f1 	sdiv	r4, r3, r1
 8011994:	fb01 3b14 	mls	fp, r1, r4, r3
 8011998:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801199a:	f1bb 0f00 	cmp.w	fp, #0
 801199e:	bfb8      	it	lt
 80119a0:	f104 34ff 	addlt.w	r4, r4, #4294967295
 80119a4:	441f      	add	r7, r3
 80119a6:	fb04 e707 	mla	r7, r4, r7, lr
 80119aa:	44a4      	add	ip, r4
 80119ac:	f8a5 c004 	strh.w	ip, [r5, #4]
 80119b0:	80ef      	strh	r7, [r5, #6]
 80119b2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80119b6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80119b8:	f8bc e006 	ldrh.w	lr, [ip, #6]
 80119bc:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 80119c0:	bfb8      	it	lt
 80119c2:	448b      	addlt	fp, r1
 80119c4:	eb08 0503 	add.w	r5, r8, r3
 80119c8:	ea5e 0307 	orrs.w	r3, lr, r7
 80119cc:	d011      	beq.n	80119f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 80119ce:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 80119d2:	f1be 0f00 	cmp.w	lr, #0
 80119d6:	db0c      	blt.n	80119f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 80119d8:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80119da:	45be      	cmp	lr, r7
 80119dc:	da09      	bge.n	80119f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 80119de:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 80119e2:	45be      	cmp	lr, r7
 80119e4:	bf3c      	itt	cc
 80119e6:	f10c 0708 	addcc.w	r7, ip, #8
 80119ea:	6107      	strcc	r7, [r0, #16]
 80119ec:	f10e 0701 	add.w	r7, lr, #1
 80119f0:	6087      	str	r7, [r0, #8]
 80119f2:	6907      	ldr	r7, [r0, #16]
 80119f4:	b213      	sxth	r3, r2
 80119f6:	9310      	str	r3, [sp, #64]	; 0x40
 80119f8:	807b      	strh	r3, [r7, #2]
 80119fa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80119fc:	803d      	strh	r5, [r7, #0]
 80119fe:	4555      	cmp	r5, sl
 8011a00:	80be      	strh	r6, [r7, #4]
 8011a02:	80fe      	strh	r6, [r7, #6]
 8011a04:	eb04 0c03 	add.w	ip, r4, r3
 8011a08:	d051      	beq.n	8011aae <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 8011a0a:	9b01      	ldr	r3, [sp, #4]
 8011a0c:	eba3 070c 	sub.w	r7, r3, ip
 8011a10:	443c      	add	r4, r7
 8011a12:	0164      	lsls	r4, r4, #5
 8011a14:	fb94 f8f1 	sdiv	r8, r4, r1
 8011a18:	fb01 4418 	mls	r4, r1, r8, r4
 8011a1c:	2c00      	cmp	r4, #0
 8011a1e:	bfb8      	it	lt
 8011a20:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8011a24:	ebab 0301 	sub.w	r3, fp, r1
 8011a28:	f108 0701 	add.w	r7, r8, #1
 8011a2c:	bfb8      	it	lt
 8011a2e:	1864      	addlt	r4, r4, r1
 8011a30:	9309      	str	r3, [sp, #36]	; 0x24
 8011a32:	9711      	str	r7, [sp, #68]	; 0x44
 8011a34:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8011a36:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8011a3a:	191b      	adds	r3, r3, r4
 8011a3c:	bf58      	it	pl
 8011a3e:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
 8011a40:	f8be b004 	ldrh.w	fp, [lr, #4]
 8011a44:	9309      	str	r3, [sp, #36]	; 0x24
 8011a46:	bf48      	it	mi
 8011a48:	4647      	movmi	r7, r8
 8011a4a:	44bb      	add	fp, r7
 8011a4c:	f8ae b004 	strh.w	fp, [lr, #4]
 8011a50:	f8be b006 	ldrh.w	fp, [lr, #6]
 8011a54:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8011a58:	f8ae b006 	strh.w	fp, [lr, #6]
 8011a5c:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8011a60:	44bc      	add	ip, r7
 8011a62:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8011a64:	f8be b006 	ldrh.w	fp, [lr, #6]
 8011a68:	443d      	add	r5, r7
 8011a6a:	f8be 7004 	ldrh.w	r7, [lr, #4]
 8011a6e:	bf5c      	itt	pl
 8011a70:	1a5b      	subpl	r3, r3, r1
 8011a72:	9309      	strpl	r3, [sp, #36]	; 0x24
 8011a74:	ea5b 0307 	orrs.w	r3, fp, r7
 8011a78:	d011      	beq.n	8011a9e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8011a7a:	f9be b002 	ldrsh.w	fp, [lr, #2]
 8011a7e:	f1bb 0f00 	cmp.w	fp, #0
 8011a82:	db0c      	blt.n	8011a9e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8011a84:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8011a86:	45bb      	cmp	fp, r7
 8011a88:	da09      	bge.n	8011a9e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8011a8a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8011a8e:	45bb      	cmp	fp, r7
 8011a90:	bf3c      	itt	cc
 8011a92:	f10e 0708 	addcc.w	r7, lr, #8
 8011a96:	6107      	strcc	r7, [r0, #16]
 8011a98:	f10b 0701 	add.w	r7, fp, #1
 8011a9c:	6087      	str	r7, [r0, #8]
 8011a9e:	6907      	ldr	r7, [r0, #16]
 8011aa0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011aa2:	803d      	strh	r5, [r7, #0]
 8011aa4:	4555      	cmp	r5, sl
 8011aa6:	807b      	strh	r3, [r7, #2]
 8011aa8:	80be      	strh	r6, [r7, #4]
 8011aaa:	80fe      	strh	r6, [r7, #6]
 8011aac:	d1c2      	bne.n	8011a34 <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 8011aae:	9b01      	ldr	r3, [sp, #4]
 8011ab0:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8011ab2:	eba3 0c0c 	sub.w	ip, r3, ip
 8011ab6:	6903      	ldr	r3, [r0, #16]
 8011ab8:	8899      	ldrh	r1, [r3, #4]
 8011aba:	4461      	add	r1, ip
 8011abc:	8099      	strh	r1, [r3, #4]
 8011abe:	990c      	ldr	r1, [sp, #48]	; 0x30
 8011ac0:	3720      	adds	r7, #32
 8011ac2:	1a7f      	subs	r7, r7, r1
 8011ac4:	88d9      	ldrh	r1, [r3, #6]
 8011ac6:	fb0c 1c07 	mla	ip, ip, r7, r1
 8011aca:	f8a3 c006 	strh.w	ip, [r3, #6]
 8011ace:	e60e      	b.n	80116ee <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8011ad0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8011ad2:	f04f 34ff 	mov.w	r4, #4294967295
 8011ad6:	940d      	str	r4, [sp, #52]	; 0x34
 8011ad8:	437b      	muls	r3, r7
 8011ada:	4249      	negs	r1, r1
 8011adc:	2400      	movs	r4, #0
 8011ade:	e756      	b.n	801198e <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 8011ae0:	9905      	ldr	r1, [sp, #20]
 8011ae2:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 8011ae6:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 8011aea:	f001 011f 	and.w	r1, r1, #31
 8011aee:	ea4f 1b69 	mov.w	fp, r9, asr #5
 8011af2:	9102      	str	r1, [sp, #8]
 8011af4:	9904      	ldr	r1, [sp, #16]
 8011af6:	45f3      	cmp	fp, lr
 8011af8:	f009 0c1f 	and.w	ip, r9, #31
 8011afc:	eba1 0406 	sub.w	r4, r1, r6
 8011b00:	d108      	bne.n	8011b14 <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 8011b02:	9b02      	ldr	r3, [sp, #8]
 8011b04:	449c      	add	ip, r3
 8011b06:	44a0      	add	r8, r4
 8011b08:	fb04 a40c 	mla	r4, r4, ip, sl
 8011b0c:	f8a7 8004 	strh.w	r8, [r7, #4]
 8011b10:	80fc      	strh	r4, [r7, #6]
 8011b12:	e458      	b.n	80113c6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8011b14:	9905      	ldr	r1, [sp, #20]
 8011b16:	ebb1 0109 	subs.w	r1, r1, r9
 8011b1a:	bf5b      	ittet	pl
 8011b1c:	f1cc 0520 	rsbpl	r5, ip, #32
 8011b20:	436c      	mulpl	r4, r5
 8011b22:	2500      	movmi	r5, #0
 8011b24:	2520      	movpl	r5, #32
 8011b26:	bf44      	itt	mi
 8011b28:	fb04 f40c 	mulmi.w	r4, r4, ip
 8011b2c:	4249      	negmi	r1, r1
 8011b2e:	9501      	str	r5, [sp, #4]
 8011b30:	9b01      	ldr	r3, [sp, #4]
 8011b32:	fb94 f5f1 	sdiv	r5, r4, r1
 8011b36:	fb01 4415 	mls	r4, r1, r5, r4
 8011b3a:	bf54      	ite	pl
 8011b3c:	f04f 0901 	movpl.w	r9, #1
 8011b40:	f04f 39ff 	movmi.w	r9, #4294967295
 8011b44:	2c00      	cmp	r4, #0
 8011b46:	bfb8      	it	lt
 8011b48:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8011b4c:	449c      	add	ip, r3
 8011b4e:	44a8      	add	r8, r5
 8011b50:	fb05 ac0c 	mla	ip, r5, ip, sl
 8011b54:	f8a7 8004 	strh.w	r8, [r7, #4]
 8011b58:	f8a7 c006 	strh.w	ip, [r7, #6]
 8011b5c:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8011b60:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 8011b64:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8011b68:	bfb8      	it	lt
 8011b6a:	1864      	addlt	r4, r4, r1
 8011b6c:	ea58 0707 	orrs.w	r7, r8, r7
 8011b70:	eb0b 0309 	add.w	r3, fp, r9
 8011b74:	d011      	beq.n	8011b9a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8011b76:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 8011b7a:	f1b8 0f00 	cmp.w	r8, #0
 8011b7e:	db0c      	blt.n	8011b9a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8011b80:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8011b82:	45b8      	cmp	r8, r7
 8011b84:	da09      	bge.n	8011b9a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8011b86:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 8011b8a:	45b8      	cmp	r8, r7
 8011b8c:	bf3c      	itt	cc
 8011b8e:	f10c 0708 	addcc.w	r7, ip, #8
 8011b92:	6107      	strcc	r7, [r0, #16]
 8011b94:	f108 0701 	add.w	r7, r8, #1
 8011b98:	6087      	str	r7, [r0, #8]
 8011b9a:	6907      	ldr	r7, [r0, #16]
 8011b9c:	f04f 0c00 	mov.w	ip, #0
 8011ba0:	b212      	sxth	r2, r2
 8011ba2:	459e      	cmp	lr, r3
 8011ba4:	803b      	strh	r3, [r7, #0]
 8011ba6:	807a      	strh	r2, [r7, #2]
 8011ba8:	f8a7 c004 	strh.w	ip, [r7, #4]
 8011bac:	f8a7 c006 	strh.w	ip, [r7, #6]
 8011bb0:	442e      	add	r6, r5
 8011bb2:	d04d      	beq.n	8011c50 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 8011bb4:	9f04      	ldr	r7, [sp, #16]
 8011bb6:	1bbf      	subs	r7, r7, r6
 8011bb8:	443d      	add	r5, r7
 8011bba:	016d      	lsls	r5, r5, #5
 8011bbc:	fb95 f8f1 	sdiv	r8, r5, r1
 8011bc0:	fb01 5518 	mls	r5, r1, r8, r5
 8011bc4:	4565      	cmp	r5, ip
 8011bc6:	bfb8      	it	lt
 8011bc8:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8011bcc:	f108 0701 	add.w	r7, r8, #1
 8011bd0:	bfb8      	it	lt
 8011bd2:	186d      	addlt	r5, r5, r1
 8011bd4:	1a64      	subs	r4, r4, r1
 8011bd6:	9703      	str	r7, [sp, #12]
 8011bd8:	f04f 0a00 	mov.w	sl, #0
 8011bdc:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8011be0:	1964      	adds	r4, r4, r5
 8011be2:	bf58      	it	pl
 8011be4:	9f03      	ldrpl	r7, [sp, #12]
 8011be6:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8011bea:	bf48      	it	mi
 8011bec:	4647      	movmi	r7, r8
 8011bee:	44bb      	add	fp, r7
 8011bf0:	f8ac b004 	strh.w	fp, [ip, #4]
 8011bf4:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8011bf8:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8011bfc:	f8ac b006 	strh.w	fp, [ip, #6]
 8011c00:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8011c04:	443e      	add	r6, r7
 8011c06:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8011c0a:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8011c0e:	bf58      	it	pl
 8011c10:	1a64      	subpl	r4, r4, r1
 8011c12:	ea5b 0707 	orrs.w	r7, fp, r7
 8011c16:	444b      	add	r3, r9
 8011c18:	d011      	beq.n	8011c3e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8011c1a:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8011c1e:	f1bb 0f00 	cmp.w	fp, #0
 8011c22:	db0c      	blt.n	8011c3e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8011c24:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8011c26:	45bb      	cmp	fp, r7
 8011c28:	da09      	bge.n	8011c3e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8011c2a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8011c2e:	45bb      	cmp	fp, r7
 8011c30:	bf3c      	itt	cc
 8011c32:	f10c 0708 	addcc.w	r7, ip, #8
 8011c36:	6107      	strcc	r7, [r0, #16]
 8011c38:	f10b 0701 	add.w	r7, fp, #1
 8011c3c:	6087      	str	r7, [r0, #8]
 8011c3e:	6907      	ldr	r7, [r0, #16]
 8011c40:	459e      	cmp	lr, r3
 8011c42:	803b      	strh	r3, [r7, #0]
 8011c44:	807a      	strh	r2, [r7, #2]
 8011c46:	f8a7 a004 	strh.w	sl, [r7, #4]
 8011c4a:	f8a7 a006 	strh.w	sl, [r7, #6]
 8011c4e:	d1c5      	bne.n	8011bdc <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 8011c50:	9b04      	ldr	r3, [sp, #16]
 8011c52:	1b9e      	subs	r6, r3, r6
 8011c54:	6903      	ldr	r3, [r0, #16]
 8011c56:	889a      	ldrh	r2, [r3, #4]
 8011c58:	4432      	add	r2, r6
 8011c5a:	809a      	strh	r2, [r3, #4]
 8011c5c:	9a02      	ldr	r2, [sp, #8]
 8011c5e:	f102 0c20 	add.w	ip, r2, #32
 8011c62:	9a01      	ldr	r2, [sp, #4]
 8011c64:	ebac 0c02 	sub.w	ip, ip, r2
 8011c68:	88da      	ldrh	r2, [r3, #6]
 8011c6a:	fb06 260c 	mla	r6, r6, ip, r2
 8011c6e:	80de      	strh	r6, [r3, #6]
 8011c70:	f7ff bba9 	b.w	80113c6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

08011c74 <_ZN8touchgfx7Outline6lineToEii>:
 8011c74:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8011c76:	079b      	lsls	r3, r3, #30
 8011c78:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8011c7a:	460e      	mov	r6, r1
 8011c7c:	4615      	mov	r5, r2
 8011c7e:	d511      	bpl.n	8011ca4 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8011c80:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 8011c84:	ea86 0701 	eor.w	r7, r6, r1
 8011c88:	ea85 0302 	eor.w	r3, r5, r2
 8011c8c:	433b      	orrs	r3, r7
 8011c8e:	d009      	beq.n	8011ca4 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8011c90:	4633      	mov	r3, r6
 8011c92:	9500      	str	r5, [sp, #0]
 8011c94:	f7ff fb3e 	bl	8011314 <_ZN8touchgfx7Outline10renderLineEiiii>
 8011c98:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8011c9a:	e9c0 6505 	strd	r6, r5, [r0, #20]
 8011c9e:	f043 0301 	orr.w	r3, r3, #1
 8011ca2:	6243      	str	r3, [r0, #36]	; 0x24
 8011ca4:	b003      	add	sp, #12
 8011ca6:	bdf0      	pop	{r4, r5, r6, r7, pc}

08011ca8 <_ZN8touchgfx7Outline6moveToEii>:
 8011ca8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011caa:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8011cac:	4615      	mov	r5, r2
 8011cae:	079a      	lsls	r2, r3, #30
 8011cb0:	4604      	mov	r4, r0
 8011cb2:	460e      	mov	r6, r1
 8011cb4:	d401      	bmi.n	8011cba <_ZN8touchgfx7Outline6moveToEii+0x12>
 8011cb6:	f7ff faf9 	bl	80112ac <_ZN8touchgfx7Outline5resetEv>
 8011cba:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8011cbc:	07db      	lsls	r3, r3, #31
 8011cbe:	d504      	bpl.n	8011cca <_ZN8touchgfx7Outline6moveToEii+0x22>
 8011cc0:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 8011cc4:	4620      	mov	r0, r4
 8011cc6:	f7ff ffd5 	bl	8011c74 <_ZN8touchgfx7Outline6lineToEii>
 8011cca:	6923      	ldr	r3, [r4, #16]
 8011ccc:	f9b3 2000 	ldrsh.w	r2, [r3]
 8011cd0:	1170      	asrs	r0, r6, #5
 8011cd2:	4290      	cmp	r0, r2
 8011cd4:	ea4f 1165 	mov.w	r1, r5, asr #5
 8011cd8:	d103      	bne.n	8011ce2 <_ZN8touchgfx7Outline6moveToEii+0x3a>
 8011cda:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8011cde:	4291      	cmp	r1, r2
 8011ce0:	d01a      	beq.n	8011d18 <_ZN8touchgfx7Outline6moveToEii+0x70>
 8011ce2:	88df      	ldrh	r7, [r3, #6]
 8011ce4:	889a      	ldrh	r2, [r3, #4]
 8011ce6:	433a      	orrs	r2, r7
 8011ce8:	d010      	beq.n	8011d0c <_ZN8touchgfx7Outline6moveToEii+0x64>
 8011cea:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8011cee:	2a00      	cmp	r2, #0
 8011cf0:	db0c      	blt.n	8011d0c <_ZN8touchgfx7Outline6moveToEii+0x64>
 8011cf2:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8011cf4:	42ba      	cmp	r2, r7
 8011cf6:	da09      	bge.n	8011d0c <_ZN8touchgfx7Outline6moveToEii+0x64>
 8011cf8:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 8011cfc:	42ba      	cmp	r2, r7
 8011cfe:	bf38      	it	cc
 8011d00:	3308      	addcc	r3, #8
 8011d02:	f102 0201 	add.w	r2, r2, #1
 8011d06:	bf38      	it	cc
 8011d08:	6123      	strcc	r3, [r4, #16]
 8011d0a:	60a2      	str	r2, [r4, #8]
 8011d0c:	6923      	ldr	r3, [r4, #16]
 8011d0e:	2200      	movs	r2, #0
 8011d10:	8018      	strh	r0, [r3, #0]
 8011d12:	8059      	strh	r1, [r3, #2]
 8011d14:	809a      	strh	r2, [r3, #4]
 8011d16:	80da      	strh	r2, [r3, #6]
 8011d18:	6166      	str	r6, [r4, #20]
 8011d1a:	e9c4 5606 	strd	r5, r6, [r4, #24]
 8011d1e:	6225      	str	r5, [r4, #32]
 8011d20:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08011d22 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 8011d22:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011d26:	b0d0      	sub	sp, #320	; 0x140
 8011d28:	466c      	mov	r4, sp
 8011d2a:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 8011d2e:	4627      	mov	r7, r4
 8011d30:	1a0d      	subs	r5, r1, r0
 8011d32:	2d48      	cmp	r5, #72	; 0x48
 8011d34:	f100 0308 	add.w	r3, r0, #8
 8011d38:	f340 80d5 	ble.w	8011ee6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 8011d3c:	112d      	asrs	r5, r5, #4
 8011d3e:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 8011d42:	f9b0 9000 	ldrsh.w	r9, [r0]
 8011d46:	6816      	ldr	r6, [r2, #0]
 8011d48:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 8011d4c:	6006      	str	r6, [r0, #0]
 8011d4e:	6856      	ldr	r6, [r2, #4]
 8011d50:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8011d54:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8011d58:	6046      	str	r6, [r0, #4]
 8011d5a:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8011d5e:	f8a2 8002 	strh.w	r8, [r2, #2]
 8011d62:	f8a2 e004 	strh.w	lr, [r2, #4]
 8011d66:	f8a2 c006 	strh.w	ip, [r2, #6]
 8011d6a:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8011d6e:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 8011d72:	4565      	cmp	r5, ip
 8011d74:	f1a1 0208 	sub.w	r2, r1, #8
 8011d78:	db06      	blt.n	8011d88 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 8011d7a:	d119      	bne.n	8011db0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8011d7c:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 8011d80:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 8011d84:	42ae      	cmp	r6, r5
 8011d86:	dd13      	ble.n	8011db0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8011d88:	460e      	mov	r6, r1
 8011d8a:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 8011d8e:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8011d92:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 8011d96:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 8011d9a:	601d      	str	r5, [r3, #0]
 8011d9c:	6875      	ldr	r5, [r6, #4]
 8011d9e:	605d      	str	r5, [r3, #4]
 8011da0:	f821 9c08 	strh.w	r9, [r1, #-8]
 8011da4:	f821 cc06 	strh.w	ip, [r1, #-6]
 8011da8:	f821 8c04 	strh.w	r8, [r1, #-4]
 8011dac:	f821 ec02 	strh.w	lr, [r1, #-2]
 8011db0:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8011db4:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 8011db8:	42ae      	cmp	r6, r5
 8011dba:	db06      	blt.n	8011dca <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 8011dbc:	d116      	bne.n	8011dec <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 8011dbe:	f9b0 c000 	ldrsh.w	ip, [r0]
 8011dc2:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 8011dc6:	45ac      	cmp	ip, r5
 8011dc8:	da10      	bge.n	8011dec <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 8011dca:	681d      	ldr	r5, [r3, #0]
 8011dcc:	f9b0 8000 	ldrsh.w	r8, [r0]
 8011dd0:	6005      	str	r5, [r0, #0]
 8011dd2:	685d      	ldr	r5, [r3, #4]
 8011dd4:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8011dd8:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8011ddc:	f8a0 8008 	strh.w	r8, [r0, #8]
 8011de0:	6045      	str	r5, [r0, #4]
 8011de2:	8146      	strh	r6, [r0, #10]
 8011de4:	f8a0 e00c 	strh.w	lr, [r0, #12]
 8011de8:	f8a0 c00e 	strh.w	ip, [r0, #14]
 8011dec:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8011df0:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8011df4:	4565      	cmp	r5, ip
 8011df6:	db06      	blt.n	8011e06 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 8011df8:	d119      	bne.n	8011e2e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8011dfa:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 8011dfe:	f9b0 5000 	ldrsh.w	r5, [r0]
 8011e02:	42ae      	cmp	r6, r5
 8011e04:	da13      	bge.n	8011e2e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8011e06:	460e      	mov	r6, r1
 8011e08:	f9b0 9000 	ldrsh.w	r9, [r0]
 8011e0c:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8011e10:	6005      	str	r5, [r0, #0]
 8011e12:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 8011e16:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 8011e1a:	6875      	ldr	r5, [r6, #4]
 8011e1c:	6045      	str	r5, [r0, #4]
 8011e1e:	f821 9c08 	strh.w	r9, [r1, #-8]
 8011e22:	f821 cc06 	strh.w	ip, [r1, #-6]
 8011e26:	f821 8c04 	strh.w	r8, [r1, #-4]
 8011e2a:	f821 ec02 	strh.w	lr, [r1, #-2]
 8011e2e:	3308      	adds	r3, #8
 8011e30:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8011e34:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 8011e38:	45e6      	cmp	lr, ip
 8011e3a:	dbf8      	blt.n	8011e2e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8011e3c:	d105      	bne.n	8011e4a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8011e3e:	f9b3 6000 	ldrsh.w	r6, [r3]
 8011e42:	f9b0 5000 	ldrsh.w	r5, [r0]
 8011e46:	42ae      	cmp	r6, r5
 8011e48:	dbf1      	blt.n	8011e2e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8011e4a:	4615      	mov	r5, r2
 8011e4c:	3a08      	subs	r2, #8
 8011e4e:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 8011e52:	45b4      	cmp	ip, r6
 8011e54:	dbf9      	blt.n	8011e4a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8011e56:	d105      	bne.n	8011e64 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 8011e58:	f9b0 8000 	ldrsh.w	r8, [r0]
 8011e5c:	f9b2 6000 	ldrsh.w	r6, [r2]
 8011e60:	45b0      	cmp	r8, r6
 8011e62:	dbf2      	blt.n	8011e4a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8011e64:	4293      	cmp	r3, r2
 8011e66:	f1a5 0608 	sub.w	r6, r5, #8
 8011e6a:	d816      	bhi.n	8011e9a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 8011e6c:	f8d6 c000 	ldr.w	ip, [r6]
 8011e70:	f9b3 a000 	ldrsh.w	sl, [r3]
 8011e74:	f8c3 c000 	str.w	ip, [r3]
 8011e78:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 8011e7c:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 8011e80:	f8d6 c004 	ldr.w	ip, [r6, #4]
 8011e84:	f8c3 c004 	str.w	ip, [r3, #4]
 8011e88:	f825 ac08 	strh.w	sl, [r5, #-8]
 8011e8c:	f825 ec06 	strh.w	lr, [r5, #-6]
 8011e90:	f825 9c04 	strh.w	r9, [r5, #-4]
 8011e94:	f825 8c02 	strh.w	r8, [r5, #-2]
 8011e98:	e7c9      	b.n	8011e2e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8011e9a:	f8d6 e000 	ldr.w	lr, [r6]
 8011e9e:	f9b0 a000 	ldrsh.w	sl, [r0]
 8011ea2:	f8c0 e000 	str.w	lr, [r0]
 8011ea6:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 8011eaa:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 8011eae:	f8d6 e004 	ldr.w	lr, [r6, #4]
 8011eb2:	f8c0 e004 	str.w	lr, [r0, #4]
 8011eb6:	f825 ac08 	strh.w	sl, [r5, #-8]
 8011eba:	f825 cc06 	strh.w	ip, [r5, #-6]
 8011ebe:	f825 9c04 	strh.w	r9, [r5, #-4]
 8011ec2:	f825 8c02 	strh.w	r8, [r5, #-2]
 8011ec6:	1acd      	subs	r5, r1, r3
 8011ec8:	1a16      	subs	r6, r2, r0
 8011eca:	10ed      	asrs	r5, r5, #3
 8011ecc:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 8011ed0:	bfb5      	itete	lt
 8011ed2:	e9c4 0200 	strdlt	r0, r2, [r4]
 8011ed6:	e9c4 3100 	strdge	r3, r1, [r4]
 8011eda:	460a      	movlt	r2, r1
 8011edc:	4603      	movge	r3, r0
 8011ede:	3408      	adds	r4, #8
 8011ee0:	4618      	mov	r0, r3
 8011ee2:	4611      	mov	r1, r2
 8011ee4:	e724      	b.n	8011d30 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8011ee6:	4299      	cmp	r1, r3
 8011ee8:	d928      	bls.n	8011f3c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 8011eea:	f1a3 0210 	sub.w	r2, r3, #16
 8011eee:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 8011ef2:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 8011ef6:	45ac      	cmp	ip, r5
 8011ef8:	db06      	blt.n	8011f08 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 8011efa:	d11d      	bne.n	8011f38 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 8011efc:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 8011f00:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 8011f04:	42ae      	cmp	r6, r5
 8011f06:	da17      	bge.n	8011f38 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 8011f08:	4615      	mov	r5, r2
 8011f0a:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 8011f0e:	f855 6f08 	ldr.w	r6, [r5, #8]!
 8011f12:	6116      	str	r6, [r2, #16]
 8011f14:	686e      	ldr	r6, [r5, #4]
 8011f16:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 8011f1a:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 8011f1e:	f8a2 9008 	strh.w	r9, [r2, #8]
 8011f22:	42a8      	cmp	r0, r5
 8011f24:	6156      	str	r6, [r2, #20]
 8011f26:	f8a2 c00a 	strh.w	ip, [r2, #10]
 8011f2a:	f8a2 800c 	strh.w	r8, [r2, #12]
 8011f2e:	f8a2 e00e 	strh.w	lr, [r2, #14]
 8011f32:	f1a2 0208 	sub.w	r2, r2, #8
 8011f36:	d1da      	bne.n	8011eee <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 8011f38:	3308      	adds	r3, #8
 8011f3a:	e7d4      	b.n	8011ee6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 8011f3c:	42bc      	cmp	r4, r7
 8011f3e:	d903      	bls.n	8011f48 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 8011f40:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 8011f44:	3c08      	subs	r4, #8
 8011f46:	e6f3      	b.n	8011d30 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8011f48:	b050      	add	sp, #320	; 0x140
 8011f4a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08011f4e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 8011f4e:	b510      	push	{r4, lr}
 8011f50:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8011f52:	07da      	lsls	r2, r3, #31
 8011f54:	4604      	mov	r4, r0
 8011f56:	d507      	bpl.n	8011f68 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 8011f58:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 8011f5c:	f7ff fe8a 	bl	8011c74 <_ZN8touchgfx7Outline6lineToEii>
 8011f60:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8011f62:	f023 0301 	bic.w	r3, r3, #1
 8011f66:	6243      	str	r3, [r0, #36]	; 0x24
 8011f68:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8011f6a:	079b      	lsls	r3, r3, #30
 8011f6c:	d521      	bpl.n	8011fb2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 8011f6e:	6923      	ldr	r3, [r4, #16]
 8011f70:	88d9      	ldrh	r1, [r3, #6]
 8011f72:	889a      	ldrh	r2, [r3, #4]
 8011f74:	430a      	orrs	r2, r1
 8011f76:	d010      	beq.n	8011f9a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8011f78:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8011f7c:	2a00      	cmp	r2, #0
 8011f7e:	db0c      	blt.n	8011f9a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8011f80:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8011f82:	428a      	cmp	r2, r1
 8011f84:	da09      	bge.n	8011f9a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8011f86:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 8011f8a:	4291      	cmp	r1, r2
 8011f8c:	bf88      	it	hi
 8011f8e:	3308      	addhi	r3, #8
 8011f90:	f102 0201 	add.w	r2, r2, #1
 8011f94:	bf88      	it	hi
 8011f96:	6123      	strhi	r3, [r4, #16]
 8011f98:	60a2      	str	r2, [r4, #8]
 8011f9a:	68a1      	ldr	r1, [r4, #8]
 8011f9c:	b129      	cbz	r1, 8011faa <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 8011f9e:	6863      	ldr	r3, [r4, #4]
 8011fa0:	4299      	cmp	r1, r3
 8011fa2:	d802      	bhi.n	8011faa <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 8011fa4:	68e0      	ldr	r0, [r4, #12]
 8011fa6:	f7ff febc 	bl	8011d22 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 8011faa:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8011fac:	f023 0302 	bic.w	r3, r3, #2
 8011fb0:	6263      	str	r3, [r4, #36]	; 0x24
 8011fb2:	68e0      	ldr	r0, [r4, #12]
 8011fb4:	bd10      	pop	{r4, pc}
	...

08011fb8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 8011fb8:	4b02      	ldr	r3, [pc, #8]	; (8011fc4 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 8011fba:	6018      	str	r0, [r3, #0]
 8011fbc:	4b02      	ldr	r3, [pc, #8]	; (8011fc8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 8011fbe:	6019      	str	r1, [r3, #0]
 8011fc0:	4770      	bx	lr
 8011fc2:	bf00      	nop
 8011fc4:	200137c4 	.word	0x200137c4
 8011fc8:	200137c8 	.word	0x200137c8

08011fcc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
 8011fcc:	4a02      	ldr	r2, [pc, #8]	; (8011fd8 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
 8011fce:	2300      	movs	r3, #0
 8011fd0:	6013      	str	r3, [r2, #0]
 8011fd2:	4a02      	ldr	r2, [pc, #8]	; (8011fdc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
 8011fd4:	6013      	str	r3, [r2, #0]
 8011fd6:	4770      	bx	lr
 8011fd8:	200137c4 	.word	0x200137c4
 8011fdc:	200137c8 	.word	0x200137c8

08011fe0 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 8011fe0:	4b01      	ldr	r3, [pc, #4]	; (8011fe8 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 8011fe2:	6818      	ldr	r0, [r3, #0]
 8011fe4:	4770      	bx	lr
 8011fe6:	bf00      	nop
 8011fe8:	200137c4 	.word	0x200137c4

08011fec <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 8011fec:	4b01      	ldr	r3, [pc, #4]	; (8011ff4 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 8011fee:	6818      	ldr	r0, [r3, #0]
 8011ff0:	4770      	bx	lr
 8011ff2:	bf00      	nop
 8011ff4:	200137c8 	.word	0x200137c8

08011ff8 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 8011ff8:	b510      	push	{r4, lr}
 8011ffa:	6803      	ldr	r3, [r0, #0]
 8011ffc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011ffe:	460c      	mov	r4, r1
 8012000:	4798      	blx	r3
 8012002:	1b03      	subs	r3, r0, r4
 8012004:	4258      	negs	r0, r3
 8012006:	4158      	adcs	r0, r3
 8012008:	bd10      	pop	{r4, pc}
	...

0801200c <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 801200c:	4b01      	ldr	r3, [pc, #4]	; (8012014 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 801200e:	6019      	str	r1, [r3, #0]
 8012010:	4770      	bx	lr
 8012012:	bf00      	nop
 8012014:	200137cc 	.word	0x200137cc

08012018 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8012018:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801201c:	4696      	mov	lr, r2
 801201e:	4605      	mov	r5, r0
 8012020:	4614      	mov	r4, r2
 8012022:	460e      	mov	r6, r1
 8012024:	461f      	mov	r7, r3
 8012026:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801202a:	b097      	sub	sp, #92	; 0x5c
 801202c:	f10d 0c1c 	add.w	ip, sp, #28
 8012030:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8012034:	f8de 3000 	ldr.w	r3, [lr]
 8012038:	f8cc 3000 	str.w	r3, [ip]
 801203c:	f104 0e14 	add.w	lr, r4, #20
 8012040:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8012044:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8012048:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801204c:	f8de 3000 	ldr.w	r3, [lr]
 8012050:	f8cc 3000 	str.w	r3, [ip]
 8012054:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8012058:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801205c:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8012060:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8012064:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 8012068:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 801206c:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 8012070:	f8de 3000 	ldr.w	r3, [lr]
 8012074:	f8cc 3000 	str.w	r3, [ip]
 8012078:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801207a:	682b      	ldr	r3, [r5, #0]
 801207c:	9201      	str	r2, [sp, #4]
 801207e:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8012082:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8012084:	9200      	str	r2, [sp, #0]
 8012086:	f8cd 8008 	str.w	r8, [sp, #8]
 801208a:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 801208e:	aa07      	add	r2, sp, #28
 8012090:	463b      	mov	r3, r7
 8012092:	4631      	mov	r1, r6
 8012094:	4628      	mov	r0, r5
 8012096:	47d8      	blx	fp
 8012098:	46a6      	mov	lr, r4
 801209a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801209e:	f10d 0c1c 	add.w	ip, sp, #28
 80120a2:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80120a6:	f8de 3000 	ldr.w	r3, [lr]
 80120aa:	f8cc 3000 	str.w	r3, [ip]
 80120ae:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 80120b2:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80120b6:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 80120ba:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80120be:	343c      	adds	r4, #60	; 0x3c
 80120c0:	f8de 3000 	ldr.w	r3, [lr]
 80120c4:	f8cc 3000 	str.w	r3, [ip]
 80120c8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80120ca:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 80120ce:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80120d2:	6823      	ldr	r3, [r4, #0]
 80120d4:	f8cc 3000 	str.w	r3, [ip]
 80120d8:	682b      	ldr	r3, [r5, #0]
 80120da:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 80120de:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80120e0:	9201      	str	r2, [sp, #4]
 80120e2:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80120e4:	9200      	str	r2, [sp, #0]
 80120e6:	f8cd 8008 	str.w	r8, [sp, #8]
 80120ea:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 80120ec:	aa07      	add	r2, sp, #28
 80120ee:	463b      	mov	r3, r7
 80120f0:	4631      	mov	r1, r6
 80120f2:	4628      	mov	r0, r5
 80120f4:	47a0      	blx	r4
 80120f6:	b017      	add	sp, #92	; 0x5c
 80120f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080120fc <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 80120fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012100:	b08d      	sub	sp, #52	; 0x34
 8012102:	4688      	mov	r8, r1
 8012104:	9916      	ldr	r1, [sp, #88]	; 0x58
 8012106:	f8d3 c000 	ldr.w	ip, [r3]
 801210a:	680f      	ldr	r7, [r1, #0]
 801210c:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 8012110:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 8012114:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 8012118:	edd3 6a07 	vldr	s13, [r3, #28]
 801211c:	9918      	ldr	r1, [sp, #96]	; 0x60
 801211e:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 8012122:	f9b1 9000 	ldrsh.w	r9, [r1]
 8012126:	f9ba 1000 	ldrsh.w	r1, [sl]
 801212a:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 801212e:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 8012132:	eba7 070c 	sub.w	r7, r7, ip
 8012136:	42bc      	cmp	r4, r7
 8012138:	bfa8      	it	ge
 801213a:	463c      	movge	r4, r7
 801213c:	ee07 4a90 	vmov	s15, r4
 8012140:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8012144:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 8012148:	ee25 4a04 	vmul.f32	s8, s10, s8
 801214c:	ee65 4a24 	vmul.f32	s9, s10, s9
 8012150:	ee25 5a27 	vmul.f32	s10, s10, s15
 8012154:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8012158:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 801215c:	eb09 0e0c 	add.w	lr, r9, ip
 8012160:	4571      	cmp	r1, lr
 8012162:	ee71 0aa4 	vadd.f32	s1, s3, s9
 8012166:	ee32 1a05 	vadd.f32	s2, s4, s10
 801216a:	ee36 0a84 	vadd.f32	s0, s13, s8
 801216e:	ee61 1a87 	vmul.f32	s3, s3, s14
 8012172:	ee22 2a07 	vmul.f32	s4, s4, s14
 8012176:	f340 808d 	ble.w	8012294 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 801217a:	eba1 060e 	sub.w	r6, r1, lr
 801217e:	fb96 f5f4 	sdiv	r5, r6, r4
 8012182:	ee07 5a10 	vmov	s14, r5
 8012186:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801218a:	2d00      	cmp	r5, #0
 801218c:	fb04 6615 	mls	r6, r4, r5, r6
 8012190:	eea7 0a04 	vfma.f32	s0, s14, s8
 8012194:	eee7 0a24 	vfma.f32	s1, s14, s9
 8012198:	eea7 1a05 	vfma.f32	s2, s14, s10
 801219c:	dd13      	ble.n	80121c6 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 801219e:	ee70 6a44 	vsub.f32	s13, s0, s8
 80121a2:	ee70 1ae4 	vsub.f32	s3, s1, s9
 80121a6:	eef5 6a40 	vcmp.f32	s13, #0.0
 80121aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80121ae:	bf18      	it	ne
 80121b0:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 80121b4:	ee31 2a45 	vsub.f32	s4, s2, s10
 80121b8:	bf08      	it	eq
 80121ba:	eeb0 7a67 	vmoveq.f32	s14, s15
 80121be:	ee61 1a87 	vmul.f32	s3, s3, s14
 80121c2:	ee22 2a07 	vmul.f32	s4, s4, s14
 80121c6:	fb05 f204 	mul.w	r2, r5, r4
 80121ca:	1abf      	subs	r7, r7, r2
 80121cc:	4494      	add	ip, r2
 80121ce:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 80121d2:	4411      	add	r1, r2
 80121d4:	eb09 020c 	add.w	r2, r9, ip
 80121d8:	443a      	add	r2, r7
 80121da:	b209      	sxth	r1, r1
 80121dc:	428a      	cmp	r2, r1
 80121de:	bfc4      	itt	gt
 80121e0:	eba1 0209 	subgt.w	r2, r1, r9
 80121e4:	eba2 070c 	subgt.w	r7, r2, ip
 80121e8:	2f00      	cmp	r7, #0
 80121ea:	dd50      	ble.n	801228e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 80121ec:	fb97 f1f4 	sdiv	r1, r7, r4
 80121f0:	fb04 7211 	mls	r2, r4, r1, r7
 80121f4:	b90a      	cbnz	r2, 80121fa <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 80121f6:	3901      	subs	r1, #1
 80121f8:	4622      	mov	r2, r4
 80121fa:	eec7 3a80 	vdiv.f32	s7, s15, s0
 80121fe:	6840      	ldr	r0, [r0, #4]
 8012200:	900b      	str	r0, [sp, #44]	; 0x2c
 8012202:	f8d0 a000 	ldr.w	sl, [r0]
 8012206:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8012208:	9008      	str	r0, [sp, #32]
 801220a:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 801220e:	9818      	ldr	r0, [sp, #96]	; 0x60
 8012210:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 8012214:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 8012218:	695b      	ldr	r3, [r3, #20]
 801221a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801221c:	445b      	add	r3, fp
 801221e:	eef0 6a42 	vmov.f32	s13, s4
 8012222:	ee60 2aa3 	vmul.f32	s5, s1, s7
 8012226:	ee21 3a23 	vmul.f32	s6, s2, s7
 801222a:	ee72 7ae1 	vsub.f32	s15, s5, s3
 801222e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8012232:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8012236:	9307      	str	r3, [sp, #28]
 8012238:	ee17 7a90 	vmov	r7, s15
 801223c:	ee73 7a42 	vsub.f32	s15, s6, s4
 8012240:	eeb0 7a61 	vmov.f32	s14, s3
 8012244:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8012248:	ee16 3a90 	vmov	r3, s13
 801224c:	fb97 f7f4 	sdiv	r7, r7, r4
 8012250:	ee17 ca90 	vmov	ip, s15
 8012254:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8012258:	fb9c fcf4 	sdiv	ip, ip, r4
 801225c:	fb0c 3306 	mla	r3, ip, r6, r3
 8012260:	9302      	str	r3, [sp, #8]
 8012262:	ee17 3a10 	vmov	r3, s14
 8012266:	44b6      	add	lr, r6
 8012268:	fb04 e505 	mla	r5, r4, r5, lr
 801226c:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 8012270:	fb07 3706 	mla	r7, r7, r6, r3
 8012274:	e9cd 8505 	strd	r8, r5, [sp, #20]
 8012278:	e9cd 4700 	strd	r4, r7, [sp]
 801227c:	2900      	cmp	r1, #0
 801227e:	bfcc      	ite	gt
 8012280:	46a1      	movgt	r9, r4
 8012282:	4691      	movle	r9, r2
 8012284:	eba9 0306 	sub.w	r3, r9, r6
 8012288:	f8da 4008 	ldr.w	r4, [sl, #8]
 801228c:	47a0      	blx	r4
 801228e:	b00d      	add	sp, #52	; 0x34
 8012290:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012294:	2500      	movs	r5, #0
 8012296:	462e      	mov	r6, r5
 8012298:	e799      	b.n	80121ce <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0801229c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 801229c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80122a0:	b0db      	sub	sp, #364	; 0x16c
 80122a2:	461d      	mov	r5, r3
 80122a4:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 80122a8:	930a      	str	r3, [sp, #40]	; 0x28
 80122aa:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 80122ae:	930b      	str	r3, [sp, #44]	; 0x2c
 80122b0:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 80122b4:	9310      	str	r3, [sp, #64]	; 0x40
 80122b6:	6803      	ldr	r3, [r0, #0]
 80122b8:	910f      	str	r1, [sp, #60]	; 0x3c
 80122ba:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 80122bc:	9009      	str	r0, [sp, #36]	; 0x24
 80122be:	4614      	mov	r4, r2
 80122c0:	4629      	mov	r1, r5
 80122c2:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 80122c6:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 80122ca:	47b8      	blx	r7
 80122cc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80122ce:	6058      	str	r0, [r3, #4]
 80122d0:	2800      	cmp	r0, #0
 80122d2:	f000 83a1 	beq.w	8012a18 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80122d6:	682b      	ldr	r3, [r5, #0]
 80122d8:	9314      	str	r3, [sp, #80]	; 0x50
 80122da:	686b      	ldr	r3, [r5, #4]
 80122dc:	9315      	str	r3, [sp, #84]	; 0x54
 80122de:	4bc4      	ldr	r3, [pc, #784]	; (80125f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 80122e0:	ed94 7a02 	vldr	s14, [r4, #8]
 80122e4:	7819      	ldrb	r1, [r3, #0]
 80122e6:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 80122ea:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 80122ee:	2900      	cmp	r1, #0
 80122f0:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80122f4:	bf16      	itet	ne
 80122f6:	4619      	movne	r1, r3
 80122f8:	4611      	moveq	r1, r2
 80122fa:	4613      	movne	r3, r2
 80122fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012300:	9116      	str	r1, [sp, #88]	; 0x58
 8012302:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 8012306:	f240 8387 	bls.w	8012a18 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801230a:	ed94 7a07 	vldr	s14, [r4, #28]
 801230e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8012312:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012316:	f240 837f 	bls.w	8012a18 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801231a:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 801231e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8012322:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012326:	f240 8377 	bls.w	8012a18 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801232a:	6822      	ldr	r2, [r4, #0]
 801232c:	4bb1      	ldr	r3, [pc, #708]	; (80125f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 801232e:	429a      	cmp	r2, r3
 8012330:	f2c0 8372 	blt.w	8012a18 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012334:	49b0      	ldr	r1, [pc, #704]	; (80125f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 8012336:	6963      	ldr	r3, [r4, #20]
 8012338:	428a      	cmp	r2, r1
 801233a:	f300 836d 	bgt.w	8012a18 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801233e:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8012342:	48ae      	ldr	r0, [pc, #696]	; (80125fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 8012344:	33ff      	adds	r3, #255	; 0xff
 8012346:	4283      	cmp	r3, r0
 8012348:	f200 8366 	bhi.w	8012a18 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801234c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 801234e:	4dac      	ldr	r5, [pc, #688]	; (8012600 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 8012350:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8012354:	33ff      	adds	r3, #255	; 0xff
 8012356:	42ab      	cmp	r3, r5
 8012358:	f200 835e 	bhi.w	8012a18 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801235c:	6862      	ldr	r2, [r4, #4]
 801235e:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 8012362:	33ff      	adds	r3, #255	; 0xff
 8012364:	4283      	cmp	r3, r0
 8012366:	f200 8357 	bhi.w	8012a18 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801236a:	69a1      	ldr	r1, [r4, #24]
 801236c:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 8012370:	33ff      	adds	r3, #255	; 0xff
 8012372:	4283      	cmp	r3, r0
 8012374:	f200 8350 	bhi.w	8012a18 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012378:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 801237a:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 801237e:	30ff      	adds	r0, #255	; 0xff
 8012380:	42a8      	cmp	r0, r5
 8012382:	f200 8349 	bhi.w	8012a18 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012386:	428a      	cmp	r2, r1
 8012388:	f280 8110 	bge.w	80125ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 801238c:	429a      	cmp	r2, r3
 801238e:	f300 8119 	bgt.w	80125c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 8012392:	4299      	cmp	r1, r3
 8012394:	f280 811d 	bge.w	80125d2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 8012398:	2502      	movs	r5, #2
 801239a:	2701      	movs	r7, #1
 801239c:	46a9      	mov	r9, r5
 801239e:	46b8      	mov	r8, r7
 80123a0:	f04f 0a00 	mov.w	sl, #0
 80123a4:	4621      	mov	r1, r4
 80123a6:	a849      	add	r0, sp, #292	; 0x124
 80123a8:	f003 feec 	bl	8016184 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 80123ac:	4622      	mov	r2, r4
 80123ae:	4653      	mov	r3, sl
 80123b0:	a949      	add	r1, sp, #292	; 0x124
 80123b2:	f8cd 9000 	str.w	r9, [sp]
 80123b6:	a819      	add	r0, sp, #100	; 0x64
 80123b8:	f004 f814 	bl	80163e4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 80123bc:	4622      	mov	r2, r4
 80123be:	4653      	mov	r3, sl
 80123c0:	a949      	add	r1, sp, #292	; 0x124
 80123c2:	f8cd 8000 	str.w	r8, [sp]
 80123c6:	a829      	add	r0, sp, #164	; 0xa4
 80123c8:	f004 f80c 	bl	80163e4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 80123cc:	4643      	mov	r3, r8
 80123ce:	4622      	mov	r2, r4
 80123d0:	a949      	add	r1, sp, #292	; 0x124
 80123d2:	f8cd 9000 	str.w	r9, [sp]
 80123d6:	a839      	add	r0, sp, #228	; 0xe4
 80123d8:	f004 f804 	bl	80163e4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 80123dc:	42af      	cmp	r7, r5
 80123de:	bfb5      	itete	lt
 80123e0:	2300      	movlt	r3, #0
 80123e2:	2301      	movge	r3, #1
 80123e4:	930e      	strlt	r3, [sp, #56]	; 0x38
 80123e6:	930e      	strge	r3, [sp, #56]	; 0x38
 80123e8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80123ea:	e893 0003 	ldmia.w	r3, {r0, r1}
 80123ee:	af12      	add	r7, sp, #72	; 0x48
 80123f0:	bfb9      	ittee	lt
 80123f2:	ad29      	addlt	r5, sp, #164	; 0xa4
 80123f4:	ac19      	addlt	r4, sp, #100	; 0x64
 80123f6:	ad19      	addge	r5, sp, #100	; 0x64
 80123f8:	ac29      	addge	r4, sp, #164	; 0xa4
 80123fa:	e887 0003 	stmia.w	r7, {r0, r1}
 80123fe:	b928      	cbnz	r0, 801240c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 8012400:	4b80      	ldr	r3, [pc, #512]	; (8012604 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 8012402:	6818      	ldr	r0, [r3, #0]
 8012404:	6803      	ldr	r3, [r0, #0]
 8012406:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012408:	4798      	blx	r3
 801240a:	6038      	str	r0, [r7, #0]
 801240c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 801240e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8012412:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8012416:	930c      	str	r3, [sp, #48]	; 0x30
 8012418:	990c      	ldr	r1, [sp, #48]	; 0x30
 801241a:	6963      	ldr	r3, [r4, #20]
 801241c:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 801241e:	440b      	add	r3, r1
 8012420:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8012424:	4408      	add	r0, r1
 8012426:	b200      	sxth	r0, r0
 8012428:	4283      	cmp	r3, r0
 801242a:	900d      	str	r0, [sp, #52]	; 0x34
 801242c:	f280 80dd 	bge.w	80125ea <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 8012430:	428b      	cmp	r3, r1
 8012432:	da08      	bge.n	8012446 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8012434:	2a00      	cmp	r2, #0
 8012436:	dd06      	ble.n	8012446 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8012438:	1acb      	subs	r3, r1, r3
 801243a:	429a      	cmp	r2, r3
 801243c:	f2c0 80e4 	blt.w	8012608 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 8012440:	2b00      	cmp	r3, #0
 8012442:	f300 80e2 	bgt.w	801260a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 8012446:	6967      	ldr	r7, [r4, #20]
 8012448:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801244a:	443b      	add	r3, r7
 801244c:	461f      	mov	r7, r3
 801244e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012450:	1bdf      	subs	r7, r3, r7
 8012452:	4297      	cmp	r7, r2
 8012454:	bfa8      	it	ge
 8012456:	4617      	movge	r7, r2
 8012458:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 801245c:	2f00      	cmp	r7, #0
 801245e:	f340 8166 	ble.w	801272e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 8012462:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8012464:	6829      	ldr	r1, [r5, #0]
 8012466:	f9b3 2000 	ldrsh.w	r2, [r3]
 801246a:	f9bb 3000 	ldrsh.w	r3, [fp]
 801246e:	6820      	ldr	r0, [r4, #0]
 8012470:	4411      	add	r1, r2
 8012472:	4299      	cmp	r1, r3
 8012474:	dd1a      	ble.n	80124ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8012476:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 801247a:	440b      	add	r3, r1
 801247c:	4402      	add	r2, r0
 801247e:	b21b      	sxth	r3, r3
 8012480:	429a      	cmp	r2, r3
 8012482:	dc13      	bgt.n	80124ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8012484:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012486:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8012488:	681b      	ldr	r3, [r3, #0]
 801248a:	9206      	str	r2, [sp, #24]
 801248c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801248e:	9205      	str	r2, [sp, #20]
 8012490:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8012492:	9500      	str	r5, [sp, #0]
 8012494:	e9cd b203 	strd	fp, r2, [sp, #12]
 8012498:	9a64      	ldr	r2, [sp, #400]	; 0x190
 801249a:	9809      	ldr	r0, [sp, #36]	; 0x24
 801249c:	e9cd 8201 	strd	r8, r2, [sp, #4]
 80124a0:	a912      	add	r1, sp, #72	; 0x48
 80124a2:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 80124a6:	aa49      	add	r2, sp, #292	; 0x124
 80124a8:	4623      	mov	r3, r4
 80124aa:	47c8      	blx	r9
 80124ac:	e9d4 2300 	ldrd	r2, r3, [r4]
 80124b0:	441a      	add	r2, r3
 80124b2:	6963      	ldr	r3, [r4, #20]
 80124b4:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 80124b8:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 80124bc:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 80124c0:	68a1      	ldr	r1, [r4, #8]
 80124c2:	ed94 6a08 	vldr	s12, [r4, #32]
 80124c6:	6022      	str	r2, [r4, #0]
 80124c8:	3301      	adds	r3, #1
 80124ca:	6163      	str	r3, [r4, #20]
 80124cc:	69a3      	ldr	r3, [r4, #24]
 80124ce:	ee37 7a27 	vadd.f32	s14, s14, s15
 80124d2:	3b01      	subs	r3, #1
 80124d4:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 80124d8:	61a3      	str	r3, [r4, #24]
 80124da:	6923      	ldr	r3, [r4, #16]
 80124dc:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80124e0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80124e4:	edd4 6a07 	vldr	s13, [r4, #28]
 80124e8:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80124ec:	440b      	add	r3, r1
 80124ee:	68e1      	ldr	r1, [r4, #12]
 80124f0:	6123      	str	r3, [r4, #16]
 80124f2:	ee76 6a86 	vadd.f32	s13, s13, s12
 80124f6:	428b      	cmp	r3, r1
 80124f8:	edc4 6a07 	vstr	s13, [r4, #28]
 80124fc:	db15      	blt.n	801252a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 80124fe:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8012502:	ee76 6a26 	vadd.f32	s13, s12, s13
 8012506:	3201      	adds	r2, #1
 8012508:	edc4 6a07 	vstr	s13, [r4, #28]
 801250c:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8012510:	6022      	str	r2, [r4, #0]
 8012512:	ee36 7a87 	vadd.f32	s14, s13, s14
 8012516:	1a5b      	subs	r3, r3, r1
 8012518:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801251c:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8012520:	6123      	str	r3, [r4, #16]
 8012522:	ee77 7a27 	vadd.f32	s15, s14, s15
 8012526:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801252a:	e9d5 2300 	ldrd	r2, r3, [r5]
 801252e:	441a      	add	r2, r3
 8012530:	696b      	ldr	r3, [r5, #20]
 8012532:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8012536:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 801253a:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 801253e:	68a9      	ldr	r1, [r5, #8]
 8012540:	ed95 6a08 	vldr	s12, [r5, #32]
 8012544:	602a      	str	r2, [r5, #0]
 8012546:	3301      	adds	r3, #1
 8012548:	616b      	str	r3, [r5, #20]
 801254a:	69ab      	ldr	r3, [r5, #24]
 801254c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8012550:	3b01      	subs	r3, #1
 8012552:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8012556:	61ab      	str	r3, [r5, #24]
 8012558:	692b      	ldr	r3, [r5, #16]
 801255a:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801255e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8012562:	edd5 6a07 	vldr	s13, [r5, #28]
 8012566:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 801256a:	440b      	add	r3, r1
 801256c:	68e9      	ldr	r1, [r5, #12]
 801256e:	612b      	str	r3, [r5, #16]
 8012570:	ee76 6a86 	vadd.f32	s13, s13, s12
 8012574:	428b      	cmp	r3, r1
 8012576:	edc5 6a07 	vstr	s13, [r5, #28]
 801257a:	db15      	blt.n	80125a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 801257c:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8012580:	ee76 6a26 	vadd.f32	s13, s12, s13
 8012584:	3201      	adds	r2, #1
 8012586:	edc5 6a07 	vstr	s13, [r5, #28]
 801258a:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 801258e:	602a      	str	r2, [r5, #0]
 8012590:	ee36 7a87 	vadd.f32	s14, s13, s14
 8012594:	1a5b      	subs	r3, r3, r1
 8012596:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801259a:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 801259e:	612b      	str	r3, [r5, #16]
 80125a0:	ee77 7a27 	vadd.f32	s15, s14, s15
 80125a4:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 80125a8:	3f01      	subs	r7, #1
 80125aa:	e757      	b.n	801245c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 80125ac:	4299      	cmp	r1, r3
 80125ae:	dc13      	bgt.n	80125d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 80125b0:	429a      	cmp	r2, r3
 80125b2:	da14      	bge.n	80125de <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 80125b4:	2502      	movs	r5, #2
 80125b6:	2703      	movs	r7, #3
 80125b8:	46a9      	mov	r9, r5
 80125ba:	f04f 0800 	mov.w	r8, #0
 80125be:	f04f 0a01 	mov.w	sl, #1
 80125c2:	e6ef      	b.n	80123a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 80125c4:	2501      	movs	r5, #1
 80125c6:	2700      	movs	r7, #0
 80125c8:	46a9      	mov	r9, r5
 80125ca:	46b8      	mov	r8, r7
 80125cc:	f04f 0a02 	mov.w	sl, #2
 80125d0:	e6e8      	b.n	80123a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 80125d2:	2501      	movs	r5, #1
 80125d4:	2702      	movs	r7, #2
 80125d6:	e6e1      	b.n	801239c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 80125d8:	2500      	movs	r5, #0
 80125da:	2701      	movs	r7, #1
 80125dc:	e7f4      	b.n	80125c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 80125de:	2702      	movs	r7, #2
 80125e0:	2503      	movs	r5, #3
 80125e2:	f04f 0900 	mov.w	r9, #0
 80125e6:	46b8      	mov	r8, r7
 80125e8:	e7e9      	b.n	80125be <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 80125ea:	4613      	mov	r3, r2
 80125ec:	e728      	b.n	8012440 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 80125ee:	bf00      	nop
 80125f0:	200137b4 	.word	0x200137b4
 80125f4:	fffd8f01 	.word	0xfffd8f01
 80125f8:	00027100 	.word	0x00027100
 80125fc:	0004e1ff 	.word	0x0004e1ff
 8012600:	0004e1fe 	.word	0x0004e1fe
 8012604:	200137bc 	.word	0x200137bc
 8012608:	4613      	mov	r3, r2
 801260a:	992b      	ldr	r1, [sp, #172]	; 0xac
 801260c:	9111      	str	r1, [sp, #68]	; 0x44
 801260e:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 8012612:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 8012616:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 8012618:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 801261c:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 8012620:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 8012624:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 8012628:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 801262c:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 8012630:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 8012634:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 8012638:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 801263c:	469e      	mov	lr, r3
 801263e:	469c      	mov	ip, r3
 8012640:	f04f 0900 	mov.w	r9, #0
 8012644:	f1bc 0f00 	cmp.w	ip, #0
 8012648:	d147      	bne.n	80126da <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 801264a:	eb03 0c07 	add.w	ip, r3, r7
 801264e:	1ad7      	subs	r7, r2, r3
 8012650:	f1b9 0f00 	cmp.w	r9, #0
 8012654:	d009      	beq.n	801266a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 8012656:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 801265a:	9029      	str	r0, [sp, #164]	; 0xa4
 801265c:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 8012660:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 8012664:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 8012668:	912d      	str	r1, [sp, #180]	; 0xb4
 801266a:	991b      	ldr	r1, [sp, #108]	; 0x6c
 801266c:	9111      	str	r1, [sp, #68]	; 0x44
 801266e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8012672:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8012676:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 801267a:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 801267e:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8012682:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8012686:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 801268a:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 801268e:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8012692:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8012696:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 801269a:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 801269e:	f04f 0800 	mov.w	r8, #0
 80126a2:	f1be 0f00 	cmp.w	lr, #0
 80126a6:	d031      	beq.n	801270c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 80126a8:	9e11      	ldr	r6, [sp, #68]	; 0x44
 80126aa:	4431      	add	r1, r6
 80126ac:	4549      	cmp	r1, r9
 80126ae:	4450      	add	r0, sl
 80126b0:	ee76 6aa4 	vadd.f32	s13, s13, s9
 80126b4:	ee37 7a04 	vadd.f32	s14, s14, s8
 80126b8:	ee77 7aa3 	vadd.f32	s15, s15, s7
 80126bc:	db08      	blt.n	80126d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 80126be:	ee77 7a85 	vadd.f32	s15, s15, s10
 80126c2:	ee76 6aa5 	vadd.f32	s13, s13, s11
 80126c6:	ee37 7a06 	vadd.f32	s14, s14, s12
 80126ca:	3001      	adds	r0, #1
 80126cc:	eba1 0109 	sub.w	r1, r1, r9
 80126d0:	f10e 3eff 	add.w	lr, lr, #4294967295
 80126d4:	f04f 0801 	mov.w	r8, #1
 80126d8:	e7e3      	b.n	80126a2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 80126da:	9e11      	ldr	r6, [sp, #68]	; 0x44
 80126dc:	4431      	add	r1, r6
 80126de:	4541      	cmp	r1, r8
 80126e0:	4450      	add	r0, sl
 80126e2:	ee37 7a24 	vadd.f32	s14, s14, s9
 80126e6:	ee77 7a84 	vadd.f32	s15, s15, s8
 80126ea:	ee76 6aa3 	vadd.f32	s13, s13, s7
 80126ee:	db08      	blt.n	8012702 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 80126f0:	ee76 6a85 	vadd.f32	s13, s13, s10
 80126f4:	ee37 7a25 	vadd.f32	s14, s14, s11
 80126f8:	ee77 7a86 	vadd.f32	s15, s15, s12
 80126fc:	3001      	adds	r0, #1
 80126fe:	eba1 0108 	sub.w	r1, r1, r8
 8012702:	f10c 3cff 	add.w	ip, ip, #4294967295
 8012706:	f04f 0901 	mov.w	r9, #1
 801270a:	e79b      	b.n	8012644 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 801270c:	449c      	add	ip, r3
 801270e:	1aff      	subs	r7, r7, r3
 8012710:	f1b8 0f00 	cmp.w	r8, #0
 8012714:	d009      	beq.n	801272a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 8012716:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 801271a:	9019      	str	r0, [sp, #100]	; 0x64
 801271c:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8012720:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8012724:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8012728:	911d      	str	r1, [sp, #116]	; 0x74
 801272a:	1ad2      	subs	r2, r2, r3
 801272c:	e68b      	b.n	8012446 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 801272e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012730:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 8012732:	2b00      	cmp	r3, #0
 8012734:	f000 80d1 	beq.w	80128da <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 8012738:	ad19      	add	r5, sp, #100	; 0x64
 801273a:	ac39      	add	r4, sp, #228	; 0xe4
 801273c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 801273e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8012742:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8012746:	930c      	str	r3, [sp, #48]	; 0x30
 8012748:	990c      	ldr	r1, [sp, #48]	; 0x30
 801274a:	6963      	ldr	r3, [r4, #20]
 801274c:	440b      	add	r3, r1
 801274e:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8012752:	4408      	add	r0, r1
 8012754:	b200      	sxth	r0, r0
 8012756:	4283      	cmp	r3, r0
 8012758:	900d      	str	r0, [sp, #52]	; 0x34
 801275a:	f280 80c1 	bge.w	80128e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 801275e:	428b      	cmp	r3, r1
 8012760:	da08      	bge.n	8012774 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8012762:	2a00      	cmp	r2, #0
 8012764:	dd06      	ble.n	8012774 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8012766:	1acb      	subs	r3, r1, r3
 8012768:	429a      	cmp	r2, r3
 801276a:	f2c0 80bb 	blt.w	80128e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 801276e:	2b00      	cmp	r3, #0
 8012770:	f300 80b9 	bgt.w	80128e6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 8012774:	6967      	ldr	r7, [r4, #20]
 8012776:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8012778:	443b      	add	r3, r7
 801277a:	461f      	mov	r7, r3
 801277c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801277e:	1bdf      	subs	r7, r3, r7
 8012780:	4297      	cmp	r7, r2
 8012782:	bfa8      	it	ge
 8012784:	4617      	movge	r7, r2
 8012786:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 801278a:	2f00      	cmp	r7, #0
 801278c:	f340 813c 	ble.w	8012a08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 8012790:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8012792:	6829      	ldr	r1, [r5, #0]
 8012794:	f9b3 2000 	ldrsh.w	r2, [r3]
 8012798:	f9bb 3000 	ldrsh.w	r3, [fp]
 801279c:	6820      	ldr	r0, [r4, #0]
 801279e:	4411      	add	r1, r2
 80127a0:	4299      	cmp	r1, r3
 80127a2:	dd1a      	ble.n	80127da <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 80127a4:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 80127a8:	440b      	add	r3, r1
 80127aa:	4402      	add	r2, r0
 80127ac:	b21b      	sxth	r3, r3
 80127ae:	429a      	cmp	r2, r3
 80127b0:	dc13      	bgt.n	80127da <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 80127b2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80127b4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80127b6:	681b      	ldr	r3, [r3, #0]
 80127b8:	9206      	str	r2, [sp, #24]
 80127ba:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80127bc:	9205      	str	r2, [sp, #20]
 80127be:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80127c0:	9500      	str	r5, [sp, #0]
 80127c2:	e9cd b203 	strd	fp, r2, [sp, #12]
 80127c6:	9a64      	ldr	r2, [sp, #400]	; 0x190
 80127c8:	9809      	ldr	r0, [sp, #36]	; 0x24
 80127ca:	e9cd 8201 	strd	r8, r2, [sp, #4]
 80127ce:	a912      	add	r1, sp, #72	; 0x48
 80127d0:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 80127d4:	aa49      	add	r2, sp, #292	; 0x124
 80127d6:	4623      	mov	r3, r4
 80127d8:	47c8      	blx	r9
 80127da:	e9d4 2300 	ldrd	r2, r3, [r4]
 80127de:	441a      	add	r2, r3
 80127e0:	6963      	ldr	r3, [r4, #20]
 80127e2:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 80127e6:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 80127ea:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 80127ee:	68a1      	ldr	r1, [r4, #8]
 80127f0:	ed94 6a08 	vldr	s12, [r4, #32]
 80127f4:	6022      	str	r2, [r4, #0]
 80127f6:	3301      	adds	r3, #1
 80127f8:	6163      	str	r3, [r4, #20]
 80127fa:	69a3      	ldr	r3, [r4, #24]
 80127fc:	ee37 7a27 	vadd.f32	s14, s14, s15
 8012800:	3b01      	subs	r3, #1
 8012802:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8012806:	61a3      	str	r3, [r4, #24]
 8012808:	6923      	ldr	r3, [r4, #16]
 801280a:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801280e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8012812:	edd4 6a07 	vldr	s13, [r4, #28]
 8012816:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801281a:	440b      	add	r3, r1
 801281c:	68e1      	ldr	r1, [r4, #12]
 801281e:	6123      	str	r3, [r4, #16]
 8012820:	ee76 6a86 	vadd.f32	s13, s13, s12
 8012824:	428b      	cmp	r3, r1
 8012826:	edc4 6a07 	vstr	s13, [r4, #28]
 801282a:	db15      	blt.n	8012858 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 801282c:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8012830:	ee76 6a26 	vadd.f32	s13, s12, s13
 8012834:	3201      	adds	r2, #1
 8012836:	edc4 6a07 	vstr	s13, [r4, #28]
 801283a:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 801283e:	6022      	str	r2, [r4, #0]
 8012840:	ee36 7a87 	vadd.f32	s14, s13, s14
 8012844:	1a5b      	subs	r3, r3, r1
 8012846:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801284a:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 801284e:	6123      	str	r3, [r4, #16]
 8012850:	ee77 7a27 	vadd.f32	s15, s14, s15
 8012854:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8012858:	e9d5 2300 	ldrd	r2, r3, [r5]
 801285c:	441a      	add	r2, r3
 801285e:	696b      	ldr	r3, [r5, #20]
 8012860:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8012864:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8012868:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 801286c:	68a9      	ldr	r1, [r5, #8]
 801286e:	ed95 6a08 	vldr	s12, [r5, #32]
 8012872:	602a      	str	r2, [r5, #0]
 8012874:	3301      	adds	r3, #1
 8012876:	616b      	str	r3, [r5, #20]
 8012878:	69ab      	ldr	r3, [r5, #24]
 801287a:	ee37 7a27 	vadd.f32	s14, s14, s15
 801287e:	3b01      	subs	r3, #1
 8012880:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8012884:	61ab      	str	r3, [r5, #24]
 8012886:	692b      	ldr	r3, [r5, #16]
 8012888:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801288c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8012890:	edd5 6a07 	vldr	s13, [r5, #28]
 8012894:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8012898:	440b      	add	r3, r1
 801289a:	68e9      	ldr	r1, [r5, #12]
 801289c:	612b      	str	r3, [r5, #16]
 801289e:	ee76 6a86 	vadd.f32	s13, s13, s12
 80128a2:	428b      	cmp	r3, r1
 80128a4:	edc5 6a07 	vstr	s13, [r5, #28]
 80128a8:	db15      	blt.n	80128d6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 80128aa:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 80128ae:	ee76 6a26 	vadd.f32	s13, s12, s13
 80128b2:	3201      	adds	r2, #1
 80128b4:	edc5 6a07 	vstr	s13, [r5, #28]
 80128b8:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 80128bc:	602a      	str	r2, [r5, #0]
 80128be:	ee36 7a87 	vadd.f32	s14, s13, s14
 80128c2:	1a5b      	subs	r3, r3, r1
 80128c4:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 80128c8:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 80128cc:	612b      	str	r3, [r5, #16]
 80128ce:	ee77 7a27 	vadd.f32	s15, s14, s15
 80128d2:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 80128d6:	3f01      	subs	r7, #1
 80128d8:	e757      	b.n	801278a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 80128da:	ad39      	add	r5, sp, #228	; 0xe4
 80128dc:	ac19      	add	r4, sp, #100	; 0x64
 80128de:	e72d      	b.n	801273c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 80128e0:	4613      	mov	r3, r2
 80128e2:	e744      	b.n	801276e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 80128e4:	4613      	mov	r3, r2
 80128e6:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 80128ea:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 80128ec:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 80128f0:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 80128f4:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 80128f8:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 80128fc:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 8012900:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 8012904:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 8012908:	993d      	ldr	r1, [sp, #244]	; 0xf4
 801290a:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 801290e:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 8012912:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 8012916:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 801291a:	960e      	str	r6, [sp, #56]	; 0x38
 801291c:	469e      	mov	lr, r3
 801291e:	461f      	mov	r7, r3
 8012920:	f04f 0900 	mov.w	r9, #0
 8012924:	2f00      	cmp	r7, #0
 8012926:	d146      	bne.n	80129b6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 8012928:	449c      	add	ip, r3
 801292a:	1ad7      	subs	r7, r2, r3
 801292c:	f1b9 0f00 	cmp.w	r9, #0
 8012930:	d009      	beq.n	8012946 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 8012932:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 8012936:	9039      	str	r0, [sp, #228]	; 0xe4
 8012938:	913d      	str	r1, [sp, #244]	; 0xf4
 801293a:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 801293e:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 8012942:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 8012946:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8012948:	910e      	str	r1, [sp, #56]	; 0x38
 801294a:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 801294e:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8012952:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8012956:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 801295a:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 801295e:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8012962:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8012966:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 801296a:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 801296e:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8012972:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8012976:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 801297a:	f04f 0800 	mov.w	r8, #0
 801297e:	f1be 0f00 	cmp.w	lr, #0
 8012982:	d030      	beq.n	80129e6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 8012984:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8012986:	4431      	add	r1, r6
 8012988:	4549      	cmp	r1, r9
 801298a:	4450      	add	r0, sl
 801298c:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8012990:	ee37 7a04 	vadd.f32	s14, s14, s8
 8012994:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8012998:	db08      	blt.n	80129ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 801299a:	ee77 7a85 	vadd.f32	s15, s15, s10
 801299e:	ee76 6aa5 	vadd.f32	s13, s13, s11
 80129a2:	ee37 7a06 	vadd.f32	s14, s14, s12
 80129a6:	3001      	adds	r0, #1
 80129a8:	eba1 0109 	sub.w	r1, r1, r9
 80129ac:	f10e 3eff 	add.w	lr, lr, #4294967295
 80129b0:	f04f 0801 	mov.w	r8, #1
 80129b4:	e7e3      	b.n	801297e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 80129b6:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 80129b8:	4431      	add	r1, r6
 80129ba:	4541      	cmp	r1, r8
 80129bc:	4450      	add	r0, sl
 80129be:	ee37 7a24 	vadd.f32	s14, s14, s9
 80129c2:	ee77 7a84 	vadd.f32	s15, s15, s8
 80129c6:	ee76 6aa3 	vadd.f32	s13, s13, s7
 80129ca:	db08      	blt.n	80129de <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 80129cc:	ee76 6a85 	vadd.f32	s13, s13, s10
 80129d0:	ee37 7a25 	vadd.f32	s14, s14, s11
 80129d4:	ee77 7a86 	vadd.f32	s15, s15, s12
 80129d8:	3001      	adds	r0, #1
 80129da:	eba1 0108 	sub.w	r1, r1, r8
 80129de:	3f01      	subs	r7, #1
 80129e0:	f04f 0901 	mov.w	r9, #1
 80129e4:	e79e      	b.n	8012924 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 80129e6:	449c      	add	ip, r3
 80129e8:	1aff      	subs	r7, r7, r3
 80129ea:	f1b8 0f00 	cmp.w	r8, #0
 80129ee:	d009      	beq.n	8012a04 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 80129f0:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 80129f4:	9019      	str	r0, [sp, #100]	; 0x64
 80129f6:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 80129fa:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 80129fe:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8012a02:	911d      	str	r1, [sp, #116]	; 0x74
 8012a04:	1ad2      	subs	r2, r2, r3
 8012a06:	e6b5      	b.n	8012774 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8012a08:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8012a0a:	681b      	ldr	r3, [r3, #0]
 8012a0c:	b923      	cbnz	r3, 8012a18 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012a0e:	4b04      	ldr	r3, [pc, #16]	; (8012a20 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8012a10:	6818      	ldr	r0, [r3, #0]
 8012a12:	6803      	ldr	r3, [r0, #0]
 8012a14:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012a16:	4798      	blx	r3
 8012a18:	b05b      	add	sp, #364	; 0x16c
 8012a1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012a1e:	bf00      	nop
 8012a20:	200137bc 	.word	0x200137bc

08012a24 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 8012a24:	b570      	push	{r4, r5, r6, lr}
 8012a26:	4604      	mov	r4, r0
 8012a28:	f89d 601c 	ldrb.w	r6, [sp, #28]
 8012a2c:	9805      	ldr	r0, [sp, #20]
 8012a2e:	6061      	str	r1, [r4, #4]
 8012a30:	2500      	movs	r5, #0
 8012a32:	f89d 1010 	ldrb.w	r1, [sp, #16]
 8012a36:	8263      	strh	r3, [r4, #18]
 8012a38:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8012a3c:	8025      	strh	r5, [r4, #0]
 8012a3e:	7221      	strb	r1, [r4, #8]
 8012a40:	7266      	strb	r6, [r4, #9]
 8012a42:	60e0      	str	r0, [r4, #12]
 8012a44:	8222      	strh	r2, [r4, #16]
 8012a46:	82a3      	strh	r3, [r4, #20]
 8012a48:	82e5      	strh	r5, [r4, #22]
 8012a4a:	8325      	strh	r5, [r4, #24]
 8012a4c:	8365      	strh	r5, [r4, #26]
 8012a4e:	83a5      	strh	r5, [r4, #28]
 8012a50:	83e5      	strh	r5, [r4, #30]
 8012a52:	8425      	strh	r5, [r4, #32]
 8012a54:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8012a58:	b32e      	cbz	r6, 8012aa6 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8012a5a:	6803      	ldr	r3, [r0, #0]
 8012a5c:	695b      	ldr	r3, [r3, #20]
 8012a5e:	4798      	blx	r3
 8012a60:	4606      	mov	r6, r0
 8012a62:	b300      	cbz	r0, 8012aa6 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8012a64:	68e0      	ldr	r0, [r4, #12]
 8012a66:	6803      	ldr	r3, [r0, #0]
 8012a68:	4631      	mov	r1, r6
 8012a6a:	68db      	ldr	r3, [r3, #12]
 8012a6c:	4798      	blx	r3
 8012a6e:	4605      	mov	r5, r0
 8012a70:	b1c8      	cbz	r0, 8012aa6 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8012a72:	7b43      	ldrb	r3, [r0, #13]
 8012a74:	7a82      	ldrb	r2, [r0, #10]
 8012a76:	005b      	lsls	r3, r3, #1
 8012a78:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8012a7c:	4313      	orrs	r3, r2
 8012a7e:	8423      	strh	r3, [r4, #32]
 8012a80:	7a63      	ldrb	r3, [r4, #9]
 8012a82:	2b06      	cmp	r3, #6
 8012a84:	d10f      	bne.n	8012aa6 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8012a86:	68e0      	ldr	r0, [r4, #12]
 8012a88:	6803      	ldr	r3, [r0, #0]
 8012a8a:	462a      	mov	r2, r5
 8012a8c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8012a8e:	4631      	mov	r1, r6
 8012a90:	4798      	blx	r3
 8012a92:	7b6b      	ldrb	r3, [r5, #13]
 8012a94:	005b      	lsls	r3, r3, #1
 8012a96:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8012a9a:	7aab      	ldrb	r3, [r5, #10]
 8012a9c:	4313      	orrs	r3, r2
 8012a9e:	4418      	add	r0, r3
 8012aa0:	8c23      	ldrh	r3, [r4, #32]
 8012aa2:	4418      	add	r0, r3
 8012aa4:	8420      	strh	r0, [r4, #32]
 8012aa6:	4620      	mov	r0, r4
 8012aa8:	bd70      	pop	{r4, r5, r6, pc}

08012aaa <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 8012aaa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012aae:	2400      	movs	r4, #0
 8012ab0:	b085      	sub	sp, #20
 8012ab2:	4681      	mov	r9, r0
 8012ab4:	4688      	mov	r8, r1
 8012ab6:	4692      	mov	sl, r2
 8012ab8:	469b      	mov	fp, r3
 8012aba:	4627      	mov	r7, r4
 8012abc:	4625      	mov	r5, r4
 8012abe:	4626      	mov	r6, r4
 8012ac0:	4554      	cmp	r4, sl
 8012ac2:	da2a      	bge.n	8012b1a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8012ac4:	2300      	movs	r3, #0
 8012ac6:	9303      	str	r3, [sp, #12]
 8012ac8:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8012acc:	429d      	cmp	r5, r3
 8012ace:	d004      	beq.n	8012ada <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 8012ad0:	f242 030b 	movw	r3, #8203	; 0x200b
 8012ad4:	429d      	cmp	r5, r3
 8012ad6:	bf18      	it	ne
 8012ad8:	462f      	movne	r7, r5
 8012ada:	ab03      	add	r3, sp, #12
 8012adc:	4642      	mov	r2, r8
 8012ade:	4659      	mov	r1, fp
 8012ae0:	4648      	mov	r0, r9
 8012ae2:	f003 f965 	bl	8015db0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8012ae6:	4605      	mov	r5, r0
 8012ae8:	b1b8      	cbz	r0, 8012b1a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8012aea:	280a      	cmp	r0, #10
 8012aec:	d015      	beq.n	8012b1a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8012aee:	9a03      	ldr	r2, [sp, #12]
 8012af0:	b18a      	cbz	r2, 8012b16 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 8012af2:	7b50      	ldrb	r0, [r2, #13]
 8012af4:	7a93      	ldrb	r3, [r2, #10]
 8012af6:	8895      	ldrh	r5, [r2, #4]
 8012af8:	0040      	lsls	r0, r0, #1
 8012afa:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8012afe:	4303      	orrs	r3, r0
 8012b00:	9301      	str	r3, [sp, #4]
 8012b02:	f8d8 3000 	ldr.w	r3, [r8]
 8012b06:	4639      	mov	r1, r7
 8012b08:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8012b0a:	4640      	mov	r0, r8
 8012b0c:	4798      	blx	r3
 8012b0e:	9b01      	ldr	r3, [sp, #4]
 8012b10:	4418      	add	r0, r3
 8012b12:	4406      	add	r6, r0
 8012b14:	b2b6      	uxth	r6, r6
 8012b16:	3401      	adds	r4, #1
 8012b18:	e7d2      	b.n	8012ac0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 8012b1a:	4630      	mov	r0, r6
 8012b1c:	b005      	add	sp, #20
 8012b1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08012b22 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 8012b22:	2a02      	cmp	r2, #2
 8012b24:	b530      	push	{r4, r5, lr}
 8012b26:	d011      	beq.n	8012b4c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 8012b28:	2a03      	cmp	r2, #3
 8012b2a:	d01c      	beq.n	8012b66 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 8012b2c:	2a01      	cmp	r2, #1
 8012b2e:	d10c      	bne.n	8012b4a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8012b30:	888b      	ldrh	r3, [r1, #4]
 8012b32:	8801      	ldrh	r1, [r0, #0]
 8012b34:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8012b38:	8844      	ldrh	r4, [r0, #2]
 8012b3a:	8004      	strh	r4, [r0, #0]
 8012b3c:	1a5b      	subs	r3, r3, r1
 8012b3e:	1a9b      	subs	r3, r3, r2
 8012b40:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8012b44:	8043      	strh	r3, [r0, #2]
 8012b46:	8081      	strh	r1, [r0, #4]
 8012b48:	80c2      	strh	r2, [r0, #6]
 8012b4a:	bd30      	pop	{r4, r5, pc}
 8012b4c:	88cb      	ldrh	r3, [r1, #6]
 8012b4e:	8842      	ldrh	r2, [r0, #2]
 8012b50:	1a9b      	subs	r3, r3, r2
 8012b52:	88c2      	ldrh	r2, [r0, #6]
 8012b54:	1a9b      	subs	r3, r3, r2
 8012b56:	888a      	ldrh	r2, [r1, #4]
 8012b58:	8801      	ldrh	r1, [r0, #0]
 8012b5a:	8043      	strh	r3, [r0, #2]
 8012b5c:	1a52      	subs	r2, r2, r1
 8012b5e:	8881      	ldrh	r1, [r0, #4]
 8012b60:	1a52      	subs	r2, r2, r1
 8012b62:	8002      	strh	r2, [r0, #0]
 8012b64:	e7f1      	b.n	8012b4a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8012b66:	88cb      	ldrh	r3, [r1, #6]
 8012b68:	8841      	ldrh	r1, [r0, #2]
 8012b6a:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8012b6e:	f9b0 5000 	ldrsh.w	r5, [r0]
 8012b72:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8012b76:	8045      	strh	r5, [r0, #2]
 8012b78:	1a5b      	subs	r3, r3, r1
 8012b7a:	1a9b      	subs	r3, r3, r2
 8012b7c:	8003      	strh	r3, [r0, #0]
 8012b7e:	8082      	strh	r2, [r0, #4]
 8012b80:	80c4      	strh	r4, [r0, #6]
 8012b82:	e7e2      	b.n	8012b4a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

08012b84 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 8012b84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012b88:	b09f      	sub	sp, #124	; 0x7c
 8012b8a:	9116      	str	r1, [sp, #88]	; 0x58
 8012b8c:	9317      	str	r3, [sp, #92]	; 0x5c
 8012b8e:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8012b90:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8012b92:	8809      	ldrh	r1, [r1, #0]
 8012b94:	889b      	ldrh	r3, [r3, #4]
 8012b96:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 8012b9a:	9212      	str	r2, [sp, #72]	; 0x48
 8012b9c:	440b      	add	r3, r1
 8012b9e:	b21b      	sxth	r3, r3
 8012ba0:	9310      	str	r3, [sp, #64]	; 0x40
 8012ba2:	f8d8 3000 	ldr.w	r3, [r8]
 8012ba6:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 8012baa:	7b19      	ldrb	r1, [r3, #12]
 8012bac:	7adb      	ldrb	r3, [r3, #11]
 8012bae:	9011      	str	r0, [sp, #68]	; 0x44
 8012bb0:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 8012bb4:	9114      	str	r1, [sp, #80]	; 0x50
 8012bb6:	9315      	str	r3, [sp, #84]	; 0x54
 8012bb8:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
 8012bbc:	2a00      	cmp	r2, #0
 8012bbe:	d06a      	beq.n	8012c96 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 8012bc0:	f898 3010 	ldrb.w	r3, [r8, #16]
 8012bc4:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8012bc6:	2b06      	cmp	r3, #6
 8012bc8:	bf14      	ite	ne
 8012bca:	2301      	movne	r3, #1
 8012bcc:	2302      	moveq	r3, #2
 8012bce:	4413      	add	r3, r2
 8012bd0:	f04f 0900 	mov.w	r9, #0
 8012bd4:	930f      	str	r3, [sp, #60]	; 0x3c
 8012bd6:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 8012bda:	464c      	mov	r4, r9
 8012bdc:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8012be0:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 8012be4:	4293      	cmp	r3, r2
 8012be6:	f280 808f 	bge.w	8012d08 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8012bea:	2300      	movs	r3, #0
 8012bec:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 8012bf0:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 8012bf4:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8012bf8:	429c      	cmp	r4, r3
 8012bfa:	d006      	beq.n	8012c0a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 8012bfc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012bfe:	f242 020b 	movw	r2, #8203	; 0x200b
 8012c02:	4294      	cmp	r4, r2
 8012c04:	bf18      	it	ne
 8012c06:	4623      	movne	r3, r4
 8012c08:	930d      	str	r3, [sp, #52]	; 0x34
 8012c0a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012c0c:	992d      	ldr	r1, [sp, #180]	; 0xb4
 8012c0e:	f8d8 2000 	ldr.w	r2, [r8]
 8012c12:	428b      	cmp	r3, r1
 8012c14:	db41      	blt.n	8012c9a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 8012c16:	6813      	ldr	r3, [r2, #0]
 8012c18:	4610      	mov	r0, r2
 8012c1a:	695b      	ldr	r3, [r3, #20]
 8012c1c:	4798      	blx	r3
 8012c1e:	4604      	mov	r4, r0
 8012c20:	f8d8 0000 	ldr.w	r0, [r8]
 8012c24:	6803      	ldr	r3, [r0, #0]
 8012c26:	aa1d      	add	r2, sp, #116	; 0x74
 8012c28:	689d      	ldr	r5, [r3, #8]
 8012c2a:	4621      	mov	r1, r4
 8012c2c:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8012c30:	47a8      	blx	r5
 8012c32:	901c      	str	r0, [sp, #112]	; 0x70
 8012c34:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8012c38:	429c      	cmp	r4, r3
 8012c3a:	f000 80eb 	beq.w	8012e14 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8012c3e:	f242 030b 	movw	r3, #8203	; 0x200b
 8012c42:	429c      	cmp	r4, r3
 8012c44:	f000 80e6 	beq.w	8012e14 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8012c48:	2c00      	cmp	r4, #0
 8012c4a:	f000 80f8 	beq.w	8012e3e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8012c4e:	2c0a      	cmp	r4, #10
 8012c50:	d060      	beq.n	8012d14 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8012c52:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8012c54:	b36a      	cbz	r2, 8012cb2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 8012c56:	8894      	ldrh	r4, [r2, #4]
 8012c58:	f1bb 0f00 	cmp.w	fp, #0
 8012c5c:	d03b      	beq.n	8012cd6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 8012c5e:	f892 900d 	ldrb.w	r9, [r2, #13]
 8012c62:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8012c66:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8012c6a:	f892 900a 	ldrb.w	r9, [r2, #10]
 8012c6e:	f1bb 0f01 	cmp.w	fp, #1
 8012c72:	ea49 0903 	orr.w	r9, r9, r3
 8012c76:	d134      	bne.n	8012ce2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 8012c78:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012c7a:	eba6 0609 	sub.w	r6, r6, r9
 8012c7e:	2b00      	cmp	r3, #0
 8012c80:	d14f      	bne.n	8012d22 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8012c82:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8012c84:	eb09 0306 	add.w	r3, r9, r6
 8012c88:	4413      	add	r3, r2
 8012c8a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8012c8c:	f9b2 2000 	ldrsh.w	r2, [r2]
 8012c90:	4293      	cmp	r3, r2
 8012c92:	da51      	bge.n	8012d38 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8012c94:	e038      	b.n	8012d08 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8012c96:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8012c98:	e79a      	b.n	8012bd0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 8012c9a:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8012c9e:	9301      	str	r3, [sp, #4]
 8012ca0:	ab1d      	add	r3, sp, #116	; 0x74
 8012ca2:	9300      	str	r3, [sp, #0]
 8012ca4:	4659      	mov	r1, fp
 8012ca6:	ab1c      	add	r3, sp, #112	; 0x70
 8012ca8:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8012caa:	f003 f8ca 	bl	8015e42 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 8012cae:	4604      	mov	r4, r0
 8012cb0:	e7c0      	b.n	8012c34 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 8012cb2:	f8d8 0000 	ldr.w	r0, [r8]
 8012cb6:	6803      	ldr	r3, [r0, #0]
 8012cb8:	691b      	ldr	r3, [r3, #16]
 8012cba:	4798      	blx	r3
 8012cbc:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8012cc0:	4298      	cmp	r0, r3
 8012cc2:	f000 80a7 	beq.w	8012e14 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8012cc6:	f242 030b 	movw	r3, #8203	; 0x200b
 8012cca:	4298      	cmp	r0, r3
 8012ccc:	f000 80a2 	beq.w	8012e14 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8012cd0:	f1bb 0f00 	cmp.w	fp, #0
 8012cd4:	d100      	bne.n	8012cd8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 8012cd6:	444e      	add	r6, r9
 8012cd8:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8012cda:	2a00      	cmp	r2, #0
 8012cdc:	d1bf      	bne.n	8012c5e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 8012cde:	4691      	mov	r9, r2
 8012ce0:	e098      	b.n	8012e14 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8012ce2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012ce4:	2b00      	cmp	r3, #0
 8012ce6:	f000 80ac 	beq.w	8012e42 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2be>
 8012cea:	f1bb 0f00 	cmp.w	fp, #0
 8012cee:	d118      	bne.n	8012d22 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8012cf0:	f8d8 0000 	ldr.w	r0, [r8]
 8012cf4:	990d      	ldr	r1, [sp, #52]	; 0x34
 8012cf6:	6803      	ldr	r3, [r0, #0]
 8012cf8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8012cfa:	4798      	blx	r3
 8012cfc:	4406      	add	r6, r0
 8012cfe:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8012d00:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8012d02:	1af3      	subs	r3, r6, r3
 8012d04:	4293      	cmp	r3, r2
 8012d06:	dd17      	ble.n	8012d38 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8012d08:	2c00      	cmp	r4, #0
 8012d0a:	f000 8098 	beq.w	8012e3e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8012d0e:	2c0a      	cmp	r4, #10
 8012d10:	f040 8086 	bne.w	8012e20 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
 8012d14:	240a      	movs	r4, #10
 8012d16:	fab4 f084 	clz	r0, r4
 8012d1a:	0940      	lsrs	r0, r0, #5
 8012d1c:	b01f      	add	sp, #124	; 0x7c
 8012d1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012d22:	f8d8 0000 	ldr.w	r0, [r8]
 8012d26:	990d      	ldr	r1, [sp, #52]	; 0x34
 8012d28:	6803      	ldr	r3, [r0, #0]
 8012d2a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8012d2c:	4798      	blx	r3
 8012d2e:	f1bb 0f01 	cmp.w	fp, #1
 8012d32:	eba6 0600 	sub.w	r6, r6, r0
 8012d36:	d0a4      	beq.n	8012c82 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 8012d38:	981c      	ldr	r0, [sp, #112]	; 0x70
 8012d3a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8012d3c:	f990 1009 	ldrsb.w	r1, [r0, #9]
 8012d40:	f9b3 7000 	ldrsh.w	r7, [r3]
 8012d44:	7b43      	ldrb	r3, [r0, #13]
 8012d46:	015b      	lsls	r3, r3, #5
 8012d48:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8012d4c:	7983      	ldrb	r3, [r0, #6]
 8012d4e:	4431      	add	r1, r6
 8012d50:	4313      	orrs	r3, r2
 8012d52:	440b      	add	r3, r1
 8012d54:	42bb      	cmp	r3, r7
 8012d56:	db5d      	blt.n	8012e14 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8012d58:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012d5a:	4299      	cmp	r1, r3
 8012d5c:	da5a      	bge.n	8012e14 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8012d5e:	f8d8 0000 	ldr.w	r0, [r8]
 8012d62:	6803      	ldr	r3, [r0, #0]
 8012d64:	42b7      	cmp	r7, r6
 8012d66:	bfc8      	it	gt
 8012d68:	1bbf      	subgt	r7, r7, r6
 8012d6a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8012d6c:	bfcc      	ite	gt
 8012d6e:	b2bf      	uxthgt	r7, r7
 8012d70:	2700      	movle	r7, #0
 8012d72:	4798      	blx	r3
 8012d74:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8012d76:	7b5a      	ldrb	r2, [r3, #13]
 8012d78:	00d1      	lsls	r1, r2, #3
 8012d7a:	f401 7580 	and.w	r5, r1, #256	; 0x100
 8012d7e:	7a19      	ldrb	r1, [r3, #8]
 8012d80:	4329      	orrs	r1, r5
 8012d82:	0655      	lsls	r5, r2, #25
 8012d84:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 8012d86:	bf44      	itt	mi
 8012d88:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 8012d8c:	b209      	sxthmi	r1, r1
 8012d8e:	1945      	adds	r5, r0, r5
 8012d90:	1a6d      	subs	r5, r5, r1
 8012d92:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8012d94:	b2ad      	uxth	r5, r5
 8012d96:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 8012d9a:	fa0f fa85 	sxth.w	sl, r5
 8012d9e:	4551      	cmp	r1, sl
 8012da0:	dd3c      	ble.n	8012e1c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 8012da2:	0112      	lsls	r2, r2, #4
 8012da4:	79d8      	ldrb	r0, [r3, #7]
 8012da6:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8012daa:	4302      	orrs	r2, r0
 8012dac:	4492      	add	sl, r2
 8012dae:	4551      	cmp	r1, sl
 8012db0:	dc30      	bgt.n	8012e14 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8012db2:	1b4d      	subs	r5, r1, r5
 8012db4:	b22d      	sxth	r5, r5
 8012db6:	468a      	mov	sl, r1
 8012db8:	9319      	str	r3, [sp, #100]	; 0x64
 8012dba:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8012dbc:	f8d8 0000 	ldr.w	r0, [r8]
 8012dc0:	681a      	ldr	r2, [r3, #0]
 8012dc2:	6801      	ldr	r1, [r0, #0]
 8012dc4:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8012dc6:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8012dc8:	9313      	str	r3, [sp, #76]	; 0x4c
 8012dca:	9218      	str	r2, [sp, #96]	; 0x60
 8012dcc:	6c09      	ldr	r1, [r1, #64]	; 0x40
 8012dce:	4788      	blx	r1
 8012dd0:	f898 1006 	ldrb.w	r1, [r8, #6]
 8012dd4:	910b      	str	r1, [sp, #44]	; 0x2c
 8012dd6:	f898 100e 	ldrb.w	r1, [r8, #14]
 8012dda:	910a      	str	r1, [sp, #40]	; 0x28
 8012ddc:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 8012de0:	9109      	str	r1, [sp, #36]	; 0x24
 8012de2:	f8d8 1008 	ldr.w	r1, [r8, #8]
 8012de6:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8012de8:	9305      	str	r3, [sp, #20]
 8012dea:	b2ad      	uxth	r5, r5
 8012dec:	e9cd 0107 	strd	r0, r1, [sp, #28]
 8012df0:	e9cd 7502 	strd	r7, r5, [sp, #8]
 8012df4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8012df6:	9304      	str	r3, [sp, #16]
 8012df8:	4437      	add	r7, r6
 8012dfa:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8012dfc:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8012dfe:	9206      	str	r2, [sp, #24]
 8012e00:	b23f      	sxth	r7, r7
 8012e02:	f8cd a004 	str.w	sl, [sp, #4]
 8012e06:	9700      	str	r7, [sp, #0]
 8012e08:	681a      	ldr	r2, [r3, #0]
 8012e0a:	9916      	ldr	r1, [sp, #88]	; 0x58
 8012e0c:	685b      	ldr	r3, [r3, #4]
 8012e0e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8012e10:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8012e12:	47a8      	blx	r5
 8012e14:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012e16:	3301      	adds	r3, #1
 8012e18:	930e      	str	r3, [sp, #56]	; 0x38
 8012e1a:	e6e1      	b.n	8012be0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 8012e1c:	2500      	movs	r5, #0
 8012e1e:	e7cb      	b.n	8012db8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 8012e20:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8012e22:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8012e24:	3501      	adds	r5, #1
 8012e26:	429d      	cmp	r5, r3
 8012e28:	f6bf af75 	bge.w	8012d16 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8012e2c:	4659      	mov	r1, fp
 8012e2e:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8012e30:	f7f3 fe76 	bl	8006b20 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8012e34:	4604      	mov	r4, r0
 8012e36:	b110      	cbz	r0, 8012e3e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8012e38:	280a      	cmp	r0, #10
 8012e3a:	d1f2      	bne.n	8012e22 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
 8012e3c:	e76a      	b.n	8012d14 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8012e3e:	2400      	movs	r4, #0
 8012e40:	e769      	b.n	8012d16 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8012e42:	f1bb 0f00 	cmp.w	fp, #0
 8012e46:	f43f af5a 	beq.w	8012cfe <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 8012e4a:	e775      	b.n	8012d38 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

08012e4c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 8012e4c:	b530      	push	{r4, r5, lr}
 8012e4e:	8ac4      	ldrh	r4, [r0, #22]
 8012e50:	8b45      	ldrh	r5, [r0, #26]
 8012e52:	8343      	strh	r3, [r0, #26]
 8012e54:	442c      	add	r4, r5
 8012e56:	1ae4      	subs	r4, r4, r3
 8012e58:	82c4      	strh	r4, [r0, #22]
 8012e5a:	8b83      	ldrh	r3, [r0, #28]
 8012e5c:	8b04      	ldrh	r4, [r0, #24]
 8012e5e:	4422      	add	r2, r4
 8012e60:	440c      	add	r4, r1
 8012e62:	1a59      	subs	r1, r3, r1
 8012e64:	83c2      	strh	r2, [r0, #30]
 8012e66:	8304      	strh	r4, [r0, #24]
 8012e68:	8381      	strh	r1, [r0, #28]
 8012e6a:	bd30      	pop	{r4, r5, pc}

08012e6c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 8012e6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012e70:	4604      	mov	r4, r0
 8012e72:	8a47      	ldrh	r7, [r0, #18]
 8012e74:	68c0      	ldr	r0, [r0, #12]
 8012e76:	6803      	ldr	r3, [r0, #0]
 8012e78:	b085      	sub	sp, #20
 8012e7a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012e7c:	4798      	blx	r3
 8012e7e:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 8012e82:	7a63      	ldrb	r3, [r4, #9]
 8012e84:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 8012e88:	42b7      	cmp	r7, r6
 8012e8a:	f103 33ff 	add.w	r3, r3, #4294967295
 8012e8e:	bfac      	ite	ge
 8012e90:	f04f 0900 	movge.w	r9, #0
 8012e94:	f04f 0901 	movlt.w	r9, #1
 8012e98:	2b05      	cmp	r3, #5
 8012e9a:	d804      	bhi.n	8012ea6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 8012e9c:	e8df f003 	tbb	[pc, r3]
 8012ea0:	470e0854 	.word	0x470e0854
 8012ea4:	4c4c      	.short	0x4c4c
 8012ea6:	2500      	movs	r5, #0
 8012ea8:	46a9      	mov	r9, r5
 8012eaa:	462e      	mov	r6, r5
 8012eac:	462f      	mov	r7, r5
 8012eae:	e00d      	b.n	8012ecc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8012eb0:	42b7      	cmp	r7, r6
 8012eb2:	bfb4      	ite	lt
 8012eb4:	2600      	movlt	r6, #0
 8012eb6:	2601      	movge	r6, #1
 8012eb8:	2500      	movs	r5, #0
 8012eba:	e7f7      	b.n	8012eac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8012ebc:	42b7      	cmp	r7, r6
 8012ebe:	464d      	mov	r5, r9
 8012ec0:	f04f 0900 	mov.w	r9, #0
 8012ec4:	bfb4      	ite	lt
 8012ec6:	2600      	movlt	r6, #0
 8012ec8:	2601      	movge	r6, #1
 8012eca:	464f      	mov	r7, r9
 8012ecc:	f04f 0800 	mov.w	r8, #0
 8012ed0:	f8a4 8016 	strh.w	r8, [r4, #22]
 8012ed4:	f8a4 8018 	strh.w	r8, [r4, #24]
 8012ed8:	f8cd 8004 	str.w	r8, [sp, #4]
 8012edc:	2300      	movs	r3, #0
 8012ede:	9303      	str	r3, [sp, #12]
 8012ee0:	8823      	ldrh	r3, [r4, #0]
 8012ee2:	2b20      	cmp	r3, #32
 8012ee4:	d034      	beq.n	8012f50 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 8012ee6:	f242 010b 	movw	r1, #8203	; 0x200b
 8012eea:	1a5a      	subs	r2, r3, r1
 8012eec:	f1d2 0a00 	rsbs	sl, r2, #0
 8012ef0:	eb4a 0a02 	adc.w	sl, sl, r2
 8012ef4:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8012ef8:	4293      	cmp	r3, r2
 8012efa:	d009      	beq.n	8012f10 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8012efc:	428b      	cmp	r3, r1
 8012efe:	9a01      	ldr	r2, [sp, #4]
 8012f00:	bf18      	it	ne
 8012f02:	461a      	movne	r2, r3
 8012f04:	9201      	str	r2, [sp, #4]
 8012f06:	bf0c      	ite	eq
 8012f08:	f04f 0a01 	moveq.w	sl, #1
 8012f0c:	f04f 0a00 	movne.w	sl, #0
 8012f10:	ab03      	add	r3, sp, #12
 8012f12:	68e2      	ldr	r2, [r4, #12]
 8012f14:	7a21      	ldrb	r1, [r4, #8]
 8012f16:	6860      	ldr	r0, [r4, #4]
 8012f18:	f002 ff4a 	bl	8015db0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8012f1c:	8020      	strh	r0, [r4, #0]
 8012f1e:	b9d8      	cbnz	r0, 8012f58 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 8012f20:	8ba2      	ldrh	r2, [r4, #28]
 8012f22:	2300      	movs	r3, #0
 8012f24:	4611      	mov	r1, r2
 8012f26:	4620      	mov	r0, r4
 8012f28:	f7ff ff90 	bl	8012e4c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8012f2c:	e06e      	b.n	801300c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8012f2e:	2500      	movs	r5, #0
 8012f30:	46a9      	mov	r9, r5
 8012f32:	462e      	mov	r6, r5
 8012f34:	2701      	movs	r7, #1
 8012f36:	e7c9      	b.n	8012ecc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8012f38:	42b7      	cmp	r7, r6
 8012f3a:	f04f 0500 	mov.w	r5, #0
 8012f3e:	bfb4      	ite	lt
 8012f40:	2700      	movlt	r7, #0
 8012f42:	2701      	movge	r7, #1
 8012f44:	462e      	mov	r6, r5
 8012f46:	e7c1      	b.n	8012ecc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8012f48:	2500      	movs	r5, #0
 8012f4a:	46a9      	mov	r9, r5
 8012f4c:	2601      	movs	r6, #1
 8012f4e:	e7ad      	b.n	8012eac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8012f50:	9301      	str	r3, [sp, #4]
 8012f52:	f04f 0a01 	mov.w	sl, #1
 8012f56:	e7db      	b.n	8012f10 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8012f58:	8b63      	ldrh	r3, [r4, #26]
 8012f5a:	280a      	cmp	r0, #10
 8012f5c:	f103 0301 	add.w	r3, r3, #1
 8012f60:	8363      	strh	r3, [r4, #26]
 8012f62:	d0dd      	beq.n	8012f20 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 8012f64:	9a03      	ldr	r2, [sp, #12]
 8012f66:	bb62      	cbnz	r2, 8012fc2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 8012f68:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8012f6c:	4298      	cmp	r0, r3
 8012f6e:	d003      	beq.n	8012f78 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8012f70:	f242 030b 	movw	r3, #8203	; 0x200b
 8012f74:	4298      	cmp	r0, r3
 8012f76:	d1b1      	bne.n	8012edc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8012f78:	8823      	ldrh	r3, [r4, #0]
 8012f7a:	8ba1      	ldrh	r1, [r4, #28]
 8012f7c:	2b20      	cmp	r3, #32
 8012f7e:	d003      	beq.n	8012f88 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 8012f80:	f242 000b 	movw	r0, #8203	; 0x200b
 8012f84:	4283      	cmp	r3, r0
 8012f86:	d131      	bne.n	8012fec <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 8012f88:	f1ba 0f00 	cmp.w	sl, #0
 8012f8c:	bf0a      	itet	eq
 8012f8e:	4688      	moveq	r8, r1
 8012f90:	4650      	movne	r0, sl
 8012f92:	2001      	moveq	r0, #1
 8012f94:	440a      	add	r2, r1
 8012f96:	8b23      	ldrh	r3, [r4, #24]
 8012f98:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 8012f9c:	b292      	uxth	r2, r2
 8012f9e:	83a2      	strh	r2, [r4, #28]
 8012fa0:	4413      	add	r3, r2
 8012fa2:	f1b9 0f00 	cmp.w	r9, #0
 8012fa6:	d102      	bne.n	8012fae <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 8012fa8:	2d00      	cmp	r5, #0
 8012faa:	d042      	beq.n	8013032 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 8012fac:	b300      	cbz	r0, 8012ff0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 8012fae:	8c21      	ldrh	r1, [r4, #32]
 8012fb0:	4419      	add	r1, r3
 8012fb2:	458c      	cmp	ip, r1
 8012fb4:	da37      	bge.n	8013026 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8012fb6:	8ae1      	ldrh	r1, [r4, #22]
 8012fb8:	2900      	cmp	r1, #0
 8012fba:	d034      	beq.n	8013026 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8012fbc:	4563      	cmp	r3, ip
 8012fbe:	dd8d      	ble.n	8012edc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8012fc0:	e01d      	b.n	8012ffe <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 8012fc2:	8893      	ldrh	r3, [r2, #4]
 8012fc4:	8023      	strh	r3, [r4, #0]
 8012fc6:	f892 b00d 	ldrb.w	fp, [r2, #13]
 8012fca:	9901      	ldr	r1, [sp, #4]
 8012fcc:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 8012fd0:	f40b 7080 	and.w	r0, fp, #256	; 0x100
 8012fd4:	f892 b00a 	ldrb.w	fp, [r2, #10]
 8012fd8:	ea4b 0b00 	orr.w	fp, fp, r0
 8012fdc:	68e0      	ldr	r0, [r4, #12]
 8012fde:	6803      	ldr	r3, [r0, #0]
 8012fe0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8012fe2:	4798      	blx	r3
 8012fe4:	eb0b 0200 	add.w	r2, fp, r0
 8012fe8:	b292      	uxth	r2, r2
 8012fea:	e7c5      	b.n	8012f78 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8012fec:	2000      	movs	r0, #0
 8012fee:	e7d1      	b.n	8012f94 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 8012ff0:	4563      	cmp	r3, ip
 8012ff2:	f77f af73 	ble.w	8012edc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8012ff6:	8ae3      	ldrh	r3, [r4, #22]
 8012ff8:	2b00      	cmp	r3, #0
 8012ffa:	f43f af6f 	beq.w	8012edc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8012ffe:	2301      	movs	r3, #1
 8013000:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 8013004:	8c22      	ldrh	r2, [r4, #32]
 8013006:	8be3      	ldrh	r3, [r4, #30]
 8013008:	4413      	add	r3, r2
 801300a:	83e3      	strh	r3, [r4, #30]
 801300c:	68e0      	ldr	r0, [r4, #12]
 801300e:	6803      	ldr	r3, [r0, #0]
 8013010:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013012:	4798      	blx	r3
 8013014:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 8013018:	4418      	add	r0, r3
 801301a:	8a63      	ldrh	r3, [r4, #18]
 801301c:	1a18      	subs	r0, r3, r0
 801301e:	8260      	strh	r0, [r4, #18]
 8013020:	b005      	add	sp, #20
 8013022:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013026:	2300      	movs	r3, #0
 8013028:	4611      	mov	r1, r2
 801302a:	4620      	mov	r0, r4
 801302c:	f7ff ff0e 	bl	8012e4c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8013030:	e754      	b.n	8012edc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8013032:	4563      	cmp	r3, ip
 8013034:	dd14      	ble.n	8013060 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 8013036:	b117      	cbz	r7, 801303e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 8013038:	2301      	movs	r3, #1
 801303a:	460a      	mov	r2, r1
 801303c:	e772      	b.n	8012f24 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 801303e:	2e00      	cmp	r6, #0
 8013040:	f43f af4c 	beq.w	8012edc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8013044:	2800      	cmp	r0, #0
 8013046:	f47f af49 	bne.w	8012edc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801304a:	f1ba 0f00 	cmp.w	sl, #0
 801304e:	d002      	beq.n	8013056 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 8013050:	2301      	movs	r3, #1
 8013052:	4642      	mov	r2, r8
 8013054:	e767      	b.n	8012f26 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 8013056:	8ae3      	ldrh	r3, [r4, #22]
 8013058:	2b00      	cmp	r3, #0
 801305a:	f43f af3f 	beq.w	8012edc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801305e:	e7d5      	b.n	801300c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8013060:	2800      	cmp	r0, #0
 8013062:	f47f af3b 	bne.w	8012edc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8013066:	f1ba 0f00 	cmp.w	sl, #0
 801306a:	f43f af37 	beq.w	8012edc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801306e:	2301      	movs	r3, #1
 8013070:	4642      	mov	r2, r8
 8013072:	e7da      	b.n	801302a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

08013074 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 8013074:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013076:	4605      	mov	r5, r0
 8013078:	b08f      	sub	sp, #60	; 0x3c
 801307a:	4617      	mov	r7, r2
 801307c:	461c      	mov	r4, r3
 801307e:	460e      	mov	r6, r1
 8013080:	b1d1      	cbz	r1, 80130b8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 8013082:	681b      	ldr	r3, [r3, #0]
 8013084:	4620      	mov	r0, r4
 8013086:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013088:	4798      	blx	r3
 801308a:	4240      	negs	r0, r0
 801308c:	b200      	sxth	r0, r0
 801308e:	e9cd 4001 	strd	r4, r0, [sp, #4]
 8013092:	9603      	str	r6, [sp, #12]
 8013094:	9700      	str	r7, [sp, #0]
 8013096:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801309a:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 801309e:	4629      	mov	r1, r5
 80130a0:	a805      	add	r0, sp, #20
 80130a2:	f7ff fcbf 	bl	8012a24 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 80130a6:	2401      	movs	r4, #1
 80130a8:	a805      	add	r0, sp, #20
 80130aa:	f7ff fedf 	bl	8012e6c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80130ae:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 80130b2:	b163      	cbz	r3, 80130ce <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 80130b4:	3401      	adds	r4, #1
 80130b6:	e7f7      	b.n	80130a8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 80130b8:	f002 ff48 	bl	8015f4c <_ZN8touchgfx12TextProvider11getNextCharEv>
 80130bc:	2401      	movs	r4, #1
 80130be:	280a      	cmp	r0, #10
 80130c0:	4628      	mov	r0, r5
 80130c2:	bf08      	it	eq
 80130c4:	3401      	addeq	r4, #1
 80130c6:	f002 ff41 	bl	8015f4c <_ZN8touchgfx12TextProvider11getNextCharEv>
 80130ca:	2800      	cmp	r0, #0
 80130cc:	d1f7      	bne.n	80130be <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 80130ce:	b2a0      	uxth	r0, r4
 80130d0:	b00f      	add	sp, #60	; 0x3c
 80130d2:	bdf0      	pop	{r4, r5, r6, r7, pc}

080130d4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 80130d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80130d8:	b0e3      	sub	sp, #396	; 0x18c
 80130da:	461c      	mov	r4, r3
 80130dc:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
 80130de:	4683      	mov	fp, r0
 80130e0:	4688      	mov	r8, r1
 80130e2:	2b00      	cmp	r3, #0
 80130e4:	f000 8112 	beq.w	801330c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80130e8:	6823      	ldr	r3, [r4, #0]
 80130ea:	2b00      	cmp	r3, #0
 80130ec:	f000 810e 	beq.w	801330c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80130f0:	7ba3      	ldrb	r3, [r4, #14]
 80130f2:	2b00      	cmp	r3, #0
 80130f4:	f000 810a 	beq.w	801330c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80130f8:	6810      	ldr	r0, [r2, #0]
 80130fa:	6851      	ldr	r1, [r2, #4]
 80130fc:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 8013100:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8013104:	ad0a      	add	r5, sp, #40	; 0x28
 8013106:	462b      	mov	r3, r5
 8013108:	c303      	stmia	r3!, {r0, r1}
 801310a:	2100      	movs	r1, #0
 801310c:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 8013110:	910c      	str	r1, [sp, #48]	; 0x30
 8013112:	79a2      	ldrb	r2, [r4, #6]
 8013114:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8013118:	a90c      	add	r1, sp, #48	; 0x30
 801311a:	4628      	mov	r0, r5
 801311c:	f7ff fd01 	bl	8012b22 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8013120:	a90c      	add	r1, sp, #48	; 0x30
 8013122:	4608      	mov	r0, r1
 8013124:	79a2      	ldrb	r2, [r4, #6]
 8013126:	f7ff fcfc 	bl	8012b22 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 801312a:	a817      	add	r0, sp, #92	; 0x5c
 801312c:	f002 fae2 	bl	80156f4 <_ZN8touchgfx12TextProviderC1Ev>
 8013130:	6820      	ldr	r0, [r4, #0]
 8013132:	6803      	ldr	r3, [r0, #0]
 8013134:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8013136:	4798      	blx	r3
 8013138:	4606      	mov	r6, r0
 801313a:	6820      	ldr	r0, [r4, #0]
 801313c:	6803      	ldr	r3, [r0, #0]
 801313e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8013140:	4798      	blx	r3
 8013142:	4633      	mov	r3, r6
 8013144:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 8013146:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 8013148:	9000      	str	r0, [sp, #0]
 801314a:	a817      	add	r0, sp, #92	; 0x5c
 801314c:	f002 fb2d 	bl	80157aa <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8013150:	6820      	ldr	r0, [r4, #0]
 8013152:	f894 a004 	ldrb.w	sl, [r4, #4]
 8013156:	6803      	ldr	r3, [r0, #0]
 8013158:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801315a:	4798      	blx	r3
 801315c:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 8013160:	6823      	ldr	r3, [r4, #0]
 8013162:	4607      	mov	r7, r0
 8013164:	4406      	add	r6, r0
 8013166:	a830      	add	r0, sp, #192	; 0xc0
 8013168:	f893 9009 	ldrb.w	r9, [r3, #9]
 801316c:	f002 fac2 	bl	80156f4 <_ZN8touchgfx12TextProviderC1Ev>
 8013170:	7c23      	ldrb	r3, [r4, #16]
 8013172:	b17b      	cbz	r3, 8013194 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 8013174:	6820      	ldr	r0, [r4, #0]
 8013176:	6803      	ldr	r3, [r0, #0]
 8013178:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801317a:	4798      	blx	r3
 801317c:	9009      	str	r0, [sp, #36]	; 0x24
 801317e:	6820      	ldr	r0, [r4, #0]
 8013180:	6802      	ldr	r2, [r0, #0]
 8013182:	6d12      	ldr	r2, [r2, #80]	; 0x50
 8013184:	4790      	blx	r2
 8013186:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013188:	9000      	str	r0, [sp, #0]
 801318a:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 801318c:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 801318e:	a830      	add	r0, sp, #192	; 0xc0
 8013190:	f002 fb0b 	bl	80157aa <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8013194:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8013198:	7be2      	ldrb	r2, [r4, #15]
 801319a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 801319e:	1a8a      	subs	r2, r1, r2
 80131a0:	7c21      	ldrb	r1, [r4, #16]
 80131a2:	9103      	str	r1, [sp, #12]
 80131a4:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 80131a8:	9102      	str	r1, [sp, #8]
 80131aa:	6821      	ldr	r1, [r4, #0]
 80131ac:	9101      	str	r1, [sp, #4]
 80131ae:	7961      	ldrb	r1, [r4, #5]
 80131b0:	9100      	str	r1, [sp, #0]
 80131b2:	b292      	uxth	r2, r2
 80131b4:	a930      	add	r1, sp, #192	; 0xc0
 80131b6:	a80e      	add	r0, sp, #56	; 0x38
 80131b8:	f7ff fc34 	bl	8012a24 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 80131bc:	2e00      	cmp	r6, #0
 80131be:	dc5b      	bgt.n	8013278 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 80131c0:	af17      	add	r7, sp, #92	; 0x5c
 80131c2:	f04f 0900 	mov.w	r9, #0
 80131c6:	7c23      	ldrb	r3, [r4, #16]
 80131c8:	2b00      	cmp	r3, #0
 80131ca:	f000 80b1 	beq.w	8013330 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 80131ce:	a80e      	add	r0, sp, #56	; 0x38
 80131d0:	f7ff fe4c 	bl	8012e6c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80131d4:	f1ba 0f00 	cmp.w	sl, #0
 80131d8:	f000 80a5 	beq.w	8013326 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 80131dc:	7c23      	ldrb	r3, [r4, #16]
 80131de:	9309      	str	r3, [sp, #36]	; 0x24
 80131e0:	2264      	movs	r2, #100	; 0x64
 80131e2:	4639      	mov	r1, r7
 80131e4:	a849      	add	r0, sp, #292	; 0x124
 80131e6:	f014 fa6e 	bl	80276c6 <memcpy>
 80131ea:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80131ec:	2b00      	cmp	r3, #0
 80131ee:	f000 80a7 	beq.w	8013340 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 80131f2:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 80131f6:	7922      	ldrb	r2, [r4, #4]
 80131f8:	2a01      	cmp	r2, #1
 80131fa:	f040 808a 	bne.w	8013312 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 80131fe:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
 8013202:	1ac0      	subs	r0, r0, r3
 8013204:	2302      	movs	r3, #2
 8013206:	fb90 f0f3 	sdiv	r0, r0, r3
 801320a:	b200      	sxth	r0, r0
 801320c:	7c23      	ldrb	r3, [r4, #16]
 801320e:	2b00      	cmp	r3, #0
 8013210:	f000 808b 	beq.w	801332a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8013214:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
 8013218:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
 801321c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8013220:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8013224:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 8013228:	4410      	add	r0, r2
 801322a:	b200      	sxth	r0, r0
 801322c:	9000      	str	r0, [sp, #0]
 801322e:	e9cd 9703 	strd	r9, r7, [sp, #12]
 8013232:	e9cd 5401 	strd	r5, r4, [sp, #4]
 8013236:	4642      	mov	r2, r8
 8013238:	2100      	movs	r1, #0
 801323a:	4658      	mov	r0, fp
 801323c:	f7ff fca2 	bl	8012b84 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 8013240:	2800      	cmp	r0, #0
 8013242:	d163      	bne.n	801330c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8013244:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8013248:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 801324c:	b2b2      	uxth	r2, r6
 801324e:	4413      	add	r3, r2
 8013250:	1a8a      	subs	r2, r1, r2
 8013252:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
 8013256:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
 801325a:	b21b      	sxth	r3, r3
 801325c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8013260:	2a00      	cmp	r2, #0
 8013262:	d153      	bne.n	801330c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8013264:	6822      	ldr	r2, [r4, #0]
 8013266:	8869      	ldrh	r1, [r5, #2]
 8013268:	7a12      	ldrb	r2, [r2, #8]
 801326a:	1a9b      	subs	r3, r3, r2
 801326c:	88ea      	ldrh	r2, [r5, #6]
 801326e:	440a      	add	r2, r1
 8013270:	b212      	sxth	r2, r2
 8013272:	4293      	cmp	r3, r2
 8013274:	dda7      	ble.n	80131c6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 8013276:	e049      	b.n	801330c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8013278:	7c23      	ldrb	r3, [r4, #16]
 801327a:	444f      	add	r7, r9
 801327c:	b1c3      	cbz	r3, 80132b0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 801327e:	f64f 79ff 	movw	r9, #65535	; 0xffff
 8013282:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8013286:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801328a:	443b      	add	r3, r7
 801328c:	4293      	cmp	r3, r2
 801328e:	da97      	bge.n	80131c0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8013290:	a80e      	add	r0, sp, #56	; 0x38
 8013292:	f7ff fdeb 	bl	8012e6c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8013296:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
 801329a:	3b01      	subs	r3, #1
 801329c:	b29b      	uxth	r3, r3
 801329e:	454b      	cmp	r3, r9
 80132a0:	9309      	str	r3, [sp, #36]	; 0x24
 80132a2:	d021      	beq.n	80132e8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 80132a4:	7961      	ldrb	r1, [r4, #5]
 80132a6:	a817      	add	r0, sp, #92	; 0x5c
 80132a8:	f7f3 fc3a 	bl	8006b20 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80132ac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80132ae:	e7f4      	b.n	801329a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 80132b0:	fa1f f986 	uxth.w	r9, r6
 80132b4:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80132b8:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80132bc:	443b      	add	r3, r7
 80132be:	4293      	cmp	r3, r2
 80132c0:	f6bf af7e 	bge.w	80131c0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 80132c4:	a817      	add	r0, sp, #92	; 0x5c
 80132c6:	f002 fe41 	bl	8015f4c <_ZN8touchgfx12TextProvider11getNextCharEv>
 80132ca:	b1f8      	cbz	r0, 801330c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80132cc:	280a      	cmp	r0, #10
 80132ce:	d1f1      	bne.n	80132b4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 80132d0:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 80132d4:	444b      	add	r3, r9
 80132d6:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80132da:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 80132de:	eba3 0309 	sub.w	r3, r3, r9
 80132e2:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80132e6:	e7e5      	b.n	80132b4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 80132e8:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 80132ec:	b2b3      	uxth	r3, r6
 80132ee:	441a      	add	r2, r3
 80132f0:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 80132f4:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
 80132f8:	1ad3      	subs	r3, r2, r3
 80132fa:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80132fe:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8013302:	b11b      	cbz	r3, 801330c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8013304:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
 8013308:	2b00      	cmp	r3, #0
 801330a:	d0ba      	beq.n	8013282 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 801330c:	b063      	add	sp, #396	; 0x18c
 801330e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013312:	2a02      	cmp	r2, #2
 8013314:	d105      	bne.n	8013322 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 8013316:	7be2      	ldrb	r2, [r4, #15]
 8013318:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 801331c:	1a80      	subs	r0, r0, r2
 801331e:	1ac0      	subs	r0, r0, r3
 8013320:	e773      	b.n	801320a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 8013322:	2000      	movs	r0, #0
 8013324:	e772      	b.n	801320c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8013326:	7be0      	ldrb	r0, [r4, #15]
 8013328:	e770      	b.n	801320c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 801332a:	f647 72ff 	movw	r2, #32767	; 0x7fff
 801332e:	e773      	b.n	8013218 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 8013330:	f1ba 0f00 	cmp.w	sl, #0
 8013334:	d0f7      	beq.n	8013326 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8013336:	2264      	movs	r2, #100	; 0x64
 8013338:	4639      	mov	r1, r7
 801333a:	a849      	add	r0, sp, #292	; 0x124
 801333c:	f014 f9c3 	bl	80276c6 <memcpy>
 8013340:	2300      	movs	r3, #0
 8013342:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8013346:	6821      	ldr	r1, [r4, #0]
 8013348:	a849      	add	r0, sp, #292	; 0x124
 801334a:	f7ff fbae 	bl	8012aaa <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 801334e:	b203      	sxth	r3, r0
 8013350:	e751      	b.n	80131f6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

08013352 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 8013352:	2b03      	cmp	r3, #3
 8013354:	d818      	bhi.n	8013388 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 8013356:	e8df f003 	tbb	[pc, r3]
 801335a:	0602      	.short	0x0602
 801335c:	130d      	.short	0x130d
 801335e:	f9b0 2000 	ldrsh.w	r2, [r0]
 8013362:	1850      	adds	r0, r2, r1
 8013364:	4770      	bx	lr
 8013366:	8803      	ldrh	r3, [r0, #0]
 8013368:	8880      	ldrh	r0, [r0, #4]
 801336a:	4418      	add	r0, r3
 801336c:	b200      	sxth	r0, r0
 801336e:	1a80      	subs	r0, r0, r2
 8013370:	3801      	subs	r0, #1
 8013372:	4770      	bx	lr
 8013374:	8803      	ldrh	r3, [r0, #0]
 8013376:	8880      	ldrh	r0, [r0, #4]
 8013378:	4418      	add	r0, r3
 801337a:	b200      	sxth	r0, r0
 801337c:	1a40      	subs	r0, r0, r1
 801337e:	e7f7      	b.n	8013370 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8013380:	f9b0 0000 	ldrsh.w	r0, [r0]
 8013384:	4410      	add	r0, r2
 8013386:	4770      	bx	lr
 8013388:	2000      	movs	r0, #0
 801338a:	4770      	bx	lr

0801338c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 801338c:	2b03      	cmp	r3, #3
 801338e:	d817      	bhi.n	80133c0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8013390:	e8df f003 	tbb	[pc, r3]
 8013394:	10090602 	.word	0x10090602
 8013398:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 801339c:	1850      	adds	r0, r2, r1
 801339e:	4770      	bx	lr
 80133a0:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 80133a4:	e7fa      	b.n	801339c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 80133a6:	8843      	ldrh	r3, [r0, #2]
 80133a8:	88c0      	ldrh	r0, [r0, #6]
 80133aa:	4418      	add	r0, r3
 80133ac:	b200      	sxth	r0, r0
 80133ae:	1a80      	subs	r0, r0, r2
 80133b0:	3801      	subs	r0, #1
 80133b2:	4770      	bx	lr
 80133b4:	8843      	ldrh	r3, [r0, #2]
 80133b6:	88c0      	ldrh	r0, [r0, #6]
 80133b8:	4418      	add	r0, r3
 80133ba:	b200      	sxth	r0, r0
 80133bc:	1a40      	subs	r0, r0, r1
 80133be:	e7f7      	b.n	80133b0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 80133c0:	2000      	movs	r0, #0
 80133c2:	4770      	bx	lr

080133c4 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 80133c4:	4b01      	ldr	r3, [pc, #4]	; (80133cc <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 80133c6:	2200      	movs	r2, #0
 80133c8:	601a      	str	r2, [r3, #0]
 80133ca:	4770      	bx	lr
 80133cc:	200137cc 	.word	0x200137cc

080133d0 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 80133d0:	4603      	mov	r3, r0
 80133d2:	b1c8      	cbz	r0, 8013408 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 80133d4:	0c02      	lsrs	r2, r0, #16
 80133d6:	0412      	lsls	r2, r2, #16
 80133d8:	b9a2      	cbnz	r2, 8013404 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 80133da:	0403      	lsls	r3, r0, #16
 80133dc:	2010      	movs	r0, #16
 80133de:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 80133e2:	bf04      	itt	eq
 80133e4:	021b      	lsleq	r3, r3, #8
 80133e6:	3008      	addeq	r0, #8
 80133e8:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 80133ec:	bf04      	itt	eq
 80133ee:	011b      	lsleq	r3, r3, #4
 80133f0:	3004      	addeq	r0, #4
 80133f2:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 80133f6:	bf04      	itt	eq
 80133f8:	009b      	lsleq	r3, r3, #2
 80133fa:	3002      	addeq	r0, #2
 80133fc:	2b00      	cmp	r3, #0
 80133fe:	db04      	blt.n	801340a <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 8013400:	3001      	adds	r0, #1
 8013402:	4770      	bx	lr
 8013404:	2000      	movs	r0, #0
 8013406:	e7ea      	b.n	80133de <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 8013408:	2020      	movs	r0, #32
 801340a:	4770      	bx	lr

0801340c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 801340c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013410:	b087      	sub	sp, #28
 8013412:	460d      	mov	r5, r1
 8013414:	4616      	mov	r6, r2
 8013416:	4698      	mov	r8, r3
 8013418:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 801341c:	4601      	mov	r1, r0
 801341e:	b120      	cbz	r0, 801342a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8013420:	b11a      	cbz	r2, 801342a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8013422:	2d1f      	cmp	r5, #31
 8013424:	d801      	bhi.n	801342a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8013426:	2b1f      	cmp	r3, #31
 8013428:	d904      	bls.n	8013434 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 801342a:	2000      	movs	r0, #0
 801342c:	6038      	str	r0, [r7, #0]
 801342e:	b007      	add	sp, #28
 8013430:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013434:	b97d      	cbnz	r5, 8013456 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 8013436:	b143      	cbz	r3, 801344a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 8013438:	4602      	mov	r2, r0
 801343a:	e9cd 4700 	strd	r4, r7, [sp]
 801343e:	462b      	mov	r3, r5
 8013440:	4641      	mov	r1, r8
 8013442:	4630      	mov	r0, r6
 8013444:	f7ff ffe2 	bl	801340c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8013448:	e7f1      	b.n	801342e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801344a:	f04f 33ff 	mov.w	r3, #4294967295
 801344e:	603b      	str	r3, [r7, #0]
 8013450:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8013454:	e7eb      	b.n	801342e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8013456:	fa32 fa05 	lsrs.w	sl, r2, r5
 801345a:	d106      	bne.n	801346a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 801345c:	4346      	muls	r6, r0
 801345e:	fbb6 f0f4 	udiv	r0, r6, r4
 8013462:	fb04 6610 	mls	r6, r4, r0, r6
 8013466:	603e      	str	r6, [r7, #0]
 8013468:	e7e1      	b.n	801342e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801346a:	2201      	movs	r2, #1
 801346c:	40aa      	lsls	r2, r5
 801346e:	3a01      	subs	r2, #1
 8013470:	4016      	ands	r6, r2
 8013472:	fa00 fb05 	lsl.w	fp, r0, r5
 8013476:	4630      	mov	r0, r6
 8013478:	fbbb f9f4 	udiv	r9, fp, r4
 801347c:	fb0a f309 	mul.w	r3, sl, r9
 8013480:	9303      	str	r3, [sp, #12]
 8013482:	f7ff ffa5 	bl	80133d0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8013486:	462b      	mov	r3, r5
 8013488:	460a      	mov	r2, r1
 801348a:	e9cd 4700 	strd	r4, r7, [sp]
 801348e:	4601      	mov	r1, r0
 8013490:	4630      	mov	r0, r6
 8013492:	f7ff ffbb 	bl	801340c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8013496:	fb04 b919 	mls	r9, r4, r9, fp
 801349a:	4606      	mov	r6, r0
 801349c:	4648      	mov	r0, r9
 801349e:	eb05 0108 	add.w	r1, r5, r8
 80134a2:	f7ff ff95 	bl	80133d0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80134a6:	ab05      	add	r3, sp, #20
 80134a8:	e9cd 4300 	strd	r4, r3, [sp]
 80134ac:	464a      	mov	r2, r9
 80134ae:	4603      	mov	r3, r0
 80134b0:	4650      	mov	r0, sl
 80134b2:	f7ff ffab 	bl	801340c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80134b6:	6839      	ldr	r1, [r7, #0]
 80134b8:	9a05      	ldr	r2, [sp, #20]
 80134ba:	9b03      	ldr	r3, [sp, #12]
 80134bc:	4411      	add	r1, r2
 80134be:	fbb1 f2f4 	udiv	r2, r1, r4
 80134c2:	18d3      	adds	r3, r2, r3
 80134c4:	441e      	add	r6, r3
 80134c6:	fb04 1412 	mls	r4, r4, r2, r1
 80134ca:	4430      	add	r0, r6
 80134cc:	603c      	str	r4, [r7, #0]
 80134ce:	e7ae      	b.n	801342e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

080134d0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 80134d0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80134d4:	b085      	sub	sp, #20
 80134d6:	f1b0 0900 	subs.w	r9, r0, #0
 80134da:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80134dc:	461d      	mov	r5, r3
 80134de:	bfbf      	itttt	lt
 80134e0:	6823      	ldrlt	r3, [r4, #0]
 80134e2:	425b      	neglt	r3, r3
 80134e4:	f1c9 0900 	rsblt	r9, r9, #0
 80134e8:	6023      	strlt	r3, [r4, #0]
 80134ea:	bfb4      	ite	lt
 80134ec:	f04f 36ff 	movlt.w	r6, #4294967295
 80134f0:	2601      	movge	r6, #1
 80134f2:	2a00      	cmp	r2, #0
 80134f4:	4617      	mov	r7, r2
 80134f6:	da04      	bge.n	8013502 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 80134f8:	6823      	ldr	r3, [r4, #0]
 80134fa:	425b      	negs	r3, r3
 80134fc:	4257      	negs	r7, r2
 80134fe:	4276      	negs	r6, r6
 8013500:	6023      	str	r3, [r4, #0]
 8013502:	2d00      	cmp	r5, #0
 8013504:	4638      	mov	r0, r7
 8013506:	bfba      	itte	lt
 8013508:	426d      	neglt	r5, r5
 801350a:	f04f 38ff 	movlt.w	r8, #4294967295
 801350e:	f04f 0801 	movge.w	r8, #1
 8013512:	f7ff ff5d 	bl	80133d0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8013516:	ab03      	add	r3, sp, #12
 8013518:	e9cd 5300 	strd	r5, r3, [sp]
 801351c:	463a      	mov	r2, r7
 801351e:	4603      	mov	r3, r0
 8013520:	4648      	mov	r0, r9
 8013522:	f7ff ff73 	bl	801340c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8013526:	6823      	ldr	r3, [r4, #0]
 8013528:	9a03      	ldr	r2, [sp, #12]
 801352a:	4546      	cmp	r6, r8
 801352c:	441a      	add	r2, r3
 801352e:	fb92 f3f5 	sdiv	r3, r2, r5
 8013532:	4418      	add	r0, r3
 8013534:	bf18      	it	ne
 8013536:	4240      	negne	r0, r0
 8013538:	fb05 2313 	mls	r3, r5, r3, r2
 801353c:	1c72      	adds	r2, r6, #1
 801353e:	6023      	str	r3, [r4, #0]
 8013540:	d105      	bne.n	801354e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 8013542:	2b00      	cmp	r3, #0
 8013544:	f1c3 0200 	rsb	r2, r3, #0
 8013548:	db0b      	blt.n	8013562 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 801354a:	6022      	str	r2, [r4, #0]
 801354c:	e006      	b.n	801355c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 801354e:	2e01      	cmp	r6, #1
 8013550:	d104      	bne.n	801355c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8013552:	2b00      	cmp	r3, #0
 8013554:	da02      	bge.n	801355c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8013556:	442b      	add	r3, r5
 8013558:	3801      	subs	r0, #1
 801355a:	6023      	str	r3, [r4, #0]
 801355c:	b005      	add	sp, #20
 801355e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013562:	3801      	subs	r0, #1
 8013564:	1b52      	subs	r2, r2, r5
 8013566:	e7f0      	b.n	801354a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

08013568 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8013568:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801356c:	4c1c      	ldr	r4, [pc, #112]	; (80135e0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 801356e:	6807      	ldr	r7, [r0, #0]
 8013570:	69a3      	ldr	r3, [r4, #24]
 8013572:	4605      	mov	r5, r0
 8013574:	b92b      	cbnz	r3, 8013582 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 8013576:	6840      	ldr	r0, [r0, #4]
 8013578:	e9c5 7000 	strd	r7, r0, [r5]
 801357c:	b004      	add	sp, #16
 801357e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013582:	68a2      	ldr	r2, [r4, #8]
 8013584:	6820      	ldr	r0, [r4, #0]
 8013586:	ae04      	add	r6, sp, #16
 8013588:	f04f 0802 	mov.w	r8, #2
 801358c:	fb93 f1f8 	sdiv	r1, r3, r8
 8013590:	440a      	add	r2, r1
 8013592:	f846 2d04 	str.w	r2, [r6, #-4]!
 8013596:	69e1      	ldr	r1, [r4, #28]
 8013598:	9600      	str	r6, [sp, #0]
 801359a:	463a      	mov	r2, r7
 801359c:	f7ff ff98 	bl	80134d0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80135a0:	69a3      	ldr	r3, [r4, #24]
 80135a2:	686a      	ldr	r2, [r5, #4]
 80135a4:	6a21      	ldr	r1, [r4, #32]
 80135a6:	9600      	str	r6, [sp, #0]
 80135a8:	4607      	mov	r7, r0
 80135aa:	6860      	ldr	r0, [r4, #4]
 80135ac:	f7ff ff90 	bl	80134d0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80135b0:	6962      	ldr	r2, [r4, #20]
 80135b2:	69a3      	ldr	r3, [r4, #24]
 80135b4:	fb93 f8f8 	sdiv	r8, r3, r8
 80135b8:	4442      	add	r2, r8
 80135ba:	9203      	str	r2, [sp, #12]
 80135bc:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80135be:	682a      	ldr	r2, [r5, #0]
 80135c0:	9600      	str	r6, [sp, #0]
 80135c2:	4407      	add	r7, r0
 80135c4:	68e0      	ldr	r0, [r4, #12]
 80135c6:	f7ff ff83 	bl	80134d0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80135ca:	9600      	str	r6, [sp, #0]
 80135cc:	4680      	mov	r8, r0
 80135ce:	69a3      	ldr	r3, [r4, #24]
 80135d0:	686a      	ldr	r2, [r5, #4]
 80135d2:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 80135d4:	6920      	ldr	r0, [r4, #16]
 80135d6:	f7ff ff7b 	bl	80134d0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80135da:	4440      	add	r0, r8
 80135dc:	e7cc      	b.n	8013578 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 80135de:	bf00      	nop
 80135e0:	200137d0 	.word	0x200137d0

080135e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 80135e4:	4b07      	ldr	r3, [pc, #28]	; (8013604 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 80135e6:	781b      	ldrb	r3, [r3, #0]
 80135e8:	2b01      	cmp	r3, #1
 80135ea:	d109      	bne.n	8013600 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 80135ec:	f9b1 3000 	ldrsh.w	r3, [r1]
 80135f0:	f9b0 2000 	ldrsh.w	r2, [r0]
 80135f4:	8003      	strh	r3, [r0, #0]
 80135f6:	4b04      	ldr	r3, [pc, #16]	; (8013608 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 80135f8:	881b      	ldrh	r3, [r3, #0]
 80135fa:	3b01      	subs	r3, #1
 80135fc:	1a9b      	subs	r3, r3, r2
 80135fe:	800b      	strh	r3, [r1, #0]
 8013600:	4770      	bx	lr
 8013602:	bf00      	nop
 8013604:	200137b4 	.word	0x200137b4
 8013608:	200137b0 	.word	0x200137b0

0801360c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 801360c:	b510      	push	{r4, lr}
 801360e:	4b07      	ldr	r3, [pc, #28]	; (801362c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 8013610:	781b      	ldrb	r3, [r3, #0]
 8013612:	2b01      	cmp	r3, #1
 8013614:	d108      	bne.n	8013628 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 8013616:	4b06      	ldr	r3, [pc, #24]	; (8013630 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 8013618:	880c      	ldrh	r4, [r1, #0]
 801361a:	881b      	ldrh	r3, [r3, #0]
 801361c:	f9b0 2000 	ldrsh.w	r2, [r0]
 8013620:	3b01      	subs	r3, #1
 8013622:	1b1b      	subs	r3, r3, r4
 8013624:	8003      	strh	r3, [r0, #0]
 8013626:	800a      	strh	r2, [r1, #0]
 8013628:	bd10      	pop	{r4, pc}
 801362a:	bf00      	nop
 801362c:	200137b4 	.word	0x200137b4
 8013630:	200137b0 	.word	0x200137b0

08013634 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8013634:	b510      	push	{r4, lr}
 8013636:	4b0a      	ldr	r3, [pc, #40]	; (8013660 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8013638:	781b      	ldrb	r3, [r3, #0]
 801363a:	2b01      	cmp	r3, #1
 801363c:	d10e      	bne.n	801365c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 801363e:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8013642:	8843      	ldrh	r3, [r0, #2]
 8013644:	f9b0 4000 	ldrsh.w	r4, [r0]
 8013648:	8044      	strh	r4, [r0, #2]
 801364a:	18ca      	adds	r2, r1, r3
 801364c:	4b05      	ldr	r3, [pc, #20]	; (8013664 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 801364e:	881b      	ldrh	r3, [r3, #0]
 8013650:	1a9b      	subs	r3, r3, r2
 8013652:	8003      	strh	r3, [r0, #0]
 8013654:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8013658:	80c3      	strh	r3, [r0, #6]
 801365a:	8081      	strh	r1, [r0, #4]
 801365c:	bd10      	pop	{r4, pc}
 801365e:	bf00      	nop
 8013660:	200137b4 	.word	0x200137b4
 8013664:	200137b0 	.word	0x200137b0

08013668 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8013668:	4b08      	ldr	r3, [pc, #32]	; (801368c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 801366a:	781b      	ldrb	r3, [r3, #0]
 801366c:	2b01      	cmp	r3, #1
 801366e:	d10c      	bne.n	801368a <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8013670:	8803      	ldrh	r3, [r0, #0]
 8013672:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8013676:	8842      	ldrh	r2, [r0, #2]
 8013678:	8002      	strh	r2, [r0, #0]
 801367a:	185a      	adds	r2, r3, r1
 801367c:	4b04      	ldr	r3, [pc, #16]	; (8013690 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 801367e:	881b      	ldrh	r3, [r3, #0]
 8013680:	1a9b      	subs	r3, r3, r2
 8013682:	8043      	strh	r3, [r0, #2]
 8013684:	88c3      	ldrh	r3, [r0, #6]
 8013686:	8083      	strh	r3, [r0, #4]
 8013688:	80c1      	strh	r1, [r0, #6]
 801368a:	4770      	bx	lr
 801368c:	200137b4 	.word	0x200137b4
 8013690:	200137b0 	.word	0x200137b0

08013694 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8013694:	b510      	push	{r4, lr}
 8013696:	4b07      	ldr	r3, [pc, #28]	; (80136b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8013698:	781b      	ldrb	r3, [r3, #0]
 801369a:	2b01      	cmp	r3, #1
 801369c:	d108      	bne.n	80136b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 801369e:	f9b1 3000 	ldrsh.w	r3, [r1]
 80136a2:	f9b0 4000 	ldrsh.w	r4, [r0]
 80136a6:	8003      	strh	r3, [r0, #0]
 80136a8:	8893      	ldrh	r3, [r2, #4]
 80136aa:	3b01      	subs	r3, #1
 80136ac:	1b1b      	subs	r3, r3, r4
 80136ae:	800b      	strh	r3, [r1, #0]
 80136b0:	bd10      	pop	{r4, pc}
 80136b2:	bf00      	nop
 80136b4:	200137b4 	.word	0x200137b4

080136b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 80136b8:	4b0b      	ldr	r3, [pc, #44]	; (80136e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 80136ba:	781b      	ldrb	r3, [r3, #0]
 80136bc:	2b01      	cmp	r3, #1
 80136be:	d111      	bne.n	80136e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 80136c0:	680b      	ldr	r3, [r1, #0]
 80136c2:	ed90 7a00 	vldr	s14, [r0]
 80136c6:	6003      	str	r3, [r0, #0]
 80136c8:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 80136cc:	eddf 6a07 	vldr	s13, [pc, #28]	; 80136ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 80136d0:	ee07 3a90 	vmov	s15, r3
 80136d4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80136d8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80136dc:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80136e0:	edc1 7a00 	vstr	s15, [r1]
 80136e4:	4770      	bx	lr
 80136e6:	bf00      	nop
 80136e8:	200137b4 	.word	0x200137b4
 80136ec:	38d1b717 	.word	0x38d1b717

080136f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 80136f0:	b510      	push	{r4, lr}
 80136f2:	4b0a      	ldr	r3, [pc, #40]	; (801371c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 80136f4:	781b      	ldrb	r3, [r3, #0]
 80136f6:	2b01      	cmp	r3, #1
 80136f8:	460a      	mov	r2, r1
 80136fa:	d10d      	bne.n	8013718 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 80136fc:	8881      	ldrh	r1, [r0, #4]
 80136fe:	8803      	ldrh	r3, [r0, #0]
 8013700:	440b      	add	r3, r1
 8013702:	4601      	mov	r1, r0
 8013704:	3b01      	subs	r3, #1
 8013706:	f821 3b02 	strh.w	r3, [r1], #2
 801370a:	f7ff ffc3 	bl	8013694 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 801370e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8013712:	88c2      	ldrh	r2, [r0, #6]
 8013714:	8082      	strh	r2, [r0, #4]
 8013716:	80c3      	strh	r3, [r0, #6]
 8013718:	bd10      	pop	{r4, pc}
 801371a:	bf00      	nop
 801371c:	200137b4 	.word	0x200137b4

08013720 <_ZN8touchgfx11Application13requestRedrawEv>:
 8013720:	4b06      	ldr	r3, [pc, #24]	; (801373c <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 8013722:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013726:	4b06      	ldr	r3, [pc, #24]	; (8013740 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 8013728:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
 801372c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8013730:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
 8013734:	2100      	movs	r1, #0
 8013736:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
 801373a:	4770      	bx	lr
 801373c:	200137b0 	.word	0x200137b0
 8013740:	200137b2 	.word	0x200137b2

08013744 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8013744:	4b03      	ldr	r3, [pc, #12]	; (8013754 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 8013746:	6818      	ldr	r0, [r3, #0]
 8013748:	b110      	cbz	r0, 8013750 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 801374a:	6803      	ldr	r3, [r0, #0]
 801374c:	699b      	ldr	r3, [r3, #24]
 801374e:	4718      	bx	r3
 8013750:	4770      	bx	lr
 8013752:	bf00      	nop
 8013754:	20013800 	.word	0x20013800

08013758 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8013758:	4770      	bx	lr
	...

0801375c <_ZN8touchgfx11Application4drawEv>:
 801375c:	b507      	push	{r0, r1, r2, lr}
 801375e:	4b09      	ldr	r3, [pc, #36]	; (8013784 <_ZN8touchgfx11Application4drawEv+0x28>)
 8013760:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013764:	4b08      	ldr	r3, [pc, #32]	; (8013788 <_ZN8touchgfx11Application4drawEv+0x2c>)
 8013766:	f8ad 2004 	strh.w	r2, [sp, #4]
 801376a:	f9b3 3000 	ldrsh.w	r3, [r3]
 801376e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8013772:	6803      	ldr	r3, [r0, #0]
 8013774:	2100      	movs	r1, #0
 8013776:	9100      	str	r1, [sp, #0]
 8013778:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801377a:	4669      	mov	r1, sp
 801377c:	4798      	blx	r3
 801377e:	b003      	add	sp, #12
 8013780:	f85d fb04 	ldr.w	pc, [sp], #4
 8013784:	200137b0 	.word	0x200137b0
 8013788:	200137b2 	.word	0x200137b2

0801378c <_ZN8touchgfx11Application10invalidateEv>:
 801378c:	4b09      	ldr	r3, [pc, #36]	; (80137b4 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 801378e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013792:	4b09      	ldr	r3, [pc, #36]	; (80137b8 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8013794:	b082      	sub	sp, #8
 8013796:	f9b3 3000 	ldrsh.w	r3, [r3]
 801379a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801379e:	2100      	movs	r1, #0
 80137a0:	f8ad 3006 	strh.w	r3, [sp, #6]
 80137a4:	9100      	str	r1, [sp, #0]
 80137a6:	6803      	ldr	r3, [r0, #0]
 80137a8:	aa02      	add	r2, sp, #8
 80137aa:	e912 0006 	ldmdb	r2, {r1, r2}
 80137ae:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80137b0:	b002      	add	sp, #8
 80137b2:	4718      	bx	r3
 80137b4:	200137b0 	.word	0x200137b0
 80137b8:	200137b2 	.word	0x200137b2

080137bc <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 80137bc:	4b03      	ldr	r3, [pc, #12]	; (80137cc <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 80137be:	6818      	ldr	r0, [r3, #0]
 80137c0:	b110      	cbz	r0, 80137c8 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 80137c2:	6803      	ldr	r3, [r0, #0]
 80137c4:	69db      	ldr	r3, [r3, #28]
 80137c6:	4718      	bx	r3
 80137c8:	4770      	bx	lr
 80137ca:	bf00      	nop
 80137cc:	20013800 	.word	0x20013800

080137d0 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 80137d0:	4b03      	ldr	r3, [pc, #12]	; (80137e0 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 80137d2:	6818      	ldr	r0, [r3, #0]
 80137d4:	b110      	cbz	r0, 80137dc <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 80137d6:	6803      	ldr	r3, [r0, #0]
 80137d8:	6a1b      	ldr	r3, [r3, #32]
 80137da:	4718      	bx	r3
 80137dc:	4770      	bx	lr
 80137de:	bf00      	nop
 80137e0:	20013800 	.word	0x20013800

080137e4 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 80137e4:	2300      	movs	r3, #0
 80137e6:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
 80137ea:	4770      	bx	lr

080137ec <_ZN8touchgfx11Application14handleKeyEventEh>:
 80137ec:	4b03      	ldr	r3, [pc, #12]	; (80137fc <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 80137ee:	6818      	ldr	r0, [r3, #0]
 80137f0:	b110      	cbz	r0, 80137f8 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 80137f2:	6803      	ldr	r3, [r0, #0]
 80137f4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80137f6:	4718      	bx	r3
 80137f8:	4770      	bx	lr
 80137fa:	bf00      	nop
 80137fc:	20013800 	.word	0x20013800

08013800 <_ZN8touchgfx11ApplicationD1Ev>:
 8013800:	4770      	bx	lr

08013802 <_ZN8touchgfx11ApplicationD0Ev>:
 8013802:	b510      	push	{r4, lr}
 8013804:	f44f 719e 	mov.w	r1, #316	; 0x13c
 8013808:	4604      	mov	r4, r0
 801380a:	f012 fe40 	bl	802648e <_ZdlPvj>
 801380e:	4620      	mov	r0, r4
 8013810:	bd10      	pop	{r4, pc}

08013812 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 8013812:	b510      	push	{r4, lr}
 8013814:	f9b1 4000 	ldrsh.w	r4, [r1]
 8013818:	888a      	ldrh	r2, [r1, #4]
 801381a:	f9b0 3000 	ldrsh.w	r3, [r0]
 801381e:	4422      	add	r2, r4
 8013820:	b212      	sxth	r2, r2
 8013822:	4293      	cmp	r3, r2
 8013824:	da15      	bge.n	8013852 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8013826:	8882      	ldrh	r2, [r0, #4]
 8013828:	4413      	add	r3, r2
 801382a:	b21b      	sxth	r3, r3
 801382c:	429c      	cmp	r4, r3
 801382e:	da10      	bge.n	8013852 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8013830:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8013834:	88c9      	ldrh	r1, [r1, #6]
 8013836:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 801383a:	4419      	add	r1, r3
 801383c:	b209      	sxth	r1, r1
 801383e:	428a      	cmp	r2, r1
 8013840:	da07      	bge.n	8013852 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8013842:	88c0      	ldrh	r0, [r0, #6]
 8013844:	4410      	add	r0, r2
 8013846:	b200      	sxth	r0, r0
 8013848:	4283      	cmp	r3, r0
 801384a:	bfac      	ite	ge
 801384c:	2000      	movge	r0, #0
 801384e:	2001      	movlt	r0, #1
 8013850:	bd10      	pop	{r4, pc}
 8013852:	2000      	movs	r0, #0
 8013854:	e7fc      	b.n	8013850 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

08013856 <_ZN8touchgfx4Rect10restrictToEss>:
 8013856:	f9b0 3000 	ldrsh.w	r3, [r0]
 801385a:	2b00      	cmp	r3, #0
 801385c:	b510      	push	{r4, lr}
 801385e:	da04      	bge.n	801386a <_ZN8touchgfx4Rect10restrictToEss+0x14>
 8013860:	8884      	ldrh	r4, [r0, #4]
 8013862:	4423      	add	r3, r4
 8013864:	8083      	strh	r3, [r0, #4]
 8013866:	2300      	movs	r3, #0
 8013868:	8003      	strh	r3, [r0, #0]
 801386a:	f9b0 4000 	ldrsh.w	r4, [r0]
 801386e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8013872:	1b09      	subs	r1, r1, r4
 8013874:	428b      	cmp	r3, r1
 8013876:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 801387a:	bfc8      	it	gt
 801387c:	8081      	strhgt	r1, [r0, #4]
 801387e:	2b00      	cmp	r3, #0
 8013880:	da04      	bge.n	801388c <_ZN8touchgfx4Rect10restrictToEss+0x36>
 8013882:	88c1      	ldrh	r1, [r0, #6]
 8013884:	440b      	add	r3, r1
 8013886:	80c3      	strh	r3, [r0, #6]
 8013888:	2300      	movs	r3, #0
 801388a:	8043      	strh	r3, [r0, #2]
 801388c:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8013890:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8013894:	1a52      	subs	r2, r2, r1
 8013896:	4293      	cmp	r3, r2
 8013898:	bfc8      	it	gt
 801389a:	80c2      	strhgt	r2, [r0, #6]
 801389c:	bd10      	pop	{r4, pc}
	...

080138a0 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 80138a0:	b510      	push	{r4, lr}
 80138a2:	4b10      	ldr	r3, [pc, #64]	; (80138e4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 80138a4:	f9b3 2000 	ldrsh.w	r2, [r3]
 80138a8:	4b0f      	ldr	r3, [pc, #60]	; (80138e8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 80138aa:	460c      	mov	r4, r1
 80138ac:	4620      	mov	r0, r4
 80138ae:	f9b3 1000 	ldrsh.w	r1, [r3]
 80138b2:	f7ff ffd0 	bl	8013856 <_ZN8touchgfx4Rect10restrictToEss>
 80138b6:	4b0d      	ldr	r3, [pc, #52]	; (80138ec <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 80138b8:	6818      	ldr	r0, [r3, #0]
 80138ba:	b190      	cbz	r0, 80138e2 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 80138bc:	6803      	ldr	r3, [r0, #0]
 80138be:	4621      	mov	r1, r4
 80138c0:	689b      	ldr	r3, [r3, #8]
 80138c2:	4798      	blx	r3
 80138c4:	4b0a      	ldr	r3, [pc, #40]	; (80138f0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 80138c6:	6818      	ldr	r0, [r3, #0]
 80138c8:	b118      	cbz	r0, 80138d2 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 80138ca:	6803      	ldr	r3, [r0, #0]
 80138cc:	4621      	mov	r1, r4
 80138ce:	689b      	ldr	r3, [r3, #8]
 80138d0:	4798      	blx	r3
 80138d2:	4b08      	ldr	r3, [pc, #32]	; (80138f4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 80138d4:	6818      	ldr	r0, [r3, #0]
 80138d6:	6803      	ldr	r3, [r0, #0]
 80138d8:	4621      	mov	r1, r4
 80138da:	69db      	ldr	r3, [r3, #28]
 80138dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80138e0:	4718      	bx	r3
 80138e2:	bd10      	pop	{r4, pc}
 80138e4:	200137b2 	.word	0x200137b2
 80138e8:	200137b0 	.word	0x200137b0
 80138ec:	20013800 	.word	0x20013800
 80138f0:	200137fc 	.word	0x200137fc
 80138f4:	200137bc 	.word	0x200137bc

080138f8 <_ZNK8touchgfx4Rect8includesERKS0_>:
 80138f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80138fa:	4606      	mov	r6, r0
 80138fc:	4608      	mov	r0, r1
 80138fe:	460f      	mov	r7, r1
 8013900:	f7fa ff97 	bl	800e832 <_ZNK8touchgfx4Rect7isEmptyEv>
 8013904:	b9e8      	cbnz	r0, 8013942 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8013906:	f9b7 5000 	ldrsh.w	r5, [r7]
 801390a:	f9b6 4000 	ldrsh.w	r4, [r6]
 801390e:	42a5      	cmp	r5, r4
 8013910:	db17      	blt.n	8013942 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8013912:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8013916:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 801391a:	429a      	cmp	r2, r3
 801391c:	db11      	blt.n	8013942 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801391e:	88b9      	ldrh	r1, [r7, #4]
 8013920:	440d      	add	r5, r1
 8013922:	88b1      	ldrh	r1, [r6, #4]
 8013924:	440c      	add	r4, r1
 8013926:	b22d      	sxth	r5, r5
 8013928:	b224      	sxth	r4, r4
 801392a:	42a5      	cmp	r5, r4
 801392c:	dc09      	bgt.n	8013942 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801392e:	88f8      	ldrh	r0, [r7, #6]
 8013930:	4410      	add	r0, r2
 8013932:	88f2      	ldrh	r2, [r6, #6]
 8013934:	4413      	add	r3, r2
 8013936:	b200      	sxth	r0, r0
 8013938:	b21b      	sxth	r3, r3
 801393a:	4298      	cmp	r0, r3
 801393c:	bfcc      	ite	gt
 801393e:	2000      	movgt	r0, #0
 8013940:	2001      	movle	r0, #1
 8013942:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08013944 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 8013944:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8013946:	4604      	mov	r4, r0
 8013948:	4608      	mov	r0, r1
 801394a:	460d      	mov	r5, r1
 801394c:	f7fa ff71 	bl	800e832 <_ZNK8touchgfx4Rect7isEmptyEv>
 8013950:	b978      	cbnz	r0, 8013972 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 8013952:	4620      	mov	r0, r4
 8013954:	f7fa ff6d 	bl	800e832 <_ZNK8touchgfx4Rect7isEmptyEv>
 8013958:	f9b5 6000 	ldrsh.w	r6, [r5]
 801395c:	b150      	cbz	r0, 8013974 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 801395e:	8026      	strh	r6, [r4, #0]
 8013960:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8013964:	8063      	strh	r3, [r4, #2]
 8013966:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 801396a:	80a3      	strh	r3, [r4, #4]
 801396c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8013970:	80e3      	strh	r3, [r4, #6]
 8013972:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8013974:	f9b4 1000 	ldrsh.w	r1, [r4]
 8013978:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801397c:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8013980:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 8013984:	88ed      	ldrh	r5, [r5, #6]
 8013986:	42b1      	cmp	r1, r6
 8013988:	460f      	mov	r7, r1
 801398a:	bfa8      	it	ge
 801398c:	4637      	movge	r7, r6
 801398e:	4293      	cmp	r3, r2
 8013990:	4618      	mov	r0, r3
 8013992:	4466      	add	r6, ip
 8013994:	bfa8      	it	ge
 8013996:	4610      	movge	r0, r2
 8013998:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 801399c:	8027      	strh	r7, [r4, #0]
 801399e:	442a      	add	r2, r5
 80139a0:	88e5      	ldrh	r5, [r4, #6]
 80139a2:	8060      	strh	r0, [r4, #2]
 80139a4:	4461      	add	r1, ip
 80139a6:	442b      	add	r3, r5
 80139a8:	b236      	sxth	r6, r6
 80139aa:	b209      	sxth	r1, r1
 80139ac:	b212      	sxth	r2, r2
 80139ae:	b21b      	sxth	r3, r3
 80139b0:	428e      	cmp	r6, r1
 80139b2:	bfac      	ite	ge
 80139b4:	ebc7 0106 	rsbge	r1, r7, r6
 80139b8:	ebc7 0101 	rsblt	r1, r7, r1
 80139bc:	429a      	cmp	r2, r3
 80139be:	bfac      	ite	ge
 80139c0:	ebc0 0202 	rsbge	r2, r0, r2
 80139c4:	ebc0 0203 	rsblt	r2, r0, r3
 80139c8:	80a1      	strh	r1, [r4, #4]
 80139ca:	80e2      	strh	r2, [r4, #6]
 80139cc:	e7d1      	b.n	8013972 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

080139d0 <_ZN8touchgfx11Application11getInstanceEv>:
 80139d0:	4b01      	ldr	r3, [pc, #4]	; (80139d8 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 80139d2:	6818      	ldr	r0, [r3, #0]
 80139d4:	4770      	bx	lr
 80139d6:	bf00      	nop
 80139d8:	20013810 	.word	0x20013810

080139dc <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>:
 80139dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80139de:	4b10      	ldr	r3, [pc, #64]	; (8013a20 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x44>)
 80139e0:	781b      	ldrb	r3, [r3, #0]
 80139e2:	4605      	mov	r5, r0
 80139e4:	b1d3      	cbz	r3, 8013a1c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x40>
 80139e6:	4b0f      	ldr	r3, [pc, #60]	; (8013a24 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x48>)
 80139e8:	4f0f      	ldr	r7, [pc, #60]	; (8013a28 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x4c>)
 80139ea:	881c      	ldrh	r4, [r3, #0]
 80139ec:	f100 06ee 	add.w	r6, r0, #238	; 0xee
 80139f0:	f8b5 312e 	ldrh.w	r3, [r5, #302]	; 0x12e
 80139f4:	42a3      	cmp	r3, r4
 80139f6:	d90e      	bls.n	8013a16 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x3a>
 80139f8:	683b      	ldr	r3, [r7, #0]
 80139fa:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80139fe:	b10a      	cbz	r2, 8013a04 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x28>
 8013a00:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8013a02:	b900      	cbnz	r0, 8013a06 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x2a>
 8013a04:	6898      	ldr	r0, [r3, #8]
 8013a06:	6803      	ldr	r3, [r0, #0]
 8013a08:	eb06 01c4 	add.w	r1, r6, r4, lsl #3
 8013a0c:	69db      	ldr	r3, [r3, #28]
 8013a0e:	3401      	adds	r4, #1
 8013a10:	4798      	blx	r3
 8013a12:	b2a4      	uxth	r4, r4
 8013a14:	e7ec      	b.n	80139f0 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x14>
 8013a16:	2300      	movs	r3, #0
 8013a18:	f8a5 312e 	strh.w	r3, [r5, #302]	; 0x12e
 8013a1c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8013a1e:	bf00      	nop
 8013a20:	200137ba 	.word	0x200137ba
 8013a24:	20000088 	.word	0x20000088
 8013a28:	200137bc 	.word	0x200137bc

08013a2c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 8013a2c:	b510      	push	{r4, lr}
 8013a2e:	2300      	movs	r3, #0
 8013a30:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
 8013a34:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8013a38:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8013a3c:	4604      	mov	r4, r0
 8013a3e:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8013a42:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
 8013a46:	429a      	cmp	r2, r3
 8013a48:	d90e      	bls.n	8013a68 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 8013a4a:	18e2      	adds	r2, r4, r3
 8013a4c:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
 8013a50:	b122      	cbz	r2, 8013a5c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 8013a52:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8013a56:	6803      	ldr	r3, [r0, #0]
 8013a58:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8013a5a:	4798      	blx	r3
 8013a5c:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8013a60:	3301      	adds	r3, #1
 8013a62:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8013a66:	e7ea      	b.n	8013a3e <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 8013a68:	bd10      	pop	{r4, pc}

08013a6a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>:
 8013a6a:	b530      	push	{r4, r5, lr}
 8013a6c:	f8b0 5080 	ldrh.w	r5, [r0, #128]	; 0x80
 8013a70:	2200      	movs	r2, #0
 8013a72:	b293      	uxth	r3, r2
 8013a74:	429d      	cmp	r5, r3
 8013a76:	d90e      	bls.n	8013a96 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8013a78:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
 8013a7c:	428b      	cmp	r3, r1
 8013a7e:	d10b      	bne.n	8013a98 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8013a80:	1884      	adds	r4, r0, r2
 8013a82:	f894 3084 	ldrb.w	r3, [r4, #132]	; 0x84
 8013a86:	b13b      	cbz	r3, 8013a98 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8013a88:	3b01      	subs	r3, #1
 8013a8a:	b2db      	uxtb	r3, r3
 8013a8c:	f884 3084 	strb.w	r3, [r4, #132]	; 0x84
 8013a90:	b90b      	cbnz	r3, 8013a96 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8013a92:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 8013a96:	bd30      	pop	{r4, r5, pc}
 8013a98:	3201      	adds	r2, #1
 8013a9a:	e7ea      	b.n	8013a72 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x8>

08013a9c <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 8013a9c:	2300      	movs	r3, #0
 8013a9e:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8013aa2:	f100 0284 	add.w	r2, r0, #132	; 0x84
 8013aa6:	30a4      	adds	r0, #164	; 0xa4
 8013aa8:	f802 3b01 	strb.w	r3, [r2], #1
 8013aac:	4282      	cmp	r2, r0
 8013aae:	d1fb      	bne.n	8013aa8 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 8013ab0:	4770      	bx	lr
	...

08013ab4 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8013ab4:	b570      	push	{r4, r5, r6, lr}
 8013ab6:	4c0b      	ldr	r4, [pc, #44]	; (8013ae4 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 8013ab8:	4605      	mov	r5, r0
 8013aba:	6820      	ldr	r0, [r4, #0]
 8013abc:	460e      	mov	r6, r1
 8013abe:	b110      	cbz	r0, 8013ac6 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 8013ac0:	6803      	ldr	r3, [r0, #0]
 8013ac2:	695b      	ldr	r3, [r3, #20]
 8013ac4:	4798      	blx	r3
 8013ac6:	1d28      	adds	r0, r5, #4
 8013ac8:	f7ff ffe8 	bl	8013a9c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8013acc:	6026      	str	r6, [r4, #0]
 8013ace:	6833      	ldr	r3, [r6, #0]
 8013ad0:	4630      	mov	r0, r6
 8013ad2:	68db      	ldr	r3, [r3, #12]
 8013ad4:	4798      	blx	r3
 8013ad6:	682b      	ldr	r3, [r5, #0]
 8013ad8:	4628      	mov	r0, r5
 8013ada:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8013adc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013ae0:	4718      	bx	r3
 8013ae2:	bf00      	nop
 8013ae4:	20013800 	.word	0x20013800

08013ae8 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 8013ae8:	2300      	movs	r3, #0
 8013aea:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
 8013aee:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
 8013af2:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013af4:	461a      	mov	r2, r3
 8013af6:	461c      	mov	r4, r3
 8013af8:	461d      	mov	r5, r3
 8013afa:	459c      	cmp	ip, r3
 8013afc:	dd1a      	ble.n	8013b34 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 8013afe:	18c6      	adds	r6, r0, r3
 8013b00:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
 8013b04:	b16e      	cbz	r6, 8013b22 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 8013b06:	429a      	cmp	r2, r3
 8013b08:	d008      	beq.n	8013b1c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 8013b0a:	fa1f fe82 	uxth.w	lr, r2
 8013b0e:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 8013b12:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 8013b16:	1887      	adds	r7, r0, r2
 8013b18:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
 8013b1c:	3201      	adds	r2, #1
 8013b1e:	3301      	adds	r3, #1
 8013b20:	e7eb      	b.n	8013afa <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 8013b22:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
 8013b26:	4299      	cmp	r1, r3
 8013b28:	bfa8      	it	ge
 8013b2a:	3501      	addge	r5, #1
 8013b2c:	429e      	cmp	r6, r3
 8013b2e:	bfc8      	it	gt
 8013b30:	3401      	addgt	r4, #1
 8013b32:	e7f4      	b.n	8013b1e <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 8013b34:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
 8013b38:	1b49      	subs	r1, r1, r5
 8013b3a:	1b1b      	subs	r3, r3, r4
 8013b3c:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
 8013b40:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8013b44:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8013b48:	4293      	cmp	r3, r2
 8013b4a:	dd03      	ble.n	8013b54 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 8013b4c:	3b01      	subs	r3, #1
 8013b4e:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8013b52:	e7f7      	b.n	8013b44 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 8013b54:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08013b58 <_ZN8touchgfx11Application15handleTickEventEv>:
 8013b58:	b570      	push	{r4, r5, r6, lr}
 8013b5a:	4d16      	ldr	r5, [pc, #88]	; (8013bb4 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 8013b5c:	4604      	mov	r4, r0
 8013b5e:	6828      	ldr	r0, [r5, #0]
 8013b60:	b140      	cbz	r0, 8013b74 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8013b62:	7a03      	ldrb	r3, [r0, #8]
 8013b64:	b933      	cbnz	r3, 8013b74 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8013b66:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 8013b6a:	6803      	ldr	r3, [r0, #0]
 8013b6c:	689b      	ldr	r3, [r3, #8]
 8013b6e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013b72:	4718      	bx	r3
 8013b74:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
 8013b78:	4e0f      	ldr	r6, [pc, #60]	; (8013bb8 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 8013b7a:	b973      	cbnz	r3, 8013b9a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8013b7c:	b168      	cbz	r0, 8013b9a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8013b7e:	7a03      	ldrb	r3, [r0, #8]
 8013b80:	b15b      	cbz	r3, 8013b9a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8013b82:	6830      	ldr	r0, [r6, #0]
 8013b84:	b110      	cbz	r0, 8013b8c <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 8013b86:	6803      	ldr	r3, [r0, #0]
 8013b88:	691b      	ldr	r3, [r3, #16]
 8013b8a:	4798      	blx	r3
 8013b8c:	6828      	ldr	r0, [r5, #0]
 8013b8e:	6803      	ldr	r3, [r0, #0]
 8013b90:	68db      	ldr	r3, [r3, #12]
 8013b92:	4798      	blx	r3
 8013b94:	2301      	movs	r3, #1
 8013b96:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 8013b9a:	3404      	adds	r4, #4
 8013b9c:	4620      	mov	r0, r4
 8013b9e:	f7ff ff45 	bl	8013a2c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 8013ba2:	4620      	mov	r0, r4
 8013ba4:	f7ff ffa0 	bl	8013ae8 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8013ba8:	6830      	ldr	r0, [r6, #0]
 8013baa:	b110      	cbz	r0, 8013bb2 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 8013bac:	6803      	ldr	r3, [r0, #0]
 8013bae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8013bb0:	e7dd      	b.n	8013b6e <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 8013bb2:	bd70      	pop	{r4, r5, r6, pc}
 8013bb4:	20013804 	.word	0x20013804
 8013bb8:	20013800 	.word	0x20013800

08013bbc <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>:
 8013bbc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8013bbe:	2300      	movs	r3, #0
 8013bc0:	4604      	mov	r4, r0
 8013bc2:	460d      	mov	r5, r1
 8013bc4:	f8b0 1080 	ldrh.w	r1, [r0, #128]	; 0x80
 8013bc8:	4618      	mov	r0, r3
 8013bca:	b29a      	uxth	r2, r3
 8013bcc:	4291      	cmp	r1, r2
 8013bce:	d911      	bls.n	8013bf4 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x38>
 8013bd0:	f854 7023 	ldr.w	r7, [r4, r3, lsl #2]
 8013bd4:	18e6      	adds	r6, r4, r3
 8013bd6:	42af      	cmp	r7, r5
 8013bd8:	f896 2084 	ldrb.w	r2, [r6, #132]	; 0x84
 8013bdc:	d105      	bne.n	8013bea <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2e>
 8013bde:	2aff      	cmp	r2, #255	; 0xff
 8013be0:	d002      	beq.n	8013be8 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8013be2:	3201      	adds	r2, #1
 8013be4:	f886 2084 	strb.w	r2, [r6, #132]	; 0x84
 8013be8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8013bea:	2a00      	cmp	r2, #0
 8013bec:	bf08      	it	eq
 8013bee:	2001      	moveq	r0, #1
 8013bf0:	3301      	adds	r3, #1
 8013bf2:	e7ea      	b.n	8013bca <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0xe>
 8013bf4:	b120      	cbz	r0, 8013c00 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8013bf6:	2920      	cmp	r1, #32
 8013bf8:	d102      	bne.n	8013c00 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8013bfa:	4620      	mov	r0, r4
 8013bfc:	f7ff ff74 	bl	8013ae8 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8013c00:	f8b4 3080 	ldrh.w	r3, [r4, #128]	; 0x80
 8013c04:	2b1f      	cmp	r3, #31
 8013c06:	d8ef      	bhi.n	8013be8 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8013c08:	18e2      	adds	r2, r4, r3
 8013c0a:	2101      	movs	r1, #1
 8013c0c:	f882 1084 	strb.w	r1, [r2, #132]	; 0x84
 8013c10:	185a      	adds	r2, r3, r1
 8013c12:	f8a4 2080 	strh.w	r2, [r4, #128]	; 0x80
 8013c16:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8013c1a:	e7e5      	b.n	8013be8 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>

08013c1c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 8013c1c:	4603      	mov	r3, r0
 8013c1e:	f100 0140 	add.w	r1, r0, #64	; 0x40
 8013c22:	2200      	movs	r2, #0
 8013c24:	801a      	strh	r2, [r3, #0]
 8013c26:	805a      	strh	r2, [r3, #2]
 8013c28:	809a      	strh	r2, [r3, #4]
 8013c2a:	80da      	strh	r2, [r3, #6]
 8013c2c:	3308      	adds	r3, #8
 8013c2e:	428b      	cmp	r3, r1
 8013c30:	d1f8      	bne.n	8013c24 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 8013c32:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 8013c36:	4770      	bx	lr

08013c38 <_ZN8touchgfx11ApplicationC1Ev>:
 8013c38:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8013c3a:	4606      	mov	r6, r0
 8013c3c:	4b1c      	ldr	r3, [pc, #112]	; (8013cb0 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 8013c3e:	f846 3b04 	str.w	r3, [r6], #4
 8013c42:	4604      	mov	r4, r0
 8013c44:	2500      	movs	r5, #0
 8013c46:	22a8      	movs	r2, #168	; 0xa8
 8013c48:	2100      	movs	r1, #0
 8013c4a:	4630      	mov	r0, r6
 8013c4c:	f013 fc15 	bl	802747a <memset>
 8013c50:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
 8013c54:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8013c58:	f7ff ffe0 	bl	8013c1c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8013c5c:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8013c60:	f7ff ffdc 	bl	8013c1c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8013c64:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 8013c68:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 8013c6c:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
 8013c70:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
 8013c74:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
 8013c78:	490e      	ldr	r1, [pc, #56]	; (8013cb4 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 8013c7a:	480f      	ldr	r0, [pc, #60]	; (8013cb8 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 8013c7c:	4f0f      	ldr	r7, [pc, #60]	; (8013cbc <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 8013c7e:	f010 fbf5 	bl	802446c <CRC_Lock>
 8013c82:	4b0f      	ldr	r3, [pc, #60]	; (8013cc0 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 8013c84:	b158      	cbz	r0, 8013c9e <_ZN8touchgfx11ApplicationC1Ev+0x66>
 8013c86:	801d      	strh	r5, [r3, #0]
 8013c88:	4a0e      	ldr	r2, [pc, #56]	; (8013cc4 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 8013c8a:	2300      	movs	r3, #0
 8013c8c:	6013      	str	r3, [r2, #0]
 8013c8e:	4a0e      	ldr	r2, [pc, #56]	; (8013cc8 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 8013c90:	603b      	str	r3, [r7, #0]
 8013c92:	4630      	mov	r0, r6
 8013c94:	6013      	str	r3, [r2, #0]
 8013c96:	f7ff ff01 	bl	8013a9c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8013c9a:	4620      	mov	r0, r4
 8013c9c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8013c9e:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8013ca2:	2002      	movs	r0, #2
 8013ca4:	801a      	strh	r2, [r3, #0]
 8013ca6:	6038      	str	r0, [r7, #0]
 8013ca8:	f001 fb4a 	bl	8015340 <_ZN8touchgfx6Screen4drawEv>
 8013cac:	e7ec      	b.n	8013c88 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 8013cae:	bf00      	nop
 8013cb0:	0802b390 	.word	0x0802b390
 8013cb4:	b5e8b5cd 	.word	0xb5e8b5cd
 8013cb8:	f407a5c2 	.word	0xf407a5c2
 8013cbc:	20013800 	.word	0x20013800
 8013cc0:	20000088 	.word	0x20000088
 8013cc4:	20013810 	.word	0x20013810
 8013cc8:	20013804 	.word	0x20013804

08013ccc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 8013ccc:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8013cd0:	3b01      	subs	r3, #1
 8013cd2:	b29b      	uxth	r3, r3
 8013cd4:	428b      	cmp	r3, r1
 8013cd6:	b510      	push	{r4, lr}
 8013cd8:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 8013cdc:	d908      	bls.n	8013cf0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 8013cde:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8013ce2:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 8013ce6:	681a      	ldr	r2, [r3, #0]
 8013ce8:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 8013cec:	685a      	ldr	r2, [r3, #4]
 8013cee:	6062      	str	r2, [r4, #4]
 8013cf0:	bd10      	pop	{r4, pc}
	...

08013cf4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 8013cf4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013cf8:	4b8f      	ldr	r3, [pc, #572]	; (8013f38 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 8013cfa:	b08f      	sub	sp, #60	; 0x3c
 8013cfc:	ac0a      	add	r4, sp, #40	; 0x28
 8013cfe:	e884 0006 	stmia.w	r4, {r1, r2}
 8013d02:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013d06:	4b8d      	ldr	r3, [pc, #564]	; (8013f3c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 8013d08:	4683      	mov	fp, r0
 8013d0a:	f9b3 1000 	ldrsh.w	r1, [r3]
 8013d0e:	4620      	mov	r0, r4
 8013d10:	f7ff fda1 	bl	8013856 <_ZN8touchgfx4Rect10restrictToEss>
 8013d14:	4620      	mov	r0, r4
 8013d16:	f7fa fd8c 	bl	800e832 <_ZNK8touchgfx4Rect7isEmptyEv>
 8013d1a:	2800      	cmp	r0, #0
 8013d1c:	d16a      	bne.n	8013df4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8013d1e:	9403      	str	r4, [sp, #12]
 8013d20:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8013d24:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8013d28:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 8013d2c:	35a4      	adds	r5, #164	; 0xa4
 8013d2e:	9301      	str	r3, [sp, #4]
 8013d30:	b15c      	cbz	r4, 8013d4a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 8013d32:	4629      	mov	r1, r5
 8013d34:	9803      	ldr	r0, [sp, #12]
 8013d36:	f7ff fddf 	bl	80138f8 <_ZNK8touchgfx4Rect8includesERKS0_>
 8013d3a:	3c01      	subs	r4, #1
 8013d3c:	b118      	cbz	r0, 8013d46 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 8013d3e:	b2a1      	uxth	r1, r4
 8013d40:	9801      	ldr	r0, [sp, #4]
 8013d42:	f7ff ffc3 	bl	8013ccc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8013d46:	3d08      	subs	r5, #8
 8013d48:	e7f2      	b.n	8013d30 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 8013d4a:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
 8013d4e:	f8cd a010 	str.w	sl, [sp, #16]
 8013d52:	f10a 33ff 	add.w	r3, sl, #4294967295
 8013d56:	9302      	str	r3, [sp, #8]
 8013d58:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 8013d5c:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
 8013d60:	9306      	str	r3, [sp, #24]
 8013d62:	445c      	add	r4, fp
 8013d64:	2500      	movs	r5, #0
 8013d66:	4626      	mov	r6, r4
 8013d68:	f8cd a014 	str.w	sl, [sp, #20]
 8013d6c:	462f      	mov	r7, r5
 8013d6e:	9b05      	ldr	r3, [sp, #20]
 8013d70:	2b00      	cmp	r3, #0
 8013d72:	d073      	beq.n	8013e5c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8013d74:	9903      	ldr	r1, [sp, #12]
 8013d76:	4630      	mov	r0, r6
 8013d78:	f7ff fd4b 	bl	8013812 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8013d7c:	b350      	cbz	r0, 8013dd4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8013d7e:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 8013d82:	f9b6 c000 	ldrsh.w	ip, [r6]
 8013d86:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
 8013d8a:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 8013d8e:	45e6      	cmp	lr, ip
 8013d90:	db33      	blt.n	8013dfa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8013d92:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8013d96:	88b3      	ldrh	r3, [r6, #4]
 8013d98:	4472      	add	r2, lr
 8013d9a:	4463      	add	r3, ip
 8013d9c:	b212      	sxth	r2, r2
 8013d9e:	b21b      	sxth	r3, r3
 8013da0:	429a      	cmp	r2, r3
 8013da2:	dc2a      	bgt.n	8013dfa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8013da4:	88f3      	ldrh	r3, [r6, #6]
 8013da6:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8013daa:	fa1f f289 	uxth.w	r2, r9
 8013dae:	4413      	add	r3, r2
 8013db0:	b29b      	uxth	r3, r3
 8013db2:	45c8      	cmp	r8, r9
 8013db4:	fa1f fc88 	uxth.w	ip, r8
 8013db8:	fa0f fe83 	sxth.w	lr, r3
 8013dbc:	db0f      	blt.n	8013dde <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 8013dbe:	eba3 030c 	sub.w	r3, r3, ip
 8013dc2:	1ac9      	subs	r1, r1, r3
 8013dc4:	b209      	sxth	r1, r1
 8013dc6:	2900      	cmp	r1, #0
 8013dc8:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8013dcc:	dd12      	ble.n	8013df4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8013dce:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 8013dd2:	4605      	mov	r5, r0
 8013dd4:	9b05      	ldr	r3, [sp, #20]
 8013dd6:	3b01      	subs	r3, #1
 8013dd8:	9305      	str	r3, [sp, #20]
 8013dda:	3e08      	subs	r6, #8
 8013ddc:	e7c7      	b.n	8013d6e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 8013dde:	4461      	add	r1, ip
 8013de0:	b209      	sxth	r1, r1
 8013de2:	4571      	cmp	r1, lr
 8013de4:	dc38      	bgt.n	8013e58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8013de6:	eba2 020c 	sub.w	r2, r2, ip
 8013dea:	b212      	sxth	r2, r2
 8013dec:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8013df0:	2a00      	cmp	r2, #0
 8013df2:	dcee      	bgt.n	8013dd2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8013df4:	b00f      	add	sp, #60	; 0x3c
 8013df6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013dfa:	45c8      	cmp	r8, r9
 8013dfc:	db2c      	blt.n	8013e58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8013dfe:	88f3      	ldrh	r3, [r6, #6]
 8013e00:	4499      	add	r9, r3
 8013e02:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 8013e06:	4498      	add	r8, r3
 8013e08:	fa0f f989 	sxth.w	r9, r9
 8013e0c:	fa0f f888 	sxth.w	r8, r8
 8013e10:	45c1      	cmp	r9, r8
 8013e12:	db21      	blt.n	8013e58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8013e14:	88b3      	ldrh	r3, [r6, #4]
 8013e16:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8013e1a:	fa1f f28c 	uxth.w	r2, ip
 8013e1e:	4413      	add	r3, r2
 8013e20:	b29b      	uxth	r3, r3
 8013e22:	45e6      	cmp	lr, ip
 8013e24:	fa1f f88e 	uxth.w	r8, lr
 8013e28:	fa0f f983 	sxth.w	r9, r3
 8013e2c:	db0a      	blt.n	8013e44 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 8013e2e:	eba3 0308 	sub.w	r3, r3, r8
 8013e32:	1ac9      	subs	r1, r1, r3
 8013e34:	b209      	sxth	r1, r1
 8013e36:	2900      	cmp	r1, #0
 8013e38:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 8013e3c:	ddda      	ble.n	8013df4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8013e3e:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8013e42:	e7c6      	b.n	8013dd2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8013e44:	4441      	add	r1, r8
 8013e46:	b209      	sxth	r1, r1
 8013e48:	4549      	cmp	r1, r9
 8013e4a:	dc05      	bgt.n	8013e58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8013e4c:	eba2 0208 	sub.w	r2, r2, r8
 8013e50:	b212      	sxth	r2, r2
 8013e52:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8013e56:	e7cb      	b.n	8013df0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 8013e58:	4607      	mov	r7, r0
 8013e5a:	e7bb      	b.n	8013dd4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8013e5c:	2d00      	cmp	r5, #0
 8013e5e:	d181      	bne.n	8013d64 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 8013e60:	2f00      	cmp	r7, #0
 8013e62:	f000 81dd 	beq.w	8014220 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8013e66:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 8013e6a:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 8013e6e:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
 8013e72:	b2b3      	uxth	r3, r6
 8013e74:	9305      	str	r3, [sp, #20]
 8013e76:	9a05      	ldr	r2, [sp, #20]
 8013e78:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8013e7c:	4413      	add	r3, r2
 8013e7e:	b2ba      	uxth	r2, r7
 8013e80:	4492      	add	sl, r2
 8013e82:	b29b      	uxth	r3, r3
 8013e84:	fa1f fa8a 	uxth.w	sl, sl
 8013e88:	fa0f f883 	sxth.w	r8, r3
 8013e8c:	fa0f f98a 	sxth.w	r9, sl
 8013e90:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8013e94:	9b04      	ldr	r3, [sp, #16]
 8013e96:	2b00      	cmp	r3, #0
 8013e98:	d052      	beq.n	8013f40 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 8013e9a:	9903      	ldr	r1, [sp, #12]
 8013e9c:	4620      	mov	r0, r4
 8013e9e:	f7ff fcb8 	bl	8013812 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8013ea2:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8013ea6:	b1c0      	cbz	r0, 8013eda <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8013ea8:	f9b4 e000 	ldrsh.w	lr, [r4]
 8013eac:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8013eb0:	4576      	cmp	r6, lr
 8013eb2:	dc22      	bgt.n	8013efa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8013eb4:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8013eb8:	44f4      	add	ip, lr
 8013eba:	fa0f fc8c 	sxth.w	ip, ip
 8013ebe:	45e0      	cmp	r8, ip
 8013ec0:	db1b      	blt.n	8013efa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8013ec2:	428f      	cmp	r7, r1
 8013ec4:	fa1f fc81 	uxth.w	ip, r1
 8013ec8:	88e1      	ldrh	r1, [r4, #6]
 8013eca:	dc0d      	bgt.n	8013ee8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 8013ecc:	ebaa 0c0c 	sub.w	ip, sl, ip
 8013ed0:	eba1 010c 	sub.w	r1, r1, ip
 8013ed4:	f8a4 9002 	strh.w	r9, [r4, #2]
 8013ed8:	80e1      	strh	r1, [r4, #6]
 8013eda:	4628      	mov	r0, r5
 8013edc:	9904      	ldr	r1, [sp, #16]
 8013ede:	3901      	subs	r1, #1
 8013ee0:	9104      	str	r1, [sp, #16]
 8013ee2:	3c08      	subs	r4, #8
 8013ee4:	4605      	mov	r5, r0
 8013ee6:	e7d3      	b.n	8013e90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 8013ee8:	4461      	add	r1, ip
 8013eea:	b209      	sxth	r1, r1
 8013eec:	4549      	cmp	r1, r9
 8013eee:	dcf5      	bgt.n	8013edc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8013ef0:	eba2 0c0c 	sub.w	ip, r2, ip
 8013ef4:	f8a4 c006 	strh.w	ip, [r4, #6]
 8013ef8:	e7ef      	b.n	8013eda <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8013efa:	428f      	cmp	r7, r1
 8013efc:	dcee      	bgt.n	8013edc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8013efe:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 8013f02:	4461      	add	r1, ip
 8013f04:	b209      	sxth	r1, r1
 8013f06:	4589      	cmp	r9, r1
 8013f08:	dbe8      	blt.n	8013edc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8013f0a:	4576      	cmp	r6, lr
 8013f0c:	fa1f fc8e 	uxth.w	ip, lr
 8013f10:	88a1      	ldrh	r1, [r4, #4]
 8013f12:	dc07      	bgt.n	8013f24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 8013f14:	eba3 0c0c 	sub.w	ip, r3, ip
 8013f18:	eba1 010c 	sub.w	r1, r1, ip
 8013f1c:	f8a4 8000 	strh.w	r8, [r4]
 8013f20:	80a1      	strh	r1, [r4, #4]
 8013f22:	e7da      	b.n	8013eda <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8013f24:	4461      	add	r1, ip
 8013f26:	b209      	sxth	r1, r1
 8013f28:	4588      	cmp	r8, r1
 8013f2a:	dbd7      	blt.n	8013edc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8013f2c:	9905      	ldr	r1, [sp, #20]
 8013f2e:	eba1 0c0c 	sub.w	ip, r1, ip
 8013f32:	f8a4 c004 	strh.w	ip, [r4, #4]
 8013f36:	e7d0      	b.n	8013eda <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8013f38:	200137b2 	.word	0x200137b2
 8013f3c:	200137b0 	.word	0x200137b0
 8013f40:	2d00      	cmp	r5, #0
 8013f42:	f000 816d 	beq.w	8014220 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8013f46:	9b06      	ldr	r3, [sp, #24]
 8013f48:	445b      	add	r3, fp
 8013f4a:	461c      	mov	r4, r3
 8013f4c:	9b02      	ldr	r3, [sp, #8]
 8013f4e:	3301      	adds	r3, #1
 8013f50:	f000 8166 	beq.w	8014220 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8013f54:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
 8013f58:	4629      	mov	r1, r5
 8013f5a:	9803      	ldr	r0, [sp, #12]
 8013f5c:	f7ff fccc 	bl	80138f8 <_ZNK8touchgfx4Rect8includesERKS0_>
 8013f60:	b120      	cbz	r0, 8013f6c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 8013f62:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8013f66:	9801      	ldr	r0, [sp, #4]
 8013f68:	f7ff feb0 	bl	8013ccc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8013f6c:	9903      	ldr	r1, [sp, #12]
 8013f6e:	4628      	mov	r0, r5
 8013f70:	f7ff fc4f 	bl	8013812 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8013f74:	2800      	cmp	r0, #0
 8013f76:	f000 809c 	beq.w	80140b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8013f7a:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
 8013f7e:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8013f82:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8013f86:	9309      	str	r3, [sp, #36]	; 0x24
 8013f88:	fa1f f189 	uxth.w	r1, r9
 8013f8c:	eb01 0c03 	add.w	ip, r1, r3
 8013f90:	fa1f fa8c 	uxth.w	sl, ip
 8013f94:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 8013f98:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 8013f9c:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
 8013fa0:	b283      	uxth	r3, r0
 8013fa2:	eb03 050c 	add.w	r5, r3, ip
 8013fa6:	b2ad      	uxth	r5, r5
 8013fa8:	9505      	str	r5, [sp, #20]
 8013faa:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 8013fae:	9504      	str	r5, [sp, #16]
 8013fb0:	4548      	cmp	r0, r9
 8013fb2:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
 8013fb6:	f340 8099 	ble.w	80140ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 8013fba:	1a5b      	subs	r3, r3, r1
 8013fbc:	b29b      	uxth	r3, r3
 8013fbe:	4596      	cmp	lr, r2
 8013fc0:	fa0f f08a 	sxth.w	r0, sl
 8013fc4:	b21e      	sxth	r6, r3
 8013fc6:	dd2e      	ble.n	8014026 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 8013fc8:	9f02      	ldr	r7, [sp, #8]
 8013fca:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 8013fce:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 8013fd2:	9f04      	ldr	r7, [sp, #16]
 8013fd4:	1a3f      	subs	r7, r7, r0
 8013fd6:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
 8013fda:	fa1f fe8e 	uxth.w	lr, lr
 8013fde:	b292      	uxth	r2, r2
 8013fe0:	ebae 0102 	sub.w	r1, lr, r2
 8013fe4:	44a6      	add	lr, r4
 8013fe6:	4402      	add	r2, r0
 8013fe8:	b289      	uxth	r1, r1
 8013fea:	fa0f fe8e 	sxth.w	lr, lr
 8013fee:	b212      	sxth	r2, r2
 8013ff0:	b20d      	sxth	r5, r1
 8013ff2:	ebae 0202 	sub.w	r2, lr, r2
 8013ff6:	436f      	muls	r7, r5
 8013ff8:	4372      	muls	r2, r6
 8013ffa:	4297      	cmp	r7, r2
 8013ffc:	db09      	blt.n	8014012 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 8013ffe:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
 8014002:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
 8014006:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801400a:	449c      	add	ip, r3
 801400c:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8014010:	e686      	b.n	8013d20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8014012:	4421      	add	r1, r4
 8014014:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 8014018:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
 801401c:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8014020:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8014024:	e67c      	b.n	8013d20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8014026:	9f04      	ldr	r7, [sp, #16]
 8014028:	42b8      	cmp	r0, r7
 801402a:	da27      	bge.n	801407c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 801402c:	9902      	ldr	r1, [sp, #8]
 801402e:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
 8014032:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 8014036:	eb05 010e 	add.w	r1, r5, lr
 801403a:	fa1f f881 	uxth.w	r8, r1
 801403e:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
 8014042:	4411      	add	r1, r2
 8014044:	eba1 0108 	sub.w	r1, r1, r8
 8014048:	b289      	uxth	r1, r1
 801404a:	fa0f f988 	sxth.w	r9, r8
 801404e:	eba2 020e 	sub.w	r2, r2, lr
 8014052:	fa0f f881 	sxth.w	r8, r1
 8014056:	1a3f      	subs	r7, r7, r0
 8014058:	4372      	muls	r2, r6
 801405a:	fb08 f707 	mul.w	r7, r8, r7
 801405e:	42ba      	cmp	r2, r7
 8014060:	dc06      	bgt.n	8014070 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 8014062:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
 8014066:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
 801406a:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
 801406e:	e7ca      	b.n	8014006 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 8014070:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 8014074:	4429      	add	r1, r5
 8014076:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801407a:	e651      	b.n	8013d20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801407c:	9805      	ldr	r0, [sp, #20]
 801407e:	ebaa 0000 	sub.w	r0, sl, r0
 8014082:	b280      	uxth	r0, r0
 8014084:	2d06      	cmp	r5, #6
 8014086:	fa0f fe80 	sxth.w	lr, r0
 801408a:	d817      	bhi.n	80140bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 801408c:	9b04      	ldr	r3, [sp, #16]
 801408e:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8014092:	1c6b      	adds	r3, r5, #1
 8014094:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
 8014098:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
 801409c:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 80140a0:	9b01      	ldr	r3, [sp, #4]
 80140a2:	9801      	ldr	r0, [sp, #4]
 80140a4:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 80140a8:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 80140ac:	805a      	strh	r2, [r3, #2]
 80140ae:	809e      	strh	r6, [r3, #4]
 80140b0:	80d9      	strh	r1, [r3, #6]
 80140b2:	9b02      	ldr	r3, [sp, #8]
 80140b4:	3b01      	subs	r3, #1
 80140b6:	9302      	str	r3, [sp, #8]
 80140b8:	3c08      	subs	r4, #8
 80140ba:	e747      	b.n	8013f4c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 80140bc:	9a02      	ldr	r2, [sp, #8]
 80140be:	45b6      	cmp	lr, r6
 80140c0:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80140c4:	db0d      	blt.n	80140e2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 80140c6:	449c      	add	ip, r3
 80140c8:	fa1f fc8c 	uxth.w	ip, ip
 80140cc:	445a      	add	r2, fp
 80140ce:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 80140d2:	448c      	add	ip, r1
 80140d4:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 80140d8:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
 80140dc:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
 80140e0:	e61e      	b.n	8013d20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80140e2:	445a      	add	r2, fp
 80140e4:	4484      	add	ip, r0
 80140e6:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
 80140ea:	e78f      	b.n	801400c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 80140ec:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 80140f0:	fa1f f18e 	uxth.w	r1, lr
 80140f4:	eb01 0806 	add.w	r8, r1, r6
 80140f8:	b293      	uxth	r3, r2
 80140fa:	fa1f f888 	uxth.w	r8, r8
 80140fe:	9306      	str	r3, [sp, #24]
 8014100:	fa0f f388 	sxth.w	r3, r8
 8014104:	9307      	str	r3, [sp, #28]
 8014106:	9f06      	ldr	r7, [sp, #24]
 8014108:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 801410c:	443b      	add	r3, r7
 801410e:	b29b      	uxth	r3, r3
 8014110:	4596      	cmp	lr, r2
 8014112:	9308      	str	r3, [sp, #32]
 8014114:	da24      	bge.n	8014160 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 8014116:	9905      	ldr	r1, [sp, #20]
 8014118:	eba3 0308 	sub.w	r3, r3, r8
 801411c:	ebaa 0401 	sub.w	r4, sl, r1
 8014120:	b2a4      	uxth	r4, r4
 8014122:	b29b      	uxth	r3, r3
 8014124:	b225      	sxth	r5, r4
 8014126:	b219      	sxth	r1, r3
 8014128:	eba2 020e 	sub.w	r2, r2, lr
 801412c:	eba9 0000 	sub.w	r0, r9, r0
 8014130:	436a      	muls	r2, r5
 8014132:	4348      	muls	r0, r1
 8014134:	4282      	cmp	r2, r0
 8014136:	9a02      	ldr	r2, [sp, #8]
 8014138:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 801413c:	445a      	add	r2, fp
 801413e:	dc06      	bgt.n	801414e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 8014140:	9b07      	ldr	r3, [sp, #28]
 8014142:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
 8014146:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
 801414a:	44a4      	add	ip, r4
 801414c:	e75e      	b.n	801400c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 801414e:	9904      	ldr	r1, [sp, #16]
 8014150:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
 8014154:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
 8014158:	4433      	add	r3, r6
 801415a:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 801415e:	e5df      	b.n	8013d20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8014160:	9f06      	ldr	r7, [sp, #24]
 8014162:	9b04      	ldr	r3, [sp, #16]
 8014164:	1bc9      	subs	r1, r1, r7
 8014166:	fa0f f78a 	sxth.w	r7, sl
 801416a:	b289      	uxth	r1, r1
 801416c:	429f      	cmp	r7, r3
 801416e:	fa0f fe81 	sxth.w	lr, r1
 8014172:	dd23      	ble.n	80141bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 8014174:	9a05      	ldr	r2, [sp, #20]
 8014176:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 801417a:	9d07      	ldr	r5, [sp, #28]
 801417c:	ebaa 0202 	sub.w	r2, sl, r2
 8014180:	b292      	uxth	r2, r2
 8014182:	eba5 0a03 	sub.w	sl, r5, r3
 8014186:	b214      	sxth	r4, r2
 8014188:	eba9 0000 	sub.w	r0, r9, r0
 801418c:	9b02      	ldr	r3, [sp, #8]
 801418e:	fb0e f000 	mul.w	r0, lr, r0
 8014192:	fb04 fa0a 	mul.w	sl, r4, sl
 8014196:	00db      	lsls	r3, r3, #3
 8014198:	4550      	cmp	r0, sl
 801419a:	445b      	add	r3, fp
 801419c:	db03      	blt.n	80141a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 801419e:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
 80141a2:	4494      	add	ip, r2
 80141a4:	e732      	b.n	801400c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 80141a6:	9a04      	ldr	r2, [sp, #16]
 80141a8:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
 80141ac:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
 80141b0:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
 80141b4:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80141b8:	4431      	add	r1, r6
 80141ba:	e75c      	b.n	8014076 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 80141bc:	9b08      	ldr	r3, [sp, #32]
 80141be:	eba3 0308 	sub.w	r3, r3, r8
 80141c2:	b29b      	uxth	r3, r3
 80141c4:	2d06      	cmp	r5, #6
 80141c6:	b218      	sxth	r0, r3
 80141c8:	d813      	bhi.n	80141f2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 80141ca:	9b07      	ldr	r3, [sp, #28]
 80141cc:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
 80141d0:	1c6b      	adds	r3, r5, #1
 80141d2:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
 80141d6:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 80141da:	9b01      	ldr	r3, [sp, #4]
 80141dc:	9901      	ldr	r1, [sp, #4]
 80141de:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 80141e2:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 80141e6:	805a      	strh	r2, [r3, #2]
 80141e8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80141ea:	809a      	strh	r2, [r3, #4]
 80141ec:	f8a3 e006 	strh.w	lr, [r3, #6]
 80141f0:	e75f      	b.n	80140b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 80141f2:	9c02      	ldr	r4, [sp, #8]
 80141f4:	4570      	cmp	r0, lr
 80141f6:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 80141fa:	db0d      	blt.n	8014218 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 80141fc:	4431      	add	r1, r6
 80141fe:	9b06      	ldr	r3, [sp, #24]
 8014200:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8014204:	b289      	uxth	r1, r1
 8014206:	445c      	add	r4, fp
 8014208:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801420c:	4419      	add	r1, r3
 801420e:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
 8014212:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
 8014216:	e583      	b.n	8013d20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8014218:	445c      	add	r4, fp
 801421a:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
 801421e:	e79b      	b.n	8014158 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 8014220:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8014224:	1e65      	subs	r5, r4, #1
 8014226:	b2ad      	uxth	r5, r5
 8014228:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 801422c:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8014230:	42b5      	cmp	r5, r6
 8014232:	d044      	beq.n	80142be <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 8014234:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8014238:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
 801423c:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8014240:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
 8014244:	4282      	cmp	r2, r0
 8014246:	d11f      	bne.n	8014288 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8014248:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 801424c:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8014250:	459c      	cmp	ip, r3
 8014252:	d119      	bne.n	8014288 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8014254:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
 8014258:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801425c:	19d8      	adds	r0, r3, r7
 801425e:	b200      	sxth	r0, r0
 8014260:	4288      	cmp	r0, r1
 8014262:	d109      	bne.n	8014278 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 8014264:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 8014268:	4413      	add	r3, r2
 801426a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801426e:	4629      	mov	r1, r5
 8014270:	9801      	ldr	r0, [sp, #4]
 8014272:	f7ff fd2b 	bl	8013ccc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8014276:	e003      	b.n	8014280 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8014278:	4411      	add	r1, r2
 801427a:	b209      	sxth	r1, r1
 801427c:	42b9      	cmp	r1, r7
 801427e:	d0f3      	beq.n	8014268 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 8014280:	3d01      	subs	r5, #1
 8014282:	b2ad      	uxth	r5, r5
 8014284:	3c08      	subs	r4, #8
 8014286:	e7d3      	b.n	8014230 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 8014288:	42b9      	cmp	r1, r7
 801428a:	d1f9      	bne.n	8014280 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 801428c:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
 8014290:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8014294:	4299      	cmp	r1, r3
 8014296:	d1f3      	bne.n	8014280 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8014298:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 801429c:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 80142a0:	181f      	adds	r7, r3, r0
 80142a2:	b23f      	sxth	r7, r7
 80142a4:	42ba      	cmp	r2, r7
 80142a6:	d105      	bne.n	80142b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 80142a8:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
 80142ac:	440b      	add	r3, r1
 80142ae:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 80142b2:	e7dc      	b.n	801426e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 80142b4:	440a      	add	r2, r1
 80142b6:	b212      	sxth	r2, r2
 80142b8:	4290      	cmp	r0, r2
 80142ba:	d1e1      	bne.n	8014280 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 80142bc:	e7f6      	b.n	80142ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 80142be:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
 80142c2:	2e07      	cmp	r6, #7
 80142c4:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 80142c8:	d812      	bhi.n	80142f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 80142ca:	1c75      	adds	r5, r6, #1
 80142cc:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
 80142d0:	9d01      	ldr	r5, [sp, #4]
 80142d2:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 80142d6:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 80142da:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 80142de:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 80142e2:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 80142e6:	442c      	add	r4, r5
 80142e8:	8061      	strh	r1, [r4, #2]
 80142ea:	80a2      	strh	r2, [r4, #4]
 80142ec:	80e3      	strh	r3, [r4, #6]
 80142ee:	e581      	b.n	8013df4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80142f0:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 80142f4:	3e01      	subs	r6, #1
 80142f6:	445c      	add	r4, fp
 80142f8:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 80142fc:	f04f 37ff 	mov.w	r7, #4294967295
 8014300:	2500      	movs	r5, #0
 8014302:	9305      	str	r3, [sp, #20]
 8014304:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8014308:	9302      	str	r3, [sp, #8]
 801430a:	1e72      	subs	r2, r6, #1
 801430c:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8014310:	9304      	str	r3, [sp, #16]
 8014312:	4691      	mov	r9, r2
 8014314:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
 8014318:	f1b9 3fff 	cmp.w	r9, #4294967295
 801431c:	bf14      	ite	ne
 801431e:	9905      	ldrne	r1, [sp, #20]
 8014320:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 8014324:	6818      	ldr	r0, [r3, #0]
 8014326:	9207      	str	r2, [sp, #28]
 8014328:	bf18      	it	ne
 801432a:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 801432e:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8014332:	f8be 1006 	ldrh.w	r1, [lr, #6]
 8014336:	f8be 8004 	ldrh.w	r8, [lr, #4]
 801433a:	9306      	str	r3, [sp, #24]
 801433c:	fb18 f801 	smulbb	r8, r8, r1
 8014340:	6859      	ldr	r1, [r3, #4]
 8014342:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8014346:	4671      	mov	r1, lr
 8014348:	a80c      	add	r0, sp, #48	; 0x30
 801434a:	f7ff fafb 	bl	8013944 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801434e:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8014352:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 8014356:	9b04      	ldr	r3, [sp, #16]
 8014358:	9a02      	ldr	r2, [sp, #8]
 801435a:	fb10 f001 	smulbb	r0, r0, r1
 801435e:	fb02 8803 	mla	r8, r2, r3, r8
 8014362:	eba0 0108 	sub.w	r1, r0, r8
 8014366:	f04f 0c08 	mov.w	ip, #8
 801436a:	fb90 f0fc 	sdiv	r0, r0, ip
 801436e:	4288      	cmp	r0, r1
 8014370:	dc20      	bgt.n	80143b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 8014372:	4551      	cmp	r1, sl
 8014374:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8014378:	da03      	bge.n	8014382 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 801437a:	b1d9      	cbz	r1, 80143b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 801437c:	468a      	mov	sl, r1
 801437e:	464f      	mov	r7, r9
 8014380:	4635      	mov	r5, r6
 8014382:	f109 39ff 	add.w	r9, r9, #4294967295
 8014386:	f119 0f02 	cmn.w	r9, #2
 801438a:	d1c5      	bne.n	8014318 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 801438c:	4616      	mov	r6, r2
 801438e:	3201      	adds	r2, #1
 8014390:	f1a4 0408 	sub.w	r4, r4, #8
 8014394:	d1b6      	bne.n	8014304 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 8014396:	9b01      	ldr	r3, [sp, #4]
 8014398:	b2ac      	uxth	r4, r5
 801439a:	00ed      	lsls	r5, r5, #3
 801439c:	1958      	adds	r0, r3, r5
 801439e:	1c7b      	adds	r3, r7, #1
 80143a0:	d10b      	bne.n	80143ba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 80143a2:	4601      	mov	r1, r0
 80143a4:	9803      	ldr	r0, [sp, #12]
 80143a6:	f7ff facd 	bl	8013944 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80143aa:	4621      	mov	r1, r4
 80143ac:	9801      	ldr	r0, [sp, #4]
 80143ae:	f7ff fc8d 	bl	8013ccc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80143b2:	e4b5      	b.n	8013d20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80143b4:	464f      	mov	r7, r9
 80143b6:	4635      	mov	r5, r6
 80143b8:	e7ed      	b.n	8014396 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 80143ba:	9b01      	ldr	r3, [sp, #4]
 80143bc:	00ff      	lsls	r7, r7, #3
 80143be:	19d9      	adds	r1, r3, r7
 80143c0:	f7ff fac0 	bl	8013944 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80143c4:	9b03      	ldr	r3, [sp, #12]
 80143c6:	cb03      	ldmia	r3!, {r0, r1}
 80143c8:	445f      	add	r7, fp
 80143ca:	445d      	add	r5, fp
 80143cc:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
 80143d0:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
 80143d4:	f855 0fac 	ldr.w	r0, [r5, #172]!
 80143d8:	9b03      	ldr	r3, [sp, #12]
 80143da:	6869      	ldr	r1, [r5, #4]
 80143dc:	c303      	stmia	r3!, {r0, r1}
 80143de:	e7e4      	b.n	80143aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

080143e0 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 80143e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80143e4:	f500 7698 	add.w	r6, r0, #304	; 0x130
 80143e8:	b09b      	sub	sp, #108	; 0x6c
 80143ea:	4604      	mov	r4, r0
 80143ec:	4630      	mov	r0, r6
 80143ee:	f7fa fa20 	bl	800e832 <_ZNK8touchgfx4Rect7isEmptyEv>
 80143f2:	4605      	mov	r5, r0
 80143f4:	b948      	cbnz	r0, 801440a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 80143f6:	6823      	ldr	r3, [r4, #0]
 80143f8:	e896 0006 	ldmia.w	r6, {r1, r2}
 80143fc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80143fe:	4620      	mov	r0, r4
 8014400:	4798      	blx	r3
 8014402:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 8014406:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 801440a:	4bc6      	ldr	r3, [pc, #792]	; (8014724 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 801440c:	681b      	ldr	r3, [r3, #0]
 801440e:	2b00      	cmp	r3, #0
 8014410:	d03f      	beq.n	8014492 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8014412:	4dc5      	ldr	r5, [pc, #788]	; (8014728 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 8014414:	4628      	mov	r0, r5
 8014416:	f7fa fa0c 	bl	800e832 <_ZNK8touchgfx4Rect7isEmptyEv>
 801441a:	4606      	mov	r6, r0
 801441c:	2800      	cmp	r0, #0
 801441e:	d138      	bne.n	8014492 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8014420:	4628      	mov	r0, r5
 8014422:	f7ff f907 	bl	8013634 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8014426:	6823      	ldr	r3, [r4, #0]
 8014428:	6829      	ldr	r1, [r5, #0]
 801442a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801442c:	686a      	ldr	r2, [r5, #4]
 801442e:	4620      	mov	r0, r4
 8014430:	4798      	blx	r3
 8014432:	802e      	strh	r6, [r5, #0]
 8014434:	806e      	strh	r6, [r5, #2]
 8014436:	80ae      	strh	r6, [r5, #4]
 8014438:	80ee      	strh	r6, [r5, #6]
 801443a:	f10d 0824 	add.w	r8, sp, #36	; 0x24
 801443e:	4dbb      	ldr	r5, [pc, #748]	; (801472c <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8014440:	4640      	mov	r0, r8
 8014442:	f7ff fbeb 	bl	8013c1c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8014446:	882e      	ldrh	r6, [r5, #0]
 8014448:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 801444c:	4633      	mov	r3, r6
 801444e:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8014452:	42bb      	cmp	r3, r7
 8014454:	d224      	bcs.n	80144a0 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8014456:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 801445a:	2907      	cmp	r1, #7
 801445c:	d816      	bhi.n	801448c <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 801445e:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8014462:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 8014466:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 801446a:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 801446e:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 8014472:	1c4a      	adds	r2, r1, #1
 8014474:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 8014478:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 801447c:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 8014480:	f8a2 a002 	strh.w	sl, [r2, #2]
 8014484:	f8a2 e004 	strh.w	lr, [r2, #4]
 8014488:	f8a2 c006 	strh.w	ip, [r2, #6]
 801448c:	3301      	adds	r3, #1
 801448e:	b29b      	uxth	r3, r3
 8014490:	e7df      	b.n	8014452 <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 8014492:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8014496:	2b00      	cmp	r3, #0
 8014498:	d1cf      	bne.n	801443a <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 801449a:	b01b      	add	sp, #108	; 0x6c
 801449c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80144a0:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
 80144a4:	42b3      	cmp	r3, r6
 80144a6:	d90c      	bls.n	80144c2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 80144a8:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 80144ac:	6822      	ldr	r2, [r4, #0]
 80144ae:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
 80144b2:	6c17      	ldr	r7, [r2, #64]	; 0x40
 80144b4:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
 80144b8:	4620      	mov	r0, r4
 80144ba:	3601      	adds	r6, #1
 80144bc:	47b8      	blx	r7
 80144be:	b2b6      	uxth	r6, r6
 80144c0:	e7ee      	b.n	80144a0 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 80144c2:	4a9b      	ldr	r2, [pc, #620]	; (8014730 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 80144c4:	6813      	ldr	r3, [r2, #0]
 80144c6:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 80144ca:	2b01      	cmp	r3, #1
 80144cc:	4691      	mov	r9, r2
 80144ce:	f040 80e2 	bne.w	8014696 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 80144d2:	8829      	ldrh	r1, [r5, #0]
 80144d4:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 80144d8:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 80144dc:	33ae      	adds	r3, #174	; 0xae
 80144de:	2600      	movs	r6, #0
 80144e0:	428f      	cmp	r7, r1
 80144e2:	f103 0308 	add.w	r3, r3, #8
 80144e6:	dd0a      	ble.n	80144fe <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 80144e8:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 80144ec:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 80144f0:	4402      	add	r2, r0
 80144f2:	b212      	sxth	r2, r2
 80144f4:	4296      	cmp	r6, r2
 80144f6:	bfb8      	it	lt
 80144f8:	4616      	movlt	r6, r2
 80144fa:	3101      	adds	r1, #1
 80144fc:	e7f0      	b.n	80144e0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 80144fe:	4b8d      	ldr	r3, [pc, #564]	; (8014734 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 8014500:	f8df 922c 	ldr.w	r9, [pc, #556]	; 8014730 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 8014504:	881b      	ldrh	r3, [r3, #0]
 8014506:	2b0f      	cmp	r3, #15
 8014508:	bf88      	it	hi
 801450a:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 801450e:	f04f 0300 	mov.w	r3, #0
 8014512:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8014516:	bf98      	it	ls
 8014518:	f04f 0b01 	movls.w	fp, #1
 801451c:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 8014520:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 8014524:	4b82      	ldr	r3, [pc, #520]	; (8014730 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8014526:	4438      	add	r0, r7
 8014528:	b207      	sxth	r7, r0
 801452a:	6818      	ldr	r0, [r3, #0]
 801452c:	42b7      	cmp	r7, r6
 801452e:	6803      	ldr	r3, [r0, #0]
 8014530:	f280 8083 	bge.w	801463a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8014534:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8014538:	4798      	blx	r3
 801453a:	eb07 030b 	add.w	r3, r7, fp
 801453e:	4298      	cmp	r0, r3
 8014540:	da07      	bge.n	8014552 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8014542:	42b0      	cmp	r0, r6
 8014544:	da05      	bge.n	8014552 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8014546:	4287      	cmp	r7, r0
 8014548:	dd6c      	ble.n	8014624 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 801454a:	2f00      	cmp	r7, #0
 801454c:	dd6a      	ble.n	8014624 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 801454e:	4630      	mov	r0, r6
 8014550:	e004      	b.n	801455c <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 8014552:	4287      	cmp	r7, r0
 8014554:	dcfb      	bgt.n	801454e <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 8014556:	42b0      	cmp	r0, r6
 8014558:	bfa8      	it	ge
 801455a:	4630      	movge	r0, r6
 801455c:	4b76      	ldr	r3, [pc, #472]	; (8014738 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 801455e:	f8ad 7016 	strh.w	r7, [sp, #22]
 8014562:	1bc0      	subs	r0, r0, r7
 8014564:	f9b3 3000 	ldrsh.w	r3, [r3]
 8014568:	882f      	ldrh	r7, [r5, #0]
 801456a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801456e:	2200      	movs	r2, #0
 8014570:	f8ad 2014 	strh.w	r2, [sp, #20]
 8014574:	f8ad 001a 	strh.w	r0, [sp, #26]
 8014578:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 801457c:	42bb      	cmp	r3, r7
 801457e:	d9cd      	bls.n	801451c <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8014580:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 8014584:	ab07      	add	r3, sp, #28
 8014586:	f852 0fac 	ldr.w	r0, [r2, #172]!
 801458a:	6851      	ldr	r1, [r2, #4]
 801458c:	c303      	stmia	r3!, {r0, r1}
 801458e:	a905      	add	r1, sp, #20
 8014590:	a807      	add	r0, sp, #28
 8014592:	f7ff f93e 	bl	8013812 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8014596:	2800      	cmp	r0, #0
 8014598:	d04c      	beq.n	8014634 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 801459a:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 801459e:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 80145a2:	f8bd a020 	ldrh.w	sl, [sp, #32]
 80145a6:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 80145aa:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 80145ae:	9302      	str	r3, [sp, #8]
 80145b0:	4686      	mov	lr, r0
 80145b2:	4290      	cmp	r0, r2
 80145b4:	4450      	add	r0, sl
 80145b6:	f8bd a018 	ldrh.w	sl, [sp, #24]
 80145ba:	bfb8      	it	lt
 80145bc:	4696      	movlt	lr, r2
 80145be:	4452      	add	r2, sl
 80145c0:	4299      	cmp	r1, r3
 80145c2:	b280      	uxth	r0, r0
 80145c4:	b292      	uxth	r2, r2
 80145c6:	468c      	mov	ip, r1
 80145c8:	fa0f fa82 	sxth.w	sl, r2
 80145cc:	bfb8      	it	lt
 80145ce:	469c      	movlt	ip, r3
 80145d0:	b203      	sxth	r3, r0
 80145d2:	4553      	cmp	r3, sl
 80145d4:	bfb8      	it	lt
 80145d6:	4602      	movlt	r2, r0
 80145d8:	eba2 020e 	sub.w	r2, r2, lr
 80145dc:	f8ad 2020 	strh.w	r2, [sp, #32]
 80145e0:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 80145e4:	9b02      	ldr	r3, [sp, #8]
 80145e6:	f8ad e01c 	strh.w	lr, [sp, #28]
 80145ea:	4411      	add	r1, r2
 80145ec:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 80145f0:	f8ad c01e 	strh.w	ip, [sp, #30]
 80145f4:	4413      	add	r3, r2
 80145f6:	b289      	uxth	r1, r1
 80145f8:	b29b      	uxth	r3, r3
 80145fa:	b208      	sxth	r0, r1
 80145fc:	b21a      	sxth	r2, r3
 80145fe:	4290      	cmp	r0, r2
 8014600:	bfb8      	it	lt
 8014602:	460b      	movlt	r3, r1
 8014604:	eba3 030c 	sub.w	r3, r3, ip
 8014608:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801460c:	a807      	add	r0, sp, #28
 801460e:	f7fa f910 	bl	800e832 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014612:	b920      	cbnz	r0, 801461e <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 8014614:	6823      	ldr	r3, [r4, #0]
 8014616:	a907      	add	r1, sp, #28
 8014618:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801461a:	4620      	mov	r0, r4
 801461c:	4798      	blx	r3
 801461e:	3701      	adds	r7, #1
 8014620:	b2bf      	uxth	r7, r7
 8014622:	e7a9      	b.n	8014578 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 8014624:	f8d9 0000 	ldr.w	r0, [r9]
 8014628:	6803      	ldr	r3, [r0, #0]
 801462a:	2101      	movs	r1, #1
 801462c:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8014630:	4798      	blx	r3
 8014632:	e773      	b.n	801451c <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8014634:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8014638:	e7e8      	b.n	801460c <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 801463a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801463c:	4798      	blx	r3
 801463e:	4b3f      	ldr	r3, [pc, #252]	; (801473c <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 8014640:	781b      	ldrb	r3, [r3, #0]
 8014642:	2b00      	cmp	r3, #0
 8014644:	f43f af29 	beq.w	801449a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8014648:	2300      	movs	r3, #0
 801464a:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
 801464e:	882b      	ldrh	r3, [r5, #0]
 8014650:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 8014654:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8014658:	42ab      	cmp	r3, r5
 801465a:	f4bf af1e 	bcs.w	801449a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 801465e:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
 8014662:	2907      	cmp	r1, #7
 8014664:	d814      	bhi.n	8014690 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 8014666:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 801466a:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 801466e:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 8014672:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 8014676:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 801467a:	1c4a      	adds	r2, r1, #1
 801467c:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
 8014680:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 8014684:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 8014688:	f8a2 c002 	strh.w	ip, [r2, #2]
 801468c:	8097      	strh	r7, [r2, #4]
 801468e:	80d6      	strh	r6, [r2, #6]
 8014690:	3301      	adds	r3, #1
 8014692:	b29b      	uxth	r3, r3
 8014694:	e7e0      	b.n	8014658 <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 8014696:	2b02      	cmp	r3, #2
 8014698:	f040 8133 	bne.w	8014902 <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 801469c:	4b28      	ldr	r3, [pc, #160]	; (8014740 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 801469e:	781b      	ldrb	r3, [r3, #0]
 80146a0:	2b01      	cmp	r3, #1
 80146a2:	f104 0aac 	add.w	sl, r4, #172	; 0xac
 80146a6:	f000 8098 	beq.w	80147da <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 80146aa:	882a      	ldrh	r2, [r5, #0]
 80146ac:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
 80146b0:	3201      	adds	r2, #1
 80146b2:	b292      	uxth	r2, r2
 80146b4:	2900      	cmp	r1, #0
 80146b6:	d0c2      	beq.n	801463e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 80146b8:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
 80146bc:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
 80146c0:	441e      	add	r6, r3
 80146c2:	b236      	sxth	r6, r6
 80146c4:	4694      	mov	ip, r2
 80146c6:	f04f 0900 	mov.w	r9, #0
 80146ca:	fa1f f38c 	uxth.w	r3, ip
 80146ce:	4299      	cmp	r1, r3
 80146d0:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 80146d4:	f240 80bf 	bls.w	8014856 <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 80146d8:	4427      	add	r7, r4
 80146da:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 80146de:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
 80146e2:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
 80146e6:	4283      	cmp	r3, r0
 80146e8:	f340 80a1 	ble.w	801482e <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 80146ec:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
 80146f0:	4406      	add	r6, r0
 80146f2:	b236      	sxth	r6, r6
 80146f4:	429e      	cmp	r6, r3
 80146f6:	bfa8      	it	ge
 80146f8:	461e      	movge	r6, r3
 80146fa:	46e1      	mov	r9, ip
 80146fc:	f10c 0c01 	add.w	ip, ip, #1
 8014700:	e7e3      	b.n	80146ca <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 8014702:	d10a      	bne.n	801471a <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 8014704:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
 8014708:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
 801470c:	4562      	cmp	r2, ip
 801470e:	bfb8      	it	lt
 8014710:	4662      	movlt	r2, ip
 8014712:	4288      	cmp	r0, r1
 8014714:	bfb8      	it	lt
 8014716:	461f      	movlt	r7, r3
 8014718:	e087      	b.n	801482a <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 801471a:	428a      	cmp	r2, r1
 801471c:	bfb8      	it	lt
 801471e:	460a      	movlt	r2, r1
 8014720:	e083      	b.n	801482a <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8014722:	bf00      	nop
 8014724:	200137fc 	.word	0x200137fc
 8014728:	20013808 	.word	0x20013808
 801472c:	20000088 	.word	0x20000088
 8014730:	200137bc 	.word	0x200137bc
 8014734:	200137b2 	.word	0x200137b2
 8014738:	200137b0 	.word	0x200137b0
 801473c:	200137ba 	.word	0x200137ba
 8014740:	200137b4 	.word	0x200137b4
 8014744:	19a1      	adds	r1, r4, r6
 8014746:	ab07      	add	r3, sp, #28
 8014748:	f851 0fac 	ldr.w	r0, [r1, #172]!
 801474c:	6849      	ldr	r1, [r1, #4]
 801474e:	c303      	stmia	r3!, {r0, r1}
 8014750:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8014754:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8014758:	2b13      	cmp	r3, #19
 801475a:	bfd8      	it	le
 801475c:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8014760:	f8ad 201c 	strh.w	r2, [sp, #28]
 8014764:	440b      	add	r3, r1
 8014766:	1a9b      	subs	r3, r3, r2
 8014768:	a807      	add	r0, sp, #28
 801476a:	f8ad 3020 	strh.w	r3, [sp, #32]
 801476e:	f7fe ff7b 	bl	8013668 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8014772:	a807      	add	r0, sp, #28
 8014774:	f7fa f85d 	bl	800e832 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014778:	bb78      	cbnz	r0, 80147da <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 801477a:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 801477e:	f8d9 0000 	ldr.w	r0, [r9]
 8014782:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8014786:	f8d0 e000 	ldr.w	lr, [r0]
 801478a:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 801478e:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8014792:	f1bc 0f14 	cmp.w	ip, #20
 8014796:	bfa8      	it	ge
 8014798:	f04f 0c14 	movge.w	ip, #20
 801479c:	fa1f fc8c 	uxth.w	ip, ip
 80147a0:	f8cd c000 	str.w	ip, [sp]
 80147a4:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
 80147a8:	47d8      	blx	fp
 80147aa:	4683      	mov	fp, r0
 80147ac:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 80147b0:	a807      	add	r0, sp, #28
 80147b2:	f7fe ff3f 	bl	8013634 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 80147b6:	6823      	ldr	r3, [r4, #0]
 80147b8:	4426      	add	r6, r4
 80147ba:	4620      	mov	r0, r4
 80147bc:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80147be:	a907      	add	r1, sp, #28
 80147c0:	4798      	blx	r3
 80147c2:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 80147c6:	eba0 000b 	sub.w	r0, r0, fp
 80147ca:	b200      	sxth	r0, r0
 80147cc:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
 80147d0:	b918      	cbnz	r0, 80147da <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 80147d2:	b2b9      	uxth	r1, r7
 80147d4:	4650      	mov	r0, sl
 80147d6:	f7ff fa79 	bl	8013ccc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80147da:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
 80147de:	f1bb 0f00 	cmp.w	fp, #0
 80147e2:	f43f af2c 	beq.w	801463e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 80147e6:	882b      	ldrh	r3, [r5, #0]
 80147e8:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
 80147ec:	3301      	adds	r3, #1
 80147ee:	b29b      	uxth	r3, r3
 80147f0:	2700      	movs	r7, #0
 80147f2:	b299      	uxth	r1, r3
 80147f4:	458b      	cmp	fp, r1
 80147f6:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 80147fa:	d9a3      	bls.n	8014744 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 80147fc:	4426      	add	r6, r4
 80147fe:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 8014802:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
 8014806:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 801480a:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
 801480e:	4408      	add	r0, r1
 8014810:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
 8014814:	4461      	add	r1, ip
 8014816:	b200      	sxth	r0, r0
 8014818:	b209      	sxth	r1, r1
 801481a:	4288      	cmp	r0, r1
 801481c:	f6bf af71 	bge.w	8014702 <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 8014820:	4584      	cmp	ip, r0
 8014822:	4662      	mov	r2, ip
 8014824:	461f      	mov	r7, r3
 8014826:	bfb8      	it	lt
 8014828:	4602      	movlt	r2, r0
 801482a:	3301      	adds	r3, #1
 801482c:	e7e1      	b.n	80147f2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 801482e:	d10e      	bne.n	801484e <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 8014830:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
 8014834:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
 8014838:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
 801483c:	4473      	add	r3, lr
 801483e:	b21b      	sxth	r3, r3
 8014840:	429e      	cmp	r6, r3
 8014842:	bfa8      	it	ge
 8014844:	461e      	movge	r6, r3
 8014846:	4287      	cmp	r7, r0
 8014848:	bfb8      	it	lt
 801484a:	46e1      	movlt	r9, ip
 801484c:	e756      	b.n	80146fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 801484e:	4286      	cmp	r6, r0
 8014850:	bfa8      	it	ge
 8014852:	4606      	movge	r6, r0
 8014854:	e752      	b.n	80146fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8014856:	eb0a 0007 	add.w	r0, sl, r7
 801485a:	4427      	add	r7, r4
 801485c:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8014860:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
 8014864:	f1bb 0f13 	cmp.w	fp, #19
 8014868:	bfde      	ittt	le
 801486a:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
 801486e:	445e      	addle	r6, fp
 8014870:	b236      	sxthle	r6, r6
 8014872:	f7f9 ffde 	bl	800e832 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014876:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 801487a:	2800      	cmp	r0, #0
 801487c:	f47f af1a 	bne.w	80146b4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 8014880:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
 8014884:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8014888:	482a      	ldr	r0, [pc, #168]	; (8014934 <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 801488a:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
 801488e:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
 8014892:	6800      	ldr	r0, [r0, #0]
 8014894:	f8ad 101c 	strh.w	r1, [sp, #28]
 8014898:	1ab6      	subs	r6, r6, r2
 801489a:	2e14      	cmp	r6, #20
 801489c:	f8ad 201e 	strh.w	r2, [sp, #30]
 80148a0:	f8ad 3020 	strh.w	r3, [sp, #32]
 80148a4:	bfa8      	it	ge
 80148a6:	2614      	movge	r6, #20
 80148a8:	f8d0 c000 	ldr.w	ip, [r0]
 80148ac:	b2b6      	uxth	r6, r6
 80148ae:	fa1f fb8b 	uxth.w	fp, fp
 80148b2:	455e      	cmp	r6, fp
 80148b4:	bf94      	ite	ls
 80148b6:	9600      	strls	r6, [sp, #0]
 80148b8:	f8cd b000 	strhi.w	fp, [sp]
 80148bc:	b292      	uxth	r2, r2
 80148be:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
 80148c2:	b29b      	uxth	r3, r3
 80148c4:	b289      	uxth	r1, r1
 80148c6:	47b0      	blx	r6
 80148c8:	6823      	ldr	r3, [r4, #0]
 80148ca:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 80148ce:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80148d0:	a907      	add	r1, sp, #28
 80148d2:	4620      	mov	r0, r4
 80148d4:	4798      	blx	r3
 80148d6:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 80148da:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
 80148de:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
 80148e2:	1a5b      	subs	r3, r3, r1
 80148e4:	440a      	add	r2, r1
 80148e6:	b21b      	sxth	r3, r3
 80148e8:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
 80148ec:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
 80148f0:	2b00      	cmp	r3, #0
 80148f2:	f47f aeda 	bne.w	80146aa <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 80148f6:	fa1f f189 	uxth.w	r1, r9
 80148fa:	4650      	mov	r0, sl
 80148fc:	f7ff f9e6 	bl	8013ccc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8014900:	e6d3      	b.n	80146aa <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8014902:	882e      	ldrh	r6, [r5, #0]
 8014904:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8014908:	42b3      	cmp	r3, r6
 801490a:	f67f ae98 	bls.w	801463e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 801490e:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 8014912:	ab07      	add	r3, sp, #28
 8014914:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8014918:	6851      	ldr	r1, [r2, #4]
 801491a:	c303      	stmia	r3!, {r0, r1}
 801491c:	a807      	add	r0, sp, #28
 801491e:	f7f9 ff88 	bl	800e832 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014922:	b920      	cbnz	r0, 801492e <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 8014924:	6823      	ldr	r3, [r4, #0]
 8014926:	a907      	add	r1, sp, #28
 8014928:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801492a:	4620      	mov	r0, r4
 801492c:	4798      	blx	r3
 801492e:	3601      	adds	r6, #1
 8014930:	b2b6      	uxth	r6, r6
 8014932:	e7e7      	b.n	8014904 <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 8014934:	200137bc 	.word	0x200137bc

08014938 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8014938:	4b03      	ldr	r3, [pc, #12]	; (8014948 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 801493a:	2200      	movs	r2, #0
 801493c:	801a      	strh	r2, [r3, #0]
 801493e:	805a      	strh	r2, [r3, #2]
 8014940:	809a      	strh	r2, [r3, #4]
 8014942:	80da      	strh	r2, [r3, #6]
 8014944:	4770      	bx	lr
 8014946:	bf00      	nop
 8014948:	20013808 	.word	0x20013808

0801494c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 801494c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014950:	4606      	mov	r6, r0
 8014952:	b09d      	sub	sp, #116	; 0x74
 8014954:	a803      	add	r0, sp, #12
 8014956:	4614      	mov	r4, r2
 8014958:	468a      	mov	sl, r1
 801495a:	461d      	mov	r5, r3
 801495c:	f000 feca 	bl	80156f4 <_ZN8touchgfx12TextProviderC1Ev>
 8014960:	6833      	ldr	r3, [r6, #0]
 8014962:	4630      	mov	r0, r6
 8014964:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8014966:	4798      	blx	r3
 8014968:	6833      	ldr	r3, [r6, #0]
 801496a:	4607      	mov	r7, r0
 801496c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801496e:	4630      	mov	r0, r6
 8014970:	4798      	blx	r3
 8014972:	462a      	mov	r2, r5
 8014974:	9000      	str	r0, [sp, #0]
 8014976:	4621      	mov	r1, r4
 8014978:	463b      	mov	r3, r7
 801497a:	a803      	add	r0, sp, #12
 801497c:	f000 ff15 	bl	80157aa <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8014980:	2500      	movs	r5, #0
 8014982:	462c      	mov	r4, r5
 8014984:	46a9      	mov	r9, r5
 8014986:	46a8      	mov	r8, r5
 8014988:	f242 0b0b 	movw	fp, #8203	; 0x200b
 801498c:	2300      	movs	r3, #0
 801498e:	9302      	str	r3, [sp, #8]
 8014990:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8014994:	429c      	cmp	r4, r3
 8014996:	d002      	beq.n	801499e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8014998:	455c      	cmp	r4, fp
 801499a:	bf18      	it	ne
 801499c:	4625      	movne	r5, r4
 801499e:	ab02      	add	r3, sp, #8
 80149a0:	4632      	mov	r2, r6
 80149a2:	4651      	mov	r1, sl
 80149a4:	a803      	add	r0, sp, #12
 80149a6:	f001 fa03 	bl	8015db0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80149aa:	4604      	mov	r4, r0
 80149ac:	b108      	cbz	r0, 80149b2 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 80149ae:	280a      	cmp	r0, #10
 80149b0:	d10a      	bne.n	80149c8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 80149b2:	45c1      	cmp	r9, r8
 80149b4:	bf38      	it	cc
 80149b6:	46c1      	movcc	r9, r8
 80149b8:	f04f 0800 	mov.w	r8, #0
 80149bc:	2c00      	cmp	r4, #0
 80149be:	d1e5      	bne.n	801498c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 80149c0:	4648      	mov	r0, r9
 80149c2:	b01d      	add	sp, #116	; 0x74
 80149c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80149c8:	9a02      	ldr	r2, [sp, #8]
 80149ca:	2a00      	cmp	r2, #0
 80149cc:	d0de      	beq.n	801498c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 80149ce:	7b57      	ldrb	r7, [r2, #13]
 80149d0:	6833      	ldr	r3, [r6, #0]
 80149d2:	8894      	ldrh	r4, [r2, #4]
 80149d4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80149d6:	007f      	lsls	r7, r7, #1
 80149d8:	f407 7080 	and.w	r0, r7, #256	; 0x100
 80149dc:	7a97      	ldrb	r7, [r2, #10]
 80149de:	4629      	mov	r1, r5
 80149e0:	4307      	orrs	r7, r0
 80149e2:	4630      	mov	r0, r6
 80149e4:	4798      	blx	r3
 80149e6:	4438      	add	r0, r7
 80149e8:	4480      	add	r8, r0
 80149ea:	fa1f f888 	uxth.w	r8, r8
 80149ee:	e7e5      	b.n	80149bc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

080149f0 <_ZNK8touchgfx4Font12getCharWidthEt>:
 80149f0:	b508      	push	{r3, lr}
 80149f2:	6803      	ldr	r3, [r0, #0]
 80149f4:	68db      	ldr	r3, [r3, #12]
 80149f6:	4798      	blx	r3
 80149f8:	b128      	cbz	r0, 8014a06 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 80149fa:	7b43      	ldrb	r3, [r0, #13]
 80149fc:	7a80      	ldrb	r0, [r0, #10]
 80149fe:	005b      	lsls	r3, r3, #1
 8014a00:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8014a04:	4318      	orrs	r0, r3
 8014a06:	bd08      	pop	{r3, pc}

08014a08 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8014a08:	b40e      	push	{r1, r2, r3}
 8014a0a:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014a0c:	b09e      	sub	sp, #120	; 0x78
 8014a0e:	ab23      	add	r3, sp, #140	; 0x8c
 8014a10:	4605      	mov	r5, r0
 8014a12:	f853 4b04 	ldr.w	r4, [r3], #4
 8014a16:	9303      	str	r3, [sp, #12]
 8014a18:	a805      	add	r0, sp, #20
 8014a1a:	f000 fe6b 	bl	80156f4 <_ZN8touchgfx12TextProviderC1Ev>
 8014a1e:	682b      	ldr	r3, [r5, #0]
 8014a20:	4628      	mov	r0, r5
 8014a22:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8014a24:	4798      	blx	r3
 8014a26:	682b      	ldr	r3, [r5, #0]
 8014a28:	4606      	mov	r6, r0
 8014a2a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8014a2c:	4628      	mov	r0, r5
 8014a2e:	4798      	blx	r3
 8014a30:	4633      	mov	r3, r6
 8014a32:	ae1e      	add	r6, sp, #120	; 0x78
 8014a34:	4621      	mov	r1, r4
 8014a36:	9000      	str	r0, [sp, #0]
 8014a38:	9a03      	ldr	r2, [sp, #12]
 8014a3a:	2400      	movs	r4, #0
 8014a3c:	a805      	add	r0, sp, #20
 8014a3e:	f000 feb4 	bl	80157aa <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8014a42:	f846 4d68 	str.w	r4, [r6, #-104]!
 8014a46:	462a      	mov	r2, r5
 8014a48:	4633      	mov	r3, r6
 8014a4a:	4621      	mov	r1, r4
 8014a4c:	a805      	add	r0, sp, #20
 8014a4e:	f001 f9af 	bl	8015db0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8014a52:	b1f0      	cbz	r0, 8014a92 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8014a54:	280a      	cmp	r0, #10
 8014a56:	d018      	beq.n	8014a8a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8014a58:	9f04      	ldr	r7, [sp, #16]
 8014a5a:	b1b7      	cbz	r7, 8014a8a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8014a5c:	7b78      	ldrb	r0, [r7, #13]
 8014a5e:	7a3b      	ldrb	r3, [r7, #8]
 8014a60:	88ea      	ldrh	r2, [r5, #6]
 8014a62:	00c1      	lsls	r1, r0, #3
 8014a64:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8014a68:	4319      	orrs	r1, r3
 8014a6a:	0643      	lsls	r3, r0, #25
 8014a6c:	bf44      	itt	mi
 8014a6e:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 8014a72:	b219      	sxthmi	r1, r3
 8014a74:	0100      	lsls	r0, r0, #4
 8014a76:	79fb      	ldrb	r3, [r7, #7]
 8014a78:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8014a7c:	4303      	orrs	r3, r0
 8014a7e:	4413      	add	r3, r2
 8014a80:	1a5b      	subs	r3, r3, r1
 8014a82:	b21b      	sxth	r3, r3
 8014a84:	429c      	cmp	r4, r3
 8014a86:	bfb8      	it	lt
 8014a88:	461c      	movlt	r4, r3
 8014a8a:	4633      	mov	r3, r6
 8014a8c:	462a      	mov	r2, r5
 8014a8e:	2100      	movs	r1, #0
 8014a90:	e7dc      	b.n	8014a4c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8014a92:	b2a0      	uxth	r0, r4
 8014a94:	b01e      	add	sp, #120	; 0x78
 8014a96:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8014a9a:	b003      	add	sp, #12
 8014a9c:	4770      	bx	lr

08014a9e <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 8014a9e:	7a43      	ldrb	r3, [r0, #9]
 8014aa0:	8880      	ldrh	r0, [r0, #4]
 8014aa2:	4418      	add	r0, r3
 8014aa4:	b280      	uxth	r0, r0
 8014aa6:	4770      	bx	lr

08014aa8 <_ZNK8touchgfx4Font13getFontHeightEv>:
 8014aa8:	6803      	ldr	r3, [r0, #0]
 8014aaa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8014aac:	4718      	bx	r3

08014aae <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 8014aae:	b40e      	push	{r1, r2, r3}
 8014ab0:	b570      	push	{r4, r5, r6, lr}
 8014ab2:	b09d      	sub	sp, #116	; 0x74
 8014ab4:	ab21      	add	r3, sp, #132	; 0x84
 8014ab6:	4604      	mov	r4, r0
 8014ab8:	f853 5b04 	ldr.w	r5, [r3], #4
 8014abc:	9302      	str	r3, [sp, #8]
 8014abe:	a803      	add	r0, sp, #12
 8014ac0:	f000 fe18 	bl	80156f4 <_ZN8touchgfx12TextProviderC1Ev>
 8014ac4:	6823      	ldr	r3, [r4, #0]
 8014ac6:	4620      	mov	r0, r4
 8014ac8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8014aca:	4798      	blx	r3
 8014acc:	6823      	ldr	r3, [r4, #0]
 8014ace:	4606      	mov	r6, r0
 8014ad0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8014ad2:	4620      	mov	r0, r4
 8014ad4:	4798      	blx	r3
 8014ad6:	4633      	mov	r3, r6
 8014ad8:	9000      	str	r0, [sp, #0]
 8014ada:	9a02      	ldr	r2, [sp, #8]
 8014adc:	4629      	mov	r1, r5
 8014ade:	a803      	add	r0, sp, #12
 8014ae0:	f000 fe63 	bl	80157aa <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8014ae4:	a803      	add	r0, sp, #12
 8014ae6:	f001 fa31 	bl	8015f4c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8014aea:	2401      	movs	r4, #1
 8014aec:	b2a3      	uxth	r3, r4
 8014aee:	b140      	cbz	r0, 8014b02 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 8014af0:	280a      	cmp	r0, #10
 8014af2:	bf08      	it	eq
 8014af4:	3301      	addeq	r3, #1
 8014af6:	a803      	add	r0, sp, #12
 8014af8:	bf08      	it	eq
 8014afa:	b21c      	sxtheq	r4, r3
 8014afc:	f001 fa26 	bl	8015f4c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8014b00:	e7f4      	b.n	8014aec <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8014b02:	4618      	mov	r0, r3
 8014b04:	b01d      	add	sp, #116	; 0x74
 8014b06:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014b0a:	b003      	add	sp, #12
 8014b0c:	4770      	bx	lr

08014b0e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 8014b0e:	b40e      	push	{r1, r2, r3}
 8014b10:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014b12:	b09e      	sub	sp, #120	; 0x78
 8014b14:	ab23      	add	r3, sp, #140	; 0x8c
 8014b16:	4604      	mov	r4, r0
 8014b18:	f853 5b04 	ldr.w	r5, [r3], #4
 8014b1c:	9303      	str	r3, [sp, #12]
 8014b1e:	a805      	add	r0, sp, #20
 8014b20:	f000 fde8 	bl	80156f4 <_ZN8touchgfx12TextProviderC1Ev>
 8014b24:	6823      	ldr	r3, [r4, #0]
 8014b26:	4620      	mov	r0, r4
 8014b28:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8014b2a:	4798      	blx	r3
 8014b2c:	6823      	ldr	r3, [r4, #0]
 8014b2e:	4606      	mov	r6, r0
 8014b30:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8014b32:	4620      	mov	r0, r4
 8014b34:	4798      	blx	r3
 8014b36:	4633      	mov	r3, r6
 8014b38:	4629      	mov	r1, r5
 8014b3a:	9000      	str	r0, [sp, #0]
 8014b3c:	9a03      	ldr	r2, [sp, #12]
 8014b3e:	a805      	add	r0, sp, #20
 8014b40:	ad1e      	add	r5, sp, #120	; 0x78
 8014b42:	f000 fe32 	bl	80157aa <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8014b46:	2100      	movs	r1, #0
 8014b48:	f845 1d68 	str.w	r1, [r5, #-104]!
 8014b4c:	4622      	mov	r2, r4
 8014b4e:	462b      	mov	r3, r5
 8014b50:	a805      	add	r0, sp, #20
 8014b52:	f001 f92d 	bl	8015db0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8014b56:	f647 76ff 	movw	r6, #32767	; 0x7fff
 8014b5a:	b1d8      	cbz	r0, 8014b94 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 8014b5c:	280a      	cmp	r0, #10
 8014b5e:	d012      	beq.n	8014b86 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8014b60:	9804      	ldr	r0, [sp, #16]
 8014b62:	b180      	cbz	r0, 8014b86 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8014b64:	7b47      	ldrb	r7, [r0, #13]
 8014b66:	88e2      	ldrh	r2, [r4, #6]
 8014b68:	00fb      	lsls	r3, r7, #3
 8014b6a:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8014b6e:	7a03      	ldrb	r3, [r0, #8]
 8014b70:	430b      	orrs	r3, r1
 8014b72:	0679      	lsls	r1, r7, #25
 8014b74:	bf44      	itt	mi
 8014b76:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8014b7a:	b21b      	sxthmi	r3, r3
 8014b7c:	1ad3      	subs	r3, r2, r3
 8014b7e:	b21b      	sxth	r3, r3
 8014b80:	429e      	cmp	r6, r3
 8014b82:	bfa8      	it	ge
 8014b84:	461e      	movge	r6, r3
 8014b86:	462b      	mov	r3, r5
 8014b88:	4622      	mov	r2, r4
 8014b8a:	2100      	movs	r1, #0
 8014b8c:	a805      	add	r0, sp, #20
 8014b8e:	f001 f90f 	bl	8015db0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8014b92:	e7e2      	b.n	8014b5a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 8014b94:	4630      	mov	r0, r6
 8014b96:	b01e      	add	sp, #120	; 0x78
 8014b98:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8014b9c:	b003      	add	sp, #12
 8014b9e:	4770      	bx	lr

08014ba0 <_ZNK8touchgfx8Drawable10invalidateEv>:
 8014ba0:	b513      	push	{r0, r1, r4, lr}
 8014ba2:	6803      	ldr	r3, [r0, #0]
 8014ba4:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8014ba8:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8014bac:	f8ad 1004 	strh.w	r1, [sp, #4]
 8014bb0:	2400      	movs	r4, #0
 8014bb2:	9400      	str	r4, [sp, #0]
 8014bb4:	f8ad 2006 	strh.w	r2, [sp, #6]
 8014bb8:	691b      	ldr	r3, [r3, #16]
 8014bba:	4669      	mov	r1, sp
 8014bbc:	4798      	blx	r3
 8014bbe:	b002      	add	sp, #8
 8014bc0:	bd10      	pop	{r4, pc}

08014bc2 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8014bc2:	b538      	push	{r3, r4, r5, lr}
 8014bc4:	680b      	ldr	r3, [r1, #0]
 8014bc6:	460c      	mov	r4, r1
 8014bc8:	68db      	ldr	r3, [r3, #12]
 8014bca:	4605      	mov	r5, r0
 8014bcc:	4798      	blx	r3
 8014bce:	6823      	ldr	r3, [r4, #0]
 8014bd0:	4620      	mov	r0, r4
 8014bd2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014bd4:	4629      	mov	r1, r5
 8014bd6:	4798      	blx	r3
 8014bd8:	4628      	mov	r0, r5
 8014bda:	bd38      	pop	{r3, r4, r5, pc}

08014bdc <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 8014bdc:	b410      	push	{r4}
 8014bde:	880a      	ldrh	r2, [r1, #0]
 8014be0:	8884      	ldrh	r4, [r0, #4]
 8014be2:	4422      	add	r2, r4
 8014be4:	800a      	strh	r2, [r1, #0]
 8014be6:	88c4      	ldrh	r4, [r0, #6]
 8014be8:	884a      	ldrh	r2, [r1, #2]
 8014bea:	4422      	add	r2, r4
 8014bec:	804a      	strh	r2, [r1, #2]
 8014bee:	6940      	ldr	r0, [r0, #20]
 8014bf0:	b120      	cbz	r0, 8014bfc <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8014bf2:	6803      	ldr	r3, [r0, #0]
 8014bf4:	f85d 4b04 	ldr.w	r4, [sp], #4
 8014bf8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014bfa:	4718      	bx	r3
 8014bfc:	f85d 4b04 	ldr.w	r4, [sp], #4
 8014c00:	4770      	bx	lr

08014c02 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8014c02:	b570      	push	{r4, r5, r6, lr}
 8014c04:	8882      	ldrh	r2, [r0, #4]
 8014c06:	880b      	ldrh	r3, [r1, #0]
 8014c08:	4413      	add	r3, r2
 8014c0a:	800b      	strh	r3, [r1, #0]
 8014c0c:	88c2      	ldrh	r2, [r0, #6]
 8014c0e:	884b      	ldrh	r3, [r1, #2]
 8014c10:	460c      	mov	r4, r1
 8014c12:	4413      	add	r3, r2
 8014c14:	804b      	strh	r3, [r1, #2]
 8014c16:	4605      	mov	r5, r0
 8014c18:	1d01      	adds	r1, r0, #4
 8014c1a:	4620      	mov	r0, r4
 8014c1c:	f7f9 fdc6 	bl	800e7ac <_ZN8touchgfx4RectaNERKS0_>
 8014c20:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8014c24:	2b00      	cmp	r3, #0
 8014c26:	dd0b      	ble.n	8014c40 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8014c28:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8014c2c:	2b00      	cmp	r3, #0
 8014c2e:	dd07      	ble.n	8014c40 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8014c30:	6968      	ldr	r0, [r5, #20]
 8014c32:	b128      	cbz	r0, 8014c40 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8014c34:	6803      	ldr	r3, [r0, #0]
 8014c36:	4621      	mov	r1, r4
 8014c38:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8014c3a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014c3e:	4718      	bx	r3
 8014c40:	bd70      	pop	{r4, r5, r6, pc}
	...

08014c44 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8014c44:	b570      	push	{r4, r5, r6, lr}
 8014c46:	8882      	ldrh	r2, [r0, #4]
 8014c48:	880b      	ldrh	r3, [r1, #0]
 8014c4a:	4413      	add	r3, r2
 8014c4c:	800b      	strh	r3, [r1, #0]
 8014c4e:	88c2      	ldrh	r2, [r0, #6]
 8014c50:	884b      	ldrh	r3, [r1, #2]
 8014c52:	460c      	mov	r4, r1
 8014c54:	4413      	add	r3, r2
 8014c56:	804b      	strh	r3, [r1, #2]
 8014c58:	4605      	mov	r5, r0
 8014c5a:	1d01      	adds	r1, r0, #4
 8014c5c:	4620      	mov	r0, r4
 8014c5e:	f7f9 fda5 	bl	800e7ac <_ZN8touchgfx4RectaNERKS0_>
 8014c62:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8014c66:	2b00      	cmp	r3, #0
 8014c68:	dd19      	ble.n	8014c9e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8014c6a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8014c6e:	2b00      	cmp	r3, #0
 8014c70:	dd15      	ble.n	8014c9e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8014c72:	6968      	ldr	r0, [r5, #20]
 8014c74:	b128      	cbz	r0, 8014c82 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8014c76:	6803      	ldr	r3, [r0, #0]
 8014c78:	4621      	mov	r1, r4
 8014c7a:	691b      	ldr	r3, [r3, #16]
 8014c7c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014c80:	4718      	bx	r3
 8014c82:	4b07      	ldr	r3, [pc, #28]	; (8014ca0 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8014c84:	681b      	ldr	r3, [r3, #0]
 8014c86:	3304      	adds	r3, #4
 8014c88:	429d      	cmp	r5, r3
 8014c8a:	d108      	bne.n	8014c9e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8014c8c:	f7fe fea0 	bl	80139d0 <_ZN8touchgfx11Application11getInstanceEv>
 8014c90:	6803      	ldr	r3, [r0, #0]
 8014c92:	6821      	ldr	r1, [r4, #0]
 8014c94:	6862      	ldr	r2, [r4, #4]
 8014c96:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8014c98:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014c9c:	4718      	bx	r3
 8014c9e:	bd70      	pop	{r4, r5, r6, pc}
 8014ca0:	20013800 	.word	0x20013800

08014ca4 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8014ca4:	b570      	push	{r4, r5, r6, lr}
 8014ca6:	4604      	mov	r4, r0
 8014ca8:	4616      	mov	r6, r2
 8014caa:	460d      	mov	r5, r1
 8014cac:	b901      	cbnz	r1, 8014cb0 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 8014cae:	b192      	cbz	r2, 8014cd6 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8014cb0:	6823      	ldr	r3, [r4, #0]
 8014cb2:	4620      	mov	r0, r4
 8014cb4:	699b      	ldr	r3, [r3, #24]
 8014cb6:	4798      	blx	r3
 8014cb8:	88e2      	ldrh	r2, [r4, #6]
 8014cba:	88a1      	ldrh	r1, [r4, #4]
 8014cbc:	4432      	add	r2, r6
 8014cbe:	4429      	add	r1, r5
 8014cc0:	4620      	mov	r0, r4
 8014cc2:	b212      	sxth	r2, r2
 8014cc4:	b209      	sxth	r1, r1
 8014cc6:	f7ed fb51 	bl	800236c <_ZN8touchgfx8Drawable5setXYEss>
 8014cca:	6823      	ldr	r3, [r4, #0]
 8014ccc:	4620      	mov	r0, r4
 8014cce:	699b      	ldr	r3, [r3, #24]
 8014cd0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014cd4:	4718      	bx	r3
 8014cd6:	bd70      	pop	{r4, r5, r6, pc}

08014cd8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8014cd8:	b510      	push	{r4, lr}
 8014cda:	4604      	mov	r4, r0
 8014cdc:	4608      	mov	r0, r1
 8014cde:	2300      	movs	r3, #0
 8014ce0:	8023      	strh	r3, [r4, #0]
 8014ce2:	8063      	strh	r3, [r4, #2]
 8014ce4:	6803      	ldr	r3, [r0, #0]
 8014ce6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8014cea:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8014cee:	80a1      	strh	r1, [r4, #4]
 8014cf0:	80e2      	strh	r2, [r4, #6]
 8014cf2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014cf4:	4621      	mov	r1, r4
 8014cf6:	4798      	blx	r3
 8014cf8:	4620      	mov	r0, r4
 8014cfa:	bd10      	pop	{r4, pc}

08014cfc <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 8014cfc:	b530      	push	{r4, r5, lr}
 8014cfe:	8083      	strh	r3, [r0, #4]
 8014d00:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8014d04:	80c3      	strh	r3, [r0, #6]
 8014d06:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8014d0a:	7203      	strb	r3, [r0, #8]
 8014d0c:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8014d10:	f89d 5018 	ldrb.w	r5, [sp, #24]
 8014d14:	7243      	strb	r3, [r0, #9]
 8014d16:	7a83      	ldrb	r3, [r0, #10]
 8014d18:	6141      	str	r1, [r0, #20]
 8014d1a:	f365 0306 	bfi	r3, r5, #0, #7
 8014d1e:	f89d 501c 	ldrb.w	r5, [sp, #28]
 8014d22:	8302      	strh	r2, [r0, #24]
 8014d24:	f365 13c7 	bfi	r3, r5, #7, #1
 8014d28:	7283      	strb	r3, [r0, #10]
 8014d2a:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8014d2e:	72c3      	strb	r3, [r0, #11]
 8014d30:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 8014d34:	7303      	strb	r3, [r0, #12]
 8014d36:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8014d3a:	81c3      	strh	r3, [r0, #14]
 8014d3c:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8014d40:	8203      	strh	r3, [r0, #16]
 8014d42:	4b01      	ldr	r3, [pc, #4]	; (8014d48 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 8014d44:	6003      	str	r3, [r0, #0]
 8014d46:	bd30      	pop	{r4, r5, pc}
 8014d48:	0802b44c 	.word	0x0802b44c

08014d4c <_ZNK8touchgfx9ConstFont4findEt>:
 8014d4c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014d4e:	6944      	ldr	r4, [r0, #20]
 8014d50:	b3bc      	cbz	r4, 8014dc2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8014d52:	88a3      	ldrh	r3, [r4, #4]
 8014d54:	8b02      	ldrh	r2, [r0, #24]
 8014d56:	1acb      	subs	r3, r1, r3
 8014d58:	f102 32ff 	add.w	r2, r2, #4294967295
 8014d5c:	d431      	bmi.n	8014dc2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8014d5e:	4293      	cmp	r3, r2
 8014d60:	dd0c      	ble.n	8014d7c <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8014d62:	230e      	movs	r3, #14
 8014d64:	fb03 4302 	mla	r3, r3, r2, r4
 8014d68:	889b      	ldrh	r3, [r3, #4]
 8014d6a:	1a5b      	subs	r3, r3, r1
 8014d6c:	1ad3      	subs	r3, r2, r3
 8014d6e:	429a      	cmp	r2, r3
 8014d70:	db27      	blt.n	8014dc2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8014d72:	2b00      	cmp	r3, #0
 8014d74:	bfbc      	itt	lt
 8014d76:	2302      	movlt	r3, #2
 8014d78:	fb92 f3f3 	sdivlt	r3, r2, r3
 8014d7c:	2500      	movs	r5, #0
 8014d7e:	260e      	movs	r6, #14
 8014d80:	4295      	cmp	r5, r2
 8014d82:	dc1e      	bgt.n	8014dc2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8014d84:	fb06 4003 	mla	r0, r6, r3, r4
 8014d88:	8887      	ldrh	r7, [r0, #4]
 8014d8a:	42b9      	cmp	r1, r7
 8014d8c:	d01a      	beq.n	8014dc4 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 8014d8e:	d20d      	bcs.n	8014dac <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8014d90:	1e5a      	subs	r2, r3, #1
 8014d92:	4295      	cmp	r5, r2
 8014d94:	dc15      	bgt.n	8014dc2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8014d96:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 8014d9a:	1a5b      	subs	r3, r3, r1
 8014d9c:	1ad3      	subs	r3, r2, r3
 8014d9e:	429a      	cmp	r2, r3
 8014da0:	db0f      	blt.n	8014dc2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8014da2:	429d      	cmp	r5, r3
 8014da4:	ddec      	ble.n	8014d80 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8014da6:	1953      	adds	r3, r2, r5
 8014da8:	105b      	asrs	r3, r3, #1
 8014daa:	e7e9      	b.n	8014d80 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8014dac:	1c5d      	adds	r5, r3, #1
 8014dae:	42aa      	cmp	r2, r5
 8014db0:	db07      	blt.n	8014dc2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8014db2:	8a43      	ldrh	r3, [r0, #18]
 8014db4:	1acb      	subs	r3, r1, r3
 8014db6:	442b      	add	r3, r5
 8014db8:	429d      	cmp	r5, r3
 8014dba:	dc02      	bgt.n	8014dc2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8014dbc:	429a      	cmp	r2, r3
 8014dbe:	dadf      	bge.n	8014d80 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8014dc0:	e7f1      	b.n	8014da6 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8014dc2:	2000      	movs	r0, #0
 8014dc4:	bdf0      	pop	{r4, r5, r6, r7, pc}

08014dc6 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8014dc6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014dc8:	4604      	mov	r4, r0
 8014dca:	4617      	mov	r7, r2
 8014dcc:	461e      	mov	r6, r3
 8014dce:	b911      	cbnz	r1, 8014dd6 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8014dd0:	2500      	movs	r5, #0
 8014dd2:	4628      	mov	r0, r5
 8014dd4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8014dd6:	290a      	cmp	r1, #10
 8014dd8:	d0fa      	beq.n	8014dd0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8014dda:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8014dde:	4291      	cmp	r1, r2
 8014de0:	d0f6      	beq.n	8014dd0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8014de2:	f242 020b 	movw	r2, #8203	; 0x200b
 8014de6:	4291      	cmp	r1, r2
 8014de8:	d0f2      	beq.n	8014dd0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8014dea:	f7ff ffaf 	bl	8014d4c <_ZNK8touchgfx9ConstFont4findEt>
 8014dee:	4605      	mov	r5, r0
 8014df0:	b950      	cbnz	r0, 8014e08 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 8014df2:	6823      	ldr	r3, [r4, #0]
 8014df4:	4620      	mov	r0, r4
 8014df6:	691b      	ldr	r3, [r3, #16]
 8014df8:	4798      	blx	r3
 8014dfa:	4601      	mov	r1, r0
 8014dfc:	4620      	mov	r0, r4
 8014dfe:	f7ff ffa5 	bl	8014d4c <_ZNK8touchgfx9ConstFont4findEt>
 8014e02:	4605      	mov	r5, r0
 8014e04:	2800      	cmp	r0, #0
 8014e06:	d0e3      	beq.n	8014dd0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8014e08:	6823      	ldr	r3, [r4, #0]
 8014e0a:	4629      	mov	r1, r5
 8014e0c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8014e0e:	4620      	mov	r0, r4
 8014e10:	4798      	blx	r3
 8014e12:	6038      	str	r0, [r7, #0]
 8014e14:	6823      	ldr	r3, [r4, #0]
 8014e16:	4620      	mov	r0, r4
 8014e18:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8014e1a:	4798      	blx	r3
 8014e1c:	7030      	strb	r0, [r6, #0]
 8014e1e:	e7d8      	b.n	8014dd2 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08014e20 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 8014e20:	b538      	push	{r3, r4, r5, lr}
 8014e22:	4605      	mov	r5, r0
 8014e24:	f002 f962 	bl	80170ec <_ZNK8touchgfx6Bitmap9getFormatEv>
 8014e28:	4604      	mov	r4, r0
 8014e2a:	4628      	mov	r0, r5
 8014e2c:	f002 f8a2 	bl	8016f74 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8014e30:	2800      	cmp	r0, #0
 8014e32:	bf14      	ite	ne
 8014e34:	2002      	movne	r0, #2
 8014e36:	2000      	moveq	r0, #0
 8014e38:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 8014e3c:	b280      	uxth	r0, r0
 8014e3e:	bd38      	pop	{r3, r4, r5, pc}

08014e40 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 8014e40:	b538      	push	{r3, r4, r5, lr}
 8014e42:	4605      	mov	r5, r0
 8014e44:	f002 f952 	bl	80170ec <_ZNK8touchgfx6Bitmap9getFormatEv>
 8014e48:	4604      	mov	r4, r0
 8014e4a:	4628      	mov	r0, r5
 8014e4c:	f002 f892 	bl	8016f74 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8014e50:	2800      	cmp	r0, #0
 8014e52:	bf14      	ite	ne
 8014e54:	2002      	movne	r0, #2
 8014e56:	2000      	moveq	r0, #0
 8014e58:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 8014e5c:	f040 0001 	orr.w	r0, r0, #1
 8014e60:	b280      	uxth	r0, r0
 8014e62:	bd38      	pop	{r3, r4, r5, pc}

08014e64 <_ZN8touchgfx4clzuEm>:
 8014e64:	4603      	mov	r3, r0
 8014e66:	b1c8      	cbz	r0, 8014e9c <_ZN8touchgfx4clzuEm+0x38>
 8014e68:	0c02      	lsrs	r2, r0, #16
 8014e6a:	0412      	lsls	r2, r2, #16
 8014e6c:	b9a2      	cbnz	r2, 8014e98 <_ZN8touchgfx4clzuEm+0x34>
 8014e6e:	0403      	lsls	r3, r0, #16
 8014e70:	2010      	movs	r0, #16
 8014e72:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8014e76:	bf04      	itt	eq
 8014e78:	021b      	lsleq	r3, r3, #8
 8014e7a:	3008      	addeq	r0, #8
 8014e7c:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8014e80:	bf04      	itt	eq
 8014e82:	011b      	lsleq	r3, r3, #4
 8014e84:	3004      	addeq	r0, #4
 8014e86:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8014e8a:	bf04      	itt	eq
 8014e8c:	009b      	lsleq	r3, r3, #2
 8014e8e:	3002      	addeq	r0, #2
 8014e90:	2b00      	cmp	r3, #0
 8014e92:	db04      	blt.n	8014e9e <_ZN8touchgfx4clzuEm+0x3a>
 8014e94:	3001      	adds	r0, #1
 8014e96:	4770      	bx	lr
 8014e98:	2000      	movs	r0, #0
 8014e9a:	e7ea      	b.n	8014e72 <_ZN8touchgfx4clzuEm+0xe>
 8014e9c:	2020      	movs	r0, #32
 8014e9e:	4770      	bx	lr

08014ea0 <_ZN8touchgfx7muldivuEmmmRm>:
 8014ea0:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8014ea4:	460f      	mov	r7, r1
 8014ea6:	4615      	mov	r5, r2
 8014ea8:	461e      	mov	r6, r3
 8014eaa:	4601      	mov	r1, r0
 8014eac:	b100      	cbz	r0, 8014eb0 <_ZN8touchgfx7muldivuEmmmRm+0x10>
 8014eae:	b927      	cbnz	r7, 8014eba <_ZN8touchgfx7muldivuEmmmRm+0x1a>
 8014eb0:	2000      	movs	r0, #0
 8014eb2:	6030      	str	r0, [r6, #0]
 8014eb4:	b002      	add	sp, #8
 8014eb6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8014eba:	f7ff ffd3 	bl	8014e64 <_ZN8touchgfx4clzuEm>
 8014ebe:	b980      	cbnz	r0, 8014ee2 <_ZN8touchgfx7muldivuEmmmRm+0x42>
 8014ec0:	4638      	mov	r0, r7
 8014ec2:	f7ff ffcf 	bl	8014e64 <_ZN8touchgfx4clzuEm>
 8014ec6:	2800      	cmp	r0, #0
 8014ec8:	dd05      	ble.n	8014ed6 <_ZN8touchgfx7muldivuEmmmRm+0x36>
 8014eca:	4633      	mov	r3, r6
 8014ecc:	462a      	mov	r2, r5
 8014ece:	4638      	mov	r0, r7
 8014ed0:	f7ff ffe6 	bl	8014ea0 <_ZN8touchgfx7muldivuEmmmRm>
 8014ed4:	e7ee      	b.n	8014eb4 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8014ed6:	f04f 33ff 	mov.w	r3, #4294967295
 8014eda:	6033      	str	r3, [r6, #0]
 8014edc:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8014ee0:	e7e8      	b.n	8014eb4 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8014ee2:	fa37 f800 	lsrs.w	r8, r7, r0
 8014ee6:	fb07 f301 	mul.w	r3, r7, r1
 8014eea:	d105      	bne.n	8014ef8 <_ZN8touchgfx7muldivuEmmmRm+0x58>
 8014eec:	fbb3 f0f5 	udiv	r0, r3, r5
 8014ef0:	fb05 3510 	mls	r5, r5, r0, r3
 8014ef4:	6035      	str	r5, [r6, #0]
 8014ef6:	e7dd      	b.n	8014eb4 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8014ef8:	2301      	movs	r3, #1
 8014efa:	fa01 fa00 	lsl.w	sl, r1, r0
 8014efe:	fa03 f000 	lsl.w	r0, r3, r0
 8014f02:	3801      	subs	r0, #1
 8014f04:	462a      	mov	r2, r5
 8014f06:	4633      	mov	r3, r6
 8014f08:	4038      	ands	r0, r7
 8014f0a:	f7ff ffc9 	bl	8014ea0 <_ZN8touchgfx7muldivuEmmmRm>
 8014f0e:	fbba f9f5 	udiv	r9, sl, r5
 8014f12:	462a      	mov	r2, r5
 8014f14:	4607      	mov	r7, r0
 8014f16:	ab01      	add	r3, sp, #4
 8014f18:	fb05 a119 	mls	r1, r5, r9, sl
 8014f1c:	4640      	mov	r0, r8
 8014f1e:	f7ff ffbf 	bl	8014ea0 <_ZN8touchgfx7muldivuEmmmRm>
 8014f22:	9b01      	ldr	r3, [sp, #4]
 8014f24:	6832      	ldr	r2, [r6, #0]
 8014f26:	fb08 f409 	mul.w	r4, r8, r9
 8014f2a:	441a      	add	r2, r3
 8014f2c:	fbb2 f3f5 	udiv	r3, r2, r5
 8014f30:	441c      	add	r4, r3
 8014f32:	443c      	add	r4, r7
 8014f34:	4420      	add	r0, r4
 8014f36:	fb05 2513 	mls	r5, r5, r3, r2
 8014f3a:	e7db      	b.n	8014ef4 <_ZN8touchgfx7muldivuEmmmRm+0x54>

08014f3c <_ZN8touchgfx6muldivElllRl>:
 8014f3c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8014f3e:	2800      	cmp	r0, #0
 8014f40:	bfba      	itte	lt
 8014f42:	4240      	neglt	r0, r0
 8014f44:	f04f 34ff 	movlt.w	r4, #4294967295
 8014f48:	2401      	movge	r4, #1
 8014f4a:	2900      	cmp	r1, #0
 8014f4c:	bfbc      	itt	lt
 8014f4e:	4249      	neglt	r1, r1
 8014f50:	4264      	neglt	r4, r4
 8014f52:	2a00      	cmp	r2, #0
 8014f54:	bfb6      	itet	lt
 8014f56:	4265      	neglt	r5, r4
 8014f58:	4625      	movge	r5, r4
 8014f5a:	4252      	neglt	r2, r2
 8014f5c:	4288      	cmp	r0, r1
 8014f5e:	461e      	mov	r6, r3
 8014f60:	bfc2      	ittt	gt
 8014f62:	4603      	movgt	r3, r0
 8014f64:	4608      	movgt	r0, r1
 8014f66:	4619      	movgt	r1, r3
 8014f68:	ab01      	add	r3, sp, #4
 8014f6a:	f7ff ff99 	bl	8014ea0 <_ZN8touchgfx7muldivuEmmmRm>
 8014f6e:	9b01      	ldr	r3, [sp, #4]
 8014f70:	4368      	muls	r0, r5
 8014f72:	435c      	muls	r4, r3
 8014f74:	6034      	str	r4, [r6, #0]
 8014f76:	b002      	add	sp, #8
 8014f78:	bd70      	pop	{r4, r5, r6, pc}

08014f7a <_ZN8touchgfx6muldivElll>:
 8014f7a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8014f7c:	4606      	mov	r6, r0
 8014f7e:	ab01      	add	r3, sp, #4
 8014f80:	460d      	mov	r5, r1
 8014f82:	4614      	mov	r4, r2
 8014f84:	f7ff ffda 	bl	8014f3c <_ZN8touchgfx6muldivElllRl>
 8014f88:	2e00      	cmp	r6, #0
 8014f8a:	db20      	blt.n	8014fce <_ZN8touchgfx6muldivElll+0x54>
 8014f8c:	bf14      	ite	ne
 8014f8e:	2301      	movne	r3, #1
 8014f90:	2300      	moveq	r3, #0
 8014f92:	2d00      	cmp	r5, #0
 8014f94:	db1e      	blt.n	8014fd4 <_ZN8touchgfx6muldivElll+0x5a>
 8014f96:	bf14      	ite	ne
 8014f98:	2201      	movne	r2, #1
 8014f9a:	2200      	moveq	r2, #0
 8014f9c:	2c00      	cmp	r4, #0
 8014f9e:	fb03 f202 	mul.w	r2, r3, r2
 8014fa2:	db1a      	blt.n	8014fda <_ZN8touchgfx6muldivElll+0x60>
 8014fa4:	bf14      	ite	ne
 8014fa6:	2301      	movne	r3, #1
 8014fa8:	2300      	moveq	r3, #0
 8014faa:	4353      	muls	r3, r2
 8014fac:	2b01      	cmp	r3, #1
 8014fae:	d117      	bne.n	8014fe0 <_ZN8touchgfx6muldivElll+0x66>
 8014fb0:	9b01      	ldr	r3, [sp, #4]
 8014fb2:	2c00      	cmp	r4, #0
 8014fb4:	bfb8      	it	lt
 8014fb6:	4264      	neglt	r4, r4
 8014fb8:	2b00      	cmp	r3, #0
 8014fba:	f104 0401 	add.w	r4, r4, #1
 8014fbe:	bfb8      	it	lt
 8014fc0:	425b      	neglt	r3, r3
 8014fc2:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8014fc6:	db00      	blt.n	8014fca <_ZN8touchgfx6muldivElll+0x50>
 8014fc8:	3001      	adds	r0, #1
 8014fca:	b002      	add	sp, #8
 8014fcc:	bd70      	pop	{r4, r5, r6, pc}
 8014fce:	f04f 33ff 	mov.w	r3, #4294967295
 8014fd2:	e7de      	b.n	8014f92 <_ZN8touchgfx6muldivElll+0x18>
 8014fd4:	f04f 32ff 	mov.w	r2, #4294967295
 8014fd8:	e7e0      	b.n	8014f9c <_ZN8touchgfx6muldivElll+0x22>
 8014fda:	f04f 33ff 	mov.w	r3, #4294967295
 8014fde:	e7e4      	b.n	8014faa <_ZN8touchgfx6muldivElll+0x30>
 8014fe0:	3301      	adds	r3, #1
 8014fe2:	d1f2      	bne.n	8014fca <_ZN8touchgfx6muldivElll+0x50>
 8014fe4:	9b01      	ldr	r3, [sp, #4]
 8014fe6:	2c00      	cmp	r4, #0
 8014fe8:	bfb8      	it	lt
 8014fea:	4264      	neglt	r4, r4
 8014fec:	2b00      	cmp	r3, #0
 8014fee:	bfb8      	it	lt
 8014ff0:	425b      	neglt	r3, r3
 8014ff2:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8014ff6:	bfc8      	it	gt
 8014ff8:	f100 30ff 	addgt.w	r0, r0, #4294967295
 8014ffc:	e7e5      	b.n	8014fca <_ZN8touchgfx6muldivElll+0x50>

08014ffe <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 8014ffe:	2000      	movs	r0, #0
 8015000:	4770      	bx	lr

08015002 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 8015002:	2001      	movs	r0, #1
 8015004:	4770      	bx	lr

08015006 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 8015006:	2002      	movs	r0, #2
 8015008:	4770      	bx	lr

0801500a <_ZN8touchgfx6ScreenD1Ev>:
 801500a:	4770      	bx	lr

0801500c <_ZN8touchgfx12GestureEventD1Ev>:
 801500c:	4770      	bx	lr

0801500e <_ZN8touchgfx9DragEventD1Ev>:
 801500e:	4770      	bx	lr

08015010 <_ZN8touchgfx10ClickEventD1Ev>:
 8015010:	4770      	bx	lr

08015012 <_ZN8touchgfx10ClickEventD0Ev>:
 8015012:	b510      	push	{r4, lr}
 8015014:	210c      	movs	r1, #12
 8015016:	4604      	mov	r4, r0
 8015018:	f011 fa39 	bl	802648e <_ZdlPvj>
 801501c:	4620      	mov	r0, r4
 801501e:	bd10      	pop	{r4, pc}

08015020 <_ZN8touchgfx9DragEventD0Ev>:
 8015020:	b510      	push	{r4, lr}
 8015022:	2110      	movs	r1, #16
 8015024:	4604      	mov	r4, r0
 8015026:	f011 fa32 	bl	802648e <_ZdlPvj>
 801502a:	4620      	mov	r0, r4
 801502c:	bd10      	pop	{r4, pc}

0801502e <_ZN8touchgfx12GestureEventD0Ev>:
 801502e:	b510      	push	{r4, lr}
 8015030:	210c      	movs	r1, #12
 8015032:	4604      	mov	r4, r0
 8015034:	f011 fa2b 	bl	802648e <_ZdlPvj>
 8015038:	4620      	mov	r0, r4
 801503a:	bd10      	pop	{r4, pc}

0801503c <_ZN8touchgfx6ScreenD0Ev>:
 801503c:	b510      	push	{r4, lr}
 801503e:	213c      	movs	r1, #60	; 0x3c
 8015040:	4604      	mov	r4, r0
 8015042:	f011 fa24 	bl	802648e <_ZdlPvj>
 8015046:	4620      	mov	r0, r4
 8015048:	bd10      	pop	{r4, pc}
	...

0801504c <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 801504c:	b530      	push	{r4, r5, lr}
 801504e:	460d      	mov	r5, r1
 8015050:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8015052:	b087      	sub	sp, #28
 8015054:	4604      	mov	r4, r0
 8015056:	b301      	cbz	r1, 801509a <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8015058:	a801      	add	r0, sp, #4
 801505a:	f7ff fe3d 	bl	8014cd8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801505e:	892a      	ldrh	r2, [r5, #8]
 8015060:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8015064:	7928      	ldrb	r0, [r5, #4]
 8015066:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 801506a:	f88d 0010 	strb.w	r0, [sp, #16]
 801506e:	1ad2      	subs	r2, r2, r3
 8015070:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8015072:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8015074:	f8ad 1012 	strh.w	r1, [sp, #18]
 8015078:	441a      	add	r2, r3
 801507a:	896b      	ldrh	r3, [r5, #10]
 801507c:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8015080:	f8ad 2014 	strh.w	r2, [sp, #20]
 8015084:	1b5b      	subs	r3, r3, r5
 8015086:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 8015088:	442b      	add	r3, r5
 801508a:	4d05      	ldr	r5, [pc, #20]	; (80150a0 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 801508c:	9503      	str	r5, [sp, #12]
 801508e:	f8ad 3016 	strh.w	r3, [sp, #22]
 8015092:	6803      	ldr	r3, [r0, #0]
 8015094:	a903      	add	r1, sp, #12
 8015096:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8015098:	4798      	blx	r3
 801509a:	b007      	add	sp, #28
 801509c:	bd30      	pop	{r4, r5, pc}
 801509e:	bf00      	nop
 80150a0:	0802b4d4 	.word	0x0802b4d4

080150a4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 80150a4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80150a8:	6b03      	ldr	r3, [r0, #48]	; 0x30
 80150aa:	b08a      	sub	sp, #40	; 0x28
 80150ac:	4604      	mov	r4, r0
 80150ae:	460d      	mov	r5, r1
 80150b0:	b113      	cbz	r3, 80150b8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 80150b2:	790b      	ldrb	r3, [r1, #4]
 80150b4:	2b00      	cmp	r3, #0
 80150b6:	d044      	beq.n	8015142 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80150b8:	f104 0804 	add.w	r8, r4, #4
 80150bc:	4641      	mov	r1, r8
 80150be:	a803      	add	r0, sp, #12
 80150c0:	f7ff fe0a 	bl	8014cd8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80150c4:	792b      	ldrb	r3, [r5, #4]
 80150c6:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 80150ca:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 80150ce:	b983      	cbnz	r3, 80150f2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 80150d0:	892a      	ldrh	r2, [r5, #8]
 80150d2:	88e9      	ldrh	r1, [r5, #6]
 80150d4:	f104 0336 	add.w	r3, r4, #54	; 0x36
 80150d8:	1b92      	subs	r2, r2, r6
 80150da:	1bc9      	subs	r1, r1, r7
 80150dc:	9301      	str	r3, [sp, #4]
 80150de:	f104 0334 	add.w	r3, r4, #52	; 0x34
 80150e2:	9300      	str	r3, [sp, #0]
 80150e4:	b212      	sxth	r2, r2
 80150e6:	f104 0330 	add.w	r3, r4, #48	; 0x30
 80150ea:	b209      	sxth	r1, r1
 80150ec:	4640      	mov	r0, r8
 80150ee:	f7f9 fa79 	bl	800e5e4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 80150f2:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80150f4:	b329      	cbz	r1, 8015142 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80150f6:	a805      	add	r0, sp, #20
 80150f8:	f7ff fdee 	bl	8014cd8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80150fc:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8015100:	792b      	ldrb	r3, [r5, #4]
 8015102:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8015104:	f88d 3020 	strb.w	r3, [sp, #32]
 8015108:	1abf      	subs	r7, r7, r2
 801510a:	88ea      	ldrh	r2, [r5, #6]
 801510c:	4417      	add	r7, r2
 801510e:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 8015110:	4417      	add	r7, r2
 8015112:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8015116:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 801511a:	1ab6      	subs	r6, r6, r2
 801511c:	892a      	ldrh	r2, [r5, #8]
 801511e:	4416      	add	r6, r2
 8015120:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8015122:	4416      	add	r6, r2
 8015124:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 8015128:	4a07      	ldr	r2, [pc, #28]	; (8015148 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 801512a:	9207      	str	r2, [sp, #28]
 801512c:	2600      	movs	r6, #0
 801512e:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 8015132:	6803      	ldr	r3, [r0, #0]
 8015134:	a907      	add	r1, sp, #28
 8015136:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015138:	4798      	blx	r3
 801513a:	792b      	ldrb	r3, [r5, #4]
 801513c:	b10b      	cbz	r3, 8015142 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801513e:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 8015142:	b00a      	add	sp, #40	; 0x28
 8015144:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8015148:	0802b4ac 	.word	0x0802b4ac

0801514c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 801514c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015150:	460c      	mov	r4, r1
 8015152:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8015154:	b088      	sub	sp, #32
 8015156:	4605      	mov	r5, r0
 8015158:	2900      	cmp	r1, #0
 801515a:	d06d      	beq.n	8015238 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 801515c:	4668      	mov	r0, sp
 801515e:	f7ff fdbb 	bl	8014cd8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8015162:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 8015164:	88e3      	ldrh	r3, [r4, #6]
 8015166:	f9bd 8000 	ldrsh.w	r8, [sp]
 801516a:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 801516e:	440b      	add	r3, r1
 8015170:	b21b      	sxth	r3, r3
 8015172:	4543      	cmp	r3, r8
 8015174:	db31      	blt.n	80151da <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8015176:	f8bd c004 	ldrh.w	ip, [sp, #4]
 801517a:	44c4      	add	ip, r8
 801517c:	fa0f fc8c 	sxth.w	ip, ip
 8015180:	4563      	cmp	r3, ip
 8015182:	da2a      	bge.n	80151da <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8015184:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 8015186:	8926      	ldrh	r6, [r4, #8]
 8015188:	4416      	add	r6, r2
 801518a:	b236      	sxth	r6, r6
 801518c:	42be      	cmp	r6, r7
 801518e:	db24      	blt.n	80151da <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8015190:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8015194:	4438      	add	r0, r7
 8015196:	b200      	sxth	r0, r0
 8015198:	4286      	cmp	r6, r0
 801519a:	da1e      	bge.n	80151da <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801519c:	8963      	ldrh	r3, [r4, #10]
 801519e:	4419      	add	r1, r3
 80151a0:	b209      	sxth	r1, r1
 80151a2:	4541      	cmp	r1, r8
 80151a4:	db08      	blt.n	80151b8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 80151a6:	4561      	cmp	r1, ip
 80151a8:	da06      	bge.n	80151b8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 80151aa:	89a3      	ldrh	r3, [r4, #12]
 80151ac:	441a      	add	r2, r3
 80151ae:	b212      	sxth	r2, r2
 80151b0:	42ba      	cmp	r2, r7
 80151b2:	db01      	blt.n	80151b8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 80151b4:	4282      	cmp	r2, r0
 80151b6:	db10      	blt.n	80151da <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80151b8:	4b21      	ldr	r3, [pc, #132]	; (8015240 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 80151ba:	9304      	str	r3, [sp, #16]
 80151bc:	2302      	movs	r3, #2
 80151be:	f88d 3014 	strb.w	r3, [sp, #20]
 80151c2:	6b28      	ldr	r0, [r5, #48]	; 0x30
 80151c4:	2300      	movs	r3, #0
 80151c6:	f8ad 3016 	strh.w	r3, [sp, #22]
 80151ca:	f8ad 3018 	strh.w	r3, [sp, #24]
 80151ce:	f8ad 301a 	strh.w	r3, [sp, #26]
 80151d2:	6803      	ldr	r3, [r0, #0]
 80151d4:	a904      	add	r1, sp, #16
 80151d6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80151d8:	4798      	blx	r3
 80151da:	1d29      	adds	r1, r5, #4
 80151dc:	a802      	add	r0, sp, #8
 80151de:	f7ff fd7b 	bl	8014cd8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80151e2:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80151e6:	88e0      	ldrh	r0, [r4, #6]
 80151e8:	7921      	ldrb	r1, [r4, #4]
 80151ea:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 80151ee:	8922      	ldrh	r2, [r4, #8]
 80151f0:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 80151f2:	f88d 1014 	strb.w	r1, [sp, #20]
 80151f6:	eba3 0808 	sub.w	r8, r3, r8
 80151fa:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80151fe:	1bdf      	subs	r7, r3, r7
 8015200:	b2bb      	uxth	r3, r7
 8015202:	fa1f f888 	uxth.w	r8, r8
 8015206:	8967      	ldrh	r7, [r4, #10]
 8015208:	89a4      	ldrh	r4, [r4, #12]
 801520a:	4440      	add	r0, r8
 801520c:	4460      	add	r0, ip
 801520e:	441a      	add	r2, r3
 8015210:	44b8      	add	r8, r7
 8015212:	4423      	add	r3, r4
 8015214:	f8ad 0016 	strh.w	r0, [sp, #22]
 8015218:	4433      	add	r3, r6
 801521a:	4432      	add	r2, r6
 801521c:	44e0      	add	r8, ip
 801521e:	4c09      	ldr	r4, [pc, #36]	; (8015244 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8015220:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8015222:	9404      	str	r4, [sp, #16]
 8015224:	f8ad 2018 	strh.w	r2, [sp, #24]
 8015228:	f8ad 801a 	strh.w	r8, [sp, #26]
 801522c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8015230:	6803      	ldr	r3, [r0, #0]
 8015232:	a904      	add	r1, sp, #16
 8015234:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8015236:	4798      	blx	r3
 8015238:	b008      	add	sp, #32
 801523a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801523e:	bf00      	nop
 8015240:	0802b4ac 	.word	0x0802b4ac
 8015244:	0802b4c0 	.word	0x0802b4c0

08015248 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8015248:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801524a:	4604      	mov	r4, r0
 801524c:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8015250:	3201      	adds	r2, #1
 8015252:	d112      	bne.n	801527a <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8015254:	6803      	ldr	r3, [r0, #0]
 8015256:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 801525a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801525e:	f8ad 1004 	strh.w	r1, [sp, #4]
 8015262:	2500      	movs	r5, #0
 8015264:	9500      	str	r5, [sp, #0]
 8015266:	466d      	mov	r5, sp
 8015268:	4629      	mov	r1, r5
 801526a:	f8ad 2006 	strh.w	r2, [sp, #6]
 801526e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8015270:	4798      	blx	r3
 8015272:	e895 0003 	ldmia.w	r5, {r0, r1}
 8015276:	e884 0003 	stmia.w	r4, {r0, r1}
 801527a:	4620      	mov	r0, r4
 801527c:	b003      	add	sp, #12
 801527e:	bd30      	pop	{r4, r5, pc}

08015280 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8015280:	b513      	push	{r0, r1, r4, lr}
 8015282:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8015286:	3301      	adds	r3, #1
 8015288:	4604      	mov	r4, r0
 801528a:	d109      	bne.n	80152a0 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 801528c:	4601      	mov	r1, r0
 801528e:	4668      	mov	r0, sp
 8015290:	f7ff fd22 	bl	8014cd8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8015294:	f8bd 3000 	ldrh.w	r3, [sp]
 8015298:	8423      	strh	r3, [r4, #32]
 801529a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801529e:	8463      	strh	r3, [r4, #34]	; 0x22
 80152a0:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 80152a4:	b002      	add	sp, #8
 80152a6:	bd10      	pop	{r4, pc}

080152a8 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 80152a8:	b513      	push	{r0, r1, r4, lr}
 80152aa:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 80152ae:	3301      	adds	r3, #1
 80152b0:	4604      	mov	r4, r0
 80152b2:	d109      	bne.n	80152c8 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 80152b4:	4601      	mov	r1, r0
 80152b6:	4668      	mov	r0, sp
 80152b8:	f7ff fd0e 	bl	8014cd8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80152bc:	f8bd 3000 	ldrh.w	r3, [sp]
 80152c0:	8423      	strh	r3, [r4, #32]
 80152c2:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80152c6:	8463      	strh	r3, [r4, #34]	; 0x22
 80152c8:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 80152cc:	b002      	add	sp, #8
 80152ce:	bd10      	pop	{r4, pc}

080152d0 <_ZN8touchgfx6ScreenC1Ev>:
 80152d0:	b570      	push	{r4, r5, r6, lr}
 80152d2:	4605      	mov	r5, r0
 80152d4:	4b16      	ldr	r3, [pc, #88]	; (8015330 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 80152d6:	f845 3b04 	str.w	r3, [r5], #4
 80152da:	2300      	movs	r3, #0
 80152dc:	8103      	strh	r3, [r0, #8]
 80152de:	8143      	strh	r3, [r0, #10]
 80152e0:	8183      	strh	r3, [r0, #12]
 80152e2:	81c3      	strh	r3, [r0, #14]
 80152e4:	8203      	strh	r3, [r0, #16]
 80152e6:	8243      	strh	r3, [r0, #18]
 80152e8:	8283      	strh	r3, [r0, #20]
 80152ea:	82c3      	strh	r3, [r0, #22]
 80152ec:	e9c0 3306 	strd	r3, r3, [r0, #24]
 80152f0:	6203      	str	r3, [r0, #32]
 80152f2:	8483      	strh	r3, [r0, #36]	; 0x24
 80152f4:	84c3      	strh	r3, [r0, #38]	; 0x26
 80152f6:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 80152fa:	4a0e      	ldr	r2, [pc, #56]	; (8015334 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 80152fc:	6343      	str	r3, [r0, #52]	; 0x34
 80152fe:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 8015302:	4b0d      	ldr	r3, [pc, #52]	; (8015338 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 8015304:	6042      	str	r2, [r0, #4]
 8015306:	f9b3 6000 	ldrsh.w	r6, [r3]
 801530a:	6b93      	ldr	r3, [r2, #56]	; 0x38
 801530c:	4a0b      	ldr	r2, [pc, #44]	; (801533c <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 801530e:	4604      	mov	r4, r0
 8015310:	2101      	movs	r1, #1
 8015312:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8015316:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 801531a:	f9b2 1000 	ldrsh.w	r1, [r2]
 801531e:	4628      	mov	r0, r5
 8015320:	4798      	blx	r3
 8015322:	6863      	ldr	r3, [r4, #4]
 8015324:	4628      	mov	r0, r5
 8015326:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8015328:	4631      	mov	r1, r6
 801532a:	4798      	blx	r3
 801532c:	4620      	mov	r0, r4
 801532e:	bd70      	pop	{r4, r5, r6, pc}
 8015330:	0802b4e8 	.word	0x0802b4e8
 8015334:	0802ad4c 	.word	0x0802ad4c
 8015338:	200137b2 	.word	0x200137b2
 801533c:	200137b0 	.word	0x200137b0

08015340 <_ZN8touchgfx6Screen4drawEv>:
 8015340:	b507      	push	{r0, r1, r2, lr}
 8015342:	4b09      	ldr	r3, [pc, #36]	; (8015368 <_ZN8touchgfx6Screen4drawEv+0x28>)
 8015344:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015348:	4b08      	ldr	r3, [pc, #32]	; (801536c <_ZN8touchgfx6Screen4drawEv+0x2c>)
 801534a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801534e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8015352:	f8ad 3006 	strh.w	r3, [sp, #6]
 8015356:	6803      	ldr	r3, [r0, #0]
 8015358:	2100      	movs	r1, #0
 801535a:	9100      	str	r1, [sp, #0]
 801535c:	689b      	ldr	r3, [r3, #8]
 801535e:	4669      	mov	r1, sp
 8015360:	4798      	blx	r3
 8015362:	b003      	add	sp, #12
 8015364:	f85d fb04 	ldr.w	pc, [sp], #4
 8015368:	200137b0 	.word	0x200137b0
 801536c:	200137b2 	.word	0x200137b2

08015370 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8015370:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015374:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8015378:	2b00      	cmp	r3, #0
 801537a:	b089      	sub	sp, #36	; 0x24
 801537c:	4680      	mov	r8, r0
 801537e:	460c      	mov	r4, r1
 8015380:	4615      	mov	r5, r2
 8015382:	dd0e      	ble.n	80153a2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8015384:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8015388:	2b00      	cmp	r3, #0
 801538a:	dd0a      	ble.n	80153a2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801538c:	4628      	mov	r0, r5
 801538e:	f7ff ff5b 	bl	8015248 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8015392:	4621      	mov	r1, r4
 8015394:	f7fe fa3d 	bl	8013812 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8015398:	69eb      	ldr	r3, [r5, #28]
 801539a:	b928      	cbnz	r0, 80153a8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 801539c:	461d      	mov	r5, r3
 801539e:	2b00      	cmp	r3, #0
 80153a0:	d1f4      	bne.n	801538c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 80153a2:	b009      	add	sp, #36	; 0x24
 80153a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80153a8:	ae04      	add	r6, sp, #16
 80153aa:	2b00      	cmp	r3, #0
 80153ac:	f000 80b5 	beq.w	801551a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80153b0:	682b      	ldr	r3, [r5, #0]
 80153b2:	4629      	mov	r1, r5
 80153b4:	68db      	ldr	r3, [r3, #12]
 80153b6:	a802      	add	r0, sp, #8
 80153b8:	4798      	blx	r3
 80153ba:	4628      	mov	r0, r5
 80153bc:	f7ff ff60 	bl	8015280 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 80153c0:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 80153c4:	4407      	add	r7, r0
 80153c6:	4628      	mov	r0, r5
 80153c8:	f7ff ff6e 	bl	80152a8 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 80153cc:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80153d0:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 80153d4:	f8ad 2014 	strh.w	r2, [sp, #20]
 80153d8:	4418      	add	r0, r3
 80153da:	4621      	mov	r1, r4
 80153dc:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 80153e0:	f8ad 0012 	strh.w	r0, [sp, #18]
 80153e4:	b23f      	sxth	r7, r7
 80153e6:	4630      	mov	r0, r6
 80153e8:	f8ad 3016 	strh.w	r3, [sp, #22]
 80153ec:	f8ad 7010 	strh.w	r7, [sp, #16]
 80153f0:	f7f9 f9dc 	bl	800e7ac <_ZN8touchgfx4RectaNERKS0_>
 80153f4:	4628      	mov	r0, r5
 80153f6:	f7ff ff27 	bl	8015248 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80153fa:	4602      	mov	r2, r0
 80153fc:	e896 0003 	ldmia.w	r6, {r0, r1}
 8015400:	ab06      	add	r3, sp, #24
 8015402:	e883 0003 	stmia.w	r3, {r0, r1}
 8015406:	4611      	mov	r1, r2
 8015408:	4618      	mov	r0, r3
 801540a:	f7f9 f9cf 	bl	800e7ac <_ZN8touchgfx4RectaNERKS0_>
 801540e:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8015412:	f9b4 1000 	ldrsh.w	r1, [r4]
 8015416:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 801541a:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 801541e:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 8015422:	4299      	cmp	r1, r3
 8015424:	d10b      	bne.n	801543e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8015426:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801542a:	4552      	cmp	r2, sl
 801542c:	d107      	bne.n	801543e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801542e:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8015432:	455a      	cmp	r2, fp
 8015434:	d103      	bne.n	801543e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8015436:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 801543a:	454a      	cmp	r2, r9
 801543c:	d06d      	beq.n	801551a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801543e:	f1bb 0f00 	cmp.w	fp, #0
 8015442:	dd65      	ble.n	8015510 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8015444:	f1b9 0f00 	cmp.w	r9, #0
 8015448:	dd62      	ble.n	8015510 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801544a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801544e:	fa1f f08a 	uxth.w	r0, sl
 8015452:	4552      	cmp	r2, sl
 8015454:	9000      	str	r0, [sp, #0]
 8015456:	da12      	bge.n	801547e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8015458:	9301      	str	r3, [sp, #4]
 801545a:	9b00      	ldr	r3, [sp, #0]
 801545c:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8015460:	f8ad 2012 	strh.w	r2, [sp, #18]
 8015464:	1a9a      	subs	r2, r3, r2
 8015466:	f8ad 1010 	strh.w	r1, [sp, #16]
 801546a:	f8ad 0014 	strh.w	r0, [sp, #20]
 801546e:	f8ad 2016 	strh.w	r2, [sp, #22]
 8015472:	69ea      	ldr	r2, [r5, #28]
 8015474:	4631      	mov	r1, r6
 8015476:	4640      	mov	r0, r8
 8015478:	f7ff ff7a 	bl	8015370 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801547c:	9b01      	ldr	r3, [sp, #4]
 801547e:	f9b4 2000 	ldrsh.w	r2, [r4]
 8015482:	429a      	cmp	r2, r3
 8015484:	b29f      	uxth	r7, r3
 8015486:	da0d      	bge.n	80154a4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8015488:	f8ad 2010 	strh.w	r2, [sp, #16]
 801548c:	1aba      	subs	r2, r7, r2
 801548e:	f8ad a012 	strh.w	sl, [sp, #18]
 8015492:	f8ad 2014 	strh.w	r2, [sp, #20]
 8015496:	f8ad 9016 	strh.w	r9, [sp, #22]
 801549a:	69ea      	ldr	r2, [r5, #28]
 801549c:	4631      	mov	r1, r6
 801549e:	4640      	mov	r0, r8
 80154a0:	f7ff ff66 	bl	8015370 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80154a4:	8822      	ldrh	r2, [r4, #0]
 80154a6:	88a3      	ldrh	r3, [r4, #4]
 80154a8:	445f      	add	r7, fp
 80154aa:	4413      	add	r3, r2
 80154ac:	b29b      	uxth	r3, r3
 80154ae:	b2bf      	uxth	r7, r7
 80154b0:	b23a      	sxth	r2, r7
 80154b2:	b219      	sxth	r1, r3
 80154b4:	4291      	cmp	r1, r2
 80154b6:	dd0d      	ble.n	80154d4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 80154b8:	1bdb      	subs	r3, r3, r7
 80154ba:	f8ad 2010 	strh.w	r2, [sp, #16]
 80154be:	f8ad a012 	strh.w	sl, [sp, #18]
 80154c2:	f8ad 3014 	strh.w	r3, [sp, #20]
 80154c6:	f8ad 9016 	strh.w	r9, [sp, #22]
 80154ca:	69ea      	ldr	r2, [r5, #28]
 80154cc:	4631      	mov	r1, r6
 80154ce:	4640      	mov	r0, r8
 80154d0:	f7ff ff4e 	bl	8015370 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80154d4:	88e2      	ldrh	r2, [r4, #6]
 80154d6:	8863      	ldrh	r3, [r4, #2]
 80154d8:	4413      	add	r3, r2
 80154da:	9a00      	ldr	r2, [sp, #0]
 80154dc:	444a      	add	r2, r9
 80154de:	b29b      	uxth	r3, r3
 80154e0:	fa1f f982 	uxth.w	r9, r2
 80154e4:	fa0f f289 	sxth.w	r2, r9
 80154e8:	b219      	sxth	r1, r3
 80154ea:	428a      	cmp	r2, r1
 80154ec:	da15      	bge.n	801551a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80154ee:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80154f2:	f9b4 0000 	ldrsh.w	r0, [r4]
 80154f6:	f8ad 1014 	strh.w	r1, [sp, #20]
 80154fa:	eba3 0309 	sub.w	r3, r3, r9
 80154fe:	f8ad 0010 	strh.w	r0, [sp, #16]
 8015502:	f8ad 2012 	strh.w	r2, [sp, #18]
 8015506:	f8ad 3016 	strh.w	r3, [sp, #22]
 801550a:	69ea      	ldr	r2, [r5, #28]
 801550c:	4631      	mov	r1, r6
 801550e:	e001      	b.n	8015514 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8015510:	69ea      	ldr	r2, [r5, #28]
 8015512:	4621      	mov	r1, r4
 8015514:	4640      	mov	r0, r8
 8015516:	f7ff ff2b 	bl	8015370 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801551a:	4628      	mov	r0, r5
 801551c:	f7ff fe94 	bl	8015248 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8015520:	6861      	ldr	r1, [r4, #4]
 8015522:	4602      	mov	r2, r0
 8015524:	6820      	ldr	r0, [r4, #0]
 8015526:	4633      	mov	r3, r6
 8015528:	c303      	stmia	r3!, {r0, r1}
 801552a:	4611      	mov	r1, r2
 801552c:	4630      	mov	r0, r6
 801552e:	f7f9 f93d 	bl	800e7ac <_ZN8touchgfx4RectaNERKS0_>
 8015532:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8015536:	2b00      	cmp	r3, #0
 8015538:	f77f af33 	ble.w	80153a2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801553c:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8015540:	2b00      	cmp	r3, #0
 8015542:	f77f af2e 	ble.w	80153a2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8015546:	4628      	mov	r0, r5
 8015548:	f7ff fe9a 	bl	8015280 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 801554c:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8015550:	1a18      	subs	r0, r3, r0
 8015552:	f8ad 0010 	strh.w	r0, [sp, #16]
 8015556:	4628      	mov	r0, r5
 8015558:	f7ff fea6 	bl	80152a8 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801555c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8015560:	1a18      	subs	r0, r3, r0
 8015562:	f8ad 0012 	strh.w	r0, [sp, #18]
 8015566:	682b      	ldr	r3, [r5, #0]
 8015568:	4631      	mov	r1, r6
 801556a:	689b      	ldr	r3, [r3, #8]
 801556c:	4628      	mov	r0, r5
 801556e:	4798      	blx	r3
 8015570:	e717      	b.n	80153a2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08015572 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8015572:	b570      	push	{r4, r5, r6, lr}
 8015574:	460c      	mov	r4, r1
 8015576:	b086      	sub	sp, #24
 8015578:	1d06      	adds	r6, r0, #4
 801557a:	2300      	movs	r3, #0
 801557c:	4631      	mov	r1, r6
 801557e:	4605      	mov	r5, r0
 8015580:	a802      	add	r0, sp, #8
 8015582:	9301      	str	r3, [sp, #4]
 8015584:	f7ff fba8 	bl	8014cd8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8015588:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801558c:	8822      	ldrh	r2, [r4, #0]
 801558e:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8015592:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8015596:	f8ad 0014 	strh.w	r0, [sp, #20]
 801559a:	1ad2      	subs	r2, r2, r3
 801559c:	8863      	ldrh	r3, [r4, #2]
 801559e:	f8ad 2010 	strh.w	r2, [sp, #16]
 80155a2:	1a5b      	subs	r3, r3, r1
 80155a4:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 80155a8:	f8ad 1016 	strh.w	r1, [sp, #22]
 80155ac:	aa01      	add	r2, sp, #4
 80155ae:	a904      	add	r1, sp, #16
 80155b0:	4630      	mov	r0, r6
 80155b2:	f8ad 3012 	strh.w	r3, [sp, #18]
 80155b6:	f7f9 f9d1 	bl	800e95c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 80155ba:	9a01      	ldr	r2, [sp, #4]
 80155bc:	b11a      	cbz	r2, 80155c6 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 80155be:	4621      	mov	r1, r4
 80155c0:	4628      	mov	r0, r5
 80155c2:	f7ff fed5 	bl	8015370 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80155c6:	b006      	add	sp, #24
 80155c8:	bd70      	pop	{r4, r5, r6, pc}

080155ca <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 80155ca:	b530      	push	{r4, r5, lr}
 80155cc:	4602      	mov	r2, r0
 80155ce:	4604      	mov	r4, r0
 80155d0:	f852 0f08 	ldr.w	r0, [r2, #8]!
 80155d4:	b085      	sub	sp, #20
 80155d6:	460d      	mov	r5, r1
 80155d8:	6851      	ldr	r1, [r2, #4]
 80155da:	466b      	mov	r3, sp
 80155dc:	c303      	stmia	r3!, {r0, r1}
 80155de:	4629      	mov	r1, r5
 80155e0:	4668      	mov	r0, sp
 80155e2:	f7f9 f8e3 	bl	800e7ac <_ZN8touchgfx4RectaNERKS0_>
 80155e6:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80155ea:	b12b      	cbz	r3, 80155f8 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 80155ec:	4669      	mov	r1, sp
 80155ee:	4620      	mov	r0, r4
 80155f0:	f7ff ffbf 	bl	8015572 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 80155f4:	b005      	add	sp, #20
 80155f6:	bd30      	pop	{r4, r5, pc}
 80155f8:	3404      	adds	r4, #4
 80155fa:	4621      	mov	r1, r4
 80155fc:	a802      	add	r0, sp, #8
 80155fe:	f7ff fb6b 	bl	8014cd8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8015602:	f8bd 3000 	ldrh.w	r3, [sp]
 8015606:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 801560a:	1a9b      	subs	r3, r3, r2
 801560c:	f8ad 3000 	strh.w	r3, [sp]
 8015610:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8015614:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8015618:	4669      	mov	r1, sp
 801561a:	1a9b      	subs	r3, r3, r2
 801561c:	4620      	mov	r0, r4
 801561e:	f8ad 3002 	strh.w	r3, [sp, #2]
 8015622:	f7f9 f962 	bl	800e8ea <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 8015626:	e7e5      	b.n	80155f4 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08015628 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8015628:	680a      	ldr	r2, [r1, #0]
 801562a:	460b      	mov	r3, r1
 801562c:	6992      	ldr	r2, [r2, #24]
 801562e:	1d01      	adds	r1, r0, #4
 8015630:	4618      	mov	r0, r3
 8015632:	4710      	bx	r2

08015634 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 8015634:	4298      	cmp	r0, r3
 8015636:	d200      	bcs.n	801563a <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 8015638:	b913      	cbnz	r3, 8015640 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 801563a:	440a      	add	r2, r1
 801563c:	b210      	sxth	r0, r2
 801563e:	4770      	bx	lr
 8015640:	ee07 0a90 	vmov	s15, r0
 8015644:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8015648:	ee07 3a90 	vmov	s15, r3
 801564c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8015650:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8015654:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015658:	ee37 7a66 	vsub.f32	s14, s14, s13
 801565c:	ee07 2a90 	vmov	s15, r2
 8015660:	ee67 5a07 	vmul.f32	s11, s14, s14
 8015664:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8015668:	eee5 6a87 	vfma.f32	s13, s11, s14
 801566c:	ee07 1a90 	vmov	s15, r1
 8015670:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8015674:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8015678:	eee6 7a26 	vfma.f32	s15, s12, s13
 801567c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8015680:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015684:	bfcc      	ite	gt
 8015686:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 801568a:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 801568e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8015692:	ee17 3a90 	vmov	r3, s15
 8015696:	b218      	sxth	r0, r3
 8015698:	4770      	bx	lr

0801569a <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 801569a:	4298      	cmp	r0, r3
 801569c:	d200      	bcs.n	80156a0 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x6>
 801569e:	b913      	cbnz	r3, 80156a6 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0xc>
 80156a0:	440a      	add	r2, r1
 80156a2:	b210      	sxth	r0, r2
 80156a4:	4770      	bx	lr
 80156a6:	ee07 2a90 	vmov	s15, r2
 80156aa:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80156ae:	ee07 0a90 	vmov	s15, r0
 80156b2:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80156b6:	ee67 7a27 	vmul.f32	s15, s14, s15
 80156ba:	ee07 3a10 	vmov	s14, r3
 80156be:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80156c2:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 80156c6:	ee07 1a90 	vmov	s15, r1
 80156ca:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80156ce:	ee77 7a27 	vadd.f32	s15, s14, s15
 80156d2:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80156d6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80156da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80156de:	bfcc      	ite	gt
 80156e0:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 80156e4:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 80156e8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80156ec:	ee17 3a90 	vmov	r3, s15
 80156f0:	b218      	sxth	r0, r3
 80156f2:	4770      	bx	lr

080156f4 <_ZN8touchgfx12TextProviderC1Ev>:
 80156f4:	b538      	push	{r3, r4, r5, lr}
 80156f6:	2500      	movs	r5, #0
 80156f8:	2302      	movs	r3, #2
 80156fa:	4604      	mov	r4, r0
 80156fc:	e9c0 5500 	strd	r5, r5, [r0]
 8015700:	7403      	strb	r3, [r0, #16]
 8015702:	6145      	str	r5, [r0, #20]
 8015704:	7605      	strb	r5, [r0, #24]
 8015706:	83c5      	strh	r5, [r0, #30]
 8015708:	8405      	strh	r5, [r0, #32]
 801570a:	86c5      	strh	r5, [r0, #54]	; 0x36
 801570c:	8705      	strh	r5, [r0, #56]	; 0x38
 801570e:	87c5      	strh	r5, [r0, #62]	; 0x3e
 8015710:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 8015714:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 8015718:	220e      	movs	r2, #14
 801571a:	4629      	mov	r1, r5
 801571c:	304c      	adds	r0, #76	; 0x4c
 801571e:	f011 feac 	bl	802747a <memset>
 8015722:	2301      	movs	r3, #1
 8015724:	4620      	mov	r0, r4
 8015726:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 801572a:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801572e:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 8015732:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 8015736:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 801573a:	f7f1 fa33 	bl	8006ba4 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 801573e:	4620      	mov	r0, r4
 8015740:	bd38      	pop	{r3, r4, r5, pc}

08015742 <_ZN8touchgfx12TextProvider11endOfStringEv>:
 8015742:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8015744:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015748:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 801574a:	fab0 f080 	clz	r0, r0
 801574e:	0940      	lsrs	r0, r0, #5
 8015750:	4770      	bx	lr

08015752 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8015752:	b530      	push	{r4, r5, lr}
 8015754:	2500      	movs	r5, #0
 8015756:	2401      	movs	r4, #1
 8015758:	6843      	ldr	r3, [r0, #4]
 801575a:	b913      	cbnz	r3, 8015762 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 801575c:	6803      	ldr	r3, [r0, #0]
 801575e:	b313      	cbz	r3, 80157a6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8015760:	6043      	str	r3, [r0, #4]
 8015762:	7e03      	ldrb	r3, [r0, #24]
 8015764:	b143      	cbz	r3, 8015778 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8015766:	6943      	ldr	r3, [r0, #20]
 8015768:	b12b      	cbz	r3, 8015776 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801576a:	881a      	ldrh	r2, [r3, #0]
 801576c:	b11a      	cbz	r2, 8015776 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801576e:	1c9a      	adds	r2, r3, #2
 8015770:	6142      	str	r2, [r0, #20]
 8015772:	8818      	ldrh	r0, [r3, #0]
 8015774:	bd30      	pop	{r4, r5, pc}
 8015776:	7605      	strb	r5, [r0, #24]
 8015778:	6843      	ldr	r3, [r0, #4]
 801577a:	8819      	ldrh	r1, [r3, #0]
 801577c:	b199      	cbz	r1, 80157a6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 801577e:	1c9a      	adds	r2, r3, #2
 8015780:	2902      	cmp	r1, #2
 8015782:	6042      	str	r2, [r0, #4]
 8015784:	d1f5      	bne.n	8015772 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8015786:	7c03      	ldrb	r3, [r0, #16]
 8015788:	2b01      	cmp	r3, #1
 801578a:	d8e5      	bhi.n	8015758 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801578c:	1c5a      	adds	r2, r3, #1
 801578e:	3302      	adds	r3, #2
 8015790:	7402      	strb	r2, [r0, #16]
 8015792:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8015796:	6143      	str	r3, [r0, #20]
 8015798:	2b00      	cmp	r3, #0
 801579a:	d0dd      	beq.n	8015758 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801579c:	881b      	ldrh	r3, [r3, #0]
 801579e:	2b00      	cmp	r3, #0
 80157a0:	d0da      	beq.n	8015758 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80157a2:	7604      	strb	r4, [r0, #24]
 80157a4:	e7d8      	b.n	8015758 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80157a6:	2000      	movs	r0, #0
 80157a8:	e7e4      	b.n	8015774 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

080157aa <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 80157aa:	b430      	push	{r4, r5}
 80157ac:	6001      	str	r1, [r0, #0]
 80157ae:	2100      	movs	r1, #0
 80157b0:	6041      	str	r1, [r0, #4]
 80157b2:	6815      	ldr	r5, [r2, #0]
 80157b4:	6085      	str	r5, [r0, #8]
 80157b6:	6852      	ldr	r2, [r2, #4]
 80157b8:	6443      	str	r3, [r0, #68]	; 0x44
 80157ba:	9b02      	ldr	r3, [sp, #8]
 80157bc:	60c2      	str	r2, [r0, #12]
 80157be:	7401      	strb	r1, [r0, #16]
 80157c0:	6141      	str	r1, [r0, #20]
 80157c2:	7601      	strb	r1, [r0, #24]
 80157c4:	8701      	strh	r1, [r0, #56]	; 0x38
 80157c6:	8401      	strh	r1, [r0, #32]
 80157c8:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 80157cc:	6483      	str	r3, [r0, #72]	; 0x48
 80157ce:	bc30      	pop	{r4, r5}
 80157d0:	f7f1 b9e8 	b.w	8006ba4 <_ZN8touchgfx12TextProvider18initializeInternalEv>

080157d4 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 80157d4:	b408      	push	{r3}
 80157d6:	b510      	push	{r4, lr}
 80157d8:	b085      	sub	sp, #20
 80157da:	ac07      	add	r4, sp, #28
 80157dc:	f854 3b04 	ldr.w	r3, [r4], #4
 80157e0:	9300      	str	r3, [sp, #0]
 80157e2:	4613      	mov	r3, r2
 80157e4:	4622      	mov	r2, r4
 80157e6:	9403      	str	r4, [sp, #12]
 80157e8:	f7ff ffdf 	bl	80157aa <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80157ec:	b005      	add	sp, #20
 80157ee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80157f2:	b001      	add	sp, #4
 80157f4:	4770      	bx	lr

080157f6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 80157f6:	b5f0      	push	{r4, r5, r6, r7, lr}
 80157f8:	4605      	mov	r5, r0
 80157fa:	4608      	mov	r0, r1
 80157fc:	b1e9      	cbz	r1, 801583a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 80157fe:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 8015802:	460b      	mov	r3, r1
 8015804:	f101 0708 	add.w	r7, r1, #8
 8015808:	4622      	mov	r2, r4
 801580a:	6818      	ldr	r0, [r3, #0]
 801580c:	6859      	ldr	r1, [r3, #4]
 801580e:	4626      	mov	r6, r4
 8015810:	c603      	stmia	r6!, {r0, r1}
 8015812:	3308      	adds	r3, #8
 8015814:	42bb      	cmp	r3, r7
 8015816:	4634      	mov	r4, r6
 8015818:	d1f7      	bne.n	801580a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 801581a:	6818      	ldr	r0, [r3, #0]
 801581c:	6030      	str	r0, [r6, #0]
 801581e:	889b      	ldrh	r3, [r3, #4]
 8015820:	80b3      	strh	r3, [r6, #4]
 8015822:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 8015826:	015b      	lsls	r3, r3, #5
 8015828:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801582c:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 8015830:	430b      	orrs	r3, r1
 8015832:	425b      	negs	r3, r3
 8015834:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 8015838:	4610      	mov	r0, r2
 801583a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801583c <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 801583c:	b538      	push	{r3, r4, r5, lr}
 801583e:	460c      	mov	r4, r1
 8015840:	6811      	ldr	r1, [r2, #0]
 8015842:	4610      	mov	r0, r2
 8015844:	68cd      	ldr	r5, [r1, #12]
 8015846:	4619      	mov	r1, r3
 8015848:	47a8      	blx	r5
 801584a:	2800      	cmp	r0, #0
 801584c:	bf08      	it	eq
 801584e:	4620      	moveq	r0, r4
 8015850:	bd38      	pop	{r3, r4, r5, pc}
	...

08015854 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8015854:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015856:	4604      	mov	r4, r0
 8015858:	4615      	mov	r5, r2
 801585a:	4608      	mov	r0, r1
 801585c:	b93a      	cbnz	r2, 801586e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 801585e:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8015862:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 8015866:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 801586a:	4628      	mov	r0, r5
 801586c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801586e:	f892 c00d 	ldrb.w	ip, [r2, #13]
 8015872:	8893      	ldrh	r3, [r2, #4]
 8015874:	ea4f 160c 	mov.w	r6, ip, lsl #4
 8015878:	f406 7280 	and.w	r2, r6, #256	; 0x100
 801587c:	79ee      	ldrb	r6, [r5, #7]
 801587e:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 8015882:	4316      	orrs	r6, r2
 8015884:	19da      	adds	r2, r3, r7
 8015886:	b291      	uxth	r1, r2
 8015888:	291d      	cmp	r1, #29
 801588a:	b2b7      	uxth	r7, r6
 801588c:	d87a      	bhi.n	8015984 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 801588e:	2201      	movs	r2, #1
 8015890:	408a      	lsls	r2, r1
 8015892:	4975      	ldr	r1, [pc, #468]	; (8015a68 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 8015894:	420a      	tst	r2, r1
 8015896:	ea4f 06e6 	mov.w	r6, r6, asr #3
 801589a:	d12d      	bne.n	80158f8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 801589c:	f412 7f60 	tst.w	r2, #896	; 0x380
 80158a0:	d070      	beq.n	8015984 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 80158a2:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 80158a6:	462b      	mov	r3, r5
 80158a8:	f105 0e08 	add.w	lr, r5, #8
 80158ac:	4615      	mov	r5, r2
 80158ae:	6818      	ldr	r0, [r3, #0]
 80158b0:	6859      	ldr	r1, [r3, #4]
 80158b2:	4694      	mov	ip, r2
 80158b4:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 80158b8:	3308      	adds	r3, #8
 80158ba:	4573      	cmp	r3, lr
 80158bc:	4662      	mov	r2, ip
 80158be:	d1f6      	bne.n	80158ae <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 80158c0:	6818      	ldr	r0, [r3, #0]
 80158c2:	f8cc 0000 	str.w	r0, [ip]
 80158c6:	889b      	ldrh	r3, [r3, #4]
 80158c8:	f8ac 3004 	strh.w	r3, [ip, #4]
 80158cc:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 80158d0:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 80158d4:	b2b3      	uxth	r3, r6
 80158d6:	1aca      	subs	r2, r1, r3
 80158d8:	b292      	uxth	r2, r2
 80158da:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 80158de:	10d2      	asrs	r2, r2, #3
 80158e0:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 80158e4:	f002 0260 	and.w	r2, r2, #96	; 0x60
 80158e8:	4302      	orrs	r2, r0
 80158ea:	1bcf      	subs	r7, r1, r7
 80158ec:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 80158f0:	1afb      	subs	r3, r7, r3
 80158f2:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 80158f6:	e7b8      	b.n	801586a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 80158f8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80158fa:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80158fe:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 8015900:	f640 6333 	movw	r3, #3635	; 0xe33
 8015904:	4299      	cmp	r1, r3
 8015906:	d110      	bne.n	801592a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 8015908:	6803      	ldr	r3, [r0, #0]
 801590a:	68db      	ldr	r3, [r3, #12]
 801590c:	4798      	blx	r3
 801590e:	7b41      	ldrb	r1, [r0, #13]
 8015910:	00cb      	lsls	r3, r1, #3
 8015912:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8015916:	7a03      	ldrb	r3, [r0, #8]
 8015918:	0648      	lsls	r0, r1, #25
 801591a:	ea43 0302 	orr.w	r3, r3, r2
 801591e:	bf44      	itt	mi
 8015920:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8015924:	b21b      	sxthmi	r3, r3
 8015926:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801592a:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 801592e:	443b      	add	r3, r7
 8015930:	4433      	add	r3, r6
 8015932:	b29b      	uxth	r3, r3
 8015934:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 8015938:	462a      	mov	r2, r5
 801593a:	f105 0c08 	add.w	ip, r5, #8
 801593e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8015942:	4635      	mov	r5, r6
 8015944:	6810      	ldr	r0, [r2, #0]
 8015946:	6851      	ldr	r1, [r2, #4]
 8015948:	4637      	mov	r7, r6
 801594a:	c703      	stmia	r7!, {r0, r1}
 801594c:	3208      	adds	r2, #8
 801594e:	4562      	cmp	r2, ip
 8015950:	463e      	mov	r6, r7
 8015952:	d1f7      	bne.n	8015944 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 8015954:	6810      	ldr	r0, [r2, #0]
 8015956:	6038      	str	r0, [r7, #0]
 8015958:	8892      	ldrh	r2, [r2, #4]
 801595a:	80ba      	strh	r2, [r7, #4]
 801595c:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8015960:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8015964:	10db      	asrs	r3, r3, #3
 8015966:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801596a:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801596e:	4313      	orrs	r3, r2
 8015970:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8015974:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 8015978:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 801597c:	1a9b      	subs	r3, r3, r2
 801597e:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 8015982:	e772      	b.n	801586a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8015984:	f023 0204 	bic.w	r2, r3, #4
 8015988:	f640 611b 	movw	r1, #3611	; 0xe1b
 801598c:	428a      	cmp	r2, r1
 801598e:	d003      	beq.n	8015998 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 8015990:	f640 621d 	movw	r2, #3613	; 0xe1d
 8015994:	4293      	cmp	r3, r2
 8015996:	d120      	bne.n	80159da <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 8015998:	3b01      	subs	r3, #1
 801599a:	4602      	mov	r2, r0
 801599c:	b29b      	uxth	r3, r3
 801599e:	4629      	mov	r1, r5
 80159a0:	4620      	mov	r0, r4
 80159a2:	f7ff ff4b 	bl	801583c <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 80159a6:	7b41      	ldrb	r1, [r0, #13]
 80159a8:	00cb      	lsls	r3, r1, #3
 80159aa:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80159ae:	7a03      	ldrb	r3, [r0, #8]
 80159b0:	0649      	lsls	r1, r1, #25
 80159b2:	ea43 0302 	orr.w	r3, r3, r2
 80159b6:	bf44      	itt	mi
 80159b8:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80159bc:	b21b      	sxthmi	r3, r3
 80159be:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80159c2:	7b6b      	ldrb	r3, [r5, #13]
 80159c4:	7aaa      	ldrb	r2, [r5, #10]
 80159c6:	005b      	lsls	r3, r3, #1
 80159c8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80159cc:	4313      	orrs	r3, r2
 80159ce:	115a      	asrs	r2, r3, #5
 80159d0:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 80159d4:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 80159d8:	e036      	b.n	8015a48 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 80159da:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 80159de:	f402 7180 	and.w	r1, r2, #256	; 0x100
 80159e2:	7a2a      	ldrb	r2, [r5, #8]
 80159e4:	f01c 0f40 	tst.w	ip, #64	; 0x40
 80159e8:	ea42 0201 	orr.w	r2, r2, r1
 80159ec:	bf1c      	itt	ne
 80159ee:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 80159f2:	b212      	sxthne	r2, r2
 80159f4:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 80159f8:	f640 6109 	movw	r1, #3593	; 0xe09
 80159fc:	f023 0210 	bic.w	r2, r3, #16
 8015a00:	428a      	cmp	r2, r1
 8015a02:	d003      	beq.n	8015a0c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 8015a04:	f640 6213 	movw	r2, #3603	; 0xe13
 8015a08:	4293      	cmp	r3, r2
 8015a0a:	d12a      	bne.n	8015a62 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 8015a0c:	7b6e      	ldrb	r6, [r5, #13]
 8015a0e:	0076      	lsls	r6, r6, #1
 8015a10:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8015a14:	7aae      	ldrb	r6, [r5, #10]
 8015a16:	4316      	orrs	r6, r2
 8015a18:	f640 6213 	movw	r2, #3603	; 0xe13
 8015a1c:	4293      	cmp	r3, r2
 8015a1e:	bf18      	it	ne
 8015a20:	f103 33ff 	addne.w	r3, r3, #4294967295
 8015a24:	4602      	mov	r2, r0
 8015a26:	bf14      	ite	ne
 8015a28:	b29b      	uxthne	r3, r3
 8015a2a:	f640 630c 	movweq	r3, #3596	; 0xe0c
 8015a2e:	4629      	mov	r1, r5
 8015a30:	4620      	mov	r0, r4
 8015a32:	f7ff ff03 	bl	801583c <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8015a36:	7b43      	ldrb	r3, [r0, #13]
 8015a38:	7a82      	ldrb	r2, [r0, #10]
 8015a3a:	005b      	lsls	r3, r3, #1
 8015a3c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8015a40:	4313      	orrs	r3, r2
 8015a42:	1af6      	subs	r6, r6, r3
 8015a44:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 8015a48:	7b69      	ldrb	r1, [r5, #13]
 8015a4a:	00cb      	lsls	r3, r1, #3
 8015a4c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8015a50:	7a2b      	ldrb	r3, [r5, #8]
 8015a52:	4313      	orrs	r3, r2
 8015a54:	064a      	lsls	r2, r1, #25
 8015a56:	bf44      	itt	mi
 8015a58:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8015a5c:	b21b      	sxthmi	r3, r3
 8015a5e:	1bdb      	subs	r3, r3, r7
 8015a60:	e747      	b.n	80158f2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8015a62:	2300      	movs	r3, #0
 8015a64:	e7b6      	b.n	80159d4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 8015a66:	bf00      	nop
 8015a68:	3fc00079 	.word	0x3fc00079

08015a6c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8015a6c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8015a70:	4604      	mov	r4, r0
 8015a72:	b942      	cbnz	r2, 8015a86 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8015a74:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8015a78:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 8015a7c:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 8015a80:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8015a84:	e047      	b.n	8015b16 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8015a86:	7b51      	ldrb	r1, [r2, #13]
 8015a88:	8893      	ldrh	r3, [r2, #4]
 8015a8a:	010d      	lsls	r5, r1, #4
 8015a8c:	f405 7080 	and.w	r0, r5, #256	; 0x100
 8015a90:	79d5      	ldrb	r5, [r2, #7]
 8015a92:	4305      	orrs	r5, r0
 8015a94:	2d04      	cmp	r5, #4
 8015a96:	bfcc      	ite	gt
 8015a98:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8015a9c:	f04f 0e01 	movle.w	lr, #1
 8015aa0:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 8015aa4:	f200 80ab 	bhi.w	8015bfe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8015aa8:	f240 60e7 	movw	r0, #1767	; 0x6e7
 8015aac:	4283      	cmp	r3, r0
 8015aae:	d216      	bcs.n	8015ade <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8015ab0:	f240 605b 	movw	r0, #1627	; 0x65b
 8015ab4:	4283      	cmp	r3, r0
 8015ab6:	d859      	bhi.n	8015b6c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8015ab8:	f240 6057 	movw	r0, #1623	; 0x657
 8015abc:	4283      	cmp	r3, r0
 8015abe:	d20e      	bcs.n	8015ade <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8015ac0:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8015ac4:	d24a      	bcs.n	8015b5c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8015ac6:	f240 604e 	movw	r0, #1614	; 0x64e
 8015aca:	4283      	cmp	r3, r0
 8015acc:	d207      	bcs.n	8015ade <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8015ace:	f240 601a 	movw	r0, #1562	; 0x61a
 8015ad2:	4283      	cmp	r3, r0
 8015ad4:	d02a      	beq.n	8015b2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8015ad6:	d821      	bhi.n	8015b1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8015ad8:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 8015adc:	d35b      	bcc.n	8015b96 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8015ade:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 8015ae2:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8015ae6:	f040 80d0 	bne.w	8015c8a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8015aea:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 8015aee:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8015af2:	f040 80ca 	bne.w	8015c8a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8015af6:	00cb      	lsls	r3, r1, #3
 8015af8:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8015afc:	7a13      	ldrb	r3, [r2, #8]
 8015afe:	0649      	lsls	r1, r1, #25
 8015b00:	ea43 0300 	orr.w	r3, r3, r0
 8015b04:	bf44      	itt	mi
 8015b06:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8015b0a:	b21b      	sxthmi	r3, r3
 8015b0c:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8015b10:	1b5d      	subs	r5, r3, r5
 8015b12:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8015b16:	4610      	mov	r0, r2
 8015b18:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8015b1c:	f240 604b 	movw	r0, #1611	; 0x64b
 8015b20:	4283      	cmp	r3, r0
 8015b22:	d338      	bcc.n	8015b96 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8015b24:	f240 604c 	movw	r0, #1612	; 0x64c
 8015b28:	4283      	cmp	r3, r0
 8015b2a:	d9d8      	bls.n	8015ade <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8015b2c:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 8015b30:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 8015b34:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8015b38:	f040 80f2 	bne.w	8015d20 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8015b3c:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8015b40:	f040 80ee 	bne.w	8015d20 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8015b44:	00cb      	lsls	r3, r1, #3
 8015b46:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8015b4a:	7a13      	ldrb	r3, [r2, #8]
 8015b4c:	064e      	lsls	r6, r1, #25
 8015b4e:	ea43 0300 	orr.w	r3, r3, r0
 8015b52:	bf44      	itt	mi
 8015b54:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8015b58:	b21b      	sxthmi	r3, r3
 8015b5a:	e7d9      	b.n	8015b10 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 8015b5c:	f240 6054 	movw	r0, #1620	; 0x654
 8015b60:	4283      	cmp	r3, r0
 8015b62:	d8e3      	bhi.n	8015b2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8015b64:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8015b68:	d9e0      	bls.n	8015b2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8015b6a:	e7b8      	b.n	8015ade <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8015b6c:	f240 6074 	movw	r0, #1652	; 0x674
 8015b70:	4283      	cmp	r3, r0
 8015b72:	d0b4      	beq.n	8015ade <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8015b74:	d82d      	bhi.n	8015bd2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 8015b76:	f240 605e 	movw	r0, #1630	; 0x65e
 8015b7a:	4283      	cmp	r3, r0
 8015b7c:	d804      	bhi.n	8015b88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 8015b7e:	f240 605d 	movw	r0, #1629	; 0x65d
 8015b82:	4283      	cmp	r3, r0
 8015b84:	d3d2      	bcc.n	8015b2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8015b86:	e7aa      	b.n	8015ade <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8015b88:	f240 605f 	movw	r0, #1631	; 0x65f
 8015b8c:	4283      	cmp	r3, r0
 8015b8e:	d0cd      	beq.n	8015b2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8015b90:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 8015b94:	d0a3      	beq.n	8015ade <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8015b96:	00cb      	lsls	r3, r1, #3
 8015b98:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8015b9c:	7a13      	ldrb	r3, [r2, #8]
 8015b9e:	0649      	lsls	r1, r1, #25
 8015ba0:	ea43 0300 	orr.w	r3, r3, r0
 8015ba4:	bf44      	itt	mi
 8015ba6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8015baa:	b21b      	sxthmi	r3, r3
 8015bac:	1b5d      	subs	r5, r3, r5
 8015bae:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8015bb2:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8015bb6:	7b53      	ldrb	r3, [r2, #13]
 8015bb8:	015b      	lsls	r3, r3, #5
 8015bba:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8015bbe:	7993      	ldrb	r3, [r2, #6]
 8015bc0:	430b      	orrs	r3, r1
 8015bc2:	005b      	lsls	r3, r3, #1
 8015bc4:	2105      	movs	r1, #5
 8015bc6:	fb93 f3f1 	sdiv	r3, r3, r1
 8015bca:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8015bce:	440b      	add	r3, r1
 8015bd0:	e756      	b.n	8015a80 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8015bd2:	f240 60e2 	movw	r0, #1762	; 0x6e2
 8015bd6:	4283      	cmp	r3, r0
 8015bd8:	d809      	bhi.n	8015bee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 8015bda:	f240 60df 	movw	r0, #1759	; 0x6df
 8015bde:	4283      	cmp	r3, r0
 8015be0:	f4bf af7d 	bcs.w	8015ade <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8015be4:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 8015be8:	2b05      	cmp	r3, #5
 8015bea:	d8d4      	bhi.n	8015b96 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8015bec:	e777      	b.n	8015ade <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8015bee:	f240 60e3 	movw	r0, #1763	; 0x6e3
 8015bf2:	4283      	cmp	r3, r0
 8015bf4:	d09a      	beq.n	8015b2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8015bf6:	f240 60e4 	movw	r0, #1764	; 0x6e4
 8015bfa:	4283      	cmp	r3, r0
 8015bfc:	e7ca      	b.n	8015b94 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8015bfe:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 8015c02:	d22b      	bcs.n	8015c5c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8015c04:	f640 00ed 	movw	r0, #2285	; 0x8ed
 8015c08:	4283      	cmp	r3, r0
 8015c0a:	d28f      	bcs.n	8015b2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8015c0c:	f640 00e5 	movw	r0, #2277	; 0x8e5
 8015c10:	4283      	cmp	r3, r0
 8015c12:	d816      	bhi.n	8015c42 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8015c14:	f640 00e4 	movw	r0, #2276	; 0x8e4
 8015c18:	4283      	cmp	r3, r0
 8015c1a:	f4bf af60 	bcs.w	8015ade <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8015c1e:	f240 60ec 	movw	r0, #1772	; 0x6ec
 8015c22:	4283      	cmp	r3, r0
 8015c24:	d80a      	bhi.n	8015c3c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 8015c26:	f240 60eb 	movw	r0, #1771	; 0x6eb
 8015c2a:	4283      	cmp	r3, r0
 8015c2c:	f4bf af57 	bcs.w	8015ade <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8015c30:	f240 60ea 	movw	r0, #1770	; 0x6ea
 8015c34:	4283      	cmp	r3, r0
 8015c36:	f43f af79 	beq.w	8015b2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8015c3a:	e7ac      	b.n	8015b96 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8015c3c:	f240 60ed 	movw	r0, #1773	; 0x6ed
 8015c40:	e7f8      	b.n	8015c34 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 8015c42:	f640 00e8 	movw	r0, #2280	; 0x8e8
 8015c46:	4283      	cmp	r3, r0
 8015c48:	d802      	bhi.n	8015c50 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 8015c4a:	f640 00e7 	movw	r0, #2279	; 0x8e7
 8015c4e:	e798      	b.n	8015b82 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8015c50:	f640 00e9 	movw	r0, #2281	; 0x8e9
 8015c54:	4283      	cmp	r3, r0
 8015c56:	f47f af42 	bne.w	8015ade <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8015c5a:	e767      	b.n	8015b2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8015c5c:	f640 00f6 	movw	r0, #2294	; 0x8f6
 8015c60:	4283      	cmp	r3, r0
 8015c62:	f43f af63 	beq.w	8015b2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8015c66:	d802      	bhi.n	8015c6e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8015c68:	f640 00f2 	movw	r0, #2290	; 0x8f2
 8015c6c:	e7f2      	b.n	8015c54 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 8015c6e:	f640 00fa 	movw	r0, #2298	; 0x8fa
 8015c72:	4283      	cmp	r3, r0
 8015c74:	d805      	bhi.n	8015c82 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 8015c76:	f640 00f9 	movw	r0, #2297	; 0x8f9
 8015c7a:	4283      	cmp	r3, r0
 8015c7c:	f4ff af2f 	bcc.w	8015ade <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8015c80:	e754      	b.n	8015b2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8015c82:	f640 00fe 	movw	r0, #2302	; 0x8fe
 8015c86:	4283      	cmp	r3, r0
 8015c88:	e7af      	b.n	8015bea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 8015c8a:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8015c8e:	4617      	mov	r7, r2
 8015c90:	f102 0808 	add.w	r8, r2, #8
 8015c94:	4666      	mov	r6, ip
 8015c96:	6838      	ldr	r0, [r7, #0]
 8015c98:	6879      	ldr	r1, [r7, #4]
 8015c9a:	46e6      	mov	lr, ip
 8015c9c:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8015ca0:	3708      	adds	r7, #8
 8015ca2:	4547      	cmp	r7, r8
 8015ca4:	46f4      	mov	ip, lr
 8015ca6:	d1f6      	bne.n	8015c96 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8015ca8:	6838      	ldr	r0, [r7, #0]
 8015caa:	f8ce 0000 	str.w	r0, [lr]
 8015cae:	88b9      	ldrh	r1, [r7, #4]
 8015cb0:	f8ae 1004 	strh.w	r1, [lr, #4]
 8015cb4:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8015cb8:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8015cbc:	d009      	beq.n	8015cd2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 8015cbe:	7b51      	ldrb	r1, [r2, #13]
 8015cc0:	7992      	ldrb	r2, [r2, #6]
 8015cc2:	0149      	lsls	r1, r1, #5
 8015cc4:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8015cc8:	4311      	orrs	r1, r2
 8015cca:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8015cce:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8015cd2:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8015cd6:	b2ad      	uxth	r5, r5
 8015cd8:	d00d      	beq.n	8015cf6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 8015cda:	442b      	add	r3, r5
 8015cdc:	b29b      	uxth	r3, r3
 8015cde:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8015ce2:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8015ce6:	10db      	asrs	r3, r3, #3
 8015ce8:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8015cec:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8015cf0:	4313      	orrs	r3, r2
 8015cf2:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8015cf6:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8015cfa:	00cb      	lsls	r3, r1, #3
 8015cfc:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8015d00:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8015d04:	064f      	lsls	r7, r1, #25
 8015d06:	ea43 0302 	orr.w	r3, r3, r2
 8015d0a:	bf44      	itt	mi
 8015d0c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8015d10:	b21b      	sxthmi	r3, r3
 8015d12:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8015d16:	1b5b      	subs	r3, r3, r5
 8015d18:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8015d1c:	4632      	mov	r2, r6
 8015d1e:	e6fa      	b.n	8015b16 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8015d20:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8015d24:	4617      	mov	r7, r2
 8015d26:	f102 0908 	add.w	r9, r2, #8
 8015d2a:	4666      	mov	r6, ip
 8015d2c:	6838      	ldr	r0, [r7, #0]
 8015d2e:	6879      	ldr	r1, [r7, #4]
 8015d30:	46e0      	mov	r8, ip
 8015d32:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 8015d36:	3708      	adds	r7, #8
 8015d38:	454f      	cmp	r7, r9
 8015d3a:	46c4      	mov	ip, r8
 8015d3c:	d1f6      	bne.n	8015d2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 8015d3e:	6838      	ldr	r0, [r7, #0]
 8015d40:	f8c8 0000 	str.w	r0, [r8]
 8015d44:	88b9      	ldrh	r1, [r7, #4]
 8015d46:	f8a8 1004 	strh.w	r1, [r8, #4]
 8015d4a:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8015d4e:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8015d52:	d009      	beq.n	8015d68 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 8015d54:	7b51      	ldrb	r1, [r2, #13]
 8015d56:	7992      	ldrb	r2, [r2, #6]
 8015d58:	0149      	lsls	r1, r1, #5
 8015d5a:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8015d5e:	4311      	orrs	r1, r2
 8015d60:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8015d64:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8015d68:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8015d6c:	d00e      	beq.n	8015d8c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 8015d6e:	eba3 030e 	sub.w	r3, r3, lr
 8015d72:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8015d76:	b29b      	uxth	r3, r3
 8015d78:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8015d7c:	10db      	asrs	r3, r3, #3
 8015d7e:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8015d82:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8015d86:	4313      	orrs	r3, r2
 8015d88:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8015d8c:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8015d90:	00cb      	lsls	r3, r1, #3
 8015d92:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8015d96:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8015d9a:	0648      	lsls	r0, r1, #25
 8015d9c:	ea43 0302 	orr.w	r3, r3, r2
 8015da0:	bf44      	itt	mi
 8015da2:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8015da6:	b21b      	sxthmi	r3, r3
 8015da8:	1b5d      	subs	r5, r3, r5
 8015daa:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8015dae:	e7b5      	b.n	8015d1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

08015db0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8015db0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015db4:	461e      	mov	r6, r3
 8015db6:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8015db8:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8015dbc:	4604      	mov	r4, r0
 8015dbe:	4617      	mov	r7, r2
 8015dc0:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8015dc4:	f7f0 feac 	bl	8006b20 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8015dc8:	4605      	mov	r5, r0
 8015dca:	b918      	cbnz	r0, 8015dd4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 8015dcc:	6030      	str	r0, [r6, #0]
 8015dce:	4628      	mov	r0, r5
 8015dd0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8015dd4:	683b      	ldr	r3, [r7, #0]
 8015dd6:	4601      	mov	r1, r0
 8015dd8:	68db      	ldr	r3, [r3, #12]
 8015dda:	4638      	mov	r0, r7
 8015ddc:	4798      	blx	r3
 8015dde:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8015de2:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8015de6:	4602      	mov	r2, r0
 8015de8:	6030      	str	r0, [r6, #0]
 8015dea:	d213      	bcs.n	8015e14 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 8015dec:	4643      	mov	r3, r8
 8015dee:	4639      	mov	r1, r7
 8015df0:	4620      	mov	r0, r4
 8015df2:	f7ff fe3b 	bl	8015a6c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8015df6:	6030      	str	r0, [r6, #0]
 8015df8:	6833      	ldr	r3, [r6, #0]
 8015dfa:	b143      	cbz	r3, 8015e0e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 8015dfc:	7b5a      	ldrb	r2, [r3, #13]
 8015dfe:	7a9b      	ldrb	r3, [r3, #10]
 8015e00:	0052      	lsls	r2, r2, #1
 8015e02:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8015e06:	4313      	orrs	r3, r2
 8015e08:	bf0c      	ite	eq
 8015e0a:	2301      	moveq	r3, #1
 8015e0c:	2300      	movne	r3, #0
 8015e0e:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8015e12:	e7dc      	b.n	8015dce <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 8015e14:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8015e18:	b29b      	uxth	r3, r3
 8015e1a:	2b7f      	cmp	r3, #127	; 0x7f
 8015e1c:	d804      	bhi.n	8015e28 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 8015e1e:	4639      	mov	r1, r7
 8015e20:	4620      	mov	r0, r4
 8015e22:	f7ff fd17 	bl	8015854 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8015e26:	e7e6      	b.n	8015df6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 8015e28:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8015e2c:	2b00      	cmp	r3, #0
 8015e2e:	d0e3      	beq.n	8015df8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8015e30:	f640 1302 	movw	r3, #2306	; 0x902
 8015e34:	429d      	cmp	r5, r3
 8015e36:	d1df      	bne.n	8015df8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8015e38:	4601      	mov	r1, r0
 8015e3a:	4620      	mov	r0, r4
 8015e3c:	f7ff fcdb 	bl	80157f6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8015e40:	e7d9      	b.n	8015df6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

08015e42 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 8015e42:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8015e46:	461e      	mov	r6, r3
 8015e48:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8015e4a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8015e4e:	4604      	mov	r4, r0
 8015e50:	4617      	mov	r7, r2
 8015e52:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8015e56:	f7f0 fe63 	bl	8006b20 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8015e5a:	4605      	mov	r5, r0
 8015e5c:	b918      	cbnz	r0, 8015e66 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 8015e5e:	6030      	str	r0, [r6, #0]
 8015e60:	4628      	mov	r0, r5
 8015e62:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8015e66:	683b      	ldr	r3, [r7, #0]
 8015e68:	4601      	mov	r1, r0
 8015e6a:	f8d3 9008 	ldr.w	r9, [r3, #8]
 8015e6e:	4638      	mov	r0, r7
 8015e70:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8015e74:	47c8      	blx	r9
 8015e76:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8015e7a:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8015e7e:	4602      	mov	r2, r0
 8015e80:	6030      	str	r0, [r6, #0]
 8015e82:	d213      	bcs.n	8015eac <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 8015e84:	4643      	mov	r3, r8
 8015e86:	4639      	mov	r1, r7
 8015e88:	4620      	mov	r0, r4
 8015e8a:	f7ff fdef 	bl	8015a6c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8015e8e:	6030      	str	r0, [r6, #0]
 8015e90:	6833      	ldr	r3, [r6, #0]
 8015e92:	b143      	cbz	r3, 8015ea6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 8015e94:	7b5a      	ldrb	r2, [r3, #13]
 8015e96:	7a9b      	ldrb	r3, [r3, #10]
 8015e98:	0052      	lsls	r2, r2, #1
 8015e9a:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8015e9e:	4313      	orrs	r3, r2
 8015ea0:	bf0c      	ite	eq
 8015ea2:	2301      	moveq	r3, #1
 8015ea4:	2300      	movne	r3, #0
 8015ea6:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8015eaa:	e7d9      	b.n	8015e60 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 8015eac:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8015eb0:	b29b      	uxth	r3, r3
 8015eb2:	2b7f      	cmp	r3, #127	; 0x7f
 8015eb4:	d804      	bhi.n	8015ec0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 8015eb6:	4639      	mov	r1, r7
 8015eb8:	4620      	mov	r0, r4
 8015eba:	f7ff fccb 	bl	8015854 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8015ebe:	e7e6      	b.n	8015e8e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 8015ec0:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8015ec4:	2b00      	cmp	r3, #0
 8015ec6:	d0e3      	beq.n	8015e90 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8015ec8:	f640 1302 	movw	r3, #2306	; 0x902
 8015ecc:	429d      	cmp	r5, r3
 8015ece:	d1df      	bne.n	8015e90 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8015ed0:	4601      	mov	r1, r0
 8015ed2:	4620      	mov	r0, r4
 8015ed4:	f7ff fc8f 	bl	80157f6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8015ed8:	e7d9      	b.n	8015e8e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

08015eda <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 8015eda:	b510      	push	{r4, lr}
 8015edc:	4604      	mov	r4, r0
 8015ede:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 8015ee2:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8015ee4:	b1f1      	cbz	r1, 8015f24 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8015ee6:	2b0a      	cmp	r3, #10
 8015ee8:	d02f      	beq.n	8015f4a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8015eea:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 8015eec:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8015ef0:	3901      	subs	r1, #1
 8015ef2:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 8015ef4:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 8015ef8:	1c51      	adds	r1, r2, #1
 8015efa:	b289      	uxth	r1, r1
 8015efc:	2901      	cmp	r1, #1
 8015efe:	bf84      	itt	hi
 8015f00:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8015f04:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 8015f06:	f103 0201 	add.w	r2, r3, #1
 8015f0a:	8722      	strh	r2, [r4, #56]	; 0x38
 8015f0c:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8015f0e:	bf98      	it	ls
 8015f10:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 8015f12:	4413      	add	r3, r2
 8015f14:	b29b      	uxth	r3, r3
 8015f16:	2b09      	cmp	r3, #9
 8015f18:	bf88      	it	hi
 8015f1a:	3b0a      	subhi	r3, #10
 8015f1c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8015f20:	8458      	strh	r0, [r3, #34]	; 0x22
 8015f22:	e7dc      	b.n	8015ede <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8015f24:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8015f26:	2b0a      	cmp	r3, #10
 8015f28:	d00f      	beq.n	8015f4a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8015f2a:	4620      	mov	r0, r4
 8015f2c:	f7ff fc11 	bl	8015752 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8015f30:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8015f32:	1c5a      	adds	r2, r3, #1
 8015f34:	8722      	strh	r2, [r4, #56]	; 0x38
 8015f36:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8015f38:	4413      	add	r3, r2
 8015f3a:	b29b      	uxth	r3, r3
 8015f3c:	2b09      	cmp	r3, #9
 8015f3e:	bf88      	it	hi
 8015f40:	3b0a      	subhi	r3, #10
 8015f42:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8015f46:	8458      	strh	r0, [r3, #34]	; 0x22
 8015f48:	e7ec      	b.n	8015f24 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8015f4a:	bd10      	pop	{r4, pc}

08015f4c <_ZN8touchgfx12TextProvider11getNextCharEv>:
 8015f4c:	b538      	push	{r3, r4, r5, lr}
 8015f4e:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8015f50:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 8015f54:	4604      	mov	r4, r0
 8015f56:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 8015f58:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 8015f5a:	3a01      	subs	r2, #1
 8015f5c:	8702      	strh	r2, [r0, #56]	; 0x38
 8015f5e:	1c5a      	adds	r2, r3, #1
 8015f60:	b292      	uxth	r2, r2
 8015f62:	2a09      	cmp	r2, #9
 8015f64:	bf86      	itte	hi
 8015f66:	3b09      	subhi	r3, #9
 8015f68:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 8015f6a:	86c2      	strhls	r2, [r0, #54]	; 0x36
 8015f6c:	f7ff ffb5 	bl	8015eda <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8015f70:	8c23      	ldrh	r3, [r4, #32]
 8015f72:	2b01      	cmp	r3, #1
 8015f74:	bf9c      	itt	ls
 8015f76:	3301      	addls	r3, #1
 8015f78:	8423      	strhls	r3, [r4, #32]
 8015f7a:	8be3      	ldrh	r3, [r4, #30]
 8015f7c:	b90b      	cbnz	r3, 8015f82 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 8015f7e:	2302      	movs	r3, #2
 8015f80:	83e3      	strh	r3, [r4, #30]
 8015f82:	8be3      	ldrh	r3, [r4, #30]
 8015f84:	3b01      	subs	r3, #1
 8015f86:	b29b      	uxth	r3, r3
 8015f88:	83e3      	strh	r3, [r4, #30]
 8015f8a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015f8e:	4628      	mov	r0, r5
 8015f90:	8365      	strh	r5, [r4, #26]
 8015f92:	bd38      	pop	{r3, r4, r5, pc}

08015f94 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8015f94:	428a      	cmp	r2, r1
 8015f96:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8015f9a:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 8015f9c:	d931      	bls.n	8016002 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 8015f9e:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 8015fa0:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 8015fa4:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 8015fa8:	19ee      	adds	r6, r5, r7
 8015faa:	1a54      	subs	r4, r2, r1
 8015fac:	3e01      	subs	r6, #1
 8015fae:	fa1f fe84 	uxth.w	lr, r4
 8015fb2:	b2b4      	uxth	r4, r6
 8015fb4:	eba4 090e 	sub.w	r9, r4, lr
 8015fb8:	fa1f f989 	uxth.w	r9, r9
 8015fbc:	2c09      	cmp	r4, #9
 8015fbe:	4626      	mov	r6, r4
 8015fc0:	bf88      	it	hi
 8015fc2:	f1a4 060a 	subhi.w	r6, r4, #10
 8015fc6:	f1bc 0f00 	cmp.w	ip, #0
 8015fca:	bf08      	it	eq
 8015fcc:	f04f 0c02 	moveq.w	ip, #2
 8015fd0:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8015fd4:	f10c 3cff 	add.w	ip, ip, #4294967295
 8015fd8:	fa1f fc8c 	uxth.w	ip, ip
 8015fdc:	3c01      	subs	r4, #1
 8015fde:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 8015fe2:	b2a4      	uxth	r4, r4
 8015fe4:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8015fe8:	454c      	cmp	r4, r9
 8015fea:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 8015fee:	d1e5      	bne.n	8015fbc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 8015ff0:	eba5 050e 	sub.w	r5, r5, lr
 8015ff4:	eb0e 0408 	add.w	r4, lr, r8
 8015ff8:	8705      	strh	r5, [r0, #56]	; 0x38
 8015ffa:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 8015ffe:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 8016002:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 8016004:	1a64      	subs	r4, r4, r1
 8016006:	4439      	add	r1, r7
 8016008:	b289      	uxth	r1, r1
 801600a:	2909      	cmp	r1, #9
 801600c:	bf88      	it	hi
 801600e:	390a      	subhi	r1, #10
 8016010:	8704      	strh	r4, [r0, #56]	; 0x38
 8016012:	86c1      	strh	r1, [r0, #54]	; 0x36
 8016014:	250a      	movs	r5, #10
 8016016:	b18a      	cbz	r2, 801603c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 8016018:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 801601a:	3a01      	subs	r2, #1
 801601c:	b292      	uxth	r2, r2
 801601e:	3101      	adds	r1, #1
 8016020:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 8016024:	8701      	strh	r1, [r0, #56]	; 0x38
 8016026:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8016028:	b901      	cbnz	r1, 801602c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 801602a:	86c5      	strh	r5, [r0, #54]	; 0x36
 801602c:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 801602e:	3901      	subs	r1, #1
 8016030:	b289      	uxth	r1, r1
 8016032:	86c1      	strh	r1, [r0, #54]	; 0x36
 8016034:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8016038:	844c      	strh	r4, [r1, #34]	; 0x22
 801603a:	e7ec      	b.n	8016016 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 801603c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8016040:	f7ff bf4b 	b.w	8015eda <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08016044 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 8016044:	b570      	push	{r4, r5, r6, lr}
 8016046:	2500      	movs	r5, #0
 8016048:	4295      	cmp	r5, r2
 801604a:	d011      	beq.n	8016070 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 801604c:	8bc4      	ldrh	r4, [r0, #30]
 801604e:	f831 6b02 	ldrh.w	r6, [r1], #2
 8016052:	4414      	add	r4, r2
 8016054:	3c01      	subs	r4, #1
 8016056:	1b64      	subs	r4, r4, r5
 8016058:	b2a4      	uxth	r4, r4
 801605a:	2c01      	cmp	r4, #1
 801605c:	bf88      	it	hi
 801605e:	3c02      	subhi	r4, #2
 8016060:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8016064:	8b64      	ldrh	r4, [r4, #26]
 8016066:	42b4      	cmp	r4, r6
 8016068:	d117      	bne.n	801609a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 801606a:	3501      	adds	r5, #1
 801606c:	b2ad      	uxth	r5, r5
 801606e:	e7eb      	b.n	8016048 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 8016070:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8016074:	2400      	movs	r4, #0
 8016076:	4413      	add	r3, r2
 8016078:	b2a2      	uxth	r2, r4
 801607a:	429a      	cmp	r2, r3
 801607c:	da0f      	bge.n	801609e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 801607e:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 8016080:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 8016084:	4432      	add	r2, r6
 8016086:	b292      	uxth	r2, r2
 8016088:	2a09      	cmp	r2, #9
 801608a:	bf88      	it	hi
 801608c:	3a0a      	subhi	r2, #10
 801608e:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8016092:	3401      	adds	r4, #1
 8016094:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 8016096:	42aa      	cmp	r2, r5
 8016098:	d0ee      	beq.n	8016078 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 801609a:	2000      	movs	r0, #0
 801609c:	bd70      	pop	{r4, r5, r6, pc}
 801609e:	2001      	movs	r0, #1
 80160a0:	e7fc      	b.n	801609c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

080160a2 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 80160a2:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80160a6:	4605      	mov	r5, r0
 80160a8:	4616      	mov	r6, r2
 80160aa:	1c8c      	adds	r4, r1, #2
 80160ac:	8809      	ldrh	r1, [r1, #0]
 80160ae:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 80160b2:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 80160b6:	42b3      	cmp	r3, r6
 80160b8:	d124      	bne.n	8016104 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 80160ba:	f3c1 2903 	ubfx	r9, r1, #8, #4
 80160be:	f3c1 1803 	ubfx	r8, r1, #4, #4
 80160c2:	f001 070f 	and.w	r7, r1, #15
 80160c6:	f8cd 8000 	str.w	r8, [sp]
 80160ca:	464b      	mov	r3, r9
 80160cc:	4652      	mov	r2, sl
 80160ce:	4621      	mov	r1, r4
 80160d0:	4628      	mov	r0, r5
 80160d2:	f7ff ffb7 	bl	8016044 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 80160d6:	4683      	mov	fp, r0
 80160d8:	b168      	cbz	r0, 80160f6 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 80160da:	eb0a 0109 	add.w	r1, sl, r9
 80160de:	4441      	add	r1, r8
 80160e0:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 80160e4:	463a      	mov	r2, r7
 80160e6:	4649      	mov	r1, r9
 80160e8:	4628      	mov	r0, r5
 80160ea:	f7ff ff53 	bl	8015f94 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 80160ee:	4658      	mov	r0, fp
 80160f0:	b003      	add	sp, #12
 80160f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80160f6:	eb07 010a 	add.w	r1, r7, sl
 80160fa:	4449      	add	r1, r9
 80160fc:	4441      	add	r1, r8
 80160fe:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8016102:	e7d2      	b.n	80160aa <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8016104:	f04f 0b00 	mov.w	fp, #0
 8016108:	e7f1      	b.n	80160ee <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0801610a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 801610a:	b570      	push	{r4, r5, r6, lr}
 801610c:	8810      	ldrh	r0, [r2, #0]
 801610e:	4298      	cmp	r0, r3
 8016110:	d817      	bhi.n	8016142 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8016112:	1e48      	subs	r0, r1, #1
 8016114:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8016118:	4298      	cmp	r0, r3
 801611a:	d312      	bcc.n	8016142 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801611c:	2400      	movs	r4, #0
 801611e:	428c      	cmp	r4, r1
 8016120:	d20f      	bcs.n	8016142 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8016122:	1860      	adds	r0, r4, r1
 8016124:	1040      	asrs	r0, r0, #1
 8016126:	0085      	lsls	r5, r0, #2
 8016128:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 801612c:	42b3      	cmp	r3, r6
 801612e:	d902      	bls.n	8016136 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8016130:	3001      	adds	r0, #1
 8016132:	b284      	uxth	r4, r0
 8016134:	e7f3      	b.n	801611e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8016136:	d201      	bcs.n	801613c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8016138:	b281      	uxth	r1, r0
 801613a:	e7f0      	b.n	801611e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801613c:	442a      	add	r2, r5
 801613e:	8850      	ldrh	r0, [r2, #2]
 8016140:	bd70      	pop	{r4, r5, r6, pc}
 8016142:	2000      	movs	r0, #0
 8016144:	e7fc      	b.n	8016140 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

08016146 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 8016146:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801614a:	6c45      	ldr	r5, [r0, #68]	; 0x44
 801614c:	886f      	ldrh	r7, [r5, #2]
 801614e:	4604      	mov	r4, r0
 8016150:	087f      	lsrs	r7, r7, #1
 8016152:	260b      	movs	r6, #11
 8016154:	3e01      	subs	r6, #1
 8016156:	d013      	beq.n	8016180 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8016158:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801615a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801615e:	462a      	mov	r2, r5
 8016160:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8016164:	4639      	mov	r1, r7
 8016166:	4643      	mov	r3, r8
 8016168:	4620      	mov	r0, r4
 801616a:	f7ff ffce 	bl	801610a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 801616e:	b138      	cbz	r0, 8016180 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8016170:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 8016174:	4642      	mov	r2, r8
 8016176:	4620      	mov	r0, r4
 8016178:	f7ff ff93 	bl	80160a2 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 801617c:	2800      	cmp	r0, #0
 801617e:	d1e9      	bne.n	8016154 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8016180:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08016184 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8016184:	b570      	push	{r4, r5, r6, lr}
 8016186:	694a      	ldr	r2, [r1, #20]
 8016188:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 801618a:	684b      	ldr	r3, [r1, #4]
 801618c:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 801618e:	1b54      	subs	r4, r2, r5
 8016190:	f000 8106 	beq.w	80163a0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8016194:	1b9b      	subs	r3, r3, r6
 8016196:	d003      	beq.n	80161a0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8016198:	4363      	muls	r3, r4
 801619a:	2210      	movs	r2, #16
 801619c:	fb93 f3f2 	sdiv	r3, r3, r2
 80161a0:	680c      	ldr	r4, [r1, #0]
 80161a2:	698a      	ldr	r2, [r1, #24]
 80161a4:	1b65      	subs	r5, r4, r5
 80161a6:	f000 80fd 	beq.w	80163a4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 80161aa:	1b92      	subs	r2, r2, r6
 80161ac:	d003      	beq.n	80161b6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80161ae:	436a      	muls	r2, r5
 80161b0:	2410      	movs	r4, #16
 80161b2:	fb92 f2f4 	sdiv	r2, r2, r4
 80161b6:	1a9b      	subs	r3, r3, r2
 80161b8:	ee07 3a90 	vmov	s15, r3
 80161bc:	ed9f 4a88 	vldr	s8, [pc, #544]	; 80163e0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 80161c0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80161c4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80161c8:	ee67 7a84 	vmul.f32	s15, s15, s8
 80161cc:	460a      	mov	r2, r1
 80161ce:	ee87 3a27 	vdiv.f32	s6, s14, s15
 80161d2:	4603      	mov	r3, r0
 80161d4:	f100 040c 	add.w	r4, r0, #12
 80161d8:	eeb1 6a43 	vneg.f32	s12, s6
 80161dc:	edd2 7a02 	vldr	s15, [r2, #8]
 80161e0:	eec7 6a27 	vdiv.f32	s13, s14, s15
 80161e4:	3214      	adds	r2, #20
 80161e6:	ece3 6a01 	vstmia	r3!, {s13}
 80161ea:	ed52 7a02 	vldr	s15, [r2, #-8]
 80161ee:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80161f2:	429c      	cmp	r4, r3
 80161f4:	edc3 7a02 	vstr	s15, [r3, #8]
 80161f8:	ed52 7a01 	vldr	s15, [r2, #-4]
 80161fc:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8016200:	edc3 7a05 	vstr	s15, [r3, #20]
 8016204:	d1ea      	bne.n	80161dc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 8016206:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8016208:	698b      	ldr	r3, [r1, #24]
 801620a:	edd0 4a02 	vldr	s9, [r0, #8]
 801620e:	edd0 3a00 	vldr	s7, [r0]
 8016212:	edd0 6a01 	vldr	s13, [r0, #4]
 8016216:	ed90 5a05 	vldr	s10, [r0, #20]
 801621a:	ed90 2a03 	vldr	s4, [r0, #12]
 801621e:	edd0 5a04 	vldr	s11, [r0, #16]
 8016222:	ed90 1a07 	vldr	s2, [r0, #28]
 8016226:	edd0 2a06 	vldr	s5, [r0, #24]
 801622a:	1a9b      	subs	r3, r3, r2
 801622c:	ee07 3a90 	vmov	s15, r3
 8016230:	684b      	ldr	r3, [r1, #4]
 8016232:	1a9b      	subs	r3, r3, r2
 8016234:	ee07 3a10 	vmov	s14, r3
 8016238:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801623c:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8016240:	ee67 7a84 	vmul.f32	s15, s15, s8
 8016244:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8016248:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801624c:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8016250:	ee27 7a04 	vmul.f32	s14, s14, s8
 8016254:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8016258:	eee6 7a87 	vfma.f32	s15, s13, s14
 801625c:	ee32 5a45 	vsub.f32	s10, s4, s10
 8016260:	ee67 7a83 	vmul.f32	s15, s15, s6
 8016264:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 8016268:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801626a:	694a      	ldr	r2, [r1, #20]
 801626c:	1b13      	subs	r3, r2, r4
 801626e:	ee07 3a10 	vmov	s14, r3
 8016272:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8016276:	680b      	ldr	r3, [r1, #0]
 8016278:	ee27 7a04 	vmul.f32	s14, s14, s8
 801627c:	1b1b      	subs	r3, r3, r4
 801627e:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 8016282:	ee07 3a10 	vmov	s14, r3
 8016286:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801628a:	ee27 7a04 	vmul.f32	s14, s14, s8
 801628e:	eee6 4a87 	vfma.f32	s9, s13, s14
 8016292:	ee64 4a86 	vmul.f32	s9, s9, s12
 8016296:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 801629a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801629c:	698b      	ldr	r3, [r1, #24]
 801629e:	1a9b      	subs	r3, r3, r2
 80162a0:	ee06 3a90 	vmov	s13, r3
 80162a4:	684b      	ldr	r3, [r1, #4]
 80162a6:	1a9b      	subs	r3, r3, r2
 80162a8:	ee07 3a10 	vmov	s14, r3
 80162ac:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80162b0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80162b4:	ee66 6a84 	vmul.f32	s13, s13, s8
 80162b8:	ee27 7a04 	vmul.f32	s14, s14, s8
 80162bc:	ee65 6a66 	vnmul.f32	s13, s10, s13
 80162c0:	eee5 6a87 	vfma.f32	s13, s11, s14
 80162c4:	ee66 6a83 	vmul.f32	s13, s13, s6
 80162c8:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 80162cc:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 80162ce:	694a      	ldr	r2, [r1, #20]
 80162d0:	1b13      	subs	r3, r2, r4
 80162d2:	ee07 3a10 	vmov	s14, r3
 80162d6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80162da:	680b      	ldr	r3, [r1, #0]
 80162dc:	ee27 7a04 	vmul.f32	s14, s14, s8
 80162e0:	1b1b      	subs	r3, r3, r4
 80162e2:	ee25 5a47 	vnmul.f32	s10, s10, s14
 80162e6:	ee07 3a10 	vmov	s14, r3
 80162ea:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80162ee:	ee27 7a04 	vmul.f32	s14, s14, s8
 80162f2:	eea5 5a87 	vfma.f32	s10, s11, s14
 80162f6:	edd0 5a08 	vldr	s11, [r0, #32]
 80162fa:	ee25 5a06 	vmul.f32	s10, s10, s12
 80162fe:	ee31 1a65 	vsub.f32	s2, s2, s11
 8016302:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 8016306:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8016308:	698b      	ldr	r3, [r1, #24]
 801630a:	1a9b      	subs	r3, r3, r2
 801630c:	ee07 3a10 	vmov	s14, r3
 8016310:	684b      	ldr	r3, [r1, #4]
 8016312:	1a9b      	subs	r3, r3, r2
 8016314:	ee01 3a90 	vmov	s3, r3
 8016318:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801631c:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8016320:	ee27 7a04 	vmul.f32	s14, s14, s8
 8016324:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8016328:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 801632c:	ee61 1a84 	vmul.f32	s3, s3, s8
 8016330:	eea1 7a21 	vfma.f32	s14, s2, s3
 8016334:	ee27 7a03 	vmul.f32	s14, s14, s6
 8016338:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 801633c:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801633e:	694a      	ldr	r2, [r1, #20]
 8016340:	1b13      	subs	r3, r2, r4
 8016342:	ee03 3a10 	vmov	s6, r3
 8016346:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801634a:	680b      	ldr	r3, [r1, #0]
 801634c:	ee23 3a04 	vmul.f32	s6, s6, s8
 8016350:	1b1b      	subs	r3, r3, r4
 8016352:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 8016356:	ee03 3a10 	vmov	s6, r3
 801635a:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801635e:	ee23 4a04 	vmul.f32	s8, s6, s8
 8016362:	eee1 5a04 	vfma.f32	s11, s2, s8
 8016366:	ee25 6a86 	vmul.f32	s12, s11, s12
 801636a:	ee62 5a67 	vnmul.f32	s11, s4, s15
 801636e:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 8016372:	eee3 5aa6 	vfma.f32	s11, s7, s13
 8016376:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 801637a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801637e:	dd13      	ble.n	80163a8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 8016380:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8016384:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8016388:	63c3      	str	r3, [r0, #60]	; 0x3c
 801638a:	eee3 7a87 	vfma.f32	s15, s7, s14
 801638e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016392:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016396:	dd15      	ble.n	80163c4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8016398:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801639c:	6403      	str	r3, [r0, #64]	; 0x40
 801639e:	bd70      	pop	{r4, r5, r6, pc}
 80163a0:	4623      	mov	r3, r4
 80163a2:	e6fd      	b.n	80161a0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 80163a4:	462a      	mov	r2, r5
 80163a6:	e706      	b.n	80161b6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80163a8:	d502      	bpl.n	80163b0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 80163aa:	f647 73ff 	movw	r3, #32767	; 0x7fff
 80163ae:	e7e9      	b.n	8016384 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 80163b0:	ee22 2a64 	vnmul.f32	s4, s4, s9
 80163b4:	eea3 2a85 	vfma.f32	s4, s7, s10
 80163b8:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 80163bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80163c0:	dade      	bge.n	8016380 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 80163c2:	e7f2      	b.n	80163aa <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 80163c4:	d502      	bpl.n	80163cc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 80163c6:	f647 73ff 	movw	r3, #32767	; 0x7fff
 80163ca:	e7e7      	b.n	801639c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 80163cc:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 80163d0:	eee3 4a86 	vfma.f32	s9, s7, s12
 80163d4:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 80163d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80163dc:	dadc      	bge.n	8016398 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 80163de:	e7f2      	b.n	80163c6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 80163e0:	3d800000 	.word	0x3d800000

080163e4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 80163e4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80163e8:	2714      	movs	r7, #20
 80163ea:	435f      	muls	r7, r3
 80163ec:	eb02 0c07 	add.w	ip, r2, r7
 80163f0:	f8dc 5004 	ldr.w	r5, [ip, #4]
 80163f4:	f115 0e0f 	adds.w	lr, r5, #15
 80163f8:	f100 80a2 	bmi.w	8016540 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 80163fc:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8016400:	9c08      	ldr	r4, [sp, #32]
 8016402:	f8c0 e014 	str.w	lr, [r0, #20]
 8016406:	2614      	movs	r6, #20
 8016408:	4366      	muls	r6, r4
 801640a:	eb02 0806 	add.w	r8, r2, r6
 801640e:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8016412:	f115 040f 	adds.w	r4, r5, #15
 8016416:	f100 809f 	bmi.w	8016558 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 801641a:	1124      	asrs	r4, r4, #4
 801641c:	eba4 040e 	sub.w	r4, r4, lr
 8016420:	6184      	str	r4, [r0, #24]
 8016422:	2c00      	cmp	r4, #0
 8016424:	f000 808a 	beq.w	801653c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 8016428:	f8dc 9004 	ldr.w	r9, [ip, #4]
 801642c:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8016430:	5995      	ldr	r5, [r2, r6]
 8016432:	eba4 0809 	sub.w	r8, r4, r9
 8016436:	59d4      	ldr	r4, [r2, r7]
 8016438:	eba5 0a04 	sub.w	sl, r5, r4
 801643c:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8016440:	fb0e fe05 	mul.w	lr, lr, r5
 8016444:	fb0a ee19 	mls	lr, sl, r9, lr
 8016448:	fb08 e404 	mla	r4, r8, r4, lr
 801644c:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8016450:	3c01      	subs	r4, #1
 8016452:	19a4      	adds	r4, r4, r6
 8016454:	f100 808c 	bmi.w	8016570 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 8016458:	fb94 fef6 	sdiv	lr, r4, r6
 801645c:	f8c0 e000 	str.w	lr, [r0]
 8016460:	fb06 441e 	mls	r4, r6, lr, r4
 8016464:	6104      	str	r4, [r0, #16]
 8016466:	2d00      	cmp	r5, #0
 8016468:	f2c0 8095 	blt.w	8016596 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 801646c:	fb95 f4f6 	sdiv	r4, r5, r6
 8016470:	6044      	str	r4, [r0, #4]
 8016472:	fb06 5514 	mls	r5, r6, r4, r5
 8016476:	6085      	str	r5, [r0, #8]
 8016478:	60c6      	str	r6, [r0, #12]
 801647a:	f8dc 4004 	ldr.w	r4, [ip, #4]
 801647e:	6945      	ldr	r5, [r0, #20]
 8016480:	59d2      	ldr	r2, [r2, r7]
 8016482:	eddf 6a4d 	vldr	s13, [pc, #308]	; 80165b8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 8016486:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 801648a:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 801648e:	ee07 4a10 	vmov	s14, r4
 8016492:	6804      	ldr	r4, [r0, #0]
 8016494:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8016498:	ee07 2a90 	vmov	s15, r2
 801649c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80164a0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80164a4:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80164a8:	ee27 7a26 	vmul.f32	s14, s14, s13
 80164ac:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80164b0:	edd3 6a00 	vldr	s13, [r3]
 80164b4:	eee6 6a07 	vfma.f32	s13, s12, s14
 80164b8:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 80164bc:	eee6 6a27 	vfma.f32	s13, s12, s15
 80164c0:	edc0 6a07 	vstr	s13, [r0, #28]
 80164c4:	edd0 6a01 	vldr	s13, [r0, #4]
 80164c8:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 80164cc:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 80164d0:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80164d4:	eea6 6aa5 	vfma.f32	s12, s13, s11
 80164d8:	ed80 6a08 	vstr	s12, [r0, #32]
 80164dc:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 80164de:	6242      	str	r2, [r0, #36]	; 0x24
 80164e0:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 80164e4:	ed93 6a03 	vldr	s12, [r3, #12]
 80164e8:	eea5 6a87 	vfma.f32	s12, s11, s14
 80164ec:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 80164f0:	eea5 6aa7 	vfma.f32	s12, s11, s15
 80164f4:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 80164f8:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 80164fc:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 8016500:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8016504:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 8016508:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801650a:	6302      	str	r2, [r0, #48]	; 0x30
 801650c:	ed93 6a06 	vldr	s12, [r3, #24]
 8016510:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 8016514:	eea5 6a87 	vfma.f32	s12, s11, s14
 8016518:	eeb0 7a46 	vmov.f32	s14, s12
 801651c:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 8016520:	eea6 7a27 	vfma.f32	s14, s12, s15
 8016524:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8016528:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 801652c:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 8016530:	eee6 7a87 	vfma.f32	s15, s13, s14
 8016534:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 8016538:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 801653a:	63c3      	str	r3, [r0, #60]	; 0x3c
 801653c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8016540:	f1c5 0501 	rsb	r5, r5, #1
 8016544:	f015 050f 	ands.w	r5, r5, #15
 8016548:	bf18      	it	ne
 801654a:	2501      	movne	r5, #1
 801654c:	2410      	movs	r4, #16
 801654e:	fb9e fef4 	sdiv	lr, lr, r4
 8016552:	ebae 0e05 	sub.w	lr, lr, r5
 8016556:	e753      	b.n	8016400 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8016558:	f1c5 0501 	rsb	r5, r5, #1
 801655c:	f015 050f 	ands.w	r5, r5, #15
 8016560:	bf18      	it	ne
 8016562:	2501      	movne	r5, #1
 8016564:	f04f 0910 	mov.w	r9, #16
 8016568:	fb94 f4f9 	sdiv	r4, r4, r9
 801656c:	1b64      	subs	r4, r4, r5
 801656e:	e755      	b.n	801641c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 8016570:	4264      	negs	r4, r4
 8016572:	fb94 fef6 	sdiv	lr, r4, r6
 8016576:	f1ce 0800 	rsb	r8, lr, #0
 801657a:	fb06 441e 	mls	r4, r6, lr, r4
 801657e:	f8c0 8000 	str.w	r8, [r0]
 8016582:	6104      	str	r4, [r0, #16]
 8016584:	2c00      	cmp	r4, #0
 8016586:	f43f af6e 	beq.w	8016466 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 801658a:	ea6f 0e0e 	mvn.w	lr, lr
 801658e:	f8c0 e000 	str.w	lr, [r0]
 8016592:	1b34      	subs	r4, r6, r4
 8016594:	e766      	b.n	8016464 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 8016596:	426d      	negs	r5, r5
 8016598:	fb95 f4f6 	sdiv	r4, r5, r6
 801659c:	f1c4 0e00 	rsb	lr, r4, #0
 80165a0:	fb06 5514 	mls	r5, r6, r4, r5
 80165a4:	f8c0 e004 	str.w	lr, [r0, #4]
 80165a8:	6085      	str	r5, [r0, #8]
 80165aa:	2d00      	cmp	r5, #0
 80165ac:	f43f af64 	beq.w	8016478 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 80165b0:	43e4      	mvns	r4, r4
 80165b2:	6044      	str	r4, [r0, #4]
 80165b4:	1b75      	subs	r5, r6, r5
 80165b6:	e75e      	b.n	8016476 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 80165b8:	3d800000 	.word	0x3d800000

080165bc <_ZN8touchgfx7Unicode6strlenEPKt>:
 80165bc:	4602      	mov	r2, r0
 80165be:	b148      	cbz	r0, 80165d4 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 80165c0:	2300      	movs	r3, #0
 80165c2:	b298      	uxth	r0, r3
 80165c4:	3301      	adds	r3, #1
 80165c6:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 80165ca:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 80165ce:	2900      	cmp	r1, #0
 80165d0:	d1f7      	bne.n	80165c2 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 80165d2:	4770      	bx	lr
 80165d4:	4770      	bx	lr

080165d6 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 80165d6:	b530      	push	{r4, r5, lr}
 80165d8:	4604      	mov	r4, r0
 80165da:	b159      	cbz	r1, 80165f4 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 80165dc:	b148      	cbz	r0, 80165f2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 80165de:	2300      	movs	r3, #0
 80165e0:	b298      	uxth	r0, r3
 80165e2:	4282      	cmp	r2, r0
 80165e4:	d905      	bls.n	80165f2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 80165e6:	5ccd      	ldrb	r5, [r1, r3]
 80165e8:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 80165ec:	3301      	adds	r3, #1
 80165ee:	2d00      	cmp	r5, #0
 80165f0:	d1f6      	bne.n	80165e0 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 80165f2:	bd30      	pop	{r4, r5, pc}
 80165f4:	4608      	mov	r0, r1
 80165f6:	e7fc      	b.n	80165f2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

080165f8 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 80165f8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80165fa:	b08b      	sub	sp, #44	; 0x2c
 80165fc:	468c      	mov	ip, r1
 80165fe:	2100      	movs	r1, #0
 8016600:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8016604:	4604      	mov	r4, r0
 8016606:	261f      	movs	r6, #31
 8016608:	af01      	add	r7, sp, #4
 801660a:	fb94 fef3 	sdiv	lr, r4, r3
 801660e:	fb03 441e 	mls	r4, r3, lr, r4
 8016612:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 8016616:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 801661a:	b2ec      	uxtb	r4, r5
 801661c:	2d09      	cmp	r5, #9
 801661e:	bfd4      	ite	le
 8016620:	3430      	addle	r4, #48	; 0x30
 8016622:	3457      	addgt	r4, #87	; 0x57
 8016624:	b2e4      	uxtb	r4, r4
 8016626:	55bc      	strb	r4, [r7, r6]
 8016628:	4674      	mov	r4, lr
 801662a:	1e71      	subs	r1, r6, #1
 801662c:	b974      	cbnz	r4, 801664c <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 801662e:	2800      	cmp	r0, #0
 8016630:	da05      	bge.n	801663e <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 8016632:	ab0a      	add	r3, sp, #40	; 0x28
 8016634:	4419      	add	r1, r3
 8016636:	232d      	movs	r3, #45	; 0x2d
 8016638:	f801 3c24 	strb.w	r3, [r1, #-36]
 801663c:	1eb1      	subs	r1, r6, #2
 801663e:	3101      	adds	r1, #1
 8016640:	4439      	add	r1, r7
 8016642:	4660      	mov	r0, ip
 8016644:	f7ff ffc7 	bl	80165d6 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8016648:	b00b      	add	sp, #44	; 0x2c
 801664a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801664c:	460e      	mov	r6, r1
 801664e:	e7dc      	b.n	801660a <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

08016650 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 8016650:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016652:	b08b      	sub	sp, #44	; 0x2c
 8016654:	468c      	mov	ip, r1
 8016656:	2100      	movs	r1, #0
 8016658:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 801665c:	ae01      	add	r6, sp, #4
 801665e:	211f      	movs	r1, #31
 8016660:	fbb0 f7f3 	udiv	r7, r0, r3
 8016664:	fb03 0517 	mls	r5, r3, r7, r0
 8016668:	b2ec      	uxtb	r4, r5
 801666a:	2d09      	cmp	r5, #9
 801666c:	bfd4      	ite	le
 801666e:	3430      	addle	r4, #48	; 0x30
 8016670:	3457      	addgt	r4, #87	; 0x57
 8016672:	b2e4      	uxtb	r4, r4
 8016674:	558c      	strb	r4, [r1, r6]
 8016676:	4638      	mov	r0, r7
 8016678:	1e4c      	subs	r4, r1, #1
 801667a:	b92f      	cbnz	r7, 8016688 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 801667c:	4431      	add	r1, r6
 801667e:	4660      	mov	r0, ip
 8016680:	f7ff ffa9 	bl	80165d6 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8016684:	b00b      	add	sp, #44	; 0x2c
 8016686:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8016688:	4621      	mov	r1, r4
 801668a:	e7e9      	b.n	8016660 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

0801668c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 801668c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016690:	4691      	mov	r9, r2
 8016692:	b085      	sub	sp, #20
 8016694:	6802      	ldr	r2, [r0, #0]
 8016696:	9201      	str	r2, [sp, #4]
 8016698:	4688      	mov	r8, r1
 801669a:	4683      	mov	fp, r0
 801669c:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 80166a0:	9103      	str	r1, [sp, #12]
 80166a2:	4610      	mov	r0, r2
 80166a4:	461c      	mov	r4, r3
 80166a6:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 80166aa:	9302      	str	r3, [sp, #8]
 80166ac:	f7ff ff86 	bl	80165bc <_ZN8touchgfx7Unicode6strlenEPKt>
 80166b0:	f1b8 0f00 	cmp.w	r8, #0
 80166b4:	bf0c      	ite	eq
 80166b6:	4684      	moveq	ip, r0
 80166b8:	f100 0c01 	addne.w	ip, r0, #1
 80166bc:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 80166c0:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 80166c4:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 80166c6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80166c8:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 80166cc:	9903      	ldr	r1, [sp, #12]
 80166ce:	fa1f fc8c 	uxth.w	ip, ip
 80166d2:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 80166d6:	d041      	beq.n	801675c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 80166d8:	d834      	bhi.n	8016744 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 80166da:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 80166de:	d059      	beq.n	8016794 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 80166e0:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 80166e4:	d03a      	beq.n	801675c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 80166e6:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 80166ea:	d034      	beq.n	8016756 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 80166ec:	2400      	movs	r4, #0
 80166ee:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 80166f2:	3a01      	subs	r2, #1
 80166f4:	b169      	cbz	r1, 8016712 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80166f6:	9911      	ldr	r1, [sp, #68]	; 0x44
 80166f8:	458c      	cmp	ip, r1
 80166fa:	da09      	bge.n	8016710 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 80166fc:	eba1 010c 	sub.w	r1, r1, ip
 8016700:	b289      	uxth	r1, r1
 8016702:	b933      	cbnz	r3, 8016712 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8016704:	2e00      	cmp	r6, #0
 8016706:	d051      	beq.n	80167ac <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8016708:	2800      	cmp	r0, #0
 801670a:	d04f      	beq.n	80167ac <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 801670c:	440c      	add	r4, r1
 801670e:	b2a4      	uxth	r4, r4
 8016710:	2100      	movs	r1, #0
 8016712:	682b      	ldr	r3, [r5, #0]
 8016714:	4293      	cmp	r3, r2
 8016716:	da07      	bge.n	8016728 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8016718:	f1b8 0f00 	cmp.w	r8, #0
 801671c:	d004      	beq.n	8016728 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 801671e:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 8016722:	682b      	ldr	r3, [r5, #0]
 8016724:	3301      	adds	r3, #1
 8016726:	602b      	str	r3, [r5, #0]
 8016728:	2730      	movs	r7, #48	; 0x30
 801672a:	2c00      	cmp	r4, #0
 801672c:	d04e      	beq.n	80167cc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801672e:	682e      	ldr	r6, [r5, #0]
 8016730:	3c01      	subs	r4, #1
 8016732:	42b2      	cmp	r2, r6
 8016734:	b2a4      	uxth	r4, r4
 8016736:	dd49      	ble.n	80167cc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8016738:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 801673c:	682b      	ldr	r3, [r5, #0]
 801673e:	3301      	adds	r3, #1
 8016740:	602b      	str	r3, [r5, #0]
 8016742:	e7f2      	b.n	801672a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 8016744:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 8016748:	d01d      	beq.n	8016786 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 801674a:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 801674e:	d002      	beq.n	8016756 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8016750:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 8016754:	e7c9      	b.n	80166ea <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 8016756:	4684      	mov	ip, r0
 8016758:	f04f 0800 	mov.w	r8, #0
 801675c:	2c00      	cmp	r4, #0
 801675e:	d0c6      	beq.n	80166ee <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8016760:	b947      	cbnz	r7, 8016774 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8016762:	2801      	cmp	r0, #1
 8016764:	d106      	bne.n	8016774 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8016766:	8814      	ldrh	r4, [r2, #0]
 8016768:	2c30      	cmp	r4, #48	; 0x30
 801676a:	bf02      	ittt	eq
 801676c:	3202      	addeq	r2, #2
 801676e:	f8cb 2000 	streq.w	r2, [fp]
 8016772:	4638      	moveq	r0, r7
 8016774:	45bc      	cmp	ip, r7
 8016776:	da14      	bge.n	80167a2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 8016778:	b2bf      	uxth	r7, r7
 801677a:	eba7 040c 	sub.w	r4, r7, ip
 801677e:	b2a4      	uxth	r4, r4
 8016780:	46bc      	mov	ip, r7
 8016782:	2600      	movs	r6, #0
 8016784:	e7b3      	b.n	80166ee <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8016786:	4684      	mov	ip, r0
 8016788:	b16c      	cbz	r4, 80167a6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 801678a:	42b8      	cmp	r0, r7
 801678c:	dd00      	ble.n	8016790 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 801678e:	b2b8      	uxth	r0, r7
 8016790:	2400      	movs	r4, #0
 8016792:	e003      	b.n	801679c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 8016794:	f04f 0c01 	mov.w	ip, #1
 8016798:	2400      	movs	r4, #0
 801679a:	4660      	mov	r0, ip
 801679c:	4626      	mov	r6, r4
 801679e:	46a0      	mov	r8, r4
 80167a0:	e7a5      	b.n	80166ee <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80167a2:	2400      	movs	r4, #0
 80167a4:	e7ed      	b.n	8016782 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 80167a6:	4626      	mov	r6, r4
 80167a8:	46a0      	mov	r8, r4
 80167aa:	e7a0      	b.n	80166ee <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80167ac:	2900      	cmp	r1, #0
 80167ae:	d0b0      	beq.n	8016712 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80167b0:	2720      	movs	r7, #32
 80167b2:	682e      	ldr	r6, [r5, #0]
 80167b4:	2900      	cmp	r1, #0
 80167b6:	d0ac      	beq.n	8016712 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80167b8:	3901      	subs	r1, #1
 80167ba:	4296      	cmp	r6, r2
 80167bc:	b289      	uxth	r1, r1
 80167be:	daa7      	bge.n	8016710 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 80167c0:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 80167c4:	682b      	ldr	r3, [r5, #0]
 80167c6:	3301      	adds	r3, #1
 80167c8:	602b      	str	r3, [r5, #0]
 80167ca:	e7f2      	b.n	80167b2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 80167cc:	b188      	cbz	r0, 80167f2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 80167ce:	682b      	ldr	r3, [r5, #0]
 80167d0:	3801      	subs	r0, #1
 80167d2:	429a      	cmp	r2, r3
 80167d4:	b280      	uxth	r0, r0
 80167d6:	dd0c      	ble.n	80167f2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 80167d8:	f8db 3000 	ldr.w	r3, [fp]
 80167dc:	1c9c      	adds	r4, r3, #2
 80167de:	f8cb 4000 	str.w	r4, [fp]
 80167e2:	881c      	ldrh	r4, [r3, #0]
 80167e4:	682b      	ldr	r3, [r5, #0]
 80167e6:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 80167ea:	682b      	ldr	r3, [r5, #0]
 80167ec:	3301      	adds	r3, #1
 80167ee:	602b      	str	r3, [r5, #0]
 80167f0:	e7ec      	b.n	80167cc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 80167f2:	2620      	movs	r6, #32
 80167f4:	b151      	cbz	r1, 801680c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 80167f6:	6828      	ldr	r0, [r5, #0]
 80167f8:	3901      	subs	r1, #1
 80167fa:	4282      	cmp	r2, r0
 80167fc:	b289      	uxth	r1, r1
 80167fe:	dd05      	ble.n	801680c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8016800:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 8016804:	682b      	ldr	r3, [r5, #0]
 8016806:	3301      	adds	r3, #1
 8016808:	602b      	str	r3, [r5, #0]
 801680a:	e7f3      	b.n	80167f4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 801680c:	b005      	add	sp, #20
 801680e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016812 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 8016812:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8016816:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 801681a:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 801681e:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 8016822:	2400      	movs	r4, #0
 8016824:	8014      	strh	r4, [r2, #0]
 8016826:	701c      	strb	r4, [r3, #0]
 8016828:	f888 4000 	strb.w	r4, [r8]
 801682c:	f88c 4000 	strb.w	r4, [ip]
 8016830:	f88e 4000 	strb.w	r4, [lr]
 8016834:	703c      	strb	r4, [r7, #0]
 8016836:	6804      	ldr	r4, [r0, #0]
 8016838:	b1a4      	cbz	r4, 8016864 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 801683a:	8824      	ldrh	r4, [r4, #0]
 801683c:	f04f 0901 	mov.w	r9, #1
 8016840:	b314      	cbz	r4, 8016888 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8016842:	2c2b      	cmp	r4, #43	; 0x2b
 8016844:	d001      	beq.n	801684a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 8016846:	2c20      	cmp	r4, #32
 8016848:	d110      	bne.n	801686c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 801684a:	8014      	strh	r4, [r2, #0]
 801684c:	6804      	ldr	r4, [r0, #0]
 801684e:	b10c      	cbz	r4, 8016854 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 8016850:	3402      	adds	r4, #2
 8016852:	6004      	str	r4, [r0, #0]
 8016854:	680c      	ldr	r4, [r1, #0]
 8016856:	b10c      	cbz	r4, 801685c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 8016858:	3401      	adds	r4, #1
 801685a:	600c      	str	r4, [r1, #0]
 801685c:	6804      	ldr	r4, [r0, #0]
 801685e:	b17c      	cbz	r4, 8016880 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 8016860:	8824      	ldrh	r4, [r4, #0]
 8016862:	e7ed      	b.n	8016840 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8016864:	680c      	ldr	r4, [r1, #0]
 8016866:	b17c      	cbz	r4, 8016888 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8016868:	7824      	ldrb	r4, [r4, #0]
 801686a:	e7e7      	b.n	801683c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 801686c:	2c2d      	cmp	r4, #45	; 0x2d
 801686e:	d102      	bne.n	8016876 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 8016870:	f883 9000 	strb.w	r9, [r3]
 8016874:	e7ea      	b.n	801684c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8016876:	2c23      	cmp	r4, #35	; 0x23
 8016878:	d107      	bne.n	801688a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 801687a:	f888 9000 	strb.w	r9, [r8]
 801687e:	e7e5      	b.n	801684c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8016880:	680c      	ldr	r4, [r1, #0]
 8016882:	b10c      	cbz	r4, 8016888 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8016884:	7824      	ldrb	r4, [r4, #0]
 8016886:	e7db      	b.n	8016840 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8016888:	2400      	movs	r4, #0
 801688a:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 801688e:	2b09      	cmp	r3, #9
 8016890:	d901      	bls.n	8016896 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 8016892:	2c2a      	cmp	r4, #42	; 0x2a
 8016894:	d122      	bne.n	80168dc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8016896:	2301      	movs	r3, #1
 8016898:	2c30      	cmp	r4, #48	; 0x30
 801689a:	f88e 3000 	strb.w	r3, [lr]
 801689e:	d10d      	bne.n	80168bc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 80168a0:	f88c 3000 	strb.w	r3, [ip]
 80168a4:	6803      	ldr	r3, [r0, #0]
 80168a6:	b10b      	cbz	r3, 80168ac <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 80168a8:	3302      	adds	r3, #2
 80168aa:	6003      	str	r3, [r0, #0]
 80168ac:	680b      	ldr	r3, [r1, #0]
 80168ae:	b10b      	cbz	r3, 80168b4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 80168b0:	3301      	adds	r3, #1
 80168b2:	600b      	str	r3, [r1, #0]
 80168b4:	6803      	ldr	r3, [r0, #0]
 80168b6:	2b00      	cmp	r3, #0
 80168b8:	d02f      	beq.n	801691a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 80168ba:	881c      	ldrh	r4, [r3, #0]
 80168bc:	2c2a      	cmp	r4, #42	; 0x2a
 80168be:	d135      	bne.n	801692c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 80168c0:	f04f 33ff 	mov.w	r3, #4294967295
 80168c4:	6033      	str	r3, [r6, #0]
 80168c6:	6803      	ldr	r3, [r0, #0]
 80168c8:	b10b      	cbz	r3, 80168ce <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 80168ca:	3302      	adds	r3, #2
 80168cc:	6003      	str	r3, [r0, #0]
 80168ce:	680b      	ldr	r3, [r1, #0]
 80168d0:	b10b      	cbz	r3, 80168d6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 80168d2:	3301      	adds	r3, #1
 80168d4:	600b      	str	r3, [r1, #0]
 80168d6:	6803      	ldr	r3, [r0, #0]
 80168d8:	b31b      	cbz	r3, 8016922 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 80168da:	881c      	ldrh	r4, [r3, #0]
 80168dc:	2c2e      	cmp	r4, #46	; 0x2e
 80168de:	d11a      	bne.n	8016916 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 80168e0:	2301      	movs	r3, #1
 80168e2:	703b      	strb	r3, [r7, #0]
 80168e4:	6803      	ldr	r3, [r0, #0]
 80168e6:	b10b      	cbz	r3, 80168ec <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 80168e8:	3302      	adds	r3, #2
 80168ea:	6003      	str	r3, [r0, #0]
 80168ec:	680b      	ldr	r3, [r1, #0]
 80168ee:	b10b      	cbz	r3, 80168f4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 80168f0:	3301      	adds	r3, #1
 80168f2:	600b      	str	r3, [r1, #0]
 80168f4:	6803      	ldr	r3, [r0, #0]
 80168f6:	2b00      	cmp	r3, #0
 80168f8:	d036      	beq.n	8016968 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 80168fa:	881b      	ldrh	r3, [r3, #0]
 80168fc:	2b2a      	cmp	r3, #42	; 0x2a
 80168fe:	d137      	bne.n	8016970 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8016900:	f04f 33ff 	mov.w	r3, #4294967295
 8016904:	602b      	str	r3, [r5, #0]
 8016906:	6803      	ldr	r3, [r0, #0]
 8016908:	b10b      	cbz	r3, 801690e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 801690a:	3302      	adds	r3, #2
 801690c:	6003      	str	r3, [r0, #0]
 801690e:	680b      	ldr	r3, [r1, #0]
 8016910:	b10b      	cbz	r3, 8016916 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8016912:	3301      	adds	r3, #1
 8016914:	600b      	str	r3, [r1, #0]
 8016916:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801691a:	680c      	ldr	r4, [r1, #0]
 801691c:	b134      	cbz	r4, 801692c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 801691e:	7824      	ldrb	r4, [r4, #0]
 8016920:	e7cc      	b.n	80168bc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8016922:	680b      	ldr	r3, [r1, #0]
 8016924:	2b00      	cmp	r3, #0
 8016926:	d0f6      	beq.n	8016916 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8016928:	781c      	ldrb	r4, [r3, #0]
 801692a:	e7d7      	b.n	80168dc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801692c:	2300      	movs	r3, #0
 801692e:	6033      	str	r3, [r6, #0]
 8016930:	220a      	movs	r2, #10
 8016932:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 8016936:	fa1f f38c 	uxth.w	r3, ip
 801693a:	2b09      	cmp	r3, #9
 801693c:	d8ce      	bhi.n	80168dc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801693e:	6833      	ldr	r3, [r6, #0]
 8016940:	fb02 c303 	mla	r3, r2, r3, ip
 8016944:	6033      	str	r3, [r6, #0]
 8016946:	6803      	ldr	r3, [r0, #0]
 8016948:	b10b      	cbz	r3, 801694e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 801694a:	3302      	adds	r3, #2
 801694c:	6003      	str	r3, [r0, #0]
 801694e:	680b      	ldr	r3, [r1, #0]
 8016950:	b10b      	cbz	r3, 8016956 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 8016952:	3301      	adds	r3, #1
 8016954:	600b      	str	r3, [r1, #0]
 8016956:	6803      	ldr	r3, [r0, #0]
 8016958:	b10b      	cbz	r3, 801695e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 801695a:	881c      	ldrh	r4, [r3, #0]
 801695c:	e7e9      	b.n	8016932 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801695e:	680c      	ldr	r4, [r1, #0]
 8016960:	2c00      	cmp	r4, #0
 8016962:	d0e6      	beq.n	8016932 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8016964:	7824      	ldrb	r4, [r4, #0]
 8016966:	e7e4      	b.n	8016932 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8016968:	680b      	ldr	r3, [r1, #0]
 801696a:	b10b      	cbz	r3, 8016970 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 801696c:	781b      	ldrb	r3, [r3, #0]
 801696e:	e7c5      	b.n	80168fc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 8016970:	2200      	movs	r2, #0
 8016972:	602a      	str	r2, [r5, #0]
 8016974:	240a      	movs	r4, #10
 8016976:	3b30      	subs	r3, #48	; 0x30
 8016978:	b29e      	uxth	r6, r3
 801697a:	2e09      	cmp	r6, #9
 801697c:	682a      	ldr	r2, [r5, #0]
 801697e:	d813      	bhi.n	80169a8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 8016980:	fb04 3302 	mla	r3, r4, r2, r3
 8016984:	602b      	str	r3, [r5, #0]
 8016986:	6803      	ldr	r3, [r0, #0]
 8016988:	b10b      	cbz	r3, 801698e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 801698a:	3302      	adds	r3, #2
 801698c:	6003      	str	r3, [r0, #0]
 801698e:	680b      	ldr	r3, [r1, #0]
 8016990:	b10b      	cbz	r3, 8016996 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 8016992:	3301      	adds	r3, #1
 8016994:	600b      	str	r3, [r1, #0]
 8016996:	6803      	ldr	r3, [r0, #0]
 8016998:	b10b      	cbz	r3, 801699e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 801699a:	881b      	ldrh	r3, [r3, #0]
 801699c:	e7eb      	b.n	8016976 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801699e:	680b      	ldr	r3, [r1, #0]
 80169a0:	2b00      	cmp	r3, #0
 80169a2:	d0e8      	beq.n	8016976 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 80169a4:	781b      	ldrb	r3, [r3, #0]
 80169a6:	e7e6      	b.n	8016976 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 80169a8:	2a06      	cmp	r2, #6
 80169aa:	bfa8      	it	ge
 80169ac:	2206      	movge	r2, #6
 80169ae:	602a      	str	r2, [r5, #0]
 80169b0:	e7b1      	b.n	8016916 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

080169b2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 80169b2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80169b6:	b0a3      	sub	sp, #140	; 0x8c
 80169b8:	2600      	movs	r6, #0
 80169ba:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 80169be:	4607      	mov	r7, r0
 80169c0:	4688      	mov	r8, r1
 80169c2:	e9cd 3208 	strd	r3, r2, [sp, #32]
 80169c6:	4631      	mov	r1, r6
 80169c8:	2242      	movs	r2, #66	; 0x42
 80169ca:	4648      	mov	r0, r9
 80169cc:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 80169ce:	960d      	str	r6, [sp, #52]	; 0x34
 80169d0:	f010 fd53 	bl	802747a <memset>
 80169d4:	b15f      	cbz	r7, 80169ee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 80169d6:	f108 3aff 	add.w	sl, r8, #4294967295
 80169da:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80169dc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80169de:	b152      	cbz	r2, 80169f6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 80169e0:	8812      	ldrh	r2, [r2, #0]
 80169e2:	b10a      	cbz	r2, 80169e8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 80169e4:	459a      	cmp	sl, r3
 80169e6:	dc2e      	bgt.n	8016a46 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 80169e8:	2200      	movs	r2, #0
 80169ea:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 80169ee:	4638      	mov	r0, r7
 80169f0:	b023      	add	sp, #140	; 0x8c
 80169f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80169f6:	9a08      	ldr	r2, [sp, #32]
 80169f8:	2a00      	cmp	r2, #0
 80169fa:	d0f5      	beq.n	80169e8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 80169fc:	7812      	ldrb	r2, [r2, #0]
 80169fe:	e7f0      	b.n	80169e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8016a00:	2d00      	cmp	r5, #0
 8016a02:	d0ea      	beq.n	80169da <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8016a04:	782a      	ldrb	r2, [r5, #0]
 8016a06:	b142      	cbz	r2, 8016a1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8016a08:	2a25      	cmp	r2, #37	; 0x25
 8016a0a:	d001      	beq.n	8016a10 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8016a0c:	459a      	cmp	sl, r3
 8016a0e:	dc08      	bgt.n	8016a22 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8016a10:	f1bb 0f00 	cmp.w	fp, #0
 8016a14:	d121      	bne.n	8016a5a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 8016a16:	2d00      	cmp	r5, #0
 8016a18:	d0df      	beq.n	80169da <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8016a1a:	782a      	ldrb	r2, [r5, #0]
 8016a1c:	f04f 0b00 	mov.w	fp, #0
 8016a20:	e01d      	b.n	8016a5e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 8016a22:	f1bb 0f00 	cmp.w	fp, #0
 8016a26:	d078      	beq.n	8016b1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 8016a28:	f8bb 2000 	ldrh.w	r2, [fp]
 8016a2c:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8016a30:	f1bb 0f00 	cmp.w	fp, #0
 8016a34:	d002      	beq.n	8016a3c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 8016a36:	f10b 0202 	add.w	r2, fp, #2
 8016a3a:	9209      	str	r2, [sp, #36]	; 0x24
 8016a3c:	b10d      	cbz	r5, 8016a42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 8016a3e:	3501      	adds	r5, #1
 8016a40:	9508      	str	r5, [sp, #32]
 8016a42:	3301      	adds	r3, #1
 8016a44:	930d      	str	r3, [sp, #52]	; 0x34
 8016a46:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 8016a4a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016a4c:	f1bb 0f00 	cmp.w	fp, #0
 8016a50:	d0d6      	beq.n	8016a00 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 8016a52:	f8bb 2000 	ldrh.w	r2, [fp]
 8016a56:	2a00      	cmp	r2, #0
 8016a58:	d1d6      	bne.n	8016a08 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 8016a5a:	f8bb 2000 	ldrh.w	r2, [fp]
 8016a5e:	2a00      	cmp	r2, #0
 8016a60:	d0bb      	beq.n	80169da <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8016a62:	459a      	cmp	sl, r3
 8016a64:	ddb9      	ble.n	80169da <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8016a66:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 8016a6a:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 8016a6e:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 8016a72:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 8016a76:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 8016a7a:	960e      	str	r6, [sp, #56]	; 0x38
 8016a7c:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 8016a80:	960f      	str	r6, [sp, #60]	; 0x3c
 8016a82:	f1bb 0f00 	cmp.w	fp, #0
 8016a86:	d002      	beq.n	8016a8e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 8016a88:	f10b 0302 	add.w	r3, fp, #2
 8016a8c:	9309      	str	r3, [sp, #36]	; 0x24
 8016a8e:	b10d      	cbz	r5, 8016a94 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8016a90:	1c6b      	adds	r3, r5, #1
 8016a92:	9308      	str	r3, [sp, #32]
 8016a94:	ab0f      	add	r3, sp, #60	; 0x3c
 8016a96:	9305      	str	r3, [sp, #20]
 8016a98:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8016a9c:	9304      	str	r3, [sp, #16]
 8016a9e:	ab0e      	add	r3, sp, #56	; 0x38
 8016aa0:	9303      	str	r3, [sp, #12]
 8016aa2:	ab0c      	add	r3, sp, #48	; 0x30
 8016aa4:	9302      	str	r3, [sp, #8]
 8016aa6:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 8016aaa:	9301      	str	r3, [sp, #4]
 8016aac:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8016ab0:	9300      	str	r3, [sp, #0]
 8016ab2:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 8016ab6:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8016aba:	a908      	add	r1, sp, #32
 8016abc:	a809      	add	r0, sp, #36	; 0x24
 8016abe:	f7ff fea8 	bl	8016812 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8016ac2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016ac4:	2b00      	cmp	r3, #0
 8016ac6:	bfbe      	ittt	lt
 8016ac8:	6823      	ldrlt	r3, [r4, #0]
 8016aca:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8016ace:	930e      	strlt	r3, [sp, #56]	; 0x38
 8016ad0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8016ad2:	bfb8      	it	lt
 8016ad4:	3404      	addlt	r4, #4
 8016ad6:	2b00      	cmp	r3, #0
 8016ad8:	bfb8      	it	lt
 8016ada:	6823      	ldrlt	r3, [r4, #0]
 8016adc:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8016ae0:	bfbe      	ittt	lt
 8016ae2:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8016ae6:	930f      	strlt	r3, [sp, #60]	; 0x3c
 8016ae8:	3404      	addlt	r4, #4
 8016aea:	b1d9      	cbz	r1, 8016b24 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 8016aec:	880b      	ldrh	r3, [r1, #0]
 8016aee:	2b69      	cmp	r3, #105	; 0x69
 8016af0:	d01f      	beq.n	8016b32 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8016af2:	d82f      	bhi.n	8016b54 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 8016af4:	2b58      	cmp	r3, #88	; 0x58
 8016af6:	d01c      	beq.n	8016b32 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8016af8:	d818      	bhi.n	8016b2c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 8016afa:	2b25      	cmp	r3, #37	; 0x25
 8016afc:	d034      	beq.n	8016b68 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 8016afe:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 8016b02:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016b04:	f1bb 0f00 	cmp.w	fp, #0
 8016b08:	f000 80b8 	beq.w	8016c7c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 8016b0c:	f8bb 5000 	ldrh.w	r5, [fp]
 8016b10:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8016b14:	3301      	adds	r3, #1
 8016b16:	930d      	str	r3, [sp, #52]	; 0x34
 8016b18:	e029      	b.n	8016b6e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8016b1a:	b10d      	cbz	r5, 8016b20 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 8016b1c:	782a      	ldrb	r2, [r5, #0]
 8016b1e:	e785      	b.n	8016a2c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8016b20:	462a      	mov	r2, r5
 8016b22:	e783      	b.n	8016a2c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8016b24:	2a00      	cmp	r2, #0
 8016b26:	d0ea      	beq.n	8016afe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8016b28:	7813      	ldrb	r3, [r2, #0]
 8016b2a:	e7e0      	b.n	8016aee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 8016b2c:	3b63      	subs	r3, #99	; 0x63
 8016b2e:	2b01      	cmp	r3, #1
 8016b30:	d8e5      	bhi.n	8016afe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8016b32:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 8016b36:	b329      	cbz	r1, 8016b84 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 8016b38:	880b      	ldrh	r3, [r1, #0]
 8016b3a:	2b69      	cmp	r3, #105	; 0x69
 8016b3c:	d063      	beq.n	8016c06 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8016b3e:	d825      	bhi.n	8016b8c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 8016b40:	2b63      	cmp	r3, #99	; 0x63
 8016b42:	d038      	beq.n	8016bb6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 8016b44:	2b64      	cmp	r3, #100	; 0x64
 8016b46:	d05e      	beq.n	8016c06 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8016b48:	2b58      	cmp	r3, #88	; 0x58
 8016b4a:	d07b      	beq.n	8016c44 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 8016b4c:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8016b50:	4625      	mov	r5, r4
 8016b52:	e036      	b.n	8016bc2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8016b54:	2b73      	cmp	r3, #115	; 0x73
 8016b56:	d0ec      	beq.n	8016b32 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8016b58:	d802      	bhi.n	8016b60 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 8016b5a:	2b6f      	cmp	r3, #111	; 0x6f
 8016b5c:	d1cf      	bne.n	8016afe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8016b5e:	e7e8      	b.n	8016b32 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8016b60:	2b75      	cmp	r3, #117	; 0x75
 8016b62:	d0e6      	beq.n	8016b32 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8016b64:	2b78      	cmp	r3, #120	; 0x78
 8016b66:	e7f9      	b.n	8016b5c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 8016b68:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8016b6a:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 8016b6e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016b70:	b10b      	cbz	r3, 8016b76 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 8016b72:	3302      	adds	r3, #2
 8016b74:	9309      	str	r3, [sp, #36]	; 0x24
 8016b76:	9b08      	ldr	r3, [sp, #32]
 8016b78:	2b00      	cmp	r3, #0
 8016b7a:	f43f af2e 	beq.w	80169da <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8016b7e:	3301      	adds	r3, #1
 8016b80:	9308      	str	r3, [sp, #32]
 8016b82:	e72a      	b.n	80169da <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8016b84:	2a00      	cmp	r2, #0
 8016b86:	d0e1      	beq.n	8016b4c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8016b88:	7813      	ldrb	r3, [r2, #0]
 8016b8a:	e7d6      	b.n	8016b3a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 8016b8c:	2b73      	cmp	r3, #115	; 0x73
 8016b8e:	d036      	beq.n	8016bfe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 8016b90:	d807      	bhi.n	8016ba2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 8016b92:	2b6f      	cmp	r3, #111	; 0x6f
 8016b94:	d1da      	bne.n	8016b4c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8016b96:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8016b98:	1d25      	adds	r5, r4, #4
 8016b9a:	eba8 0202 	sub.w	r2, r8, r2
 8016b9e:	2308      	movs	r3, #8
 8016ba0:	e04a      	b.n	8016c38 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8016ba2:	2b75      	cmp	r3, #117	; 0x75
 8016ba4:	d043      	beq.n	8016c2e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 8016ba6:	2b78      	cmp	r3, #120	; 0x78
 8016ba8:	d1d0      	bne.n	8016b4c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8016baa:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8016bac:	1d25      	adds	r5, r4, #4
 8016bae:	eba8 0202 	sub.w	r2, r8, r2
 8016bb2:	2310      	movs	r3, #16
 8016bb4:	e040      	b.n	8016c38 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8016bb6:	6823      	ldr	r3, [r4, #0]
 8016bb8:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8016bbc:	1d25      	adds	r5, r4, #4
 8016bbe:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 8016bc2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016bc4:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8016bc8:	2b00      	cmp	r3, #0
 8016bca:	d052      	beq.n	8016c72 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 8016bcc:	881a      	ldrh	r2, [r3, #0]
 8016bce:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8016bd2:	a80d      	add	r0, sp, #52	; 0x34
 8016bd4:	9005      	str	r0, [sp, #20]
 8016bd6:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 8016bda:	9004      	str	r0, [sp, #16]
 8016bdc:	980e      	ldr	r0, [sp, #56]	; 0x38
 8016bde:	9003      	str	r0, [sp, #12]
 8016be0:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 8016be4:	9002      	str	r0, [sp, #8]
 8016be6:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8016be8:	9001      	str	r0, [sp, #4]
 8016bea:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 8016bee:	9000      	str	r0, [sp, #0]
 8016bf0:	e9cd 8706 	strd	r8, r7, [sp, #24]
 8016bf4:	a810      	add	r0, sp, #64	; 0x40
 8016bf6:	f7ff fd49 	bl	801668c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8016bfa:	462c      	mov	r4, r5
 8016bfc:	e7b7      	b.n	8016b6e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8016bfe:	6823      	ldr	r3, [r4, #0]
 8016c00:	1d25      	adds	r5, r4, #4
 8016c02:	9310      	str	r3, [sp, #64]	; 0x40
 8016c04:	e7dd      	b.n	8016bc2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8016c06:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8016c08:	6820      	ldr	r0, [r4, #0]
 8016c0a:	eba8 0202 	sub.w	r2, r8, r2
 8016c0e:	230a      	movs	r3, #10
 8016c10:	b292      	uxth	r2, r2
 8016c12:	4649      	mov	r1, r9
 8016c14:	f7ff fcf0 	bl	80165f8 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 8016c18:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8016c1c:	2b2d      	cmp	r3, #45	; 0x2d
 8016c1e:	f104 0504 	add.w	r5, r4, #4
 8016c22:	d1ce      	bne.n	8016bc2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8016c24:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8016c28:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016c2a:	3302      	adds	r3, #2
 8016c2c:	e7e9      	b.n	8016c02 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 8016c2e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8016c30:	1d25      	adds	r5, r4, #4
 8016c32:	eba8 0202 	sub.w	r2, r8, r2
 8016c36:	230a      	movs	r3, #10
 8016c38:	b292      	uxth	r2, r2
 8016c3a:	4649      	mov	r1, r9
 8016c3c:	6820      	ldr	r0, [r4, #0]
 8016c3e:	f7ff fd07 	bl	8016650 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8016c42:	e7be      	b.n	8016bc2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8016c44:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8016c46:	6820      	ldr	r0, [r4, #0]
 8016c48:	eba8 0202 	sub.w	r2, r8, r2
 8016c4c:	b292      	uxth	r2, r2
 8016c4e:	2310      	movs	r3, #16
 8016c50:	4649      	mov	r1, r9
 8016c52:	f7ff fcfd 	bl	8016650 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8016c56:	1d25      	adds	r5, r4, #4
 8016c58:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 8016c5c:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8016c60:	2b00      	cmp	r3, #0
 8016c62:	d0ae      	beq.n	8016bc2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8016c64:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 8016c68:	2919      	cmp	r1, #25
 8016c6a:	d8f7      	bhi.n	8016c5c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8016c6c:	3b20      	subs	r3, #32
 8016c6e:	8013      	strh	r3, [r2, #0]
 8016c70:	e7f4      	b.n	8016c5c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8016c72:	9a08      	ldr	r2, [sp, #32]
 8016c74:	2a00      	cmp	r2, #0
 8016c76:	d0aa      	beq.n	8016bce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8016c78:	7812      	ldrb	r2, [r2, #0]
 8016c7a:	e7a8      	b.n	8016bce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8016c7c:	2d00      	cmp	r5, #0
 8016c7e:	f43f af47 	beq.w	8016b10 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 8016c82:	782d      	ldrb	r5, [r5, #0]
 8016c84:	e744      	b.n	8016b10 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

08016c86 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 8016c86:	b507      	push	{r0, r1, r2, lr}
 8016c88:	9300      	str	r3, [sp, #0]
 8016c8a:	4613      	mov	r3, r2
 8016c8c:	2200      	movs	r2, #0
 8016c8e:	f7ff fe90 	bl	80169b2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 8016c92:	b003      	add	sp, #12
 8016c94:	f85d fb04 	ldr.w	pc, [sp], #4

08016c98 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 8016c98:	b40c      	push	{r2, r3}
 8016c9a:	b507      	push	{r0, r1, r2, lr}
 8016c9c:	ab04      	add	r3, sp, #16
 8016c9e:	f853 2b04 	ldr.w	r2, [r3], #4
 8016ca2:	9301      	str	r3, [sp, #4]
 8016ca4:	f7ff ffef 	bl	8016c86 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 8016ca8:	b003      	add	sp, #12
 8016caa:	f85d eb04 	ldr.w	lr, [sp], #4
 8016cae:	b002      	add	sp, #8
 8016cb0:	4770      	bx	lr
	...

08016cb4 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8016cb4:	4b01      	ldr	r3, [pc, #4]	; (8016cbc <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 8016cb6:	6018      	str	r0, [r3, #0]
 8016cb8:	4770      	bx	lr
 8016cba:	bf00      	nop
 8016cbc:	20013824 	.word	0x20013824

08016cc0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8016cc0:	4b06      	ldr	r3, [pc, #24]	; (8016cdc <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 8016cc2:	881a      	ldrh	r2, [r3, #0]
 8016cc4:	4282      	cmp	r2, r0
 8016cc6:	d807      	bhi.n	8016cd8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8016cc8:	4b05      	ldr	r3, [pc, #20]	; (8016ce0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 8016cca:	881b      	ldrh	r3, [r3, #0]
 8016ccc:	4413      	add	r3, r2
 8016cce:	4298      	cmp	r0, r3
 8016cd0:	bfac      	ite	ge
 8016cd2:	2000      	movge	r0, #0
 8016cd4:	2001      	movlt	r0, #1
 8016cd6:	4770      	bx	lr
 8016cd8:	2000      	movs	r0, #0
 8016cda:	4770      	bx	lr
 8016cdc:	20013844 	.word	0x20013844
 8016ce0:	20013848 	.word	0x20013848

08016ce4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8016ce4:	b508      	push	{r3, lr}
 8016ce6:	4601      	mov	r1, r0
 8016ce8:	f7ff ffea 	bl	8016cc0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8016cec:	b118      	cbz	r0, 8016cf6 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 8016cee:	4b02      	ldr	r3, [pc, #8]	; (8016cf8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8016cf0:	681b      	ldr	r3, [r3, #0]
 8016cf2:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8016cf6:	bd08      	pop	{r3, pc}
 8016cf8:	20013828 	.word	0x20013828

08016cfc <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8016cfc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016cfe:	4c24      	ldr	r4, [pc, #144]	; (8016d90 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8016d00:	6823      	ldr	r3, [r4, #0]
 8016d02:	2b00      	cmp	r3, #0
 8016d04:	d042      	beq.n	8016d8c <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8016d06:	4a23      	ldr	r2, [pc, #140]	; (8016d94 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 8016d08:	4d23      	ldr	r5, [pc, #140]	; (8016d98 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 8016d0a:	8811      	ldrh	r1, [r2, #0]
 8016d0c:	f8b5 c000 	ldrh.w	ip, [r5]
 8016d10:	4822      	ldr	r0, [pc, #136]	; (8016d9c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 8016d12:	4461      	add	r1, ip
 8016d14:	1c4a      	adds	r2, r1, #1
 8016d16:	f022 0201 	bic.w	r2, r2, #1
 8016d1a:	008f      	lsls	r7, r1, #2
 8016d1c:	0412      	lsls	r2, r2, #16
 8016d1e:	19de      	adds	r6, r3, r7
 8016d20:	0c12      	lsrs	r2, r2, #16
 8016d22:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 8016d26:	6006      	str	r6, [r0, #0]
 8016d28:	4e1d      	ldr	r6, [pc, #116]	; (8016da0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 8016d2a:	19da      	adds	r2, r3, r7
 8016d2c:	6032      	str	r2, [r6, #0]
 8016d2e:	220e      	movs	r2, #14
 8016d30:	fb02 f20c 	mul.w	r2, r2, ip
 8016d34:	3203      	adds	r2, #3
 8016d36:	f022 0203 	bic.w	r2, r2, #3
 8016d3a:	443a      	add	r2, r7
 8016d3c:	4f19      	ldr	r7, [pc, #100]	; (8016da4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 8016d3e:	4413      	add	r3, r2
 8016d40:	603b      	str	r3, [r7, #0]
 8016d42:	4f19      	ldr	r7, [pc, #100]	; (8016da8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 8016d44:	2300      	movs	r3, #0
 8016d46:	803b      	strh	r3, [r7, #0]
 8016d48:	4f18      	ldr	r7, [pc, #96]	; (8016dac <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 8016d4a:	683f      	ldr	r7, [r7, #0]
 8016d4c:	1aba      	subs	r2, r7, r2
 8016d4e:	4f18      	ldr	r7, [pc, #96]	; (8016db0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8016d50:	603a      	str	r2, [r7, #0]
 8016d52:	4a18      	ldr	r2, [pc, #96]	; (8016db4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8016d54:	469c      	mov	ip, r3
 8016d56:	8013      	strh	r3, [r2, #0]
 8016d58:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8016d5c:	428b      	cmp	r3, r1
 8016d5e:	d10d      	bne.n	8016d7c <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8016d60:	882d      	ldrh	r5, [r5, #0]
 8016d62:	6830      	ldr	r0, [r6, #0]
 8016d64:	2300      	movs	r3, #0
 8016d66:	240e      	movs	r4, #14
 8016d68:	429d      	cmp	r5, r3
 8016d6a:	d90f      	bls.n	8016d8c <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8016d6c:	fb04 0203 	mla	r2, r4, r3, r0
 8016d70:	3301      	adds	r3, #1
 8016d72:	7b11      	ldrb	r1, [r2, #12]
 8016d74:	f36f 1145 	bfc	r1, #5, #1
 8016d78:	7311      	strb	r1, [r2, #12]
 8016d7a:	e7f5      	b.n	8016d68 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 8016d7c:	6822      	ldr	r2, [r4, #0]
 8016d7e:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8016d82:	6802      	ldr	r2, [r0, #0]
 8016d84:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 8016d88:	3301      	adds	r3, #1
 8016d8a:	e7e7      	b.n	8016d5c <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 8016d8c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8016d8e:	bf00      	nop
 8016d90:	20013828 	.word	0x20013828
 8016d94:	20013844 	.word	0x20013844
 8016d98:	20013848 	.word	0x20013848
 8016d9c:	2001383c 	.word	0x2001383c
 8016da0:	2001382c 	.word	0x2001382c
 8016da4:	20013834 	.word	0x20013834
 8016da8:	20013846 	.word	0x20013846
 8016dac:	20013830 	.word	0x20013830
 8016db0:	20013840 	.word	0x20013840
 8016db4:	20013838 	.word	0x20013838

08016db8 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8016db8:	4b06      	ldr	r3, [pc, #24]	; (8016dd4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 8016dba:	681b      	ldr	r3, [r3, #0]
 8016dbc:	b943      	cbnz	r3, 8016dd0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8016dbe:	b139      	cbz	r1, 8016dd0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8016dc0:	4b05      	ldr	r3, [pc, #20]	; (8016dd8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 8016dc2:	801a      	strh	r2, [r3, #0]
 8016dc4:	4b05      	ldr	r3, [pc, #20]	; (8016ddc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 8016dc6:	6019      	str	r1, [r3, #0]
 8016dc8:	4b05      	ldr	r3, [pc, #20]	; (8016de0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 8016dca:	6018      	str	r0, [r3, #0]
 8016dcc:	f7ff bf96 	b.w	8016cfc <_ZN8touchgfx6Bitmap10clearCacheEv>
 8016dd0:	4770      	bx	lr
 8016dd2:	bf00      	nop
 8016dd4:	20013834 	.word	0x20013834
 8016dd8:	20013848 	.word	0x20013848
 8016ddc:	20013830 	.word	0x20013830
 8016de0:	20013828 	.word	0x20013828

08016de4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8016de4:	b470      	push	{r4, r5, r6}
 8016de6:	4c07      	ldr	r4, [pc, #28]	; (8016e04 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8016de8:	6826      	ldr	r6, [r4, #0]
 8016dea:	4605      	mov	r5, r0
 8016dec:	4610      	mov	r0, r2
 8016dee:	9a03      	ldr	r2, [sp, #12]
 8016df0:	b936      	cbnz	r6, 8016e00 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 8016df2:	6025      	str	r5, [r4, #0]
 8016df4:	4c04      	ldr	r4, [pc, #16]	; (8016e08 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 8016df6:	8021      	strh	r1, [r4, #0]
 8016df8:	bc70      	pop	{r4, r5, r6}
 8016dfa:	4619      	mov	r1, r3
 8016dfc:	f7ff bfdc 	b.w	8016db8 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8016e00:	bc70      	pop	{r4, r5, r6}
 8016e02:	4770      	bx	lr
 8016e04:	2001384c 	.word	0x2001384c
 8016e08:	20013844 	.word	0x20013844

08016e0c <_ZNK8touchgfx6Bitmap8getWidthEv>:
 8016e0c:	4a12      	ldr	r2, [pc, #72]	; (8016e58 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 8016e0e:	8803      	ldrh	r3, [r0, #0]
 8016e10:	8812      	ldrh	r2, [r2, #0]
 8016e12:	4293      	cmp	r3, r2
 8016e14:	d207      	bcs.n	8016e26 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 8016e16:	4a11      	ldr	r2, [pc, #68]	; (8016e5c <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 8016e18:	6812      	ldr	r2, [r2, #0]
 8016e1a:	2114      	movs	r1, #20
 8016e1c:	fb01 2303 	mla	r3, r1, r3, r2
 8016e20:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8016e24:	4770      	bx	lr
 8016e26:	490e      	ldr	r1, [pc, #56]	; (8016e60 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8016e28:	8809      	ldrh	r1, [r1, #0]
 8016e2a:	4411      	add	r1, r2
 8016e2c:	428b      	cmp	r3, r1
 8016e2e:	da04      	bge.n	8016e3a <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 8016e30:	1a9b      	subs	r3, r3, r2
 8016e32:	4a0c      	ldr	r2, [pc, #48]	; (8016e64 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 8016e34:	210e      	movs	r1, #14
 8016e36:	6812      	ldr	r2, [r2, #0]
 8016e38:	e7f0      	b.n	8016e1c <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 8016e3a:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8016e3e:	4293      	cmp	r3, r2
 8016e40:	d108      	bne.n	8016e54 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 8016e42:	4b09      	ldr	r3, [pc, #36]	; (8016e68 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 8016e44:	781b      	ldrb	r3, [r3, #0]
 8016e46:	b91b      	cbnz	r3, 8016e50 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 8016e48:	4b08      	ldr	r3, [pc, #32]	; (8016e6c <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 8016e4a:	f9b3 0000 	ldrsh.w	r0, [r3]
 8016e4e:	4770      	bx	lr
 8016e50:	4b07      	ldr	r3, [pc, #28]	; (8016e70 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8016e52:	e7fa      	b.n	8016e4a <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 8016e54:	2000      	movs	r0, #0
 8016e56:	4770      	bx	lr
 8016e58:	20013844 	.word	0x20013844
 8016e5c:	2001384c 	.word	0x2001384c
 8016e60:	20013848 	.word	0x20013848
 8016e64:	2001382c 	.word	0x2001382c
 8016e68:	200137b4 	.word	0x200137b4
 8016e6c:	200137b6 	.word	0x200137b6
 8016e70:	200137b8 	.word	0x200137b8

08016e74 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8016e74:	4a12      	ldr	r2, [pc, #72]	; (8016ec0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 8016e76:	8803      	ldrh	r3, [r0, #0]
 8016e78:	8812      	ldrh	r2, [r2, #0]
 8016e7a:	4293      	cmp	r3, r2
 8016e7c:	d207      	bcs.n	8016e8e <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 8016e7e:	4a11      	ldr	r2, [pc, #68]	; (8016ec4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 8016e80:	6812      	ldr	r2, [r2, #0]
 8016e82:	2114      	movs	r1, #20
 8016e84:	fb01 2303 	mla	r3, r1, r3, r2
 8016e88:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 8016e8c:	4770      	bx	lr
 8016e8e:	490e      	ldr	r1, [pc, #56]	; (8016ec8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8016e90:	8809      	ldrh	r1, [r1, #0]
 8016e92:	4411      	add	r1, r2
 8016e94:	428b      	cmp	r3, r1
 8016e96:	da04      	bge.n	8016ea2 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 8016e98:	1a9b      	subs	r3, r3, r2
 8016e9a:	4a0c      	ldr	r2, [pc, #48]	; (8016ecc <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 8016e9c:	210e      	movs	r1, #14
 8016e9e:	6812      	ldr	r2, [r2, #0]
 8016ea0:	e7f0      	b.n	8016e84 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 8016ea2:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8016ea6:	4293      	cmp	r3, r2
 8016ea8:	d108      	bne.n	8016ebc <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 8016eaa:	4b09      	ldr	r3, [pc, #36]	; (8016ed0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 8016eac:	781b      	ldrb	r3, [r3, #0]
 8016eae:	b91b      	cbnz	r3, 8016eb8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8016eb0:	4b08      	ldr	r3, [pc, #32]	; (8016ed4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8016eb2:	f9b3 0000 	ldrsh.w	r0, [r3]
 8016eb6:	4770      	bx	lr
 8016eb8:	4b07      	ldr	r3, [pc, #28]	; (8016ed8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 8016eba:	e7fa      	b.n	8016eb2 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 8016ebc:	2000      	movs	r0, #0
 8016ebe:	4770      	bx	lr
 8016ec0:	20013844 	.word	0x20013844
 8016ec4:	2001384c 	.word	0x2001384c
 8016ec8:	20013848 	.word	0x20013848
 8016ecc:	2001382c 	.word	0x2001382c
 8016ed0:	200137b4 	.word	0x200137b4
 8016ed4:	200137b8 	.word	0x200137b8
 8016ed8:	200137b6 	.word	0x200137b6

08016edc <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8016edc:	b510      	push	{r4, lr}
 8016ede:	4a1f      	ldr	r2, [pc, #124]	; (8016f5c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 8016ee0:	880b      	ldrh	r3, [r1, #0]
 8016ee2:	8812      	ldrh	r2, [r2, #0]
 8016ee4:	4293      	cmp	r3, r2
 8016ee6:	d213      	bcs.n	8016f10 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8016ee8:	4a1d      	ldr	r2, [pc, #116]	; (8016f60 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 8016eea:	6812      	ldr	r2, [r2, #0]
 8016eec:	2114      	movs	r1, #20
 8016eee:	fb01 2303 	mla	r3, r1, r3, r2
 8016ef2:	8a1a      	ldrh	r2, [r3, #16]
 8016ef4:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8016ef8:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8016efc:	8a5b      	ldrh	r3, [r3, #18]
 8016efe:	8004      	strh	r4, [r0, #0]
 8016f00:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8016f04:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8016f08:	8041      	strh	r1, [r0, #2]
 8016f0a:	8082      	strh	r2, [r0, #4]
 8016f0c:	80c3      	strh	r3, [r0, #6]
 8016f0e:	e00e      	b.n	8016f2e <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8016f10:	4914      	ldr	r1, [pc, #80]	; (8016f64 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 8016f12:	8809      	ldrh	r1, [r1, #0]
 8016f14:	4411      	add	r1, r2
 8016f16:	428b      	cmp	r3, r1
 8016f18:	da0a      	bge.n	8016f30 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 8016f1a:	1a9b      	subs	r3, r3, r2
 8016f1c:	4a12      	ldr	r2, [pc, #72]	; (8016f68 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 8016f1e:	6812      	ldr	r2, [r2, #0]
 8016f20:	210e      	movs	r1, #14
 8016f22:	fb01 2303 	mla	r3, r1, r3, r2
 8016f26:	681a      	ldr	r2, [r3, #0]
 8016f28:	6002      	str	r2, [r0, #0]
 8016f2a:	685a      	ldr	r2, [r3, #4]
 8016f2c:	6042      	str	r2, [r0, #4]
 8016f2e:	bd10      	pop	{r4, pc}
 8016f30:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8016f34:	4293      	cmp	r3, r2
 8016f36:	d10b      	bne.n	8016f50 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 8016f38:	4b0c      	ldr	r3, [pc, #48]	; (8016f6c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 8016f3a:	f9b3 1000 	ldrsh.w	r1, [r3]
 8016f3e:	4b0c      	ldr	r3, [pc, #48]	; (8016f70 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8016f40:	8081      	strh	r1, [r0, #4]
 8016f42:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016f46:	80c2      	strh	r2, [r0, #6]
 8016f48:	2300      	movs	r3, #0
 8016f4a:	8003      	strh	r3, [r0, #0]
 8016f4c:	8043      	strh	r3, [r0, #2]
 8016f4e:	e7ee      	b.n	8016f2e <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8016f50:	2300      	movs	r3, #0
 8016f52:	8003      	strh	r3, [r0, #0]
 8016f54:	8043      	strh	r3, [r0, #2]
 8016f56:	8083      	strh	r3, [r0, #4]
 8016f58:	e7d8      	b.n	8016f0c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8016f5a:	bf00      	nop
 8016f5c:	20013844 	.word	0x20013844
 8016f60:	2001384c 	.word	0x2001384c
 8016f64:	20013848 	.word	0x20013848
 8016f68:	2001382c 	.word	0x2001382c
 8016f6c:	200137b0 	.word	0x200137b0
 8016f70:	200137b2 	.word	0x200137b2

08016f74 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8016f74:	4a17      	ldr	r2, [pc, #92]	; (8016fd4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 8016f76:	8803      	ldrh	r3, [r0, #0]
 8016f78:	8812      	ldrh	r2, [r2, #0]
 8016f7a:	4293      	cmp	r3, r2
 8016f7c:	d213      	bcs.n	8016fa6 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 8016f7e:	4a16      	ldr	r2, [pc, #88]	; (8016fd8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8016f80:	6812      	ldr	r2, [r2, #0]
 8016f82:	2114      	movs	r1, #20
 8016f84:	fb01 2303 	mla	r3, r1, r3, r2
 8016f88:	8a1a      	ldrh	r2, [r3, #16]
 8016f8a:	8919      	ldrh	r1, [r3, #8]
 8016f8c:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8016f90:	428a      	cmp	r2, r1
 8016f92:	db1d      	blt.n	8016fd0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8016f94:	8a58      	ldrh	r0, [r3, #18]
 8016f96:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8016f9a:	895b      	ldrh	r3, [r3, #10]
 8016f9c:	4298      	cmp	r0, r3
 8016f9e:	bfac      	ite	ge
 8016fa0:	2000      	movge	r0, #0
 8016fa2:	2001      	movlt	r0, #1
 8016fa4:	4770      	bx	lr
 8016fa6:	490d      	ldr	r1, [pc, #52]	; (8016fdc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8016fa8:	8809      	ldrh	r1, [r1, #0]
 8016faa:	4411      	add	r1, r2
 8016fac:	428b      	cmp	r3, r1
 8016fae:	da0d      	bge.n	8016fcc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 8016fb0:	1a9b      	subs	r3, r3, r2
 8016fb2:	4a0b      	ldr	r2, [pc, #44]	; (8016fe0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 8016fb4:	6812      	ldr	r2, [r2, #0]
 8016fb6:	210e      	movs	r1, #14
 8016fb8:	fb01 2303 	mla	r3, r1, r3, r2
 8016fbc:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8016fc0:	891a      	ldrh	r2, [r3, #8]
 8016fc2:	4291      	cmp	r1, r2
 8016fc4:	db04      	blt.n	8016fd0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8016fc6:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 8016fca:	e7e6      	b.n	8016f9a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 8016fcc:	2000      	movs	r0, #0
 8016fce:	4770      	bx	lr
 8016fd0:	2001      	movs	r0, #1
 8016fd2:	4770      	bx	lr
 8016fd4:	20013844 	.word	0x20013844
 8016fd8:	2001384c 	.word	0x2001384c
 8016fdc:	20013848 	.word	0x20013848
 8016fe0:	2001382c 	.word	0x2001382c

08016fe4 <_ZNK8touchgfx6Bitmap7getDataEv>:
 8016fe4:	4a12      	ldr	r2, [pc, #72]	; (8017030 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 8016fe6:	8803      	ldrh	r3, [r0, #0]
 8016fe8:	8811      	ldrh	r1, [r2, #0]
 8016fea:	428b      	cmp	r3, r1
 8016fec:	d20b      	bcs.n	8017006 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 8016fee:	4a11      	ldr	r2, [pc, #68]	; (8017034 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8016ff0:	6812      	ldr	r2, [r2, #0]
 8016ff2:	b112      	cbz	r2, 8016ffa <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8016ff4:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8016ff8:	b9c0      	cbnz	r0, 801702c <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 8016ffa:	4a0f      	ldr	r2, [pc, #60]	; (8017038 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8016ffc:	6811      	ldr	r1, [r2, #0]
 8016ffe:	2214      	movs	r2, #20
 8017000:	4353      	muls	r3, r2
 8017002:	58c8      	ldr	r0, [r1, r3]
 8017004:	4770      	bx	lr
 8017006:	4a0d      	ldr	r2, [pc, #52]	; (801703c <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8017008:	8812      	ldrh	r2, [r2, #0]
 801700a:	440a      	add	r2, r1
 801700c:	4293      	cmp	r3, r2
 801700e:	da04      	bge.n	801701a <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 8017010:	4a08      	ldr	r2, [pc, #32]	; (8017034 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8017012:	6812      	ldr	r2, [r2, #0]
 8017014:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8017018:	4770      	bx	lr
 801701a:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801701e:	4293      	cmp	r3, r2
 8017020:	d103      	bne.n	801702a <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 8017022:	4b07      	ldr	r3, [pc, #28]	; (8017040 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 8017024:	681b      	ldr	r3, [r3, #0]
 8017026:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8017028:	4770      	bx	lr
 801702a:	2000      	movs	r0, #0
 801702c:	4770      	bx	lr
 801702e:	bf00      	nop
 8017030:	20013844 	.word	0x20013844
 8017034:	20013828 	.word	0x20013828
 8017038:	2001384c 	.word	0x2001384c
 801703c:	20013848 	.word	0x20013848
 8017040:	200137bc 	.word	0x200137bc

08017044 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8017044:	4b24      	ldr	r3, [pc, #144]	; (80170d8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 8017046:	8802      	ldrh	r2, [r0, #0]
 8017048:	8818      	ldrh	r0, [r3, #0]
 801704a:	4282      	cmp	r2, r0
 801704c:	d221      	bcs.n	8017092 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 801704e:	4b23      	ldr	r3, [pc, #140]	; (80170dc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8017050:	6819      	ldr	r1, [r3, #0]
 8017052:	2314      	movs	r3, #20
 8017054:	fb03 1302 	mla	r3, r3, r2, r1
 8017058:	6858      	ldr	r0, [r3, #4]
 801705a:	2800      	cmp	r0, #0
 801705c:	d03a      	beq.n	80170d4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801705e:	4920      	ldr	r1, [pc, #128]	; (80170e0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8017060:	6809      	ldr	r1, [r1, #0]
 8017062:	2900      	cmp	r1, #0
 8017064:	d036      	beq.n	80170d4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8017066:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 801706a:	2900      	cmp	r1, #0
 801706c:	d032      	beq.n	80170d4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801706e:	891a      	ldrh	r2, [r3, #8]
 8017070:	8958      	ldrh	r0, [r3, #10]
 8017072:	4350      	muls	r0, r2
 8017074:	7c5a      	ldrb	r2, [r3, #17]
 8017076:	7cdb      	ldrb	r3, [r3, #19]
 8017078:	0952      	lsrs	r2, r2, #5
 801707a:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801707e:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8017082:	2b0b      	cmp	r3, #11
 8017084:	bf18      	it	ne
 8017086:	0040      	lslne	r0, r0, #1
 8017088:	3003      	adds	r0, #3
 801708a:	f020 0003 	bic.w	r0, r0, #3
 801708e:	4408      	add	r0, r1
 8017090:	4770      	bx	lr
 8017092:	4b14      	ldr	r3, [pc, #80]	; (80170e4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8017094:	881b      	ldrh	r3, [r3, #0]
 8017096:	4403      	add	r3, r0
 8017098:	429a      	cmp	r2, r3
 801709a:	da1a      	bge.n	80170d2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801709c:	4b12      	ldr	r3, [pc, #72]	; (80170e8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 801709e:	681b      	ldr	r3, [r3, #0]
 80170a0:	1a10      	subs	r0, r2, r0
 80170a2:	210e      	movs	r1, #14
 80170a4:	fb01 3000 	mla	r0, r1, r0, r3
 80170a8:	7b03      	ldrb	r3, [r0, #12]
 80170aa:	f003 031f 	and.w	r3, r3, #31
 80170ae:	2b0b      	cmp	r3, #11
 80170b0:	d10b      	bne.n	80170ca <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 80170b2:	8903      	ldrh	r3, [r0, #8]
 80170b4:	8940      	ldrh	r0, [r0, #10]
 80170b6:	4358      	muls	r0, r3
 80170b8:	4b09      	ldr	r3, [pc, #36]	; (80170e0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 80170ba:	6819      	ldr	r1, [r3, #0]
 80170bc:	3003      	adds	r0, #3
 80170be:	f020 0303 	bic.w	r3, r0, #3
 80170c2:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 80170c6:	4418      	add	r0, r3
 80170c8:	4770      	bx	lr
 80170ca:	2b0d      	cmp	r3, #13
 80170cc:	d101      	bne.n	80170d2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 80170ce:	300d      	adds	r0, #13
 80170d0:	4770      	bx	lr
 80170d2:	2000      	movs	r0, #0
 80170d4:	4770      	bx	lr
 80170d6:	bf00      	nop
 80170d8:	20013844 	.word	0x20013844
 80170dc:	2001384c 	.word	0x2001384c
 80170e0:	20013828 	.word	0x20013828
 80170e4:	20013848 	.word	0x20013848
 80170e8:	2001382c 	.word	0x2001382c

080170ec <_ZNK8touchgfx6Bitmap9getFormatEv>:
 80170ec:	b510      	push	{r4, lr}
 80170ee:	4a17      	ldr	r2, [pc, #92]	; (801714c <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 80170f0:	8803      	ldrh	r3, [r0, #0]
 80170f2:	8812      	ldrh	r2, [r2, #0]
 80170f4:	4293      	cmp	r3, r2
 80170f6:	d20c      	bcs.n	8017112 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 80170f8:	4a15      	ldr	r2, [pc, #84]	; (8017150 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 80170fa:	6812      	ldr	r2, [r2, #0]
 80170fc:	2114      	movs	r1, #20
 80170fe:	fb01 2303 	mla	r3, r1, r3, r2
 8017102:	7c58      	ldrb	r0, [r3, #17]
 8017104:	0942      	lsrs	r2, r0, #5
 8017106:	7cd8      	ldrb	r0, [r3, #19]
 8017108:	f3c0 1042 	ubfx	r0, r0, #5, #3
 801710c:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 8017110:	bd10      	pop	{r4, pc}
 8017112:	4910      	ldr	r1, [pc, #64]	; (8017154 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 8017114:	8809      	ldrh	r1, [r1, #0]
 8017116:	4411      	add	r1, r2
 8017118:	428b      	cmp	r3, r1
 801711a:	da09      	bge.n	8017130 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 801711c:	1a9b      	subs	r3, r3, r2
 801711e:	4a0e      	ldr	r2, [pc, #56]	; (8017158 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 8017120:	6812      	ldr	r2, [r2, #0]
 8017122:	210e      	movs	r1, #14
 8017124:	fb01 2303 	mla	r3, r1, r3, r2
 8017128:	7b18      	ldrb	r0, [r3, #12]
 801712a:	f000 001f 	and.w	r0, r0, #31
 801712e:	e7ef      	b.n	8017110 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8017130:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8017134:	4293      	cmp	r3, r2
 8017136:	d106      	bne.n	8017146 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 8017138:	f7eb fdd4 	bl	8002ce4 <_ZN8touchgfx3HAL3lcdEv>
 801713c:	6803      	ldr	r3, [r0, #0]
 801713e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8017142:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017144:	4718      	bx	r3
 8017146:	2000      	movs	r0, #0
 8017148:	e7e2      	b.n	8017110 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 801714a:	bf00      	nop
 801714c:	20013844 	.word	0x20013844
 8017150:	2001384c 	.word	0x2001384c
 8017154:	20013848 	.word	0x20013848
 8017158:	2001382c 	.word	0x2001382c

0801715c <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 801715c:	2010      	movs	r0, #16
 801715e:	4770      	bx	lr

08017160 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8017160:	2000      	movs	r0, #0
 8017162:	4770      	bx	lr

08017164 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8017164:	4b02      	ldr	r3, [pc, #8]	; (8017170 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 8017166:	8818      	ldrh	r0, [r3, #0]
 8017168:	0040      	lsls	r0, r0, #1
 801716a:	b280      	uxth	r0, r0
 801716c:	4770      	bx	lr
 801716e:	bf00      	nop
 8017170:	200137b6 	.word	0x200137b6

08017174 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8017174:	2bff      	cmp	r3, #255	; 0xff
 8017176:	d050      	beq.n	801721a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8017178:	2a0b      	cmp	r2, #11
 801717a:	d04a      	beq.n	8017212 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801717c:	d80e      	bhi.n	801719c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 801717e:	2a03      	cmp	r2, #3
 8017180:	d03f      	beq.n	8017202 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 8017182:	d804      	bhi.n	801718e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8017184:	2a01      	cmp	r2, #1
 8017186:	d03e      	beq.n	8017206 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 8017188:	d93f      	bls.n	801720a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 801718a:	6b80      	ldr	r0, [r0, #56]	; 0x38
 801718c:	4770      	bx	lr
 801718e:	2a09      	cmp	r2, #9
 8017190:	d03f      	beq.n	8017212 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8017192:	d83c      	bhi.n	801720e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8017194:	2a08      	cmp	r2, #8
 8017196:	d03a      	beq.n	801720e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8017198:	2000      	movs	r0, #0
 801719a:	4770      	bx	lr
 801719c:	2a2f      	cmp	r2, #47	; 0x2f
 801719e:	d024      	beq.n	80171ea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 80171a0:	d80d      	bhi.n	80171be <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 80171a2:	2a2d      	cmp	r2, #45	; 0x2d
 80171a4:	d014      	beq.n	80171d0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 80171a6:	d826      	bhi.n	80171f6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 80171a8:	2a2c      	cmp	r2, #44	; 0x2c
 80171aa:	d1f5      	bne.n	8017198 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80171ac:	684b      	ldr	r3, [r1, #4]
 80171ae:	781b      	ldrb	r3, [r3, #0]
 80171b0:	2b01      	cmp	r3, #1
 80171b2:	d018      	beq.n	80171e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 80171b4:	d323      	bcc.n	80171fe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 80171b6:	2b02      	cmp	r3, #2
 80171b8:	d1ee      	bne.n	8017198 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80171ba:	6880      	ldr	r0, [r0, #8]
 80171bc:	4770      	bx	lr
 80171be:	2a31      	cmp	r2, #49	; 0x31
 80171c0:	d004      	beq.n	80171cc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 80171c2:	d328      	bcc.n	8017216 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 80171c4:	2a32      	cmp	r2, #50	; 0x32
 80171c6:	d026      	beq.n	8017216 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 80171c8:	2a33      	cmp	r2, #51	; 0x33
 80171ca:	d1e5      	bne.n	8017198 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80171cc:	6f00      	ldr	r0, [r0, #112]	; 0x70
 80171ce:	4770      	bx	lr
 80171d0:	684b      	ldr	r3, [r1, #4]
 80171d2:	781b      	ldrb	r3, [r3, #0]
 80171d4:	2b01      	cmp	r3, #1
 80171d6:	d004      	beq.n	80171e2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 80171d8:	d30b      	bcc.n	80171f2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80171da:	2b02      	cmp	r3, #2
 80171dc:	d1dc      	bne.n	8017198 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80171de:	6900      	ldr	r0, [r0, #16]
 80171e0:	4770      	bx	lr
 80171e2:	6a00      	ldr	r0, [r0, #32]
 80171e4:	4770      	bx	lr
 80171e6:	6980      	ldr	r0, [r0, #24]
 80171e8:	4770      	bx	lr
 80171ea:	684b      	ldr	r3, [r1, #4]
 80171ec:	781b      	ldrb	r3, [r3, #0]
 80171ee:	2b00      	cmp	r3, #0
 80171f0:	d1d2      	bne.n	8017198 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80171f2:	6b00      	ldr	r0, [r0, #48]	; 0x30
 80171f4:	4770      	bx	lr
 80171f6:	684b      	ldr	r3, [r1, #4]
 80171f8:	781b      	ldrb	r3, [r3, #0]
 80171fa:	2b00      	cmp	r3, #0
 80171fc:	d1cc      	bne.n	8017198 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80171fe:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8017200:	4770      	bx	lr
 8017202:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8017204:	4770      	bx	lr
 8017206:	6d00      	ldr	r0, [r0, #80]	; 0x50
 8017208:	4770      	bx	lr
 801720a:	6c00      	ldr	r0, [r0, #64]	; 0x40
 801720c:	4770      	bx	lr
 801720e:	6d80      	ldr	r0, [r0, #88]	; 0x58
 8017210:	4770      	bx	lr
 8017212:	6e00      	ldr	r0, [r0, #96]	; 0x60
 8017214:	4770      	bx	lr
 8017216:	6e80      	ldr	r0, [r0, #104]	; 0x68
 8017218:	4770      	bx	lr
 801721a:	2a0b      	cmp	r2, #11
 801721c:	d049      	beq.n	80172b2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801721e:	d80e      	bhi.n	801723e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 8017220:	2a03      	cmp	r2, #3
 8017222:	d040      	beq.n	80172a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 8017224:	d804      	bhi.n	8017230 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 8017226:	2a01      	cmp	r2, #1
 8017228:	d03f      	beq.n	80172aa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 801722a:	d940      	bls.n	80172ae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 801722c:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 801722e:	4770      	bx	lr
 8017230:	2a09      	cmp	r2, #9
 8017232:	d03e      	beq.n	80172b2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8017234:	d801      	bhi.n	801723a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 8017236:	2a08      	cmp	r2, #8
 8017238:	d1ae      	bne.n	8017198 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801723a:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 801723c:	4770      	bx	lr
 801723e:	2a2f      	cmp	r2, #47	; 0x2f
 8017240:	d024      	beq.n	801728c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 8017242:	d80d      	bhi.n	8017260 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 8017244:	2a2d      	cmp	r2, #45	; 0x2d
 8017246:	d014      	beq.n	8017272 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 8017248:	d826      	bhi.n	8017298 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 801724a:	2a2c      	cmp	r2, #44	; 0x2c
 801724c:	d1a4      	bne.n	8017198 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801724e:	684b      	ldr	r3, [r1, #4]
 8017250:	781b      	ldrb	r3, [r3, #0]
 8017252:	2b01      	cmp	r3, #1
 8017254:	d018      	beq.n	8017288 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 8017256:	d324      	bcc.n	80172a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 8017258:	2b02      	cmp	r3, #2
 801725a:	d19d      	bne.n	8017198 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801725c:	68c0      	ldr	r0, [r0, #12]
 801725e:	4770      	bx	lr
 8017260:	2a31      	cmp	r2, #49	; 0x31
 8017262:	d004      	beq.n	801726e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 8017264:	d327      	bcc.n	80172b6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8017266:	2a32      	cmp	r2, #50	; 0x32
 8017268:	d025      	beq.n	80172b6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801726a:	2a33      	cmp	r2, #51	; 0x33
 801726c:	d194      	bne.n	8017198 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801726e:	6f40      	ldr	r0, [r0, #116]	; 0x74
 8017270:	4770      	bx	lr
 8017272:	684b      	ldr	r3, [r1, #4]
 8017274:	781b      	ldrb	r3, [r3, #0]
 8017276:	2b01      	cmp	r3, #1
 8017278:	d004      	beq.n	8017284 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 801727a:	d30b      	bcc.n	8017294 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 801727c:	2b02      	cmp	r3, #2
 801727e:	d18b      	bne.n	8017198 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8017280:	6940      	ldr	r0, [r0, #20]
 8017282:	4770      	bx	lr
 8017284:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8017286:	4770      	bx	lr
 8017288:	69c0      	ldr	r0, [r0, #28]
 801728a:	4770      	bx	lr
 801728c:	684b      	ldr	r3, [r1, #4]
 801728e:	781b      	ldrb	r3, [r3, #0]
 8017290:	2b00      	cmp	r3, #0
 8017292:	d181      	bne.n	8017198 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8017294:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8017296:	4770      	bx	lr
 8017298:	684b      	ldr	r3, [r1, #4]
 801729a:	781b      	ldrb	r3, [r3, #0]
 801729c:	2b00      	cmp	r3, #0
 801729e:	f47f af7b 	bne.w	8017198 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80172a2:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 80172a4:	4770      	bx	lr
 80172a6:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 80172a8:	4770      	bx	lr
 80172aa:	6d40      	ldr	r0, [r0, #84]	; 0x54
 80172ac:	4770      	bx	lr
 80172ae:	6c40      	ldr	r0, [r0, #68]	; 0x44
 80172b0:	4770      	bx	lr
 80172b2:	6e40      	ldr	r0, [r0, #100]	; 0x64
 80172b4:	4770      	bx	lr
 80172b6:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 80172b8:	4770      	bx	lr

080172ba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80172ba:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80172be:	b087      	sub	sp, #28
 80172c0:	9815      	ldr	r0, [sp, #84]	; 0x54
 80172c2:	9205      	str	r2, [sp, #20]
 80172c4:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80172c8:	9202      	str	r2, [sp, #8]
 80172ca:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 80172ce:	9101      	str	r1, [sp, #4]
 80172d0:	6841      	ldr	r1, [r0, #4]
 80172d2:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 80172d6:	fb01 2404 	mla	r4, r1, r4, r2
 80172da:	6802      	ldr	r2, [r0, #0]
 80172dc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80172e0:	f8de 2000 	ldr.w	r2, [lr]
 80172e4:	9203      	str	r2, [sp, #12]
 80172e6:	f8de 2004 	ldr.w	r2, [lr, #4]
 80172ea:	3204      	adds	r2, #4
 80172ec:	9204      	str	r2, [sp, #16]
 80172ee:	9a02      	ldr	r2, [sp, #8]
 80172f0:	43d6      	mvns	r6, r2
 80172f2:	b2f6      	uxtb	r6, r6
 80172f4:	9a01      	ldr	r2, [sp, #4]
 80172f6:	2a00      	cmp	r2, #0
 80172f8:	dc03      	bgt.n	8017302 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80172fa:	9a05      	ldr	r2, [sp, #20]
 80172fc:	2a00      	cmp	r2, #0
 80172fe:	f340 8129 	ble.w	8017554 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8017302:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8017304:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8017308:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801730c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8017310:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8017312:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8017316:	2b00      	cmp	r3, #0
 8017318:	dd0e      	ble.n	8017338 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801731a:	1408      	asrs	r0, r1, #16
 801731c:	d405      	bmi.n	801732a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801731e:	4560      	cmp	r0, ip
 8017320:	da03      	bge.n	801732a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8017322:	1410      	asrs	r0, r2, #16
 8017324:	d401      	bmi.n	801732a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8017326:	42b8      	cmp	r0, r7
 8017328:	db07      	blt.n	801733a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801732a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801732c:	4401      	add	r1, r0
 801732e:	9814      	ldr	r0, [sp, #80]	; 0x50
 8017330:	3b01      	subs	r3, #1
 8017332:	4402      	add	r2, r0
 8017334:	3402      	adds	r4, #2
 8017336:	e7ee      	b.n	8017316 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8017338:	d071      	beq.n	801741e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801733a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801733c:	1e58      	subs	r0, r3, #1
 801733e:	fb05 1500 	mla	r5, r5, r0, r1
 8017342:	142d      	asrs	r5, r5, #16
 8017344:	d45f      	bmi.n	8017406 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8017346:	4565      	cmp	r5, ip
 8017348:	da5d      	bge.n	8017406 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801734a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801734c:	fb05 2000 	mla	r0, r5, r0, r2
 8017350:	1400      	asrs	r0, r0, #16
 8017352:	d458      	bmi.n	8017406 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8017354:	42b8      	cmp	r0, r7
 8017356:	da56      	bge.n	8017406 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8017358:	f8bd b008 	ldrh.w	fp, [sp, #8]
 801735c:	4699      	mov	r9, r3
 801735e:	46a2      	mov	sl, r4
 8017360:	f1b9 0f00 	cmp.w	r9, #0
 8017364:	dd57      	ble.n	8017416 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8017366:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801736a:	9803      	ldr	r0, [sp, #12]
 801736c:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8017370:	140d      	asrs	r5, r1, #16
 8017372:	fb07 000c 	mla	r0, r7, ip, r0
 8017376:	f109 39ff 	add.w	r9, r9, #4294967295
 801737a:	5d40      	ldrb	r0, [r0, r5]
 801737c:	9d04      	ldr	r5, [sp, #16]
 801737e:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8017382:	f8ba 5000 	ldrh.w	r5, [sl]
 8017386:	122f      	asrs	r7, r5, #8
 8017388:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801738c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8017390:	fb17 f706 	smulbb	r7, r7, r6
 8017394:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8017398:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801739c:	00ed      	lsls	r5, r5, #3
 801739e:	fb0c 7c0b 	mla	ip, ip, fp, r7
 80173a2:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 80173a6:	10c7      	asrs	r7, r0, #3
 80173a8:	b2ed      	uxtb	r5, r5
 80173aa:	00c0      	lsls	r0, r0, #3
 80173ac:	fb18 f806 	smulbb	r8, r8, r6
 80173b0:	fb15 f506 	smulbb	r5, r5, r6
 80173b4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80173b8:	b2c0      	uxtb	r0, r0
 80173ba:	fa1f fc8c 	uxth.w	ip, ip
 80173be:	fb07 870b 	mla	r7, r7, fp, r8
 80173c2:	fb00 500b 	mla	r0, r0, fp, r5
 80173c6:	b280      	uxth	r0, r0
 80173c8:	b2bf      	uxth	r7, r7
 80173ca:	f10c 0501 	add.w	r5, ip, #1
 80173ce:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80173d2:	f107 0801 	add.w	r8, r7, #1
 80173d6:	1c45      	adds	r5, r0, #1
 80173d8:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80173dc:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 80173e0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80173e2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80173e6:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80173ea:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80173ee:	ea45 0c0c 	orr.w	ip, r5, ip
 80173f2:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80173f6:	4401      	add	r1, r0
 80173f8:	9814      	ldr	r0, [sp, #80]	; 0x50
 80173fa:	ea4c 0c08 	orr.w	ip, ip, r8
 80173fe:	f82a cb02 	strh.w	ip, [sl], #2
 8017402:	4402      	add	r2, r0
 8017404:	e7ac      	b.n	8017360 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8017406:	f8bd a008 	ldrh.w	sl, [sp, #8]
 801740a:	f04f 0800 	mov.w	r8, #0
 801740e:	eb03 0008 	add.w	r0, r3, r8
 8017412:	2800      	cmp	r0, #0
 8017414:	dc41      	bgt.n	801749a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8017416:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801741a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801741e:	9b01      	ldr	r3, [sp, #4]
 8017420:	2b00      	cmp	r3, #0
 8017422:	f340 8097 	ble.w	8017554 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8017426:	ee30 0a04 	vadd.f32	s0, s0, s8
 801742a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801742e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8017432:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017434:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017438:	ee31 1a05 	vadd.f32	s2, s2, s10
 801743c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017440:	eef0 6a62 	vmov.f32	s13, s5
 8017444:	ee61 7a27 	vmul.f32	s15, s2, s15
 8017448:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801744c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017450:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8017454:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8017458:	eef0 6a43 	vmov.f32	s13, s6
 801745c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017460:	ee12 2a90 	vmov	r2, s5
 8017464:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8017468:	fb92 f3f3 	sdiv	r3, r2, r3
 801746c:	ee13 2a10 	vmov	r2, s6
 8017470:	9313      	str	r3, [sp, #76]	; 0x4c
 8017472:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017474:	fb92 f3f3 	sdiv	r3, r2, r3
 8017478:	9314      	str	r3, [sp, #80]	; 0x50
 801747a:	9b01      	ldr	r3, [sp, #4]
 801747c:	9a05      	ldr	r2, [sp, #20]
 801747e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017482:	3b01      	subs	r3, #1
 8017484:	9301      	str	r3, [sp, #4]
 8017486:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801748a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801748c:	eeb0 3a67 	vmov.f32	s6, s15
 8017490:	bf08      	it	eq
 8017492:	4613      	moveq	r3, r2
 8017494:	eef0 2a47 	vmov.f32	s5, s14
 8017498:	e72c      	b.n	80172f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801749a:	140f      	asrs	r7, r1, #16
 801749c:	d453      	bmi.n	8017546 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801749e:	f8de 5008 	ldr.w	r5, [lr, #8]
 80174a2:	42bd      	cmp	r5, r7
 80174a4:	dd4f      	ble.n	8017546 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80174a6:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80174aa:	d44c      	bmi.n	8017546 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80174ac:	f8de 000c 	ldr.w	r0, [lr, #12]
 80174b0:	4560      	cmp	r0, ip
 80174b2:	dd48      	ble.n	8017546 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80174b4:	9803      	ldr	r0, [sp, #12]
 80174b6:	b22d      	sxth	r5, r5
 80174b8:	fb0c 0505 	mla	r5, ip, r5, r0
 80174bc:	5de8      	ldrb	r0, [r5, r7]
 80174be:	9d04      	ldr	r5, [sp, #16]
 80174c0:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 80174c4:	f06f 0501 	mvn.w	r5, #1
 80174c8:	fb05 fb08 	mul.w	fp, r5, r8
 80174cc:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80174d0:	f834 500b 	ldrh.w	r5, [r4, fp]
 80174d4:	122f      	asrs	r7, r5, #8
 80174d6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80174da:	fb17 f706 	smulbb	r7, r7, r6
 80174de:	ea4f 09e5 	mov.w	r9, r5, asr #3
 80174e2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80174e6:	00ed      	lsls	r5, r5, #3
 80174e8:	fb0c 7c0a 	mla	ip, ip, sl, r7
 80174ec:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80174f0:	10c7      	asrs	r7, r0, #3
 80174f2:	b2ed      	uxtb	r5, r5
 80174f4:	00c0      	lsls	r0, r0, #3
 80174f6:	fb19 f906 	smulbb	r9, r9, r6
 80174fa:	fb15 f506 	smulbb	r5, r5, r6
 80174fe:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8017502:	b2c0      	uxtb	r0, r0
 8017504:	fa1f fc8c 	uxth.w	ip, ip
 8017508:	fb07 970a 	mla	r7, r7, sl, r9
 801750c:	fb00 500a 	mla	r0, r0, sl, r5
 8017510:	b2bf      	uxth	r7, r7
 8017512:	b280      	uxth	r0, r0
 8017514:	f10c 0501 	add.w	r5, ip, #1
 8017518:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801751c:	f107 0901 	add.w	r9, r7, #1
 8017520:	1c45      	adds	r5, r0, #1
 8017522:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8017526:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801752a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801752e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8017532:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8017536:	ea45 0c0c 	orr.w	ip, r5, ip
 801753a:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801753e:	ea4c 0c09 	orr.w	ip, ip, r9
 8017542:	f824 c00b 	strh.w	ip, [r4, fp]
 8017546:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8017548:	4401      	add	r1, r0
 801754a:	9814      	ldr	r0, [sp, #80]	; 0x50
 801754c:	f108 38ff 	add.w	r8, r8, #4294967295
 8017550:	4402      	add	r2, r0
 8017552:	e75c      	b.n	801740e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8017554:	b007      	add	sp, #28
 8017556:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801755a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801755a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801755e:	b085      	sub	sp, #20
 8017560:	4693      	mov	fp, r2
 8017562:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8017564:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8017566:	6870      	ldr	r0, [r6, #4]
 8017568:	9100      	str	r1, [sp, #0]
 801756a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801756e:	fb00 2404 	mla	r4, r0, r4, r2
 8017572:	6832      	ldr	r2, [r6, #0]
 8017574:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8017578:	682a      	ldr	r2, [r5, #0]
 801757a:	9201      	str	r2, [sp, #4]
 801757c:	686a      	ldr	r2, [r5, #4]
 801757e:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8017582:	3204      	adds	r2, #4
 8017584:	9202      	str	r2, [sp, #8]
 8017586:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801758a:	9a00      	ldr	r2, [sp, #0]
 801758c:	2a00      	cmp	r2, #0
 801758e:	dc03      	bgt.n	8017598 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8017590:	f1bb 0f00 	cmp.w	fp, #0
 8017594:	f340 80a0 	ble.w	80176d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8017598:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801759a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801759e:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 80175a2:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80175a6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80175a8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80175ac:	2b00      	cmp	r3, #0
 80175ae:	dd0c      	ble.n	80175ca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80175b0:	1406      	asrs	r6, r0, #16
 80175b2:	d405      	bmi.n	80175c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80175b4:	454e      	cmp	r6, r9
 80175b6:	da03      	bge.n	80175c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80175b8:	1416      	asrs	r6, r2, #16
 80175ba:	d401      	bmi.n	80175c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80175bc:	4546      	cmp	r6, r8
 80175be:	db05      	blt.n	80175cc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80175c0:	4470      	add	r0, lr
 80175c2:	4462      	add	r2, ip
 80175c4:	3b01      	subs	r3, #1
 80175c6:	3402      	adds	r4, #2
 80175c8:	e7f0      	b.n	80175ac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80175ca:	d00f      	beq.n	80175ec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80175cc:	1e5e      	subs	r6, r3, #1
 80175ce:	fb0e 0706 	mla	r7, lr, r6, r0
 80175d2:	143f      	asrs	r7, r7, #16
 80175d4:	d541      	bpl.n	801765a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 80175d6:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 80175da:	4698      	mov	r8, r3
 80175dc:	9603      	str	r6, [sp, #12]
 80175de:	f1b8 0f00 	cmp.w	r8, #0
 80175e2:	dc59      	bgt.n	8017698 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80175e4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80175e8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80175ec:	9b00      	ldr	r3, [sp, #0]
 80175ee:	2b00      	cmp	r3, #0
 80175f0:	dd72      	ble.n	80176d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 80175f2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80175f6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80175fa:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80175fe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017600:	ee31 1a05 	vadd.f32	s2, s2, s10
 8017604:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017608:	eeb0 6a62 	vmov.f32	s12, s5
 801760c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8017610:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017614:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017618:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801761c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8017620:	eeb0 6a43 	vmov.f32	s12, s6
 8017624:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017628:	ee12 2a90 	vmov	r2, s5
 801762c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8017630:	fb92 fef3 	sdiv	lr, r2, r3
 8017634:	ee13 2a10 	vmov	r2, s6
 8017638:	fb92 fcf3 	sdiv	ip, r2, r3
 801763c:	9b00      	ldr	r3, [sp, #0]
 801763e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017642:	3b01      	subs	r3, #1
 8017644:	9300      	str	r3, [sp, #0]
 8017646:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801764a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801764c:	eeb0 3a67 	vmov.f32	s6, s15
 8017650:	bf08      	it	eq
 8017652:	465b      	moveq	r3, fp
 8017654:	eef0 2a47 	vmov.f32	s5, s14
 8017658:	e797      	b.n	801758a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801765a:	454f      	cmp	r7, r9
 801765c:	dabb      	bge.n	80175d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801765e:	fb0c 2606 	mla	r6, ip, r6, r2
 8017662:	1436      	asrs	r6, r6, #16
 8017664:	d4b7      	bmi.n	80175d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8017666:	4546      	cmp	r6, r8
 8017668:	dab5      	bge.n	80175d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801766a:	461e      	mov	r6, r3
 801766c:	46a0      	mov	r8, r4
 801766e:	2e00      	cmp	r6, #0
 8017670:	ddb8      	ble.n	80175e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8017672:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8017676:	9901      	ldr	r1, [sp, #4]
 8017678:	1417      	asrs	r7, r2, #16
 801767a:	ea4f 4920 	mov.w	r9, r0, asr #16
 801767e:	fb0a 1707 	mla	r7, sl, r7, r1
 8017682:	9902      	ldr	r1, [sp, #8]
 8017684:	f817 7009 	ldrb.w	r7, [r7, r9]
 8017688:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801768c:	f828 7b02 	strh.w	r7, [r8], #2
 8017690:	4470      	add	r0, lr
 8017692:	4462      	add	r2, ip
 8017694:	3e01      	subs	r6, #1
 8017696:	e7ea      	b.n	801766e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8017698:	ea5f 4920 	movs.w	r9, r0, asr #16
 801769c:	d417      	bmi.n	80176ce <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801769e:	68ae      	ldr	r6, [r5, #8]
 80176a0:	454e      	cmp	r6, r9
 80176a2:	dd14      	ble.n	80176ce <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80176a4:	ea5f 4a22 	movs.w	sl, r2, asr #16
 80176a8:	d411      	bmi.n	80176ce <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80176aa:	68ef      	ldr	r7, [r5, #12]
 80176ac:	4557      	cmp	r7, sl
 80176ae:	dd0e      	ble.n	80176ce <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80176b0:	9f01      	ldr	r7, [sp, #4]
 80176b2:	b236      	sxth	r6, r6
 80176b4:	fb0a 7606 	mla	r6, sl, r6, r7
 80176b8:	9f02      	ldr	r7, [sp, #8]
 80176ba:	f816 6009 	ldrb.w	r6, [r6, r9]
 80176be:	f06f 0101 	mvn.w	r1, #1
 80176c2:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 80176c6:	fb01 f608 	mul.w	r6, r1, r8
 80176ca:	9903      	ldr	r1, [sp, #12]
 80176cc:	538f      	strh	r7, [r1, r6]
 80176ce:	4470      	add	r0, lr
 80176d0:	4462      	add	r2, ip
 80176d2:	f108 38ff 	add.w	r8, r8, #4294967295
 80176d6:	e782      	b.n	80175de <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80176d8:	b005      	add	sp, #20
 80176da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080176de <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80176de:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80176e2:	b087      	sub	sp, #28
 80176e4:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80176e6:	9205      	str	r2, [sp, #20]
 80176e8:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80176ec:	9203      	str	r2, [sp, #12]
 80176ee:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 80176f2:	9102      	str	r1, [sp, #8]
 80176f4:	6861      	ldr	r1, [r4, #4]
 80176f6:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 80176fa:	fb01 2000 	mla	r0, r1, r0, r2
 80176fe:	6822      	ldr	r2, [r4, #0]
 8017700:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8017704:	9200      	str	r2, [sp, #0]
 8017706:	f8dc 2000 	ldr.w	r2, [ip]
 801770a:	9204      	str	r2, [sp, #16]
 801770c:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8017710:	3204      	adds	r2, #4
 8017712:	9201      	str	r2, [sp, #4]
 8017714:	9a03      	ldr	r2, [sp, #12]
 8017716:	43d5      	mvns	r5, r2
 8017718:	b2ed      	uxtb	r5, r5
 801771a:	9a02      	ldr	r2, [sp, #8]
 801771c:	2a00      	cmp	r2, #0
 801771e:	dc03      	bgt.n	8017728 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8017720:	9a05      	ldr	r2, [sp, #20]
 8017722:	2a00      	cmp	r2, #0
 8017724:	f340 812c 	ble.w	8017980 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8017728:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801772a:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 801772e:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8017732:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8017736:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8017738:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801773c:	2b00      	cmp	r3, #0
 801773e:	dd10      	ble.n	8017762 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8017740:	140c      	asrs	r4, r1, #16
 8017742:	d405      	bmi.n	8017750 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8017744:	4574      	cmp	r4, lr
 8017746:	da03      	bge.n	8017750 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8017748:	1414      	asrs	r4, r2, #16
 801774a:	d401      	bmi.n	8017750 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801774c:	42bc      	cmp	r4, r7
 801774e:	db09      	blt.n	8017764 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8017750:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8017752:	9800      	ldr	r0, [sp, #0]
 8017754:	4421      	add	r1, r4
 8017756:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8017758:	3002      	adds	r0, #2
 801775a:	4422      	add	r2, r4
 801775c:	3b01      	subs	r3, #1
 801775e:	9000      	str	r0, [sp, #0]
 8017760:	e7ec      	b.n	801773c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8017762:	d071      	beq.n	8017848 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8017764:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8017766:	1e5c      	subs	r4, r3, #1
 8017768:	fb06 1604 	mla	r6, r6, r4, r1
 801776c:	1436      	asrs	r6, r6, #16
 801776e:	d45d      	bmi.n	801782c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8017770:	4576      	cmp	r6, lr
 8017772:	da5b      	bge.n	801782c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8017774:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8017776:	fb06 2404 	mla	r4, r6, r4, r2
 801777a:	1424      	asrs	r4, r4, #16
 801777c:	d456      	bmi.n	801782c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801777e:	42bc      	cmp	r4, r7
 8017780:	da54      	bge.n	801782c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8017782:	f8dd 9000 	ldr.w	r9, [sp]
 8017786:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 801778a:	4698      	mov	r8, r3
 801778c:	f1b8 0f00 	cmp.w	r8, #0
 8017790:	dd54      	ble.n	801783c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8017792:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8017796:	9804      	ldr	r0, [sp, #16]
 8017798:	1414      	asrs	r4, r2, #16
 801779a:	fb07 0404 	mla	r4, r7, r4, r0
 801779e:	140e      	asrs	r6, r1, #16
 80177a0:	9801      	ldr	r0, [sp, #4]
 80177a2:	f814 e006 	ldrb.w	lr, [r4, r6]
 80177a6:	f8b9 4000 	ldrh.w	r4, [r9]
 80177aa:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80177ae:	eb00 0b0e 	add.w	fp, r0, lr
 80177b2:	1227      	asrs	r7, r4, #8
 80177b4:	f89b 6002 	ldrb.w	r6, [fp, #2]
 80177b8:	f89b b001 	ldrb.w	fp, [fp, #1]
 80177bc:	f810 e00e 	ldrb.w	lr, [r0, lr]
 80177c0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80177c2:	fb16 f60a 	smulbb	r6, r6, sl
 80177c6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80177ca:	fb07 6705 	mla	r7, r7, r5, r6
 80177ce:	10e6      	asrs	r6, r4, #3
 80177d0:	00e4      	lsls	r4, r4, #3
 80177d2:	b2e4      	uxtb	r4, r4
 80177d4:	fb1b fb0a 	smulbb	fp, fp, sl
 80177d8:	fb14 f405 	smulbb	r4, r4, r5
 80177dc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80177e0:	b2bf      	uxth	r7, r7
 80177e2:	fb06 b605 	mla	r6, r6, r5, fp
 80177e6:	fb0e 4e0a 	mla	lr, lr, sl, r4
 80177ea:	b2b6      	uxth	r6, r6
 80177ec:	fa1f fe8e 	uxth.w	lr, lr
 80177f0:	1c7c      	adds	r4, r7, #1
 80177f2:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 80177f6:	f106 0b01 	add.w	fp, r6, #1
 80177fa:	f10e 0401 	add.w	r4, lr, #1
 80177fe:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 8017802:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8017806:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801780a:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801780e:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8017812:	4327      	orrs	r7, r4
 8017814:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8017818:	4401      	add	r1, r0
 801781a:	9814      	ldr	r0, [sp, #80]	; 0x50
 801781c:	ea47 070b 	orr.w	r7, r7, fp
 8017820:	f829 7b02 	strh.w	r7, [r9], #2
 8017824:	4402      	add	r2, r0
 8017826:	f108 38ff 	add.w	r8, r8, #4294967295
 801782a:	e7af      	b.n	801778c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801782c:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8017830:	f04f 0e00 	mov.w	lr, #0
 8017834:	eb03 040e 	add.w	r4, r3, lr
 8017838:	2c00      	cmp	r4, #0
 801783a:	dc43      	bgt.n	80178c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801783c:	9a00      	ldr	r2, [sp, #0]
 801783e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8017842:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8017846:	9300      	str	r3, [sp, #0]
 8017848:	9b02      	ldr	r3, [sp, #8]
 801784a:	2b00      	cmp	r3, #0
 801784c:	f340 8098 	ble.w	8017980 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8017850:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017854:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8017858:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801785c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801785e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017862:	ee31 1a05 	vadd.f32	s2, s2, s10
 8017866:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801786a:	eef0 6a62 	vmov.f32	s13, s5
 801786e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8017872:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017876:	ee77 2a62 	vsub.f32	s5, s14, s5
 801787a:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801787e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8017882:	eef0 6a43 	vmov.f32	s13, s6
 8017886:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801788a:	ee12 2a90 	vmov	r2, s5
 801788e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8017892:	fb92 f3f3 	sdiv	r3, r2, r3
 8017896:	ee13 2a10 	vmov	r2, s6
 801789a:	9313      	str	r3, [sp, #76]	; 0x4c
 801789c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801789e:	fb92 f3f3 	sdiv	r3, r2, r3
 80178a2:	9314      	str	r3, [sp, #80]	; 0x50
 80178a4:	9b02      	ldr	r3, [sp, #8]
 80178a6:	9a05      	ldr	r2, [sp, #20]
 80178a8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80178ac:	3b01      	subs	r3, #1
 80178ae:	9302      	str	r3, [sp, #8]
 80178b0:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 80178b4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80178b6:	eeb0 3a67 	vmov.f32	s6, s15
 80178ba:	bf08      	it	eq
 80178bc:	4613      	moveq	r3, r2
 80178be:	eef0 2a47 	vmov.f32	s5, s14
 80178c2:	e72a      	b.n	801771a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80178c4:	140f      	asrs	r7, r1, #16
 80178c6:	d454      	bmi.n	8017972 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80178c8:	f8dc 6008 	ldr.w	r6, [ip, #8]
 80178cc:	42be      	cmp	r6, r7
 80178ce:	dd50      	ble.n	8017972 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80178d0:	ea5f 4822 	movs.w	r8, r2, asr #16
 80178d4:	d44d      	bmi.n	8017972 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80178d6:	f8dc 400c 	ldr.w	r4, [ip, #12]
 80178da:	4544      	cmp	r4, r8
 80178dc:	dd49      	ble.n	8017972 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80178de:	9c04      	ldr	r4, [sp, #16]
 80178e0:	b236      	sxth	r6, r6
 80178e2:	fb08 4606 	mla	r6, r8, r6, r4
 80178e6:	f06f 0001 	mvn.w	r0, #1
 80178ea:	f816 8007 	ldrb.w	r8, [r6, r7]
 80178ee:	9c01      	ldr	r4, [sp, #4]
 80178f0:	fb00 fa0e 	mul.w	sl, r0, lr
 80178f4:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 80178f8:	9800      	ldr	r0, [sp, #0]
 80178fa:	eb04 0b08 	add.w	fp, r4, r8
 80178fe:	f830 400a 	ldrh.w	r4, [r0, sl]
 8017902:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8017906:	9801      	ldr	r0, [sp, #4]
 8017908:	f89b b001 	ldrb.w	fp, [fp, #1]
 801790c:	f810 8008 	ldrb.w	r8, [r0, r8]
 8017910:	9800      	ldr	r0, [sp, #0]
 8017912:	1227      	asrs	r7, r4, #8
 8017914:	fb16 f609 	smulbb	r6, r6, r9
 8017918:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801791c:	fb07 6705 	mla	r7, r7, r5, r6
 8017920:	10e6      	asrs	r6, r4, #3
 8017922:	00e4      	lsls	r4, r4, #3
 8017924:	b2e4      	uxtb	r4, r4
 8017926:	fb1b fb09 	smulbb	fp, fp, r9
 801792a:	fb14 f405 	smulbb	r4, r4, r5
 801792e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8017932:	b2bf      	uxth	r7, r7
 8017934:	fb06 b605 	mla	r6, r6, r5, fp
 8017938:	fb08 4809 	mla	r8, r8, r9, r4
 801793c:	b2b6      	uxth	r6, r6
 801793e:	fa1f f888 	uxth.w	r8, r8
 8017942:	1c7c      	adds	r4, r7, #1
 8017944:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8017948:	f106 0b01 	add.w	fp, r6, #1
 801794c:	f108 0401 	add.w	r4, r8, #1
 8017950:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8017954:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8017958:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801795c:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8017960:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8017964:	4327      	orrs	r7, r4
 8017966:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801796a:	ea47 070b 	orr.w	r7, r7, fp
 801796e:	f820 700a 	strh.w	r7, [r0, sl]
 8017972:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8017974:	4401      	add	r1, r0
 8017976:	9814      	ldr	r0, [sp, #80]	; 0x50
 8017978:	f10e 3eff 	add.w	lr, lr, #4294967295
 801797c:	4402      	add	r2, r0
 801797e:	e759      	b.n	8017834 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8017980:	b007      	add	sp, #28
 8017982:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08017988 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017988:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801798c:	b085      	sub	sp, #20
 801798e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8017992:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8017994:	9203      	str	r2, [sp, #12]
 8017996:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801799a:	6870      	ldr	r0, [r6, #4]
 801799c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801799e:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 80179a2:	686f      	ldr	r7, [r5, #4]
 80179a4:	9101      	str	r1, [sp, #4]
 80179a6:	fb00 2404 	mla	r4, r0, r4, r2
 80179aa:	6832      	ldr	r2, [r6, #0]
 80179ac:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80179b0:	682a      	ldr	r2, [r5, #0]
 80179b2:	9202      	str	r2, [sp, #8]
 80179b4:	3704      	adds	r7, #4
 80179b6:	9a01      	ldr	r2, [sp, #4]
 80179b8:	2a00      	cmp	r2, #0
 80179ba:	dc03      	bgt.n	80179c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80179bc:	9a03      	ldr	r2, [sp, #12]
 80179be:	2a00      	cmp	r2, #0
 80179c0:	f340 80cc 	ble.w	8017b5c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80179c4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80179c6:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80179ca:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 80179ce:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80179d2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80179d4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80179d8:	2b00      	cmp	r3, #0
 80179da:	dd0d      	ble.n	80179f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80179dc:	1406      	asrs	r6, r0, #16
 80179de:	d405      	bmi.n	80179ec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80179e0:	454e      	cmp	r6, r9
 80179e2:	da03      	bge.n	80179ec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80179e4:	1416      	asrs	r6, r2, #16
 80179e6:	d401      	bmi.n	80179ec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80179e8:	4546      	cmp	r6, r8
 80179ea:	db06      	blt.n	80179fa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80179ec:	9e12      	ldr	r6, [sp, #72]	; 0x48
 80179ee:	4460      	add	r0, ip
 80179f0:	4432      	add	r2, r6
 80179f2:	3b01      	subs	r3, #1
 80179f4:	3402      	adds	r4, #2
 80179f6:	e7ef      	b.n	80179d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 80179f8:	d00f      	beq.n	8017a1a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80179fa:	1e5e      	subs	r6, r3, #1
 80179fc:	fb0c 0e06 	mla	lr, ip, r6, r0
 8017a00:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8017a04:	d543      	bpl.n	8017a8e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8017a06:	4698      	mov	r8, r3
 8017a08:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8017a0c:	f1b8 0f00 	cmp.w	r8, #0
 8017a10:	dc71      	bgt.n	8017af6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8017a12:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8017a16:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8017a1a:	9b01      	ldr	r3, [sp, #4]
 8017a1c:	2b00      	cmp	r3, #0
 8017a1e:	f340 809d 	ble.w	8017b5c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8017a22:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017a26:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017a2a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8017a2e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017a30:	ee31 1a05 	vadd.f32	s2, s2, s10
 8017a34:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017a38:	eeb0 6a62 	vmov.f32	s12, s5
 8017a3c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8017a40:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017a44:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017a48:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8017a4c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8017a50:	eeb0 6a43 	vmov.f32	s12, s6
 8017a54:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017a58:	ee12 2a90 	vmov	r2, s5
 8017a5c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8017a60:	fb92 fcf3 	sdiv	ip, r2, r3
 8017a64:	ee13 2a10 	vmov	r2, s6
 8017a68:	fb92 f3f3 	sdiv	r3, r2, r3
 8017a6c:	9312      	str	r3, [sp, #72]	; 0x48
 8017a6e:	9b01      	ldr	r3, [sp, #4]
 8017a70:	9a03      	ldr	r2, [sp, #12]
 8017a72:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017a76:	3b01      	subs	r3, #1
 8017a78:	9301      	str	r3, [sp, #4]
 8017a7a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8017a7e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017a80:	eeb0 3a67 	vmov.f32	s6, s15
 8017a84:	bf08      	it	eq
 8017a86:	4613      	moveq	r3, r2
 8017a88:	eef0 2a47 	vmov.f32	s5, s14
 8017a8c:	e793      	b.n	80179b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8017a8e:	45ce      	cmp	lr, r9
 8017a90:	dab9      	bge.n	8017a06 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8017a92:	9912      	ldr	r1, [sp, #72]	; 0x48
 8017a94:	fb01 2606 	mla	r6, r1, r6, r2
 8017a98:	1436      	asrs	r6, r6, #16
 8017a9a:	d4b4      	bmi.n	8017a06 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8017a9c:	4546      	cmp	r6, r8
 8017a9e:	dab2      	bge.n	8017a06 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8017aa0:	4698      	mov	r8, r3
 8017aa2:	46a2      	mov	sl, r4
 8017aa4:	f1b8 0f00 	cmp.w	r8, #0
 8017aa8:	ddb3      	ble.n	8017a12 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8017aaa:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8017aae:	9902      	ldr	r1, [sp, #8]
 8017ab0:	1416      	asrs	r6, r2, #16
 8017ab2:	fb09 1606 	mla	r6, r9, r6, r1
 8017ab6:	ea4f 4e20 	mov.w	lr, r0, asr #16
 8017aba:	492a      	ldr	r1, [pc, #168]	; (8017b64 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8017abc:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8017ac0:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8017ac4:	eb07 0b0e 	add.w	fp, r7, lr
 8017ac8:	4460      	add	r0, ip
 8017aca:	f89b 6001 	ldrb.w	r6, [fp, #1]
 8017ace:	f89b 9002 	ldrb.w	r9, [fp, #2]
 8017ad2:	00f6      	lsls	r6, r6, #3
 8017ad4:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8017ad8:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8017adc:	ea49 0606 	orr.w	r6, r9, r6
 8017ae0:	f817 900e 	ldrb.w	r9, [r7, lr]
 8017ae4:	9912      	ldr	r1, [sp, #72]	; 0x48
 8017ae6:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 8017aea:	f82a 6b02 	strh.w	r6, [sl], #2
 8017aee:	440a      	add	r2, r1
 8017af0:	f108 38ff 	add.w	r8, r8, #4294967295
 8017af4:	e7d6      	b.n	8017aa4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8017af6:	ea5f 4920 	movs.w	r9, r0, asr #16
 8017afa:	d429      	bmi.n	8017b50 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8017afc:	68ae      	ldr	r6, [r5, #8]
 8017afe:	454e      	cmp	r6, r9
 8017b00:	dd26      	ble.n	8017b50 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8017b02:	ea5f 4b22 	movs.w	fp, r2, asr #16
 8017b06:	d423      	bmi.n	8017b50 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8017b08:	68e9      	ldr	r1, [r5, #12]
 8017b0a:	4559      	cmp	r1, fp
 8017b0c:	dd20      	ble.n	8017b50 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8017b0e:	9902      	ldr	r1, [sp, #8]
 8017b10:	fa0f fe86 	sxth.w	lr, r6
 8017b14:	fb0b 1e0e 	mla	lr, fp, lr, r1
 8017b18:	f06f 0101 	mvn.w	r1, #1
 8017b1c:	f81e e009 	ldrb.w	lr, [lr, r9]
 8017b20:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8017b24:	eb07 060e 	add.w	r6, r7, lr
 8017b28:	fb01 f908 	mul.w	r9, r1, r8
 8017b2c:	f896 b002 	ldrb.w	fp, [r6, #2]
 8017b30:	7876      	ldrb	r6, [r6, #1]
 8017b32:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 8017b36:	00f6      	lsls	r6, r6, #3
 8017b38:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 8017b3c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8017b40:	ea4b 0606 	orr.w	r6, fp, r6
 8017b44:	f817 b00e 	ldrb.w	fp, [r7, lr]
 8017b48:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 8017b4c:	f82a 6009 	strh.w	r6, [sl, r9]
 8017b50:	9912      	ldr	r1, [sp, #72]	; 0x48
 8017b52:	4460      	add	r0, ip
 8017b54:	440a      	add	r2, r1
 8017b56:	f108 38ff 	add.w	r8, r8, #4294967295
 8017b5a:	e757      	b.n	8017a0c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8017b5c:	b005      	add	sp, #20
 8017b5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017b62:	bf00      	nop
 8017b64:	fffff800 	.word	0xfffff800

08017b68 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017b68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017b6c:	b087      	sub	sp, #28
 8017b6e:	468b      	mov	fp, r1
 8017b70:	9815      	ldr	r0, [sp, #84]	; 0x54
 8017b72:	9204      	str	r2, [sp, #16]
 8017b74:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8017b78:	9205      	str	r2, [sp, #20]
 8017b7a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8017b7e:	6841      	ldr	r1, [r0, #4]
 8017b80:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8017b84:	fb01 2404 	mla	r4, r1, r4, r2
 8017b88:	6802      	ldr	r2, [r0, #0]
 8017b8a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8017b8e:	f8dc 2000 	ldr.w	r2, [ip]
 8017b92:	9201      	str	r2, [sp, #4]
 8017b94:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8017b98:	3204      	adds	r2, #4
 8017b9a:	9202      	str	r2, [sp, #8]
 8017b9c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8017ba0:	f1bb 0f00 	cmp.w	fp, #0
 8017ba4:	dc03      	bgt.n	8017bae <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8017ba6:	9a04      	ldr	r2, [sp, #16]
 8017ba8:	2a00      	cmp	r2, #0
 8017baa:	f340 8138 	ble.w	8017e1e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8017bae:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8017bb0:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8017bb4:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8017bb8:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8017bbc:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8017bbe:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8017bc2:	2b00      	cmp	r3, #0
 8017bc4:	dd0e      	ble.n	8017be4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8017bc6:	1402      	asrs	r2, r0, #16
 8017bc8:	d405      	bmi.n	8017bd6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8017bca:	42ba      	cmp	r2, r7
 8017bcc:	da03      	bge.n	8017bd6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8017bce:	140a      	asrs	r2, r1, #16
 8017bd0:	d401      	bmi.n	8017bd6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8017bd2:	42b2      	cmp	r2, r6
 8017bd4:	db07      	blt.n	8017be6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8017bd6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8017bd8:	4410      	add	r0, r2
 8017bda:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8017bdc:	3b01      	subs	r3, #1
 8017bde:	4411      	add	r1, r2
 8017be0:	3402      	adds	r4, #2
 8017be2:	e7ee      	b.n	8017bc2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8017be4:	d019      	beq.n	8017c1a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8017be6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8017be8:	1e5a      	subs	r2, r3, #1
 8017bea:	fb05 0502 	mla	r5, r5, r2, r0
 8017bee:	142d      	asrs	r5, r5, #16
 8017bf0:	d409      	bmi.n	8017c06 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8017bf2:	42bd      	cmp	r5, r7
 8017bf4:	da07      	bge.n	8017c06 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8017bf6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8017bf8:	fb05 1202 	mla	r2, r5, r2, r1
 8017bfc:	1412      	asrs	r2, r2, #16
 8017bfe:	d402      	bmi.n	8017c06 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8017c00:	42b2      	cmp	r2, r6
 8017c02:	f2c0 80ac 	blt.w	8017d5e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8017c06:	f04f 0e00 	mov.w	lr, #0
 8017c0a:	eb03 020e 	add.w	r2, r3, lr
 8017c0e:	2a00      	cmp	r2, #0
 8017c10:	dc3e      	bgt.n	8017c90 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8017c12:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8017c16:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8017c1a:	f1bb 0f00 	cmp.w	fp, #0
 8017c1e:	f340 80fe 	ble.w	8017e1e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8017c22:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017c26:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017c2a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8017c2e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017c30:	f1bb 0b01 	subs.w	fp, fp, #1
 8017c34:	ee31 1a05 	vadd.f32	s2, s2, s10
 8017c38:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017c3c:	eeb0 6a62 	vmov.f32	s12, s5
 8017c40:	ee61 7a27 	vmul.f32	s15, s2, s15
 8017c44:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017c48:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017c4c:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8017c50:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8017c54:	eeb0 6a43 	vmov.f32	s12, s6
 8017c58:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017c5c:	ee12 2a90 	vmov	r2, s5
 8017c60:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8017c64:	fb92 f3f3 	sdiv	r3, r2, r3
 8017c68:	ee13 2a10 	vmov	r2, s6
 8017c6c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017c70:	9313      	str	r3, [sp, #76]	; 0x4c
 8017c72:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017c74:	fb92 f3f3 	sdiv	r3, r2, r3
 8017c78:	9a04      	ldr	r2, [sp, #16]
 8017c7a:	9314      	str	r3, [sp, #80]	; 0x50
 8017c7c:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8017c80:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017c82:	eeb0 3a67 	vmov.f32	s6, s15
 8017c86:	bf08      	it	eq
 8017c88:	4613      	moveq	r3, r2
 8017c8a:	eef0 2a47 	vmov.f32	s5, s14
 8017c8e:	e787      	b.n	8017ba0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8017c90:	1406      	asrs	r6, r0, #16
 8017c92:	d45d      	bmi.n	8017d50 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8017c94:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8017c98:	42b5      	cmp	r5, r6
 8017c9a:	dd59      	ble.n	8017d50 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8017c9c:	140f      	asrs	r7, r1, #16
 8017c9e:	d457      	bmi.n	8017d50 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8017ca0:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8017ca4:	42ba      	cmp	r2, r7
 8017ca6:	dd53      	ble.n	8017d50 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8017ca8:	9a01      	ldr	r2, [sp, #4]
 8017caa:	b22d      	sxth	r5, r5
 8017cac:	fb07 2505 	mla	r5, r7, r5, r2
 8017cb0:	5daa      	ldrb	r2, [r5, r6]
 8017cb2:	9d02      	ldr	r5, [sp, #8]
 8017cb4:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8017cb8:	0e2e      	lsrs	r6, r5, #24
 8017cba:	d049      	beq.n	8017d50 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8017cbc:	f06f 0201 	mvn.w	r2, #1
 8017cc0:	fb02 f20e 	mul.w	r2, r2, lr
 8017cc4:	9203      	str	r2, [sp, #12]
 8017cc6:	f834 8002 	ldrh.w	r8, [r4, r2]
 8017cca:	9a05      	ldr	r2, [sp, #20]
 8017ccc:	4356      	muls	r6, r2
 8017cce:	1c72      	adds	r2, r6, #1
 8017cd0:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8017cd4:	1212      	asrs	r2, r2, #8
 8017cd6:	fa1f f982 	uxth.w	r9, r2
 8017cda:	ea4f 2728 	mov.w	r7, r8, asr #8
 8017cde:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8017ce2:	43d2      	mvns	r2, r2
 8017ce4:	b2d2      	uxtb	r2, r2
 8017ce6:	fb16 f609 	smulbb	r6, r6, r9
 8017cea:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8017cee:	fb07 6702 	mla	r7, r7, r2, r6
 8017cf2:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8017cf6:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8017cfa:	b2ed      	uxtb	r5, r5
 8017cfc:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8017d00:	fa5f f888 	uxtb.w	r8, r8
 8017d04:	fb15 f509 	smulbb	r5, r5, r9
 8017d08:	fb08 5502 	mla	r5, r8, r2, r5
 8017d0c:	b2bf      	uxth	r7, r7
 8017d0e:	fb1a fa09 	smulbb	sl, sl, r9
 8017d12:	b2ad      	uxth	r5, r5
 8017d14:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8017d18:	fb06 a602 	mla	r6, r6, r2, sl
 8017d1c:	1c7a      	adds	r2, r7, #1
 8017d1e:	f105 0a01 	add.w	sl, r5, #1
 8017d22:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8017d26:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8017d2a:	b2b6      	uxth	r6, r6
 8017d2c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8017d30:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8017d34:	ea4a 0707 	orr.w	r7, sl, r7
 8017d38:	f106 0a01 	add.w	sl, r6, #1
 8017d3c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8017d40:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8017d44:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8017d48:	9a03      	ldr	r2, [sp, #12]
 8017d4a:	ea47 070a 	orr.w	r7, r7, sl
 8017d4e:	52a7      	strh	r7, [r4, r2]
 8017d50:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8017d52:	4410      	add	r0, r2
 8017d54:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8017d56:	f10e 3eff 	add.w	lr, lr, #4294967295
 8017d5a:	4411      	add	r1, r2
 8017d5c:	e755      	b.n	8017c0a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8017d5e:	f04f 0800 	mov.w	r8, #0
 8017d62:	eba3 0208 	sub.w	r2, r3, r8
 8017d66:	2a00      	cmp	r2, #0
 8017d68:	f77f af53 	ble.w	8017c12 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8017d6c:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 8017d70:	9f01      	ldr	r7, [sp, #4]
 8017d72:	140a      	asrs	r2, r1, #16
 8017d74:	1405      	asrs	r5, r0, #16
 8017d76:	fb06 7202 	mla	r2, r6, r2, r7
 8017d7a:	5d52      	ldrb	r2, [r2, r5]
 8017d7c:	9d02      	ldr	r5, [sp, #8]
 8017d7e:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8017d82:	0e2e      	lsrs	r6, r5, #24
 8017d84:	d044      	beq.n	8017e10 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8017d86:	9a05      	ldr	r2, [sp, #20]
 8017d88:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8017d8c:	4356      	muls	r6, r2
 8017d8e:	1c72      	adds	r2, r6, #1
 8017d90:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8017d94:	1212      	asrs	r2, r2, #8
 8017d96:	fa1f f982 	uxth.w	r9, r2
 8017d9a:	ea4f 272e 	mov.w	r7, lr, asr #8
 8017d9e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8017da2:	43d2      	mvns	r2, r2
 8017da4:	b2d2      	uxtb	r2, r2
 8017da6:	fb16 f609 	smulbb	r6, r6, r9
 8017daa:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8017dae:	fb07 6702 	mla	r7, r7, r2, r6
 8017db2:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8017db6:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8017dba:	b2ed      	uxtb	r5, r5
 8017dbc:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8017dc0:	fa5f fe8e 	uxtb.w	lr, lr
 8017dc4:	fb15 f509 	smulbb	r5, r5, r9
 8017dc8:	fb0e 5502 	mla	r5, lr, r2, r5
 8017dcc:	b2bf      	uxth	r7, r7
 8017dce:	fb1a fa09 	smulbb	sl, sl, r9
 8017dd2:	b2ad      	uxth	r5, r5
 8017dd4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8017dd8:	fb06 a602 	mla	r6, r6, r2, sl
 8017ddc:	1c7a      	adds	r2, r7, #1
 8017dde:	f105 0a01 	add.w	sl, r5, #1
 8017de2:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8017de6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8017dea:	b2b6      	uxth	r6, r6
 8017dec:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8017df0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8017df4:	ea4a 0707 	orr.w	r7, sl, r7
 8017df8:	f106 0a01 	add.w	sl, r6, #1
 8017dfc:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8017e00:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8017e04:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8017e08:	ea47 070a 	orr.w	r7, r7, sl
 8017e0c:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8017e10:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8017e12:	4410      	add	r0, r2
 8017e14:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8017e16:	f108 0801 	add.w	r8, r8, #1
 8017e1a:	4411      	add	r1, r2
 8017e1c:	e7a1      	b.n	8017d62 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8017e1e:	b007      	add	sp, #28
 8017e20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017e24 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017e24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017e28:	b085      	sub	sp, #20
 8017e2a:	468b      	mov	fp, r1
 8017e2c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8017e2e:	9203      	str	r2, [sp, #12]
 8017e30:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8017e34:	6841      	ldr	r1, [r0, #4]
 8017e36:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8017e3a:	fb01 2404 	mla	r4, r1, r4, r2
 8017e3e:	6802      	ldr	r2, [r0, #0]
 8017e40:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8017e44:	f8de 2000 	ldr.w	r2, [lr]
 8017e48:	9200      	str	r2, [sp, #0]
 8017e4a:	f8de 2004 	ldr.w	r2, [lr, #4]
 8017e4e:	3204      	adds	r2, #4
 8017e50:	9201      	str	r2, [sp, #4]
 8017e52:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8017e56:	f1bb 0f00 	cmp.w	fp, #0
 8017e5a:	dc03      	bgt.n	8017e64 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8017e5c:	9a03      	ldr	r2, [sp, #12]
 8017e5e:	2a00      	cmp	r2, #0
 8017e60:	f340 8153 	ble.w	801810a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8017e64:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8017e66:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8017e6a:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8017e6e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8017e72:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8017e74:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8017e78:	2b00      	cmp	r3, #0
 8017e7a:	dd0e      	ble.n	8017e9a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8017e7c:	1408      	asrs	r0, r1, #16
 8017e7e:	d405      	bmi.n	8017e8c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8017e80:	42b8      	cmp	r0, r7
 8017e82:	da03      	bge.n	8017e8c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8017e84:	1410      	asrs	r0, r2, #16
 8017e86:	d401      	bmi.n	8017e8c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8017e88:	42b0      	cmp	r0, r6
 8017e8a:	db07      	blt.n	8017e9c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8017e8c:	9811      	ldr	r0, [sp, #68]	; 0x44
 8017e8e:	4401      	add	r1, r0
 8017e90:	9812      	ldr	r0, [sp, #72]	; 0x48
 8017e92:	3b01      	subs	r3, #1
 8017e94:	4402      	add	r2, r0
 8017e96:	3402      	adds	r4, #2
 8017e98:	e7ee      	b.n	8017e78 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8017e9a:	d017      	beq.n	8017ecc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8017e9c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8017e9e:	1e58      	subs	r0, r3, #1
 8017ea0:	fb05 1500 	mla	r5, r5, r0, r1
 8017ea4:	142d      	asrs	r5, r5, #16
 8017ea6:	d409      	bmi.n	8017ebc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8017ea8:	42bd      	cmp	r5, r7
 8017eaa:	da07      	bge.n	8017ebc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8017eac:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8017eae:	fb05 2000 	mla	r0, r5, r0, r2
 8017eb2:	1400      	asrs	r0, r0, #16
 8017eb4:	d402      	bmi.n	8017ebc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8017eb6:	42b0      	cmp	r0, r6
 8017eb8:	f2c0 80bc 	blt.w	8018034 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8017ebc:	2600      	movs	r6, #0
 8017ebe:	1998      	adds	r0, r3, r6
 8017ec0:	2800      	cmp	r0, #0
 8017ec2:	dc3e      	bgt.n	8017f42 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8017ec4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8017ec8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8017ecc:	f1bb 0f00 	cmp.w	fp, #0
 8017ed0:	f340 811b 	ble.w	801810a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8017ed4:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017ed8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017edc:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8017ee0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017ee2:	f1bb 0b01 	subs.w	fp, fp, #1
 8017ee6:	ee31 1a05 	vadd.f32	s2, s2, s10
 8017eea:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017eee:	eeb0 6a62 	vmov.f32	s12, s5
 8017ef2:	ee61 7a27 	vmul.f32	s15, s2, s15
 8017ef6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017efa:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017efe:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8017f02:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8017f06:	eeb0 6a43 	vmov.f32	s12, s6
 8017f0a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017f0e:	ee12 2a90 	vmov	r2, s5
 8017f12:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8017f16:	fb92 f3f3 	sdiv	r3, r2, r3
 8017f1a:	ee13 2a10 	vmov	r2, s6
 8017f1e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017f22:	9311      	str	r3, [sp, #68]	; 0x44
 8017f24:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017f26:	fb92 f3f3 	sdiv	r3, r2, r3
 8017f2a:	9a03      	ldr	r2, [sp, #12]
 8017f2c:	9312      	str	r3, [sp, #72]	; 0x48
 8017f2e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8017f32:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017f34:	eeb0 3a67 	vmov.f32	s6, s15
 8017f38:	bf08      	it	eq
 8017f3a:	4613      	moveq	r3, r2
 8017f3c:	eef0 2a47 	vmov.f32	s5, s14
 8017f40:	e789      	b.n	8017e56 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8017f42:	140f      	asrs	r7, r1, #16
 8017f44:	d426      	bmi.n	8017f94 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8017f46:	f8de 5008 	ldr.w	r5, [lr, #8]
 8017f4a:	42bd      	cmp	r5, r7
 8017f4c:	dd22      	ble.n	8017f94 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8017f4e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8017f52:	d41f      	bmi.n	8017f94 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8017f54:	f8de 000c 	ldr.w	r0, [lr, #12]
 8017f58:	4560      	cmp	r0, ip
 8017f5a:	dd1b      	ble.n	8017f94 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8017f5c:	9800      	ldr	r0, [sp, #0]
 8017f5e:	b22d      	sxth	r5, r5
 8017f60:	fb0c 0505 	mla	r5, ip, r5, r0
 8017f64:	5de8      	ldrb	r0, [r5, r7]
 8017f66:	9d01      	ldr	r5, [sp, #4]
 8017f68:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8017f6c:	0e07      	lsrs	r7, r0, #24
 8017f6e:	2fff      	cmp	r7, #255	; 0xff
 8017f70:	d116      	bne.n	8017fa0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8017f72:	f06f 0501 	mvn.w	r5, #1
 8017f76:	fb05 f706 	mul.w	r7, r5, r6
 8017f7a:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8017f7e:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8017f82:	0945      	lsrs	r5, r0, #5
 8017f84:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8017f88:	ea4c 0505 	orr.w	r5, ip, r5
 8017f8c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8017f90:	4305      	orrs	r5, r0
 8017f92:	53e5      	strh	r5, [r4, r7]
 8017f94:	9811      	ldr	r0, [sp, #68]	; 0x44
 8017f96:	4401      	add	r1, r0
 8017f98:	9812      	ldr	r0, [sp, #72]	; 0x48
 8017f9a:	3e01      	subs	r6, #1
 8017f9c:	4402      	add	r2, r0
 8017f9e:	e78e      	b.n	8017ebe <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8017fa0:	b2fd      	uxtb	r5, r7
 8017fa2:	2f00      	cmp	r7, #0
 8017fa4:	d0f6      	beq.n	8017f94 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8017fa6:	f06f 0701 	mvn.w	r7, #1
 8017faa:	4377      	muls	r7, r6
 8017fac:	fa1f f985 	uxth.w	r9, r5
 8017fb0:	f834 8007 	ldrh.w	r8, [r4, r7]
 8017fb4:	9702      	str	r7, [sp, #8]
 8017fb6:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8017fba:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8017fbe:	43ed      	mvns	r5, r5
 8017fc0:	b2ed      	uxtb	r5, r5
 8017fc2:	fb17 f709 	smulbb	r7, r7, r9
 8017fc6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8017fca:	fb0c 7c05 	mla	ip, ip, r5, r7
 8017fce:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8017fd2:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8017fd6:	b2c0      	uxtb	r0, r0
 8017fd8:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8017fdc:	fa5f f888 	uxtb.w	r8, r8
 8017fe0:	fb10 f009 	smulbb	r0, r0, r9
 8017fe4:	fb08 0005 	mla	r0, r8, r5, r0
 8017fe8:	b280      	uxth	r0, r0
 8017fea:	fa1f fc8c 	uxth.w	ip, ip
 8017fee:	fb1a fa09 	smulbb	sl, sl, r9
 8017ff2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8017ff6:	fb07 a705 	mla	r7, r7, r5, sl
 8017ffa:	f100 0a01 	add.w	sl, r0, #1
 8017ffe:	f10c 0501 	add.w	r5, ip, #1
 8018002:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8018006:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801800a:	b2bf      	uxth	r7, r7
 801800c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8018010:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8018014:	ea4a 0c0c 	orr.w	ip, sl, ip
 8018018:	f107 0a01 	add.w	sl, r7, #1
 801801c:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8018020:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8018024:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8018028:	9802      	ldr	r0, [sp, #8]
 801802a:	ea4c 0c0a 	orr.w	ip, ip, sl
 801802e:	f824 c000 	strh.w	ip, [r4, r0]
 8018032:	e7af      	b.n	8017f94 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8018034:	f04f 0800 	mov.w	r8, #0
 8018038:	eba3 0008 	sub.w	r0, r3, r8
 801803c:	2800      	cmp	r0, #0
 801803e:	f77f af41 	ble.w	8017ec4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8018042:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8018046:	9f00      	ldr	r7, [sp, #0]
 8018048:	1410      	asrs	r0, r2, #16
 801804a:	140d      	asrs	r5, r1, #16
 801804c:	fb06 7000 	mla	r0, r6, r0, r7
 8018050:	5d40      	ldrb	r0, [r0, r5]
 8018052:	9d01      	ldr	r5, [sp, #4]
 8018054:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8018058:	0e2e      	lsrs	r6, r5, #24
 801805a:	2eff      	cmp	r6, #255	; 0xff
 801805c:	d112      	bne.n	8018084 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 801805e:	482c      	ldr	r0, [pc, #176]	; (8018110 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8018060:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8018064:	0968      	lsrs	r0, r5, #5
 8018066:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801806a:	4330      	orrs	r0, r6
 801806c:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8018070:	4328      	orrs	r0, r5
 8018072:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 8018076:	9811      	ldr	r0, [sp, #68]	; 0x44
 8018078:	4401      	add	r1, r0
 801807a:	9812      	ldr	r0, [sp, #72]	; 0x48
 801807c:	f108 0801 	add.w	r8, r8, #1
 8018080:	4402      	add	r2, r0
 8018082:	e7d9      	b.n	8018038 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8018084:	b2f0      	uxtb	r0, r6
 8018086:	2e00      	cmp	r6, #0
 8018088:	d0f5      	beq.n	8018076 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801808a:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 801808e:	fa1f f980 	uxth.w	r9, r0
 8018092:	ea4f 272c 	mov.w	r7, ip, asr #8
 8018096:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801809a:	43c0      	mvns	r0, r0
 801809c:	b2c0      	uxtb	r0, r0
 801809e:	fb16 f609 	smulbb	r6, r6, r9
 80180a2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80180a6:	fb07 6700 	mla	r7, r7, r0, r6
 80180aa:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80180ae:	ea4f 06ec 	mov.w	r6, ip, asr #3
 80180b2:	b2ed      	uxtb	r5, r5
 80180b4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80180b8:	fa5f fc8c 	uxtb.w	ip, ip
 80180bc:	fb15 f509 	smulbb	r5, r5, r9
 80180c0:	fb0c 5500 	mla	r5, ip, r0, r5
 80180c4:	b2bf      	uxth	r7, r7
 80180c6:	fb1a fa09 	smulbb	sl, sl, r9
 80180ca:	b2ad      	uxth	r5, r5
 80180cc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80180d0:	fb06 a600 	mla	r6, r6, r0, sl
 80180d4:	1c78      	adds	r0, r7, #1
 80180d6:	f105 0a01 	add.w	sl, r5, #1
 80180da:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 80180de:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80180e2:	b2b6      	uxth	r6, r6
 80180e4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80180e8:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80180ec:	ea4a 0707 	orr.w	r7, sl, r7
 80180f0:	f106 0a01 	add.w	sl, r6, #1
 80180f4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80180f8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80180fc:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8018100:	ea47 070a 	orr.w	r7, r7, sl
 8018104:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8018108:	e7b5      	b.n	8018076 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801810a:	b005      	add	sp, #20
 801810c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018110:	fffff800 	.word	0xfffff800

08018114 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018114:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018118:	b087      	sub	sp, #28
 801811a:	468b      	mov	fp, r1
 801811c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801811e:	9204      	str	r2, [sp, #16]
 8018120:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8018124:	9205      	str	r2, [sp, #20]
 8018126:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801812a:	6861      	ldr	r1, [r4, #4]
 801812c:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8018130:	fb01 2000 	mla	r0, r1, r0, r2
 8018134:	6822      	ldr	r2, [r4, #0]
 8018136:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801813a:	f8de 2000 	ldr.w	r2, [lr]
 801813e:	9201      	str	r2, [sp, #4]
 8018140:	f8de 2004 	ldr.w	r2, [lr, #4]
 8018144:	9202      	str	r2, [sp, #8]
 8018146:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801814a:	f1bb 0f00 	cmp.w	fp, #0
 801814e:	dc03      	bgt.n	8018158 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8018150:	9a04      	ldr	r2, [sp, #16]
 8018152:	2a00      	cmp	r2, #0
 8018154:	f340 8142 	ble.w	80183dc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8018158:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801815a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801815e:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8018162:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8018166:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8018168:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801816c:	2b00      	cmp	r3, #0
 801816e:	dd0e      	ble.n	801818e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8018170:	140c      	asrs	r4, r1, #16
 8018172:	d405      	bmi.n	8018180 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8018174:	42bc      	cmp	r4, r7
 8018176:	da03      	bge.n	8018180 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8018178:	1414      	asrs	r4, r2, #16
 801817a:	d401      	bmi.n	8018180 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801817c:	42b4      	cmp	r4, r6
 801817e:	db07      	blt.n	8018190 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8018180:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8018182:	4421      	add	r1, r4
 8018184:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8018186:	3b01      	subs	r3, #1
 8018188:	4422      	add	r2, r4
 801818a:	3002      	adds	r0, #2
 801818c:	e7ee      	b.n	801816c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801818e:	d019      	beq.n	80181c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8018190:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8018192:	1e5c      	subs	r4, r3, #1
 8018194:	fb05 1504 	mla	r5, r5, r4, r1
 8018198:	142d      	asrs	r5, r5, #16
 801819a:	d409      	bmi.n	80181b0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801819c:	42bd      	cmp	r5, r7
 801819e:	da07      	bge.n	80181b0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80181a0:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80181a2:	fb05 2404 	mla	r4, r5, r4, r2
 80181a6:	1424      	asrs	r4, r4, #16
 80181a8:	d402      	bmi.n	80181b0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80181aa:	42b4      	cmp	r4, r6
 80181ac:	f2c0 80b1 	blt.w	8018312 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 80181b0:	f04f 0800 	mov.w	r8, #0
 80181b4:	eb03 0408 	add.w	r4, r3, r8
 80181b8:	2c00      	cmp	r4, #0
 80181ba:	dc3e      	bgt.n	801823a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80181bc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80181c0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80181c4:	f1bb 0f00 	cmp.w	fp, #0
 80181c8:	f340 8108 	ble.w	80183dc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 80181cc:	ee30 0a04 	vadd.f32	s0, s0, s8
 80181d0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80181d4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80181d8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80181da:	f1bb 0b01 	subs.w	fp, fp, #1
 80181de:	ee31 1a05 	vadd.f32	s2, s2, s10
 80181e2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80181e6:	eeb0 6a62 	vmov.f32	s12, s5
 80181ea:	ee61 7a27 	vmul.f32	s15, s2, s15
 80181ee:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80181f2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80181f6:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80181fa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80181fe:	eeb0 6a43 	vmov.f32	s12, s6
 8018202:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018206:	ee12 2a90 	vmov	r2, s5
 801820a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801820e:	fb92 f3f3 	sdiv	r3, r2, r3
 8018212:	ee13 2a10 	vmov	r2, s6
 8018216:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801821a:	9313      	str	r3, [sp, #76]	; 0x4c
 801821c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801821e:	fb92 f3f3 	sdiv	r3, r2, r3
 8018222:	9a04      	ldr	r2, [sp, #16]
 8018224:	9314      	str	r3, [sp, #80]	; 0x50
 8018226:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801822a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801822c:	eeb0 3a67 	vmov.f32	s6, s15
 8018230:	bf08      	it	eq
 8018232:	4613      	moveq	r3, r2
 8018234:	eef0 2a47 	vmov.f32	s5, s14
 8018238:	e787      	b.n	801814a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 801823a:	140e      	asrs	r6, r1, #16
 801823c:	d462      	bmi.n	8018304 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801823e:	f8de 5008 	ldr.w	r5, [lr, #8]
 8018242:	42b5      	cmp	r5, r6
 8018244:	dd5e      	ble.n	8018304 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8018246:	1417      	asrs	r7, r2, #16
 8018248:	d45c      	bmi.n	8018304 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801824a:	f8de 400c 	ldr.w	r4, [lr, #12]
 801824e:	42bc      	cmp	r4, r7
 8018250:	dd58      	ble.n	8018304 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8018252:	b22d      	sxth	r5, r5
 8018254:	fb07 6505 	mla	r5, r7, r5, r6
 8018258:	9c02      	ldr	r4, [sp, #8]
 801825a:	5d66      	ldrb	r6, [r4, r5]
 801825c:	2e00      	cmp	r6, #0
 801825e:	d051      	beq.n	8018304 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8018260:	9c01      	ldr	r4, [sp, #4]
 8018262:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 8018266:	f06f 0401 	mvn.w	r4, #1
 801826a:	fb04 f408 	mul.w	r4, r4, r8
 801826e:	9403      	str	r4, [sp, #12]
 8018270:	5b05      	ldrh	r5, [r0, r4]
 8018272:	9c05      	ldr	r4, [sp, #20]
 8018274:	4366      	muls	r6, r4
 8018276:	1c74      	adds	r4, r6, #1
 8018278:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801827c:	1224      	asrs	r4, r4, #8
 801827e:	b2a7      	uxth	r7, r4
 8018280:	122e      	asrs	r6, r5, #8
 8018282:	43e4      	mvns	r4, r4
 8018284:	b2e4      	uxtb	r4, r4
 8018286:	ea4f 2c29 	mov.w	ip, r9, asr #8
 801828a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801828e:	fb16 f604 	smulbb	r6, r6, r4
 8018292:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8018296:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801829a:	00ed      	lsls	r5, r5, #3
 801829c:	fb0c 6c07 	mla	ip, ip, r7, r6
 80182a0:	b2ed      	uxtb	r5, r5
 80182a2:	ea4f 06e9 	mov.w	r6, r9, asr #3
 80182a6:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 80182aa:	fb15 f504 	smulbb	r5, r5, r4
 80182ae:	fa5f f989 	uxtb.w	r9, r9
 80182b2:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80182b6:	fb09 5507 	mla	r5, r9, r7, r5
 80182ba:	fb1a fa04 	smulbb	sl, sl, r4
 80182be:	fa1f fc8c 	uxth.w	ip, ip
 80182c2:	b2ad      	uxth	r5, r5
 80182c4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80182c8:	fb06 a607 	mla	r6, r6, r7, sl
 80182cc:	f10c 0401 	add.w	r4, ip, #1
 80182d0:	f105 0a01 	add.w	sl, r5, #1
 80182d4:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 80182d8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80182dc:	b2b6      	uxth	r6, r6
 80182de:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80182e2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80182e6:	ea4a 0c0c 	orr.w	ip, sl, ip
 80182ea:	f106 0a01 	add.w	sl, r6, #1
 80182ee:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80182f2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80182f6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80182fa:	9c03      	ldr	r4, [sp, #12]
 80182fc:	ea4c 0c0a 	orr.w	ip, ip, sl
 8018300:	f820 c004 	strh.w	ip, [r0, r4]
 8018304:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8018306:	4421      	add	r1, r4
 8018308:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801830a:	f108 38ff 	add.w	r8, r8, #4294967295
 801830e:	4422      	add	r2, r4
 8018310:	e750      	b.n	80181b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8018312:	f04f 0900 	mov.w	r9, #0
 8018316:	eba3 0409 	sub.w	r4, r3, r9
 801831a:	2c00      	cmp	r4, #0
 801831c:	f77f af4e 	ble.w	80181bc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8018320:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8018324:	140d      	asrs	r5, r1, #16
 8018326:	1414      	asrs	r4, r2, #16
 8018328:	fb06 5404 	mla	r4, r6, r4, r5
 801832c:	9d02      	ldr	r5, [sp, #8]
 801832e:	5d2e      	ldrb	r6, [r5, r4]
 8018330:	2e00      	cmp	r6, #0
 8018332:	d04c      	beq.n	80183ce <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8018334:	9d01      	ldr	r5, [sp, #4]
 8018336:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 801833a:	9c05      	ldr	r4, [sp, #20]
 801833c:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8018340:	4366      	muls	r6, r4
 8018342:	1c74      	adds	r4, r6, #1
 8018344:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8018348:	1224      	asrs	r4, r4, #8
 801834a:	b2a7      	uxth	r7, r4
 801834c:	122e      	asrs	r6, r5, #8
 801834e:	43e4      	mvns	r4, r4
 8018350:	b2e4      	uxtb	r4, r4
 8018352:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8018356:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801835a:	fb16 f604 	smulbb	r6, r6, r4
 801835e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8018362:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018366:	00ed      	lsls	r5, r5, #3
 8018368:	fb0c 6c07 	mla	ip, ip, r7, r6
 801836c:	b2ed      	uxtb	r5, r5
 801836e:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8018372:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8018376:	fb15 f504 	smulbb	r5, r5, r4
 801837a:	fa5f f888 	uxtb.w	r8, r8
 801837e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8018382:	fb08 5507 	mla	r5, r8, r7, r5
 8018386:	fb1a fa04 	smulbb	sl, sl, r4
 801838a:	fa1f fc8c 	uxth.w	ip, ip
 801838e:	b2ad      	uxth	r5, r5
 8018390:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8018394:	fb06 a607 	mla	r6, r6, r7, sl
 8018398:	f10c 0401 	add.w	r4, ip, #1
 801839c:	f105 0a01 	add.w	sl, r5, #1
 80183a0:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 80183a4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80183a8:	b2b6      	uxth	r6, r6
 80183aa:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80183ae:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80183b2:	ea4a 0c0c 	orr.w	ip, sl, ip
 80183b6:	f106 0a01 	add.w	sl, r6, #1
 80183ba:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80183be:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80183c2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80183c6:	ea4c 0c0a 	orr.w	ip, ip, sl
 80183ca:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 80183ce:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80183d0:	4421      	add	r1, r4
 80183d2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80183d4:	f109 0901 	add.w	r9, r9, #1
 80183d8:	4422      	add	r2, r4
 80183da:	e79c      	b.n	8018316 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 80183dc:	b007      	add	sp, #28
 80183de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080183e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80183e2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80183e6:	b085      	sub	sp, #20
 80183e8:	468b      	mov	fp, r1
 80183ea:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80183ec:	9203      	str	r2, [sp, #12]
 80183ee:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 80183f2:	6861      	ldr	r1, [r4, #4]
 80183f4:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 80183f8:	fb01 2000 	mla	r0, r1, r0, r2
 80183fc:	6822      	ldr	r2, [r4, #0]
 80183fe:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8018402:	f8d8 2000 	ldr.w	r2, [r8]
 8018406:	9200      	str	r2, [sp, #0]
 8018408:	f8d8 2004 	ldr.w	r2, [r8, #4]
 801840c:	9201      	str	r2, [sp, #4]
 801840e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8018412:	f1bb 0f00 	cmp.w	fp, #0
 8018416:	dc03      	bgt.n	8018420 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8018418:	9a03      	ldr	r2, [sp, #12]
 801841a:	2a00      	cmp	r2, #0
 801841c:	f340 8146 	ble.w	80186ac <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8018420:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8018422:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8018426:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801842a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801842e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8018430:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8018434:	2b00      	cmp	r3, #0
 8018436:	dd0e      	ble.n	8018456 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8018438:	140c      	asrs	r4, r1, #16
 801843a:	d405      	bmi.n	8018448 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801843c:	42bc      	cmp	r4, r7
 801843e:	da03      	bge.n	8018448 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018440:	1414      	asrs	r4, r2, #16
 8018442:	d401      	bmi.n	8018448 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018444:	42b4      	cmp	r4, r6
 8018446:	db07      	blt.n	8018458 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8018448:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801844a:	4421      	add	r1, r4
 801844c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801844e:	3b01      	subs	r3, #1
 8018450:	4422      	add	r2, r4
 8018452:	3002      	adds	r0, #2
 8018454:	e7ee      	b.n	8018434 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8018456:	d017      	beq.n	8018488 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8018458:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801845a:	1e5c      	subs	r4, r3, #1
 801845c:	fb05 1504 	mla	r5, r5, r4, r1
 8018460:	142d      	asrs	r5, r5, #16
 8018462:	d409      	bmi.n	8018478 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8018464:	42bd      	cmp	r5, r7
 8018466:	da07      	bge.n	8018478 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8018468:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801846a:	fb05 2404 	mla	r4, r5, r4, r2
 801846e:	1424      	asrs	r4, r4, #16
 8018470:	d402      	bmi.n	8018478 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8018472:	42b4      	cmp	r4, r6
 8018474:	f2c0 80b3 	blt.w	80185de <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8018478:	2600      	movs	r6, #0
 801847a:	199c      	adds	r4, r3, r6
 801847c:	2c00      	cmp	r4, #0
 801847e:	dc3e      	bgt.n	80184fe <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8018480:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018484:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018488:	f1bb 0f00 	cmp.w	fp, #0
 801848c:	f340 810e 	ble.w	80186ac <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8018490:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018494:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018498:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801849c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801849e:	f1bb 0b01 	subs.w	fp, fp, #1
 80184a2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80184a6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80184aa:	eeb0 6a62 	vmov.f32	s12, s5
 80184ae:	ee61 7a27 	vmul.f32	s15, s2, s15
 80184b2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80184b6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80184ba:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80184be:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80184c2:	eeb0 6a43 	vmov.f32	s12, s6
 80184c6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80184ca:	ee12 2a90 	vmov	r2, s5
 80184ce:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80184d2:	fb92 f3f3 	sdiv	r3, r2, r3
 80184d6:	ee13 2a10 	vmov	r2, s6
 80184da:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80184de:	9311      	str	r3, [sp, #68]	; 0x44
 80184e0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80184e2:	fb92 f3f3 	sdiv	r3, r2, r3
 80184e6:	9a03      	ldr	r2, [sp, #12]
 80184e8:	9312      	str	r3, [sp, #72]	; 0x48
 80184ea:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80184ee:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80184f0:	eeb0 3a67 	vmov.f32	s6, s15
 80184f4:	bf08      	it	eq
 80184f6:	4613      	moveq	r3, r2
 80184f8:	eef0 2a47 	vmov.f32	s5, s14
 80184fc:	e789      	b.n	8018412 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80184fe:	140f      	asrs	r7, r1, #16
 8018500:	d418      	bmi.n	8018534 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8018502:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8018506:	42bd      	cmp	r5, r7
 8018508:	dd14      	ble.n	8018534 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801850a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801850e:	d411      	bmi.n	8018534 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8018510:	f8d8 400c 	ldr.w	r4, [r8, #12]
 8018514:	4564      	cmp	r4, ip
 8018516:	dd0d      	ble.n	8018534 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8018518:	b22d      	sxth	r5, r5
 801851a:	fb0c 7505 	mla	r5, ip, r5, r7
 801851e:	9c01      	ldr	r4, [sp, #4]
 8018520:	5d64      	ldrb	r4, [r4, r5]
 8018522:	2cff      	cmp	r4, #255	; 0xff
 8018524:	d10c      	bne.n	8018540 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8018526:	9c00      	ldr	r4, [sp, #0]
 8018528:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 801852c:	f06f 0401 	mvn.w	r4, #1
 8018530:	4374      	muls	r4, r6
 8018532:	5305      	strh	r5, [r0, r4]
 8018534:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8018536:	4421      	add	r1, r4
 8018538:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801853a:	3e01      	subs	r6, #1
 801853c:	4422      	add	r2, r4
 801853e:	e79c      	b.n	801847a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8018540:	2c00      	cmp	r4, #0
 8018542:	d0f7      	beq.n	8018534 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8018544:	9f00      	ldr	r7, [sp, #0]
 8018546:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 801854a:	f06f 0501 	mvn.w	r5, #1
 801854e:	4375      	muls	r5, r6
 8018550:	9502      	str	r5, [sp, #8]
 8018552:	5b45      	ldrh	r5, [r0, r5]
 8018554:	fa1f fc84 	uxth.w	ip, r4
 8018558:	122f      	asrs	r7, r5, #8
 801855a:	43e4      	mvns	r4, r4
 801855c:	b2e4      	uxtb	r4, r4
 801855e:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8018562:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018566:	fb17 f704 	smulbb	r7, r7, r4
 801856a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801856e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8018572:	00ed      	lsls	r5, r5, #3
 8018574:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8018578:	b2ed      	uxtb	r5, r5
 801857a:	ea4f 07e9 	mov.w	r7, r9, asr #3
 801857e:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8018582:	fb15 f504 	smulbb	r5, r5, r4
 8018586:	fa5f f989 	uxtb.w	r9, r9
 801858a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801858e:	fb09 550c 	mla	r5, r9, ip, r5
 8018592:	fb1a fa04 	smulbb	sl, sl, r4
 8018596:	fa1f fe8e 	uxth.w	lr, lr
 801859a:	b2ad      	uxth	r5, r5
 801859c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80185a0:	fb07 a70c 	mla	r7, r7, ip, sl
 80185a4:	f10e 0401 	add.w	r4, lr, #1
 80185a8:	f105 0a01 	add.w	sl, r5, #1
 80185ac:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 80185b0:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80185b4:	b2bf      	uxth	r7, r7
 80185b6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80185ba:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 80185be:	ea4a 0e0e 	orr.w	lr, sl, lr
 80185c2:	f107 0a01 	add.w	sl, r7, #1
 80185c6:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80185ca:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80185ce:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80185d2:	9c02      	ldr	r4, [sp, #8]
 80185d4:	ea4e 0e0a 	orr.w	lr, lr, sl
 80185d8:	f820 e004 	strh.w	lr, [r0, r4]
 80185dc:	e7aa      	b.n	8018534 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80185de:	f04f 0900 	mov.w	r9, #0
 80185e2:	eba3 0409 	sub.w	r4, r3, r9
 80185e6:	2c00      	cmp	r4, #0
 80185e8:	f77f af4a 	ble.w	8018480 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80185ec:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 80185f0:	1414      	asrs	r4, r2, #16
 80185f2:	140d      	asrs	r5, r1, #16
 80185f4:	fb06 5504 	mla	r5, r6, r4, r5
 80185f8:	9c01      	ldr	r4, [sp, #4]
 80185fa:	5d64      	ldrb	r4, [r4, r5]
 80185fc:	2cff      	cmp	r4, #255	; 0xff
 80185fe:	d10b      	bne.n	8018618 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8018600:	9c00      	ldr	r4, [sp, #0]
 8018602:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 8018606:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 801860a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801860c:	4421      	add	r1, r4
 801860e:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8018610:	f109 0901 	add.w	r9, r9, #1
 8018614:	4422      	add	r2, r4
 8018616:	e7e4      	b.n	80185e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8018618:	2c00      	cmp	r4, #0
 801861a:	d0f6      	beq.n	801860a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801861c:	9e00      	ldr	r6, [sp, #0]
 801861e:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 8018622:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8018626:	b2a7      	uxth	r7, r4
 8018628:	122e      	asrs	r6, r5, #8
 801862a:	43e4      	mvns	r4, r4
 801862c:	b2e4      	uxtb	r4, r4
 801862e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8018632:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8018636:	fb16 f604 	smulbb	r6, r6, r4
 801863a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801863e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018642:	00ed      	lsls	r5, r5, #3
 8018644:	fb0c 6c07 	mla	ip, ip, r7, r6
 8018648:	b2ed      	uxtb	r5, r5
 801864a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801864e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8018652:	fb15 f504 	smulbb	r5, r5, r4
 8018656:	fa5f fe8e 	uxtb.w	lr, lr
 801865a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801865e:	fb0e 5507 	mla	r5, lr, r7, r5
 8018662:	fb1a fa04 	smulbb	sl, sl, r4
 8018666:	fa1f fc8c 	uxth.w	ip, ip
 801866a:	b2ad      	uxth	r5, r5
 801866c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8018670:	fb06 a607 	mla	r6, r6, r7, sl
 8018674:	f10c 0401 	add.w	r4, ip, #1
 8018678:	f105 0a01 	add.w	sl, r5, #1
 801867c:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8018680:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8018684:	b2b6      	uxth	r6, r6
 8018686:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801868a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801868e:	ea4a 0c0c 	orr.w	ip, sl, ip
 8018692:	f106 0a01 	add.w	sl, r6, #1
 8018696:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801869a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801869e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80186a2:	ea4c 0c0a 	orr.w	ip, ip, sl
 80186a6:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 80186aa:	e7ae      	b.n	801860a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 80186ac:	b005      	add	sp, #20
 80186ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080186b2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80186b2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80186b6:	b085      	sub	sp, #20
 80186b8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80186ba:	9203      	str	r2, [sp, #12]
 80186bc:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 80186c0:	9201      	str	r2, [sp, #4]
 80186c2:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80186c6:	9100      	str	r1, [sp, #0]
 80186c8:	6841      	ldr	r1, [r0, #4]
 80186ca:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 80186ce:	fb01 2404 	mla	r4, r1, r4, r2
 80186d2:	6802      	ldr	r2, [r0, #0]
 80186d4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80186d8:	f8de 2000 	ldr.w	r2, [lr]
 80186dc:	9202      	str	r2, [sp, #8]
 80186de:	9a01      	ldr	r2, [sp, #4]
 80186e0:	43d6      	mvns	r6, r2
 80186e2:	b2f6      	uxtb	r6, r6
 80186e4:	9a00      	ldr	r2, [sp, #0]
 80186e6:	2a00      	cmp	r2, #0
 80186e8:	dc03      	bgt.n	80186f2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 80186ea:	9a03      	ldr	r2, [sp, #12]
 80186ec:	2a00      	cmp	r2, #0
 80186ee:	f340 8124 	ble.w	801893a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 80186f2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80186f4:	f9be c008 	ldrsh.w	ip, [lr, #8]
 80186f8:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 80186fc:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8018700:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8018702:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8018706:	2b00      	cmp	r3, #0
 8018708:	dd0e      	ble.n	8018728 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801870a:	1408      	asrs	r0, r1, #16
 801870c:	d405      	bmi.n	801871a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801870e:	4560      	cmp	r0, ip
 8018710:	da03      	bge.n	801871a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8018712:	1410      	asrs	r0, r2, #16
 8018714:	d401      	bmi.n	801871a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8018716:	42b8      	cmp	r0, r7
 8018718:	db07      	blt.n	801872a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801871a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801871c:	4401      	add	r1, r0
 801871e:	9812      	ldr	r0, [sp, #72]	; 0x48
 8018720:	3b01      	subs	r3, #1
 8018722:	4402      	add	r2, r0
 8018724:	3402      	adds	r4, #2
 8018726:	e7ee      	b.n	8018706 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8018728:	d06e      	beq.n	8018808 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801872a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801872c:	1e58      	subs	r0, r3, #1
 801872e:	fb05 1500 	mla	r5, r5, r0, r1
 8018732:	142d      	asrs	r5, r5, #16
 8018734:	d45c      	bmi.n	80187f0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8018736:	4565      	cmp	r5, ip
 8018738:	da5a      	bge.n	80187f0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801873a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801873c:	fb05 2000 	mla	r0, r5, r0, r2
 8018740:	1400      	asrs	r0, r0, #16
 8018742:	d455      	bmi.n	80187f0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8018744:	42b8      	cmp	r0, r7
 8018746:	da53      	bge.n	80187f0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8018748:	f8bd b004 	ldrh.w	fp, [sp, #4]
 801874c:	4699      	mov	r9, r3
 801874e:	46a2      	mov	sl, r4
 8018750:	f1b9 0f00 	cmp.w	r9, #0
 8018754:	dd54      	ble.n	8018800 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8018756:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801875a:	140d      	asrs	r5, r1, #16
 801875c:	1410      	asrs	r0, r2, #16
 801875e:	fb07 5000 	mla	r0, r7, r0, r5
 8018762:	9d02      	ldr	r5, [sp, #8]
 8018764:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8018768:	f8ba 5000 	ldrh.w	r5, [sl]
 801876c:	122f      	asrs	r7, r5, #8
 801876e:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8018772:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018776:	fb17 f706 	smulbb	r7, r7, r6
 801877a:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801877e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018782:	00ed      	lsls	r5, r5, #3
 8018784:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8018788:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801878c:	10c7      	asrs	r7, r0, #3
 801878e:	b2ed      	uxtb	r5, r5
 8018790:	00c0      	lsls	r0, r0, #3
 8018792:	fb18 f806 	smulbb	r8, r8, r6
 8018796:	fb15 f506 	smulbb	r5, r5, r6
 801879a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801879e:	b2c0      	uxtb	r0, r0
 80187a0:	fa1f fc8c 	uxth.w	ip, ip
 80187a4:	fb07 870b 	mla	r7, r7, fp, r8
 80187a8:	fb00 500b 	mla	r0, r0, fp, r5
 80187ac:	b280      	uxth	r0, r0
 80187ae:	b2bf      	uxth	r7, r7
 80187b0:	f10c 0501 	add.w	r5, ip, #1
 80187b4:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80187b8:	f107 0801 	add.w	r8, r7, #1
 80187bc:	1c45      	adds	r5, r0, #1
 80187be:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80187c2:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 80187c6:	9811      	ldr	r0, [sp, #68]	; 0x44
 80187c8:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80187cc:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80187d0:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80187d4:	ea45 0c0c 	orr.w	ip, r5, ip
 80187d8:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80187dc:	4401      	add	r1, r0
 80187de:	9812      	ldr	r0, [sp, #72]	; 0x48
 80187e0:	ea4c 0c08 	orr.w	ip, ip, r8
 80187e4:	f82a cb02 	strh.w	ip, [sl], #2
 80187e8:	4402      	add	r2, r0
 80187ea:	f109 39ff 	add.w	r9, r9, #4294967295
 80187ee:	e7af      	b.n	8018750 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80187f0:	f8bd a004 	ldrh.w	sl, [sp, #4]
 80187f4:	f04f 0800 	mov.w	r8, #0
 80187f8:	eb03 0008 	add.w	r0, r3, r8
 80187fc:	2800      	cmp	r0, #0
 80187fe:	dc41      	bgt.n	8018884 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8018800:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018804:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018808:	9b00      	ldr	r3, [sp, #0]
 801880a:	2b00      	cmp	r3, #0
 801880c:	f340 8095 	ble.w	801893a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8018810:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018814:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018818:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801881c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801881e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018822:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018826:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801882a:	eef0 6a62 	vmov.f32	s13, s5
 801882e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018832:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018836:	ee77 2a62 	vsub.f32	s5, s14, s5
 801883a:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 801883e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018842:	eef0 6a43 	vmov.f32	s13, s6
 8018846:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801884a:	ee12 2a90 	vmov	r2, s5
 801884e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018852:	fb92 f3f3 	sdiv	r3, r2, r3
 8018856:	ee13 2a10 	vmov	r2, s6
 801885a:	9311      	str	r3, [sp, #68]	; 0x44
 801885c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801885e:	fb92 f3f3 	sdiv	r3, r2, r3
 8018862:	9312      	str	r3, [sp, #72]	; 0x48
 8018864:	9b00      	ldr	r3, [sp, #0]
 8018866:	9a03      	ldr	r2, [sp, #12]
 8018868:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801886c:	3b01      	subs	r3, #1
 801886e:	9300      	str	r3, [sp, #0]
 8018870:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 8018874:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018876:	eeb0 3a67 	vmov.f32	s6, s15
 801887a:	bf08      	it	eq
 801887c:	4613      	moveq	r3, r2
 801887e:	eef0 2a47 	vmov.f32	s5, s14
 8018882:	e72f      	b.n	80186e4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8018884:	140f      	asrs	r7, r1, #16
 8018886:	d451      	bmi.n	801892c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8018888:	f8de 5008 	ldr.w	r5, [lr, #8]
 801888c:	42bd      	cmp	r5, r7
 801888e:	dd4d      	ble.n	801892c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8018890:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8018894:	d44a      	bmi.n	801892c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8018896:	f8de 000c 	ldr.w	r0, [lr, #12]
 801889a:	4560      	cmp	r0, ip
 801889c:	dd46      	ble.n	801892c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801889e:	b22d      	sxth	r5, r5
 80188a0:	fb0c 7505 	mla	r5, ip, r5, r7
 80188a4:	9802      	ldr	r0, [sp, #8]
 80188a6:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 80188aa:	f06f 0501 	mvn.w	r5, #1
 80188ae:	fb05 fb08 	mul.w	fp, r5, r8
 80188b2:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80188b6:	f834 500b 	ldrh.w	r5, [r4, fp]
 80188ba:	122f      	asrs	r7, r5, #8
 80188bc:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80188c0:	fb17 f706 	smulbb	r7, r7, r6
 80188c4:	ea4f 09e5 	mov.w	r9, r5, asr #3
 80188c8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80188cc:	00ed      	lsls	r5, r5, #3
 80188ce:	fb0c 7c0a 	mla	ip, ip, sl, r7
 80188d2:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80188d6:	10c7      	asrs	r7, r0, #3
 80188d8:	b2ed      	uxtb	r5, r5
 80188da:	00c0      	lsls	r0, r0, #3
 80188dc:	fb19 f906 	smulbb	r9, r9, r6
 80188e0:	fb15 f506 	smulbb	r5, r5, r6
 80188e4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80188e8:	b2c0      	uxtb	r0, r0
 80188ea:	fa1f fc8c 	uxth.w	ip, ip
 80188ee:	fb07 970a 	mla	r7, r7, sl, r9
 80188f2:	fb00 500a 	mla	r0, r0, sl, r5
 80188f6:	b2bf      	uxth	r7, r7
 80188f8:	b280      	uxth	r0, r0
 80188fa:	f10c 0501 	add.w	r5, ip, #1
 80188fe:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8018902:	f107 0901 	add.w	r9, r7, #1
 8018906:	1c45      	adds	r5, r0, #1
 8018908:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801890c:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8018910:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8018914:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8018918:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801891c:	ea45 0c0c 	orr.w	ip, r5, ip
 8018920:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8018924:	ea4c 0c09 	orr.w	ip, ip, r9
 8018928:	f824 c00b 	strh.w	ip, [r4, fp]
 801892c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801892e:	4401      	add	r1, r0
 8018930:	9812      	ldr	r0, [sp, #72]	; 0x48
 8018932:	f108 38ff 	add.w	r8, r8, #4294967295
 8018936:	4402      	add	r2, r0
 8018938:	e75e      	b.n	80187f8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801893a:	b005      	add	sp, #20
 801893c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018940 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018940:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018944:	b085      	sub	sp, #20
 8018946:	4693      	mov	fp, r2
 8018948:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801894a:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801894c:	6870      	ldr	r0, [r6, #4]
 801894e:	9101      	str	r1, [sp, #4]
 8018950:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8018954:	fb00 2404 	mla	r4, r0, r4, r2
 8018958:	6832      	ldr	r2, [r6, #0]
 801895a:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801895e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8018962:	682a      	ldr	r2, [r5, #0]
 8018964:	9202      	str	r2, [sp, #8]
 8018966:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801896a:	9a01      	ldr	r2, [sp, #4]
 801896c:	2a00      	cmp	r2, #0
 801896e:	dc03      	bgt.n	8018978 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8018970:	f1bb 0f00 	cmp.w	fp, #0
 8018974:	f340 809a 	ble.w	8018aac <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8018978:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801897a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801897e:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8018982:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8018986:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8018988:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801898c:	2b00      	cmp	r3, #0
 801898e:	dd0c      	ble.n	80189aa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8018990:	1406      	asrs	r6, r0, #16
 8018992:	d405      	bmi.n	80189a0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8018994:	454e      	cmp	r6, r9
 8018996:	da03      	bge.n	80189a0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8018998:	1416      	asrs	r6, r2, #16
 801899a:	d401      	bmi.n	80189a0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801899c:	4546      	cmp	r6, r8
 801899e:	db05      	blt.n	80189ac <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80189a0:	4470      	add	r0, lr
 80189a2:	4462      	add	r2, ip
 80189a4:	3b01      	subs	r3, #1
 80189a6:	3402      	adds	r4, #2
 80189a8:	e7f0      	b.n	801898c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80189aa:	d00f      	beq.n	80189cc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80189ac:	1e5e      	subs	r6, r3, #1
 80189ae:	fb0e 0706 	mla	r7, lr, r6, r0
 80189b2:	143f      	asrs	r7, r7, #16
 80189b4:	d541      	bpl.n	8018a3a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 80189b6:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 80189ba:	4698      	mov	r8, r3
 80189bc:	9603      	str	r6, [sp, #12]
 80189be:	f1b8 0f00 	cmp.w	r8, #0
 80189c2:	dc56      	bgt.n	8018a72 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 80189c4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80189c8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80189cc:	9b01      	ldr	r3, [sp, #4]
 80189ce:	2b00      	cmp	r3, #0
 80189d0:	dd6c      	ble.n	8018aac <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 80189d2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80189d6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80189da:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80189de:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80189e0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80189e4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80189e8:	eeb0 6a62 	vmov.f32	s12, s5
 80189ec:	ee61 7a27 	vmul.f32	s15, s2, s15
 80189f0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80189f4:	ee77 2a62 	vsub.f32	s5, s14, s5
 80189f8:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80189fc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018a00:	eeb0 6a43 	vmov.f32	s12, s6
 8018a04:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018a08:	ee12 2a90 	vmov	r2, s5
 8018a0c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018a10:	fb92 fef3 	sdiv	lr, r2, r3
 8018a14:	ee13 2a10 	vmov	r2, s6
 8018a18:	fb92 fcf3 	sdiv	ip, r2, r3
 8018a1c:	9b01      	ldr	r3, [sp, #4]
 8018a1e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018a22:	3b01      	subs	r3, #1
 8018a24:	9301      	str	r3, [sp, #4]
 8018a26:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8018a2a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018a2c:	eeb0 3a67 	vmov.f32	s6, s15
 8018a30:	bf08      	it	eq
 8018a32:	465b      	moveq	r3, fp
 8018a34:	eef0 2a47 	vmov.f32	s5, s14
 8018a38:	e797      	b.n	801896a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8018a3a:	454f      	cmp	r7, r9
 8018a3c:	dabb      	bge.n	80189b6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8018a3e:	fb0c 2606 	mla	r6, ip, r6, r2
 8018a42:	1436      	asrs	r6, r6, #16
 8018a44:	d4b7      	bmi.n	80189b6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8018a46:	4546      	cmp	r6, r8
 8018a48:	dab5      	bge.n	80189b6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8018a4a:	461e      	mov	r6, r3
 8018a4c:	46a0      	mov	r8, r4
 8018a4e:	2e00      	cmp	r6, #0
 8018a50:	ddb8      	ble.n	80189c4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8018a52:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8018a56:	9902      	ldr	r1, [sp, #8]
 8018a58:	1417      	asrs	r7, r2, #16
 8018a5a:	ea4f 4920 	mov.w	r9, r0, asr #16
 8018a5e:	fb0a 9707 	mla	r7, sl, r7, r9
 8018a62:	4470      	add	r0, lr
 8018a64:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8018a68:	f828 7b02 	strh.w	r7, [r8], #2
 8018a6c:	4462      	add	r2, ip
 8018a6e:	3e01      	subs	r6, #1
 8018a70:	e7ed      	b.n	8018a4e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8018a72:	ea5f 4920 	movs.w	r9, r0, asr #16
 8018a76:	d414      	bmi.n	8018aa2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8018a78:	68ae      	ldr	r6, [r5, #8]
 8018a7a:	454e      	cmp	r6, r9
 8018a7c:	dd11      	ble.n	8018aa2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8018a7e:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8018a82:	d40e      	bmi.n	8018aa2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8018a84:	68ef      	ldr	r7, [r5, #12]
 8018a86:	4557      	cmp	r7, sl
 8018a88:	dd0b      	ble.n	8018aa2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8018a8a:	b236      	sxth	r6, r6
 8018a8c:	fb0a 9606 	mla	r6, sl, r6, r9
 8018a90:	9f02      	ldr	r7, [sp, #8]
 8018a92:	f06f 0101 	mvn.w	r1, #1
 8018a96:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8018a9a:	fb01 f608 	mul.w	r6, r1, r8
 8018a9e:	9903      	ldr	r1, [sp, #12]
 8018aa0:	538f      	strh	r7, [r1, r6]
 8018aa2:	4470      	add	r0, lr
 8018aa4:	4462      	add	r2, ip
 8018aa6:	f108 38ff 	add.w	r8, r8, #4294967295
 8018aaa:	e788      	b.n	80189be <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8018aac:	b005      	add	sp, #20
 8018aae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018ab2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018ab2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018ab6:	b087      	sub	sp, #28
 8018ab8:	468b      	mov	fp, r1
 8018aba:	9815      	ldr	r0, [sp, #84]	; 0x54
 8018abc:	9203      	str	r2, [sp, #12]
 8018abe:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8018ac2:	9204      	str	r2, [sp, #16]
 8018ac4:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 8018ac8:	6841      	ldr	r1, [r0, #4]
 8018aca:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8018ace:	fb01 2505 	mla	r5, r1, r5, r2
 8018ad2:	6802      	ldr	r2, [r0, #0]
 8018ad4:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8018ad8:	f8d9 2000 	ldr.w	r2, [r9]
 8018adc:	9201      	str	r2, [sp, #4]
 8018ade:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8018ae2:	f1bb 0f00 	cmp.w	fp, #0
 8018ae6:	dc03      	bgt.n	8018af0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8018ae8:	9a03      	ldr	r2, [sp, #12]
 8018aea:	2a00      	cmp	r2, #0
 8018aec:	f340 8159 	ble.w	8018da2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8018af0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8018af2:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8018af6:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8018afa:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8018afe:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8018b00:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8018b04:	2b00      	cmp	r3, #0
 8018b06:	dd0e      	ble.n	8018b26 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8018b08:	1402      	asrs	r2, r0, #16
 8018b0a:	d405      	bmi.n	8018b18 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018b0c:	42ba      	cmp	r2, r7
 8018b0e:	da03      	bge.n	8018b18 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018b10:	140a      	asrs	r2, r1, #16
 8018b12:	d401      	bmi.n	8018b18 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018b14:	42b2      	cmp	r2, r6
 8018b16:	db07      	blt.n	8018b28 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8018b18:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8018b1a:	4410      	add	r0, r2
 8018b1c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8018b1e:	3b01      	subs	r3, #1
 8018b20:	4411      	add	r1, r2
 8018b22:	3502      	adds	r5, #2
 8018b24:	e7ee      	b.n	8018b04 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8018b26:	d017      	beq.n	8018b58 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8018b28:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8018b2a:	1e5a      	subs	r2, r3, #1
 8018b2c:	fb04 0402 	mla	r4, r4, r2, r0
 8018b30:	1424      	asrs	r4, r4, #16
 8018b32:	d409      	bmi.n	8018b48 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8018b34:	42bc      	cmp	r4, r7
 8018b36:	da07      	bge.n	8018b48 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8018b38:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8018b3a:	fb04 1202 	mla	r2, r4, r2, r1
 8018b3e:	1412      	asrs	r2, r2, #16
 8018b40:	d402      	bmi.n	8018b48 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8018b42:	42b2      	cmp	r2, r6
 8018b44:	f2c0 80bf 	blt.w	8018cc6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8018b48:	2700      	movs	r7, #0
 8018b4a:	19da      	adds	r2, r3, r7
 8018b4c:	2a00      	cmp	r2, #0
 8018b4e:	dc3e      	bgt.n	8018bce <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8018b50:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018b54:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8018b58:	f1bb 0f00 	cmp.w	fp, #0
 8018b5c:	f340 8121 	ble.w	8018da2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8018b60:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018b64:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018b68:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8018b6c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018b6e:	f1bb 0b01 	subs.w	fp, fp, #1
 8018b72:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018b76:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018b7a:	eeb0 6a62 	vmov.f32	s12, s5
 8018b7e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018b82:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018b86:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018b8a:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8018b8e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018b92:	eeb0 6a43 	vmov.f32	s12, s6
 8018b96:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018b9a:	ee12 2a90 	vmov	r2, s5
 8018b9e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018ba2:	fb92 f3f3 	sdiv	r3, r2, r3
 8018ba6:	ee13 2a10 	vmov	r2, s6
 8018baa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018bae:	9313      	str	r3, [sp, #76]	; 0x4c
 8018bb0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018bb2:	fb92 f3f3 	sdiv	r3, r2, r3
 8018bb6:	9a03      	ldr	r2, [sp, #12]
 8018bb8:	9314      	str	r3, [sp, #80]	; 0x50
 8018bba:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8018bbe:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018bc0:	eeb0 3a67 	vmov.f32	s6, s15
 8018bc4:	bf08      	it	eq
 8018bc6:	4613      	moveq	r3, r2
 8018bc8:	eef0 2a47 	vmov.f32	s5, s14
 8018bcc:	e789      	b.n	8018ae2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8018bce:	1406      	asrs	r6, r0, #16
 8018bd0:	d42d      	bmi.n	8018c2e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8018bd2:	f8d9 4008 	ldr.w	r4, [r9, #8]
 8018bd6:	42b4      	cmp	r4, r6
 8018bd8:	dd29      	ble.n	8018c2e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8018bda:	ea5f 4c21 	movs.w	ip, r1, asr #16
 8018bde:	d426      	bmi.n	8018c2e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8018be0:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8018be4:	4562      	cmp	r2, ip
 8018be6:	dd22      	ble.n	8018c2e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8018be8:	b224      	sxth	r4, r4
 8018bea:	9a01      	ldr	r2, [sp, #4]
 8018bec:	fb0c 6404 	mla	r4, ip, r4, r6
 8018bf0:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 8018bf4:	0e22      	lsrs	r2, r4, #24
 8018bf6:	d01a      	beq.n	8018c2e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8018bf8:	9e04      	ldr	r6, [sp, #16]
 8018bfa:	4372      	muls	r2, r6
 8018bfc:	1c56      	adds	r6, r2, #1
 8018bfe:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8018c02:	1212      	asrs	r2, r2, #8
 8018c04:	0a26      	lsrs	r6, r4, #8
 8018c06:	2aff      	cmp	r2, #255	; 0xff
 8018c08:	9605      	str	r6, [sp, #20]
 8018c0a:	d116      	bne.n	8018c3a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8018c0c:	f06f 0201 	mvn.w	r2, #1
 8018c10:	fb02 fc07 	mul.w	ip, r2, r7
 8018c14:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8018c18:	0962      	lsrs	r2, r4, #5
 8018c1a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018c1e:	f026 0607 	bic.w	r6, r6, #7
 8018c22:	4316      	orrs	r6, r2
 8018c24:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8018c28:	4326      	orrs	r6, r4
 8018c2a:	f825 600c 	strh.w	r6, [r5, ip]
 8018c2e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8018c30:	4410      	add	r0, r2
 8018c32:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8018c34:	3f01      	subs	r7, #1
 8018c36:	4411      	add	r1, r2
 8018c38:	e787      	b.n	8018b4a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8018c3a:	f06f 0601 	mvn.w	r6, #1
 8018c3e:	437e      	muls	r6, r7
 8018c40:	fa1f fa82 	uxth.w	sl, r2
 8018c44:	f835 8006 	ldrh.w	r8, [r5, r6]
 8018c48:	9602      	str	r6, [sp, #8]
 8018c4a:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8018c4e:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 8018c52:	43d2      	mvns	r2, r2
 8018c54:	b2d2      	uxtb	r2, r2
 8018c56:	fb1c fc0a 	smulbb	ip, ip, sl
 8018c5a:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8018c5e:	fb0e ce02 	mla	lr, lr, r2, ip
 8018c62:	b2e4      	uxtb	r4, r4
 8018c64:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8018c68:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8018c6c:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8018c70:	fa5f f888 	uxtb.w	r8, r8
 8018c74:	fb14 f40a 	smulbb	r4, r4, sl
 8018c78:	fb08 4402 	mla	r4, r8, r2, r4
 8018c7c:	fa1f fe8e 	uxth.w	lr, lr
 8018c80:	fb16 f60a 	smulbb	r6, r6, sl
 8018c84:	b2a4      	uxth	r4, r4
 8018c86:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8018c8a:	fb0c 6c02 	mla	ip, ip, r2, r6
 8018c8e:	f10e 0201 	add.w	r2, lr, #1
 8018c92:	1c66      	adds	r6, r4, #1
 8018c94:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8018c98:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8018c9c:	fa1f fc8c 	uxth.w	ip, ip
 8018ca0:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8018ca4:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8018ca8:	ea46 0e0e 	orr.w	lr, r6, lr
 8018cac:	f10c 0601 	add.w	r6, ip, #1
 8018cb0:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8018cb4:	0976      	lsrs	r6, r6, #5
 8018cb6:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8018cba:	9a02      	ldr	r2, [sp, #8]
 8018cbc:	ea4e 0e06 	orr.w	lr, lr, r6
 8018cc0:	f825 e002 	strh.w	lr, [r5, r2]
 8018cc4:	e7b3      	b.n	8018c2e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8018cc6:	f04f 0800 	mov.w	r8, #0
 8018cca:	eba3 0208 	sub.w	r2, r3, r8
 8018cce:	2a00      	cmp	r2, #0
 8018cd0:	f77f af3e 	ble.w	8018b50 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8018cd4:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 8018cd8:	1404      	asrs	r4, r0, #16
 8018cda:	140a      	asrs	r2, r1, #16
 8018cdc:	fb06 4202 	mla	r2, r6, r2, r4
 8018ce0:	9c01      	ldr	r4, [sp, #4]
 8018ce2:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 8018ce6:	0e22      	lsrs	r2, r4, #24
 8018ce8:	d016      	beq.n	8018d18 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8018cea:	9e04      	ldr	r6, [sp, #16]
 8018cec:	4372      	muls	r2, r6
 8018cee:	1c56      	adds	r6, r2, #1
 8018cf0:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8018cf4:	1212      	asrs	r2, r2, #8
 8018cf6:	2aff      	cmp	r2, #255	; 0xff
 8018cf8:	ea4f 2614 	mov.w	r6, r4, lsr #8
 8018cfc:	d113      	bne.n	8018d26 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 8018cfe:	0962      	lsrs	r2, r4, #5
 8018d00:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8018d04:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018d08:	f026 0607 	bic.w	r6, r6, #7
 8018d0c:	4316      	orrs	r6, r2
 8018d0e:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8018d12:	4326      	orrs	r6, r4
 8018d14:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 8018d18:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8018d1a:	4410      	add	r0, r2
 8018d1c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8018d1e:	f108 0801 	add.w	r8, r8, #1
 8018d22:	4411      	add	r1, r2
 8018d24:	e7d1      	b.n	8018cca <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 8018d26:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 8018d2a:	fa1f fa82 	uxth.w	sl, r2
 8018d2e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8018d32:	f3c4 4707 	ubfx	r7, r4, #16, #8
 8018d36:	43d2      	mvns	r2, r2
 8018d38:	b2d2      	uxtb	r2, r2
 8018d3a:	fb17 f70a 	smulbb	r7, r7, sl
 8018d3e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018d42:	fb0c 7c02 	mla	ip, ip, r2, r7
 8018d46:	b2e4      	uxtb	r4, r4
 8018d48:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8018d4c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8018d50:	fa5f fe8e 	uxtb.w	lr, lr
 8018d54:	fb14 f40a 	smulbb	r4, r4, sl
 8018d58:	fb0e 4402 	mla	r4, lr, r2, r4
 8018d5c:	b2f6      	uxtb	r6, r6
 8018d5e:	fa1f fc8c 	uxth.w	ip, ip
 8018d62:	fb16 f60a 	smulbb	r6, r6, sl
 8018d66:	b2a4      	uxth	r4, r4
 8018d68:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8018d6c:	fb07 6702 	mla	r7, r7, r2, r6
 8018d70:	f10c 0201 	add.w	r2, ip, #1
 8018d74:	1c66      	adds	r6, r4, #1
 8018d76:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8018d7a:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8018d7e:	b2bf      	uxth	r7, r7
 8018d80:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8018d84:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8018d88:	ea46 0c0c 	orr.w	ip, r6, ip
 8018d8c:	1c7e      	adds	r6, r7, #1
 8018d8e:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8018d92:	0976      	lsrs	r6, r6, #5
 8018d94:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8018d98:	ea4c 0c06 	orr.w	ip, ip, r6
 8018d9c:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 8018da0:	e7ba      	b.n	8018d18 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8018da2:	b007      	add	sp, #28
 8018da4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018da8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018da8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018dac:	b085      	sub	sp, #20
 8018dae:	468b      	mov	fp, r1
 8018db0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018db2:	9203      	str	r2, [sp, #12]
 8018db4:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8018db8:	6841      	ldr	r1, [r0, #4]
 8018dba:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8018dbe:	fb01 2404 	mla	r4, r1, r4, r2
 8018dc2:	6802      	ldr	r2, [r0, #0]
 8018dc4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8018dc8:	f8d8 2000 	ldr.w	r2, [r8]
 8018dcc:	9201      	str	r2, [sp, #4]
 8018dce:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8018dd2:	f1bb 0f00 	cmp.w	fp, #0
 8018dd6:	dc03      	bgt.n	8018de0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8018dd8:	9a03      	ldr	r2, [sp, #12]
 8018dda:	2a00      	cmp	r2, #0
 8018ddc:	f340 814f 	ble.w	801907e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8018de0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8018de2:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8018de6:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8018dea:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8018dee:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8018df0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8018df4:	2b00      	cmp	r3, #0
 8018df6:	dd0e      	ble.n	8018e16 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8018df8:	1408      	asrs	r0, r1, #16
 8018dfa:	d405      	bmi.n	8018e08 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8018dfc:	42b8      	cmp	r0, r7
 8018dfe:	da03      	bge.n	8018e08 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8018e00:	1410      	asrs	r0, r2, #16
 8018e02:	d401      	bmi.n	8018e08 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8018e04:	42b0      	cmp	r0, r6
 8018e06:	db07      	blt.n	8018e18 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8018e08:	9811      	ldr	r0, [sp, #68]	; 0x44
 8018e0a:	4401      	add	r1, r0
 8018e0c:	9812      	ldr	r0, [sp, #72]	; 0x48
 8018e0e:	3b01      	subs	r3, #1
 8018e10:	4402      	add	r2, r0
 8018e12:	3402      	adds	r4, #2
 8018e14:	e7ee      	b.n	8018df4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8018e16:	d017      	beq.n	8018e48 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8018e18:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8018e1a:	1e58      	subs	r0, r3, #1
 8018e1c:	fb05 1500 	mla	r5, r5, r0, r1
 8018e20:	142d      	asrs	r5, r5, #16
 8018e22:	d409      	bmi.n	8018e38 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8018e24:	42bd      	cmp	r5, r7
 8018e26:	da07      	bge.n	8018e38 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8018e28:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8018e2a:	fb05 2000 	mla	r0, r5, r0, r2
 8018e2e:	1400      	asrs	r0, r0, #16
 8018e30:	d402      	bmi.n	8018e38 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8018e32:	42b0      	cmp	r0, r6
 8018e34:	f2c0 80ba 	blt.w	8018fac <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8018e38:	2600      	movs	r6, #0
 8018e3a:	1998      	adds	r0, r3, r6
 8018e3c:	2800      	cmp	r0, #0
 8018e3e:	dc3e      	bgt.n	8018ebe <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8018e40:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018e44:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018e48:	f1bb 0f00 	cmp.w	fp, #0
 8018e4c:	f340 8117 	ble.w	801907e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8018e50:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018e54:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018e58:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8018e5c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018e5e:	f1bb 0b01 	subs.w	fp, fp, #1
 8018e62:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018e66:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018e6a:	eeb0 6a62 	vmov.f32	s12, s5
 8018e6e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018e72:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018e76:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018e7a:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8018e7e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018e82:	eeb0 6a43 	vmov.f32	s12, s6
 8018e86:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018e8a:	ee12 2a90 	vmov	r2, s5
 8018e8e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018e92:	fb92 f3f3 	sdiv	r3, r2, r3
 8018e96:	ee13 2a10 	vmov	r2, s6
 8018e9a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018e9e:	9311      	str	r3, [sp, #68]	; 0x44
 8018ea0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018ea2:	fb92 f3f3 	sdiv	r3, r2, r3
 8018ea6:	9a03      	ldr	r2, [sp, #12]
 8018ea8:	9312      	str	r3, [sp, #72]	; 0x48
 8018eaa:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8018eae:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018eb0:	eeb0 3a67 	vmov.f32	s6, s15
 8018eb4:	bf08      	it	eq
 8018eb6:	4613      	moveq	r3, r2
 8018eb8:	eef0 2a47 	vmov.f32	s5, s14
 8018ebc:	e789      	b.n	8018dd2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8018ebe:	140f      	asrs	r7, r1, #16
 8018ec0:	d424      	bmi.n	8018f0c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8018ec2:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8018ec6:	42bd      	cmp	r5, r7
 8018ec8:	dd20      	ble.n	8018f0c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8018eca:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8018ece:	d41d      	bmi.n	8018f0c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8018ed0:	f8d8 000c 	ldr.w	r0, [r8, #12]
 8018ed4:	4560      	cmp	r0, ip
 8018ed6:	dd19      	ble.n	8018f0c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8018ed8:	b22d      	sxth	r5, r5
 8018eda:	fb0c 7505 	mla	r5, ip, r5, r7
 8018ede:	9801      	ldr	r0, [sp, #4]
 8018ee0:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 8018ee4:	0e07      	lsrs	r7, r0, #24
 8018ee6:	2fff      	cmp	r7, #255	; 0xff
 8018ee8:	d116      	bne.n	8018f18 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8018eea:	f06f 0501 	mvn.w	r5, #1
 8018eee:	fb05 f706 	mul.w	r7, r5, r6
 8018ef2:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8018ef6:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8018efa:	0945      	lsrs	r5, r0, #5
 8018efc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8018f00:	ea4c 0505 	orr.w	r5, ip, r5
 8018f04:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8018f08:	4305      	orrs	r5, r0
 8018f0a:	53e5      	strh	r5, [r4, r7]
 8018f0c:	9811      	ldr	r0, [sp, #68]	; 0x44
 8018f0e:	4401      	add	r1, r0
 8018f10:	9812      	ldr	r0, [sp, #72]	; 0x48
 8018f12:	3e01      	subs	r6, #1
 8018f14:	4402      	add	r2, r0
 8018f16:	e790      	b.n	8018e3a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8018f18:	b2fd      	uxtb	r5, r7
 8018f1a:	2f00      	cmp	r7, #0
 8018f1c:	d0f6      	beq.n	8018f0c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8018f1e:	f06f 0701 	mvn.w	r7, #1
 8018f22:	4377      	muls	r7, r6
 8018f24:	fa1f f985 	uxth.w	r9, r5
 8018f28:	f834 e007 	ldrh.w	lr, [r4, r7]
 8018f2c:	9702      	str	r7, [sp, #8]
 8018f2e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8018f32:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8018f36:	43ed      	mvns	r5, r5
 8018f38:	b2ed      	uxtb	r5, r5
 8018f3a:	fb17 f709 	smulbb	r7, r7, r9
 8018f3e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018f42:	fb0c 7c05 	mla	ip, ip, r5, r7
 8018f46:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8018f4a:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8018f4e:	b2c0      	uxtb	r0, r0
 8018f50:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8018f54:	fa5f fe8e 	uxtb.w	lr, lr
 8018f58:	fb10 f009 	smulbb	r0, r0, r9
 8018f5c:	fb0e 0005 	mla	r0, lr, r5, r0
 8018f60:	b280      	uxth	r0, r0
 8018f62:	fa1f fc8c 	uxth.w	ip, ip
 8018f66:	fb1a fa09 	smulbb	sl, sl, r9
 8018f6a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8018f6e:	fb07 a705 	mla	r7, r7, r5, sl
 8018f72:	f100 0a01 	add.w	sl, r0, #1
 8018f76:	f10c 0501 	add.w	r5, ip, #1
 8018f7a:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8018f7e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8018f82:	b2bf      	uxth	r7, r7
 8018f84:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8018f88:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8018f8c:	ea4a 0c0c 	orr.w	ip, sl, ip
 8018f90:	f107 0a01 	add.w	sl, r7, #1
 8018f94:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8018f98:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8018f9c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8018fa0:	9802      	ldr	r0, [sp, #8]
 8018fa2:	ea4c 0c0a 	orr.w	ip, ip, sl
 8018fa6:	f824 c000 	strh.w	ip, [r4, r0]
 8018faa:	e7af      	b.n	8018f0c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8018fac:	f04f 0e00 	mov.w	lr, #0
 8018fb0:	eba3 000e 	sub.w	r0, r3, lr
 8018fb4:	2800      	cmp	r0, #0
 8018fb6:	f77f af43 	ble.w	8018e40 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8018fba:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8018fbe:	140d      	asrs	r5, r1, #16
 8018fc0:	1410      	asrs	r0, r2, #16
 8018fc2:	fb06 5000 	mla	r0, r6, r0, r5
 8018fc6:	9d01      	ldr	r5, [sp, #4]
 8018fc8:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8018fcc:	0e2e      	lsrs	r6, r5, #24
 8018fce:	2eff      	cmp	r6, #255	; 0xff
 8018fd0:	d112      	bne.n	8018ff8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 8018fd2:	482c      	ldr	r0, [pc, #176]	; (8019084 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 8018fd4:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8018fd8:	0968      	lsrs	r0, r5, #5
 8018fda:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018fde:	4330      	orrs	r0, r6
 8018fe0:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8018fe4:	4328      	orrs	r0, r5
 8018fe6:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 8018fea:	9811      	ldr	r0, [sp, #68]	; 0x44
 8018fec:	4401      	add	r1, r0
 8018fee:	9812      	ldr	r0, [sp, #72]	; 0x48
 8018ff0:	f10e 0e01 	add.w	lr, lr, #1
 8018ff4:	4402      	add	r2, r0
 8018ff6:	e7db      	b.n	8018fb0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8018ff8:	b2f0      	uxtb	r0, r6
 8018ffa:	2e00      	cmp	r6, #0
 8018ffc:	d0f5      	beq.n	8018fea <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8018ffe:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8019002:	fa1f f980 	uxth.w	r9, r0
 8019006:	ea4f 272c 	mov.w	r7, ip, asr #8
 801900a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801900e:	43c0      	mvns	r0, r0
 8019010:	b2c0      	uxtb	r0, r0
 8019012:	fb16 f609 	smulbb	r6, r6, r9
 8019016:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801901a:	fb07 6700 	mla	r7, r7, r0, r6
 801901e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8019022:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8019026:	b2ed      	uxtb	r5, r5
 8019028:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801902c:	fa5f fc8c 	uxtb.w	ip, ip
 8019030:	fb15 f509 	smulbb	r5, r5, r9
 8019034:	fb0c 5500 	mla	r5, ip, r0, r5
 8019038:	b2bf      	uxth	r7, r7
 801903a:	fb1a fa09 	smulbb	sl, sl, r9
 801903e:	b2ad      	uxth	r5, r5
 8019040:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019044:	fb06 a600 	mla	r6, r6, r0, sl
 8019048:	1c78      	adds	r0, r7, #1
 801904a:	f105 0a01 	add.w	sl, r5, #1
 801904e:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8019052:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019056:	b2b6      	uxth	r6, r6
 8019058:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801905c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8019060:	ea4a 0707 	orr.w	r7, sl, r7
 8019064:	f106 0a01 	add.w	sl, r6, #1
 8019068:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801906c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019070:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019074:	ea47 070a 	orr.w	r7, r7, sl
 8019078:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801907c:	e7b5      	b.n	8018fea <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801907e:	b005      	add	sp, #20
 8019080:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019084:	fffff800 	.word	0xfffff800

08019088 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019088:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801908c:	b087      	sub	sp, #28
 801908e:	468b      	mov	fp, r1
 8019090:	9815      	ldr	r0, [sp, #84]	; 0x54
 8019092:	9203      	str	r2, [sp, #12]
 8019094:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8019098:	9204      	str	r2, [sp, #16]
 801909a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801909e:	6841      	ldr	r1, [r0, #4]
 80190a0:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 80190a4:	fb01 2404 	mla	r4, r1, r4, r2
 80190a8:	6802      	ldr	r2, [r0, #0]
 80190aa:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80190ae:	f8d9 2008 	ldr.w	r2, [r9, #8]
 80190b2:	3201      	adds	r2, #1
 80190b4:	f022 0201 	bic.w	r2, r2, #1
 80190b8:	9200      	str	r2, [sp, #0]
 80190ba:	f8d9 2000 	ldr.w	r2, [r9]
 80190be:	9201      	str	r2, [sp, #4]
 80190c0:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80190c4:	f1bb 0f00 	cmp.w	fp, #0
 80190c8:	dc03      	bgt.n	80190d2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80190ca:	9a03      	ldr	r2, [sp, #12]
 80190cc:	2a00      	cmp	r2, #0
 80190ce:	f340 8169 	ble.w	80193a4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 80190d2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80190d4:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 80190d8:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 80190dc:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80190e0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80190e2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80190e6:	2b00      	cmp	r3, #0
 80190e8:	dd0e      	ble.n	8019108 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80190ea:	1402      	asrs	r2, r0, #16
 80190ec:	d405      	bmi.n	80190fa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80190ee:	42ba      	cmp	r2, r7
 80190f0:	da03      	bge.n	80190fa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80190f2:	140a      	asrs	r2, r1, #16
 80190f4:	d401      	bmi.n	80190fa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80190f6:	42b2      	cmp	r2, r6
 80190f8:	db07      	blt.n	801910a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80190fa:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80190fc:	4410      	add	r0, r2
 80190fe:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8019100:	3b01      	subs	r3, #1
 8019102:	4411      	add	r1, r2
 8019104:	3402      	adds	r4, #2
 8019106:	e7ee      	b.n	80190e6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8019108:	d017      	beq.n	801913a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801910a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801910c:	1e5a      	subs	r2, r3, #1
 801910e:	fb05 0502 	mla	r5, r5, r2, r0
 8019112:	142d      	asrs	r5, r5, #16
 8019114:	d409      	bmi.n	801912a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8019116:	42bd      	cmp	r5, r7
 8019118:	da07      	bge.n	801912a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801911a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801911c:	fb05 1202 	mla	r2, r5, r2, r1
 8019120:	1412      	asrs	r2, r2, #16
 8019122:	d402      	bmi.n	801912a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8019124:	42b2      	cmp	r2, r6
 8019126:	f2c0 80c7 	blt.w	80192b8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801912a:	2700      	movs	r7, #0
 801912c:	19da      	adds	r2, r3, r7
 801912e:	2a00      	cmp	r2, #0
 8019130:	dc3e      	bgt.n	80191b0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8019132:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019136:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801913a:	f1bb 0f00 	cmp.w	fp, #0
 801913e:	f340 8131 	ble.w	80193a4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8019142:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019146:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801914a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801914e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019150:	f1bb 0b01 	subs.w	fp, fp, #1
 8019154:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019158:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801915c:	eeb0 6a62 	vmov.f32	s12, s5
 8019160:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019164:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019168:	ee77 2a62 	vsub.f32	s5, s14, s5
 801916c:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8019170:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019174:	eeb0 6a43 	vmov.f32	s12, s6
 8019178:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801917c:	ee12 2a90 	vmov	r2, s5
 8019180:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019184:	fb92 f3f3 	sdiv	r3, r2, r3
 8019188:	ee13 2a10 	vmov	r2, s6
 801918c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019190:	9313      	str	r3, [sp, #76]	; 0x4c
 8019192:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019194:	fb92 f3f3 	sdiv	r3, r2, r3
 8019198:	9a03      	ldr	r2, [sp, #12]
 801919a:	9314      	str	r3, [sp, #80]	; 0x50
 801919c:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80191a0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80191a2:	eeb0 3a67 	vmov.f32	s6, s15
 80191a6:	bf08      	it	eq
 80191a8:	4613      	moveq	r3, r2
 80191aa:	eef0 2a47 	vmov.f32	s5, s14
 80191ae:	e789      	b.n	80190c4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80191b0:	1405      	asrs	r5, r0, #16
 80191b2:	d435      	bmi.n	8019220 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80191b4:	f8d9 2008 	ldr.w	r2, [r9, #8]
 80191b8:	42aa      	cmp	r2, r5
 80191ba:	dd31      	ble.n	8019220 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80191bc:	140e      	asrs	r6, r1, #16
 80191be:	d42f      	bmi.n	8019220 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80191c0:	f8d9 200c 	ldr.w	r2, [r9, #12]
 80191c4:	42b2      	cmp	r2, r6
 80191c6:	dd2b      	ble.n	8019220 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80191c8:	9a00      	ldr	r2, [sp, #0]
 80191ca:	fb06 5502 	mla	r5, r6, r2, r5
 80191ce:	086a      	lsrs	r2, r5, #1
 80191d0:	9e01      	ldr	r6, [sp, #4]
 80191d2:	5cb2      	ldrb	r2, [r6, r2]
 80191d4:	07ee      	lsls	r6, r5, #31
 80191d6:	bf54      	ite	pl
 80191d8:	f002 020f 	andpl.w	r2, r2, #15
 80191dc:	1112      	asrmi	r2, r2, #4
 80191de:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80191e2:	b2d2      	uxtb	r2, r2
 80191e4:	b1e2      	cbz	r2, 8019220 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80191e6:	9d04      	ldr	r5, [sp, #16]
 80191e8:	436a      	muls	r2, r5
 80191ea:	1c55      	adds	r5, r2, #1
 80191ec:	eb05 2222 	add.w	r2, r5, r2, asr #8
 80191f0:	4d6e      	ldr	r5, [pc, #440]	; (80193ac <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 80191f2:	682d      	ldr	r5, [r5, #0]
 80191f4:	1212      	asrs	r2, r2, #8
 80191f6:	0a2e      	lsrs	r6, r5, #8
 80191f8:	2aff      	cmp	r2, #255	; 0xff
 80191fa:	9605      	str	r6, [sp, #20]
 80191fc:	d116      	bne.n	801922c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80191fe:	f06f 0201 	mvn.w	r2, #1
 8019202:	fb02 fc07 	mul.w	ip, r2, r7
 8019206:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801920a:	096a      	lsrs	r2, r5, #5
 801920c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019210:	f026 0607 	bic.w	r6, r6, #7
 8019214:	4316      	orrs	r6, r2
 8019216:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801921a:	432e      	orrs	r6, r5
 801921c:	f824 600c 	strh.w	r6, [r4, ip]
 8019220:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8019222:	4410      	add	r0, r2
 8019224:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8019226:	3f01      	subs	r7, #1
 8019228:	4411      	add	r1, r2
 801922a:	e77f      	b.n	801912c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801922c:	f06f 0601 	mvn.w	r6, #1
 8019230:	437e      	muls	r6, r7
 8019232:	fa1f fa82 	uxth.w	sl, r2
 8019236:	f834 8006 	ldrh.w	r8, [r4, r6]
 801923a:	9602      	str	r6, [sp, #8]
 801923c:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8019240:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 8019244:	43d2      	mvns	r2, r2
 8019246:	b2d2      	uxtb	r2, r2
 8019248:	fb1c fc0a 	smulbb	ip, ip, sl
 801924c:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8019250:	fb0e ce02 	mla	lr, lr, r2, ip
 8019254:	b2ed      	uxtb	r5, r5
 8019256:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801925a:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801925e:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8019262:	fa5f f888 	uxtb.w	r8, r8
 8019266:	fb15 f50a 	smulbb	r5, r5, sl
 801926a:	fb08 5502 	mla	r5, r8, r2, r5
 801926e:	fa1f fe8e 	uxth.w	lr, lr
 8019272:	fb16 f60a 	smulbb	r6, r6, sl
 8019276:	b2ad      	uxth	r5, r5
 8019278:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801927c:	fb0c 6c02 	mla	ip, ip, r2, r6
 8019280:	f10e 0201 	add.w	r2, lr, #1
 8019284:	1c6e      	adds	r6, r5, #1
 8019286:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801928a:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801928e:	fa1f fc8c 	uxth.w	ip, ip
 8019292:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8019296:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801929a:	ea46 0e0e 	orr.w	lr, r6, lr
 801929e:	f10c 0601 	add.w	r6, ip, #1
 80192a2:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 80192a6:	0976      	lsrs	r6, r6, #5
 80192a8:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80192ac:	9a02      	ldr	r2, [sp, #8]
 80192ae:	ea4e 0e06 	orr.w	lr, lr, r6
 80192b2:	f824 e002 	strh.w	lr, [r4, r2]
 80192b6:	e7b3      	b.n	8019220 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80192b8:	f04f 0800 	mov.w	r8, #0
 80192bc:	eba3 0208 	sub.w	r2, r3, r8
 80192c0:	2a00      	cmp	r2, #0
 80192c2:	f77f af36 	ble.w	8019132 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 80192c6:	9e00      	ldr	r6, [sp, #0]
 80192c8:	1402      	asrs	r2, r0, #16
 80192ca:	140d      	asrs	r5, r1, #16
 80192cc:	fb06 2505 	mla	r5, r6, r5, r2
 80192d0:	086a      	lsrs	r2, r5, #1
 80192d2:	9e01      	ldr	r6, [sp, #4]
 80192d4:	5cb2      	ldrb	r2, [r6, r2]
 80192d6:	07ed      	lsls	r5, r5, #31
 80192d8:	bf54      	ite	pl
 80192da:	f002 020f 	andpl.w	r2, r2, #15
 80192de:	1112      	asrmi	r2, r2, #4
 80192e0:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80192e4:	b2d2      	uxtb	r2, r2
 80192e6:	b1c2      	cbz	r2, 801931a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 80192e8:	9d04      	ldr	r5, [sp, #16]
 80192ea:	436a      	muls	r2, r5
 80192ec:	1c55      	adds	r5, r2, #1
 80192ee:	eb05 2222 	add.w	r2, r5, r2, asr #8
 80192f2:	4d2e      	ldr	r5, [pc, #184]	; (80193ac <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 80192f4:	1212      	asrs	r2, r2, #8
 80192f6:	682e      	ldr	r6, [r5, #0]
 80192f8:	2aff      	cmp	r2, #255	; 0xff
 80192fa:	ea4f 2516 	mov.w	r5, r6, lsr #8
 80192fe:	d113      	bne.n	8019328 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8019300:	0972      	lsrs	r2, r6, #5
 8019302:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 8019306:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801930a:	f025 0507 	bic.w	r5, r5, #7
 801930e:	4315      	orrs	r5, r2
 8019310:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8019314:	4335      	orrs	r5, r6
 8019316:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801931a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801931c:	4410      	add	r0, r2
 801931e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8019320:	f108 0801 	add.w	r8, r8, #1
 8019324:	4411      	add	r1, r2
 8019326:	e7c9      	b.n	80192bc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8019328:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801932c:	fa1f fa82 	uxth.w	sl, r2
 8019330:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8019334:	f3c6 4707 	ubfx	r7, r6, #16, #8
 8019338:	43d2      	mvns	r2, r2
 801933a:	b2d2      	uxtb	r2, r2
 801933c:	fb17 f70a 	smulbb	r7, r7, sl
 8019340:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019344:	fb0c 7c02 	mla	ip, ip, r2, r7
 8019348:	b2f6      	uxtb	r6, r6
 801934a:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801934e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019352:	fa5f fe8e 	uxtb.w	lr, lr
 8019356:	fb16 f60a 	smulbb	r6, r6, sl
 801935a:	fb0e 6602 	mla	r6, lr, r2, r6
 801935e:	b2ed      	uxtb	r5, r5
 8019360:	fa1f fc8c 	uxth.w	ip, ip
 8019364:	fb15 f50a 	smulbb	r5, r5, sl
 8019368:	b2b6      	uxth	r6, r6
 801936a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801936e:	fb07 5702 	mla	r7, r7, r2, r5
 8019372:	f10c 0201 	add.w	r2, ip, #1
 8019376:	1c75      	adds	r5, r6, #1
 8019378:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801937c:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8019380:	b2bf      	uxth	r7, r7
 8019382:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8019386:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801938a:	ea45 0c0c 	orr.w	ip, r5, ip
 801938e:	1c7d      	adds	r5, r7, #1
 8019390:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 8019394:	096d      	lsrs	r5, r5, #5
 8019396:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801939a:	ea4c 0c05 	orr.w	ip, ip, r5
 801939e:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 80193a2:	e7ba      	b.n	801931a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 80193a4:	b007      	add	sp, #28
 80193a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80193aa:	bf00      	nop
 80193ac:	200137cc 	.word	0x200137cc

080193b0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80193b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80193b4:	b087      	sub	sp, #28
 80193b6:	f8df 830c 	ldr.w	r8, [pc, #780]	; 80196c4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 80193ba:	9815      	ldr	r0, [sp, #84]	; 0x54
 80193bc:	9205      	str	r2, [sp, #20]
 80193be:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 80193c2:	9101      	str	r1, [sp, #4]
 80193c4:	6841      	ldr	r1, [r0, #4]
 80193c6:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 80193ca:	fb01 2404 	mla	r4, r1, r4, r2
 80193ce:	6802      	ldr	r2, [r0, #0]
 80193d0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80193d4:	f8db 2008 	ldr.w	r2, [fp, #8]
 80193d8:	3201      	adds	r2, #1
 80193da:	f022 0201 	bic.w	r2, r2, #1
 80193de:	9202      	str	r2, [sp, #8]
 80193e0:	f8db 2000 	ldr.w	r2, [fp]
 80193e4:	9203      	str	r2, [sp, #12]
 80193e6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80193ea:	9a01      	ldr	r2, [sp, #4]
 80193ec:	2a00      	cmp	r2, #0
 80193ee:	dc03      	bgt.n	80193f8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80193f0:	9a05      	ldr	r2, [sp, #20]
 80193f2:	2a00      	cmp	r2, #0
 80193f4:	f340 8162 	ble.w	80196bc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 80193f8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80193fa:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 80193fe:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 8019402:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8019406:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8019408:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801940c:	2b00      	cmp	r3, #0
 801940e:	dd0e      	ble.n	801942e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8019410:	1402      	asrs	r2, r0, #16
 8019412:	d405      	bmi.n	8019420 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019414:	42ba      	cmp	r2, r7
 8019416:	da03      	bge.n	8019420 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019418:	140a      	asrs	r2, r1, #16
 801941a:	d401      	bmi.n	8019420 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801941c:	42b2      	cmp	r2, r6
 801941e:	db07      	blt.n	8019430 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8019420:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8019422:	4410      	add	r0, r2
 8019424:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8019426:	3b01      	subs	r3, #1
 8019428:	4411      	add	r1, r2
 801942a:	3402      	adds	r4, #2
 801942c:	e7ee      	b.n	801940c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801942e:	d017      	beq.n	8019460 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8019430:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019432:	1e5a      	subs	r2, r3, #1
 8019434:	fb05 0502 	mla	r5, r5, r2, r0
 8019438:	142d      	asrs	r5, r5, #16
 801943a:	d409      	bmi.n	8019450 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801943c:	42bd      	cmp	r5, r7
 801943e:	da07      	bge.n	8019450 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8019440:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019442:	fb05 1202 	mla	r2, r5, r2, r1
 8019446:	1412      	asrs	r2, r2, #16
 8019448:	d402      	bmi.n	8019450 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801944a:	42b2      	cmp	r2, r6
 801944c:	f2c0 80c3 	blt.w	80195d6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 8019450:	2500      	movs	r5, #0
 8019452:	195a      	adds	r2, r3, r5
 8019454:	2a00      	cmp	r2, #0
 8019456:	dc3f      	bgt.n	80194d8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8019458:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801945c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019460:	9b01      	ldr	r3, [sp, #4]
 8019462:	2b00      	cmp	r3, #0
 8019464:	f340 812a 	ble.w	80196bc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8019468:	ee30 0a04 	vadd.f32	s0, s0, s8
 801946c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019470:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019474:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019476:	ee31 1a05 	vadd.f32	s2, s2, s10
 801947a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801947e:	eeb0 6a62 	vmov.f32	s12, s5
 8019482:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019486:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801948a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801948e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8019492:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019496:	eeb0 6a43 	vmov.f32	s12, s6
 801949a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801949e:	ee12 2a90 	vmov	r2, s5
 80194a2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80194a6:	fb92 f3f3 	sdiv	r3, r2, r3
 80194aa:	ee13 2a10 	vmov	r2, s6
 80194ae:	9313      	str	r3, [sp, #76]	; 0x4c
 80194b0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80194b2:	fb92 f3f3 	sdiv	r3, r2, r3
 80194b6:	9314      	str	r3, [sp, #80]	; 0x50
 80194b8:	9b01      	ldr	r3, [sp, #4]
 80194ba:	9a05      	ldr	r2, [sp, #20]
 80194bc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80194c0:	3b01      	subs	r3, #1
 80194c2:	9301      	str	r3, [sp, #4]
 80194c4:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80194c8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80194ca:	eeb0 3a67 	vmov.f32	s6, s15
 80194ce:	bf08      	it	eq
 80194d0:	4613      	moveq	r3, r2
 80194d2:	eef0 2a47 	vmov.f32	s5, s14
 80194d6:	e788      	b.n	80193ea <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80194d8:	1406      	asrs	r6, r0, #16
 80194da:	d42c      	bmi.n	8019536 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80194dc:	f8db 2008 	ldr.w	r2, [fp, #8]
 80194e0:	42b2      	cmp	r2, r6
 80194e2:	dd28      	ble.n	8019536 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80194e4:	140f      	asrs	r7, r1, #16
 80194e6:	d426      	bmi.n	8019536 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80194e8:	f8db 200c 	ldr.w	r2, [fp, #12]
 80194ec:	42ba      	cmp	r2, r7
 80194ee:	dd22      	ble.n	8019536 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80194f0:	9a02      	ldr	r2, [sp, #8]
 80194f2:	fb07 6602 	mla	r6, r7, r2, r6
 80194f6:	0872      	lsrs	r2, r6, #1
 80194f8:	9f03      	ldr	r7, [sp, #12]
 80194fa:	5cba      	ldrb	r2, [r7, r2]
 80194fc:	07f6      	lsls	r6, r6, #31
 80194fe:	bf54      	ite	pl
 8019500:	f002 020f 	andpl.w	r2, r2, #15
 8019504:	1112      	asrmi	r2, r2, #4
 8019506:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801950a:	b2d2      	uxtb	r2, r2
 801950c:	2aff      	cmp	r2, #255	; 0xff
 801950e:	d118      	bne.n	8019542 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 8019510:	f8d8 2000 	ldr.w	r2, [r8]
 8019514:	f06f 0601 	mvn.w	r6, #1
 8019518:	fb06 f705 	mul.w	r7, r6, r5
 801951c:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 8019520:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 8019524:	0956      	lsrs	r6, r2, #5
 8019526:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801952a:	ea4c 0606 	orr.w	r6, ip, r6
 801952e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8019532:	4316      	orrs	r6, r2
 8019534:	53e6      	strh	r6, [r4, r7]
 8019536:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8019538:	4410      	add	r0, r2
 801953a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801953c:	3d01      	subs	r5, #1
 801953e:	4411      	add	r1, r2
 8019540:	e787      	b.n	8019452 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8019542:	2a00      	cmp	r2, #0
 8019544:	d0f7      	beq.n	8019536 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019546:	f06f 0601 	mvn.w	r6, #1
 801954a:	436e      	muls	r6, r5
 801954c:	f8d8 c000 	ldr.w	ip, [r8]
 8019550:	f834 e006 	ldrh.w	lr, [r4, r6]
 8019554:	9604      	str	r6, [sp, #16]
 8019556:	fa1f f982 	uxth.w	r9, r2
 801955a:	ea4f 272e 	mov.w	r7, lr, asr #8
 801955e:	f3cc 4607 	ubfx	r6, ip, #16, #8
 8019562:	43d2      	mvns	r2, r2
 8019564:	b2d2      	uxtb	r2, r2
 8019566:	fb16 f609 	smulbb	r6, r6, r9
 801956a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801956e:	fb07 6702 	mla	r7, r7, r2, r6
 8019572:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 8019576:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801957a:	fa5f fc8c 	uxtb.w	ip, ip
 801957e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019582:	fa5f fe8e 	uxtb.w	lr, lr
 8019586:	fb1c fc09 	smulbb	ip, ip, r9
 801958a:	fb0e cc02 	mla	ip, lr, r2, ip
 801958e:	b2bf      	uxth	r7, r7
 8019590:	fb1a fa09 	smulbb	sl, sl, r9
 8019594:	fa1f fc8c 	uxth.w	ip, ip
 8019598:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801959c:	fb06 a602 	mla	r6, r6, r2, sl
 80195a0:	1c7a      	adds	r2, r7, #1
 80195a2:	f10c 0a01 	add.w	sl, ip, #1
 80195a6:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80195aa:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 80195ae:	b2b6      	uxth	r6, r6
 80195b0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80195b4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80195b8:	ea4a 0707 	orr.w	r7, sl, r7
 80195bc:	f106 0a01 	add.w	sl, r6, #1
 80195c0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80195c4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80195c8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80195cc:	9a04      	ldr	r2, [sp, #16]
 80195ce:	ea47 070a 	orr.w	r7, r7, sl
 80195d2:	52a7      	strh	r7, [r4, r2]
 80195d4:	e7af      	b.n	8019536 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80195d6:	f04f 0e00 	mov.w	lr, #0
 80195da:	eba3 020e 	sub.w	r2, r3, lr
 80195de:	2a00      	cmp	r2, #0
 80195e0:	f77f af3a 	ble.w	8019458 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80195e4:	9e02      	ldr	r6, [sp, #8]
 80195e6:	1402      	asrs	r2, r0, #16
 80195e8:	140d      	asrs	r5, r1, #16
 80195ea:	fb06 2505 	mla	r5, r6, r5, r2
 80195ee:	086a      	lsrs	r2, r5, #1
 80195f0:	9e03      	ldr	r6, [sp, #12]
 80195f2:	5cb2      	ldrb	r2, [r6, r2]
 80195f4:	07ed      	lsls	r5, r5, #31
 80195f6:	bf54      	ite	pl
 80195f8:	f002 020f 	andpl.w	r2, r2, #15
 80195fc:	1112      	asrmi	r2, r2, #4
 80195fe:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8019602:	b2d2      	uxtb	r2, r2
 8019604:	2aff      	cmp	r2, #255	; 0xff
 8019606:	d115      	bne.n	8019634 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 8019608:	f8d8 5000 	ldr.w	r5, [r8]
 801960c:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 8019610:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 8019614:	096a      	lsrs	r2, r5, #5
 8019616:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801961a:	4332      	orrs	r2, r6
 801961c:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8019620:	432a      	orrs	r2, r5
 8019622:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 8019626:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8019628:	4410      	add	r0, r2
 801962a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801962c:	f10e 0e01 	add.w	lr, lr, #1
 8019630:	4411      	add	r1, r2
 8019632:	e7d2      	b.n	80195da <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8019634:	2a00      	cmp	r2, #0
 8019636:	d0f6      	beq.n	8019626 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8019638:	f8d8 7000 	ldr.w	r7, [r8]
 801963c:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8019640:	fa1f f982 	uxth.w	r9, r2
 8019644:	ea4f 262c 	mov.w	r6, ip, asr #8
 8019648:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801964c:	43d2      	mvns	r2, r2
 801964e:	b2d2      	uxtb	r2, r2
 8019650:	fb15 f509 	smulbb	r5, r5, r9
 8019654:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8019658:	fb06 5602 	mla	r6, r6, r2, r5
 801965c:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 8019660:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8019664:	b2ff      	uxtb	r7, r7
 8019666:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801966a:	fa5f fc8c 	uxtb.w	ip, ip
 801966e:	fb17 f709 	smulbb	r7, r7, r9
 8019672:	fb0c 7702 	mla	r7, ip, r2, r7
 8019676:	b2b6      	uxth	r6, r6
 8019678:	fb1a fa09 	smulbb	sl, sl, r9
 801967c:	b2bf      	uxth	r7, r7
 801967e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8019682:	fb05 a502 	mla	r5, r5, r2, sl
 8019686:	1c72      	adds	r2, r6, #1
 8019688:	f107 0a01 	add.w	sl, r7, #1
 801968c:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8019690:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8019694:	b2ad      	uxth	r5, r5
 8019696:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801969a:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801969e:	ea4a 0606 	orr.w	r6, sl, r6
 80196a2:	f105 0a01 	add.w	sl, r5, #1
 80196a6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80196aa:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80196ae:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80196b2:	ea46 060a 	orr.w	r6, r6, sl
 80196b6:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 80196ba:	e7b4      	b.n	8019626 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80196bc:	b007      	add	sp, #28
 80196be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80196c2:	bf00      	nop
 80196c4:	200137cc 	.word	0x200137cc

080196c8 <_ZN8touchgfx8LCD16bppD1Ev>:
 80196c8:	4770      	bx	lr

080196ca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 80196ca:	4770      	bx	lr

080196cc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 80196cc:	4770      	bx	lr

080196ce <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 80196ce:	4770      	bx	lr

080196d0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 80196d0:	4770      	bx	lr

080196d2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 80196d2:	4770      	bx	lr

080196d4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 80196d4:	4770      	bx	lr

080196d6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 80196d6:	4770      	bx	lr

080196d8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80196d8:	4770      	bx	lr

080196da <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80196da:	4770      	bx	lr

080196dc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80196dc:	4770      	bx	lr

080196de <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 80196de:	4770      	bx	lr

080196e0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 80196e0:	4770      	bx	lr

080196e2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 80196e2:	4770      	bx	lr

080196e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80196e4:	4770      	bx	lr

080196e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80196e6:	4770      	bx	lr

080196e8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 80196e8:	4770      	bx	lr

080196ea <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 80196ea:	4770      	bx	lr

080196ec <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80196ec:	4770      	bx	lr

080196ee <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 80196ee:	4770      	bx	lr

080196f0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80196f0:	4770      	bx	lr

080196f2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80196f2:	4770      	bx	lr

080196f4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80196f4:	4770      	bx	lr

080196f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 80196f6:	4770      	bx	lr

080196f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 80196f8:	4770      	bx	lr

080196fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 80196fa:	4770      	bx	lr

080196fc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 80196fc:	4770      	bx	lr

080196fe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 80196fe:	4770      	bx	lr

08019700 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8019700:	4770      	bx	lr

08019702 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8019702:	4770      	bx	lr

08019704 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8019704:	4770      	bx	lr

08019706 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8019706:	4770      	bx	lr

08019708 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8019708:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801970c:	b088      	sub	sp, #32
 801970e:	ac08      	add	r4, sp, #32
 8019710:	4606      	mov	r6, r0
 8019712:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 8019716:	4620      	mov	r0, r4
 8019718:	4688      	mov	r8, r1
 801971a:	4691      	mov	r9, r2
 801971c:	f7fd fc62 	bl	8016fe4 <_ZNK8touchgfx6Bitmap7getDataEv>
 8019720:	6833      	ldr	r3, [r6, #0]
 8019722:	4605      	mov	r5, r0
 8019724:	4620      	mov	r0, r4
 8019726:	699f      	ldr	r7, [r3, #24]
 8019728:	f7fd fb70 	bl	8016e0c <_ZNK8touchgfx6Bitmap8getWidthEv>
 801972c:	4682      	mov	sl, r0
 801972e:	4620      	mov	r0, r4
 8019730:	f7fd fba0 	bl	8016e74 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8019734:	9500      	str	r5, [sp, #0]
 8019736:	e9cd a001 	strd	sl, r0, [sp, #4]
 801973a:	464b      	mov	r3, r9
 801973c:	a806      	add	r0, sp, #24
 801973e:	4642      	mov	r2, r8
 8019740:	4631      	mov	r1, r6
 8019742:	47b8      	blx	r7
 8019744:	4628      	mov	r0, r5
 8019746:	b008      	add	sp, #32
 8019748:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801974c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 801974c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8019750:	2300      	movs	r3, #0
 8019752:	9300      	str	r3, [sp, #0]
 8019754:	4b3d      	ldr	r3, [pc, #244]	; (801984c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 8019756:	781b      	ldrb	r3, [r3, #0]
 8019758:	2b00      	cmp	r3, #0
 801975a:	d137      	bne.n	80197cc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 801975c:	4a3c      	ldr	r2, [pc, #240]	; (8019850 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801975e:	f9b2 2000 	ldrsh.w	r2, [r2]
 8019762:	f8ad 2004 	strh.w	r2, [sp, #4]
 8019766:	2b00      	cmp	r3, #0
 8019768:	d132      	bne.n	80197d0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801976a:	4b3a      	ldr	r3, [pc, #232]	; (8019854 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801976c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8019770:	6808      	ldr	r0, [r1, #0]
 8019772:	6849      	ldr	r1, [r1, #4]
 8019774:	f8ad 3006 	strh.w	r3, [sp, #6]
 8019778:	ac02      	add	r4, sp, #8
 801977a:	ab02      	add	r3, sp, #8
 801977c:	c303      	stmia	r3!, {r0, r1}
 801977e:	4669      	mov	r1, sp
 8019780:	4620      	mov	r0, r4
 8019782:	f7f9 ffb5 	bl	80136f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8019786:	4668      	mov	r0, sp
 8019788:	f7f9 ff6e 	bl	8013668 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801978c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8019790:	f8bd 2000 	ldrh.w	r2, [sp]
 8019794:	4d30      	ldr	r5, [pc, #192]	; (8019858 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 8019796:	4413      	add	r3, r2
 8019798:	f8ad 3008 	strh.w	r3, [sp, #8]
 801979c:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 80197a0:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80197a4:	6828      	ldr	r0, [r5, #0]
 80197a6:	4413      	add	r3, r2
 80197a8:	f8ad 300a 	strh.w	r3, [sp, #10]
 80197ac:	6803      	ldr	r3, [r0, #0]
 80197ae:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80197b0:	4798      	blx	r3
 80197b2:	f010 0f01 	tst.w	r0, #1
 80197b6:	462f      	mov	r7, r5
 80197b8:	d00c      	beq.n	80197d4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 80197ba:	6828      	ldr	r0, [r5, #0]
 80197bc:	6803      	ldr	r3, [r0, #0]
 80197be:	e894 0006 	ldmia.w	r4, {r1, r2}
 80197c2:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80197c4:	4798      	blx	r3
 80197c6:	b004      	add	sp, #16
 80197c8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80197cc:	4a21      	ldr	r2, [pc, #132]	; (8019854 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 80197ce:	e7c6      	b.n	801975e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 80197d0:	4b1f      	ldr	r3, [pc, #124]	; (8019850 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 80197d2:	e7cb      	b.n	801976c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 80197d4:	6838      	ldr	r0, [r7, #0]
 80197d6:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 80197da:	6803      	ldr	r3, [r0, #0]
 80197dc:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 80197e0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80197e2:	4798      	blx	r3
 80197e4:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 80197e8:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80197ec:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 80197f0:	fb16 3602 	smlabb	r6, r6, r2, r3
 80197f4:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 80197f8:	6838      	ldr	r0, [r7, #0]
 80197fa:	6803      	ldr	r3, [r0, #0]
 80197fc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80197fe:	4798      	blx	r3
 8019800:	4a13      	ldr	r2, [pc, #76]	; (8019850 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8019802:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 8019806:	8813      	ldrh	r3, [r2, #0]
 8019808:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801980c:	fb03 1404 	mla	r4, r3, r4, r1
 8019810:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8019814:	435d      	muls	r5, r3
 8019816:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801981a:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801981e:	4691      	mov	r9, r2
 8019820:	6838      	ldr	r0, [r7, #0]
 8019822:	42ac      	cmp	r4, r5
 8019824:	6803      	ldr	r3, [r0, #0]
 8019826:	d20e      	bcs.n	8019846 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 8019828:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 801982c:	4632      	mov	r2, r6
 801982e:	4643      	mov	r3, r8
 8019830:	4621      	mov	r1, r4
 8019832:	47d0      	blx	sl
 8019834:	f8b9 3000 	ldrh.w	r3, [r9]
 8019838:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801983c:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8019840:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8019844:	e7ec      	b.n	8019820 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 8019846:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8019848:	4798      	blx	r3
 801984a:	e7bc      	b.n	80197c6 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 801984c:	200137b4 	.word	0x200137b4
 8019850:	200137b6 	.word	0x200137b6
 8019854:	200137b8 	.word	0x200137b8
 8019858:	200137bc 	.word	0x200137bc

0801985c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801985c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019860:	b08b      	sub	sp, #44	; 0x2c
 8019862:	460f      	mov	r7, r1
 8019864:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 8019868:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 801986c:	4616      	mov	r6, r2
 801986e:	f1bb 0f00 	cmp.w	fp, #0
 8019872:	d04a      	beq.n	801990a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 8019874:	6810      	ldr	r0, [r2, #0]
 8019876:	6851      	ldr	r1, [r2, #4]
 8019878:	ad06      	add	r5, sp, #24
 801987a:	c503      	stmia	r5!, {r0, r1}
 801987c:	6818      	ldr	r0, [r3, #0]
 801987e:	6859      	ldr	r1, [r3, #4]
 8019880:	ad08      	add	r5, sp, #32
 8019882:	c503      	stmia	r5!, {r0, r1}
 8019884:	a806      	add	r0, sp, #24
 8019886:	f7f9 feef 	bl	8013668 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801988a:	4631      	mov	r1, r6
 801988c:	a808      	add	r0, sp, #32
 801988e:	f7f9 ff2f 	bl	80136f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8019892:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8019896:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801989a:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801989e:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 80198a2:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 80198a6:	fb16 2103 	smlabb	r1, r6, r3, r2
 80198aa:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 80198ae:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 80198b2:	4f5f      	ldr	r7, [pc, #380]	; (8019a30 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 80198b4:	440a      	add	r2, r1
 80198b6:	f8ad 2020 	strh.w	r2, [sp, #32]
 80198ba:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 80198be:	6838      	ldr	r0, [r7, #0]
 80198c0:	4413      	add	r3, r2
 80198c2:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80198c6:	6803      	ldr	r3, [r0, #0]
 80198c8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80198ca:	4798      	blx	r3
 80198cc:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 80198d0:	46b9      	mov	r9, r7
 80198d2:	d11d      	bne.n	8019910 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 80198d4:	b9fc      	cbnz	r4, 8019916 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 80198d6:	f010 0f01 	tst.w	r0, #1
 80198da:	d01c      	beq.n	8019916 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 80198dc:	f8d9 0000 	ldr.w	r0, [r9]
 80198e0:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 80198e4:	6801      	ldr	r1, [r0, #0]
 80198e6:	f8cd b00c 	str.w	fp, [sp, #12]
 80198ea:	2700      	movs	r7, #0
 80198ec:	e9cd 4704 	strd	r4, r7, [sp, #16]
 80198f0:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 80198f4:	9402      	str	r4, [sp, #8]
 80198f6:	b2ad      	uxth	r5, r5
 80198f8:	fa1f f488 	uxth.w	r4, r8
 80198fc:	9501      	str	r5, [sp, #4]
 80198fe:	9400      	str	r4, [sp, #0]
 8019900:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 8019902:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8019906:	4631      	mov	r1, r6
 8019908:	47a0      	blx	r4
 801990a:	b00b      	add	sp, #44	; 0x2c
 801990c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019910:	f010 0f04 	tst.w	r0, #4
 8019914:	e7e1      	b.n	80198da <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 8019916:	f8d9 0000 	ldr.w	r0, [r9]
 801991a:	6803      	ldr	r3, [r0, #0]
 801991c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801991e:	4798      	blx	r3
 8019920:	4b44      	ldr	r3, [pc, #272]	; (8019a34 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 8019922:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 8019926:	881a      	ldrh	r2, [r3, #0]
 8019928:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801992c:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8019930:	fb02 1404 	mla	r4, r2, r4, r1
 8019934:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8019938:	469a      	mov	sl, r3
 801993a:	fb05 f502 	mul.w	r5, r5, r2
 801993e:	ea4f 0748 	mov.w	r7, r8, lsl #1
 8019942:	d059      	beq.n	80199f8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 8019944:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 8019948:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801994c:	fa1f f28b 	uxth.w	r2, fp
 8019950:	fa1f f989 	uxth.w	r9, r9
 8019954:	469e      	mov	lr, r3
 8019956:	42ac      	cmp	r4, r5
 8019958:	d264      	bcs.n	8019a24 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801995a:	eb04 0a07 	add.w	sl, r4, r7
 801995e:	4554      	cmp	r4, sl
 8019960:	d23d      	bcs.n	80199de <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 8019962:	8821      	ldrh	r1, [r4, #0]
 8019964:	f836 3b02 	ldrh.w	r3, [r6], #2
 8019968:	1208      	asrs	r0, r1, #8
 801996a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801996e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8019972:	fb10 f009 	smulbb	r0, r0, r9
 8019976:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801997a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801997e:	00c9      	lsls	r1, r1, #3
 8019980:	fb0c 0c02 	mla	ip, ip, r2, r0
 8019984:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8019988:	10d8      	asrs	r0, r3, #3
 801998a:	b2c9      	uxtb	r1, r1
 801998c:	00db      	lsls	r3, r3, #3
 801998e:	fa1f fc8c 	uxth.w	ip, ip
 8019992:	fb1b fb09 	smulbb	fp, fp, r9
 8019996:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801999a:	b2db      	uxtb	r3, r3
 801999c:	fb11 f109 	smulbb	r1, r1, r9
 80199a0:	fb00 b002 	mla	r0, r0, r2, fp
 80199a4:	fb03 1302 	mla	r3, r3, r2, r1
 80199a8:	f10c 0b01 	add.w	fp, ip, #1
 80199ac:	b29b      	uxth	r3, r3
 80199ae:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 80199b2:	b280      	uxth	r0, r0
 80199b4:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 80199b8:	f103 0c01 	add.w	ip, r3, #1
 80199bc:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80199c0:	1c43      	adds	r3, r0, #1
 80199c2:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80199c6:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80199ca:	0940      	lsrs	r0, r0, #5
 80199cc:	ea4c 0c0b 	orr.w	ip, ip, fp
 80199d0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80199d4:	ea4c 0c00 	orr.w	ip, ip, r0
 80199d8:	f824 cb02 	strh.w	ip, [r4], #2
 80199dc:	e7bf      	b.n	801995e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 80199de:	f8be 3000 	ldrh.w	r3, [lr]
 80199e2:	eba3 0308 	sub.w	r3, r3, r8
 80199e6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80199ea:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80199ee:	eba3 0308 	sub.w	r3, r3, r8
 80199f2:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80199f6:	e7ae      	b.n	8019956 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 80199f8:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 80199fc:	f8d9 0000 	ldr.w	r0, [r9]
 8019a00:	42ac      	cmp	r4, r5
 8019a02:	6803      	ldr	r3, [r0, #0]
 8019a04:	d20e      	bcs.n	8019a24 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8019a06:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 8019a0a:	4632      	mov	r2, r6
 8019a0c:	463b      	mov	r3, r7
 8019a0e:	4621      	mov	r1, r4
 8019a10:	47c0      	blx	r8
 8019a12:	f8ba 3000 	ldrh.w	r3, [sl]
 8019a16:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019a1a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8019a1e:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8019a22:	e7eb      	b.n	80199fc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 8019a24:	4b02      	ldr	r3, [pc, #8]	; (8019a30 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8019a26:	6818      	ldr	r0, [r3, #0]
 8019a28:	6803      	ldr	r3, [r0, #0]
 8019a2a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8019a2c:	4798      	blx	r3
 8019a2e:	e76c      	b.n	801990a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 8019a30:	200137bc 	.word	0x200137bc
 8019a34:	200137b6 	.word	0x200137b6

08019a38 <_ZN8touchgfx8LCD16bppD0Ev>:
 8019a38:	b510      	push	{r4, lr}
 8019a3a:	2184      	movs	r1, #132	; 0x84
 8019a3c:	4604      	mov	r4, r0
 8019a3e:	f00c fd26 	bl	802648e <_ZdlPvj>
 8019a42:	4620      	mov	r0, r4
 8019a44:	bd10      	pop	{r4, pc}

08019a46 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 8019a46:	b510      	push	{r4, lr}
 8019a48:	2104      	movs	r1, #4
 8019a4a:	4604      	mov	r4, r0
 8019a4c:	f00c fd1f 	bl	802648e <_ZdlPvj>
 8019a50:	4620      	mov	r0, r4
 8019a52:	bd10      	pop	{r4, pc}

08019a54 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 8019a54:	b510      	push	{r4, lr}
 8019a56:	2104      	movs	r1, #4
 8019a58:	4604      	mov	r4, r0
 8019a5a:	f00c fd18 	bl	802648e <_ZdlPvj>
 8019a5e:	4620      	mov	r0, r4
 8019a60:	bd10      	pop	{r4, pc}

08019a62 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 8019a62:	b510      	push	{r4, lr}
 8019a64:	f640 0144 	movw	r1, #2116	; 0x844
 8019a68:	4604      	mov	r4, r0
 8019a6a:	f00c fd10 	bl	802648e <_ZdlPvj>
 8019a6e:	4620      	mov	r0, r4
 8019a70:	bd10      	pop	{r4, pc}

08019a72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8019a72:	b510      	push	{r4, lr}
 8019a74:	2104      	movs	r1, #4
 8019a76:	4604      	mov	r4, r0
 8019a78:	f00c fd09 	bl	802648e <_ZdlPvj>
 8019a7c:	4620      	mov	r0, r4
 8019a7e:	bd10      	pop	{r4, pc}

08019a80 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8019a80:	b510      	push	{r4, lr}
 8019a82:	2104      	movs	r1, #4
 8019a84:	4604      	mov	r4, r0
 8019a86:	f00c fd02 	bl	802648e <_ZdlPvj>
 8019a8a:	4620      	mov	r0, r4
 8019a8c:	bd10      	pop	{r4, pc}

08019a8e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8019a8e:	b510      	push	{r4, lr}
 8019a90:	2104      	movs	r1, #4
 8019a92:	4604      	mov	r4, r0
 8019a94:	f00c fcfb 	bl	802648e <_ZdlPvj>
 8019a98:	4620      	mov	r0, r4
 8019a9a:	bd10      	pop	{r4, pc}

08019a9c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8019a9c:	b510      	push	{r4, lr}
 8019a9e:	2104      	movs	r1, #4
 8019aa0:	4604      	mov	r4, r0
 8019aa2:	f00c fcf4 	bl	802648e <_ZdlPvj>
 8019aa6:	4620      	mov	r0, r4
 8019aa8:	bd10      	pop	{r4, pc}

08019aaa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8019aaa:	b510      	push	{r4, lr}
 8019aac:	2104      	movs	r1, #4
 8019aae:	4604      	mov	r4, r0
 8019ab0:	f00c fced 	bl	802648e <_ZdlPvj>
 8019ab4:	4620      	mov	r0, r4
 8019ab6:	bd10      	pop	{r4, pc}

08019ab8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8019ab8:	b510      	push	{r4, lr}
 8019aba:	2104      	movs	r1, #4
 8019abc:	4604      	mov	r4, r0
 8019abe:	f00c fce6 	bl	802648e <_ZdlPvj>
 8019ac2:	4620      	mov	r0, r4
 8019ac4:	bd10      	pop	{r4, pc}

08019ac6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8019ac6:	b510      	push	{r4, lr}
 8019ac8:	2104      	movs	r1, #4
 8019aca:	4604      	mov	r4, r0
 8019acc:	f00c fcdf 	bl	802648e <_ZdlPvj>
 8019ad0:	4620      	mov	r0, r4
 8019ad2:	bd10      	pop	{r4, pc}

08019ad4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8019ad4:	b510      	push	{r4, lr}
 8019ad6:	2104      	movs	r1, #4
 8019ad8:	4604      	mov	r4, r0
 8019ada:	f00c fcd8 	bl	802648e <_ZdlPvj>
 8019ade:	4620      	mov	r0, r4
 8019ae0:	bd10      	pop	{r4, pc}

08019ae2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8019ae2:	b510      	push	{r4, lr}
 8019ae4:	2104      	movs	r1, #4
 8019ae6:	4604      	mov	r4, r0
 8019ae8:	f00c fcd1 	bl	802648e <_ZdlPvj>
 8019aec:	4620      	mov	r0, r4
 8019aee:	bd10      	pop	{r4, pc}

08019af0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8019af0:	b510      	push	{r4, lr}
 8019af2:	2104      	movs	r1, #4
 8019af4:	4604      	mov	r4, r0
 8019af6:	f00c fcca 	bl	802648e <_ZdlPvj>
 8019afa:	4620      	mov	r0, r4
 8019afc:	bd10      	pop	{r4, pc}

08019afe <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8019afe:	b510      	push	{r4, lr}
 8019b00:	2104      	movs	r1, #4
 8019b02:	4604      	mov	r4, r0
 8019b04:	f00c fcc3 	bl	802648e <_ZdlPvj>
 8019b08:	4620      	mov	r0, r4
 8019b0a:	bd10      	pop	{r4, pc}

08019b0c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8019b0c:	b510      	push	{r4, lr}
 8019b0e:	2104      	movs	r1, #4
 8019b10:	4604      	mov	r4, r0
 8019b12:	f00c fcbc 	bl	802648e <_ZdlPvj>
 8019b16:	4620      	mov	r0, r4
 8019b18:	bd10      	pop	{r4, pc}

08019b1a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8019b1a:	b510      	push	{r4, lr}
 8019b1c:	2104      	movs	r1, #4
 8019b1e:	4604      	mov	r4, r0
 8019b20:	f00c fcb5 	bl	802648e <_ZdlPvj>
 8019b24:	4620      	mov	r0, r4
 8019b26:	bd10      	pop	{r4, pc}

08019b28 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8019b28:	b510      	push	{r4, lr}
 8019b2a:	2104      	movs	r1, #4
 8019b2c:	4604      	mov	r4, r0
 8019b2e:	f00c fcae 	bl	802648e <_ZdlPvj>
 8019b32:	4620      	mov	r0, r4
 8019b34:	bd10      	pop	{r4, pc}

08019b36 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8019b36:	b510      	push	{r4, lr}
 8019b38:	2104      	movs	r1, #4
 8019b3a:	4604      	mov	r4, r0
 8019b3c:	f00c fca7 	bl	802648e <_ZdlPvj>
 8019b40:	4620      	mov	r0, r4
 8019b42:	bd10      	pop	{r4, pc}

08019b44 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8019b44:	b510      	push	{r4, lr}
 8019b46:	2104      	movs	r1, #4
 8019b48:	4604      	mov	r4, r0
 8019b4a:	f00c fca0 	bl	802648e <_ZdlPvj>
 8019b4e:	4620      	mov	r0, r4
 8019b50:	bd10      	pop	{r4, pc}

08019b52 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8019b52:	b510      	push	{r4, lr}
 8019b54:	2104      	movs	r1, #4
 8019b56:	4604      	mov	r4, r0
 8019b58:	f00c fc99 	bl	802648e <_ZdlPvj>
 8019b5c:	4620      	mov	r0, r4
 8019b5e:	bd10      	pop	{r4, pc}

08019b60 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8019b60:	b510      	push	{r4, lr}
 8019b62:	2104      	movs	r1, #4
 8019b64:	4604      	mov	r4, r0
 8019b66:	f00c fc92 	bl	802648e <_ZdlPvj>
 8019b6a:	4620      	mov	r0, r4
 8019b6c:	bd10      	pop	{r4, pc}

08019b6e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8019b6e:	b510      	push	{r4, lr}
 8019b70:	2104      	movs	r1, #4
 8019b72:	4604      	mov	r4, r0
 8019b74:	f00c fc8b 	bl	802648e <_ZdlPvj>
 8019b78:	4620      	mov	r0, r4
 8019b7a:	bd10      	pop	{r4, pc}

08019b7c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8019b7c:	b510      	push	{r4, lr}
 8019b7e:	2104      	movs	r1, #4
 8019b80:	4604      	mov	r4, r0
 8019b82:	f00c fc84 	bl	802648e <_ZdlPvj>
 8019b86:	4620      	mov	r0, r4
 8019b88:	bd10      	pop	{r4, pc}

08019b8a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8019b8a:	b510      	push	{r4, lr}
 8019b8c:	2104      	movs	r1, #4
 8019b8e:	4604      	mov	r4, r0
 8019b90:	f00c fc7d 	bl	802648e <_ZdlPvj>
 8019b94:	4620      	mov	r0, r4
 8019b96:	bd10      	pop	{r4, pc}

08019b98 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8019b98:	b510      	push	{r4, lr}
 8019b9a:	2104      	movs	r1, #4
 8019b9c:	4604      	mov	r4, r0
 8019b9e:	f00c fc76 	bl	802648e <_ZdlPvj>
 8019ba2:	4620      	mov	r0, r4
 8019ba4:	bd10      	pop	{r4, pc}

08019ba6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8019ba6:	b510      	push	{r4, lr}
 8019ba8:	2104      	movs	r1, #4
 8019baa:	4604      	mov	r4, r0
 8019bac:	f00c fc6f 	bl	802648e <_ZdlPvj>
 8019bb0:	4620      	mov	r0, r4
 8019bb2:	bd10      	pop	{r4, pc}

08019bb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8019bb4:	b510      	push	{r4, lr}
 8019bb6:	2104      	movs	r1, #4
 8019bb8:	4604      	mov	r4, r0
 8019bba:	f00c fc68 	bl	802648e <_ZdlPvj>
 8019bbe:	4620      	mov	r0, r4
 8019bc0:	bd10      	pop	{r4, pc}

08019bc2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 8019bc2:	b510      	push	{r4, lr}
 8019bc4:	2104      	movs	r1, #4
 8019bc6:	4604      	mov	r4, r0
 8019bc8:	f00c fc61 	bl	802648e <_ZdlPvj>
 8019bcc:	4620      	mov	r0, r4
 8019bce:	bd10      	pop	{r4, pc}

08019bd0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 8019bd0:	b510      	push	{r4, lr}
 8019bd2:	2104      	movs	r1, #4
 8019bd4:	4604      	mov	r4, r0
 8019bd6:	f00c fc5a 	bl	802648e <_ZdlPvj>
 8019bda:	4620      	mov	r0, r4
 8019bdc:	bd10      	pop	{r4, pc}

08019bde <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 8019bde:	b510      	push	{r4, lr}
 8019be0:	2104      	movs	r1, #4
 8019be2:	4604      	mov	r4, r0
 8019be4:	f00c fc53 	bl	802648e <_ZdlPvj>
 8019be8:	4620      	mov	r0, r4
 8019bea:	bd10      	pop	{r4, pc}

08019bec <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 8019bec:	b510      	push	{r4, lr}
 8019bee:	2104      	movs	r1, #4
 8019bf0:	4604      	mov	r4, r0
 8019bf2:	f00c fc4c 	bl	802648e <_ZdlPvj>
 8019bf6:	4620      	mov	r0, r4
 8019bf8:	bd10      	pop	{r4, pc}
	...

08019bfc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8019bfc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019c00:	b08f      	sub	sp, #60	; 0x3c
 8019c02:	461c      	mov	r4, r3
 8019c04:	9205      	str	r2, [sp, #20]
 8019c06:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8019c0a:	9100      	str	r1, [sp, #0]
 8019c0c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8019c0e:	9201      	str	r2, [sp, #4]
 8019c10:	2a00      	cmp	r2, #0
 8019c12:	f000 8115 	beq.w	8019e40 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 8019c16:	6820      	ldr	r0, [r4, #0]
 8019c18:	6861      	ldr	r1, [r4, #4]
 8019c1a:	aa0a      	add	r2, sp, #40	; 0x28
 8019c1c:	c203      	stmia	r2!, {r0, r1}
 8019c1e:	6818      	ldr	r0, [r3, #0]
 8019c20:	6859      	ldr	r1, [r3, #4]
 8019c22:	aa0c      	add	r2, sp, #48	; 0x30
 8019c24:	c203      	stmia	r2!, {r0, r1}
 8019c26:	a80a      	add	r0, sp, #40	; 0x28
 8019c28:	f7f9 fd1e 	bl	8013668 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019c2c:	4621      	mov	r1, r4
 8019c2e:	a80c      	add	r0, sp, #48	; 0x30
 8019c30:	f7f9 fd5e 	bl	80136f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8019c34:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 8019c38:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 8019c3c:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 8019c40:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 8019c44:	bfde      	ittt	le
 8019c46:	b2b3      	uxthle	r3, r6
 8019c48:	f44f 6280 	movle.w	r2, #1024	; 0x400
 8019c4c:	fb92 f3f3 	sdivle	r3, r2, r3
 8019c50:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 8019c54:	bfc8      	it	gt
 8019c56:	2301      	movgt	r3, #1
 8019c58:	fb92 f1f3 	sdiv	r1, r2, r3
 8019c5c:	fa1f fc81 	uxth.w	ip, r1
 8019c60:	fb0c 2413 	mls	r4, ip, r3, r2
 8019c64:	fb14 f406 	smulbb	r4, r4, r6
 8019c68:	441d      	add	r5, r3
 8019c6a:	4404      	add	r4, r0
 8019c6c:	4661      	mov	r1, ip
 8019c6e:	3d01      	subs	r5, #1
 8019c70:	b2a4      	uxth	r4, r4
 8019c72:	fb95 f5f3 	sdiv	r5, r5, r3
 8019c76:	b131      	cbz	r1, 8019c86 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 8019c78:	9b05      	ldr	r3, [sp, #20]
 8019c7a:	9900      	ldr	r1, [sp, #0]
 8019c7c:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8019c80:	ba1b      	rev	r3, r3
 8019c82:	4419      	add	r1, r3
 8019c84:	9100      	str	r1, [sp, #0]
 8019c86:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8019c8a:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 8019c8e:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 8019c92:	4418      	add	r0, r3
 8019c94:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8019c98:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 8019c9c:	441a      	add	r2, r3
 8019c9e:	4b6a      	ldr	r3, [pc, #424]	; (8019e48 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 8019ca0:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 8019ca4:	6818      	ldr	r0, [r3, #0]
 8019ca6:	6803      	ldr	r3, [r0, #0]
 8019ca8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8019caa:	4798      	blx	r3
 8019cac:	4967      	ldr	r1, [pc, #412]	; (8019e4c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 8019cae:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 8019cb2:	880b      	ldrh	r3, [r1, #0]
 8019cb4:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 8019cb8:	9109      	str	r1, [sp, #36]	; 0x24
 8019cba:	fb03 c202 	mla	r2, r3, r2, ip
 8019cbe:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8019cc2:	4373      	muls	r3, r6
 8019cc4:	b2ad      	uxth	r5, r5
 8019cc6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8019cca:	00ad      	lsls	r5, r5, #2
 8019ccc:	9306      	str	r3, [sp, #24]
 8019cce:	1d2b      	adds	r3, r5, #4
 8019cd0:	9307      	str	r3, [sp, #28]
 8019cd2:	9b01      	ldr	r3, [sp, #4]
 8019cd4:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8019cd8:	9103      	str	r1, [sp, #12]
 8019cda:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
 8019cde:	2c00      	cmp	r4, #0
 8019ce0:	bf0c      	ite	eq
 8019ce2:	46c6      	moveq	lr, r8
 8019ce4:	f04f 0e00 	movne.w	lr, #0
 8019ce8:	2300      	movs	r3, #0
 8019cea:	b292      	uxth	r2, r2
 8019cec:	fa1f fe8e 	uxth.w	lr, lr
 8019cf0:	9302      	str	r3, [sp, #8]
 8019cf2:	9204      	str	r2, [sp, #16]
 8019cf4:	9a06      	ldr	r2, [sp, #24]
 8019cf6:	4282      	cmp	r2, r0
 8019cf8:	f240 809d 	bls.w	8019e36 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 8019cfc:	b963      	cbnz	r3, 8019d18 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 8019cfe:	9b00      	ldr	r3, [sp, #0]
 8019d00:	781a      	ldrb	r2, [r3, #0]
 8019d02:	0993      	lsrs	r3, r2, #6
 8019d04:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8019d08:	9202      	str	r2, [sp, #8]
 8019d0a:	1e5a      	subs	r2, r3, #1
 8019d0c:	2a02      	cmp	r2, #2
 8019d0e:	d815      	bhi.n	8019d3c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 8019d10:	9a00      	ldr	r2, [sp, #0]
 8019d12:	3201      	adds	r2, #1
 8019d14:	9200      	str	r2, [sp, #0]
 8019d16:	b29b      	uxth	r3, r3
 8019d18:	b1b4      	cbz	r4, 8019d48 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 8019d1a:	429c      	cmp	r4, r3
 8019d1c:	bf95      	itete	ls
 8019d1e:	1b1c      	subls	r4, r3, r4
 8019d20:	1ae4      	subhi	r4, r4, r3
 8019d22:	fa1f fa84 	uxthls.w	sl, r4
 8019d26:	b2a4      	uxthhi	r4, r4
 8019d28:	bf87      	ittee	hi
 8019d2a:	4671      	movhi	r1, lr
 8019d2c:	f04f 0a00 	movhi.w	sl, #0
 8019d30:	fa1f f188 	uxthls.w	r1, r8
 8019d34:	2400      	movls	r4, #0
 8019d36:	4653      	mov	r3, sl
 8019d38:	468e      	mov	lr, r1
 8019d3a:	e7db      	b.n	8019cf4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 8019d3c:	9a00      	ldr	r2, [sp, #0]
 8019d3e:	9b00      	ldr	r3, [sp, #0]
 8019d40:	3202      	adds	r2, #2
 8019d42:	785b      	ldrb	r3, [r3, #1]
 8019d44:	9200      	str	r2, [sp, #0]
 8019d46:	e7e7      	b.n	8019d18 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 8019d48:	2202      	movs	r2, #2
 8019d4a:	4615      	mov	r5, r2
 8019d4c:	9907      	ldr	r1, [sp, #28]
 8019d4e:	9a02      	ldr	r2, [sp, #8]
 8019d50:	fb15 1202 	smlabb	r2, r5, r2, r1
 8019d54:	9905      	ldr	r1, [sp, #20]
 8019d56:	4573      	cmp	r3, lr
 8019d58:	f831 c002 	ldrh.w	ip, [r1, r2]
 8019d5c:	9a01      	ldr	r2, [sp, #4]
 8019d5e:	bf2b      	itete	cs
 8019d60:	eba3 0a0e 	subcs.w	sl, r3, lr
 8019d64:	ebae 0103 	subcc.w	r1, lr, r3
 8019d68:	46f1      	movcs	r9, lr
 8019d6a:	4699      	movcc	r9, r3
 8019d6c:	bf27      	ittee	cs
 8019d6e:	fa1f fa8a 	uxthcs.w	sl, sl
 8019d72:	4621      	movcs	r1, r4
 8019d74:	b289      	uxthcc	r1, r1
 8019d76:	46a2      	movcc	sl, r4
 8019d78:	2aff      	cmp	r2, #255	; 0xff
 8019d7a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8019d7e:	d105      	bne.n	8019d8c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 8019d80:	4481      	add	r9, r0
 8019d82:	4581      	cmp	r9, r0
 8019d84:	d045      	beq.n	8019e12 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 8019d86:	f820 cb02 	strh.w	ip, [r0], #2
 8019d8a:	e7fa      	b.n	8019d82 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 8019d8c:	9d03      	ldr	r5, [sp, #12]
 8019d8e:	ea4f 222c 	mov.w	r2, ip, asr #8
 8019d92:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8019d96:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8019d9a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8019d9e:	436a      	muls	r2, r5
 8019da0:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8019da4:	fa5f fc8c 	uxtb.w	ip, ip
 8019da8:	9208      	str	r2, [sp, #32]
 8019daa:	fb0b fb05 	mul.w	fp, fp, r5
 8019dae:	fb0c fc05 	mul.w	ip, ip, r5
 8019db2:	4481      	add	r9, r0
 8019db4:	4581      	cmp	r9, r0
 8019db6:	d02c      	beq.n	8019e12 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 8019db8:	8802      	ldrh	r2, [r0, #0]
 8019dba:	9d04      	ldr	r5, [sp, #16]
 8019dbc:	9f04      	ldr	r7, [sp, #16]
 8019dbe:	1216      	asrs	r6, r2, #8
 8019dc0:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8019dc4:	fb16 f605 	smulbb	r6, r6, r5
 8019dc8:	9d08      	ldr	r5, [sp, #32]
 8019dca:	442e      	add	r6, r5
 8019dcc:	10d5      	asrs	r5, r2, #3
 8019dce:	00d2      	lsls	r2, r2, #3
 8019dd0:	b2d2      	uxtb	r2, r2
 8019dd2:	fb12 f207 	smulbb	r2, r2, r7
 8019dd6:	b2b6      	uxth	r6, r6
 8019dd8:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8019ddc:	4462      	add	r2, ip
 8019dde:	fb15 f507 	smulbb	r5, r5, r7
 8019de2:	b292      	uxth	r2, r2
 8019de4:	1c77      	adds	r7, r6, #1
 8019de6:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 8019dea:	1c57      	adds	r7, r2, #1
 8019dec:	445d      	add	r5, fp
 8019dee:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 8019df2:	b2ad      	uxth	r5, r5
 8019df4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8019df8:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8019dfc:	4316      	orrs	r6, r2
 8019dfe:	1c6a      	adds	r2, r5, #1
 8019e00:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8019e04:	096d      	lsrs	r5, r5, #5
 8019e06:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8019e0a:	432e      	orrs	r6, r5
 8019e0c:	f820 6b02 	strh.w	r6, [r0], #2
 8019e10:	e7d0      	b.n	8019db4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 8019e12:	4573      	cmp	r3, lr
 8019e14:	d38f      	bcc.n	8019d36 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 8019e16:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 8019e1a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019e1c:	fa1f f188 	uxth.w	r1, r8
 8019e20:	1a64      	subs	r4, r4, r1
 8019e22:	881b      	ldrh	r3, [r3, #0]
 8019e24:	b2a4      	uxth	r4, r4
 8019e26:	2c00      	cmp	r4, #0
 8019e28:	eba3 0308 	sub.w	r3, r3, r8
 8019e2c:	bf18      	it	ne
 8019e2e:	2100      	movne	r1, #0
 8019e30:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8019e34:	e77f      	b.n	8019d36 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 8019e36:	4b04      	ldr	r3, [pc, #16]	; (8019e48 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 8019e38:	6818      	ldr	r0, [r3, #0]
 8019e3a:	6803      	ldr	r3, [r0, #0]
 8019e3c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8019e3e:	4798      	blx	r3
 8019e40:	b00f      	add	sp, #60	; 0x3c
 8019e42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019e46:	bf00      	nop
 8019e48:	200137bc 	.word	0x200137bc
 8019e4c:	200137b6 	.word	0x200137b6

08019e50 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8019e50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019e54:	b09f      	sub	sp, #124	; 0x7c
 8019e56:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 8019e5a:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 8019e5e:	9209      	str	r2, [sp, #36]	; 0x24
 8019e60:	461d      	mov	r5, r3
 8019e62:	4604      	mov	r4, r0
 8019e64:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019e66:	2a00      	cmp	r2, #0
 8019e68:	f000 81eb 	beq.w	801a242 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 8019e6c:	6828      	ldr	r0, [r5, #0]
 8019e6e:	6869      	ldr	r1, [r5, #4]
 8019e70:	aa1a      	add	r2, sp, #104	; 0x68
 8019e72:	c203      	stmia	r2!, {r0, r1}
 8019e74:	6818      	ldr	r0, [r3, #0]
 8019e76:	6859      	ldr	r1, [r3, #4]
 8019e78:	aa1c      	add	r2, sp, #112	; 0x70
 8019e7a:	c203      	stmia	r2!, {r0, r1}
 8019e7c:	a81a      	add	r0, sp, #104	; 0x68
 8019e7e:	f7f9 fbf3 	bl	8013668 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019e82:	4629      	mov	r1, r5
 8019e84:	a81c      	add	r0, sp, #112	; 0x70
 8019e86:	f7f9 fc33 	bl	80136f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8019e8a:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 8019e8e:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
 8019e92:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
 8019e96:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8019e9a:	bfd7      	itett	le
 8019e9c:	b29a      	uxthle	r2, r3
 8019e9e:	2201      	movgt	r2, #1
 8019ea0:	f44f 6180 	movle.w	r1, #1024	; 0x400
 8019ea4:	fb91 f2f2 	sdivle	r2, r1, r2
 8019ea8:	9202      	str	r2, [sp, #8]
 8019eaa:	9802      	ldr	r0, [sp, #8]
 8019eac:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 8019eb0:	fb92 f0f0 	sdiv	r0, r2, r0
 8019eb4:	b280      	uxth	r0, r0
 8019eb6:	9010      	str	r0, [sp, #64]	; 0x40
 8019eb8:	9902      	ldr	r1, [sp, #8]
 8019eba:	9802      	ldr	r0, [sp, #8]
 8019ebc:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8019ebe:	4488      	add	r8, r1
 8019ec0:	fb05 2510 	mls	r5, r5, r0, r2
 8019ec4:	fb15 f503 	smulbb	r5, r5, r3
 8019ec8:	f108 38ff 	add.w	r8, r8, #4294967295
 8019ecc:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 8019ed0:	fb98 f8f1 	sdiv	r8, r8, r1
 8019ed4:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 8019ed8:	440d      	add	r5, r1
 8019eda:	4419      	add	r1, r3
 8019edc:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 8019ee0:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 8019ee4:	441a      	add	r2, r3
 8019ee6:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 8019eea:	9304      	str	r3, [sp, #16]
 8019eec:	4b95      	ldr	r3, [pc, #596]	; (801a144 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 8019eee:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 8019ef2:	6818      	ldr	r0, [r3, #0]
 8019ef4:	6803      	ldr	r3, [r0, #0]
 8019ef6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8019ef8:	4798      	blx	r3
 8019efa:	4b93      	ldr	r3, [pc, #588]	; (801a148 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 8019efc:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 8019f00:	881a      	ldrh	r2, [r3, #0]
 8019f02:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 8019f06:	9318      	str	r3, [sp, #96]	; 0x60
 8019f08:	fb02 7101 	mla	r1, r2, r1, r7
 8019f0c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8019f10:	4356      	muls	r6, r2
 8019f12:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 8019f16:	f108 0801 	add.w	r8, r8, #1
 8019f1a:	920a      	str	r2, [sp, #40]	; 0x28
 8019f1c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8019f1e:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 8019f22:	930f      	str	r3, [sp, #60]	; 0x3c
 8019f24:	fa1f f888 	uxth.w	r8, r8
 8019f28:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 8019f2c:	f108 0204 	add.w	r2, r8, #4
 8019f30:	9211      	str	r2, [sp, #68]	; 0x44
 8019f32:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8019f34:	4b85      	ldr	r3, [pc, #532]	; (801a14c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 8019f36:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
 8019f3a:	b2ad      	uxth	r5, r5
 8019f3c:	9215      	str	r2, [sp, #84]	; 0x54
 8019f3e:	2d00      	cmp	r5, #0
 8019f40:	9a04      	ldr	r2, [sp, #16]
 8019f42:	f04f 0100 	mov.w	r1, #0
 8019f46:	bf18      	it	ne
 8019f48:	2200      	movne	r2, #0
 8019f4a:	1b1b      	subs	r3, r3, r4
 8019f4c:	b292      	uxth	r2, r2
 8019f4e:	910d      	str	r1, [sp, #52]	; 0x34
 8019f50:	9319      	str	r3, [sp, #100]	; 0x64
 8019f52:	9910      	ldr	r1, [sp, #64]	; 0x40
 8019f54:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019f56:	fa11 f383 	uxtah	r3, r1, r3
 8019f5a:	9914      	ldr	r1, [sp, #80]	; 0x50
 8019f5c:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8019f60:	3304      	adds	r3, #4
 8019f62:	9306      	str	r3, [sp, #24]
 8019f64:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019f66:	4283      	cmp	r3, r0
 8019f68:	f240 8166 	bls.w	801a238 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 8019f6c:	9902      	ldr	r1, [sp, #8]
 8019f6e:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 8019f72:	fbb5 f3f3 	udiv	r3, r5, r3
 8019f76:	1acb      	subs	r3, r1, r3
 8019f78:	b29b      	uxth	r3, r3
 8019f7a:	9316      	str	r3, [sp, #88]	; 0x58
 8019f7c:	9b06      	ldr	r3, [sp, #24]
 8019f7e:	9e06      	ldr	r6, [sp, #24]
 8019f80:	7859      	ldrb	r1, [r3, #1]
 8019f82:	789b      	ldrb	r3, [r3, #2]
 8019f84:	7836      	ldrb	r6, [r6, #0]
 8019f86:	9612      	str	r6, [sp, #72]	; 0x48
 8019f88:	021b      	lsls	r3, r3, #8
 8019f8a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8019f8e:	9906      	ldr	r1, [sp, #24]
 8019f90:	78c9      	ldrb	r1, [r1, #3]
 8019f92:	430b      	orrs	r3, r1
 8019f94:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8019f96:	3601      	adds	r6, #1
 8019f98:	4419      	add	r1, r3
 8019f9a:	9605      	str	r6, [sp, #20]
 8019f9c:	1c4e      	adds	r6, r1, #1
 8019f9e:	9603      	str	r6, [sp, #12]
 8019fa0:	7849      	ldrb	r1, [r1, #1]
 8019fa2:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8019fa4:	0209      	lsls	r1, r1, #8
 8019fa6:	5cf3      	ldrb	r3, [r6, r3]
 8019fa8:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
 8019fac:	4319      	orrs	r1, r3
 8019fae:	b28b      	uxth	r3, r1
 8019fb0:	930c      	str	r3, [sp, #48]	; 0x30
 8019fb2:	2300      	movs	r3, #0
 8019fb4:	f04f 0a01 	mov.w	sl, #1
 8019fb8:	9307      	str	r3, [sp, #28]
 8019fba:	469c      	mov	ip, r3
 8019fbc:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8019fc0:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 8019fc4:	46d3      	mov	fp, sl
 8019fc6:	4657      	mov	r7, sl
 8019fc8:	930e      	str	r3, [sp, #56]	; 0x38
 8019fca:	2d00      	cmp	r5, #0
 8019fcc:	d07e      	beq.n	801a0cc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 8019fce:	42af      	cmp	r7, r5
 8019fd0:	d26e      	bcs.n	801a0b0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 8019fd2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019fd4:	9201      	str	r2, [sp, #4]
 8019fd6:	1bed      	subs	r5, r5, r7
 8019fd8:	4283      	cmp	r3, r0
 8019fda:	b2ad      	uxth	r5, r5
 8019fdc:	d802      	bhi.n	8019fe4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 8019fde:	e073      	b.n	801a0c8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 8019fe0:	2b00      	cmp	r3, #0
 8019fe2:	d15f      	bne.n	801a0a4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 8019fe4:	9b03      	ldr	r3, [sp, #12]
 8019fe6:	785b      	ldrb	r3, [r3, #1]
 8019fe8:	f1cb 0207 	rsb	r2, fp, #7
 8019fec:	4093      	lsls	r3, r2
 8019fee:	005b      	lsls	r3, r3, #1
 8019ff0:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 8019ff4:	9b03      	ldr	r3, [sp, #12]
 8019ff6:	781b      	ldrb	r3, [r3, #0]
 8019ff8:	fa43 f30b 	asr.w	r3, r3, fp
 8019ffc:	b2db      	uxtb	r3, r3
 8019ffe:	4313      	orrs	r3, r2
 801a000:	f10b 0201 	add.w	r2, fp, #1
 801a004:	fa5f fb82 	uxtb.w	fp, r2
 801a008:	9a03      	ldr	r2, [sp, #12]
 801a00a:	f1bb 0f08 	cmp.w	fp, #8
 801a00e:	bf15      	itete	ne
 801a010:	3201      	addne	r2, #1
 801a012:	3202      	addeq	r2, #2
 801a014:	9203      	strne	r2, [sp, #12]
 801a016:	9203      	streq	r2, [sp, #12]
 801a018:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a01a:	b29f      	uxth	r7, r3
 801a01c:	bf08      	it	eq
 801a01e:	f04f 0b00 	moveq.w	fp, #0
 801a022:	42ba      	cmp	r2, r7
 801a024:	d309      	bcc.n	801a03a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 801a026:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801a02a:	2301      	movs	r3, #1
 801a02c:	9a05      	ldr	r2, [sp, #20]
 801a02e:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 801a032:	d30e      	bcc.n	801a052 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 801a034:	469a      	mov	sl, r3
 801a036:	2600      	movs	r6, #0
 801a038:	e035      	b.n	801a0a6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 801a03a:	9b05      	ldr	r3, [sp, #20]
 801a03c:	429f      	cmp	r7, r3
 801a03e:	d318      	bcc.n	801a072 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 801a040:	eb04 030a 	add.w	r3, r4, sl
 801a044:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
 801a048:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
 801a04c:	f10a 0301 	add.w	r3, sl, #1
 801a050:	b29b      	uxth	r3, r3
 801a052:	9a05      	ldr	r2, [sp, #20]
 801a054:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801a058:	990c      	ldr	r1, [sp, #48]	; 0x30
 801a05a:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801a05e:	7116      	strb	r6, [r2, #4]
 801a060:	f10a 0601 	add.w	r6, sl, #1
 801a064:	80d1      	strh	r1, [r2, #6]
 801a066:	7156      	strb	r6, [r2, #5]
 801a068:	9a05      	ldr	r2, [sp, #20]
 801a06a:	3201      	adds	r2, #1
 801a06c:	b292      	uxth	r2, r2
 801a06e:	9205      	str	r2, [sp, #20]
 801a070:	e7e0      	b.n	801a034 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 801a072:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 801a076:	463a      	mov	r2, r7
 801a078:	795b      	ldrb	r3, [r3, #5]
 801a07a:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801a07e:	4426      	add	r6, r4
 801a080:	9919      	ldr	r1, [sp, #100]	; 0x64
 801a082:	eb01 0c06 	add.w	ip, r1, r6
 801a086:	f1bc 0f00 	cmp.w	ip, #0
 801a08a:	dd07      	ble.n	801a09c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 801a08c:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801a090:	f892 c004 	ldrb.w	ip, [r2, #4]
 801a094:	f806 cd01 	strb.w	ip, [r6, #-1]!
 801a098:	88d2      	ldrh	r2, [r2, #6]
 801a09a:	e7f1      	b.n	801a080 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 801a09c:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801a0a0:	b29b      	uxth	r3, r3
 801a0a2:	e7c3      	b.n	801a02c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 801a0a4:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801a0a6:	970c      	str	r7, [sp, #48]	; 0x30
 801a0a8:	9a01      	ldr	r2, [sp, #4]
 801a0aa:	46b4      	mov	ip, r6
 801a0ac:	461f      	mov	r7, r3
 801a0ae:	e78c      	b.n	8019fca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 801a0b0:	1b7b      	subs	r3, r7, r5
 801a0b2:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801a0b6:	9201      	str	r2, [sp, #4]
 801a0b8:	eb0c 0605 	add.w	r6, ip, r5
 801a0bc:	b29b      	uxth	r3, r3
 801a0be:	b2b6      	uxth	r6, r6
 801a0c0:	2500      	movs	r5, #0
 801a0c2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801a0c4:	4282      	cmp	r2, r0
 801a0c6:	d88b      	bhi.n	8019fe0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801a0c8:	9a01      	ldr	r2, [sp, #4]
 801a0ca:	e74b      	b.n	8019f64 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 801a0cc:	4297      	cmp	r7, r2
 801a0ce:	d332      	bcc.n	801a136 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 801a0d0:	1abb      	subs	r3, r7, r2
 801a0d2:	b29b      	uxth	r3, r3
 801a0d4:	9208      	str	r2, [sp, #32]
 801a0d6:	9501      	str	r5, [sp, #4]
 801a0d8:	9909      	ldr	r1, [sp, #36]	; 0x24
 801a0da:	29ff      	cmp	r1, #255	; 0xff
 801a0dc:	9908      	ldr	r1, [sp, #32]
 801a0de:	eb0c 0601 	add.w	r6, ip, r1
 801a0e2:	d135      	bne.n	801a150 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 801a0e4:	f1a0 0e02 	sub.w	lr, r0, #2
 801a0e8:	b2b6      	uxth	r6, r6
 801a0ea:	45b4      	cmp	ip, r6
 801a0ec:	f040 808c 	bne.w	801a208 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 801a0f0:	9908      	ldr	r1, [sp, #32]
 801a0f2:	4297      	cmp	r7, r2
 801a0f4:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801a0f8:	d3e2      	bcc.n	801a0c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 801a0fa:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801a0fc:	9904      	ldr	r1, [sp, #16]
 801a0fe:	8812      	ldrh	r2, [r2, #0]
 801a100:	1a52      	subs	r2, r2, r1
 801a102:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801a106:	9a07      	ldr	r2, [sp, #28]
 801a108:	9916      	ldr	r1, [sp, #88]	; 0x58
 801a10a:	3201      	adds	r2, #1
 801a10c:	428a      	cmp	r2, r1
 801a10e:	9207      	str	r2, [sp, #28]
 801a110:	f040 8087 	bne.w	801a222 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 801a114:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801a118:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
 801a11c:	9b04      	ldr	r3, [sp, #16]
 801a11e:	1bed      	subs	r5, r5, r7
 801a120:	b2ad      	uxth	r5, r5
 801a122:	2d00      	cmp	r5, #0
 801a124:	bf08      	it	eq
 801a126:	461a      	moveq	r2, r3
 801a128:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801a12a:	bf18      	it	ne
 801a12c:	2200      	movne	r2, #0
 801a12e:	3301      	adds	r3, #1
 801a130:	930d      	str	r3, [sp, #52]	; 0x34
 801a132:	b292      	uxth	r2, r2
 801a134:	e70d      	b.n	8019f52 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 801a136:	1bd1      	subs	r1, r2, r7
 801a138:	b28b      	uxth	r3, r1
 801a13a:	9301      	str	r3, [sp, #4]
 801a13c:	9708      	str	r7, [sp, #32]
 801a13e:	462b      	mov	r3, r5
 801a140:	e7ca      	b.n	801a0d8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 801a142:	bf00      	nop
 801a144:	200137bc 	.word	0x200137bc
 801a148:	200137b6 	.word	0x200137b6
 801a14c:	fffff7fb 	.word	0xfffff7fb
 801a150:	b2b6      	uxth	r6, r6
 801a152:	900b      	str	r0, [sp, #44]	; 0x2c
 801a154:	45b4      	cmp	ip, r6
 801a156:	d0cb      	beq.n	801a0f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 801a158:	f10c 0101 	add.w	r1, ip, #1
 801a15c:	44a4      	add	ip, r4
 801a15e:	9117      	str	r1, [sp, #92]	; 0x5c
 801a160:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801a164:	9911      	ldr	r1, [sp, #68]	; 0x44
 801a166:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801a16a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801a16c:	f8b1 c000 	ldrh.w	ip, [r1]
 801a170:	990e      	ldr	r1, [sp, #56]	; 0x38
 801a172:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 801a176:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801a17a:	fb1e fe01 	smulbb	lr, lr, r1
 801a17e:	ea4f 2825 	mov.w	r8, r5, asr #8
 801a182:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801a184:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801a188:	fb08 e801 	mla	r8, r8, r1, lr
 801a18c:	ea4f 09ec 	mov.w	r9, ip, asr #3
 801a190:	990e      	ldr	r1, [sp, #56]	; 0x38
 801a192:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801a196:	fb19 f901 	smulbb	r9, r9, r1
 801a19a:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 801a19e:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801a1a0:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801a1a4:	fb0e 9e01 	mla	lr, lr, r1, r9
 801a1a8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a1ac:	990e      	ldr	r1, [sp, #56]	; 0x38
 801a1ae:	fa5f fc8c 	uxtb.w	ip, ip
 801a1b2:	fb1c fc01 	smulbb	ip, ip, r1
 801a1b6:	00ed      	lsls	r5, r5, #3
 801a1b8:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801a1ba:	b2ed      	uxtb	r5, r5
 801a1bc:	fb05 c501 	mla	r5, r5, r1, ip
 801a1c0:	fa1f f888 	uxth.w	r8, r8
 801a1c4:	fa1f fe8e 	uxth.w	lr, lr
 801a1c8:	b2ad      	uxth	r5, r5
 801a1ca:	f108 0c01 	add.w	ip, r8, #1
 801a1ce:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801a1d2:	f10e 0901 	add.w	r9, lr, #1
 801a1d6:	f105 0c01 	add.w	ip, r5, #1
 801a1da:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801a1de:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 801a1e2:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801a1e6:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801a1ea:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801a1ee:	ea4c 0808 	orr.w	r8, ip, r8
 801a1f2:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801a1f4:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
 801a1f8:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801a1fc:	ea48 0809 	orr.w	r8, r8, r9
 801a200:	f821 8b02 	strh.w	r8, [r1], #2
 801a204:	910b      	str	r1, [sp, #44]	; 0x2c
 801a206:	e7a5      	b.n	801a154 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 801a208:	f10c 0801 	add.w	r8, ip, #1
 801a20c:	44a4      	add	ip, r4
 801a20e:	9911      	ldr	r1, [sp, #68]	; 0x44
 801a210:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801a214:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801a218:	f82e 5f02 	strh.w	r5, [lr, #2]!
 801a21c:	fa1f fc88 	uxth.w	ip, r8
 801a220:	e763      	b.n	801a0ea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 801a222:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801a226:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801a22a:	1aad      	subs	r5, r5, r2
 801a22c:	b2ad      	uxth	r5, r5
 801a22e:	2d00      	cmp	r5, #0
 801a230:	bf18      	it	ne
 801a232:	2200      	movne	r2, #0
 801a234:	9201      	str	r2, [sp, #4]
 801a236:	e744      	b.n	801a0c2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 801a238:	4b03      	ldr	r3, [pc, #12]	; (801a248 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 801a23a:	6818      	ldr	r0, [r3, #0]
 801a23c:	6803      	ldr	r3, [r0, #0]
 801a23e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801a240:	4798      	blx	r3
 801a242:	b01f      	add	sp, #124	; 0x7c
 801a244:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a248:	200137bc 	.word	0x200137bc

0801a24c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801a24c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a250:	b08f      	sub	sp, #60	; 0x3c
 801a252:	461c      	mov	r4, r3
 801a254:	9203      	str	r2, [sp, #12]
 801a256:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801a25a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801a25c:	9202      	str	r2, [sp, #8]
 801a25e:	460f      	mov	r7, r1
 801a260:	2a00      	cmp	r2, #0
 801a262:	f000 8128 	beq.w	801a4b6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 801a266:	6820      	ldr	r0, [r4, #0]
 801a268:	6861      	ldr	r1, [r4, #4]
 801a26a:	aa0a      	add	r2, sp, #40	; 0x28
 801a26c:	c203      	stmia	r2!, {r0, r1}
 801a26e:	6818      	ldr	r0, [r3, #0]
 801a270:	6859      	ldr	r1, [r3, #4]
 801a272:	aa0c      	add	r2, sp, #48	; 0x30
 801a274:	c203      	stmia	r2!, {r0, r1}
 801a276:	a80a      	add	r0, sp, #40	; 0x28
 801a278:	f7f9 f9f6 	bl	8013668 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a27c:	4621      	mov	r1, r4
 801a27e:	a80c      	add	r0, sp, #48	; 0x30
 801a280:	f7f9 fa36 	bl	80136f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801a284:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801a288:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801a28c:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801a290:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801a294:	bfde      	ittt	le
 801a296:	b2b3      	uxthle	r3, r6
 801a298:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801a29c:	fb92 f3f3 	sdivle	r3, r2, r3
 801a2a0:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801a2a4:	bfc8      	it	gt
 801a2a6:	2301      	movgt	r3, #1
 801a2a8:	fb92 f1f3 	sdiv	r1, r2, r3
 801a2ac:	fa1f fc81 	uxth.w	ip, r1
 801a2b0:	fb0c 2413 	mls	r4, ip, r3, r2
 801a2b4:	fb14 f406 	smulbb	r4, r4, r6
 801a2b8:	441d      	add	r5, r3
 801a2ba:	4404      	add	r4, r0
 801a2bc:	4661      	mov	r1, ip
 801a2be:	3d01      	subs	r5, #1
 801a2c0:	b2a4      	uxth	r4, r4
 801a2c2:	fb95 f5f3 	sdiv	r5, r5, r3
 801a2c6:	b121      	cbz	r1, 801a2d2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 801a2c8:	9b03      	ldr	r3, [sp, #12]
 801a2ca:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801a2ce:	ba1b      	rev	r3, r3
 801a2d0:	441f      	add	r7, r3
 801a2d2:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801a2d6:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801a2da:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801a2de:	4418      	add	r0, r3
 801a2e0:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801a2e4:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801a2e8:	441a      	add	r2, r3
 801a2ea:	4b74      	ldr	r3, [pc, #464]	; (801a4bc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801a2ec:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801a2f0:	6818      	ldr	r0, [r3, #0]
 801a2f2:	6803      	ldr	r3, [r0, #0]
 801a2f4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801a2f6:	4798      	blx	r3
 801a2f8:	4a71      	ldr	r2, [pc, #452]	; (801a4c0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 801a2fa:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 801a2fe:	8813      	ldrh	r3, [r2, #0]
 801a300:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801a304:	9209      	str	r2, [sp, #36]	; 0x24
 801a306:	fb03 c101 	mla	r1, r3, r1, ip
 801a30a:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801a30e:	4373      	muls	r3, r6
 801a310:	b2ad      	uxth	r5, r5
 801a312:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801a316:	00ad      	lsls	r5, r5, #2
 801a318:	2c00      	cmp	r4, #0
 801a31a:	9304      	str	r3, [sp, #16]
 801a31c:	f105 0304 	add.w	r3, r5, #4
 801a320:	9305      	str	r3, [sp, #20]
 801a322:	bf0c      	ite	eq
 801a324:	46c8      	moveq	r8, r9
 801a326:	f04f 0800 	movne.w	r8, #0
 801a32a:	2300      	movs	r3, #0
 801a32c:	fa1f f888 	uxth.w	r8, r8
 801a330:	9301      	str	r3, [sp, #4]
 801a332:	9a04      	ldr	r2, [sp, #16]
 801a334:	4282      	cmp	r2, r0
 801a336:	f240 80b9 	bls.w	801a4ac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 801a33a:	b95b      	cbnz	r3, 801a354 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 801a33c:	783a      	ldrb	r2, [r7, #0]
 801a33e:	0993      	lsrs	r3, r2, #6
 801a340:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801a344:	9201      	str	r2, [sp, #4]
 801a346:	1e5a      	subs	r2, r3, #1
 801a348:	2a02      	cmp	r2, #2
 801a34a:	bf8d      	iteet	hi
 801a34c:	787b      	ldrbhi	r3, [r7, #1]
 801a34e:	3701      	addls	r7, #1
 801a350:	b29b      	uxthls	r3, r3
 801a352:	3702      	addhi	r7, #2
 801a354:	b184      	cbz	r4, 801a378 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 801a356:	429c      	cmp	r4, r3
 801a358:	bf95      	itete	ls
 801a35a:	1b1c      	subls	r4, r3, r4
 801a35c:	1ae4      	subhi	r4, r4, r3
 801a35e:	fa1f fa84 	uxthls.w	sl, r4
 801a362:	b2a4      	uxthhi	r4, r4
 801a364:	bf87      	ittee	hi
 801a366:	46c4      	movhi	ip, r8
 801a368:	f04f 0a00 	movhi.w	sl, #0
 801a36c:	fa1f fc89 	uxthls.w	ip, r9
 801a370:	2400      	movls	r4, #0
 801a372:	4653      	mov	r3, sl
 801a374:	46e0      	mov	r8, ip
 801a376:	e7dc      	b.n	801a332 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 801a378:	2204      	movs	r2, #4
 801a37a:	4615      	mov	r5, r2
 801a37c:	9905      	ldr	r1, [sp, #20]
 801a37e:	9a01      	ldr	r2, [sp, #4]
 801a380:	fb15 1202 	smlabb	r2, r5, r2, r1
 801a384:	9903      	ldr	r1, [sp, #12]
 801a386:	588a      	ldr	r2, [r1, r2]
 801a388:	4543      	cmp	r3, r8
 801a38a:	bf27      	ittee	cs
 801a38c:	eba3 0a08 	subcs.w	sl, r3, r8
 801a390:	46c6      	movcs	lr, r8
 801a392:	eba8 0c03 	subcc.w	ip, r8, r3
 801a396:	469e      	movcc	lr, r3
 801a398:	ea4f 6112 	mov.w	r1, r2, lsr #24
 801a39c:	bf27      	ittee	cs
 801a39e:	fa1f fa8a 	uxthcs.w	sl, sl
 801a3a2:	46a4      	movcs	ip, r4
 801a3a4:	fa1f fc8c 	uxthcc.w	ip, ip
 801a3a8:	46a2      	movcc	sl, r4
 801a3aa:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801a3ae:	2900      	cmp	r1, #0
 801a3b0:	d066      	beq.n	801a480 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 801a3b2:	29ff      	cmp	r1, #255	; 0xff
 801a3b4:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801a3b8:	d114      	bne.n	801a3e4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801a3ba:	9d02      	ldr	r5, [sp, #8]
 801a3bc:	2dff      	cmp	r5, #255	; 0xff
 801a3be:	d111      	bne.n	801a3e4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801a3c0:	0951      	lsrs	r1, r2, #5
 801a3c2:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801a3c6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801a3ca:	f026 0607 	bic.w	r6, r6, #7
 801a3ce:	430e      	orrs	r6, r1
 801a3d0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801a3d4:	4316      	orrs	r6, r2
 801a3d6:	b2b6      	uxth	r6, r6
 801a3d8:	4486      	add	lr, r0
 801a3da:	4586      	cmp	lr, r0
 801a3dc:	d051      	beq.n	801a482 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801a3de:	f820 6b02 	strh.w	r6, [r0], #2
 801a3e2:	e7fa      	b.n	801a3da <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 801a3e4:	9d02      	ldr	r5, [sp, #8]
 801a3e6:	4369      	muls	r1, r5
 801a3e8:	1c4d      	adds	r5, r1, #1
 801a3ea:	eb05 2521 	add.w	r5, r5, r1, asr #8
 801a3ee:	122d      	asrs	r5, r5, #8
 801a3f0:	ea6f 0b05 	mvn.w	fp, r5
 801a3f4:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801a3f8:	b2ad      	uxth	r5, r5
 801a3fa:	b2f6      	uxtb	r6, r6
 801a3fc:	b2d2      	uxtb	r2, r2
 801a3fe:	fb11 f105 	smulbb	r1, r1, r5
 801a402:	fb16 f605 	smulbb	r6, r6, r5
 801a406:	fb12 f205 	smulbb	r2, r2, r5
 801a40a:	b289      	uxth	r1, r1
 801a40c:	b2b6      	uxth	r6, r6
 801a40e:	b292      	uxth	r2, r2
 801a410:	9106      	str	r1, [sp, #24]
 801a412:	9607      	str	r6, [sp, #28]
 801a414:	9208      	str	r2, [sp, #32]
 801a416:	4486      	add	lr, r0
 801a418:	fa5f fb8b 	uxtb.w	fp, fp
 801a41c:	4586      	cmp	lr, r0
 801a41e:	d030      	beq.n	801a482 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801a420:	8802      	ldrh	r2, [r0, #0]
 801a422:	9906      	ldr	r1, [sp, #24]
 801a424:	1216      	asrs	r6, r2, #8
 801a426:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801a42a:	10d5      	asrs	r5, r2, #3
 801a42c:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801a430:	fb06 160b 	mla	r6, r6, fp, r1
 801a434:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801a438:	9907      	ldr	r1, [sp, #28]
 801a43a:	00d2      	lsls	r2, r2, #3
 801a43c:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801a440:	fb05 150b 	mla	r5, r5, fp, r1
 801a444:	b2d2      	uxtb	r2, r2
 801a446:	9908      	ldr	r1, [sp, #32]
 801a448:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801a44c:	b2b6      	uxth	r6, r6
 801a44e:	fb02 120b 	mla	r2, r2, fp, r1
 801a452:	b292      	uxth	r2, r2
 801a454:	1c71      	adds	r1, r6, #1
 801a456:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 801a45a:	1c51      	adds	r1, r2, #1
 801a45c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801a460:	b2ad      	uxth	r5, r5
 801a462:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801a466:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801a46a:	4316      	orrs	r6, r2
 801a46c:	1c6a      	adds	r2, r5, #1
 801a46e:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801a472:	096d      	lsrs	r5, r5, #5
 801a474:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a478:	432e      	orrs	r6, r5
 801a47a:	f820 6b02 	strh.w	r6, [r0], #2
 801a47e:	e7cd      	b.n	801a41c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 801a480:	4470      	add	r0, lr
 801a482:	4543      	cmp	r3, r8
 801a484:	f4ff af75 	bcc.w	801a372 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801a488:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801a48c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a48e:	fa1f fc89 	uxth.w	ip, r9
 801a492:	eba4 040c 	sub.w	r4, r4, ip
 801a496:	881b      	ldrh	r3, [r3, #0]
 801a498:	b2a4      	uxth	r4, r4
 801a49a:	2c00      	cmp	r4, #0
 801a49c:	eba3 0309 	sub.w	r3, r3, r9
 801a4a0:	bf18      	it	ne
 801a4a2:	f04f 0c00 	movne.w	ip, #0
 801a4a6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801a4aa:	e762      	b.n	801a372 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801a4ac:	4b03      	ldr	r3, [pc, #12]	; (801a4bc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801a4ae:	6818      	ldr	r0, [r3, #0]
 801a4b0:	6803      	ldr	r3, [r0, #0]
 801a4b2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801a4b4:	4798      	blx	r3
 801a4b6:	b00f      	add	sp, #60	; 0x3c
 801a4b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a4bc:	200137bc 	.word	0x200137bc
 801a4c0:	200137b6 	.word	0x200137b6

0801a4c4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801a4c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a4c8:	b093      	sub	sp, #76	; 0x4c
 801a4ca:	461c      	mov	r4, r3
 801a4cc:	9205      	str	r2, [sp, #20]
 801a4ce:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
 801a4d2:	9101      	str	r1, [sp, #4]
 801a4d4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801a4d6:	9202      	str	r2, [sp, #8]
 801a4d8:	2a00      	cmp	r2, #0
 801a4da:	f000 812c 	beq.w	801a736 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801a4de:	6820      	ldr	r0, [r4, #0]
 801a4e0:	6861      	ldr	r1, [r4, #4]
 801a4e2:	aa0e      	add	r2, sp, #56	; 0x38
 801a4e4:	c203      	stmia	r2!, {r0, r1}
 801a4e6:	6818      	ldr	r0, [r3, #0]
 801a4e8:	6859      	ldr	r1, [r3, #4]
 801a4ea:	aa10      	add	r2, sp, #64	; 0x40
 801a4ec:	c203      	stmia	r2!, {r0, r1}
 801a4ee:	a80e      	add	r0, sp, #56	; 0x38
 801a4f0:	f7f9 f8ba 	bl	8013668 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a4f4:	4621      	mov	r1, r4
 801a4f6:	a810      	add	r0, sp, #64	; 0x40
 801a4f8:	f7f9 f8fa 	bl	80136f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801a4fc:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801a500:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 801a504:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 801a508:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801a50c:	bfde      	ittt	le
 801a50e:	b2b3      	uxthle	r3, r6
 801a510:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801a514:	fb92 f3f3 	sdivle	r3, r2, r3
 801a518:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801a51c:	bfc8      	it	gt
 801a51e:	2301      	movgt	r3, #1
 801a520:	fb92 f1f3 	sdiv	r1, r2, r3
 801a524:	fa1f fc81 	uxth.w	ip, r1
 801a528:	fb0c 2413 	mls	r4, ip, r3, r2
 801a52c:	fb14 f406 	smulbb	r4, r4, r6
 801a530:	441d      	add	r5, r3
 801a532:	4404      	add	r4, r0
 801a534:	4661      	mov	r1, ip
 801a536:	3d01      	subs	r5, #1
 801a538:	b2a4      	uxth	r4, r4
 801a53a:	fb95 f5f3 	sdiv	r5, r5, r3
 801a53e:	b131      	cbz	r1, 801a54e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 801a540:	9b05      	ldr	r3, [sp, #20]
 801a542:	9901      	ldr	r1, [sp, #4]
 801a544:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801a548:	ba1b      	rev	r3, r3
 801a54a:	4419      	add	r1, r3
 801a54c:	9101      	str	r1, [sp, #4]
 801a54e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801a552:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801a556:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
 801a55a:	4418      	add	r0, r3
 801a55c:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 801a560:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
 801a564:	441a      	add	r2, r3
 801a566:	4b75      	ldr	r3, [pc, #468]	; (801a73c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801a568:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 801a56c:	6818      	ldr	r0, [r3, #0]
 801a56e:	6803      	ldr	r3, [r0, #0]
 801a570:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801a572:	4798      	blx	r3
 801a574:	4972      	ldr	r1, [pc, #456]	; (801a740 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801a576:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
 801a57a:	880b      	ldrh	r3, [r1, #0]
 801a57c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801a580:	910d      	str	r1, [sp, #52]	; 0x34
 801a582:	fb03 c202 	mla	r2, r3, r2, ip
 801a586:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801a58a:	4373      	muls	r3, r6
 801a58c:	b2ad      	uxth	r5, r5
 801a58e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801a592:	00ad      	lsls	r5, r5, #2
 801a594:	9308      	str	r3, [sp, #32]
 801a596:	1d2b      	adds	r3, r5, #4
 801a598:	9309      	str	r3, [sp, #36]	; 0x24
 801a59a:	9b02      	ldr	r3, [sp, #8]
 801a59c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801a5a0:	9106      	str	r1, [sp, #24]
 801a5a2:	43da      	mvns	r2, r3
 801a5a4:	2c00      	cmp	r4, #0
 801a5a6:	bf0c      	ite	eq
 801a5a8:	46dc      	moveq	ip, fp
 801a5aa:	f04f 0c00 	movne.w	ip, #0
 801a5ae:	2300      	movs	r3, #0
 801a5b0:	b2d2      	uxtb	r2, r2
 801a5b2:	fa1f fc8c 	uxth.w	ip, ip
 801a5b6:	9303      	str	r3, [sp, #12]
 801a5b8:	9207      	str	r2, [sp, #28]
 801a5ba:	9a08      	ldr	r2, [sp, #32]
 801a5bc:	4282      	cmp	r2, r0
 801a5be:	f240 80b5 	bls.w	801a72c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801a5c2:	b963      	cbnz	r3, 801a5de <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801a5c4:	9b01      	ldr	r3, [sp, #4]
 801a5c6:	781a      	ldrb	r2, [r3, #0]
 801a5c8:	0993      	lsrs	r3, r2, #6
 801a5ca:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801a5ce:	9203      	str	r2, [sp, #12]
 801a5d0:	1e5a      	subs	r2, r3, #1
 801a5d2:	2a02      	cmp	r2, #2
 801a5d4:	d815      	bhi.n	801a602 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 801a5d6:	9a01      	ldr	r2, [sp, #4]
 801a5d8:	3201      	adds	r2, #1
 801a5da:	9201      	str	r2, [sp, #4]
 801a5dc:	b29b      	uxth	r3, r3
 801a5de:	b1b4      	cbz	r4, 801a60e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 801a5e0:	429c      	cmp	r4, r3
 801a5e2:	bf95      	itete	ls
 801a5e4:	1b1c      	subls	r4, r3, r4
 801a5e6:	1ae4      	subhi	r4, r4, r3
 801a5e8:	fa1f f884 	uxthls.w	r8, r4
 801a5ec:	b2a4      	uxthhi	r4, r4
 801a5ee:	bf87      	ittee	hi
 801a5f0:	4666      	movhi	r6, ip
 801a5f2:	f04f 0800 	movhi.w	r8, #0
 801a5f6:	fa1f f68b 	uxthls.w	r6, fp
 801a5fa:	2400      	movls	r4, #0
 801a5fc:	4643      	mov	r3, r8
 801a5fe:	46b4      	mov	ip, r6
 801a600:	e7db      	b.n	801a5ba <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 801a602:	9a01      	ldr	r2, [sp, #4]
 801a604:	9b01      	ldr	r3, [sp, #4]
 801a606:	3202      	adds	r2, #2
 801a608:	785b      	ldrb	r3, [r3, #1]
 801a60a:	9201      	str	r2, [sp, #4]
 801a60c:	e7e7      	b.n	801a5de <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801a60e:	2203      	movs	r2, #3
 801a610:	4615      	mov	r5, r2
 801a612:	9909      	ldr	r1, [sp, #36]	; 0x24
 801a614:	9a03      	ldr	r2, [sp, #12]
 801a616:	fb15 1202 	smlabb	r2, r5, r2, r1
 801a61a:	9905      	ldr	r1, [sp, #20]
 801a61c:	4563      	cmp	r3, ip
 801a61e:	eb01 0502 	add.w	r5, r1, r2
 801a622:	9902      	ldr	r1, [sp, #8]
 801a624:	bf29      	itett	cs
 801a626:	eba3 080c 	subcs.w	r8, r3, ip
 801a62a:	ebac 0603 	subcc.w	r6, ip, r3
 801a62e:	fa1f f888 	uxthcs.w	r8, r8
 801a632:	46e1      	movcs	r9, ip
 801a634:	bf2f      	iteee	cs
 801a636:	4626      	movcs	r6, r4
 801a638:	b2b6      	uxthcc	r6, r6
 801a63a:	4699      	movcc	r9, r3
 801a63c:	46a0      	movcc	r8, r4
 801a63e:	29ff      	cmp	r1, #255	; 0xff
 801a640:	d04a      	beq.n	801a6d8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 801a642:	9f06      	ldr	r7, [sp, #24]
 801a644:	78a9      	ldrb	r1, [r5, #2]
 801a646:	9004      	str	r0, [sp, #16]
 801a648:	4379      	muls	r1, r7
 801a64a:	910a      	str	r1, [sp, #40]	; 0x28
 801a64c:	7869      	ldrb	r1, [r5, #1]
 801a64e:	4379      	muls	r1, r7
 801a650:	910b      	str	r1, [sp, #44]	; 0x2c
 801a652:	9905      	ldr	r1, [sp, #20]
 801a654:	5c8a      	ldrb	r2, [r1, r2]
 801a656:	437a      	muls	r2, r7
 801a658:	920c      	str	r2, [sp, #48]	; 0x30
 801a65a:	46ca      	mov	sl, r9
 801a65c:	f1ba 0f00 	cmp.w	sl, #0
 801a660:	d03d      	beq.n	801a6de <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 801a662:	9a04      	ldr	r2, [sp, #16]
 801a664:	9f07      	ldr	r7, [sp, #28]
 801a666:	8812      	ldrh	r2, [r2, #0]
 801a668:	1215      	asrs	r5, r2, #8
 801a66a:	46be      	mov	lr, r7
 801a66c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801a670:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801a672:	10d1      	asrs	r1, r2, #3
 801a674:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801a678:	fb05 750e 	mla	r5, r5, lr, r7
 801a67c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801a680:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801a682:	00d2      	lsls	r2, r2, #3
 801a684:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801a688:	fb01 710e 	mla	r1, r1, lr, r7
 801a68c:	b2d2      	uxtb	r2, r2
 801a68e:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801a690:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801a694:	b2ad      	uxth	r5, r5
 801a696:	fb02 720e 	mla	r2, r2, lr, r7
 801a69a:	b292      	uxth	r2, r2
 801a69c:	f105 0e01 	add.w	lr, r5, #1
 801a6a0:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801a6a4:	f102 0e01 	add.w	lr, r2, #1
 801a6a8:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801a6ac:	b289      	uxth	r1, r1
 801a6ae:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801a6b2:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801a6b6:	4315      	orrs	r5, r2
 801a6b8:	1c4a      	adds	r2, r1, #1
 801a6ba:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801a6be:	0949      	lsrs	r1, r1, #5
 801a6c0:	9a04      	ldr	r2, [sp, #16]
 801a6c2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801a6c6:	430d      	orrs	r5, r1
 801a6c8:	f822 5b02 	strh.w	r5, [r2], #2
 801a6cc:	f10a 3aff 	add.w	sl, sl, #4294967295
 801a6d0:	9204      	str	r2, [sp, #16]
 801a6d2:	fa1f fa8a 	uxth.w	sl, sl
 801a6d6:	e7c1      	b.n	801a65c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 801a6d8:	4649      	mov	r1, r9
 801a6da:	4686      	mov	lr, r0
 801a6dc:	b999      	cbnz	r1, 801a706 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801a6de:	4563      	cmp	r3, ip
 801a6e0:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 801a6e4:	d38a      	bcc.n	801a5fc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801a6e6:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
 801a6ea:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801a6ec:	fa1f f68b 	uxth.w	r6, fp
 801a6f0:	1ba4      	subs	r4, r4, r6
 801a6f2:	881b      	ldrh	r3, [r3, #0]
 801a6f4:	b2a4      	uxth	r4, r4
 801a6f6:	2c00      	cmp	r4, #0
 801a6f8:	eba3 030b 	sub.w	r3, r3, fp
 801a6fc:	bf18      	it	ne
 801a6fe:	2600      	movne	r6, #0
 801a700:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801a704:	e77a      	b.n	801a5fc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801a706:	78aa      	ldrb	r2, [r5, #2]
 801a708:	4f0e      	ldr	r7, [pc, #56]	; (801a744 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 801a70a:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 801a70e:	786a      	ldrb	r2, [r5, #1]
 801a710:	00d2      	lsls	r2, r2, #3
 801a712:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a716:	ea4a 0202 	orr.w	r2, sl, r2
 801a71a:	f895 a000 	ldrb.w	sl, [r5]
 801a71e:	3901      	subs	r1, #1
 801a720:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 801a724:	f82e 2b02 	strh.w	r2, [lr], #2
 801a728:	b289      	uxth	r1, r1
 801a72a:	e7d7      	b.n	801a6dc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 801a72c:	4b03      	ldr	r3, [pc, #12]	; (801a73c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801a72e:	6818      	ldr	r0, [r3, #0]
 801a730:	6803      	ldr	r3, [r0, #0]
 801a732:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801a734:	4798      	blx	r3
 801a736:	b013      	add	sp, #76	; 0x4c
 801a738:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a73c:	200137bc 	.word	0x200137bc
 801a740:	200137b6 	.word	0x200137b6
 801a744:	fffff800 	.word	0xfffff800

0801a748 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801a748:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a74c:	b09d      	sub	sp, #116	; 0x74
 801a74e:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
 801a752:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
 801a756:	920e      	str	r2, [sp, #56]	; 0x38
 801a758:	461c      	mov	r4, r3
 801a75a:	4683      	mov	fp, r0
 801a75c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801a75e:	2a00      	cmp	r2, #0
 801a760:	f000 81e0 	beq.w	801ab24 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 801a764:	6820      	ldr	r0, [r4, #0]
 801a766:	6861      	ldr	r1, [r4, #4]
 801a768:	aa18      	add	r2, sp, #96	; 0x60
 801a76a:	c203      	stmia	r2!, {r0, r1}
 801a76c:	6818      	ldr	r0, [r3, #0]
 801a76e:	6859      	ldr	r1, [r3, #4]
 801a770:	aa1a      	add	r2, sp, #104	; 0x68
 801a772:	c203      	stmia	r2!, {r0, r1}
 801a774:	a818      	add	r0, sp, #96	; 0x60
 801a776:	f7f8 ff77 	bl	8013668 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a77a:	4621      	mov	r1, r4
 801a77c:	a81a      	add	r0, sp, #104	; 0x68
 801a77e:	f7f8 ffb7 	bl	80136f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801a782:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
 801a786:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
 801a78a:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801a78e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801a792:	bfd7      	itett	le
 801a794:	b29a      	uxthle	r2, r3
 801a796:	2201      	movgt	r2, #1
 801a798:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801a79c:	fb91 f2f2 	sdivle	r2, r1, r2
 801a7a0:	9202      	str	r2, [sp, #8]
 801a7a2:	9802      	ldr	r0, [sp, #8]
 801a7a4:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
 801a7a8:	fb92 f0f0 	sdiv	r0, r2, r0
 801a7ac:	b280      	uxth	r0, r0
 801a7ae:	900f      	str	r0, [sp, #60]	; 0x3c
 801a7b0:	9902      	ldr	r1, [sp, #8]
 801a7b2:	9802      	ldr	r0, [sp, #8]
 801a7b4:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801a7b6:	440c      	add	r4, r1
 801a7b8:	fb05 2510 	mls	r5, r5, r0, r2
 801a7bc:	fb15 f503 	smulbb	r5, r5, r3
 801a7c0:	3c01      	subs	r4, #1
 801a7c2:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
 801a7c6:	fb94 f4f1 	sdiv	r4, r4, r1
 801a7ca:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
 801a7ce:	440d      	add	r5, r1
 801a7d0:	4419      	add	r1, r3
 801a7d2:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
 801a7d6:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
 801a7da:	441a      	add	r2, r3
 801a7dc:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801a7e0:	9306      	str	r3, [sp, #24]
 801a7e2:	4bb3      	ldr	r3, [pc, #716]	; (801aab0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 801a7e4:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
 801a7e8:	6818      	ldr	r0, [r3, #0]
 801a7ea:	6803      	ldr	r3, [r0, #0]
 801a7ec:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801a7ee:	4798      	blx	r3
 801a7f0:	4bb0      	ldr	r3, [pc, #704]	; (801aab4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 801a7f2:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
 801a7f6:	881a      	ldrh	r2, [r3, #0]
 801a7f8:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
 801a7fc:	9316      	str	r3, [sp, #88]	; 0x58
 801a7fe:	fb02 7101 	mla	r1, r2, r1, r7
 801a802:	3401      	adds	r4, #1
 801a804:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 801a808:	b2a4      	uxth	r4, r4
 801a80a:	4356      	muls	r6, r2
 801a80c:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 801a810:	00a4      	lsls	r4, r4, #2
 801a812:	920a      	str	r2, [sp, #40]	; 0x28
 801a814:	1d22      	adds	r2, r4, #4
 801a816:	b2ad      	uxth	r5, r5
 801a818:	9213      	str	r2, [sp, #76]	; 0x4c
 801a81a:	4ba7      	ldr	r3, [pc, #668]	; (801aab8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 801a81c:	9a06      	ldr	r2, [sp, #24]
 801a81e:	2d00      	cmp	r5, #0
 801a820:	bf0c      	ite	eq
 801a822:	4611      	moveq	r1, r2
 801a824:	2100      	movne	r1, #0
 801a826:	2200      	movs	r2, #0
 801a828:	eba3 030b 	sub.w	r3, r3, fp
 801a82c:	b289      	uxth	r1, r1
 801a82e:	920d      	str	r2, [sp, #52]	; 0x34
 801a830:	9317      	str	r3, [sp, #92]	; 0x5c
 801a832:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a834:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801a836:	fa12 f383 	uxtah	r3, r2, r3
 801a83a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a83c:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801a840:	3304      	adds	r3, #4
 801a842:	9308      	str	r3, [sp, #32]
 801a844:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a846:	4543      	cmp	r3, r8
 801a848:	f240 8167 	bls.w	801ab1a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 801a84c:	9a02      	ldr	r2, [sp, #8]
 801a84e:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 801a852:	fbb5 f3f3 	udiv	r3, r5, r3
 801a856:	1ad3      	subs	r3, r2, r3
 801a858:	b29b      	uxth	r3, r3
 801a85a:	9314      	str	r3, [sp, #80]	; 0x50
 801a85c:	9b08      	ldr	r3, [sp, #32]
 801a85e:	9808      	ldr	r0, [sp, #32]
 801a860:	785a      	ldrb	r2, [r3, #1]
 801a862:	789b      	ldrb	r3, [r3, #2]
 801a864:	7800      	ldrb	r0, [r0, #0]
 801a866:	9010      	str	r0, [sp, #64]	; 0x40
 801a868:	021b      	lsls	r3, r3, #8
 801a86a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801a86e:	9a08      	ldr	r2, [sp, #32]
 801a870:	78d2      	ldrb	r2, [r2, #3]
 801a872:	4313      	orrs	r3, r2
 801a874:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a876:	3001      	adds	r0, #1
 801a878:	441a      	add	r2, r3
 801a87a:	9007      	str	r0, [sp, #28]
 801a87c:	1c50      	adds	r0, r2, #1
 801a87e:	9005      	str	r0, [sp, #20]
 801a880:	7852      	ldrb	r2, [r2, #1]
 801a882:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a884:	0212      	lsls	r2, r2, #8
 801a886:	5cc3      	ldrb	r3, [r0, r3]
 801a888:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801a88c:	431a      	orrs	r2, r3
 801a88e:	b293      	uxth	r3, r2
 801a890:	930b      	str	r3, [sp, #44]	; 0x2c
 801a892:	2300      	movs	r3, #0
 801a894:	9309      	str	r3, [sp, #36]	; 0x24
 801a896:	2301      	movs	r3, #1
 801a898:	9301      	str	r3, [sp, #4]
 801a89a:	9304      	str	r3, [sp, #16]
 801a89c:	2300      	movs	r3, #0
 801a89e:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
 801a8a2:	9303      	str	r3, [sp, #12]
 801a8a4:	f04f 0e01 	mov.w	lr, #1
 801a8a8:	2d00      	cmp	r5, #0
 801a8aa:	d07c      	beq.n	801a9a6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 801a8ac:	45ae      	cmp	lr, r5
 801a8ae:	d26b      	bcs.n	801a988 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 801a8b0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a8b2:	eba5 050e 	sub.w	r5, r5, lr
 801a8b6:	4543      	cmp	r3, r8
 801a8b8:	b2ad      	uxth	r5, r5
 801a8ba:	460c      	mov	r4, r1
 801a8bc:	d802      	bhi.n	801a8c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 801a8be:	e070      	b.n	801a9a2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 801a8c0:	2b00      	cmp	r3, #0
 801a8c2:	d15c      	bne.n	801a97e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801a8c4:	9b05      	ldr	r3, [sp, #20]
 801a8c6:	9a04      	ldr	r2, [sp, #16]
 801a8c8:	785b      	ldrb	r3, [r3, #1]
 801a8ca:	9904      	ldr	r1, [sp, #16]
 801a8cc:	f1c2 0207 	rsb	r2, r2, #7
 801a8d0:	4093      	lsls	r3, r2
 801a8d2:	005b      	lsls	r3, r3, #1
 801a8d4:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801a8d8:	9b05      	ldr	r3, [sp, #20]
 801a8da:	781b      	ldrb	r3, [r3, #0]
 801a8dc:	410b      	asrs	r3, r1
 801a8de:	3101      	adds	r1, #1
 801a8e0:	b2c9      	uxtb	r1, r1
 801a8e2:	2908      	cmp	r1, #8
 801a8e4:	9104      	str	r1, [sp, #16]
 801a8e6:	9905      	ldr	r1, [sp, #20]
 801a8e8:	bf0a      	itet	eq
 801a8ea:	3102      	addeq	r1, #2
 801a8ec:	3101      	addne	r1, #1
 801a8ee:	9105      	streq	r1, [sp, #20]
 801a8f0:	b2db      	uxtb	r3, r3
 801a8f2:	bf0a      	itet	eq
 801a8f4:	2100      	moveq	r1, #0
 801a8f6:	9105      	strne	r1, [sp, #20]
 801a8f8:	9104      	streq	r1, [sp, #16]
 801a8fa:	4313      	orrs	r3, r2
 801a8fc:	9910      	ldr	r1, [sp, #64]	; 0x40
 801a8fe:	b29a      	uxth	r2, r3
 801a900:	4291      	cmp	r1, r2
 801a902:	d30a      	bcc.n	801a91a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 801a904:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
 801a908:	2301      	movs	r3, #1
 801a90a:	9907      	ldr	r1, [sp, #28]
 801a90c:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801a910:	d30f      	bcc.n	801a932 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 801a912:	2100      	movs	r1, #0
 801a914:	9301      	str	r3, [sp, #4]
 801a916:	9103      	str	r1, [sp, #12]
 801a918:	e032      	b.n	801a980 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 801a91a:	9b07      	ldr	r3, [sp, #28]
 801a91c:	429a      	cmp	r2, r3
 801a91e:	d318      	bcc.n	801a952 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 801a920:	9b01      	ldr	r3, [sp, #4]
 801a922:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
 801a926:	445b      	add	r3, fp
 801a928:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801a92c:	9b01      	ldr	r3, [sp, #4]
 801a92e:	3301      	adds	r3, #1
 801a930:	b29b      	uxth	r3, r3
 801a932:	9907      	ldr	r1, [sp, #28]
 801a934:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
 801a938:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801a93c:	7108      	strb	r0, [r1, #4]
 801a93e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801a940:	80c8      	strh	r0, [r1, #6]
 801a942:	9801      	ldr	r0, [sp, #4]
 801a944:	3001      	adds	r0, #1
 801a946:	7148      	strb	r0, [r1, #5]
 801a948:	9907      	ldr	r1, [sp, #28]
 801a94a:	3101      	adds	r1, #1
 801a94c:	b289      	uxth	r1, r1
 801a94e:	9107      	str	r1, [sp, #28]
 801a950:	e7df      	b.n	801a912 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 801a952:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 801a956:	4611      	mov	r1, r2
 801a958:	795b      	ldrb	r3, [r3, #5]
 801a95a:	f603 0004 	addw	r0, r3, #2052	; 0x804
 801a95e:	4458      	add	r0, fp
 801a960:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 801a962:	4406      	add	r6, r0
 801a964:	2e00      	cmp	r6, #0
 801a966:	dd06      	ble.n	801a976 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 801a968:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801a96c:	790e      	ldrb	r6, [r1, #4]
 801a96e:	f800 6d01 	strb.w	r6, [r0, #-1]!
 801a972:	88c9      	ldrh	r1, [r1, #6]
 801a974:	e7f4      	b.n	801a960 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 801a976:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
 801a97a:	b29b      	uxth	r3, r3
 801a97c:	e7c5      	b.n	801a90a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 801a97e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801a980:	920b      	str	r2, [sp, #44]	; 0x2c
 801a982:	4621      	mov	r1, r4
 801a984:	469e      	mov	lr, r3
 801a986:	e78f      	b.n	801a8a8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 801a988:	9a03      	ldr	r2, [sp, #12]
 801a98a:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801a98e:	442a      	add	r2, r5
 801a990:	ebae 0305 	sub.w	r3, lr, r5
 801a994:	b292      	uxth	r2, r2
 801a996:	b29b      	uxth	r3, r3
 801a998:	9203      	str	r2, [sp, #12]
 801a99a:	2500      	movs	r5, #0
 801a99c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801a99e:	4542      	cmp	r2, r8
 801a9a0:	d88e      	bhi.n	801a8c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 801a9a2:	4621      	mov	r1, r4
 801a9a4:	e74e      	b.n	801a844 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 801a9a6:	458e      	cmp	lr, r1
 801a9a8:	bf29      	itett	cs
 801a9aa:	ebae 0301 	subcs.w	r3, lr, r1
 801a9ae:	eba1 040e 	subcc.w	r4, r1, lr
 801a9b2:	b29b      	uxthcs	r3, r3
 801a9b4:	910c      	strcs	r1, [sp, #48]	; 0x30
 801a9b6:	bf2f      	iteee	cs
 801a9b8:	462c      	movcs	r4, r5
 801a9ba:	b2a4      	uxthcc	r4, r4
 801a9bc:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
 801a9c0:	462b      	movcc	r3, r5
 801a9c2:	f04f 0900 	mov.w	r9, #0
 801a9c6:	9a03      	ldr	r2, [sp, #12]
 801a9c8:	980c      	ldr	r0, [sp, #48]	; 0x30
 801a9ca:	444a      	add	r2, r9
 801a9cc:	4548      	cmp	r0, r9
 801a9ce:	b292      	uxth	r2, r2
 801a9d0:	d074      	beq.n	801aabc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 801a9d2:	445a      	add	r2, fp
 801a9d4:	2004      	movs	r0, #4
 801a9d6:	4605      	mov	r5, r0
 801a9d8:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
 801a9dc:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a9de:	fb15 0202 	smlabb	r2, r5, r2, r0
 801a9e2:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a9e4:	5880      	ldr	r0, [r0, r2]
 801a9e6:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 801a9ea:	d014      	beq.n	801aa16 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801a9ec:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801a9f0:	ea4f 2510 	mov.w	r5, r0, lsr #8
 801a9f4:	d112      	bne.n	801aa1c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801a9f6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801a9f8:	2aff      	cmp	r2, #255	; 0xff
 801a9fa:	d10f      	bne.n	801aa1c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801a9fc:	0942      	lsrs	r2, r0, #5
 801a9fe:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801aa02:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801aa06:	f025 0507 	bic.w	r5, r5, #7
 801aa0a:	4315      	orrs	r5, r2
 801aa0c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801aa10:	4305      	orrs	r5, r0
 801aa12:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 801aa16:	f109 0901 	add.w	r9, r9, #1
 801aa1a:	e7d4      	b.n	801a9c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 801aa1c:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 801aa20:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801aa24:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
 801aa28:	9215      	str	r2, [sp, #84]	; 0x54
 801aa2a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801aa2c:	fb02 fa0a 	mul.w	sl, r2, sl
 801aa30:	f10a 0201 	add.w	r2, sl, #1
 801aa34:	eb02 222a 	add.w	r2, r2, sl, asr #8
 801aa38:	ea4f 272c 	mov.w	r7, ip, asr #8
 801aa3c:	1212      	asrs	r2, r2, #8
 801aa3e:	fa1f fa82 	uxth.w	sl, r2
 801aa42:	f3c0 4607 	ubfx	r6, r0, #16, #8
 801aa46:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801aa4a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801aa4e:	43d2      	mvns	r2, r2
 801aa50:	b2d2      	uxtb	r2, r2
 801aa52:	fb16 f60a 	smulbb	r6, r6, sl
 801aa56:	fa5f fc8c 	uxtb.w	ip, ip
 801aa5a:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801aa5e:	b2c0      	uxtb	r0, r0
 801aa60:	fb07 6702 	mla	r7, r7, r2, r6
 801aa64:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 801aa68:	9e15      	ldr	r6, [sp, #84]	; 0x54
 801aa6a:	fb10 f00a 	smulbb	r0, r0, sl
 801aa6e:	fb0c 0002 	mla	r0, ip, r2, r0
 801aa72:	b2ed      	uxtb	r5, r5
 801aa74:	b2bf      	uxth	r7, r7
 801aa76:	fb15 f50a 	smulbb	r5, r5, sl
 801aa7a:	b280      	uxth	r0, r0
 801aa7c:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801aa80:	fb06 5602 	mla	r6, r6, r2, r5
 801aa84:	1c7a      	adds	r2, r7, #1
 801aa86:	1c45      	adds	r5, r0, #1
 801aa88:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801aa8c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801aa90:	b2b6      	uxth	r6, r6
 801aa92:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801aa96:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801aa9a:	432f      	orrs	r7, r5
 801aa9c:	1c75      	adds	r5, r6, #1
 801aa9e:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801aaa2:	096d      	lsrs	r5, r5, #5
 801aaa4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801aaa8:	432f      	orrs	r7, r5
 801aaaa:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 801aaae:	e7b2      	b.n	801aa16 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801aab0:	200137bc 	.word	0x200137bc
 801aab4:	200137b6 	.word	0x200137b6
 801aab8:	fffff7fb 	.word	0xfffff7fb
 801aabc:	9203      	str	r2, [sp, #12]
 801aabe:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801aac0:	458e      	cmp	lr, r1
 801aac2:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801aac6:	f4ff af68 	bcc.w	801a99a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 801aaca:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801aacc:	9906      	ldr	r1, [sp, #24]
 801aace:	8812      	ldrh	r2, [r2, #0]
 801aad0:	1a52      	subs	r2, r2, r1
 801aad2:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801aad6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801aad8:	9914      	ldr	r1, [sp, #80]	; 0x50
 801aada:	3201      	adds	r2, #1
 801aadc:	428a      	cmp	r2, r1
 801aade:	9209      	str	r2, [sp, #36]	; 0x24
 801aae0:	d111      	bne.n	801ab06 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 801aae2:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
 801aae6:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 801aaea:	9b06      	ldr	r3, [sp, #24]
 801aaec:	eba5 0509 	sub.w	r5, r5, r9
 801aaf0:	b2ad      	uxth	r5, r5
 801aaf2:	2d00      	cmp	r5, #0
 801aaf4:	bf08      	it	eq
 801aaf6:	4619      	moveq	r1, r3
 801aaf8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801aafa:	bf18      	it	ne
 801aafc:	2100      	movne	r1, #0
 801aafe:	3301      	adds	r3, #1
 801ab00:	930d      	str	r3, [sp, #52]	; 0x34
 801ab02:	b289      	uxth	r1, r1
 801ab04:	e695      	b.n	801a832 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 801ab06:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801ab0a:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 801ab0e:	1b2d      	subs	r5, r5, r4
 801ab10:	b2ad      	uxth	r5, r5
 801ab12:	2d00      	cmp	r5, #0
 801ab14:	bf18      	it	ne
 801ab16:	2400      	movne	r4, #0
 801ab18:	e740      	b.n	801a99c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 801ab1a:	4b04      	ldr	r3, [pc, #16]	; (801ab2c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 801ab1c:	6818      	ldr	r0, [r3, #0]
 801ab1e:	6803      	ldr	r3, [r0, #0]
 801ab20:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ab22:	4798      	blx	r3
 801ab24:	b01d      	add	sp, #116	; 0x74
 801ab26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ab2a:	bf00      	nop
 801ab2c:	200137bc 	.word	0x200137bc

0801ab30 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801ab30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ab34:	b09f      	sub	sp, #124	; 0x7c
 801ab36:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801ab3a:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801ab3e:	920a      	str	r2, [sp, #40]	; 0x28
 801ab40:	461d      	mov	r5, r3
 801ab42:	4604      	mov	r4, r0
 801ab44:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ab46:	2a00      	cmp	r2, #0
 801ab48:	f000 81fa 	beq.w	801af40 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 801ab4c:	6828      	ldr	r0, [r5, #0]
 801ab4e:	6869      	ldr	r1, [r5, #4]
 801ab50:	aa1a      	add	r2, sp, #104	; 0x68
 801ab52:	c203      	stmia	r2!, {r0, r1}
 801ab54:	6818      	ldr	r0, [r3, #0]
 801ab56:	6859      	ldr	r1, [r3, #4]
 801ab58:	aa1c      	add	r2, sp, #112	; 0x70
 801ab5a:	c203      	stmia	r2!, {r0, r1}
 801ab5c:	a81a      	add	r0, sp, #104	; 0x68
 801ab5e:	f7f8 fd83 	bl	8013668 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ab62:	4629      	mov	r1, r5
 801ab64:	a81c      	add	r0, sp, #112	; 0x70
 801ab66:	f7f8 fdc3 	bl	80136f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ab6a:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801ab6e:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801ab72:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
 801ab76:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801ab7a:	bfd7      	itett	le
 801ab7c:	b29a      	uxthle	r2, r3
 801ab7e:	2201      	movgt	r2, #1
 801ab80:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801ab84:	fb91 f2f2 	sdivle	r2, r1, r2
 801ab88:	9201      	str	r2, [sp, #4]
 801ab8a:	9801      	ldr	r0, [sp, #4]
 801ab8c:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801ab90:	fb92 f0f0 	sdiv	r0, r2, r0
 801ab94:	b280      	uxth	r0, r0
 801ab96:	9010      	str	r0, [sp, #64]	; 0x40
 801ab98:	9901      	ldr	r1, [sp, #4]
 801ab9a:	9801      	ldr	r0, [sp, #4]
 801ab9c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801ab9e:	440e      	add	r6, r1
 801aba0:	fb05 2510 	mls	r5, r5, r0, r2
 801aba4:	fb15 f503 	smulbb	r5, r5, r3
 801aba8:	3e01      	subs	r6, #1
 801abaa:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801abae:	fb96 f6f1 	sdiv	r6, r6, r1
 801abb2:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801abb6:	440d      	add	r5, r1
 801abb8:	4419      	add	r1, r3
 801abba:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801abbe:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801abc2:	441a      	add	r2, r3
 801abc4:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801abc8:	9304      	str	r3, [sp, #16]
 801abca:	4b96      	ldr	r3, [pc, #600]	; (801ae24 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801abcc:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801abd0:	6818      	ldr	r0, [r3, #0]
 801abd2:	6803      	ldr	r3, [r0, #0]
 801abd4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801abd6:	4798      	blx	r3
 801abd8:	4b93      	ldr	r3, [pc, #588]	; (801ae28 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801abda:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801abde:	881a      	ldrh	r2, [r3, #0]
 801abe0:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
 801abe4:	9318      	str	r3, [sp, #96]	; 0x60
 801abe6:	fb02 c101 	mla	r1, r2, r1, ip
 801abea:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 801abee:	4357      	muls	r7, r2
 801abf0:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 801abf4:	3601      	adds	r6, #1
 801abf6:	920b      	str	r2, [sp, #44]	; 0x2c
 801abf8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801abfa:	4b8c      	ldr	r3, [pc, #560]	; (801ae2c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801abfc:	b2b6      	uxth	r6, r6
 801abfe:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 801ac02:	1d32      	adds	r2, r6, #4
 801ac04:	9206      	str	r2, [sp, #24]
 801ac06:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801ac08:	43d2      	mvns	r2, r2
 801ac0a:	b2d2      	uxtb	r2, r2
 801ac0c:	b2ad      	uxth	r5, r5
 801ac0e:	9215      	str	r2, [sp, #84]	; 0x54
 801ac10:	9a04      	ldr	r2, [sp, #16]
 801ac12:	2d00      	cmp	r5, #0
 801ac14:	bf0c      	ite	eq
 801ac16:	4611      	moveq	r1, r2
 801ac18:	2100      	movne	r1, #0
 801ac1a:	2200      	movs	r2, #0
 801ac1c:	1b1b      	subs	r3, r3, r4
 801ac1e:	b289      	uxth	r1, r1
 801ac20:	920d      	str	r2, [sp, #52]	; 0x34
 801ac22:	9319      	str	r3, [sp, #100]	; 0x64
 801ac24:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801ac26:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ac28:	fa12 f383 	uxtah	r3, r2, r3
 801ac2c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ac2e:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801ac32:	3304      	adds	r3, #4
 801ac34:	9307      	str	r3, [sp, #28]
 801ac36:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ac38:	455b      	cmp	r3, fp
 801ac3a:	f240 817c 	bls.w	801af36 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 801ac3e:	9a01      	ldr	r2, [sp, #4]
 801ac40:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801ac44:	fbb5 f3f3 	udiv	r3, r5, r3
 801ac48:	1ad3      	subs	r3, r2, r3
 801ac4a:	b29b      	uxth	r3, r3
 801ac4c:	9316      	str	r3, [sp, #88]	; 0x58
 801ac4e:	9b07      	ldr	r3, [sp, #28]
 801ac50:	9807      	ldr	r0, [sp, #28]
 801ac52:	785a      	ldrb	r2, [r3, #1]
 801ac54:	789b      	ldrb	r3, [r3, #2]
 801ac56:	7800      	ldrb	r0, [r0, #0]
 801ac58:	9011      	str	r0, [sp, #68]	; 0x44
 801ac5a:	021b      	lsls	r3, r3, #8
 801ac5c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801ac60:	9a07      	ldr	r2, [sp, #28]
 801ac62:	78d2      	ldrb	r2, [r2, #3]
 801ac64:	4313      	orrs	r3, r2
 801ac66:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801ac68:	3001      	adds	r0, #1
 801ac6a:	441a      	add	r2, r3
 801ac6c:	9005      	str	r0, [sp, #20]
 801ac6e:	1c50      	adds	r0, r2, #1
 801ac70:	9003      	str	r0, [sp, #12]
 801ac72:	7852      	ldrb	r2, [r2, #1]
 801ac74:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801ac76:	0212      	lsls	r2, r2, #8
 801ac78:	5cc3      	ldrb	r3, [r0, r3]
 801ac7a:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801ac7e:	431a      	orrs	r2, r3
 801ac80:	b293      	uxth	r3, r2
 801ac82:	930c      	str	r3, [sp, #48]	; 0x30
 801ac84:	2300      	movs	r3, #0
 801ac86:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801ac8a:	9308      	str	r3, [sp, #32]
 801ac8c:	461a      	mov	r2, r3
 801ac8e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801ac92:	930e      	str	r3, [sp, #56]	; 0x38
 801ac94:	f04f 0801 	mov.w	r8, #1
 801ac98:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801ac9c:	f8cd 8008 	str.w	r8, [sp, #8]
 801aca0:	46c4      	mov	ip, r8
 801aca2:	930f      	str	r3, [sp, #60]	; 0x3c
 801aca4:	2d00      	cmp	r5, #0
 801aca6:	d07c      	beq.n	801ada2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801aca8:	45ac      	cmp	ip, r5
 801acaa:	d26c      	bcs.n	801ad86 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 801acac:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801acae:	eba5 050c 	sub.w	r5, r5, ip
 801acb2:	455b      	cmp	r3, fp
 801acb4:	b2ad      	uxth	r5, r5
 801acb6:	4608      	mov	r0, r1
 801acb8:	d802      	bhi.n	801acc0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 801acba:	e070      	b.n	801ad9e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 801acbc:	2b00      	cmp	r3, #0
 801acbe:	d15c      	bne.n	801ad7a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 801acc0:	9b03      	ldr	r3, [sp, #12]
 801acc2:	9a02      	ldr	r2, [sp, #8]
 801acc4:	785b      	ldrb	r3, [r3, #1]
 801acc6:	9902      	ldr	r1, [sp, #8]
 801acc8:	f1c2 0207 	rsb	r2, r2, #7
 801accc:	4093      	lsls	r3, r2
 801acce:	005b      	lsls	r3, r3, #1
 801acd0:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801acd4:	9b03      	ldr	r3, [sp, #12]
 801acd6:	781b      	ldrb	r3, [r3, #0]
 801acd8:	410b      	asrs	r3, r1
 801acda:	3101      	adds	r1, #1
 801acdc:	b2c9      	uxtb	r1, r1
 801acde:	2908      	cmp	r1, #8
 801ace0:	9102      	str	r1, [sp, #8]
 801ace2:	9903      	ldr	r1, [sp, #12]
 801ace4:	bf0a      	itet	eq
 801ace6:	3102      	addeq	r1, #2
 801ace8:	3101      	addne	r1, #1
 801acea:	9103      	streq	r1, [sp, #12]
 801acec:	b2db      	uxtb	r3, r3
 801acee:	bf0a      	itet	eq
 801acf0:	2100      	moveq	r1, #0
 801acf2:	9103      	strne	r1, [sp, #12]
 801acf4:	9102      	streq	r1, [sp, #8]
 801acf6:	4313      	orrs	r3, r2
 801acf8:	9911      	ldr	r1, [sp, #68]	; 0x44
 801acfa:	b29a      	uxth	r2, r3
 801acfc:	4291      	cmp	r1, r2
 801acfe:	d30a      	bcc.n	801ad16 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 801ad00:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801ad04:	2301      	movs	r3, #1
 801ad06:	9905      	ldr	r1, [sp, #20]
 801ad08:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801ad0c:	d30f      	bcc.n	801ad2e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 801ad0e:	2100      	movs	r1, #0
 801ad10:	4698      	mov	r8, r3
 801ad12:	9100      	str	r1, [sp, #0]
 801ad14:	e032      	b.n	801ad7c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 801ad16:	9b05      	ldr	r3, [sp, #20]
 801ad18:	429a      	cmp	r2, r3
 801ad1a:	d318      	bcc.n	801ad4e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 801ad1c:	eb04 0308 	add.w	r3, r4, r8
 801ad20:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
 801ad24:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801ad28:	f108 0301 	add.w	r3, r8, #1
 801ad2c:	b29b      	uxth	r3, r3
 801ad2e:	9905      	ldr	r1, [sp, #20]
 801ad30:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801ad34:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801ad38:	710e      	strb	r6, [r1, #4]
 801ad3a:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801ad3c:	80ce      	strh	r6, [r1, #6]
 801ad3e:	f108 0601 	add.w	r6, r8, #1
 801ad42:	714e      	strb	r6, [r1, #5]
 801ad44:	9905      	ldr	r1, [sp, #20]
 801ad46:	3101      	adds	r1, #1
 801ad48:	b289      	uxth	r1, r1
 801ad4a:	9105      	str	r1, [sp, #20]
 801ad4c:	e7df      	b.n	801ad0e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 801ad4e:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 801ad52:	4611      	mov	r1, r2
 801ad54:	795b      	ldrb	r3, [r3, #5]
 801ad56:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801ad5a:	4426      	add	r6, r4
 801ad5c:	9f19      	ldr	r7, [sp, #100]	; 0x64
 801ad5e:	4437      	add	r7, r6
 801ad60:	2f00      	cmp	r7, #0
 801ad62:	dd06      	ble.n	801ad72 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801ad64:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801ad68:	790f      	ldrb	r7, [r1, #4]
 801ad6a:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801ad6e:	88c9      	ldrh	r1, [r1, #6]
 801ad70:	e7f4      	b.n	801ad5c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 801ad72:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801ad76:	b29b      	uxth	r3, r3
 801ad78:	e7c5      	b.n	801ad06 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 801ad7a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801ad7c:	920c      	str	r2, [sp, #48]	; 0x30
 801ad7e:	4601      	mov	r1, r0
 801ad80:	9a00      	ldr	r2, [sp, #0]
 801ad82:	469c      	mov	ip, r3
 801ad84:	e78e      	b.n	801aca4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 801ad86:	1957      	adds	r7, r2, r5
 801ad88:	ebac 0305 	sub.w	r3, ip, r5
 801ad8c:	b2ba      	uxth	r2, r7
 801ad8e:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801ad92:	9200      	str	r2, [sp, #0]
 801ad94:	b29b      	uxth	r3, r3
 801ad96:	2500      	movs	r5, #0
 801ad98:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801ad9a:	455a      	cmp	r2, fp
 801ad9c:	d88e      	bhi.n	801acbc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 801ad9e:	4601      	mov	r1, r0
 801ada0:	e749      	b.n	801ac36 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 801ada2:	458c      	cmp	ip, r1
 801ada4:	bf2c      	ite	cs
 801ada6:	4628      	movcs	r0, r5
 801ada8:	462b      	movcc	r3, r5
 801adaa:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801adac:	bf27      	ittee	cs
 801adae:	9109      	strcs	r1, [sp, #36]	; 0x24
 801adb0:	ebac 0301 	subcs.w	r3, ip, r1
 801adb4:	eba1 000c 	subcc.w	r0, r1, ip
 801adb8:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
 801adbc:	bf2c      	ite	cs
 801adbe:	b29b      	uxthcs	r3, r3
 801adc0:	b280      	uxthcc	r0, r0
 801adc2:	2dff      	cmp	r5, #255	; 0xff
 801adc4:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801adc6:	eb02 0705 	add.w	r7, r2, r5
 801adca:	b2bd      	uxth	r5, r7
 801adcc:	9500      	str	r5, [sp, #0]
 801adce:	d12f      	bne.n	801ae30 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 801add0:	465e      	mov	r6, fp
 801add2:	9d00      	ldr	r5, [sp, #0]
 801add4:	42aa      	cmp	r2, r5
 801add6:	f040 8084 	bne.w	801aee2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 801adda:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801addc:	458c      	cmp	ip, r1
 801adde:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801ade2:	d3d8      	bcc.n	801ad96 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 801ade4:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801ade6:	9904      	ldr	r1, [sp, #16]
 801ade8:	8812      	ldrh	r2, [r2, #0]
 801adea:	1a52      	subs	r2, r2, r1
 801adec:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801adf0:	9a08      	ldr	r2, [sp, #32]
 801adf2:	9916      	ldr	r1, [sp, #88]	; 0x58
 801adf4:	3201      	adds	r2, #1
 801adf6:	428a      	cmp	r2, r1
 801adf8:	9208      	str	r2, [sp, #32]
 801adfa:	f040 8092 	bne.w	801af22 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 801adfe:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801ae02:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
 801ae06:	9b04      	ldr	r3, [sp, #16]
 801ae08:	eba5 050c 	sub.w	r5, r5, ip
 801ae0c:	b2ad      	uxth	r5, r5
 801ae0e:	2d00      	cmp	r5, #0
 801ae10:	bf08      	it	eq
 801ae12:	4619      	moveq	r1, r3
 801ae14:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ae16:	bf18      	it	ne
 801ae18:	2100      	movne	r1, #0
 801ae1a:	3301      	adds	r3, #1
 801ae1c:	930d      	str	r3, [sp, #52]	; 0x34
 801ae1e:	b289      	uxth	r1, r1
 801ae20:	e700      	b.n	801ac24 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 801ae22:	bf00      	nop
 801ae24:	200137bc 	.word	0x200137bc
 801ae28:	200137b6 	.word	0x200137b6
 801ae2c:	fffff7fb 	.word	0xfffff7fb
 801ae30:	46d9      	mov	r9, fp
 801ae32:	9d00      	ldr	r5, [sp, #0]
 801ae34:	42aa      	cmp	r2, r5
 801ae36:	d0d0      	beq.n	801adda <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 801ae38:	1c55      	adds	r5, r2, #1
 801ae3a:	4422      	add	r2, r4
 801ae3c:	9517      	str	r5, [sp, #92]	; 0x5c
 801ae3e:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
 801ae42:	9a06      	ldr	r2, [sp, #24]
 801ae44:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801ae48:	4472      	add	r2, lr
 801ae4a:	9212      	str	r2, [sp, #72]	; 0x48
 801ae4c:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801ae4e:	f8b9 2000 	ldrh.w	r2, [r9]
 801ae52:	f897 a002 	ldrb.w	sl, [r7, #2]
 801ae56:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801ae58:	1216      	asrs	r6, r2, #8
 801ae5a:	fb1a fa07 	smulbb	sl, sl, r7
 801ae5e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801ae62:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801ae64:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801ae68:	fb06 a607 	mla	r6, r6, r7, sl
 801ae6c:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801ae6e:	f897 a001 	ldrb.w	sl, [r7, #1]
 801ae72:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801ae74:	10d5      	asrs	r5, r2, #3
 801ae76:	fb1a fa07 	smulbb	sl, sl, r7
 801ae7a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801ae7e:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801ae80:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801ae84:	fb05 a507 	mla	r5, r5, r7, sl
 801ae88:	9f06      	ldr	r7, [sp, #24]
 801ae8a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801ae8e:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801ae90:	00d2      	lsls	r2, r2, #3
 801ae92:	fb1e fe07 	smulbb	lr, lr, r7
 801ae96:	b2d2      	uxtb	r2, r2
 801ae98:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801ae9a:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801ae9e:	b2b6      	uxth	r6, r6
 801aea0:	fb02 e207 	mla	r2, r2, r7, lr
 801aea4:	b292      	uxth	r2, r2
 801aea6:	b2ad      	uxth	r5, r5
 801aea8:	f106 0a01 	add.w	sl, r6, #1
 801aeac:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801aeb0:	f102 0e01 	add.w	lr, r2, #1
 801aeb4:	f105 0a01 	add.w	sl, r5, #1
 801aeb8:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 801aebc:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801aec0:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801aec4:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801aec8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801aecc:	ea4e 0606 	orr.w	r6, lr, r6
 801aed0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801aed4:	ea46 060a 	orr.w	r6, r6, sl
 801aed8:	f829 6b02 	strh.w	r6, [r9], #2
 801aedc:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801aee0:	e7a7      	b.n	801ae32 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 801aee2:	f102 0e01 	add.w	lr, r2, #1
 801aee6:	4422      	add	r2, r4
 801aee8:	9f06      	ldr	r7, [sp, #24]
 801aeea:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
 801aeee:	9a06      	ldr	r2, [sp, #24]
 801aef0:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801aef4:	eb02 0a05 	add.w	sl, r2, r5
 801aef8:	4a13      	ldr	r2, [pc, #76]	; (801af48 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 801aefa:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801aefe:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 801af02:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801af06:	00d2      	lsls	r2, r2, #3
 801af08:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801af0c:	ea49 0202 	orr.w	r2, r9, r2
 801af10:	f817 9005 	ldrb.w	r9, [r7, r5]
 801af14:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801af18:	f826 2b02 	strh.w	r2, [r6], #2
 801af1c:	fa1f f28e 	uxth.w	r2, lr
 801af20:	e757      	b.n	801add2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 801af22:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801af26:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801af2a:	1a2d      	subs	r5, r5, r0
 801af2c:	b2ad      	uxth	r5, r5
 801af2e:	2d00      	cmp	r5, #0
 801af30:	bf18      	it	ne
 801af32:	2000      	movne	r0, #0
 801af34:	e730      	b.n	801ad98 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801af36:	4b05      	ldr	r3, [pc, #20]	; (801af4c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 801af38:	6818      	ldr	r0, [r3, #0]
 801af3a:	6803      	ldr	r3, [r0, #0]
 801af3c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801af3e:	4798      	blx	r3
 801af40:	b01f      	add	sp, #124	; 0x7c
 801af42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801af46:	bf00      	nop
 801af48:	fffff800 	.word	0xfffff800
 801af4c:	200137bc 	.word	0x200137bc

0801af50 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 801af50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801af54:	b091      	sub	sp, #68	; 0x44
 801af56:	469b      	mov	fp, r3
 801af58:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 801af5c:	4616      	mov	r6, r2
 801af5e:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 801af62:	f9b3 2000 	ldrsh.w	r2, [r3]
 801af66:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801af6a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801af6e:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801af72:	4604      	mov	r4, r0
 801af74:	460d      	mov	r5, r1
 801af76:	4640      	mov	r0, r8
 801af78:	4659      	mov	r1, fp
 801af7a:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801af7e:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 801af82:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 801af86:	f7f3 fc11 	bl	800e7ac <_ZN8touchgfx4RectaNERKS0_>
 801af8a:	4631      	mov	r1, r6
 801af8c:	4640      	mov	r0, r8
 801af8e:	f7f3 fc0d 	bl	800e7ac <_ZN8touchgfx4RectaNERKS0_>
 801af92:	4b74      	ldr	r3, [pc, #464]	; (801b164 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 801af94:	8818      	ldrh	r0, [r3, #0]
 801af96:	4b74      	ldr	r3, [pc, #464]	; (801b168 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 801af98:	8819      	ldrh	r1, [r3, #0]
 801af9a:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801af9e:	2b00      	cmp	r3, #0
 801afa0:	b202      	sxth	r2, r0
 801afa2:	b20e      	sxth	r6, r1
 801afa4:	da07      	bge.n	801afb6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 801afa6:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 801afaa:	4463      	add	r3, ip
 801afac:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801afb0:	2300      	movs	r3, #0
 801afb2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 801afb6:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801afba:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801afbe:	1ad2      	subs	r2, r2, r3
 801afc0:	4594      	cmp	ip, r2
 801afc2:	bfc4      	itt	gt
 801afc4:	1ac2      	subgt	r2, r0, r3
 801afc6:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 801afca:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801afce:	2a00      	cmp	r2, #0
 801afd0:	da07      	bge.n	801afe2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801afd2:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 801afd6:	4462      	add	r2, ip
 801afd8:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 801afdc:	2200      	movs	r2, #0
 801afde:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 801afe2:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 801afe6:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801afea:	eba6 060a 	sub.w	r6, r6, sl
 801afee:	42b2      	cmp	r2, r6
 801aff0:	bfc4      	itt	gt
 801aff2:	eba1 020a 	subgt.w	r2, r1, sl
 801aff6:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 801affa:	4a5c      	ldr	r2, [pc, #368]	; (801b16c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 801affc:	7812      	ldrb	r2, [r2, #0]
 801affe:	b9a2      	cbnz	r2, 801b02a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 801b000:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801b004:	4286      	cmp	r6, r0
 801b006:	4640      	mov	r0, r8
 801b008:	9303      	str	r3, [sp, #12]
 801b00a:	bf14      	ite	ne
 801b00c:	2600      	movne	r6, #0
 801b00e:	2601      	moveq	r6, #1
 801b010:	f7f3 fc0f 	bl	800e832 <_ZNK8touchgfx4Rect7isEmptyEv>
 801b014:	9b03      	ldr	r3, [sp, #12]
 801b016:	b160      	cbz	r0, 801b032 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 801b018:	2300      	movs	r3, #0
 801b01a:	8023      	strh	r3, [r4, #0]
 801b01c:	8063      	strh	r3, [r4, #2]
 801b01e:	80a3      	strh	r3, [r4, #4]
 801b020:	4620      	mov	r0, r4
 801b022:	80e3      	strh	r3, [r4, #6]
 801b024:	b011      	add	sp, #68	; 0x44
 801b026:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b02a:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801b02e:	428e      	cmp	r6, r1
 801b030:	e7e9      	b.n	801b006 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 801b032:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 801b036:	9205      	str	r2, [sp, #20]
 801b038:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801b03c:	9206      	str	r2, [sp, #24]
 801b03e:	f8bb 2000 	ldrh.w	r2, [fp]
 801b042:	900e      	str	r0, [sp, #56]	; 0x38
 801b044:	1a9b      	subs	r3, r3, r2
 801b046:	b21b      	sxth	r3, r3
 801b048:	9303      	str	r3, [sp, #12]
 801b04a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801b04e:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 801b052:	ebaa 0a03 	sub.w	sl, sl, r3
 801b056:	fa0f f38a 	sxth.w	r3, sl
 801b05a:	9304      	str	r3, [sp, #16]
 801b05c:	9b03      	ldr	r3, [sp, #12]
 801b05e:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 801b062:	9b04      	ldr	r3, [sp, #16]
 801b064:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801b068:	9b05      	ldr	r3, [sp, #20]
 801b06a:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801b06e:	a90e      	add	r1, sp, #56	; 0x38
 801b070:	9b06      	ldr	r3, [sp, #24]
 801b072:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801b076:	a80c      	add	r0, sp, #48	; 0x30
 801b078:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 801b07c:	f7f8 fb38 	bl	80136f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b080:	4640      	mov	r0, r8
 801b082:	f7f8 faf1 	bl	8013668 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b086:	a80e      	add	r0, sp, #56	; 0x38
 801b088:	f7f8 faee 	bl	8013668 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b08c:	4b38      	ldr	r3, [pc, #224]	; (801b170 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801b08e:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 801b092:	881b      	ldrh	r3, [r3, #0]
 801b094:	9307      	str	r3, [sp, #28]
 801b096:	682b      	ldr	r3, [r5, #0]
 801b098:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 801b174 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801b09c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801b09e:	4628      	mov	r0, r5
 801b0a0:	4798      	blx	r3
 801b0a2:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 801b0a6:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801b0aa:	4681      	mov	r9, r0
 801b0ac:	fb1a 3305 	smlabb	r3, sl, r5, r3
 801b0b0:	f8db 0000 	ldr.w	r0, [fp]
 801b0b4:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801b0b6:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801b0ba:	6803      	ldr	r3, [r0, #0]
 801b0bc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801b0be:	4798      	blx	r3
 801b0c0:	4607      	mov	r7, r0
 801b0c2:	f8db 0000 	ldr.w	r0, [fp]
 801b0c6:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 801b0ca:	6803      	ldr	r3, [r0, #0]
 801b0cc:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801b0d0:	9109      	str	r1, [sp, #36]	; 0x24
 801b0d2:	9208      	str	r2, [sp, #32]
 801b0d4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801b0d6:	4798      	blx	r3
 801b0d8:	f010 0f01 	tst.w	r0, #1
 801b0dc:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801b0e0:	d012      	beq.n	801b108 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 801b0e2:	f8db 0000 	ldr.w	r0, [fp]
 801b0e6:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 801b0ea:	6803      	ldr	r3, [r0, #0]
 801b0ec:	9200      	str	r2, [sp, #0]
 801b0ee:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 801b0f0:	e898 0006 	ldmia.w	r8, {r1, r2}
 801b0f4:	462b      	mov	r3, r5
 801b0f6:	47b0      	blx	r6
 801b0f8:	9b03      	ldr	r3, [sp, #12]
 801b0fa:	8023      	strh	r3, [r4, #0]
 801b0fc:	9b04      	ldr	r3, [sp, #16]
 801b0fe:	8063      	strh	r3, [r4, #2]
 801b100:	9b05      	ldr	r3, [sp, #20]
 801b102:	80a3      	strh	r3, [r4, #4]
 801b104:	9b06      	ldr	r3, [sp, #24]
 801b106:	e78b      	b.n	801b020 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 801b108:	fb09 f202 	mul.w	r2, r9, r2
 801b10c:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 801b110:	440f      	add	r7, r1
 801b112:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 801b116:	b166      	cbz	r6, 801b132 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801b118:	9a07      	ldr	r2, [sp, #28]
 801b11a:	4592      	cmp	sl, r2
 801b11c:	d109      	bne.n	801b132 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801b11e:	f8db 0000 	ldr.w	r0, [fp]
 801b122:	6802      	ldr	r2, [r0, #0]
 801b124:	fb09 f303 	mul.w	r3, r9, r3
 801b128:	6b56      	ldr	r6, [r2, #52]	; 0x34
 801b12a:	4629      	mov	r1, r5
 801b12c:	463a      	mov	r2, r7
 801b12e:	47b0      	blx	r6
 801b130:	e7e2      	b.n	801b0f8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801b132:	fb0a f303 	mul.w	r3, sl, r3
 801b136:	f8df b03c 	ldr.w	fp, [pc, #60]	; 801b174 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801b13a:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801b13e:	ea4f 064a 	mov.w	r6, sl, lsl #1
 801b142:	4545      	cmp	r5, r8
 801b144:	d2d8      	bcs.n	801b0f8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801b146:	f8db 0000 	ldr.w	r0, [fp]
 801b14a:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801b14e:	6802      	ldr	r2, [r0, #0]
 801b150:	4629      	mov	r1, r5
 801b152:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 801b156:	005b      	lsls	r3, r3, #1
 801b158:	463a      	mov	r2, r7
 801b15a:	47d0      	blx	sl
 801b15c:	444f      	add	r7, r9
 801b15e:	4435      	add	r5, r6
 801b160:	e7ef      	b.n	801b142 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801b162:	bf00      	nop
 801b164:	200137b0 	.word	0x200137b0
 801b168:	200137b2 	.word	0x200137b2
 801b16c:	200137b4 	.word	0x200137b4
 801b170:	200137b6 	.word	0x200137b6
 801b174:	200137bc 	.word	0x200137bc

0801b178 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 801b178:	b5f0      	push	{r4, r5, r6, r7, lr}
 801b17a:	4606      	mov	r6, r0
 801b17c:	b087      	sub	sp, #28
 801b17e:	460c      	mov	r4, r1
 801b180:	4617      	mov	r7, r2
 801b182:	461d      	mov	r5, r3
 801b184:	b333      	cbz	r3, 801b1d4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801b186:	4608      	mov	r0, r1
 801b188:	f7f3 fb53 	bl	800e832 <_ZNK8touchgfx4Rect7isEmptyEv>
 801b18c:	bb10      	cbnz	r0, 801b1d4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801b18e:	6820      	ldr	r0, [r4, #0]
 801b190:	6861      	ldr	r1, [r4, #4]
 801b192:	4c1c      	ldr	r4, [pc, #112]	; (801b204 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801b194:	ab04      	add	r3, sp, #16
 801b196:	c303      	stmia	r3!, {r0, r1}
 801b198:	a804      	add	r0, sp, #16
 801b19a:	f7f8 fa65 	bl	8013668 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b19e:	6820      	ldr	r0, [r4, #0]
 801b1a0:	6803      	ldr	r3, [r0, #0]
 801b1a2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801b1a4:	4798      	blx	r3
 801b1a6:	2dff      	cmp	r5, #255	; 0xff
 801b1a8:	d016      	beq.n	801b1d8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801b1aa:	f010 0f08 	tst.w	r0, #8
 801b1ae:	6820      	ldr	r0, [r4, #0]
 801b1b0:	d015      	beq.n	801b1de <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801b1b2:	2400      	movs	r4, #0
 801b1b4:	6801      	ldr	r1, [r0, #0]
 801b1b6:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801b1ba:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801b1be:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801b1c2:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801b1c6:	9401      	str	r4, [sp, #4]
 801b1c8:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801b1cc:	9400      	str	r4, [sp, #0]
 801b1ce:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 801b1d0:	4639      	mov	r1, r7
 801b1d2:	47a0      	blx	r4
 801b1d4:	b007      	add	sp, #28
 801b1d6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801b1d8:	f010 0f02 	tst.w	r0, #2
 801b1dc:	e7e7      	b.n	801b1ae <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801b1de:	6803      	ldr	r3, [r0, #0]
 801b1e0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b1e2:	4798      	blx	r3
 801b1e4:	4b08      	ldr	r3, [pc, #32]	; (801b208 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801b1e6:	881a      	ldrh	r2, [r3, #0]
 801b1e8:	6833      	ldr	r3, [r6, #0]
 801b1ea:	e9cd 7500 	strd	r7, r5, [sp]
 801b1ee:	4601      	mov	r1, r0
 801b1f0:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 801b1f2:	4630      	mov	r0, r6
 801b1f4:	ab04      	add	r3, sp, #16
 801b1f6:	47a8      	blx	r5
 801b1f8:	6820      	ldr	r0, [r4, #0]
 801b1fa:	6803      	ldr	r3, [r0, #0]
 801b1fc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b1fe:	4798      	blx	r3
 801b200:	e7e8      	b.n	801b1d4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801b202:	bf00      	nop
 801b204:	200137bc 	.word	0x200137bc
 801b208:	200137b6 	.word	0x200137b6

0801b20c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801b20c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801b210:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 801b214:	9e08      	ldr	r6, [sp, #32]
 801b216:	4688      	mov	r8, r1
 801b218:	4614      	mov	r4, r2
 801b21a:	461d      	mov	r5, r3
 801b21c:	2f00      	cmp	r7, #0
 801b21e:	f000 80a9 	beq.w	801b374 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801b222:	4618      	mov	r0, r3
 801b224:	f7f3 fb05 	bl	800e832 <_ZNK8touchgfx4Rect7isEmptyEv>
 801b228:	2800      	cmp	r0, #0
 801b22a:	f040 80a3 	bne.w	801b374 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801b22e:	f9b5 1000 	ldrsh.w	r1, [r5]
 801b232:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801b236:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801b23a:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801b23e:	fb04 1303 	mla	r3, r4, r3, r1
 801b242:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 801b246:	4365      	muls	r5, r4
 801b248:	2fff      	cmp	r7, #255	; 0xff
 801b24a:	eba4 0200 	sub.w	r2, r4, r0
 801b24e:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801b252:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801b256:	d04a      	beq.n	801b2ee <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 801b258:	b2bc      	uxth	r4, r7
 801b25a:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 801b25e:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801b262:	fa5f f788 	uxtb.w	r7, r8
 801b266:	b2f3      	uxtb	r3, r6
 801b268:	0040      	lsls	r0, r0, #1
 801b26a:	fb0e fe04 	mul.w	lr, lr, r4
 801b26e:	4367      	muls	r7, r4
 801b270:	4363      	muls	r3, r4
 801b272:	ea4f 0842 	mov.w	r8, r2, lsl #1
 801b276:	fa1f fc8c 	uxth.w	ip, ip
 801b27a:	42a9      	cmp	r1, r5
 801b27c:	d27a      	bcs.n	801b374 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801b27e:	eb01 0900 	add.w	r9, r1, r0
 801b282:	4549      	cmp	r1, r9
 801b284:	d231      	bcs.n	801b2ea <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 801b286:	880a      	ldrh	r2, [r1, #0]
 801b288:	1214      	asrs	r4, r2, #8
 801b28a:	10d6      	asrs	r6, r2, #3
 801b28c:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801b290:	00d2      	lsls	r2, r2, #3
 801b292:	b2d2      	uxtb	r2, r2
 801b294:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801b298:	fb14 f40c 	smulbb	r4, r4, ip
 801b29c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801b2a0:	4474      	add	r4, lr
 801b2a2:	fb12 f20c 	smulbb	r2, r2, ip
 801b2a6:	b2a4      	uxth	r4, r4
 801b2a8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b2ac:	441a      	add	r2, r3
 801b2ae:	b292      	uxth	r2, r2
 801b2b0:	f104 0a01 	add.w	sl, r4, #1
 801b2b4:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801b2b8:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801b2bc:	fb16 f60c 	smulbb	r6, r6, ip
 801b2c0:	f102 0a01 	add.w	sl, r2, #1
 801b2c4:	443e      	add	r6, r7
 801b2c6:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801b2ca:	b2b6      	uxth	r6, r6
 801b2cc:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801b2d0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b2d4:	4322      	orrs	r2, r4
 801b2d6:	1c74      	adds	r4, r6, #1
 801b2d8:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801b2dc:	0976      	lsrs	r6, r6, #5
 801b2de:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801b2e2:	4332      	orrs	r2, r6
 801b2e4:	f821 2b02 	strh.w	r2, [r1], #2
 801b2e8:	e7cb      	b.n	801b282 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 801b2ea:	4441      	add	r1, r8
 801b2ec:	e7c5      	b.n	801b27a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 801b2ee:	4f22      	ldr	r7, [pc, #136]	; (801b378 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 801b2f0:	0973      	lsrs	r3, r6, #5
 801b2f2:	ea08 0707 	and.w	r7, r8, r7
 801b2f6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b2fa:	433b      	orrs	r3, r7
 801b2fc:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801b300:	4333      	orrs	r3, r6
 801b302:	07e7      	lsls	r7, r4, #31
 801b304:	b29b      	uxth	r3, r3
 801b306:	d50b      	bpl.n	801b320 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 801b308:	0040      	lsls	r0, r0, #1
 801b30a:	0052      	lsls	r2, r2, #1
 801b30c:	42a9      	cmp	r1, r5
 801b30e:	d231      	bcs.n	801b374 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801b310:	180c      	adds	r4, r1, r0
 801b312:	42a1      	cmp	r1, r4
 801b314:	d202      	bcs.n	801b31c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 801b316:	f821 3b02 	strh.w	r3, [r1], #2
 801b31a:	e7fa      	b.n	801b312 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 801b31c:	4411      	add	r1, r2
 801b31e:	e7f5      	b.n	801b30c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 801b320:	078e      	lsls	r6, r1, #30
 801b322:	d008      	beq.n	801b336 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 801b324:	0066      	lsls	r6, r4, #1
 801b326:	460a      	mov	r2, r1
 801b328:	42aa      	cmp	r2, r5
 801b32a:	d202      	bcs.n	801b332 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 801b32c:	8013      	strh	r3, [r2, #0]
 801b32e:	4432      	add	r2, r6
 801b330:	e7fa      	b.n	801b328 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 801b332:	3102      	adds	r1, #2
 801b334:	3801      	subs	r0, #1
 801b336:	07c2      	lsls	r2, r0, #31
 801b338:	d50b      	bpl.n	801b352 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 801b33a:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 801b33e:	3a01      	subs	r2, #1
 801b340:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801b344:	0066      	lsls	r6, r4, #1
 801b346:	42aa      	cmp	r2, r5
 801b348:	d202      	bcs.n	801b350 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 801b34a:	8013      	strh	r3, [r2, #0]
 801b34c:	4432      	add	r2, r6
 801b34e:	e7fa      	b.n	801b346 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 801b350:	3801      	subs	r0, #1
 801b352:	b178      	cbz	r0, 801b374 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801b354:	1040      	asrs	r0, r0, #1
 801b356:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801b35a:	0080      	lsls	r0, r0, #2
 801b35c:	0064      	lsls	r4, r4, #1
 801b35e:	42a9      	cmp	r1, r5
 801b360:	d208      	bcs.n	801b374 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801b362:	180e      	adds	r6, r1, r0
 801b364:	460a      	mov	r2, r1
 801b366:	42b2      	cmp	r2, r6
 801b368:	d202      	bcs.n	801b370 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 801b36a:	f842 3b04 	str.w	r3, [r2], #4
 801b36e:	e7fa      	b.n	801b366 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 801b370:	4421      	add	r1, r4
 801b372:	e7f4      	b.n	801b35e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 801b374:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801b378:	00fff800 	.word	0x00fff800

0801b37c <_ZN8touchgfx8LCD16bppC1Ev>:
 801b37c:	2200      	movs	r2, #0
 801b37e:	4912      	ldr	r1, [pc, #72]	; (801b3c8 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 801b380:	6042      	str	r2, [r0, #4]
 801b382:	6001      	str	r1, [r0, #0]
 801b384:	e9c0 2202 	strd	r2, r2, [r0, #8]
 801b388:	e9c0 2204 	strd	r2, r2, [r0, #16]
 801b38c:	e9c0 2206 	strd	r2, r2, [r0, #24]
 801b390:	e9c0 2208 	strd	r2, r2, [r0, #32]
 801b394:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 801b398:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 801b39c:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 801b3a0:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 801b3a4:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 801b3a8:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 801b3ac:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 801b3b0:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 801b3b4:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 801b3b8:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 801b3bc:	e9c0 221e 	strd	r2, r2, [r0, #120]	; 0x78
 801b3c0:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 801b3c4:	4770      	bx	lr
 801b3c6:	bf00      	nop
 801b3c8:	0802b7a0 	.word	0x0802b7a0

0801b3cc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801b3cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b3d0:	460d      	mov	r5, r1
 801b3d2:	b08d      	sub	sp, #52	; 0x34
 801b3d4:	4604      	mov	r4, r0
 801b3d6:	6808      	ldr	r0, [r1, #0]
 801b3d8:	6849      	ldr	r1, [r1, #4]
 801b3da:	4699      	mov	r9, r3
 801b3dc:	ab08      	add	r3, sp, #32
 801b3de:	c303      	stmia	r3!, {r0, r1}
 801b3e0:	6810      	ldr	r0, [r2, #0]
 801b3e2:	6851      	ldr	r1, [r2, #4]
 801b3e4:	ab0a      	add	r3, sp, #40	; 0x28
 801b3e6:	c303      	stmia	r3!, {r0, r1}
 801b3e8:	a808      	add	r0, sp, #32
 801b3ea:	f7f8 f93d 	bl	8013668 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b3ee:	4629      	mov	r1, r5
 801b3f0:	a80a      	add	r0, sp, #40	; 0x28
 801b3f2:	f7f8 f97d 	bl	80136f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b3f6:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801b3fa:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 801b3fe:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 801b402:	4d63      	ldr	r5, [pc, #396]	; (801b590 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801b404:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 801b408:	6828      	ldr	r0, [r5, #0]
 801b40a:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801b40e:	fb11 2103 	smlabb	r1, r1, r3, r2
 801b412:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801b416:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801b41a:	440a      	add	r2, r1
 801b41c:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801b420:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801b424:	4413      	add	r3, r2
 801b426:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801b42a:	6803      	ldr	r3, [r0, #0]
 801b42c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801b42e:	4798      	blx	r3
 801b430:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801b434:	d119      	bne.n	801b46a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801b436:	f010 0f20 	tst.w	r0, #32
 801b43a:	6828      	ldr	r0, [r5, #0]
 801b43c:	d018      	beq.n	801b470 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801b43e:	2500      	movs	r5, #0
 801b440:	6801      	ldr	r1, [r0, #0]
 801b442:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801b446:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 801b44a:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801b44e:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 801b452:	9502      	str	r5, [sp, #8]
 801b454:	b2b6      	uxth	r6, r6
 801b456:	fa1f f588 	uxth.w	r5, r8
 801b45a:	9601      	str	r6, [sp, #4]
 801b45c:	9500      	str	r5, [sp, #0]
 801b45e:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 801b460:	4621      	mov	r1, r4
 801b462:	47a8      	blx	r5
 801b464:	b00d      	add	sp, #52	; 0x34
 801b466:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b46a:	f010 0f40 	tst.w	r0, #64	; 0x40
 801b46e:	e7e4      	b.n	801b43a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801b470:	6803      	ldr	r3, [r0, #0]
 801b472:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b474:	4798      	blx	r3
 801b476:	4947      	ldr	r1, [pc, #284]	; (801b594 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801b478:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801b47c:	880b      	ldrh	r3, [r1, #0]
 801b47e:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 801b482:	fb03 5202 	mla	r2, r3, r2, r5
 801b486:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801b48a:	4373      	muls	r3, r6
 801b48c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801b490:	9307      	str	r3, [sp, #28]
 801b492:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801b496:	9306      	str	r3, [sp, #24]
 801b498:	468a      	mov	sl, r1
 801b49a:	9b07      	ldr	r3, [sp, #28]
 801b49c:	4298      	cmp	r0, r3
 801b49e:	d270      	bcs.n	801b582 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801b4a0:	9b06      	ldr	r3, [sp, #24]
 801b4a2:	4621      	mov	r1, r4
 801b4a4:	eb00 0b03 	add.w	fp, r0, r3
 801b4a8:	4558      	cmp	r0, fp
 801b4aa:	d25d      	bcs.n	801b568 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 801b4ac:	f851 4b04 	ldr.w	r4, [r1], #4
 801b4b0:	0e23      	lsrs	r3, r4, #24
 801b4b2:	d014      	beq.n	801b4de <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801b4b4:	2bff      	cmp	r3, #255	; 0xff
 801b4b6:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801b4ba:	d112      	bne.n	801b4e2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801b4bc:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801b4c0:	d10f      	bne.n	801b4e2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801b4c2:	0963      	lsrs	r3, r4, #5
 801b4c4:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801b4c8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b4cc:	f02c 0c07 	bic.w	ip, ip, #7
 801b4d0:	ea43 0c0c 	orr.w	ip, r3, ip
 801b4d4:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801b4d8:	ea4c 0404 	orr.w	r4, ip, r4
 801b4dc:	8004      	strh	r4, [r0, #0]
 801b4de:	3002      	adds	r0, #2
 801b4e0:	e7e2      	b.n	801b4a8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801b4e2:	fb09 f303 	mul.w	r3, r9, r3
 801b4e6:	8807      	ldrh	r7, [r0, #0]
 801b4e8:	1c5a      	adds	r2, r3, #1
 801b4ea:	eb02 2223 	add.w	r2, r2, r3, asr #8
 801b4ee:	1212      	asrs	r2, r2, #8
 801b4f0:	123e      	asrs	r6, r7, #8
 801b4f2:	b293      	uxth	r3, r2
 801b4f4:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 801b4f8:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801b4fc:	43d2      	mvns	r2, r2
 801b4fe:	b2d2      	uxtb	r2, r2
 801b500:	10fd      	asrs	r5, r7, #3
 801b502:	fb1e fe03 	smulbb	lr, lr, r3
 801b506:	00ff      	lsls	r7, r7, #3
 801b508:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801b50c:	fb06 e602 	mla	r6, r6, r2, lr
 801b510:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801b514:	b2ff      	uxtb	r7, r7
 801b516:	fa5f fc8c 	uxtb.w	ip, ip
 801b51a:	b2e4      	uxtb	r4, r4
 801b51c:	b2b6      	uxth	r6, r6
 801b51e:	fb1c fc03 	smulbb	ip, ip, r3
 801b522:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801b526:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801b52a:	fb14 f403 	smulbb	r4, r4, r3
 801b52e:	fb05 c502 	mla	r5, r5, r2, ip
 801b532:	f106 0e01 	add.w	lr, r6, #1
 801b536:	fb07 4702 	mla	r7, r7, r2, r4
 801b53a:	b2ad      	uxth	r5, r5
 801b53c:	b2bf      	uxth	r7, r7
 801b53e:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801b542:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 801b546:	f105 0c01 	add.w	ip, r5, #1
 801b54a:	1c7e      	adds	r6, r7, #1
 801b54c:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801b550:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801b554:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801b558:	096d      	lsrs	r5, r5, #5
 801b55a:	ea46 060e 	orr.w	r6, r6, lr
 801b55e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b562:	432e      	orrs	r6, r5
 801b564:	8006      	strh	r6, [r0, #0]
 801b566:	e7ba      	b.n	801b4de <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801b568:	f8ba 3000 	ldrh.w	r3, [sl]
 801b56c:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 801b570:	eba3 0308 	sub.w	r3, r3, r8
 801b574:	eba4 0408 	sub.w	r4, r4, r8
 801b578:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b57c:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801b580:	e78b      	b.n	801b49a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801b582:	4b03      	ldr	r3, [pc, #12]	; (801b590 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801b584:	6818      	ldr	r0, [r3, #0]
 801b586:	6803      	ldr	r3, [r0, #0]
 801b588:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b58a:	4798      	blx	r3
 801b58c:	e76a      	b.n	801b464 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801b58e:	bf00      	nop
 801b590:	200137bc 	.word	0x200137bc
 801b594:	200137b6 	.word	0x200137b6

0801b598 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 801b598:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801b59c:	460c      	mov	r4, r1
 801b59e:	b085      	sub	sp, #20
 801b5a0:	6810      	ldr	r0, [r2, #0]
 801b5a2:	6851      	ldr	r1, [r2, #4]
 801b5a4:	466d      	mov	r5, sp
 801b5a6:	c503      	stmia	r5!, {r0, r1}
 801b5a8:	6818      	ldr	r0, [r3, #0]
 801b5aa:	6859      	ldr	r1, [r3, #4]
 801b5ac:	4616      	mov	r6, r2
 801b5ae:	c503      	stmia	r5!, {r0, r1}
 801b5b0:	4668      	mov	r0, sp
 801b5b2:	f7f8 f859 	bl	8013668 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b5b6:	4631      	mov	r1, r6
 801b5b8:	a802      	add	r0, sp, #8
 801b5ba:	f7f8 f899 	bl	80136f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b5be:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801b5c2:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801b5c6:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801b5ca:	4d28      	ldr	r5, [pc, #160]	; (801b66c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 801b5cc:	4e28      	ldr	r6, [pc, #160]	; (801b670 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801b5ce:	6828      	ldr	r0, [r5, #0]
 801b5d0:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801b5d4:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 801b5d8:	fb11 2103 	smlabb	r1, r1, r3, r2
 801b5dc:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801b5e0:	f8bd 1000 	ldrh.w	r1, [sp]
 801b5e4:	440a      	add	r2, r1
 801b5e6:	f8ad 2008 	strh.w	r2, [sp, #8]
 801b5ea:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801b5ee:	4413      	add	r3, r2
 801b5f0:	f8ad 300a 	strh.w	r3, [sp, #10]
 801b5f4:	6803      	ldr	r3, [r0, #0]
 801b5f6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b5f8:	4798      	blx	r3
 801b5fa:	8833      	ldrh	r3, [r6, #0]
 801b5fc:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 801b600:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801b604:	f8df e06c 	ldr.w	lr, [pc, #108]	; 801b674 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 801b608:	fb03 1202 	mla	r2, r3, r2, r1
 801b60c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801b610:	fb08 f303 	mul.w	r3, r8, r3
 801b614:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801b618:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 801b61c:	4298      	cmp	r0, r3
 801b61e:	d21d      	bcs.n	801b65c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 801b620:	eb00 080c 	add.w	r8, r0, ip
 801b624:	4540      	cmp	r0, r8
 801b626:	d20f      	bcs.n	801b648 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 801b628:	f854 1b04 	ldr.w	r1, [r4], #4
 801b62c:	ea4f 1951 	mov.w	r9, r1, lsr #5
 801b630:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801b634:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801b638:	ea42 0209 	orr.w	r2, r2, r9
 801b63c:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801b640:	430a      	orrs	r2, r1
 801b642:	f820 2b02 	strh.w	r2, [r0], #2
 801b646:	e7ed      	b.n	801b624 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 801b648:	8832      	ldrh	r2, [r6, #0]
 801b64a:	1bd2      	subs	r2, r2, r7
 801b64c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801b650:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801b654:	1bd2      	subs	r2, r2, r7
 801b656:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801b65a:	e7df      	b.n	801b61c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 801b65c:	6828      	ldr	r0, [r5, #0]
 801b65e:	6803      	ldr	r3, [r0, #0]
 801b660:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b662:	4798      	blx	r3
 801b664:	b005      	add	sp, #20
 801b666:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801b66a:	bf00      	nop
 801b66c:	200137bc 	.word	0x200137bc
 801b670:	200137b6 	.word	0x200137b6
 801b674:	fffff800 	.word	0xfffff800

0801b678 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 801b678:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801b67c:	460e      	mov	r6, r1
 801b67e:	b08e      	sub	sp, #56	; 0x38
 801b680:	4604      	mov	r4, r0
 801b682:	6808      	ldr	r0, [r1, #0]
 801b684:	6849      	ldr	r1, [r1, #4]
 801b686:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 801b860 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801b68a:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 801b864 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801b68e:	461d      	mov	r5, r3
 801b690:	ab0a      	add	r3, sp, #40	; 0x28
 801b692:	c303      	stmia	r3!, {r0, r1}
 801b694:	6810      	ldr	r0, [r2, #0]
 801b696:	6851      	ldr	r1, [r2, #4]
 801b698:	ab0c      	add	r3, sp, #48	; 0x30
 801b69a:	c303      	stmia	r3!, {r0, r1}
 801b69c:	a80a      	add	r0, sp, #40	; 0x28
 801b69e:	f7f7 ffe3 	bl	8013668 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b6a2:	4631      	mov	r1, r6
 801b6a4:	a80c      	add	r0, sp, #48	; 0x30
 801b6a6:	f7f8 f823 	bl	80136f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b6aa:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801b6ae:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801b6b2:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801b6b6:	f8d8 0000 	ldr.w	r0, [r8]
 801b6ba:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 801b6be:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801b6c2:	fb11 2103 	smlabb	r1, r1, r3, r2
 801b6c6:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801b6ca:	440c      	add	r4, r1
 801b6cc:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 801b6d0:	440a      	add	r2, r1
 801b6d2:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 801b6d6:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 801b6da:	4413      	add	r3, r2
 801b6dc:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801b6e0:	6803      	ldr	r3, [r0, #0]
 801b6e2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801b6e4:	4798      	blx	r3
 801b6e6:	2dff      	cmp	r5, #255	; 0xff
 801b6e8:	d124      	bne.n	801b734 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801b6ea:	f010 0f01 	tst.w	r0, #1
 801b6ee:	f8d8 0000 	ldr.w	r0, [r8]
 801b6f2:	d022      	beq.n	801b73a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 801b6f4:	2100      	movs	r1, #0
 801b6f6:	f8d0 c000 	ldr.w	ip, [r0]
 801b6fa:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 801b6fe:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 801b702:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801b706:	f04f 0e01 	mov.w	lr, #1
 801b70a:	f8cd e018 	str.w	lr, [sp, #24]
 801b70e:	f8b9 e000 	ldrh.w	lr, [r9]
 801b712:	9503      	str	r5, [sp, #12]
 801b714:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801b718:	b2b6      	uxth	r6, r6
 801b71a:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801b71e:	9102      	str	r1, [sp, #8]
 801b720:	b2bf      	uxth	r7, r7
 801b722:	9601      	str	r6, [sp, #4]
 801b724:	9700      	str	r7, [sp, #0]
 801b726:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 801b72a:	4621      	mov	r1, r4
 801b72c:	47a8      	blx	r5
 801b72e:	b00e      	add	sp, #56	; 0x38
 801b730:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801b734:	f010 0f04 	tst.w	r0, #4
 801b738:	e7d9      	b.n	801b6ee <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801b73a:	6803      	ldr	r3, [r0, #0]
 801b73c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b73e:	4798      	blx	r3
 801b740:	f8b9 3000 	ldrh.w	r3, [r9]
 801b744:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801b748:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 801b74c:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801b750:	fb03 1202 	mla	r2, r3, r2, r1
 801b754:	ebac 0c07 	sub.w	ip, ip, r7
 801b758:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801b75c:	435e      	muls	r6, r3
 801b75e:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801b762:	2dff      	cmp	r5, #255	; 0xff
 801b764:	eba3 0707 	sub.w	r7, r3, r7
 801b768:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801b76c:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801b770:	ea4f 0747 	mov.w	r7, r7, lsl #1
 801b774:	d049      	beq.n	801b80a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801b776:	43eb      	mvns	r3, r5
 801b778:	fa1f f985 	uxth.w	r9, r5
 801b77c:	b2db      	uxtb	r3, r3
 801b77e:	42b0      	cmp	r0, r6
 801b780:	d266      	bcs.n	801b850 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801b782:	eb00 0a0e 	add.w	sl, r0, lr
 801b786:	4550      	cmp	r0, sl
 801b788:	4621      	mov	r1, r4
 801b78a:	f104 0403 	add.w	r4, r4, #3
 801b78e:	d25b      	bcs.n	801b848 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801b790:	8802      	ldrh	r2, [r0, #0]
 801b792:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801b796:	ea4f 2822 	mov.w	r8, r2, asr #8
 801b79a:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801b79e:	fb11 f109 	smulbb	r1, r1, r9
 801b7a2:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801b7a6:	10d5      	asrs	r5, r2, #3
 801b7a8:	fb08 1803 	mla	r8, r8, r3, r1
 801b7ac:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801b7b0:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801b7b4:	fb11 f109 	smulbb	r1, r1, r9
 801b7b8:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801b7bc:	fb05 1503 	mla	r5, r5, r3, r1
 801b7c0:	00d2      	lsls	r2, r2, #3
 801b7c2:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801b7c6:	b2d2      	uxtb	r2, r2
 801b7c8:	fb11 f109 	smulbb	r1, r1, r9
 801b7cc:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801b7d0:	fa1f f888 	uxth.w	r8, r8
 801b7d4:	fb02 1203 	mla	r2, r2, r3, r1
 801b7d8:	b292      	uxth	r2, r2
 801b7da:	f108 0101 	add.w	r1, r8, #1
 801b7de:	b2ad      	uxth	r5, r5
 801b7e0:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801b7e4:	1c51      	adds	r1, r2, #1
 801b7e6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801b7ea:	1c69      	adds	r1, r5, #1
 801b7ec:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801b7f0:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801b7f4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b7f8:	096d      	lsrs	r5, r5, #5
 801b7fa:	ea42 0208 	orr.w	r2, r2, r8
 801b7fe:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b802:	432a      	orrs	r2, r5
 801b804:	f820 2b02 	strh.w	r2, [r0], #2
 801b808:	e7bd      	b.n	801b786 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801b80a:	4a14      	ldr	r2, [pc, #80]	; (801b85c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 801b80c:	42b0      	cmp	r0, r6
 801b80e:	d21f      	bcs.n	801b850 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801b810:	eb00 050e 	add.w	r5, r0, lr
 801b814:	42a8      	cmp	r0, r5
 801b816:	4621      	mov	r1, r4
 801b818:	f104 0403 	add.w	r4, r4, #3
 801b81c:	d210      	bcs.n	801b840 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801b81e:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801b822:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801b826:	00db      	lsls	r3, r3, #3
 801b828:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 801b82c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b830:	430b      	orrs	r3, r1
 801b832:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801b836:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801b83a:	f820 3b02 	strh.w	r3, [r0], #2
 801b83e:	e7e9      	b.n	801b814 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 801b840:	4438      	add	r0, r7
 801b842:	eb01 040c 	add.w	r4, r1, ip
 801b846:	e7e1      	b.n	801b80c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 801b848:	4438      	add	r0, r7
 801b84a:	eb01 040c 	add.w	r4, r1, ip
 801b84e:	e796      	b.n	801b77e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801b850:	4b03      	ldr	r3, [pc, #12]	; (801b860 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801b852:	6818      	ldr	r0, [r3, #0]
 801b854:	6803      	ldr	r3, [r0, #0]
 801b856:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b858:	4798      	blx	r3
 801b85a:	e768      	b.n	801b72e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 801b85c:	fffff800 	.word	0xfffff800
 801b860:	200137bc 	.word	0x200137bc
 801b864:	200137b6 	.word	0x200137b6

0801b868 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801b868:	b4f0      	push	{r4, r5, r6, r7}
 801b86a:	4616      	mov	r6, r2
 801b86c:	2e01      	cmp	r6, #1
 801b86e:	461c      	mov	r4, r3
 801b870:	460d      	mov	r5, r1
 801b872:	9a04      	ldr	r2, [sp, #16]
 801b874:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801b878:	f89d 7018 	ldrb.w	r7, [sp, #24]
 801b87c:	d012      	beq.n	801b8a4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 801b87e:	d303      	bcc.n	801b888 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 801b880:	2e02      	cmp	r6, #2
 801b882:	d00a      	beq.n	801b89a <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 801b884:	bcf0      	pop	{r4, r5, r6, r7}
 801b886:	4770      	bx	lr
 801b888:	6805      	ldr	r5, [r0, #0]
 801b88a:	e9cd 3704 	strd	r3, r7, [sp, #16]
 801b88e:	68ed      	ldr	r5, [r5, #12]
 801b890:	4613      	mov	r3, r2
 801b892:	46ac      	mov	ip, r5
 801b894:	4622      	mov	r2, r4
 801b896:	bcf0      	pop	{r4, r5, r6, r7}
 801b898:	4760      	bx	ip
 801b89a:	4621      	mov	r1, r4
 801b89c:	4628      	mov	r0, r5
 801b89e:	bcf0      	pop	{r4, r5, r6, r7}
 801b8a0:	f7ff bd94 	b.w	801b3cc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801b8a4:	4621      	mov	r1, r4
 801b8a6:	4628      	mov	r0, r5
 801b8a8:	bcf0      	pop	{r4, r5, r6, r7}
 801b8aa:	f7ff bee5 	b.w	801b678 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

0801b8b0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801b8b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b8b4:	4681      	mov	r9, r0
 801b8b6:	b093      	sub	sp, #76	; 0x4c
 801b8b8:	6810      	ldr	r0, [r2, #0]
 801b8ba:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 801b8be:	4f6d      	ldr	r7, [pc, #436]	; (801ba74 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 801b8c0:	4688      	mov	r8, r1
 801b8c2:	6851      	ldr	r1, [r2, #4]
 801b8c4:	ac0e      	add	r4, sp, #56	; 0x38
 801b8c6:	c403      	stmia	r4!, {r0, r1}
 801b8c8:	6818      	ldr	r0, [r3, #0]
 801b8ca:	6859      	ldr	r1, [r3, #4]
 801b8cc:	ac10      	add	r4, sp, #64	; 0x40
 801b8ce:	4616      	mov	r6, r2
 801b8d0:	c403      	stmia	r4!, {r0, r1}
 801b8d2:	a80e      	add	r0, sp, #56	; 0x38
 801b8d4:	f7f7 fec8 	bl	8013668 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b8d8:	4631      	mov	r1, r6
 801b8da:	a810      	add	r0, sp, #64	; 0x40
 801b8dc:	f7f7 ff08 	bl	80136f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b8e0:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801b8e4:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 801b8e8:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801b8ec:	4e62      	ldr	r6, [pc, #392]	; (801ba78 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801b8ee:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 801b8f2:	6830      	ldr	r0, [r6, #0]
 801b8f4:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 801b8f8:	fb11 2103 	smlabb	r1, r1, r3, r2
 801b8fc:	4489      	add	r9, r1
 801b8fe:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 801b902:	440a      	add	r2, r1
 801b904:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 801b908:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801b90c:	4413      	add	r3, r2
 801b90e:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801b912:	6803      	ldr	r3, [r0, #0]
 801b914:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801b916:	4798      	blx	r3
 801b918:	f010 0f80 	tst.w	r0, #128	; 0x80
 801b91c:	6830      	ldr	r0, [r6, #0]
 801b91e:	d01d      	beq.n	801b95c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 801b920:	2200      	movs	r2, #0
 801b922:	6801      	ldr	r1, [r0, #0]
 801b924:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801b928:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801b92c:	220b      	movs	r2, #11
 801b92e:	9207      	str	r2, [sp, #28]
 801b930:	883a      	ldrh	r2, [r7, #0]
 801b932:	9206      	str	r2, [sp, #24]
 801b934:	2201      	movs	r2, #1
 801b936:	e9cd a204 	strd	sl, r2, [sp, #16]
 801b93a:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 801b93e:	9203      	str	r2, [sp, #12]
 801b940:	b2a4      	uxth	r4, r4
 801b942:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801b946:	9200      	str	r2, [sp, #0]
 801b948:	b2ad      	uxth	r5, r5
 801b94a:	9502      	str	r5, [sp, #8]
 801b94c:	9401      	str	r4, [sp, #4]
 801b94e:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 801b950:	4642      	mov	r2, r8
 801b952:	4649      	mov	r1, r9
 801b954:	47a0      	blx	r4
 801b956:	b013      	add	sp, #76	; 0x4c
 801b958:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b95c:	6803      	ldr	r3, [r0, #0]
 801b95e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b960:	4798      	blx	r3
 801b962:	883b      	ldrh	r3, [r7, #0]
 801b964:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801b968:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 801b96c:	fb03 1202 	mla	r2, r3, r2, r1
 801b970:	435d      	muls	r5, r3
 801b972:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801b976:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 801b97a:	920c      	str	r2, [sp, #48]	; 0x30
 801b97c:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 801b980:	1b12      	subs	r2, r2, r4
 801b982:	920d      	str	r2, [sp, #52]	; 0x34
 801b984:	0062      	lsls	r2, r4, #1
 801b986:	1b1c      	subs	r4, r3, r4
 801b988:	0063      	lsls	r3, r4, #1
 801b98a:	920a      	str	r2, [sp, #40]	; 0x28
 801b98c:	930b      	str	r3, [sp, #44]	; 0x2c
 801b98e:	f04f 0e04 	mov.w	lr, #4
 801b992:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801b994:	4298      	cmp	r0, r3
 801b996:	d266      	bcs.n	801ba66 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 801b998:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b99a:	eb00 0b03 	add.w	fp, r0, r3
 801b99e:	4558      	cmp	r0, fp
 801b9a0:	d25c      	bcs.n	801ba5c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 801b9a2:	f819 3b01 	ldrb.w	r3, [r9], #1
 801b9a6:	fb1e e303 	smlabb	r3, lr, r3, lr
 801b9aa:	f858 2003 	ldr.w	r2, [r8, r3]
 801b9ae:	0e11      	lsrs	r1, r2, #24
 801b9b0:	d012      	beq.n	801b9d8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801b9b2:	29ff      	cmp	r1, #255	; 0xff
 801b9b4:	ea4f 2712 	mov.w	r7, r2, lsr #8
 801b9b8:	d110      	bne.n	801b9dc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801b9ba:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801b9be:	d10d      	bne.n	801b9dc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801b9c0:	0953      	lsrs	r3, r2, #5
 801b9c2:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 801b9c6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b9ca:	f027 0707 	bic.w	r7, r7, #7
 801b9ce:	431f      	orrs	r7, r3
 801b9d0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801b9d4:	433a      	orrs	r2, r7
 801b9d6:	8002      	strh	r2, [r0, #0]
 801b9d8:	3002      	adds	r0, #2
 801b9da:	e7e0      	b.n	801b99e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 801b9dc:	fb0a f101 	mul.w	r1, sl, r1
 801b9e0:	8806      	ldrh	r6, [r0, #0]
 801b9e2:	1c4b      	adds	r3, r1, #1
 801b9e4:	eb03 2321 	add.w	r3, r3, r1, asr #8
 801b9e8:	1235      	asrs	r5, r6, #8
 801b9ea:	10f4      	asrs	r4, r6, #3
 801b9ec:	121b      	asrs	r3, r3, #8
 801b9ee:	00f6      	lsls	r6, r6, #3
 801b9f0:	b299      	uxth	r1, r3
 801b9f2:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801b9f6:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801b9fa:	b2f6      	uxtb	r6, r6
 801b9fc:	43db      	mvns	r3, r3
 801b9fe:	b2d2      	uxtb	r2, r2
 801ba00:	b2db      	uxtb	r3, r3
 801ba02:	fb1c fc01 	smulbb	ip, ip, r1
 801ba06:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801ba0a:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801ba0e:	fb12 f201 	smulbb	r2, r2, r1
 801ba12:	fb05 c503 	mla	r5, r5, r3, ip
 801ba16:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801ba1a:	b2ff      	uxtb	r7, r7
 801ba1c:	fb06 2203 	mla	r2, r6, r3, r2
 801ba20:	b2ad      	uxth	r5, r5
 801ba22:	fb17 f701 	smulbb	r7, r7, r1
 801ba26:	b292      	uxth	r2, r2
 801ba28:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 801ba2c:	fb04 7403 	mla	r4, r4, r3, r7
 801ba30:	f105 0c01 	add.w	ip, r5, #1
 801ba34:	1c57      	adds	r7, r2, #1
 801ba36:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801ba3a:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801ba3e:	b2a4      	uxth	r4, r4
 801ba40:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801ba44:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801ba48:	433d      	orrs	r5, r7
 801ba4a:	1c67      	adds	r7, r4, #1
 801ba4c:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 801ba50:	0964      	lsrs	r4, r4, #5
 801ba52:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801ba56:	4325      	orrs	r5, r4
 801ba58:	8005      	strh	r5, [r0, #0]
 801ba5a:	e7bd      	b.n	801b9d8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801ba5c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ba5e:	4418      	add	r0, r3
 801ba60:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ba62:	4499      	add	r9, r3
 801ba64:	e795      	b.n	801b992 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 801ba66:	4b04      	ldr	r3, [pc, #16]	; (801ba78 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801ba68:	6818      	ldr	r0, [r3, #0]
 801ba6a:	6803      	ldr	r3, [r0, #0]
 801ba6c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ba6e:	4798      	blx	r3
 801ba70:	e771      	b.n	801b956 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 801ba72:	bf00      	nop
 801ba74:	200137b6 	.word	0x200137b6
 801ba78:	200137bc 	.word	0x200137bc

0801ba7c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 801ba7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ba80:	b087      	sub	sp, #28
 801ba82:	4680      	mov	r8, r0
 801ba84:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 801ba88:	460d      	mov	r5, r1
 801ba8a:	4614      	mov	r4, r2
 801ba8c:	2e00      	cmp	r6, #0
 801ba8e:	f000 80b9 	beq.w	801bc04 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 801ba92:	6810      	ldr	r0, [r2, #0]
 801ba94:	6851      	ldr	r1, [r2, #4]
 801ba96:	af02      	add	r7, sp, #8
 801ba98:	c703      	stmia	r7!, {r0, r1}
 801ba9a:	6818      	ldr	r0, [r3, #0]
 801ba9c:	6859      	ldr	r1, [r3, #4]
 801ba9e:	af04      	add	r7, sp, #16
 801baa0:	c703      	stmia	r7!, {r0, r1}
 801baa2:	a802      	add	r0, sp, #8
 801baa4:	f7f7 fde0 	bl	8013668 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801baa8:	4621      	mov	r1, r4
 801baaa:	a804      	add	r0, sp, #16
 801baac:	f7f7 fe20 	bl	80136f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801bab0:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801bab4:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801bab8:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 801babc:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 801bac0:	fb14 2103 	smlabb	r1, r4, r3, r2
 801bac4:	eb08 0401 	add.w	r4, r8, r1
 801bac8:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801bacc:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801bad0:	440a      	add	r2, r1
 801bad2:	f8ad 2010 	strh.w	r2, [sp, #16]
 801bad6:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801bada:	4413      	add	r3, r2
 801badc:	f8ad 3012 	strh.w	r3, [sp, #18]
 801bae0:	4b4a      	ldr	r3, [pc, #296]	; (801bc0c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801bae2:	6818      	ldr	r0, [r3, #0]
 801bae4:	6803      	ldr	r3, [r0, #0]
 801bae6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801bae8:	4798      	blx	r3
 801baea:	4b49      	ldr	r3, [pc, #292]	; (801bc10 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 801baec:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801baf0:	881a      	ldrh	r2, [r3, #0]
 801baf2:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801baf6:	2eff      	cmp	r6, #255	; 0xff
 801baf8:	fb02 c101 	mla	r1, r2, r1, ip
 801bafc:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801bb00:	fb02 f207 	mul.w	r2, r2, r7
 801bb04:	f105 0104 	add.w	r1, r5, #4
 801bb08:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 801bb0c:	461d      	mov	r5, r3
 801bb0e:	d05a      	beq.n	801bbc6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 801bb10:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 801bb14:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801bb18:	b2b6      	uxth	r6, r6
 801bb1a:	fa1f fe8e 	uxth.w	lr, lr
 801bb1e:	9301      	str	r3, [sp, #4]
 801bb20:	4282      	cmp	r2, r0
 801bb22:	d96a      	bls.n	801bbfa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801bb24:	eb00 0b0a 	add.w	fp, r0, sl
 801bb28:	4583      	cmp	fp, r0
 801bb2a:	d940      	bls.n	801bbae <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 801bb2c:	f814 3b01 	ldrb.w	r3, [r4], #1
 801bb30:	8805      	ldrh	r5, [r0, #0]
 801bb32:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801bb36:	122f      	asrs	r7, r5, #8
 801bb38:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801bb3c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801bb40:	fb17 f70e 	smulbb	r7, r7, lr
 801bb44:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801bb48:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801bb4c:	00ed      	lsls	r5, r5, #3
 801bb4e:	fb0c 7c06 	mla	ip, ip, r6, r7
 801bb52:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801bb56:	10df      	asrs	r7, r3, #3
 801bb58:	b2ed      	uxtb	r5, r5
 801bb5a:	00db      	lsls	r3, r3, #3
 801bb5c:	fa1f fc8c 	uxth.w	ip, ip
 801bb60:	fb19 f90e 	smulbb	r9, r9, lr
 801bb64:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801bb68:	b2db      	uxtb	r3, r3
 801bb6a:	fb15 f50e 	smulbb	r5, r5, lr
 801bb6e:	fb07 9706 	mla	r7, r7, r6, r9
 801bb72:	fb03 5306 	mla	r3, r3, r6, r5
 801bb76:	f10c 0901 	add.w	r9, ip, #1
 801bb7a:	b29b      	uxth	r3, r3
 801bb7c:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801bb80:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 801bb84:	f103 0c01 	add.w	ip, r3, #1
 801bb88:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801bb8c:	b2bf      	uxth	r7, r7
 801bb8e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801bb92:	ea4c 0c09 	orr.w	ip, ip, r9
 801bb96:	f107 0901 	add.w	r9, r7, #1
 801bb9a:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801bb9e:	097f      	lsrs	r7, r7, #5
 801bba0:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801bba4:	ea4c 0c07 	orr.w	ip, ip, r7
 801bba8:	f820 cb02 	strh.w	ip, [r0], #2
 801bbac:	e7bc      	b.n	801bb28 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 801bbae:	9b01      	ldr	r3, [sp, #4]
 801bbb0:	881b      	ldrh	r3, [r3, #0]
 801bbb2:	eba3 0308 	sub.w	r3, r3, r8
 801bbb6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801bbba:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801bbbe:	eba3 0308 	sub.w	r3, r3, r8
 801bbc2:	441c      	add	r4, r3
 801bbc4:	e7ac      	b.n	801bb20 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 801bbc6:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801bbca:	4282      	cmp	r2, r0
 801bbcc:	d915      	bls.n	801bbfa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801bbce:	eb00 060a 	add.w	r6, r0, sl
 801bbd2:	4286      	cmp	r6, r0
 801bbd4:	d906      	bls.n	801bbe4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 801bbd6:	f814 3b01 	ldrb.w	r3, [r4], #1
 801bbda:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801bbde:	f820 3b02 	strh.w	r3, [r0], #2
 801bbe2:	e7f6      	b.n	801bbd2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 801bbe4:	882b      	ldrh	r3, [r5, #0]
 801bbe6:	eba3 0308 	sub.w	r3, r3, r8
 801bbea:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801bbee:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801bbf2:	eba3 0308 	sub.w	r3, r3, r8
 801bbf6:	441c      	add	r4, r3
 801bbf8:	e7e7      	b.n	801bbca <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 801bbfa:	4b04      	ldr	r3, [pc, #16]	; (801bc0c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801bbfc:	6818      	ldr	r0, [r3, #0]
 801bbfe:	6803      	ldr	r3, [r0, #0]
 801bc00:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801bc02:	4798      	blx	r3
 801bc04:	b007      	add	sp, #28
 801bc06:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bc0a:	bf00      	nop
 801bc0c:	200137bc 	.word	0x200137bc
 801bc10:	200137b6 	.word	0x200137b6

0801bc14 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801bc14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bc18:	b091      	sub	sp, #68	; 0x44
 801bc1a:	4680      	mov	r8, r0
 801bc1c:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 801bc20:	460f      	mov	r7, r1
 801bc22:	4614      	mov	r4, r2
 801bc24:	2d00      	cmp	r5, #0
 801bc26:	d051      	beq.n	801bccc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801bc28:	6810      	ldr	r0, [r2, #0]
 801bc2a:	6851      	ldr	r1, [r2, #4]
 801bc2c:	f8df 9200 	ldr.w	r9, [pc, #512]	; 801be30 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 801bc30:	ae0c      	add	r6, sp, #48	; 0x30
 801bc32:	c603      	stmia	r6!, {r0, r1}
 801bc34:	6818      	ldr	r0, [r3, #0]
 801bc36:	6859      	ldr	r1, [r3, #4]
 801bc38:	ae0e      	add	r6, sp, #56	; 0x38
 801bc3a:	c603      	stmia	r6!, {r0, r1}
 801bc3c:	a80c      	add	r0, sp, #48	; 0x30
 801bc3e:	f7f7 fd13 	bl	8013668 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801bc42:	4621      	mov	r1, r4
 801bc44:	a80e      	add	r0, sp, #56	; 0x38
 801bc46:	f7f7 fd53 	bl	80136f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801bc4a:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 801bc4e:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801bc52:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 801bc56:	f8d9 0000 	ldr.w	r0, [r9]
 801bc5a:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801bc5e:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 801bc62:	fb11 2103 	smlabb	r1, r1, r3, r2
 801bc66:	eb08 0401 	add.w	r4, r8, r1
 801bc6a:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 801bc6e:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 801be34 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 801bc72:	440a      	add	r2, r1
 801bc74:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 801bc78:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801bc7c:	4413      	add	r3, r2
 801bc7e:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 801bc82:	6803      	ldr	r3, [r0, #0]
 801bc84:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801bc86:	4798      	blx	r3
 801bc88:	f010 0f80 	tst.w	r0, #128	; 0x80
 801bc8c:	f8d9 0000 	ldr.w	r0, [r9]
 801bc90:	d01f      	beq.n	801bcd2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 801bc92:	2200      	movs	r2, #0
 801bc94:	6801      	ldr	r1, [r0, #0]
 801bc96:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801bc9a:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801bc9e:	220b      	movs	r2, #11
 801bca0:	9207      	str	r2, [sp, #28]
 801bca2:	f8b8 2000 	ldrh.w	r2, [r8]
 801bca6:	9206      	str	r2, [sp, #24]
 801bca8:	2201      	movs	r2, #1
 801bcaa:	e9cd 5204 	strd	r5, r2, [sp, #16]
 801bcae:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 801bcb2:	9203      	str	r2, [sp, #12]
 801bcb4:	fa1f f28a 	uxth.w	r2, sl
 801bcb8:	9202      	str	r2, [sp, #8]
 801bcba:	b2b6      	uxth	r6, r6
 801bcbc:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801bcc0:	9200      	str	r2, [sp, #0]
 801bcc2:	9601      	str	r6, [sp, #4]
 801bcc4:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 801bcc6:	463a      	mov	r2, r7
 801bcc8:	4621      	mov	r1, r4
 801bcca:	47a8      	blx	r5
 801bccc:	b011      	add	sp, #68	; 0x44
 801bcce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bcd2:	6803      	ldr	r3, [r0, #0]
 801bcd4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801bcd6:	4798      	blx	r3
 801bcd8:	f8b8 2000 	ldrh.w	r2, [r8]
 801bcdc:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801bce0:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 801bce4:	2dff      	cmp	r5, #255	; 0xff
 801bce6:	fb02 1303 	mla	r3, r2, r3, r1
 801bcea:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801bcee:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801bcf2:	fb0a fa02 	mul.w	sl, sl, r2
 801bcf6:	d062      	beq.n	801bdbe <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 801bcf8:	ea6f 0c05 	mvn.w	ip, r5
 801bcfc:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 801bd00:	930a      	str	r3, [sp, #40]	; 0x28
 801bd02:	b2ad      	uxth	r5, r5
 801bd04:	fa5f fc8c 	uxtb.w	ip, ip
 801bd08:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 801bd0c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801bd0e:	4298      	cmp	r0, r3
 801bd10:	f080 8085 	bcs.w	801be1e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801bd14:	eb00 0b09 	add.w	fp, r0, r9
 801bd18:	4558      	cmp	r0, fp
 801bd1a:	d246      	bcs.n	801bdaa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 801bd1c:	f814 eb01 	ldrb.w	lr, [r4], #1
 801bd20:	2303      	movs	r3, #3
 801bd22:	2204      	movs	r2, #4
 801bd24:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 801bd28:	eb07 0a0e 	add.w	sl, r7, lr
 801bd2c:	8803      	ldrh	r3, [r0, #0]
 801bd2e:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801bd32:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801bd36:	1219      	asrs	r1, r3, #8
 801bd38:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801bd3c:	fb18 f805 	smulbb	r8, r8, r5
 801bd40:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801bd44:	10da      	asrs	r2, r3, #3
 801bd46:	fb01 810c 	mla	r1, r1, ip, r8
 801bd4a:	00db      	lsls	r3, r3, #3
 801bd4c:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801bd50:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801bd54:	b2db      	uxtb	r3, r3
 801bd56:	fb18 f805 	smulbb	r8, r8, r5
 801bd5a:	fb1e fe05 	smulbb	lr, lr, r5
 801bd5e:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801bd62:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801bd66:	b289      	uxth	r1, r1
 801bd68:	fb02 820c 	mla	r2, r2, ip, r8
 801bd6c:	fb03 e30c 	mla	r3, r3, ip, lr
 801bd70:	b292      	uxth	r2, r2
 801bd72:	b29b      	uxth	r3, r3
 801bd74:	f101 0801 	add.w	r8, r1, #1
 801bd78:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 801bd7c:	f103 0e01 	add.w	lr, r3, #1
 801bd80:	f102 0801 	add.w	r8, r2, #1
 801bd84:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 801bd88:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 801bd8c:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801bd90:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801bd94:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801bd98:	ea4e 0101 	orr.w	r1, lr, r1
 801bd9c:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801bda0:	ea41 0108 	orr.w	r1, r1, r8
 801bda4:	f820 1b02 	strh.w	r1, [r0], #2
 801bda8:	e7b6      	b.n	801bd18 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 801bdaa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801bdac:	881b      	ldrh	r3, [r3, #0]
 801bdae:	1b9b      	subs	r3, r3, r6
 801bdb0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801bdb4:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801bdb8:	1b9b      	subs	r3, r3, r6
 801bdba:	441c      	add	r4, r3
 801bdbc:	e7a6      	b.n	801bd0c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 801bdbe:	491b      	ldr	r1, [pc, #108]	; (801be2c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 801bdc0:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 801bdc4:	2203      	movs	r2, #3
 801bdc6:	2504      	movs	r5, #4
 801bdc8:	4550      	cmp	r0, sl
 801bdca:	d228      	bcs.n	801be1e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801bdcc:	eb00 0c09 	add.w	ip, r0, r9
 801bdd0:	4560      	cmp	r0, ip
 801bdd2:	4623      	mov	r3, r4
 801bdd4:	d219      	bcs.n	801be0a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 801bdd6:	f893 e000 	ldrb.w	lr, [r3]
 801bdda:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 801bdde:	eb07 0b0e 	add.w	fp, r7, lr
 801bde2:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801bde6:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801bdea:	f89b b001 	ldrb.w	fp, [fp, #1]
 801bdee:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801bdf2:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801bdf6:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801bdfa:	ea43 030b 	orr.w	r3, r3, fp
 801bdfe:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801be02:	3401      	adds	r4, #1
 801be04:	f820 3b02 	strh.w	r3, [r0], #2
 801be08:	e7e2      	b.n	801bdd0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 801be0a:	f8b8 3000 	ldrh.w	r3, [r8]
 801be0e:	1b9b      	subs	r3, r3, r6
 801be10:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801be14:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801be18:	1b9b      	subs	r3, r3, r6
 801be1a:	441c      	add	r4, r3
 801be1c:	e7d4      	b.n	801bdc8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 801be1e:	4b04      	ldr	r3, [pc, #16]	; (801be30 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 801be20:	6818      	ldr	r0, [r3, #0]
 801be22:	6803      	ldr	r3, [r0, #0]
 801be24:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801be26:	4798      	blx	r3
 801be28:	e750      	b.n	801bccc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801be2a:	bf00      	nop
 801be2c:	fffff800 	.word	0xfffff800
 801be30:	200137bc 	.word	0x200137bc
 801be34:	200137b6 	.word	0x200137b6

0801be38 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801be38:	b4f0      	push	{r4, r5, r6, r7}
 801be3a:	460c      	mov	r4, r1
 801be3c:	4611      	mov	r1, r2
 801be3e:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801be42:	780f      	ldrb	r7, [r1, #0]
 801be44:	784e      	ldrb	r6, [r1, #1]
 801be46:	2f01      	cmp	r7, #1
 801be48:	461a      	mov	r2, r3
 801be4a:	9b04      	ldr	r3, [sp, #16]
 801be4c:	d036      	beq.n	801bebc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x84>
 801be4e:	d31e      	bcc.n	801be8e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
 801be50:	2f02      	cmp	r7, #2
 801be52:	d14a      	bne.n	801beea <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801be54:	2e03      	cmp	r6, #3
 801be56:	d848      	bhi.n	801beea <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801be58:	e8df f006 	tbb	[pc, r6]
 801be5c:	16140702 	.word	0x16140702
 801be60:	9504      	str	r5, [sp, #16]
 801be62:	4620      	mov	r0, r4
 801be64:	bcf0      	pop	{r4, r5, r6, r7}
 801be66:	f7ff be09 	b.w	801ba7c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801be6a:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801be6c:	2800      	cmp	r0, #0
 801be6e:	d03c      	beq.n	801beea <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801be70:	6806      	ldr	r6, [r0, #0]
 801be72:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801be76:	68b5      	ldr	r5, [r6, #8]
 801be78:	4613      	mov	r3, r2
 801be7a:	46ac      	mov	ip, r5
 801be7c:	460a      	mov	r2, r1
 801be7e:	4621      	mov	r1, r4
 801be80:	bcf0      	pop	{r4, r5, r6, r7}
 801be82:	4760      	bx	ip
 801be84:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801be86:	e7f1      	b.n	801be6c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801be88:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801be8c:	e7ee      	b.n	801be6c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801be8e:	2e03      	cmp	r6, #3
 801be90:	d82b      	bhi.n	801beea <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801be92:	e8df f006 	tbb	[pc, r6]
 801be96:	0702      	.short	0x0702
 801be98:	100e      	.short	0x100e
 801be9a:	9504      	str	r5, [sp, #16]
 801be9c:	4620      	mov	r0, r4
 801be9e:	bcf0      	pop	{r4, r5, r6, r7}
 801bea0:	f7ff bd06 	b.w	801b8b0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801bea4:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801bea6:	b300      	cbz	r0, 801beea <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801bea8:	6806      	ldr	r6, [r0, #0]
 801beaa:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801beae:	68f5      	ldr	r5, [r6, #12]
 801beb0:	e7e2      	b.n	801be78 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801beb2:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801beb4:	e7f7      	b.n	801bea6 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801beb6:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801beba:	e7f4      	b.n	801bea6 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801bebc:	2e03      	cmp	r6, #3
 801bebe:	d814      	bhi.n	801beea <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801bec0:	e8df f006 	tbb	[pc, r6]
 801bec4:	100e0702 	.word	0x100e0702
 801bec8:	9504      	str	r5, [sp, #16]
 801beca:	4620      	mov	r0, r4
 801becc:	bcf0      	pop	{r4, r5, r6, r7}
 801bece:	f7ff bea1 	b.w	801bc14 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801bed2:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801bed4:	b148      	cbz	r0, 801beea <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801bed6:	6806      	ldr	r6, [r0, #0]
 801bed8:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801bedc:	6935      	ldr	r5, [r6, #16]
 801bede:	e7cb      	b.n	801be78 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801bee0:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801bee2:	e7f7      	b.n	801bed4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801bee4:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801bee8:	e7f4      	b.n	801bed4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801beea:	bcf0      	pop	{r4, r5, r6, r7}
 801beec:	4770      	bx	lr
	...

0801bef0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801bef0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bef4:	4604      	mov	r4, r0
 801bef6:	b087      	sub	sp, #28
 801bef8:	6810      	ldr	r0, [r2, #0]
 801befa:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 801befe:	f8df 9238 	ldr.w	r9, [pc, #568]	; 801c138 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801bf02:	460e      	mov	r6, r1
 801bf04:	6851      	ldr	r1, [r2, #4]
 801bf06:	ad02      	add	r5, sp, #8
 801bf08:	c503      	stmia	r5!, {r0, r1}
 801bf0a:	6818      	ldr	r0, [r3, #0]
 801bf0c:	6859      	ldr	r1, [r3, #4]
 801bf0e:	ad04      	add	r5, sp, #16
 801bf10:	4617      	mov	r7, r2
 801bf12:	c503      	stmia	r5!, {r0, r1}
 801bf14:	a802      	add	r0, sp, #8
 801bf16:	f7f7 fba7 	bl	8013668 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801bf1a:	4639      	mov	r1, r7
 801bf1c:	a804      	add	r0, sp, #16
 801bf1e:	f7f7 fbe7 	bl	80136f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801bf22:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801bf26:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801bf2a:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801bf2e:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801bf32:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801bf36:	fb11 2103 	smlabb	r1, r1, r3, r2
 801bf3a:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801bf3e:	440e      	add	r6, r1
 801bf40:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801bf44:	440a      	add	r2, r1
 801bf46:	f8ad 2010 	strh.w	r2, [sp, #16]
 801bf4a:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801bf4e:	4413      	add	r3, r2
 801bf50:	f8ad 3012 	strh.w	r3, [sp, #18]
 801bf54:	4b77      	ldr	r3, [pc, #476]	; (801c134 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801bf56:	6818      	ldr	r0, [r3, #0]
 801bf58:	6803      	ldr	r3, [r0, #0]
 801bf5a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801bf5c:	4798      	blx	r3
 801bf5e:	f8b9 b000 	ldrh.w	fp, [r9]
 801bf62:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801bf66:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801bf6a:	fb0b 2303 	mla	r3, fp, r3, r2
 801bf6e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801bf72:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801bf76:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801bf7a:	fb05 f50b 	mul.w	r5, r5, fp
 801bf7e:	9300      	str	r3, [sp, #0]
 801bf80:	d069      	beq.n	801c056 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801bf82:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801bf86:	4558      	cmp	r0, fp
 801bf88:	f080 80cc 	bcs.w	801c124 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801bf8c:	9b00      	ldr	r3, [sp, #0]
 801bf8e:	18c3      	adds	r3, r0, r3
 801bf90:	9301      	str	r3, [sp, #4]
 801bf92:	4631      	mov	r1, r6
 801bf94:	9b01      	ldr	r3, [sp, #4]
 801bf96:	4298      	cmp	r0, r3
 801bf98:	d24f      	bcs.n	801c03a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801bf9a:	f811 2b01 	ldrb.w	r2, [r1], #1
 801bf9e:	2a00      	cmp	r2, #0
 801bfa0:	d048      	beq.n	801c034 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801bfa2:	fb0a f202 	mul.w	r2, sl, r2
 801bfa6:	1c53      	adds	r3, r2, #1
 801bfa8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801bfac:	121b      	asrs	r3, r3, #8
 801bfae:	d041      	beq.n	801c034 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801bfb0:	8802      	ldrh	r2, [r0, #0]
 801bfb2:	f8b4 c000 	ldrh.w	ip, [r4]
 801bfb6:	b29e      	uxth	r6, r3
 801bfb8:	1215      	asrs	r5, r2, #8
 801bfba:	43db      	mvns	r3, r3
 801bfbc:	b2db      	uxtb	r3, r3
 801bfbe:	ea4f 272c 	mov.w	r7, ip, asr #8
 801bfc2:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801bfc6:	fb15 f503 	smulbb	r5, r5, r3
 801bfca:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801bfce:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801bfd2:	00d2      	lsls	r2, r2, #3
 801bfd4:	fb07 5706 	mla	r7, r7, r6, r5
 801bfd8:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801bfdc:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801bfe0:	b2d2      	uxtb	r2, r2
 801bfe2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801bfe6:	b2bf      	uxth	r7, r7
 801bfe8:	fb1e fe03 	smulbb	lr, lr, r3
 801bfec:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801bff0:	fa5f fc8c 	uxtb.w	ip, ip
 801bff4:	fb12 f203 	smulbb	r2, r2, r3
 801bff8:	fb05 e506 	mla	r5, r5, r6, lr
 801bffc:	fb0c 2c06 	mla	ip, ip, r6, r2
 801c000:	f107 0e01 	add.w	lr, r7, #1
 801c004:	fa1f fc8c 	uxth.w	ip, ip
 801c008:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801c00c:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 801c010:	f10c 0701 	add.w	r7, ip, #1
 801c014:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801c018:	b2ad      	uxth	r5, r5
 801c01a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801c01e:	ea47 070e 	orr.w	r7, r7, lr
 801c022:	f105 0e01 	add.w	lr, r5, #1
 801c026:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801c02a:	096d      	lsrs	r5, r5, #5
 801c02c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c030:	432f      	orrs	r7, r5
 801c032:	8007      	strh	r7, [r0, #0]
 801c034:	3002      	adds	r0, #2
 801c036:	3402      	adds	r4, #2
 801c038:	e7ac      	b.n	801bf94 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801c03a:	f8b9 3000 	ldrh.w	r3, [r9]
 801c03e:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801c042:	eba3 0308 	sub.w	r3, r3, r8
 801c046:	eba6 0608 	sub.w	r6, r6, r8
 801c04a:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801c04e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801c052:	440e      	add	r6, r1
 801c054:	e797      	b.n	801bf86 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801c056:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801c05a:	42a8      	cmp	r0, r5
 801c05c:	d262      	bcs.n	801c124 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801c05e:	9b00      	ldr	r3, [sp, #0]
 801c060:	4631      	mov	r1, r6
 801c062:	eb00 0b03 	add.w	fp, r0, r3
 801c066:	4558      	cmp	r0, fp
 801c068:	d24e      	bcs.n	801c108 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801c06a:	f811 3b01 	ldrb.w	r3, [r1], #1
 801c06e:	b12b      	cbz	r3, 801c07c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801c070:	2bff      	cmp	r3, #255	; 0xff
 801c072:	f8b4 e000 	ldrh.w	lr, [r4]
 801c076:	d104      	bne.n	801c082 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 801c078:	f8a0 e000 	strh.w	lr, [r0]
 801c07c:	3002      	adds	r0, #2
 801c07e:	3402      	adds	r4, #2
 801c080:	e7f1      	b.n	801c066 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801c082:	8802      	ldrh	r2, [r0, #0]
 801c084:	b29f      	uxth	r7, r3
 801c086:	1216      	asrs	r6, r2, #8
 801c088:	43db      	mvns	r3, r3
 801c08a:	b2db      	uxtb	r3, r3
 801c08c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801c090:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801c094:	fb16 f603 	smulbb	r6, r6, r3
 801c098:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801c09c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c0a0:	00d2      	lsls	r2, r2, #3
 801c0a2:	fb0c 6c07 	mla	ip, ip, r7, r6
 801c0a6:	b2d2      	uxtb	r2, r2
 801c0a8:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801c0ac:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801c0b0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801c0b4:	fb1a fa03 	smulbb	sl, sl, r3
 801c0b8:	fa1f fc8c 	uxth.w	ip, ip
 801c0bc:	fb12 f303 	smulbb	r3, r2, r3
 801c0c0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801c0c4:	fa5f fe8e 	uxtb.w	lr, lr
 801c0c8:	fb06 a607 	mla	r6, r6, r7, sl
 801c0cc:	f10c 0201 	add.w	r2, ip, #1
 801c0d0:	fb0e 3307 	mla	r3, lr, r7, r3
 801c0d4:	b2b6      	uxth	r6, r6
 801c0d6:	b29b      	uxth	r3, r3
 801c0d8:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801c0dc:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 801c0e0:	f106 0a01 	add.w	sl, r6, #1
 801c0e4:	f103 0c01 	add.w	ip, r3, #1
 801c0e8:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801c0ec:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801c0f0:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801c0f4:	0976      	lsrs	r6, r6, #5
 801c0f6:	ea4c 0c02 	orr.w	ip, ip, r2
 801c0fa:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801c0fe:	ea4c 0c06 	orr.w	ip, ip, r6
 801c102:	f8a0 c000 	strh.w	ip, [r0]
 801c106:	e7b9      	b.n	801c07c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801c108:	f8b9 3000 	ldrh.w	r3, [r9]
 801c10c:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801c110:	eba3 0308 	sub.w	r3, r3, r8
 801c114:	eba6 0608 	sub.w	r6, r6, r8
 801c118:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801c11c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801c120:	440e      	add	r6, r1
 801c122:	e79a      	b.n	801c05a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 801c124:	4b03      	ldr	r3, [pc, #12]	; (801c134 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801c126:	6818      	ldr	r0, [r3, #0]
 801c128:	6803      	ldr	r3, [r0, #0]
 801c12a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c12c:	4798      	blx	r3
 801c12e:	b007      	add	sp, #28
 801c130:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c134:	200137bc 	.word	0x200137bc
 801c138:	200137b6 	.word	0x200137b6

0801c13c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801c13c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c140:	b089      	sub	sp, #36	; 0x24
 801c142:	4682      	mov	sl, r0
 801c144:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 801c148:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801c14a:	460f      	mov	r7, r1
 801c14c:	4691      	mov	r9, r2
 801c14e:	4698      	mov	r8, r3
 801c150:	2e00      	cmp	r6, #0
 801c152:	d03d      	beq.n	801c1d0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801c154:	4608      	mov	r0, r1
 801c156:	f7fa fe59 	bl	8016e0c <_ZNK8touchgfx6Bitmap8getWidthEv>
 801c15a:	4605      	mov	r5, r0
 801c15c:	4638      	mov	r0, r7
 801c15e:	f7fa fe89 	bl	8016e74 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801c162:	f8ad 000e 	strh.w	r0, [sp, #14]
 801c166:	4638      	mov	r0, r7
 801c168:	f8ad 9008 	strh.w	r9, [sp, #8]
 801c16c:	f8ad 500c 	strh.w	r5, [sp, #12]
 801c170:	f8ad 800a 	strh.w	r8, [sp, #10]
 801c174:	f7fa ff36 	bl	8016fe4 <_ZNK8touchgfx6Bitmap7getDataEv>
 801c178:	4605      	mov	r5, r0
 801c17a:	4638      	mov	r0, r7
 801c17c:	f7fa ff62 	bl	8017044 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801c180:	4681      	mov	r9, r0
 801c182:	4638      	mov	r0, r7
 801c184:	f7fa ffb2 	bl	80170ec <_ZNK8touchgfx6Bitmap9getFormatEv>
 801c188:	280b      	cmp	r0, #11
 801c18a:	d821      	bhi.n	801c1d0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801c18c:	e8df f000 	tbb	[pc, r0]
 801c190:	2006aebe 	.word	0x2006aebe
 801c194:	20202020 	.word	0x20202020
 801c198:	b5202020 	.word	0xb5202020
 801c19c:	4bb0      	ldr	r3, [pc, #704]	; (801c460 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 801c19e:	6818      	ldr	r0, [r3, #0]
 801c1a0:	6803      	ldr	r3, [r0, #0]
 801c1a2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c1a4:	4798      	blx	r3
 801c1a6:	2eff      	cmp	r6, #255	; 0xff
 801c1a8:	d101      	bne.n	801c1ae <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801c1aa:	0683      	lsls	r3, r0, #26
 801c1ac:	d506      	bpl.n	801c1bc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 801c1ae:	4633      	mov	r3, r6
 801c1b0:	4622      	mov	r2, r4
 801c1b2:	a902      	add	r1, sp, #8
 801c1b4:	4628      	mov	r0, r5
 801c1b6:	f7ff f909 	bl	801b3cc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801c1ba:	e009      	b.n	801c1d0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801c1bc:	4638      	mov	r0, r7
 801c1be:	f7fa fed9 	bl	8016f74 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801c1c2:	b940      	cbnz	r0, 801c1d6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 801c1c4:	4623      	mov	r3, r4
 801c1c6:	aa02      	add	r2, sp, #8
 801c1c8:	4629      	mov	r1, r5
 801c1ca:	4650      	mov	r0, sl
 801c1cc:	f7ff f9e4 	bl	801b598 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801c1d0:	b009      	add	sp, #36	; 0x24
 801c1d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c1d6:	f10d 0818 	add.w	r8, sp, #24
 801c1da:	4639      	mov	r1, r7
 801c1dc:	4640      	mov	r0, r8
 801c1de:	f7fa fe7d 	bl	8016edc <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801c1e2:	e898 0003 	ldmia.w	r8, {r0, r1}
 801c1e6:	af04      	add	r7, sp, #16
 801c1e8:	e887 0003 	stmia.w	r7, {r0, r1}
 801c1ec:	4638      	mov	r0, r7
 801c1ee:	4621      	mov	r1, r4
 801c1f0:	f7f2 fadc 	bl	800e7ac <_ZN8touchgfx4RectaNERKS0_>
 801c1f4:	4638      	mov	r0, r7
 801c1f6:	f7f2 fb1c 	bl	800e832 <_ZNK8touchgfx4Rect7isEmptyEv>
 801c1fa:	2800      	cmp	r0, #0
 801c1fc:	d1d7      	bne.n	801c1ae <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801c1fe:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801c202:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801c206:	4293      	cmp	r3, r2
 801c208:	dd12      	ble.n	801c230 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 801c20a:	1a9b      	subs	r3, r3, r2
 801c20c:	f9b4 0000 	ldrsh.w	r0, [r4]
 801c210:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801c214:	f8ad 0018 	strh.w	r0, [sp, #24]
 801c218:	f8ad 201a 	strh.w	r2, [sp, #26]
 801c21c:	f8ad 101c 	strh.w	r1, [sp, #28]
 801c220:	f8ad 301e 	strh.w	r3, [sp, #30]
 801c224:	4642      	mov	r2, r8
 801c226:	4633      	mov	r3, r6
 801c228:	a902      	add	r1, sp, #8
 801c22a:	4628      	mov	r0, r5
 801c22c:	f7ff f8ce 	bl	801b3cc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801c230:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801c234:	f9b4 2000 	ldrsh.w	r2, [r4]
 801c238:	4293      	cmp	r3, r2
 801c23a:	dd12      	ble.n	801c262 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 801c23c:	1a9b      	subs	r3, r3, r2
 801c23e:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801c242:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801c246:	f8ad 2018 	strh.w	r2, [sp, #24]
 801c24a:	f8ad 001a 	strh.w	r0, [sp, #26]
 801c24e:	f8ad 301c 	strh.w	r3, [sp, #28]
 801c252:	f8ad 101e 	strh.w	r1, [sp, #30]
 801c256:	23ff      	movs	r3, #255	; 0xff
 801c258:	4642      	mov	r2, r8
 801c25a:	a902      	add	r1, sp, #8
 801c25c:	4628      	mov	r0, r5
 801c25e:	f7ff f8b5 	bl	801b3cc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801c262:	463b      	mov	r3, r7
 801c264:	aa02      	add	r2, sp, #8
 801c266:	4629      	mov	r1, r5
 801c268:	4650      	mov	r0, sl
 801c26a:	f7ff f995 	bl	801b598 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801c26e:	88a2      	ldrh	r2, [r4, #4]
 801c270:	8823      	ldrh	r3, [r4, #0]
 801c272:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801c276:	4413      	add	r3, r2
 801c278:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801c27c:	440a      	add	r2, r1
 801c27e:	b29b      	uxth	r3, r3
 801c280:	b292      	uxth	r2, r2
 801c282:	b211      	sxth	r1, r2
 801c284:	b218      	sxth	r0, r3
 801c286:	4288      	cmp	r0, r1
 801c288:	dd12      	ble.n	801c2b0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 801c28a:	1a9b      	subs	r3, r3, r2
 801c28c:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801c290:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 801c294:	f8ad 1018 	strh.w	r1, [sp, #24]
 801c298:	f8ad 301c 	strh.w	r3, [sp, #28]
 801c29c:	f8ad 001e 	strh.w	r0, [sp, #30]
 801c2a0:	23ff      	movs	r3, #255	; 0xff
 801c2a2:	4642      	mov	r2, r8
 801c2a4:	a902      	add	r1, sp, #8
 801c2a6:	4628      	mov	r0, r5
 801c2a8:	f8ad 601a 	strh.w	r6, [sp, #26]
 801c2ac:	f7ff f88e 	bl	801b3cc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801c2b0:	88e2      	ldrh	r2, [r4, #6]
 801c2b2:	8863      	ldrh	r3, [r4, #2]
 801c2b4:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801c2b8:	4413      	add	r3, r2
 801c2ba:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801c2be:	440a      	add	r2, r1
 801c2c0:	b29b      	uxth	r3, r3
 801c2c2:	b292      	uxth	r2, r2
 801c2c4:	b211      	sxth	r1, r2
 801c2c6:	b218      	sxth	r0, r3
 801c2c8:	4288      	cmp	r0, r1
 801c2ca:	dd81      	ble.n	801c1d0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801c2cc:	1a9b      	subs	r3, r3, r2
 801c2ce:	f9b4 6000 	ldrsh.w	r6, [r4]
 801c2d2:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801c2d6:	f8ad 301e 	strh.w	r3, [sp, #30]
 801c2da:	f8ad 6018 	strh.w	r6, [sp, #24]
 801c2de:	f8ad 101a 	strh.w	r1, [sp, #26]
 801c2e2:	f8ad 001c 	strh.w	r0, [sp, #28]
 801c2e6:	23ff      	movs	r3, #255	; 0xff
 801c2e8:	4642      	mov	r2, r8
 801c2ea:	e762      	b.n	801c1b2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 801c2ec:	4633      	mov	r3, r6
 801c2ee:	4622      	mov	r2, r4
 801c2f0:	a902      	add	r1, sp, #8
 801c2f2:	4628      	mov	r0, r5
 801c2f4:	f7ff f9c0 	bl	801b678 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801c2f8:	e76a      	b.n	801c1d0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801c2fa:	e9cd 4600 	strd	r4, r6, [sp]
 801c2fe:	ab02      	add	r3, sp, #8
 801c300:	464a      	mov	r2, r9
 801c302:	4629      	mov	r1, r5
 801c304:	4650      	mov	r0, sl
 801c306:	f7ff fd97 	bl	801be38 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801c30a:	e761      	b.n	801c1d0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801c30c:	4638      	mov	r0, r7
 801c30e:	f7fa fe31 	bl	8016f74 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801c312:	b950      	cbnz	r0, 801c32a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 801c314:	e9cd 6000 	strd	r6, r0, [sp]
 801c318:	f8da 3000 	ldr.w	r3, [sl]
 801c31c:	aa02      	add	r2, sp, #8
 801c31e:	68de      	ldr	r6, [r3, #12]
 801c320:	4629      	mov	r1, r5
 801c322:	4623      	mov	r3, r4
 801c324:	4650      	mov	r0, sl
 801c326:	47b0      	blx	r6
 801c328:	e752      	b.n	801c1d0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801c32a:	f10d 0818 	add.w	r8, sp, #24
 801c32e:	4639      	mov	r1, r7
 801c330:	4640      	mov	r0, r8
 801c332:	f7fa fdd3 	bl	8016edc <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801c336:	e898 0003 	ldmia.w	r8, {r0, r1}
 801c33a:	af04      	add	r7, sp, #16
 801c33c:	e887 0003 	stmia.w	r7, {r0, r1}
 801c340:	4638      	mov	r0, r7
 801c342:	4621      	mov	r1, r4
 801c344:	f7f2 fa32 	bl	800e7ac <_ZN8touchgfx4RectaNERKS0_>
 801c348:	4638      	mov	r0, r7
 801c34a:	f7f2 fa72 	bl	800e832 <_ZNK8touchgfx4Rect7isEmptyEv>
 801c34e:	b138      	cbz	r0, 801c360 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 801c350:	9600      	str	r6, [sp, #0]
 801c352:	4623      	mov	r3, r4
 801c354:	aa02      	add	r2, sp, #8
 801c356:	4649      	mov	r1, r9
 801c358:	4628      	mov	r0, r5
 801c35a:	f7ff fdc9 	bl	801bef0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801c35e:	e737      	b.n	801c1d0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801c360:	e9cd 6000 	strd	r6, r0, [sp]
 801c364:	f8da 3000 	ldr.w	r3, [sl]
 801c368:	aa02      	add	r2, sp, #8
 801c36a:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801c36e:	4629      	mov	r1, r5
 801c370:	463b      	mov	r3, r7
 801c372:	4650      	mov	r0, sl
 801c374:	47d8      	blx	fp
 801c376:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801c37a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801c37e:	4293      	cmp	r3, r2
 801c380:	dd13      	ble.n	801c3aa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 801c382:	f9b4 0000 	ldrsh.w	r0, [r4]
 801c386:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801c38a:	f8ad 0018 	strh.w	r0, [sp, #24]
 801c38e:	1a9b      	subs	r3, r3, r2
 801c390:	f8ad 201a 	strh.w	r2, [sp, #26]
 801c394:	f8ad 101c 	strh.w	r1, [sp, #28]
 801c398:	f8ad 301e 	strh.w	r3, [sp, #30]
 801c39c:	9600      	str	r6, [sp, #0]
 801c39e:	4643      	mov	r3, r8
 801c3a0:	aa02      	add	r2, sp, #8
 801c3a2:	4649      	mov	r1, r9
 801c3a4:	4628      	mov	r0, r5
 801c3a6:	f7ff fda3 	bl	801bef0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801c3aa:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801c3ae:	f9b4 2000 	ldrsh.w	r2, [r4]
 801c3b2:	4293      	cmp	r3, r2
 801c3b4:	dd13      	ble.n	801c3de <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 801c3b6:	1a9b      	subs	r3, r3, r2
 801c3b8:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801c3bc:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801c3c0:	f8ad 2018 	strh.w	r2, [sp, #24]
 801c3c4:	f8ad 001a 	strh.w	r0, [sp, #26]
 801c3c8:	f8ad 301c 	strh.w	r3, [sp, #28]
 801c3cc:	f8ad 101e 	strh.w	r1, [sp, #30]
 801c3d0:	9600      	str	r6, [sp, #0]
 801c3d2:	4643      	mov	r3, r8
 801c3d4:	aa02      	add	r2, sp, #8
 801c3d6:	4649      	mov	r1, r9
 801c3d8:	4628      	mov	r0, r5
 801c3da:	f7ff fd89 	bl	801bef0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801c3de:	88a2      	ldrh	r2, [r4, #4]
 801c3e0:	8823      	ldrh	r3, [r4, #0]
 801c3e2:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801c3e6:	4413      	add	r3, r2
 801c3e8:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801c3ec:	440a      	add	r2, r1
 801c3ee:	b29b      	uxth	r3, r3
 801c3f0:	b292      	uxth	r2, r2
 801c3f2:	b211      	sxth	r1, r2
 801c3f4:	b218      	sxth	r0, r3
 801c3f6:	4288      	cmp	r0, r1
 801c3f8:	dd13      	ble.n	801c422 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 801c3fa:	1a9b      	subs	r3, r3, r2
 801c3fc:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801c400:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 801c404:	f8ad 1018 	strh.w	r1, [sp, #24]
 801c408:	f8ad 301c 	strh.w	r3, [sp, #28]
 801c40c:	f8ad 001e 	strh.w	r0, [sp, #30]
 801c410:	9600      	str	r6, [sp, #0]
 801c412:	4643      	mov	r3, r8
 801c414:	aa02      	add	r2, sp, #8
 801c416:	4649      	mov	r1, r9
 801c418:	4628      	mov	r0, r5
 801c41a:	f8ad 701a 	strh.w	r7, [sp, #26]
 801c41e:	f7ff fd67 	bl	801bef0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801c422:	88e2      	ldrh	r2, [r4, #6]
 801c424:	8863      	ldrh	r3, [r4, #2]
 801c426:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801c42a:	4413      	add	r3, r2
 801c42c:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801c430:	440a      	add	r2, r1
 801c432:	b29b      	uxth	r3, r3
 801c434:	b292      	uxth	r2, r2
 801c436:	b211      	sxth	r1, r2
 801c438:	b218      	sxth	r0, r3
 801c43a:	4288      	cmp	r0, r1
 801c43c:	f77f aec8 	ble.w	801c1d0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801c440:	f9b4 7000 	ldrsh.w	r7, [r4]
 801c444:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801c448:	f8ad 7018 	strh.w	r7, [sp, #24]
 801c44c:	1a9b      	subs	r3, r3, r2
 801c44e:	f8ad 301e 	strh.w	r3, [sp, #30]
 801c452:	f8ad 101a 	strh.w	r1, [sp, #26]
 801c456:	f8ad 001c 	strh.w	r0, [sp, #28]
 801c45a:	9600      	str	r6, [sp, #0]
 801c45c:	4643      	mov	r3, r8
 801c45e:	e779      	b.n	801c354 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 801c460:	200137bc 	.word	0x200137bc

0801c464 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 801c464:	b180      	cbz	r0, 801c488 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 801c466:	2903      	cmp	r1, #3
 801c468:	d81c      	bhi.n	801c4a4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801c46a:	e8df f001 	tbb	[pc, r1]
 801c46e:	1d02      	.short	0x1d02
 801c470:	1f08      	.short	0x1f08
 801c472:	4b10      	ldr	r3, [pc, #64]	; (801c4b4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801c474:	8818      	ldrh	r0, [r3, #0]
 801c476:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801c47a:	4240      	negs	r0, r0
 801c47c:	4770      	bx	lr
 801c47e:	4b0d      	ldr	r3, [pc, #52]	; (801c4b4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801c480:	8818      	ldrh	r0, [r3, #0]
 801c482:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801c486:	4770      	bx	lr
 801c488:	2903      	cmp	r1, #3
 801c48a:	d80b      	bhi.n	801c4a4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801c48c:	a301      	add	r3, pc, #4	; (adr r3, 801c494 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801c48e:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801c492:	bf00      	nop
 801c494:	0801c4a9 	.word	0x0801c4a9
 801c498:	0801c47f 	.word	0x0801c47f
 801c49c:	0801c4ad 	.word	0x0801c4ad
 801c4a0:	0801c473 	.word	0x0801c473
 801c4a4:	2000      	movs	r0, #0
 801c4a6:	4770      	bx	lr
 801c4a8:	2001      	movs	r0, #1
 801c4aa:	4770      	bx	lr
 801c4ac:	f04f 30ff 	mov.w	r0, #4294967295
 801c4b0:	4770      	bx	lr
 801c4b2:	bf00      	nop
 801c4b4:	200137b6 	.word	0x200137b6

0801c4b8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 801c4b8:	b180      	cbz	r0, 801c4dc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801c4ba:	2903      	cmp	r1, #3
 801c4bc:	d81c      	bhi.n	801c4f8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801c4be:	e8df f001 	tbb	[pc, r1]
 801c4c2:	021d      	.short	0x021d
 801c4c4:	071f      	.short	0x071f
 801c4c6:	4b10      	ldr	r3, [pc, #64]	; (801c508 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801c4c8:	8818      	ldrh	r0, [r3, #0]
 801c4ca:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801c4ce:	4770      	bx	lr
 801c4d0:	4b0d      	ldr	r3, [pc, #52]	; (801c508 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801c4d2:	8818      	ldrh	r0, [r3, #0]
 801c4d4:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801c4d8:	4240      	negs	r0, r0
 801c4da:	4770      	bx	lr
 801c4dc:	2903      	cmp	r1, #3
 801c4de:	d80b      	bhi.n	801c4f8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801c4e0:	a301      	add	r3, pc, #4	; (adr r3, 801c4e8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801c4e2:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801c4e6:	bf00      	nop
 801c4e8:	0801c4c7 	.word	0x0801c4c7
 801c4ec:	0801c501 	.word	0x0801c501
 801c4f0:	0801c4d1 	.word	0x0801c4d1
 801c4f4:	0801c4fd 	.word	0x0801c4fd
 801c4f8:	2000      	movs	r0, #0
 801c4fa:	4770      	bx	lr
 801c4fc:	2001      	movs	r0, #1
 801c4fe:	4770      	bx	lr
 801c500:	f04f 30ff 	mov.w	r0, #4294967295
 801c504:	4770      	bx	lr
 801c506:	bf00      	nop
 801c508:	200137b6 	.word	0x200137b6

0801c50c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801c50c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c510:	b099      	sub	sp, #100	; 0x64
 801c512:	910b      	str	r1, [sp, #44]	; 0x2c
 801c514:	a914      	add	r1, sp, #80	; 0x50
 801c516:	e881 000c 	stmia.w	r1, {r2, r3}
 801c51a:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 801c51e:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 801c522:	f891 900d 	ldrb.w	r9, [r1, #13]
 801c526:	9309      	str	r3, [sp, #36]	; 0x24
 801c528:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801c52c:	9310      	str	r3, [sp, #64]	; 0x40
 801c52e:	ea4f 1749 	mov.w	r7, r9, lsl #5
 801c532:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 801c536:	930c      	str	r3, [sp, #48]	; 0x30
 801c538:	f407 7380 	and.w	r3, r7, #256	; 0x100
 801c53c:	798f      	ldrb	r7, [r1, #6]
 801c53e:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 801c542:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 801c546:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 801c54a:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 801c54e:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 801c552:	431f      	orrs	r7, r3
 801c554:	f000 8195 	beq.w	801c882 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801c558:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801c55c:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801c560:	f891 9007 	ldrb.w	r9, [r1, #7]
 801c564:	ea59 0903 	orrs.w	r9, r9, r3
 801c568:	f000 818b 	beq.w	801c882 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801c56c:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801c570:	b29b      	uxth	r3, r3
 801c572:	2d00      	cmp	r5, #0
 801c574:	f000 812e 	beq.w	801c7d4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 801c578:	1aed      	subs	r5, r5, r3
 801c57a:	b2ad      	uxth	r5, r5
 801c57c:	042b      	lsls	r3, r5, #16
 801c57e:	d502      	bpl.n	801c586 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801c580:	1b64      	subs	r4, r4, r5
 801c582:	b224      	sxth	r4, r4
 801c584:	2500      	movs	r5, #0
 801c586:	f9b2 1000 	ldrsh.w	r1, [r2]
 801c58a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 801c58e:	428c      	cmp	r4, r1
 801c590:	b28b      	uxth	r3, r1
 801c592:	bfbf      	itttt	lt
 801c594:	18ed      	addlt	r5, r5, r3
 801c596:	1b2c      	sublt	r4, r5, r4
 801c598:	b2a5      	uxthlt	r5, r4
 801c59a:	460c      	movlt	r4, r1
 801c59c:	8891      	ldrh	r1, [r2, #4]
 801c59e:	440b      	add	r3, r1
 801c5a0:	b21b      	sxth	r3, r3
 801c5a2:	930f      	str	r3, [sp, #60]	; 0x3c
 801c5a4:	88d3      	ldrh	r3, [r2, #6]
 801c5a6:	8852      	ldrh	r2, [r2, #2]
 801c5a8:	4413      	add	r3, r2
 801c5aa:	b21b      	sxth	r3, r3
 801c5ac:	930d      	str	r3, [sp, #52]	; 0x34
 801c5ae:	4bbe      	ldr	r3, [pc, #760]	; (801c8a8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 801c5b0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801c5b2:	f893 b000 	ldrb.w	fp, [r3]
 801c5b6:	f10b 3cff 	add.w	ip, fp, #4294967295
 801c5ba:	f1dc 0300 	rsbs	r3, ip, #0
 801c5be:	eb43 030c 	adc.w	r3, r3, ip
 801c5c2:	930e      	str	r3, [sp, #56]	; 0x38
 801c5c4:	4621      	mov	r1, r4
 801c5c6:	4653      	mov	r3, sl
 801c5c8:	a814      	add	r0, sp, #80	; 0x50
 801c5ca:	f7f6 fec2 	bl	8013352 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801c5ce:	4621      	mov	r1, r4
 801c5d0:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 801c5d4:	4653      	mov	r3, sl
 801c5d6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801c5d8:	a814      	add	r0, sp, #80	; 0x50
 801c5da:	f7f6 fed7 	bl	801338c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801c5de:	a918      	add	r1, sp, #96	; 0x60
 801c5e0:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801c5e4:	a817      	add	r0, sp, #92	; 0x5c
 801c5e6:	f7f6 fffd 	bl	80135e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801c5ea:	f1ba 0f00 	cmp.w	sl, #0
 801c5ee:	f040 80f4 	bne.w	801c7da <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 801c5f2:	f1bb 0f01 	cmp.w	fp, #1
 801c5f6:	f040 80f8 	bne.w	801c7ea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 801c5fa:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c5fc:	2b00      	cmp	r3, #0
 801c5fe:	f040 8145 	bne.w	801c88c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 801c602:	b2ba      	uxth	r2, r7
 801c604:	b905      	cbnz	r5, 801c608 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 801c606:	b16e      	cbz	r6, 801c624 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 801c608:	fb06 5302 	mla	r3, r6, r2, r5
 801c60c:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801c60e:	fb08 f303 	mul.w	r3, r8, r3
 801c612:	4631      	mov	r1, r6
 801c614:	f003 0607 	and.w	r6, r3, #7
 801c618:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 801c61c:	9328      	str	r3, [sp, #160]	; 0xa0
 801c61e:	eba9 0301 	sub.w	r3, r9, r1
 801c622:	930a      	str	r3, [sp, #40]	; 0x28
 801c624:	4651      	mov	r1, sl
 801c626:	980e      	ldr	r0, [sp, #56]	; 0x38
 801c628:	f7ff ff1c 	bl	801c464 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801c62c:	4681      	mov	r9, r0
 801c62e:	980e      	ldr	r0, [sp, #56]	; 0x38
 801c630:	f7ff ff42 	bl	801c4b8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 801c634:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c636:	9909      	ldr	r1, [sp, #36]	; 0x24
 801c638:	eba3 0a01 	sub.w	sl, r3, r1
 801c63c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c63e:	459a      	cmp	sl, r3
 801c640:	bfa8      	it	ge
 801c642:	469a      	movge	sl, r3
 801c644:	f1ba 0f00 	cmp.w	sl, #0
 801c648:	4683      	mov	fp, r0
 801c64a:	f340 811a 	ble.w	801c882 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801c64e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801c650:	1b64      	subs	r4, r4, r5
 801c652:	1b1c      	subs	r4, r3, r4
 801c654:	42bc      	cmp	r4, r7
 801c656:	bfd4      	ite	le
 801c658:	ebc5 0504 	rsble	r5, r5, r4
 801c65c:	ebc5 0507 	rsbgt	r5, r5, r7
 801c660:	2d00      	cmp	r5, #0
 801c662:	f340 810e 	ble.w	801c882 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801c666:	1b52      	subs	r2, r2, r5
 801c668:	fb08 f302 	mul.w	r3, r8, r2
 801c66c:	930f      	str	r3, [sp, #60]	; 0x3c
 801c66e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801c670:	2b00      	cmp	r3, #0
 801c672:	f040 8116 	bne.w	801c8a2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 801c676:	4b8d      	ldr	r3, [pc, #564]	; (801c8ac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 801c678:	6818      	ldr	r0, [r3, #0]
 801c67a:	6803      	ldr	r3, [r0, #0]
 801c67c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c67e:	4798      	blx	r3
 801c680:	2301      	movs	r3, #1
 801c682:	fa03 f308 	lsl.w	r3, r3, r8
 801c686:	4a8a      	ldr	r2, [pc, #552]	; (801c8b0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 801c688:	3b01      	subs	r3, #1
 801c68a:	b2db      	uxtb	r3, r3
 801c68c:	8811      	ldrh	r1, [r2, #0]
 801c68e:	930e      	str	r3, [sp, #56]	; 0x38
 801c690:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 801c694:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 801c698:	fb01 2303 	mla	r3, r1, r3, r2
 801c69c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801c6a0:	930a      	str	r3, [sp, #40]	; 0x28
 801c6a2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801c6a4:	f3c3 4307 	ubfx	r3, r3, #16, #8
 801c6a8:	9313      	str	r3, [sp, #76]	; 0x4c
 801c6aa:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801c6ac:	0a19      	lsrs	r1, r3, #8
 801c6ae:	b2cb      	uxtb	r3, r1
 801c6b0:	9312      	str	r3, [sp, #72]	; 0x48
 801c6b2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801c6b4:	b2db      	uxtb	r3, r3
 801c6b6:	9311      	str	r3, [sp, #68]	; 0x44
 801c6b8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801c6ba:	095a      	lsrs	r2, r3, #5
 801c6bc:	4b7d      	ldr	r3, [pc, #500]	; (801c8b4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801c6be:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c6c2:	400b      	ands	r3, r1
 801c6c4:	4313      	orrs	r3, r2
 801c6c6:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801c6c8:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801c6cc:	4313      	orrs	r3, r2
 801c6ce:	b29b      	uxth	r3, r3
 801c6d0:	9310      	str	r3, [sp, #64]	; 0x40
 801c6d2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c6d4:	781a      	ldrb	r2, [r3, #0]
 801c6d6:	ea4f 0349 	mov.w	r3, r9, lsl #1
 801c6da:	4132      	asrs	r2, r6
 801c6dc:	fb05 b919 	mls	r9, r5, r9, fp
 801c6e0:	fb03 fb05 	mul.w	fp, r3, r5
 801c6e4:	b2d2      	uxtb	r2, r2
 801c6e6:	930d      	str	r3, [sp, #52]	; 0x34
 801c6e8:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 801c6ec:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801c6f0:	f0c0 80f5 	bcc.w	801c8de <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 801c6f4:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 801c6f8:	46ae      	mov	lr, r5
 801c6fa:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801c6fe:	f0c0 80dd 	bcc.w	801c8bc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 801c702:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c704:	4013      	ands	r3, r2
 801c706:	d055      	beq.n	801c7b4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 801c708:	20ff      	movs	r0, #255	; 0xff
 801c70a:	990e      	ldr	r1, [sp, #56]	; 0x38
 801c70c:	fb90 f1f1 	sdiv	r1, r0, r1
 801c710:	434b      	muls	r3, r1
 801c712:	2bfe      	cmp	r3, #254	; 0xfe
 801c714:	dd03      	ble.n	801c71e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 801c716:	990c      	ldr	r1, [sp, #48]	; 0x30
 801c718:	4281      	cmp	r1, r0
 801c71a:	f000 80cd 	beq.w	801c8b8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 801c71e:	990c      	ldr	r1, [sp, #48]	; 0x30
 801c720:	f8bc 4000 	ldrh.w	r4, [ip]
 801c724:	fb11 f303 	smulbb	r3, r1, r3
 801c728:	b29b      	uxth	r3, r3
 801c72a:	1c59      	adds	r1, r3, #1
 801c72c:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801c730:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c734:	b29f      	uxth	r7, r3
 801c736:	43db      	mvns	r3, r3
 801c738:	b2db      	uxtb	r3, r3
 801c73a:	9309      	str	r3, [sp, #36]	; 0x24
 801c73c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801c73e:	1220      	asrs	r0, r4, #8
 801c740:	fb13 f907 	smulbb	r9, r3, r7
 801c744:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801c748:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c74a:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 801c74e:	fb00 9003 	mla	r0, r0, r3, r9
 801c752:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801c754:	10e1      	asrs	r1, r4, #3
 801c756:	fb13 f907 	smulbb	r9, r3, r7
 801c75a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801c75e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c760:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801c764:	fb01 9103 	mla	r1, r1, r3, r9
 801c768:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801c76a:	00e4      	lsls	r4, r4, #3
 801c76c:	fb13 f707 	smulbb	r7, r3, r7
 801c770:	b2e4      	uxtb	r4, r4
 801c772:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c774:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801c778:	fb04 7403 	mla	r4, r4, r3, r7
 801c77c:	b280      	uxth	r0, r0
 801c77e:	b2a4      	uxth	r4, r4
 801c780:	1c43      	adds	r3, r0, #1
 801c782:	f104 0901 	add.w	r9, r4, #1
 801c786:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801c78a:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 801c78e:	b289      	uxth	r1, r1
 801c790:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 801c794:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801c798:	ea49 0000 	orr.w	r0, r9, r0
 801c79c:	f101 0901 	add.w	r9, r1, #1
 801c7a0:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 801c7a4:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801c7a8:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801c7ac:	ea40 0009 	orr.w	r0, r0, r9
 801c7b0:	f8ac 0000 	strh.w	r0, [ip]
 801c7b4:	4446      	add	r6, r8
 801c7b6:	b2b6      	uxth	r6, r6
 801c7b8:	2e07      	cmp	r6, #7
 801c7ba:	bf81      	itttt	hi
 801c7bc:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 801c7be:	785a      	ldrbhi	r2, [r3, #1]
 801c7c0:	3301      	addhi	r3, #1
 801c7c2:	9328      	strhi	r3, [sp, #160]	; 0xa0
 801c7c4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c7c6:	bf9a      	itte	ls
 801c7c8:	fa42 f208 	asrls.w	r2, r2, r8
 801c7cc:	b2d2      	uxtbls	r2, r2
 801c7ce:	2600      	movhi	r6, #0
 801c7d0:	449c      	add	ip, r3
 801c7d2:	e792      	b.n	801c6fa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 801c7d4:	441c      	add	r4, r3
 801c7d6:	b224      	sxth	r4, r4
 801c7d8:	e6d5      	b.n	801c586 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801c7da:	f1ba 0f01 	cmp.w	sl, #1
 801c7de:	f47f af0c 	bne.w	801c5fa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801c7e2:	f1bb 0f01 	cmp.w	fp, #1
 801c7e6:	f47f af08 	bne.w	801c5fa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801c7ea:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 801c8ac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 801c7ee:	f8db 0000 	ldr.w	r0, [fp]
 801c7f2:	6803      	ldr	r3, [r0, #0]
 801c7f4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c7f6:	4798      	blx	r3
 801c7f8:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 801c7fc:	465a      	mov	r2, fp
 801c7fe:	d006      	beq.n	801c80e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801c800:	f1b8 0f04 	cmp.w	r8, #4
 801c804:	d140      	bne.n	801c888 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 801c806:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c808:	3300      	adds	r3, #0
 801c80a:	bf18      	it	ne
 801c80c:	2301      	movne	r3, #1
 801c80e:	0580      	lsls	r0, r0, #22
 801c810:	d56e      	bpl.n	801c8f0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801c812:	f1b8 0f08 	cmp.w	r8, #8
 801c816:	d16b      	bne.n	801c8f0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801c818:	2b00      	cmp	r3, #0
 801c81a:	bf0c      	ite	eq
 801c81c:	f44f 7100 	moveq.w	r1, #512	; 0x200
 801c820:	f44f 7180 	movne.w	r1, #256	; 0x100
 801c824:	2d00      	cmp	r5, #0
 801c826:	f47f aee8 	bne.w	801c5fa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801c82a:	2e00      	cmp	r6, #0
 801c82c:	f47f aee5 	bne.w	801c5fa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801c830:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801c832:	19e3      	adds	r3, r4, r7
 801c834:	4283      	cmp	r3, r0
 801c836:	f73f aee0 	bgt.w	801c5fa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801c83a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c83c:	980d      	ldr	r0, [sp, #52]	; 0x34
 801c83e:	444b      	add	r3, r9
 801c840:	4283      	cmp	r3, r0
 801c842:	f73f aeda 	bgt.w	801c5fa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801c846:	6810      	ldr	r0, [r2, #0]
 801c848:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 801c84c:	6804      	ldr	r4, [r0, #0]
 801c84e:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801c852:	b2bf      	uxth	r7, r7
 801c854:	f1b8 0f08 	cmp.w	r8, #8
 801c858:	f04f 0500 	mov.w	r5, #0
 801c85c:	bf18      	it	ne
 801c85e:	3701      	addne	r7, #1
 801c860:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801c864:	990c      	ldr	r1, [sp, #48]	; 0x30
 801c866:	9104      	str	r1, [sp, #16]
 801c868:	bf18      	it	ne
 801c86a:	f027 0701 	bicne.w	r7, r7, #1
 801c86e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801c870:	bf18      	it	ne
 801c872:	b2bf      	uxthne	r7, r7
 801c874:	e9cd 7102 	strd	r7, r1, [sp, #8]
 801c878:	e9cd 7900 	strd	r7, r9, [sp]
 801c87c:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801c87e:	6d64      	ldr	r4, [r4, #84]	; 0x54
 801c880:	47a0      	blx	r4
 801c882:	b019      	add	sp, #100	; 0x64
 801c884:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c888:	2300      	movs	r3, #0
 801c88a:	e7c0      	b.n	801c80e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801c88c:	2208      	movs	r2, #8
 801c88e:	fb92 f3f8 	sdiv	r3, r2, r8
 801c892:	1e5a      	subs	r2, r3, #1
 801c894:	443a      	add	r2, r7
 801c896:	fb92 f2f3 	sdiv	r2, r2, r3
 801c89a:	fb12 f203 	smulbb	r2, r2, r3
 801c89e:	b292      	uxth	r2, r2
 801c8a0:	e6b0      	b.n	801c604 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 801c8a2:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801c8a4:	e6ec      	b.n	801c680 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 801c8a6:	bf00      	nop
 801c8a8:	200137b4 	.word	0x200137b4
 801c8ac:	200137bc 	.word	0x200137bc
 801c8b0:	200137b6 	.word	0x200137b6
 801c8b4:	00fff800 	.word	0x00fff800
 801c8b8:	9810      	ldr	r0, [sp, #64]	; 0x40
 801c8ba:	e779      	b.n	801c7b0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 801c8bc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801c8be:	b153      	cbz	r3, 801c8d6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 801c8c0:	441e      	add	r6, r3
 801c8c2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c8c4:	b2b6      	uxth	r6, r6
 801c8c6:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 801c8ca:	f006 0607 	and.w	r6, r6, #7
 801c8ce:	781a      	ldrb	r2, [r3, #0]
 801c8d0:	9328      	str	r3, [sp, #160]	; 0xa0
 801c8d2:	4132      	asrs	r2, r6
 801c8d4:	b2d2      	uxtb	r2, r2
 801c8d6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c8d8:	445b      	add	r3, fp
 801c8da:	930a      	str	r3, [sp, #40]	; 0x28
 801c8dc:	e706      	b.n	801c6ec <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 801c8de:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801c8e0:	2b00      	cmp	r3, #0
 801c8e2:	d1ce      	bne.n	801c882 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801c8e4:	4b05      	ldr	r3, [pc, #20]	; (801c8fc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 801c8e6:	6818      	ldr	r0, [r3, #0]
 801c8e8:	6803      	ldr	r3, [r0, #0]
 801c8ea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c8ec:	4798      	blx	r3
 801c8ee:	e7c8      	b.n	801c882 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801c8f0:	2b00      	cmp	r3, #0
 801c8f2:	f43f ae82 	beq.w	801c5fa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801c8f6:	f44f 7180 	mov.w	r1, #256	; 0x100
 801c8fa:	e793      	b.n	801c824 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 801c8fc:	200137bc 	.word	0x200137bc

0801c900 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 801c900:	b538      	push	{r3, r4, r5, lr}
 801c902:	4c15      	ldr	r4, [pc, #84]	; (801c958 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 801c904:	7823      	ldrb	r3, [r4, #0]
 801c906:	f3bf 8f5b 	dmb	ish
 801c90a:	07da      	lsls	r2, r3, #31
 801c90c:	4605      	mov	r5, r0
 801c90e:	d40b      	bmi.n	801c928 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801c910:	4620      	mov	r0, r4
 801c912:	f009 fdbe 	bl	8026492 <__cxa_guard_acquire>
 801c916:	b138      	cbz	r0, 801c928 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801c918:	4620      	mov	r0, r4
 801c91a:	f009 fdc6 	bl	80264aa <__cxa_guard_release>
 801c91e:	4a0f      	ldr	r2, [pc, #60]	; (801c95c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801c920:	490f      	ldr	r1, [pc, #60]	; (801c960 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801c922:	4810      	ldr	r0, [pc, #64]	; (801c964 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801c924:	f009 fdae 	bl	8026484 <__aeabi_atexit>
 801c928:	4c0f      	ldr	r4, [pc, #60]	; (801c968 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801c92a:	7823      	ldrb	r3, [r4, #0]
 801c92c:	f3bf 8f5b 	dmb	ish
 801c930:	07db      	lsls	r3, r3, #31
 801c932:	d40b      	bmi.n	801c94c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801c934:	4620      	mov	r0, r4
 801c936:	f009 fdac 	bl	8026492 <__cxa_guard_acquire>
 801c93a:	b138      	cbz	r0, 801c94c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801c93c:	4620      	mov	r0, r4
 801c93e:	f009 fdb4 	bl	80264aa <__cxa_guard_release>
 801c942:	4a06      	ldr	r2, [pc, #24]	; (801c95c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801c944:	4909      	ldr	r1, [pc, #36]	; (801c96c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801c946:	480a      	ldr	r0, [pc, #40]	; (801c970 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801c948:	f009 fd9c 	bl	8026484 <__aeabi_atexit>
 801c94c:	4b05      	ldr	r3, [pc, #20]	; (801c964 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801c94e:	612b      	str	r3, [r5, #16]
 801c950:	4b07      	ldr	r3, [pc, #28]	; (801c970 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801c952:	616b      	str	r3, [r5, #20]
 801c954:	bd38      	pop	{r3, r4, r5, pc}
 801c956:	bf00      	nop
 801c958:	2001389c 	.word	0x2001389c
 801c95c:	20000000 	.word	0x20000000
 801c960:	08019703 	.word	0x08019703
 801c964:	200000d4 	.word	0x200000d4
 801c968:	200138a0 	.word	0x200138a0
 801c96c:	08019701 	.word	0x08019701
 801c970:	200000d8 	.word	0x200000d8

0801c974 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 801c974:	b538      	push	{r3, r4, r5, lr}
 801c976:	4c15      	ldr	r4, [pc, #84]	; (801c9cc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 801c978:	7823      	ldrb	r3, [r4, #0]
 801c97a:	f3bf 8f5b 	dmb	ish
 801c97e:	07da      	lsls	r2, r3, #31
 801c980:	4605      	mov	r5, r0
 801c982:	d40b      	bmi.n	801c99c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801c984:	4620      	mov	r0, r4
 801c986:	f009 fd84 	bl	8026492 <__cxa_guard_acquire>
 801c98a:	b138      	cbz	r0, 801c99c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801c98c:	4620      	mov	r0, r4
 801c98e:	f009 fd8c 	bl	80264aa <__cxa_guard_release>
 801c992:	4a0f      	ldr	r2, [pc, #60]	; (801c9d0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801c994:	490f      	ldr	r1, [pc, #60]	; (801c9d4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801c996:	4810      	ldr	r0, [pc, #64]	; (801c9d8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801c998:	f009 fd74 	bl	8026484 <__aeabi_atexit>
 801c99c:	4c0f      	ldr	r4, [pc, #60]	; (801c9dc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801c99e:	7823      	ldrb	r3, [r4, #0]
 801c9a0:	f3bf 8f5b 	dmb	ish
 801c9a4:	07db      	lsls	r3, r3, #31
 801c9a6:	d40b      	bmi.n	801c9c0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801c9a8:	4620      	mov	r0, r4
 801c9aa:	f009 fd72 	bl	8026492 <__cxa_guard_acquire>
 801c9ae:	b138      	cbz	r0, 801c9c0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801c9b0:	4620      	mov	r0, r4
 801c9b2:	f009 fd7a 	bl	80264aa <__cxa_guard_release>
 801c9b6:	4a06      	ldr	r2, [pc, #24]	; (801c9d0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801c9b8:	4909      	ldr	r1, [pc, #36]	; (801c9e0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801c9ba:	480a      	ldr	r0, [pc, #40]	; (801c9e4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801c9bc:	f009 fd62 	bl	8026484 <__aeabi_atexit>
 801c9c0:	4b05      	ldr	r3, [pc, #20]	; (801c9d8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801c9c2:	60ab      	str	r3, [r5, #8]
 801c9c4:	4b07      	ldr	r3, [pc, #28]	; (801c9e4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801c9c6:	60eb      	str	r3, [r5, #12]
 801c9c8:	bd38      	pop	{r3, r4, r5, pc}
 801c9ca:	bf00      	nop
 801c9cc:	20013874 	.word	0x20013874
 801c9d0:	20000000 	.word	0x20000000
 801c9d4:	08019707 	.word	0x08019707
 801c9d8:	200000ac 	.word	0x200000ac
 801c9dc:	20013878 	.word	0x20013878
 801c9e0:	08019705 	.word	0x08019705
 801c9e4:	200000b0 	.word	0x200000b0

0801c9e8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 801c9e8:	b510      	push	{r4, lr}
 801c9ea:	4604      	mov	r4, r0
 801c9ec:	f7ff ff88 	bl	801c900 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 801c9f0:	4620      	mov	r0, r4
 801c9f2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801c9f6:	f7ff bfbd 	b.w	801c974 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

0801c9fc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 801c9fc:	b538      	push	{r3, r4, r5, lr}
 801c9fe:	4c15      	ldr	r4, [pc, #84]	; (801ca54 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 801ca00:	7823      	ldrb	r3, [r4, #0]
 801ca02:	f3bf 8f5b 	dmb	ish
 801ca06:	07da      	lsls	r2, r3, #31
 801ca08:	4605      	mov	r5, r0
 801ca0a:	d40b      	bmi.n	801ca24 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801ca0c:	4620      	mov	r0, r4
 801ca0e:	f009 fd40 	bl	8026492 <__cxa_guard_acquire>
 801ca12:	b138      	cbz	r0, 801ca24 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801ca14:	4620      	mov	r0, r4
 801ca16:	f009 fd48 	bl	80264aa <__cxa_guard_release>
 801ca1a:	4a0f      	ldr	r2, [pc, #60]	; (801ca58 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801ca1c:	490f      	ldr	r1, [pc, #60]	; (801ca5c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801ca1e:	4810      	ldr	r0, [pc, #64]	; (801ca60 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801ca20:	f009 fd30 	bl	8026484 <__aeabi_atexit>
 801ca24:	4c0f      	ldr	r4, [pc, #60]	; (801ca64 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801ca26:	7823      	ldrb	r3, [r4, #0]
 801ca28:	f3bf 8f5b 	dmb	ish
 801ca2c:	07db      	lsls	r3, r3, #31
 801ca2e:	d40b      	bmi.n	801ca48 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801ca30:	4620      	mov	r0, r4
 801ca32:	f009 fd2e 	bl	8026492 <__cxa_guard_acquire>
 801ca36:	b138      	cbz	r0, 801ca48 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801ca38:	4620      	mov	r0, r4
 801ca3a:	f009 fd36 	bl	80264aa <__cxa_guard_release>
 801ca3e:	4a06      	ldr	r2, [pc, #24]	; (801ca58 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801ca40:	4909      	ldr	r1, [pc, #36]	; (801ca68 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801ca42:	480a      	ldr	r0, [pc, #40]	; (801ca6c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801ca44:	f009 fd1e 	bl	8026484 <__aeabi_atexit>
 801ca48:	4b05      	ldr	r3, [pc, #20]	; (801ca60 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801ca4a:	622b      	str	r3, [r5, #32]
 801ca4c:	4b07      	ldr	r3, [pc, #28]	; (801ca6c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801ca4e:	626b      	str	r3, [r5, #36]	; 0x24
 801ca50:	bd38      	pop	{r3, r4, r5, pc}
 801ca52:	bf00      	nop
 801ca54:	200138a4 	.word	0x200138a4
 801ca58:	20000000 	.word	0x20000000
 801ca5c:	080196fb 	.word	0x080196fb
 801ca60:	200000dc 	.word	0x200000dc
 801ca64:	200138a8 	.word	0x200138a8
 801ca68:	080196f9 	.word	0x080196f9
 801ca6c:	200000e0 	.word	0x200000e0

0801ca70 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 801ca70:	b538      	push	{r3, r4, r5, lr}
 801ca72:	4c15      	ldr	r4, [pc, #84]	; (801cac8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 801ca74:	7823      	ldrb	r3, [r4, #0]
 801ca76:	f3bf 8f5b 	dmb	ish
 801ca7a:	07da      	lsls	r2, r3, #31
 801ca7c:	4605      	mov	r5, r0
 801ca7e:	d40b      	bmi.n	801ca98 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801ca80:	4620      	mov	r0, r4
 801ca82:	f009 fd06 	bl	8026492 <__cxa_guard_acquire>
 801ca86:	b138      	cbz	r0, 801ca98 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801ca88:	4620      	mov	r0, r4
 801ca8a:	f009 fd0e 	bl	80264aa <__cxa_guard_release>
 801ca8e:	4a0f      	ldr	r2, [pc, #60]	; (801cacc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801ca90:	490f      	ldr	r1, [pc, #60]	; (801cad0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801ca92:	4810      	ldr	r0, [pc, #64]	; (801cad4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801ca94:	f009 fcf6 	bl	8026484 <__aeabi_atexit>
 801ca98:	4c0f      	ldr	r4, [pc, #60]	; (801cad8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801ca9a:	7823      	ldrb	r3, [r4, #0]
 801ca9c:	f3bf 8f5b 	dmb	ish
 801caa0:	07db      	lsls	r3, r3, #31
 801caa2:	d40b      	bmi.n	801cabc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801caa4:	4620      	mov	r0, r4
 801caa6:	f009 fcf4 	bl	8026492 <__cxa_guard_acquire>
 801caaa:	b138      	cbz	r0, 801cabc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801caac:	4620      	mov	r0, r4
 801caae:	f009 fcfc 	bl	80264aa <__cxa_guard_release>
 801cab2:	4a06      	ldr	r2, [pc, #24]	; (801cacc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801cab4:	4909      	ldr	r1, [pc, #36]	; (801cadc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801cab6:	480a      	ldr	r0, [pc, #40]	; (801cae0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801cab8:	f009 fce4 	bl	8026484 <__aeabi_atexit>
 801cabc:	4b05      	ldr	r3, [pc, #20]	; (801cad4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801cabe:	61ab      	str	r3, [r5, #24]
 801cac0:	4b07      	ldr	r3, [pc, #28]	; (801cae0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801cac2:	61eb      	str	r3, [r5, #28]
 801cac4:	bd38      	pop	{r3, r4, r5, pc}
 801cac6:	bf00      	nop
 801cac8:	2001387c 	.word	0x2001387c
 801cacc:	20000000 	.word	0x20000000
 801cad0:	080196ff 	.word	0x080196ff
 801cad4:	200000b4 	.word	0x200000b4
 801cad8:	20013880 	.word	0x20013880
 801cadc:	080196fd 	.word	0x080196fd
 801cae0:	200000b8 	.word	0x200000b8

0801cae4 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801cae4:	b510      	push	{r4, lr}
 801cae6:	4604      	mov	r4, r0
 801cae8:	f7ff ff88 	bl	801c9fc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 801caec:	4620      	mov	r0, r4
 801caee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801caf2:	f7ff bfbd 	b.w	801ca70 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0801caf8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 801caf8:	b538      	push	{r3, r4, r5, lr}
 801cafa:	4c15      	ldr	r4, [pc, #84]	; (801cb50 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 801cafc:	7823      	ldrb	r3, [r4, #0]
 801cafe:	f3bf 8f5b 	dmb	ish
 801cb02:	07da      	lsls	r2, r3, #31
 801cb04:	4605      	mov	r5, r0
 801cb06:	d40b      	bmi.n	801cb20 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801cb08:	4620      	mov	r0, r4
 801cb0a:	f009 fcc2 	bl	8026492 <__cxa_guard_acquire>
 801cb0e:	b138      	cbz	r0, 801cb20 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801cb10:	4620      	mov	r0, r4
 801cb12:	f009 fcca 	bl	80264aa <__cxa_guard_release>
 801cb16:	4a0f      	ldr	r2, [pc, #60]	; (801cb54 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801cb18:	490f      	ldr	r1, [pc, #60]	; (801cb58 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 801cb1a:	4810      	ldr	r0, [pc, #64]	; (801cb5c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801cb1c:	f009 fcb2 	bl	8026484 <__aeabi_atexit>
 801cb20:	4c0f      	ldr	r4, [pc, #60]	; (801cb60 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801cb22:	7823      	ldrb	r3, [r4, #0]
 801cb24:	f3bf 8f5b 	dmb	ish
 801cb28:	07db      	lsls	r3, r3, #31
 801cb2a:	d40b      	bmi.n	801cb44 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801cb2c:	4620      	mov	r0, r4
 801cb2e:	f009 fcb0 	bl	8026492 <__cxa_guard_acquire>
 801cb32:	b138      	cbz	r0, 801cb44 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801cb34:	4620      	mov	r0, r4
 801cb36:	f009 fcb8 	bl	80264aa <__cxa_guard_release>
 801cb3a:	4a06      	ldr	r2, [pc, #24]	; (801cb54 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801cb3c:	4909      	ldr	r1, [pc, #36]	; (801cb64 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 801cb3e:	480a      	ldr	r0, [pc, #40]	; (801cb68 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801cb40:	f009 fca0 	bl	8026484 <__aeabi_atexit>
 801cb44:	4b05      	ldr	r3, [pc, #20]	; (801cb5c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801cb46:	632b      	str	r3, [r5, #48]	; 0x30
 801cb48:	4b07      	ldr	r3, [pc, #28]	; (801cb68 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801cb4a:	636b      	str	r3, [r5, #52]	; 0x34
 801cb4c:	bd38      	pop	{r3, r4, r5, pc}
 801cb4e:	bf00      	nop
 801cb50:	200138b4 	.word	0x200138b4
 801cb54:	20000000 	.word	0x20000000
 801cb58:	080196f3 	.word	0x080196f3
 801cb5c:	200000ec 	.word	0x200000ec
 801cb60:	200138b8 	.word	0x200138b8
 801cb64:	080196f1 	.word	0x080196f1
 801cb68:	200000f0 	.word	0x200000f0

0801cb6c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 801cb6c:	b538      	push	{r3, r4, r5, lr}
 801cb6e:	4c15      	ldr	r4, [pc, #84]	; (801cbc4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 801cb70:	7823      	ldrb	r3, [r4, #0]
 801cb72:	f3bf 8f5b 	dmb	ish
 801cb76:	07da      	lsls	r2, r3, #31
 801cb78:	4605      	mov	r5, r0
 801cb7a:	d40b      	bmi.n	801cb94 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801cb7c:	4620      	mov	r0, r4
 801cb7e:	f009 fc88 	bl	8026492 <__cxa_guard_acquire>
 801cb82:	b138      	cbz	r0, 801cb94 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801cb84:	4620      	mov	r0, r4
 801cb86:	f009 fc90 	bl	80264aa <__cxa_guard_release>
 801cb8a:	4a0f      	ldr	r2, [pc, #60]	; (801cbc8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801cb8c:	490f      	ldr	r1, [pc, #60]	; (801cbcc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801cb8e:	4810      	ldr	r0, [pc, #64]	; (801cbd0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801cb90:	f009 fc78 	bl	8026484 <__aeabi_atexit>
 801cb94:	4c0f      	ldr	r4, [pc, #60]	; (801cbd4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801cb96:	7823      	ldrb	r3, [r4, #0]
 801cb98:	f3bf 8f5b 	dmb	ish
 801cb9c:	07db      	lsls	r3, r3, #31
 801cb9e:	d40b      	bmi.n	801cbb8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801cba0:	4620      	mov	r0, r4
 801cba2:	f009 fc76 	bl	8026492 <__cxa_guard_acquire>
 801cba6:	b138      	cbz	r0, 801cbb8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801cba8:	4620      	mov	r0, r4
 801cbaa:	f009 fc7e 	bl	80264aa <__cxa_guard_release>
 801cbae:	4a06      	ldr	r2, [pc, #24]	; (801cbc8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801cbb0:	4909      	ldr	r1, [pc, #36]	; (801cbd8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801cbb2:	480a      	ldr	r0, [pc, #40]	; (801cbdc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801cbb4:	f009 fc66 	bl	8026484 <__aeabi_atexit>
 801cbb8:	4b05      	ldr	r3, [pc, #20]	; (801cbd0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801cbba:	62ab      	str	r3, [r5, #40]	; 0x28
 801cbbc:	4b07      	ldr	r3, [pc, #28]	; (801cbdc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801cbbe:	62eb      	str	r3, [r5, #44]	; 0x2c
 801cbc0:	bd38      	pop	{r3, r4, r5, pc}
 801cbc2:	bf00      	nop
 801cbc4:	20013884 	.word	0x20013884
 801cbc8:	20000000 	.word	0x20000000
 801cbcc:	080196f7 	.word	0x080196f7
 801cbd0:	200000bc 	.word	0x200000bc
 801cbd4:	20013888 	.word	0x20013888
 801cbd8:	080196f5 	.word	0x080196f5
 801cbdc:	200000c0 	.word	0x200000c0

0801cbe0 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 801cbe0:	b510      	push	{r4, lr}
 801cbe2:	4604      	mov	r4, r0
 801cbe4:	f7ff ff88 	bl	801caf8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 801cbe8:	4620      	mov	r0, r4
 801cbea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801cbee:	f7ff bfbd 	b.w	801cb6c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0801cbf4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 801cbf4:	b538      	push	{r3, r4, r5, lr}
 801cbf6:	4c15      	ldr	r4, [pc, #84]	; (801cc4c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 801cbf8:	7823      	ldrb	r3, [r4, #0]
 801cbfa:	f3bf 8f5b 	dmb	ish
 801cbfe:	07da      	lsls	r2, r3, #31
 801cc00:	4605      	mov	r5, r0
 801cc02:	d40b      	bmi.n	801cc1c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801cc04:	4620      	mov	r0, r4
 801cc06:	f009 fc44 	bl	8026492 <__cxa_guard_acquire>
 801cc0a:	b138      	cbz	r0, 801cc1c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801cc0c:	4620      	mov	r0, r4
 801cc0e:	f009 fc4c 	bl	80264aa <__cxa_guard_release>
 801cc12:	4a0f      	ldr	r2, [pc, #60]	; (801cc50 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801cc14:	490f      	ldr	r1, [pc, #60]	; (801cc54 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801cc16:	4810      	ldr	r0, [pc, #64]	; (801cc58 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801cc18:	f009 fc34 	bl	8026484 <__aeabi_atexit>
 801cc1c:	4c0f      	ldr	r4, [pc, #60]	; (801cc5c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 801cc1e:	7823      	ldrb	r3, [r4, #0]
 801cc20:	f3bf 8f5b 	dmb	ish
 801cc24:	07db      	lsls	r3, r3, #31
 801cc26:	d40b      	bmi.n	801cc40 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801cc28:	4620      	mov	r0, r4
 801cc2a:	f009 fc32 	bl	8026492 <__cxa_guard_acquire>
 801cc2e:	b138      	cbz	r0, 801cc40 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801cc30:	4620      	mov	r0, r4
 801cc32:	f009 fc3a 	bl	80264aa <__cxa_guard_release>
 801cc36:	4a06      	ldr	r2, [pc, #24]	; (801cc50 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801cc38:	4909      	ldr	r1, [pc, #36]	; (801cc60 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 801cc3a:	480a      	ldr	r0, [pc, #40]	; (801cc64 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801cc3c:	f009 fc22 	bl	8026484 <__aeabi_atexit>
 801cc40:	4b05      	ldr	r3, [pc, #20]	; (801cc58 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801cc42:	652b      	str	r3, [r5, #80]	; 0x50
 801cc44:	4b07      	ldr	r3, [pc, #28]	; (801cc64 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801cc46:	656b      	str	r3, [r5, #84]	; 0x54
 801cc48:	bd38      	pop	{r3, r4, r5, pc}
 801cc4a:	bf00      	nop
 801cc4c:	200138bc 	.word	0x200138bc
 801cc50:	20000000 	.word	0x20000000
 801cc54:	080196e3 	.word	0x080196e3
 801cc58:	200000f4 	.word	0x200000f4
 801cc5c:	200138c0 	.word	0x200138c0
 801cc60:	080196e1 	.word	0x080196e1
 801cc64:	200000f8 	.word	0x200000f8

0801cc68 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 801cc68:	b538      	push	{r3, r4, r5, lr}
 801cc6a:	4c15      	ldr	r4, [pc, #84]	; (801ccc0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801cc6c:	7823      	ldrb	r3, [r4, #0]
 801cc6e:	f3bf 8f5b 	dmb	ish
 801cc72:	07da      	lsls	r2, r3, #31
 801cc74:	4605      	mov	r5, r0
 801cc76:	d40b      	bmi.n	801cc90 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801cc78:	4620      	mov	r0, r4
 801cc7a:	f009 fc0a 	bl	8026492 <__cxa_guard_acquire>
 801cc7e:	b138      	cbz	r0, 801cc90 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801cc80:	4620      	mov	r0, r4
 801cc82:	f009 fc12 	bl	80264aa <__cxa_guard_release>
 801cc86:	4a0f      	ldr	r2, [pc, #60]	; (801ccc4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801cc88:	490f      	ldr	r1, [pc, #60]	; (801ccc8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801cc8a:	4810      	ldr	r0, [pc, #64]	; (801cccc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801cc8c:	f009 fbfa 	bl	8026484 <__aeabi_atexit>
 801cc90:	4c0f      	ldr	r4, [pc, #60]	; (801ccd0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801cc92:	7823      	ldrb	r3, [r4, #0]
 801cc94:	f3bf 8f5b 	dmb	ish
 801cc98:	07db      	lsls	r3, r3, #31
 801cc9a:	d40b      	bmi.n	801ccb4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801cc9c:	4620      	mov	r0, r4
 801cc9e:	f009 fbf8 	bl	8026492 <__cxa_guard_acquire>
 801cca2:	b138      	cbz	r0, 801ccb4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801cca4:	4620      	mov	r0, r4
 801cca6:	f009 fc00 	bl	80264aa <__cxa_guard_release>
 801ccaa:	4a06      	ldr	r2, [pc, #24]	; (801ccc4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801ccac:	4909      	ldr	r1, [pc, #36]	; (801ccd4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801ccae:	480a      	ldr	r0, [pc, #40]	; (801ccd8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801ccb0:	f009 fbe8 	bl	8026484 <__aeabi_atexit>
 801ccb4:	4b05      	ldr	r3, [pc, #20]	; (801cccc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801ccb6:	64ab      	str	r3, [r5, #72]	; 0x48
 801ccb8:	4b07      	ldr	r3, [pc, #28]	; (801ccd8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801ccba:	64eb      	str	r3, [r5, #76]	; 0x4c
 801ccbc:	bd38      	pop	{r3, r4, r5, pc}
 801ccbe:	bf00      	nop
 801ccc0:	200138c4 	.word	0x200138c4
 801ccc4:	20000000 	.word	0x20000000
 801ccc8:	080196e7 	.word	0x080196e7
 801cccc:	200000fc 	.word	0x200000fc
 801ccd0:	200138c8 	.word	0x200138c8
 801ccd4:	080196e5 	.word	0x080196e5
 801ccd8:	20000100 	.word	0x20000100

0801ccdc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 801ccdc:	b538      	push	{r3, r4, r5, lr}
 801ccde:	4c15      	ldr	r4, [pc, #84]	; (801cd34 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 801cce0:	7823      	ldrb	r3, [r4, #0]
 801cce2:	f3bf 8f5b 	dmb	ish
 801cce6:	07da      	lsls	r2, r3, #31
 801cce8:	4605      	mov	r5, r0
 801ccea:	d40b      	bmi.n	801cd04 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801ccec:	4620      	mov	r0, r4
 801ccee:	f009 fbd0 	bl	8026492 <__cxa_guard_acquire>
 801ccf2:	b138      	cbz	r0, 801cd04 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801ccf4:	4620      	mov	r0, r4
 801ccf6:	f009 fbd8 	bl	80264aa <__cxa_guard_release>
 801ccfa:	4a0f      	ldr	r2, [pc, #60]	; (801cd38 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801ccfc:	490f      	ldr	r1, [pc, #60]	; (801cd3c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801ccfe:	4810      	ldr	r0, [pc, #64]	; (801cd40 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801cd00:	f009 fbc0 	bl	8026484 <__aeabi_atexit>
 801cd04:	4c0f      	ldr	r4, [pc, #60]	; (801cd44 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801cd06:	7823      	ldrb	r3, [r4, #0]
 801cd08:	f3bf 8f5b 	dmb	ish
 801cd0c:	07db      	lsls	r3, r3, #31
 801cd0e:	d40b      	bmi.n	801cd28 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801cd10:	4620      	mov	r0, r4
 801cd12:	f009 fbbe 	bl	8026492 <__cxa_guard_acquire>
 801cd16:	b138      	cbz	r0, 801cd28 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801cd18:	4620      	mov	r0, r4
 801cd1a:	f009 fbc6 	bl	80264aa <__cxa_guard_release>
 801cd1e:	4a06      	ldr	r2, [pc, #24]	; (801cd38 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801cd20:	4909      	ldr	r1, [pc, #36]	; (801cd48 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801cd22:	480a      	ldr	r0, [pc, #40]	; (801cd4c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801cd24:	f009 fbae 	bl	8026484 <__aeabi_atexit>
 801cd28:	4b05      	ldr	r3, [pc, #20]	; (801cd40 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801cd2a:	642b      	str	r3, [r5, #64]	; 0x40
 801cd2c:	4b07      	ldr	r3, [pc, #28]	; (801cd4c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801cd2e:	646b      	str	r3, [r5, #68]	; 0x44
 801cd30:	bd38      	pop	{r3, r4, r5, pc}
 801cd32:	bf00      	nop
 801cd34:	2001388c 	.word	0x2001388c
 801cd38:	20000000 	.word	0x20000000
 801cd3c:	080196eb 	.word	0x080196eb
 801cd40:	200000c4 	.word	0x200000c4
 801cd44:	20013890 	.word	0x20013890
 801cd48:	080196e9 	.word	0x080196e9
 801cd4c:	200000c8 	.word	0x200000c8

0801cd50 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 801cd50:	b538      	push	{r3, r4, r5, lr}
 801cd52:	4c15      	ldr	r4, [pc, #84]	; (801cda8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 801cd54:	7823      	ldrb	r3, [r4, #0]
 801cd56:	f3bf 8f5b 	dmb	ish
 801cd5a:	07da      	lsls	r2, r3, #31
 801cd5c:	4605      	mov	r5, r0
 801cd5e:	d40b      	bmi.n	801cd78 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801cd60:	4620      	mov	r0, r4
 801cd62:	f009 fb96 	bl	8026492 <__cxa_guard_acquire>
 801cd66:	b138      	cbz	r0, 801cd78 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801cd68:	4620      	mov	r0, r4
 801cd6a:	f009 fb9e 	bl	80264aa <__cxa_guard_release>
 801cd6e:	4a0f      	ldr	r2, [pc, #60]	; (801cdac <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801cd70:	490f      	ldr	r1, [pc, #60]	; (801cdb0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801cd72:	4810      	ldr	r0, [pc, #64]	; (801cdb4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801cd74:	f009 fb86 	bl	8026484 <__aeabi_atexit>
 801cd78:	4c0f      	ldr	r4, [pc, #60]	; (801cdb8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801cd7a:	7823      	ldrb	r3, [r4, #0]
 801cd7c:	f3bf 8f5b 	dmb	ish
 801cd80:	07db      	lsls	r3, r3, #31
 801cd82:	d40b      	bmi.n	801cd9c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801cd84:	4620      	mov	r0, r4
 801cd86:	f009 fb84 	bl	8026492 <__cxa_guard_acquire>
 801cd8a:	b138      	cbz	r0, 801cd9c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801cd8c:	4620      	mov	r0, r4
 801cd8e:	f009 fb8c 	bl	80264aa <__cxa_guard_release>
 801cd92:	4a06      	ldr	r2, [pc, #24]	; (801cdac <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801cd94:	4909      	ldr	r1, [pc, #36]	; (801cdbc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801cd96:	480a      	ldr	r0, [pc, #40]	; (801cdc0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801cd98:	f009 fb74 	bl	8026484 <__aeabi_atexit>
 801cd9c:	4b05      	ldr	r3, [pc, #20]	; (801cdb4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801cd9e:	63ab      	str	r3, [r5, #56]	; 0x38
 801cda0:	4b07      	ldr	r3, [pc, #28]	; (801cdc0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801cda2:	63eb      	str	r3, [r5, #60]	; 0x3c
 801cda4:	bd38      	pop	{r3, r4, r5, pc}
 801cda6:	bf00      	nop
 801cda8:	200138ac 	.word	0x200138ac
 801cdac:	20000000 	.word	0x20000000
 801cdb0:	080196ef 	.word	0x080196ef
 801cdb4:	200000e4 	.word	0x200000e4
 801cdb8:	200138b0 	.word	0x200138b0
 801cdbc:	080196ed 	.word	0x080196ed
 801cdc0:	200000e8 	.word	0x200000e8

0801cdc4 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801cdc4:	b510      	push	{r4, lr}
 801cdc6:	4604      	mov	r4, r0
 801cdc8:	f7ff ff14 	bl	801cbf4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801cdcc:	4620      	mov	r0, r4
 801cdce:	f7ff ff85 	bl	801ccdc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801cdd2:	4620      	mov	r0, r4
 801cdd4:	f7ff ff48 	bl	801cc68 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 801cdd8:	4620      	mov	r0, r4
 801cdda:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801cdde:	f7ff bfb7 	b.w	801cd50 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801cde4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801cde4:	b538      	push	{r3, r4, r5, lr}
 801cde6:	4c15      	ldr	r4, [pc, #84]	; (801ce3c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 801cde8:	7823      	ldrb	r3, [r4, #0]
 801cdea:	f3bf 8f5b 	dmb	ish
 801cdee:	07da      	lsls	r2, r3, #31
 801cdf0:	4605      	mov	r5, r0
 801cdf2:	d40b      	bmi.n	801ce0c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801cdf4:	4620      	mov	r0, r4
 801cdf6:	f009 fb4c 	bl	8026492 <__cxa_guard_acquire>
 801cdfa:	b138      	cbz	r0, 801ce0c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801cdfc:	4620      	mov	r0, r4
 801cdfe:	f009 fb54 	bl	80264aa <__cxa_guard_release>
 801ce02:	4a0f      	ldr	r2, [pc, #60]	; (801ce40 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801ce04:	490f      	ldr	r1, [pc, #60]	; (801ce44 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801ce06:	4810      	ldr	r0, [pc, #64]	; (801ce48 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801ce08:	f009 fb3c 	bl	8026484 <__aeabi_atexit>
 801ce0c:	4c0f      	ldr	r4, [pc, #60]	; (801ce4c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801ce0e:	7823      	ldrb	r3, [r4, #0]
 801ce10:	f3bf 8f5b 	dmb	ish
 801ce14:	07db      	lsls	r3, r3, #31
 801ce16:	d40b      	bmi.n	801ce30 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801ce18:	4620      	mov	r0, r4
 801ce1a:	f009 fb3a 	bl	8026492 <__cxa_guard_acquire>
 801ce1e:	b138      	cbz	r0, 801ce30 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801ce20:	4620      	mov	r0, r4
 801ce22:	f009 fb42 	bl	80264aa <__cxa_guard_release>
 801ce26:	4a06      	ldr	r2, [pc, #24]	; (801ce40 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801ce28:	4909      	ldr	r1, [pc, #36]	; (801ce50 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801ce2a:	480a      	ldr	r0, [pc, #40]	; (801ce54 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801ce2c:	f009 fb2a 	bl	8026484 <__aeabi_atexit>
 801ce30:	4b05      	ldr	r3, [pc, #20]	; (801ce48 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801ce32:	662b      	str	r3, [r5, #96]	; 0x60
 801ce34:	4b07      	ldr	r3, [pc, #28]	; (801ce54 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801ce36:	666b      	str	r3, [r5, #100]	; 0x64
 801ce38:	bd38      	pop	{r3, r4, r5, pc}
 801ce3a:	bf00      	nop
 801ce3c:	20013894 	.word	0x20013894
 801ce40:	20000000 	.word	0x20000000
 801ce44:	080196db 	.word	0x080196db
 801ce48:	200000cc 	.word	0x200000cc
 801ce4c:	20013898 	.word	0x20013898
 801ce50:	080196d9 	.word	0x080196d9
 801ce54:	200000d0 	.word	0x200000d0

0801ce58 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 801ce58:	b538      	push	{r3, r4, r5, lr}
 801ce5a:	4c15      	ldr	r4, [pc, #84]	; (801ceb0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801ce5c:	7823      	ldrb	r3, [r4, #0]
 801ce5e:	f3bf 8f5b 	dmb	ish
 801ce62:	07da      	lsls	r2, r3, #31
 801ce64:	4605      	mov	r5, r0
 801ce66:	d40b      	bmi.n	801ce80 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801ce68:	4620      	mov	r0, r4
 801ce6a:	f009 fb12 	bl	8026492 <__cxa_guard_acquire>
 801ce6e:	b138      	cbz	r0, 801ce80 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801ce70:	4620      	mov	r0, r4
 801ce72:	f009 fb1a 	bl	80264aa <__cxa_guard_release>
 801ce76:	4a0f      	ldr	r2, [pc, #60]	; (801ceb4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801ce78:	490f      	ldr	r1, [pc, #60]	; (801ceb8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801ce7a:	4810      	ldr	r0, [pc, #64]	; (801cebc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801ce7c:	f009 fb02 	bl	8026484 <__aeabi_atexit>
 801ce80:	4c0f      	ldr	r4, [pc, #60]	; (801cec0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801ce82:	7823      	ldrb	r3, [r4, #0]
 801ce84:	f3bf 8f5b 	dmb	ish
 801ce88:	07db      	lsls	r3, r3, #31
 801ce8a:	d40b      	bmi.n	801cea4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801ce8c:	4620      	mov	r0, r4
 801ce8e:	f009 fb00 	bl	8026492 <__cxa_guard_acquire>
 801ce92:	b138      	cbz	r0, 801cea4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801ce94:	4620      	mov	r0, r4
 801ce96:	f009 fb08 	bl	80264aa <__cxa_guard_release>
 801ce9a:	4a06      	ldr	r2, [pc, #24]	; (801ceb4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801ce9c:	4909      	ldr	r1, [pc, #36]	; (801cec4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801ce9e:	480a      	ldr	r0, [pc, #40]	; (801cec8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801cea0:	f009 faf0 	bl	8026484 <__aeabi_atexit>
 801cea4:	4b05      	ldr	r3, [pc, #20]	; (801cebc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801cea6:	65ab      	str	r3, [r5, #88]	; 0x58
 801cea8:	4b07      	ldr	r3, [pc, #28]	; (801cec8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801ceaa:	65eb      	str	r3, [r5, #92]	; 0x5c
 801ceac:	bd38      	pop	{r3, r4, r5, pc}
 801ceae:	bf00      	nop
 801ceb0:	2001386c 	.word	0x2001386c
 801ceb4:	20000000 	.word	0x20000000
 801ceb8:	080196df 	.word	0x080196df
 801cebc:	200000a4 	.word	0x200000a4
 801cec0:	20013870 	.word	0x20013870
 801cec4:	080196dd 	.word	0x080196dd
 801cec8:	200000a8 	.word	0x200000a8

0801cecc <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801cecc:	b510      	push	{r4, lr}
 801cece:	4604      	mov	r4, r0
 801ced0:	f7ff ff88 	bl	801cde4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801ced4:	4620      	mov	r0, r4
 801ced6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801ceda:	f7ff bfbd 	b.w	801ce58 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0801cee0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 801cee0:	b538      	push	{r3, r4, r5, lr}
 801cee2:	4c15      	ldr	r4, [pc, #84]	; (801cf38 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801cee4:	7823      	ldrb	r3, [r4, #0]
 801cee6:	f3bf 8f5b 	dmb	ish
 801ceea:	07da      	lsls	r2, r3, #31
 801ceec:	4605      	mov	r5, r0
 801ceee:	d40b      	bmi.n	801cf08 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801cef0:	4620      	mov	r0, r4
 801cef2:	f009 face 	bl	8026492 <__cxa_guard_acquire>
 801cef6:	b138      	cbz	r0, 801cf08 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801cef8:	4620      	mov	r0, r4
 801cefa:	f009 fad6 	bl	80264aa <__cxa_guard_release>
 801cefe:	4a0f      	ldr	r2, [pc, #60]	; (801cf3c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801cf00:	490f      	ldr	r1, [pc, #60]	; (801cf40 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801cf02:	4810      	ldr	r0, [pc, #64]	; (801cf44 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801cf04:	f009 fabe 	bl	8026484 <__aeabi_atexit>
 801cf08:	4c0f      	ldr	r4, [pc, #60]	; (801cf48 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801cf0a:	7823      	ldrb	r3, [r4, #0]
 801cf0c:	f3bf 8f5b 	dmb	ish
 801cf10:	07db      	lsls	r3, r3, #31
 801cf12:	d40b      	bmi.n	801cf2c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801cf14:	4620      	mov	r0, r4
 801cf16:	f009 fabc 	bl	8026492 <__cxa_guard_acquire>
 801cf1a:	b138      	cbz	r0, 801cf2c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801cf1c:	4620      	mov	r0, r4
 801cf1e:	f009 fac4 	bl	80264aa <__cxa_guard_release>
 801cf22:	4a06      	ldr	r2, [pc, #24]	; (801cf3c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801cf24:	4909      	ldr	r1, [pc, #36]	; (801cf4c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801cf26:	480a      	ldr	r0, [pc, #40]	; (801cf50 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801cf28:	f009 faac 	bl	8026484 <__aeabi_atexit>
 801cf2c:	4b05      	ldr	r3, [pc, #20]	; (801cf44 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801cf2e:	672b      	str	r3, [r5, #112]	; 0x70
 801cf30:	4b07      	ldr	r3, [pc, #28]	; (801cf50 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801cf32:	676b      	str	r3, [r5, #116]	; 0x74
 801cf34:	bd38      	pop	{r3, r4, r5, pc}
 801cf36:	bf00      	nop
 801cf38:	20013864 	.word	0x20013864
 801cf3c:	20000000 	.word	0x20000000
 801cf40:	080196d3 	.word	0x080196d3
 801cf44:	2000009c 	.word	0x2000009c
 801cf48:	20013868 	.word	0x20013868
 801cf4c:	080196d1 	.word	0x080196d1
 801cf50:	200000a0 	.word	0x200000a0

0801cf54 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 801cf54:	b538      	push	{r3, r4, r5, lr}
 801cf56:	4c15      	ldr	r4, [pc, #84]	; (801cfac <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 801cf58:	7823      	ldrb	r3, [r4, #0]
 801cf5a:	f3bf 8f5b 	dmb	ish
 801cf5e:	07da      	lsls	r2, r3, #31
 801cf60:	4605      	mov	r5, r0
 801cf62:	d40b      	bmi.n	801cf7c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801cf64:	4620      	mov	r0, r4
 801cf66:	f009 fa94 	bl	8026492 <__cxa_guard_acquire>
 801cf6a:	b138      	cbz	r0, 801cf7c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801cf6c:	4620      	mov	r0, r4
 801cf6e:	f009 fa9c 	bl	80264aa <__cxa_guard_release>
 801cf72:	4a0f      	ldr	r2, [pc, #60]	; (801cfb0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801cf74:	490f      	ldr	r1, [pc, #60]	; (801cfb4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801cf76:	4810      	ldr	r0, [pc, #64]	; (801cfb8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801cf78:	f009 fa84 	bl	8026484 <__aeabi_atexit>
 801cf7c:	4c0f      	ldr	r4, [pc, #60]	; (801cfbc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801cf7e:	7823      	ldrb	r3, [r4, #0]
 801cf80:	f3bf 8f5b 	dmb	ish
 801cf84:	07db      	lsls	r3, r3, #31
 801cf86:	d40b      	bmi.n	801cfa0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801cf88:	4620      	mov	r0, r4
 801cf8a:	f009 fa82 	bl	8026492 <__cxa_guard_acquire>
 801cf8e:	b138      	cbz	r0, 801cfa0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801cf90:	4620      	mov	r0, r4
 801cf92:	f009 fa8a 	bl	80264aa <__cxa_guard_release>
 801cf96:	4a06      	ldr	r2, [pc, #24]	; (801cfb0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801cf98:	4909      	ldr	r1, [pc, #36]	; (801cfc0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801cf9a:	480a      	ldr	r0, [pc, #40]	; (801cfc4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801cf9c:	f009 fa72 	bl	8026484 <__aeabi_atexit>
 801cfa0:	4b05      	ldr	r3, [pc, #20]	; (801cfb8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801cfa2:	66ab      	str	r3, [r5, #104]	; 0x68
 801cfa4:	4b07      	ldr	r3, [pc, #28]	; (801cfc4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801cfa6:	66eb      	str	r3, [r5, #108]	; 0x6c
 801cfa8:	bd38      	pop	{r3, r4, r5, pc}
 801cfaa:	bf00      	nop
 801cfac:	2001385c 	.word	0x2001385c
 801cfb0:	20000000 	.word	0x20000000
 801cfb4:	080196d7 	.word	0x080196d7
 801cfb8:	20000094 	.word	0x20000094
 801cfbc:	20013860 	.word	0x20013860
 801cfc0:	080196d5 	.word	0x080196d5
 801cfc4:	20000098 	.word	0x20000098

0801cfc8 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 801cfc8:	b510      	push	{r4, lr}
 801cfca:	4604      	mov	r4, r0
 801cfcc:	f7ff ff88 	bl	801cee0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801cfd0:	4620      	mov	r0, r4
 801cfd2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801cfd6:	f7ff bfbd 	b.w	801cf54 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801cfda <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801cfda:	b510      	push	{r4, lr}
 801cfdc:	4604      	mov	r4, r0
 801cfde:	f7ff fff3 	bl	801cfc8 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801cfe2:	4620      	mov	r0, r4
 801cfe4:	f7ff ff72 	bl	801cecc <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 801cfe8:	4620      	mov	r0, r4
 801cfea:	f7ff fdf9 	bl	801cbe0 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801cfee:	4620      	mov	r0, r4
 801cff0:	f7ff fcfa 	bl	801c9e8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801cff4:	4620      	mov	r0, r4
 801cff6:	f7ff fd75 	bl	801cae4 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801cffa:	4620      	mov	r0, r4
 801cffc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801d000:	f7ff bee0 	b.w	801cdc4 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

0801d004 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 801d004:	b538      	push	{r3, r4, r5, lr}
 801d006:	4c0b      	ldr	r4, [pc, #44]	; (801d034 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 801d008:	7823      	ldrb	r3, [r4, #0]
 801d00a:	f3bf 8f5b 	dmb	ish
 801d00e:	07db      	lsls	r3, r3, #31
 801d010:	4605      	mov	r5, r0
 801d012:	d40b      	bmi.n	801d02c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801d014:	4620      	mov	r0, r4
 801d016:	f009 fa3c 	bl	8026492 <__cxa_guard_acquire>
 801d01a:	b138      	cbz	r0, 801d02c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801d01c:	4620      	mov	r0, r4
 801d01e:	f009 fa44 	bl	80264aa <__cxa_guard_release>
 801d022:	4a05      	ldr	r2, [pc, #20]	; (801d038 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 801d024:	4905      	ldr	r1, [pc, #20]	; (801d03c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 801d026:	4806      	ldr	r0, [pc, #24]	; (801d040 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801d028:	f009 fa2c 	bl	8026484 <__aeabi_atexit>
 801d02c:	4b04      	ldr	r3, [pc, #16]	; (801d040 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801d02e:	67ab      	str	r3, [r5, #120]	; 0x78
 801d030:	bd38      	pop	{r3, r4, r5, pc}
 801d032:	bf00      	nop
 801d034:	20013850 	.word	0x20013850
 801d038:	20000000 	.word	0x20000000
 801d03c:	080196cf 	.word	0x080196cf
 801d040:	2000008c 	.word	0x2000008c

0801d044 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 801d044:	b538      	push	{r3, r4, r5, lr}
 801d046:	4c0b      	ldr	r4, [pc, #44]	; (801d074 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 801d048:	7823      	ldrb	r3, [r4, #0]
 801d04a:	f3bf 8f5b 	dmb	ish
 801d04e:	07db      	lsls	r3, r3, #31
 801d050:	4605      	mov	r5, r0
 801d052:	d40b      	bmi.n	801d06c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801d054:	4620      	mov	r0, r4
 801d056:	f009 fa1c 	bl	8026492 <__cxa_guard_acquire>
 801d05a:	b138      	cbz	r0, 801d06c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801d05c:	4620      	mov	r0, r4
 801d05e:	f009 fa24 	bl	80264aa <__cxa_guard_release>
 801d062:	4a05      	ldr	r2, [pc, #20]	; (801d078 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 801d064:	4905      	ldr	r1, [pc, #20]	; (801d07c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 801d066:	4806      	ldr	r0, [pc, #24]	; (801d080 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801d068:	f009 fa0c 	bl	8026484 <__aeabi_atexit>
 801d06c:	4b04      	ldr	r3, [pc, #16]	; (801d080 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801d06e:	67eb      	str	r3, [r5, #124]	; 0x7c
 801d070:	bd38      	pop	{r3, r4, r5, pc}
 801d072:	bf00      	nop
 801d074:	20013854 	.word	0x20013854
 801d078:	20000000 	.word	0x20000000
 801d07c:	080196cd 	.word	0x080196cd
 801d080:	20000090 	.word	0x20000090

0801d084 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 801d084:	b570      	push	{r4, r5, r6, lr}
 801d086:	4d0d      	ldr	r5, [pc, #52]	; (801d0bc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 801d088:	4c0d      	ldr	r4, [pc, #52]	; (801d0c0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 801d08a:	782b      	ldrb	r3, [r5, #0]
 801d08c:	f3bf 8f5b 	dmb	ish
 801d090:	f013 0f01 	tst.w	r3, #1
 801d094:	4606      	mov	r6, r0
 801d096:	d10d      	bne.n	801d0b4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801d098:	4628      	mov	r0, r5
 801d09a:	f009 f9fa 	bl	8026492 <__cxa_guard_acquire>
 801d09e:	b148      	cbz	r0, 801d0b4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801d0a0:	4b08      	ldr	r3, [pc, #32]	; (801d0c4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 801d0a2:	6023      	str	r3, [r4, #0]
 801d0a4:	4628      	mov	r0, r5
 801d0a6:	f009 fa00 	bl	80264aa <__cxa_guard_release>
 801d0aa:	4a07      	ldr	r2, [pc, #28]	; (801d0c8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 801d0ac:	4907      	ldr	r1, [pc, #28]	; (801d0cc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 801d0ae:	4620      	mov	r0, r4
 801d0b0:	f009 f9e8 	bl	8026484 <__aeabi_atexit>
 801d0b4:	f8c6 4080 	str.w	r4, [r6, #128]	; 0x80
 801d0b8:	bd70      	pop	{r4, r5, r6, pc}
 801d0ba:	bf00      	nop
 801d0bc:	20013858 	.word	0x20013858
 801d0c0:	200138cc 	.word	0x200138cc
 801d0c4:	0802b554 	.word	0x0802b554
 801d0c8:	20000000 	.word	0x20000000
 801d0cc:	080196cb 	.word	0x080196cb

0801d0d0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 801d0d0:	b510      	push	{r4, lr}
 801d0d2:	4604      	mov	r4, r0
 801d0d4:	f7ff ff96 	bl	801d004 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 801d0d8:	4620      	mov	r0, r4
 801d0da:	f7ff ffb3 	bl	801d044 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 801d0de:	4620      	mov	r0, r4
 801d0e0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801d0e4:	f7ff bfce 	b.w	801d084 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

0801d0e8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 801d0e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d0ec:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 801d0f0:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 801d0f4:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 801d0f8:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 801d0fc:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 801d100:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 801d104:	8808      	ldrh	r0, [r1, #0]
 801d106:	fb05 4c0e 	mla	ip, r5, lr, r4
 801d10a:	2d00      	cmp	r5, #0
 801d10c:	eb02 0a0c 	add.w	sl, r2, ip
 801d110:	f2c0 80b0 	blt.w	801d274 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801d114:	45ab      	cmp	fp, r5
 801d116:	f340 80ad 	ble.w	801d274 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801d11a:	2c00      	cmp	r4, #0
 801d11c:	f2c0 80a8 	blt.w	801d270 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801d120:	45a6      	cmp	lr, r4
 801d122:	f340 80a5 	ble.w	801d270 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801d126:	f812 200c 	ldrb.w	r2, [r2, ip]
 801d12a:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 801d12e:	1c62      	adds	r2, r4, #1
 801d130:	f100 80a3 	bmi.w	801d27a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801d134:	4596      	cmp	lr, r2
 801d136:	f340 80a0 	ble.w	801d27a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801d13a:	f1b9 0f00 	cmp.w	r9, #0
 801d13e:	f000 809c 	beq.w	801d27a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801d142:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801d146:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801d14a:	3501      	adds	r5, #1
 801d14c:	f100 8099 	bmi.w	801d282 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801d150:	45ab      	cmp	fp, r5
 801d152:	f340 8096 	ble.w	801d282 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801d156:	2f00      	cmp	r7, #0
 801d158:	f000 8093 	beq.w	801d282 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801d15c:	2c00      	cmp	r4, #0
 801d15e:	f2c0 808e 	blt.w	801d27e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801d162:	45a6      	cmp	lr, r4
 801d164:	f340 808b 	ble.w	801d27e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801d168:	f81a 200e 	ldrb.w	r2, [sl, lr]
 801d16c:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 801d170:	3401      	adds	r4, #1
 801d172:	f100 8089 	bmi.w	801d288 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801d176:	45a6      	cmp	lr, r4
 801d178:	f340 8086 	ble.w	801d288 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801d17c:	f1b9 0f00 	cmp.w	r9, #0
 801d180:	f000 8082 	beq.w	801d288 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801d184:	44d6      	add	lr, sl
 801d186:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801d18a:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801d18e:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801d192:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801d196:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801d19a:	fb19 fe07 	smulbb	lr, r9, r7
 801d19e:	ea44 0808 	orr.w	r8, r4, r8
 801d1a2:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801d1a6:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801d1aa:	f1c7 0210 	rsb	r2, r7, #16
 801d1ae:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801d1b2:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801d1b6:	ea44 0c0c 	orr.w	ip, r4, ip
 801d1ba:	eba2 0209 	sub.w	r2, r2, r9
 801d1be:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801d1c2:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801d1c6:	fb04 f40c 	mul.w	r4, r4, ip
 801d1ca:	fb02 4808 	mla	r8, r2, r8, r4
 801d1ce:	041a      	lsls	r2, r3, #16
 801d1d0:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801d1d4:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801d1d8:	4313      	orrs	r3, r2
 801d1da:	042a      	lsls	r2, r5, #16
 801d1dc:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801d1e0:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801d1e4:	fb0e 8303 	mla	r3, lr, r3, r8
 801d1e8:	432a      	orrs	r2, r5
 801d1ea:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801d1ee:	fb07 3202 	mla	r2, r7, r2, r3
 801d1f2:	0d53      	lsrs	r3, r2, #21
 801d1f4:	0952      	lsrs	r2, r2, #5
 801d1f6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d1fa:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d1fe:	431a      	orrs	r2, r3
 801d200:	b293      	uxth	r3, r2
 801d202:	b2b4      	uxth	r4, r6
 801d204:	1202      	asrs	r2, r0, #8
 801d206:	43f6      	mvns	r6, r6
 801d208:	b2f6      	uxtb	r6, r6
 801d20a:	121d      	asrs	r5, r3, #8
 801d20c:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801d210:	fb12 f206 	smulbb	r2, r2, r6
 801d214:	10c7      	asrs	r7, r0, #3
 801d216:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801d21a:	00c0      	lsls	r0, r0, #3
 801d21c:	fb05 2504 	mla	r5, r5, r4, r2
 801d220:	b2c0      	uxtb	r0, r0
 801d222:	10da      	asrs	r2, r3, #3
 801d224:	00db      	lsls	r3, r3, #3
 801d226:	b2db      	uxtb	r3, r3
 801d228:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801d22c:	fb10 f006 	smulbb	r0, r0, r6
 801d230:	b2ad      	uxth	r5, r5
 801d232:	fb03 0004 	mla	r0, r3, r4, r0
 801d236:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801d23a:	fb17 f706 	smulbb	r7, r7, r6
 801d23e:	b280      	uxth	r0, r0
 801d240:	1c6b      	adds	r3, r5, #1
 801d242:	fb02 7204 	mla	r2, r2, r4, r7
 801d246:	b292      	uxth	r2, r2
 801d248:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801d24c:	1c43      	adds	r3, r0, #1
 801d24e:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801d252:	1c50      	adds	r0, r2, #1
 801d254:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801d258:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801d25c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d260:	0952      	lsrs	r2, r2, #5
 801d262:	432b      	orrs	r3, r5
 801d264:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d268:	4313      	orrs	r3, r2
 801d26a:	800b      	strh	r3, [r1, #0]
 801d26c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d270:	4680      	mov	r8, r0
 801d272:	e75c      	b.n	801d12e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 801d274:	4684      	mov	ip, r0
 801d276:	4680      	mov	r8, r0
 801d278:	e767      	b.n	801d14a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801d27a:	4684      	mov	ip, r0
 801d27c:	e765      	b.n	801d14a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801d27e:	4605      	mov	r5, r0
 801d280:	e776      	b.n	801d170 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801d282:	4603      	mov	r3, r0
 801d284:	4605      	mov	r5, r0
 801d286:	e782      	b.n	801d18e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801d288:	4603      	mov	r3, r0
 801d28a:	e780      	b.n	801d18e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

0801d28c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d28c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d290:	b099      	sub	sp, #100	; 0x64
 801d292:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 801d296:	9215      	str	r2, [sp, #84]	; 0x54
 801d298:	9309      	str	r3, [sp, #36]	; 0x24
 801d29a:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 801d29c:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 801d2a0:	930d      	str	r3, [sp, #52]	; 0x34
 801d2a2:	910c      	str	r1, [sp, #48]	; 0x30
 801d2a4:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 801d2a8:	9016      	str	r0, [sp, #88]	; 0x58
 801d2aa:	6850      	ldr	r0, [r2, #4]
 801d2ac:	6812      	ldr	r2, [r2, #0]
 801d2ae:	fb00 1303 	mla	r3, r0, r3, r1
 801d2b2:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 801d2b6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801d2b8:	681b      	ldr	r3, [r3, #0]
 801d2ba:	930b      	str	r3, [sp, #44]	; 0x2c
 801d2bc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801d2be:	685e      	ldr	r6, [r3, #4]
 801d2c0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d2c2:	43db      	mvns	r3, r3
 801d2c4:	b2db      	uxtb	r3, r3
 801d2c6:	3604      	adds	r6, #4
 801d2c8:	930a      	str	r3, [sp, #40]	; 0x28
 801d2ca:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801d2cc:	2b00      	cmp	r3, #0
 801d2ce:	dc03      	bgt.n	801d2d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801d2d0:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801d2d2:	2b00      	cmp	r3, #0
 801d2d4:	f340 8225 	ble.w	801d722 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801d2d8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801d2da:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d2de:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d2e2:	1e48      	subs	r0, r1, #1
 801d2e4:	1e57      	subs	r7, r2, #1
 801d2e6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d2e8:	2b00      	cmp	r3, #0
 801d2ea:	f340 80e3 	ble.w	801d4b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801d2ee:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 801d2f2:	ea4f 4325 	mov.w	r3, r5, asr #16
 801d2f6:	d406      	bmi.n	801d306 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801d2f8:	4584      	cmp	ip, r0
 801d2fa:	da04      	bge.n	801d306 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801d2fc:	2b00      	cmp	r3, #0
 801d2fe:	db02      	blt.n	801d306 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801d300:	42bb      	cmp	r3, r7
 801d302:	f2c0 80d8 	blt.w	801d4b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801d306:	f11c 0c01 	adds.w	ip, ip, #1
 801d30a:	f100 80c9 	bmi.w	801d4a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801d30e:	4561      	cmp	r1, ip
 801d310:	f2c0 80c6 	blt.w	801d4a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801d314:	3301      	adds	r3, #1
 801d316:	f100 80c3 	bmi.w	801d4a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801d31a:	429a      	cmp	r2, r3
 801d31c:	f2c0 80c0 	blt.w	801d4a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801d320:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801d324:	4647      	mov	r7, r8
 801d326:	f1bb 0f00 	cmp.w	fp, #0
 801d32a:	f340 80e3 	ble.w	801d4f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 801d32e:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801d330:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801d332:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801d336:	689b      	ldr	r3, [r3, #8]
 801d338:	ea5f 422a 	movs.w	r2, sl, asr #16
 801d33c:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801d340:	f3ca 3003 	ubfx	r0, sl, #12, #4
 801d344:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801d348:	f100 8121 	bmi.w	801d58e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801d34c:	f103 39ff 	add.w	r9, r3, #4294967295
 801d350:	454a      	cmp	r2, r9
 801d352:	f280 811c 	bge.w	801d58e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801d356:	f1bc 0f00 	cmp.w	ip, #0
 801d35a:	f2c0 8118 	blt.w	801d58e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801d35e:	f10e 39ff 	add.w	r9, lr, #4294967295
 801d362:	45cc      	cmp	ip, r9
 801d364:	f280 8113 	bge.w	801d58e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801d368:	b21b      	sxth	r3, r3
 801d36a:	fb0c 2203 	mla	r2, ip, r3, r2
 801d36e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801d370:	eb04 0902 	add.w	r9, r4, r2
 801d374:	5ca2      	ldrb	r2, [r4, r2]
 801d376:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 801d37a:	2800      	cmp	r0, #0
 801d37c:	f000 80fe 	beq.w	801d57c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801d380:	f899 2001 	ldrb.w	r2, [r9, #1]
 801d384:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801d388:	9211      	str	r2, [sp, #68]	; 0x44
 801d38a:	b151      	cbz	r1, 801d3a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801d38c:	eb09 0203 	add.w	r2, r9, r3
 801d390:	f819 3003 	ldrb.w	r3, [r9, r3]
 801d394:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801d398:	930f      	str	r3, [sp, #60]	; 0x3c
 801d39a:	7853      	ldrb	r3, [r2, #1]
 801d39c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801d3a0:	9312      	str	r3, [sp, #72]	; 0x48
 801d3a2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801d3a4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801d3a6:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801d3aa:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801d3ae:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801d3b2:	ea4c 0c03 	orr.w	ip, ip, r3
 801d3b6:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801d3b8:	041b      	lsls	r3, r3, #16
 801d3ba:	fb10 f201 	smulbb	r2, r0, r1
 801d3be:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801d3c2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801d3c6:	10d2      	asrs	r2, r2, #3
 801d3c8:	4323      	orrs	r3, r4
 801d3ca:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801d3ce:	4353      	muls	r3, r2
 801d3d0:	fb09 330c 	mla	r3, r9, ip, r3
 801d3d4:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801d3d8:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801d3dc:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801d3e0:	ea4c 0e0e 	orr.w	lr, ip, lr
 801d3e4:	f1c1 0c10 	rsb	ip, r1, #16
 801d3e8:	ebac 0c00 	sub.w	ip, ip, r0
 801d3ec:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801d3f0:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801d3f4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801d3f6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801d3f8:	0418      	lsls	r0, r3, #16
 801d3fa:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801d3fe:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801d402:	4318      	orrs	r0, r3
 801d404:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801d408:	fb02 c200 	mla	r2, r2, r0, ip
 801d40c:	0d53      	lsrs	r3, r2, #21
 801d40e:	0952      	lsrs	r2, r2, #5
 801d410:	8838      	ldrh	r0, [r7, #0]
 801d412:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d416:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d41a:	431a      	orrs	r2, r3
 801d41c:	b292      	uxth	r2, r2
 801d41e:	1201      	asrs	r1, r0, #8
 801d420:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 801d424:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801d428:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801d42c:	fb11 f104 	smulbb	r1, r1, r4
 801d430:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801d434:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d438:	00c0      	lsls	r0, r0, #3
 801d43a:	fb0c 1c03 	mla	ip, ip, r3, r1
 801d43e:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801d442:	10d1      	asrs	r1, r2, #3
 801d444:	b2c0      	uxtb	r0, r0
 801d446:	00d2      	lsls	r2, r2, #3
 801d448:	b2d2      	uxtb	r2, r2
 801d44a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801d44e:	fb1e fe04 	smulbb	lr, lr, r4
 801d452:	fb10 f004 	smulbb	r0, r0, r4
 801d456:	fa1f fc8c 	uxth.w	ip, ip
 801d45a:	fb01 e103 	mla	r1, r1, r3, lr
 801d45e:	fb02 0303 	mla	r3, r2, r3, r0
 801d462:	b29a      	uxth	r2, r3
 801d464:	f10c 0301 	add.w	r3, ip, #1
 801d468:	b289      	uxth	r1, r1
 801d46a:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801d46e:	1c53      	adds	r3, r2, #1
 801d470:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d474:	1c4a      	adds	r2, r1, #1
 801d476:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801d47a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801d47e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d482:	0949      	lsrs	r1, r1, #5
 801d484:	ea43 030c 	orr.w	r3, r3, ip
 801d488:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d48c:	430b      	orrs	r3, r1
 801d48e:	803b      	strh	r3, [r7, #0]
 801d490:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801d492:	449a      	add	sl, r3
 801d494:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801d496:	3702      	adds	r7, #2
 801d498:	441d      	add	r5, r3
 801d49a:	f10b 3bff 	add.w	fp, fp, #4294967295
 801d49e:	e742      	b.n	801d326 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801d4a0:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801d4a2:	449a      	add	sl, r3
 801d4a4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801d4a6:	441d      	add	r5, r3
 801d4a8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d4aa:	3b01      	subs	r3, #1
 801d4ac:	9309      	str	r3, [sp, #36]	; 0x24
 801d4ae:	f108 0802 	add.w	r8, r8, #2
 801d4b2:	e718      	b.n	801d2e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801d4b4:	d023      	beq.n	801d4fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801d4b6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d4b8:	9825      	ldr	r0, [sp, #148]	; 0x94
 801d4ba:	3b01      	subs	r3, #1
 801d4bc:	fb00 a003 	mla	r0, r0, r3, sl
 801d4c0:	1400      	asrs	r0, r0, #16
 801d4c2:	f53f af2d 	bmi.w	801d320 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801d4c6:	3901      	subs	r1, #1
 801d4c8:	4288      	cmp	r0, r1
 801d4ca:	f6bf af29 	bge.w	801d320 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801d4ce:	9926      	ldr	r1, [sp, #152]	; 0x98
 801d4d0:	fb01 5303 	mla	r3, r1, r3, r5
 801d4d4:	141b      	asrs	r3, r3, #16
 801d4d6:	f53f af23 	bmi.w	801d320 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801d4da:	3a01      	subs	r2, #1
 801d4dc:	4293      	cmp	r3, r2
 801d4de:	f6bf af1f 	bge.w	801d320 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801d4e2:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801d4e6:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 801d4ea:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 801d4ee:	f1be 0f00 	cmp.w	lr, #0
 801d4f2:	dc6c      	bgt.n	801d5ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801d4f4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d4f6:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801d4fa:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801d4fe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801d500:	2b00      	cmp	r3, #0
 801d502:	f340 810e 	ble.w	801d722 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801d506:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d50a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801d50e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801d512:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801d514:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d518:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d51c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d520:	eef0 6a62 	vmov.f32	s13, s5
 801d524:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d528:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d52c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d530:	ee16 aa90 	vmov	sl, s13
 801d534:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d538:	eef0 6a43 	vmov.f32	s13, s6
 801d53c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d540:	ee12 2a90 	vmov	r2, s5
 801d544:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d548:	fb92 f3f3 	sdiv	r3, r2, r3
 801d54c:	ee13 2a10 	vmov	r2, s6
 801d550:	9325      	str	r3, [sp, #148]	; 0x94
 801d552:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801d554:	fb92 f3f3 	sdiv	r3, r2, r3
 801d558:	9326      	str	r3, [sp, #152]	; 0x98
 801d55a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801d55c:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801d55e:	3b01      	subs	r3, #1
 801d560:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d564:	930c      	str	r3, [sp, #48]	; 0x30
 801d566:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801d568:	bf08      	it	eq
 801d56a:	4613      	moveq	r3, r2
 801d56c:	ee16 5a90 	vmov	r5, s13
 801d570:	9309      	str	r3, [sp, #36]	; 0x24
 801d572:	eeb0 3a67 	vmov.f32	s6, s15
 801d576:	eef0 2a47 	vmov.f32	s5, s14
 801d57a:	e6a6      	b.n	801d2ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801d57c:	2900      	cmp	r1, #0
 801d57e:	f43f af10 	beq.w	801d3a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801d582:	f819 3003 	ldrb.w	r3, [r9, r3]
 801d586:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801d58a:	930f      	str	r3, [sp, #60]	; 0x3c
 801d58c:	e709      	b.n	801d3a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801d58e:	f112 0901 	adds.w	r9, r2, #1
 801d592:	f53f af7d 	bmi.w	801d490 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801d596:	454b      	cmp	r3, r9
 801d598:	f6ff af7a 	blt.w	801d490 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801d59c:	f11c 0901 	adds.w	r9, ip, #1
 801d5a0:	f53f af76 	bmi.w	801d490 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801d5a4:	45ce      	cmp	lr, r9
 801d5a6:	f6ff af73 	blt.w	801d490 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801d5aa:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801d5ac:	9202      	str	r2, [sp, #8]
 801d5ae:	b21b      	sxth	r3, r3
 801d5b0:	fa0f f28e 	sxth.w	r2, lr
 801d5b4:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801d5b8:	e9cd c003 	strd	ip, r0, [sp, #12]
 801d5bc:	9201      	str	r2, [sp, #4]
 801d5be:	9300      	str	r3, [sp, #0]
 801d5c0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801d5c2:	9816      	ldr	r0, [sp, #88]	; 0x58
 801d5c4:	4633      	mov	r3, r6
 801d5c6:	4639      	mov	r1, r7
 801d5c8:	f7ff fd8e 	bl	801d0e8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801d5cc:	e760      	b.n	801d490 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801d5ce:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801d5d0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801d5d2:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801d5d6:	ea4f 422a 	mov.w	r2, sl, asr #16
 801d5da:	1429      	asrs	r1, r5, #16
 801d5dc:	fb03 2101 	mla	r1, r3, r1, r2
 801d5e0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801d5e2:	440a      	add	r2, r1
 801d5e4:	5c61      	ldrb	r1, [r4, r1]
 801d5e6:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801d5ea:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801d5ee:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801d5f2:	f1bc 0f00 	cmp.w	ip, #0
 801d5f6:	f000 808c 	beq.w	801d712 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 801d5fa:	7857      	ldrb	r7, [r2, #1]
 801d5fc:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 801d600:	9413      	str	r4, [sp, #76]	; 0x4c
 801d602:	b140      	cbz	r0, 801d616 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801d604:	18d7      	adds	r7, r2, r3
 801d606:	5cd3      	ldrb	r3, [r2, r3]
 801d608:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801d60c:	9310      	str	r3, [sp, #64]	; 0x40
 801d60e:	787b      	ldrb	r3, [r7, #1]
 801d610:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801d614:	9314      	str	r3, [sp, #80]	; 0x50
 801d616:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801d618:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801d61a:	fb1c f200 	smulbb	r2, ip, r0
 801d61e:	041f      	lsls	r7, r3, #16
 801d620:	10d2      	asrs	r2, r2, #3
 801d622:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801d626:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 801d62a:	431f      	orrs	r7, r3
 801d62c:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801d630:	9317      	str	r3, [sp, #92]	; 0x5c
 801d632:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801d634:	041b      	lsls	r3, r3, #16
 801d636:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 801d63a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801d63e:	ea43 030b 	orr.w	r3, r3, fp
 801d642:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801d644:	4353      	muls	r3, r2
 801d646:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801d64a:	fb04 3707 	mla	r7, r4, r7, r3
 801d64e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801d652:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801d656:	ea43 0b01 	orr.w	fp, r3, r1
 801d65a:	f1c0 0110 	rsb	r1, r0, #16
 801d65e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d660:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801d662:	eba1 0c0c 	sub.w	ip, r1, ip
 801d666:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801d66a:	fb0c 770b 	mla	r7, ip, fp, r7
 801d66e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801d672:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 801d676:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801d67a:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801d67e:	ea4c 0c0b 	orr.w	ip, ip, fp
 801d682:	fb02 770c 	mla	r7, r2, ip, r7
 801d686:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801d688:	0d79      	lsrs	r1, r7, #21
 801d68a:	097f      	lsrs	r7, r7, #5
 801d68c:	8812      	ldrh	r2, [r2, #0]
 801d68e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d692:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801d696:	430f      	orrs	r7, r1
 801d698:	b2bb      	uxth	r3, r7
 801d69a:	1211      	asrs	r1, r2, #8
 801d69c:	1218      	asrs	r0, r3, #8
 801d69e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801d6a2:	fb11 f104 	smulbb	r1, r1, r4
 801d6a6:	10d7      	asrs	r7, r2, #3
 801d6a8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801d6ac:	00d2      	lsls	r2, r2, #3
 801d6ae:	fb00 1009 	mla	r0, r0, r9, r1
 801d6b2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801d6b6:	10d9      	asrs	r1, r3, #3
 801d6b8:	b2d2      	uxtb	r2, r2
 801d6ba:	00db      	lsls	r3, r3, #3
 801d6bc:	fb17 f704 	smulbb	r7, r7, r4
 801d6c0:	fb12 f204 	smulbb	r2, r2, r4
 801d6c4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801d6c8:	b2db      	uxtb	r3, r3
 801d6ca:	b280      	uxth	r0, r0
 801d6cc:	fb01 7109 	mla	r1, r1, r9, r7
 801d6d0:	fb03 2309 	mla	r3, r3, r9, r2
 801d6d4:	b29b      	uxth	r3, r3
 801d6d6:	b289      	uxth	r1, r1
 801d6d8:	1c42      	adds	r2, r0, #1
 801d6da:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801d6de:	1c4f      	adds	r7, r1, #1
 801d6e0:	1c5a      	adds	r2, r3, #1
 801d6e2:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801d6e6:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801d6ea:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801d6ee:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801d6f2:	0949      	lsrs	r1, r1, #5
 801d6f4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d6f6:	4310      	orrs	r0, r2
 801d6f8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d6fc:	4308      	orrs	r0, r1
 801d6fe:	f823 0b02 	strh.w	r0, [r3], #2
 801d702:	930e      	str	r3, [sp, #56]	; 0x38
 801d704:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801d706:	449a      	add	sl, r3
 801d708:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801d70a:	f10e 3eff 	add.w	lr, lr, #4294967295
 801d70e:	441d      	add	r5, r3
 801d710:	e6ed      	b.n	801d4ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 801d712:	2800      	cmp	r0, #0
 801d714:	f43f af7f 	beq.w	801d616 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801d718:	5cd3      	ldrb	r3, [r2, r3]
 801d71a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801d71e:	9310      	str	r3, [sp, #64]	; 0x40
 801d720:	e779      	b.n	801d616 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801d722:	b019      	add	sp, #100	; 0x64
 801d724:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d728 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801d728:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801d72c:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 801d730:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801d734:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 801d738:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801d73c:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 801d740:	8808      	ldrh	r0, [r1, #0]
 801d742:	fb08 470e 	mla	r7, r8, lr, r4
 801d746:	f1b8 0f00 	cmp.w	r8, #0
 801d74a:	eb02 0907 	add.w	r9, r2, r7
 801d74e:	db67      	blt.n	801d820 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801d750:	45c2      	cmp	sl, r8
 801d752:	dd65      	ble.n	801d820 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801d754:	2c00      	cmp	r4, #0
 801d756:	db61      	blt.n	801d81c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801d758:	45a6      	cmp	lr, r4
 801d75a:	dd5f      	ble.n	801d81c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801d75c:	5dd2      	ldrb	r2, [r2, r7]
 801d75e:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801d762:	1c62      	adds	r2, r4, #1
 801d764:	d45f      	bmi.n	801d826 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801d766:	4596      	cmp	lr, r2
 801d768:	dd5d      	ble.n	801d826 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801d76a:	2d00      	cmp	r5, #0
 801d76c:	d05b      	beq.n	801d826 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801d76e:	f899 2001 	ldrb.w	r2, [r9, #1]
 801d772:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801d776:	f118 0801 	adds.w	r8, r8, #1
 801d77a:	d458      	bmi.n	801d82e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801d77c:	45c2      	cmp	sl, r8
 801d77e:	dd56      	ble.n	801d82e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801d780:	2e00      	cmp	r6, #0
 801d782:	d054      	beq.n	801d82e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801d784:	2c00      	cmp	r4, #0
 801d786:	db50      	blt.n	801d82a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801d788:	45a6      	cmp	lr, r4
 801d78a:	dd4e      	ble.n	801d82a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801d78c:	f819 200e 	ldrb.w	r2, [r9, lr]
 801d790:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801d794:	3401      	adds	r4, #1
 801d796:	d407      	bmi.n	801d7a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801d798:	45a6      	cmp	lr, r4
 801d79a:	dd05      	ble.n	801d7a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801d79c:	b125      	cbz	r5, 801d7a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801d79e:	44ce      	add	lr, r9
 801d7a0:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801d7a4:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801d7a8:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801d7ac:	fb15 f406 	smulbb	r4, r5, r6
 801d7b0:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801d7b4:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801d7b8:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801d7bc:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801d7c0:	ea43 0c0c 	orr.w	ip, r3, ip
 801d7c4:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801d7c8:	f1c6 0310 	rsb	r3, r6, #16
 801d7cc:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801d7d0:	1b5b      	subs	r3, r3, r5
 801d7d2:	ea4e 0707 	orr.w	r7, lr, r7
 801d7d6:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801d7da:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801d7de:	437d      	muls	r5, r7
 801d7e0:	fb03 5c0c 	mla	ip, r3, ip, r5
 801d7e4:	0403      	lsls	r3, r0, #16
 801d7e6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801d7ea:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d7ee:	4318      	orrs	r0, r3
 801d7f0:	0413      	lsls	r3, r2, #16
 801d7f2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801d7f6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d7fa:	4313      	orrs	r3, r2
 801d7fc:	fb04 c000 	mla	r0, r4, r0, ip
 801d800:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801d804:	fb06 0003 	mla	r0, r6, r3, r0
 801d808:	0d43      	lsrs	r3, r0, #21
 801d80a:	0940      	lsrs	r0, r0, #5
 801d80c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d810:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d814:	4318      	orrs	r0, r3
 801d816:	8008      	strh	r0, [r1, #0]
 801d818:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801d81c:	4684      	mov	ip, r0
 801d81e:	e7a0      	b.n	801d762 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 801d820:	4607      	mov	r7, r0
 801d822:	4684      	mov	ip, r0
 801d824:	e7a7      	b.n	801d776 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801d826:	4607      	mov	r7, r0
 801d828:	e7a5      	b.n	801d776 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801d82a:	4602      	mov	r2, r0
 801d82c:	e7b2      	b.n	801d794 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 801d82e:	4602      	mov	r2, r0
 801d830:	e7ba      	b.n	801d7a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

0801d832 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d832:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d836:	b093      	sub	sp, #76	; 0x4c
 801d838:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801d83c:	920f      	str	r2, [sp, #60]	; 0x3c
 801d83e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801d840:	9108      	str	r1, [sp, #32]
 801d842:	9306      	str	r3, [sp, #24]
 801d844:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801d848:	9010      	str	r0, [sp, #64]	; 0x40
 801d84a:	6850      	ldr	r0, [r2, #4]
 801d84c:	6812      	ldr	r2, [r2, #0]
 801d84e:	fb00 1303 	mla	r3, r0, r3, r1
 801d852:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801d856:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d858:	681b      	ldr	r3, [r3, #0]
 801d85a:	9307      	str	r3, [sp, #28]
 801d85c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d85e:	685f      	ldr	r7, [r3, #4]
 801d860:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801d864:	3704      	adds	r7, #4
 801d866:	9b08      	ldr	r3, [sp, #32]
 801d868:	2b00      	cmp	r3, #0
 801d86a:	dc03      	bgt.n	801d874 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801d86c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801d86e:	2b00      	cmp	r3, #0
 801d870:	f340 81b2 	ble.w	801dbd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801d874:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d876:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d87a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d87e:	1e48      	subs	r0, r1, #1
 801d880:	f102 3cff 	add.w	ip, r2, #4294967295
 801d884:	9b06      	ldr	r3, [sp, #24]
 801d886:	2b00      	cmp	r3, #0
 801d888:	f340 80a9 	ble.w	801d9de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801d88c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801d890:	ea4f 4326 	mov.w	r3, r6, asr #16
 801d894:	d406      	bmi.n	801d8a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801d896:	4586      	cmp	lr, r0
 801d898:	da04      	bge.n	801d8a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801d89a:	2b00      	cmp	r3, #0
 801d89c:	db02      	blt.n	801d8a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801d89e:	4563      	cmp	r3, ip
 801d8a0:	f2c0 809e 	blt.w	801d9e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801d8a4:	f11e 0e01 	adds.w	lr, lr, #1
 801d8a8:	f100 808f 	bmi.w	801d9ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801d8ac:	4571      	cmp	r1, lr
 801d8ae:	f2c0 808c 	blt.w	801d9ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801d8b2:	3301      	adds	r3, #1
 801d8b4:	f100 8089 	bmi.w	801d9ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801d8b8:	429a      	cmp	r2, r3
 801d8ba:	f2c0 8086 	blt.w	801d9ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801d8be:	f8dd b018 	ldr.w	fp, [sp, #24]
 801d8c2:	46c8      	mov	r8, r9
 801d8c4:	f1bb 0f00 	cmp.w	fp, #0
 801d8c8:	f340 80a6 	ble.w	801da18 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801d8cc:	9a24      	ldr	r2, [sp, #144]	; 0x90
 801d8ce:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d8d0:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801d8d4:	689b      	ldr	r3, [r3, #8]
 801d8d6:	1422      	asrs	r2, r4, #16
 801d8d8:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801d8dc:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801d8e0:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801d8e4:	f100 80e3 	bmi.w	801daae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801d8e8:	f103 3aff 	add.w	sl, r3, #4294967295
 801d8ec:	4552      	cmp	r2, sl
 801d8ee:	f280 80de 	bge.w	801daae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801d8f2:	f1bc 0f00 	cmp.w	ip, #0
 801d8f6:	f2c0 80da 	blt.w	801daae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801d8fa:	f10e 3aff 	add.w	sl, lr, #4294967295
 801d8fe:	45d4      	cmp	ip, sl
 801d900:	f280 80d5 	bge.w	801daae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801d904:	b21b      	sxth	r3, r3
 801d906:	fb0c 2203 	mla	r2, ip, r3, r2
 801d90a:	9d07      	ldr	r5, [sp, #28]
 801d90c:	eb05 0a02 	add.w	sl, r5, r2
 801d910:	5caa      	ldrb	r2, [r5, r2]
 801d912:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 801d916:	2800      	cmp	r0, #0
 801d918:	f000 80c0 	beq.w	801da9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801d91c:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801d920:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801d924:	920b      	str	r2, [sp, #44]	; 0x2c
 801d926:	b151      	cbz	r1, 801d93e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801d928:	eb0a 0203 	add.w	r2, sl, r3
 801d92c:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801d930:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801d934:	9309      	str	r3, [sp, #36]	; 0x24
 801d936:	7853      	ldrb	r3, [r2, #1]
 801d938:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801d93c:	930c      	str	r3, [sp, #48]	; 0x30
 801d93e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d940:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801d942:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801d946:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801d94a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801d94e:	ea4c 0c03 	orr.w	ip, ip, r3
 801d952:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801d954:	041b      	lsls	r3, r3, #16
 801d956:	fb10 f201 	smulbb	r2, r0, r1
 801d95a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801d95e:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801d962:	10d2      	asrs	r2, r2, #3
 801d964:	432b      	orrs	r3, r5
 801d966:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 801d96a:	4353      	muls	r3, r2
 801d96c:	fb0a 330c 	mla	r3, sl, ip, r3
 801d970:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801d974:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801d978:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801d97c:	ea4c 0e0e 	orr.w	lr, ip, lr
 801d980:	f1c1 0c10 	rsb	ip, r1, #16
 801d984:	ebac 0c00 	sub.w	ip, ip, r0
 801d988:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801d98c:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801d990:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d992:	0418      	lsls	r0, r3, #16
 801d994:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801d998:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801d99c:	4318      	orrs	r0, r3
 801d99e:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801d9a2:	fb02 c200 	mla	r2, r2, r0, ip
 801d9a6:	0d53      	lsrs	r3, r2, #21
 801d9a8:	0952      	lsrs	r2, r2, #5
 801d9aa:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d9ae:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d9b2:	431a      	orrs	r2, r3
 801d9b4:	f8a8 2000 	strh.w	r2, [r8]
 801d9b8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801d9ba:	441c      	add	r4, r3
 801d9bc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d9be:	f108 0802 	add.w	r8, r8, #2
 801d9c2:	441e      	add	r6, r3
 801d9c4:	f10b 3bff 	add.w	fp, fp, #4294967295
 801d9c8:	e77c      	b.n	801d8c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801d9ca:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801d9cc:	441c      	add	r4, r3
 801d9ce:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d9d0:	441e      	add	r6, r3
 801d9d2:	9b06      	ldr	r3, [sp, #24]
 801d9d4:	3b01      	subs	r3, #1
 801d9d6:	9306      	str	r3, [sp, #24]
 801d9d8:	f109 0902 	add.w	r9, r9, #2
 801d9dc:	e752      	b.n	801d884 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801d9de:	d020      	beq.n	801da22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801d9e0:	9b06      	ldr	r3, [sp, #24]
 801d9e2:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801d9e4:	3b01      	subs	r3, #1
 801d9e6:	fb00 4003 	mla	r0, r0, r3, r4
 801d9ea:	1400      	asrs	r0, r0, #16
 801d9ec:	f53f af67 	bmi.w	801d8be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801d9f0:	3901      	subs	r1, #1
 801d9f2:	4288      	cmp	r0, r1
 801d9f4:	f6bf af63 	bge.w	801d8be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801d9f8:	9920      	ldr	r1, [sp, #128]	; 0x80
 801d9fa:	fb01 6303 	mla	r3, r1, r3, r6
 801d9fe:	141b      	asrs	r3, r3, #16
 801da00:	f53f af5d 	bmi.w	801d8be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801da04:	3a01      	subs	r2, #1
 801da06:	4293      	cmp	r3, r2
 801da08:	f6bf af59 	bge.w	801d8be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801da0c:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801da10:	46ca      	mov	sl, r9
 801da12:	f1b8 0f00 	cmp.w	r8, #0
 801da16:	dc67      	bgt.n	801dae8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801da18:	9b06      	ldr	r3, [sp, #24]
 801da1a:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801da1e:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801da22:	9b08      	ldr	r3, [sp, #32]
 801da24:	2b00      	cmp	r3, #0
 801da26:	f340 80d7 	ble.w	801dbd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801da2a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801da2e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801da32:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801da36:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801da38:	ee31 1a05 	vadd.f32	s2, s2, s10
 801da3c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801da40:	eeb0 6a62 	vmov.f32	s12, s5
 801da44:	ee61 7a27 	vmul.f32	s15, s2, s15
 801da48:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801da4c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801da50:	ee16 4a10 	vmov	r4, s12
 801da54:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801da58:	eeb0 6a43 	vmov.f32	s12, s6
 801da5c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801da60:	ee12 2a90 	vmov	r2, s5
 801da64:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801da68:	fb92 f3f3 	sdiv	r3, r2, r3
 801da6c:	ee13 2a10 	vmov	r2, s6
 801da70:	931f      	str	r3, [sp, #124]	; 0x7c
 801da72:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801da74:	fb92 f3f3 	sdiv	r3, r2, r3
 801da78:	9320      	str	r3, [sp, #128]	; 0x80
 801da7a:	9b08      	ldr	r3, [sp, #32]
 801da7c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801da7e:	3b01      	subs	r3, #1
 801da80:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801da84:	9308      	str	r3, [sp, #32]
 801da86:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801da88:	bf08      	it	eq
 801da8a:	4613      	moveq	r3, r2
 801da8c:	ee16 6a10 	vmov	r6, s12
 801da90:	9306      	str	r3, [sp, #24]
 801da92:	eeb0 3a67 	vmov.f32	s6, s15
 801da96:	eef0 2a47 	vmov.f32	s5, s14
 801da9a:	e6e4      	b.n	801d866 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801da9c:	2900      	cmp	r1, #0
 801da9e:	f43f af4e 	beq.w	801d93e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801daa2:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801daa6:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801daaa:	9309      	str	r3, [sp, #36]	; 0x24
 801daac:	e747      	b.n	801d93e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801daae:	f112 0a01 	adds.w	sl, r2, #1
 801dab2:	d481      	bmi.n	801d9b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801dab4:	4553      	cmp	r3, sl
 801dab6:	f6ff af7f 	blt.w	801d9b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801daba:	f11c 0a01 	adds.w	sl, ip, #1
 801dabe:	f53f af7b 	bmi.w	801d9b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801dac2:	45d6      	cmp	lr, sl
 801dac4:	f6ff af78 	blt.w	801d9b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801dac8:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 801dacc:	b21b      	sxth	r3, r3
 801dace:	fa0f f28e 	sxth.w	r2, lr
 801dad2:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801dad6:	9201      	str	r2, [sp, #4]
 801dad8:	9300      	str	r3, [sp, #0]
 801dada:	9a07      	ldr	r2, [sp, #28]
 801dadc:	9810      	ldr	r0, [sp, #64]	; 0x40
 801dade:	463b      	mov	r3, r7
 801dae0:	4641      	mov	r1, r8
 801dae2:	f7ff fe21 	bl	801d728 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801dae6:	e767      	b.n	801d9b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801dae8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801daea:	9d07      	ldr	r5, [sp, #28]
 801daec:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801daf0:	1422      	asrs	r2, r4, #16
 801daf2:	1431      	asrs	r1, r6, #16
 801daf4:	fb03 2101 	mla	r1, r3, r1, r2
 801daf8:	9a07      	ldr	r2, [sp, #28]
 801dafa:	440a      	add	r2, r1
 801dafc:	5c69      	ldrb	r1, [r5, r1]
 801dafe:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 801db02:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801db06:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 801db0a:	f1be 0f00 	cmp.w	lr, #0
 801db0e:	d05c      	beq.n	801dbca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801db10:	f892 c001 	ldrb.w	ip, [r2, #1]
 801db14:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 801db18:	950d      	str	r5, [sp, #52]	; 0x34
 801db1a:	b150      	cbz	r0, 801db32 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801db1c:	eb02 0c03 	add.w	ip, r2, r3
 801db20:	5cd3      	ldrb	r3, [r2, r3]
 801db22:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801db26:	930a      	str	r3, [sp, #40]	; 0x28
 801db28:	f89c 3001 	ldrb.w	r3, [ip, #1]
 801db2c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801db30:	930e      	str	r3, [sp, #56]	; 0x38
 801db32:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801db34:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801db36:	fb1e f200 	smulbb	r2, lr, r0
 801db3a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801db3e:	10d2      	asrs	r2, r2, #3
 801db40:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801db44:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801db48:	ea4c 0c03 	orr.w	ip, ip, r3
 801db4c:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 801db50:	9311      	str	r3, [sp, #68]	; 0x44
 801db52:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801db54:	041b      	lsls	r3, r3, #16
 801db56:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 801db5a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801db5e:	ea43 030b 	orr.w	r3, r3, fp
 801db62:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801db64:	4353      	muls	r3, r2
 801db66:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801db6a:	fb05 3c0c 	mla	ip, r5, ip, r3
 801db6e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801db72:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801db76:	ea43 0b01 	orr.w	fp, r3, r1
 801db7a:	f1c0 0110 	rsb	r1, r0, #16
 801db7e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801db80:	eba1 0e0e 	sub.w	lr, r1, lr
 801db84:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801db88:	fb0e cc0b 	mla	ip, lr, fp, ip
 801db8c:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801db90:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 801db94:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801db98:	ea4b 0e0e 	orr.w	lr, fp, lr
 801db9c:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801dba0:	fb02 cc0e 	mla	ip, r2, lr, ip
 801dba4:	ea4f 535c 	mov.w	r3, ip, lsr #21
 801dba8:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801dbac:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801dbb0:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801dbb4:	ea43 0c0c 	orr.w	ip, r3, ip
 801dbb8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801dbba:	f82a cb02 	strh.w	ip, [sl], #2
 801dbbe:	441c      	add	r4, r3
 801dbc0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801dbc2:	f108 38ff 	add.w	r8, r8, #4294967295
 801dbc6:	441e      	add	r6, r3
 801dbc8:	e723      	b.n	801da12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801dbca:	2800      	cmp	r0, #0
 801dbcc:	d0b1      	beq.n	801db32 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801dbce:	5cd3      	ldrb	r3, [r2, r3]
 801dbd0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801dbd4:	930a      	str	r3, [sp, #40]	; 0x28
 801dbd6:	e7ac      	b.n	801db32 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801dbd8:	b013      	add	sp, #76	; 0x4c
 801dbda:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801dbde <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 801dbde:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dbe2:	880d      	ldrh	r5, [r1, #0]
 801dbe4:	b087      	sub	sp, #28
 801dbe6:	10ef      	asrs	r7, r5, #3
 801dbe8:	ea4f 2a25 	mov.w	sl, r5, asr #8
 801dbec:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801dbf0:	00ed      	lsls	r5, r5, #3
 801dbf2:	9701      	str	r7, [sp, #4]
 801dbf4:	b2ed      	uxtb	r5, r5
 801dbf6:	9502      	str	r5, [sp, #8]
 801dbf8:	9d01      	ldr	r5, [sp, #4]
 801dbfa:	9103      	str	r1, [sp, #12]
 801dbfc:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 801dc00:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 801dc04:	9902      	ldr	r1, [sp, #8]
 801dc06:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801dc0a:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 801dc0e:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 801dc12:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 801dc16:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 801dc1a:	022d      	lsls	r5, r5, #8
 801dc1c:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 801dc20:	fb06 0709 	mla	r7, r6, r9, r0
 801dc24:	430d      	orrs	r5, r1
 801dc26:	2e00      	cmp	r6, #0
 801dc28:	eb02 0c07 	add.w	ip, r2, r7
 801dc2c:	9505      	str	r5, [sp, #20]
 801dc2e:	f2c0 80b6 	blt.w	801dd9e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801dc32:	45b3      	cmp	fp, r6
 801dc34:	f340 80b3 	ble.w	801dd9e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801dc38:	2800      	cmp	r0, #0
 801dc3a:	f2c0 80ae 	blt.w	801dd9a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801dc3e:	4581      	cmp	r9, r0
 801dc40:	f340 80ab 	ble.w	801dd9a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801dc44:	5dd7      	ldrb	r7, [r2, r7]
 801dc46:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801dc4a:	441f      	add	r7, r3
 801dc4c:	1c42      	adds	r2, r0, #1
 801dc4e:	f100 80a9 	bmi.w	801dda4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801dc52:	4591      	cmp	r9, r2
 801dc54:	f340 80a6 	ble.w	801dda4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801dc58:	2c00      	cmp	r4, #0
 801dc5a:	f000 80a3 	beq.w	801dda4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801dc5e:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801dc62:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801dc66:	441d      	add	r5, r3
 801dc68:	3601      	adds	r6, #1
 801dc6a:	f100 809f 	bmi.w	801ddac <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801dc6e:	45b3      	cmp	fp, r6
 801dc70:	f340 809c 	ble.w	801ddac <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801dc74:	f1be 0f00 	cmp.w	lr, #0
 801dc78:	f000 8098 	beq.w	801ddac <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801dc7c:	2800      	cmp	r0, #0
 801dc7e:	f2c0 8093 	blt.w	801dda8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801dc82:	4581      	cmp	r9, r0
 801dc84:	f340 8090 	ble.w	801dda8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801dc88:	f81c 6009 	ldrb.w	r6, [ip, r9]
 801dc8c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801dc90:	441e      	add	r6, r3
 801dc92:	3001      	adds	r0, #1
 801dc94:	f100 808d 	bmi.w	801ddb2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801dc98:	4581      	cmp	r9, r0
 801dc9a:	f340 808a 	ble.w	801ddb2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801dc9e:	2c00      	cmp	r4, #0
 801dca0:	f000 8087 	beq.w	801ddb2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801dca4:	44e1      	add	r9, ip
 801dca6:	f899 2001 	ldrb.w	r2, [r9, #1]
 801dcaa:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801dcae:	4413      	add	r3, r2
 801dcb0:	b2a4      	uxth	r4, r4
 801dcb2:	fa1f fe8e 	uxth.w	lr, lr
 801dcb6:	fb04 fb0e 	mul.w	fp, r4, lr
 801dcba:	0124      	lsls	r4, r4, #4
 801dcbc:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 801dcc0:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 801dcc4:	eba4 040b 	sub.w	r4, r4, fp
 801dcc8:	fa1f f08e 	uxth.w	r0, lr
 801dccc:	b2a2      	uxth	r2, r4
 801dcce:	78ac      	ldrb	r4, [r5, #2]
 801dcd0:	f897 c002 	ldrb.w	ip, [r7, #2]
 801dcd4:	9901      	ldr	r1, [sp, #4]
 801dcd6:	eba9 0900 	sub.w	r9, r9, r0
 801dcda:	fa1f f989 	uxth.w	r9, r9
 801dcde:	4354      	muls	r4, r2
 801dce0:	fb09 440c 	mla	r4, r9, ip, r4
 801dce4:	f896 c002 	ldrb.w	ip, [r6, #2]
 801dce8:	fb00 440c 	mla	r4, r0, ip, r4
 801dcec:	f893 c002 	ldrb.w	ip, [r3, #2]
 801dcf0:	fa1f fe88 	uxth.w	lr, r8
 801dcf4:	ea6f 0808 	mvn.w	r8, r8
 801dcf8:	fa5f f888 	uxtb.w	r8, r8
 801dcfc:	fb0b 4c0c 	mla	ip, fp, ip, r4
 801dd00:	fb1a fa08 	smulbb	sl, sl, r8
 801dd04:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801dd08:	fb0c ac0e 	mla	ip, ip, lr, sl
 801dd0c:	f895 a001 	ldrb.w	sl, [r5, #1]
 801dd10:	787c      	ldrb	r4, [r7, #1]
 801dd12:	782d      	ldrb	r5, [r5, #0]
 801dd14:	783f      	ldrb	r7, [r7, #0]
 801dd16:	fb02 fa0a 	mul.w	sl, r2, sl
 801dd1a:	fb09 aa04 	mla	sl, r9, r4, sl
 801dd1e:	7874      	ldrb	r4, [r6, #1]
 801dd20:	436a      	muls	r2, r5
 801dd22:	7835      	ldrb	r5, [r6, #0]
 801dd24:	fb00 aa04 	mla	sl, r0, r4, sl
 801dd28:	fb09 2207 	mla	r2, r9, r7, r2
 801dd2c:	785c      	ldrb	r4, [r3, #1]
 801dd2e:	781b      	ldrb	r3, [r3, #0]
 801dd30:	fb00 2005 	mla	r0, r0, r5, r2
 801dd34:	fb0b a404 	mla	r4, fp, r4, sl
 801dd38:	fb0b 0b03 	mla	fp, fp, r3, r0
 801dd3c:	9b02      	ldr	r3, [sp, #8]
 801dd3e:	fb11 fa08 	smulbb	sl, r1, r8
 801dd42:	fa1f fc8c 	uxth.w	ip, ip
 801dd46:	fb13 f808 	smulbb	r8, r3, r8
 801dd4a:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 801dd4e:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801dd52:	fb04 a40e 	mla	r4, r4, lr, sl
 801dd56:	f10c 0301 	add.w	r3, ip, #1
 801dd5a:	fb0b 8e0e 	mla	lr, fp, lr, r8
 801dd5e:	fa1f fe8e 	uxth.w	lr, lr
 801dd62:	b2a4      	uxth	r4, r4
 801dd64:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801dd68:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 801dd6c:	f104 0a01 	add.w	sl, r4, #1
 801dd70:	f10e 0c01 	add.w	ip, lr, #1
 801dd74:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801dd78:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801dd7c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801dd80:	0964      	lsrs	r4, r4, #5
 801dd82:	ea4c 0c03 	orr.w	ip, ip, r3
 801dd86:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801dd8a:	9b03      	ldr	r3, [sp, #12]
 801dd8c:	ea4c 0c04 	orr.w	ip, ip, r4
 801dd90:	f8a3 c000 	strh.w	ip, [r3]
 801dd94:	b007      	add	sp, #28
 801dd96:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dd9a:	af05      	add	r7, sp, #20
 801dd9c:	e756      	b.n	801dc4c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 801dd9e:	ad05      	add	r5, sp, #20
 801dda0:	462f      	mov	r7, r5
 801dda2:	e761      	b.n	801dc68 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801dda4:	ad05      	add	r5, sp, #20
 801dda6:	e75f      	b.n	801dc68 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801dda8:	ae05      	add	r6, sp, #20
 801ddaa:	e772      	b.n	801dc92 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 801ddac:	ab05      	add	r3, sp, #20
 801ddae:	461e      	mov	r6, r3
 801ddb0:	e77e      	b.n	801dcb0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 801ddb2:	ab05      	add	r3, sp, #20
 801ddb4:	e77c      	b.n	801dcb0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0801ddb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ddb6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ddba:	b095      	sub	sp, #84	; 0x54
 801ddbc:	9212      	str	r2, [sp, #72]	; 0x48
 801ddbe:	9309      	str	r3, [sp, #36]	; 0x24
 801ddc0:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801ddc2:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 801ddc6:	930f      	str	r3, [sp, #60]	; 0x3c
 801ddc8:	910e      	str	r1, [sp, #56]	; 0x38
 801ddca:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 801ddce:	9013      	str	r0, [sp, #76]	; 0x4c
 801ddd0:	6850      	ldr	r0, [r2, #4]
 801ddd2:	6812      	ldr	r2, [r2, #0]
 801ddd4:	fb00 1303 	mla	r3, r0, r3, r1
 801ddd8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801dddc:	930a      	str	r3, [sp, #40]	; 0x28
 801ddde:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801dde0:	681b      	ldr	r3, [r3, #0]
 801dde2:	930d      	str	r3, [sp, #52]	; 0x34
 801dde4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801dde6:	685c      	ldr	r4, [r3, #4]
 801dde8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801ddea:	43db      	mvns	r3, r3
 801ddec:	b2db      	uxtb	r3, r3
 801ddee:	3404      	adds	r4, #4
 801ddf0:	930b      	str	r3, [sp, #44]	; 0x2c
 801ddf2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ddf4:	2b00      	cmp	r3, #0
 801ddf6:	dc03      	bgt.n	801de00 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801ddf8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801ddfa:	2b00      	cmp	r3, #0
 801ddfc:	f340 8255 	ble.w	801e2aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801de00:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801de02:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801de06:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801de0a:	1e48      	subs	r0, r1, #1
 801de0c:	1e55      	subs	r5, r2, #1
 801de0e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801de10:	2b00      	cmp	r3, #0
 801de12:	f340 80f9 	ble.w	801e008 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801de16:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 801de18:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801de1a:	1436      	asrs	r6, r6, #16
 801de1c:	ea4f 4323 	mov.w	r3, r3, asr #16
 801de20:	d406      	bmi.n	801de30 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801de22:	4286      	cmp	r6, r0
 801de24:	da04      	bge.n	801de30 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801de26:	2b00      	cmp	r3, #0
 801de28:	db02      	blt.n	801de30 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801de2a:	42ab      	cmp	r3, r5
 801de2c:	f2c0 80ed 	blt.w	801e00a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 801de30:	3601      	adds	r6, #1
 801de32:	f100 80da 	bmi.w	801dfea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801de36:	42b1      	cmp	r1, r6
 801de38:	f2c0 80d7 	blt.w	801dfea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801de3c:	3301      	adds	r3, #1
 801de3e:	f100 80d4 	bmi.w	801dfea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801de42:	429a      	cmp	r2, r3
 801de44:	f2c0 80d1 	blt.w	801dfea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801de48:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801de4a:	9311      	str	r3, [sp, #68]	; 0x44
 801de4c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801de4e:	930c      	str	r3, [sp, #48]	; 0x30
 801de50:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801de52:	2b00      	cmp	r3, #0
 801de54:	f340 80fa 	ble.w	801e04c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801de58:	9826      	ldr	r0, [sp, #152]	; 0x98
 801de5a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801de5c:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801de5e:	68c6      	ldr	r6, [r0, #12]
 801de60:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801de62:	141d      	asrs	r5, r3, #16
 801de64:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801de68:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801de6a:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801de6c:	1400      	asrs	r0, r0, #16
 801de6e:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801de72:	6892      	ldr	r2, [r2, #8]
 801de74:	f100 813e 	bmi.w	801e0f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801de78:	1e57      	subs	r7, r2, #1
 801de7a:	42b8      	cmp	r0, r7
 801de7c:	f280 813a 	bge.w	801e0f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801de80:	2d00      	cmp	r5, #0
 801de82:	f2c0 8137 	blt.w	801e0f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801de86:	1e77      	subs	r7, r6, #1
 801de88:	42bd      	cmp	r5, r7
 801de8a:	f280 8133 	bge.w	801e0f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801de8e:	b212      	sxth	r2, r2
 801de90:	fb05 0002 	mla	r0, r5, r2, r0
 801de94:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801de96:	f815 a000 	ldrb.w	sl, [r5, r0]
 801de9a:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801de9e:	182e      	adds	r6, r5, r0
 801dea0:	eb04 050a 	add.w	r5, r4, sl
 801dea4:	2b00      	cmp	r3, #0
 801dea6:	f000 8117 	beq.w	801e0d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801deaa:	f896 c001 	ldrb.w	ip, [r6, #1]
 801deae:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801deb2:	44a4      	add	ip, r4
 801deb4:	2900      	cmp	r1, #0
 801deb6:	f000 8117 	beq.w	801e0e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801deba:	18b0      	adds	r0, r6, r2
 801debc:	5cb2      	ldrb	r2, [r6, r2]
 801debe:	7840      	ldrb	r0, [r0, #1]
 801dec0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801dec4:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801dec8:	4422      	add	r2, r4
 801deca:	4420      	add	r0, r4
 801decc:	b29b      	uxth	r3, r3
 801dece:	b289      	uxth	r1, r1
 801ded0:	fb03 f901 	mul.w	r9, r3, r1
 801ded4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801ded8:	011b      	lsls	r3, r3, #4
 801deda:	b289      	uxth	r1, r1
 801dedc:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801dee0:	f895 b002 	ldrb.w	fp, [r5, #2]
 801dee4:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801dee6:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801deea:	f8b6 e000 	ldrh.w	lr, [r6]
 801deee:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 801def2:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 801def6:	eba3 0309 	sub.w	r3, r3, r9
 801defa:	b29b      	uxth	r3, r3
 801defc:	eba8 0801 	sub.w	r8, r8, r1
 801df00:	fa1f f888 	uxth.w	r8, r8
 801df04:	435f      	muls	r7, r3
 801df06:	fb08 770b 	mla	r7, r8, fp, r7
 801df0a:	f892 b002 	ldrb.w	fp, [r2, #2]
 801df0e:	9310      	str	r3, [sp, #64]	; 0x40
 801df10:	fb01 770b 	mla	r7, r1, fp, r7
 801df14:	f890 b002 	ldrb.w	fp, [r0, #2]
 801df18:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801df1a:	fb09 770b 	mla	r7, r9, fp, r7
 801df1e:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801df22:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801df26:	fb1b fb03 	smulbb	fp, fp, r3
 801df2a:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801df2e:	fb07 b706 	mla	r7, r7, r6, fp
 801df32:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801df34:	f895 b001 	ldrb.w	fp, [r5, #1]
 801df38:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801df3c:	f89c c000 	ldrb.w	ip, [ip]
 801df40:	435d      	muls	r5, r3
 801df42:	fb08 550b 	mla	r5, r8, fp, r5
 801df46:	f892 b001 	ldrb.w	fp, [r2, #1]
 801df4a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801df4c:	fb01 550b 	mla	r5, r1, fp, r5
 801df50:	f890 b001 	ldrb.w	fp, [r0, #1]
 801df54:	fb09 550b 	mla	r5, r9, fp, r5
 801df58:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801df5c:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801df60:	fb1b fb03 	smulbb	fp, fp, r3
 801df64:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801df66:	fb03 f30c 	mul.w	r3, r3, ip
 801df6a:	f892 c000 	ldrb.w	ip, [r2]
 801df6e:	fb08 330a 	mla	r3, r8, sl, r3
 801df72:	fb01 330c 	mla	r3, r1, ip, r3
 801df76:	f890 c000 	ldrb.w	ip, [r0]
 801df7a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801df7e:	fb09 3c0c 	mla	ip, r9, ip, r3
 801df82:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801df84:	fa5f fe8e 	uxtb.w	lr, lr
 801df88:	b2bf      	uxth	r7, r7
 801df8a:	fb1e fe03 	smulbb	lr, lr, r3
 801df8e:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801df92:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801df96:	fb05 b506 	mla	r5, r5, r6, fp
 801df9a:	1c7b      	adds	r3, r7, #1
 801df9c:	fb0c e606 	mla	r6, ip, r6, lr
 801dfa0:	b2ad      	uxth	r5, r5
 801dfa2:	b2b6      	uxth	r6, r6
 801dfa4:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801dfa8:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 801dfac:	f105 0b01 	add.w	fp, r5, #1
 801dfb0:	1c77      	adds	r7, r6, #1
 801dfb2:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801dfb6:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801dfba:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801dfbe:	096d      	lsrs	r5, r5, #5
 801dfc0:	431f      	orrs	r7, r3
 801dfc2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801dfc6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801dfc8:	433d      	orrs	r5, r7
 801dfca:	801d      	strh	r5, [r3, #0]
 801dfcc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801dfce:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801dfd0:	3302      	adds	r3, #2
 801dfd2:	930c      	str	r3, [sp, #48]	; 0x30
 801dfd4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801dfd6:	4413      	add	r3, r2
 801dfd8:	931f      	str	r3, [sp, #124]	; 0x7c
 801dfda:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801dfdc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801dfde:	4413      	add	r3, r2
 801dfe0:	9320      	str	r3, [sp, #128]	; 0x80
 801dfe2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801dfe4:	3b01      	subs	r3, #1
 801dfe6:	9311      	str	r3, [sp, #68]	; 0x44
 801dfe8:	e732      	b.n	801de50 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801dfea:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801dfec:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801dfee:	4433      	add	r3, r6
 801dff0:	931f      	str	r3, [sp, #124]	; 0x7c
 801dff2:	9e22      	ldr	r6, [sp, #136]	; 0x88
 801dff4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801dff6:	4433      	add	r3, r6
 801dff8:	9320      	str	r3, [sp, #128]	; 0x80
 801dffa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801dffc:	3b01      	subs	r3, #1
 801dffe:	9309      	str	r3, [sp, #36]	; 0x24
 801e000:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e002:	3302      	adds	r3, #2
 801e004:	930a      	str	r3, [sp, #40]	; 0x28
 801e006:	e702      	b.n	801de0e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801e008:	d027      	beq.n	801e05a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801e00a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e00c:	9821      	ldr	r0, [sp, #132]	; 0x84
 801e00e:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801e010:	3b01      	subs	r3, #1
 801e012:	fb00 5003 	mla	r0, r0, r3, r5
 801e016:	1400      	asrs	r0, r0, #16
 801e018:	f53f af16 	bmi.w	801de48 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801e01c:	3901      	subs	r1, #1
 801e01e:	4288      	cmp	r0, r1
 801e020:	f6bf af12 	bge.w	801de48 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801e024:	9922      	ldr	r1, [sp, #136]	; 0x88
 801e026:	9820      	ldr	r0, [sp, #128]	; 0x80
 801e028:	fb01 0303 	mla	r3, r1, r3, r0
 801e02c:	141b      	asrs	r3, r3, #16
 801e02e:	f53f af0b 	bmi.w	801de48 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801e032:	3a01      	subs	r2, #1
 801e034:	4293      	cmp	r3, r2
 801e036:	f6bf af07 	bge.w	801de48 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801e03a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e03c:	9311      	str	r3, [sp, #68]	; 0x44
 801e03e:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 801e042:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e044:	930c      	str	r3, [sp, #48]	; 0x30
 801e046:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801e048:	2b00      	cmp	r3, #0
 801e04a:	dc70      	bgt.n	801e12e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801e04c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e04e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801e050:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801e054:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801e058:	930a      	str	r3, [sp, #40]	; 0x28
 801e05a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e05c:	2b00      	cmp	r3, #0
 801e05e:	f340 8124 	ble.w	801e2aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801e062:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e066:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801e06a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e06e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801e070:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e074:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e078:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e07c:	eef0 6a62 	vmov.f32	s13, s5
 801e080:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e084:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e088:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e08c:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 801e090:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e094:	eef0 6a43 	vmov.f32	s13, s6
 801e098:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e09c:	ee12 2a90 	vmov	r2, s5
 801e0a0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e0a4:	fb92 f3f3 	sdiv	r3, r2, r3
 801e0a8:	ee13 2a10 	vmov	r2, s6
 801e0ac:	9321      	str	r3, [sp, #132]	; 0x84
 801e0ae:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801e0b0:	fb92 f3f3 	sdiv	r3, r2, r3
 801e0b4:	9322      	str	r3, [sp, #136]	; 0x88
 801e0b6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e0b8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801e0ba:	3b01      	subs	r3, #1
 801e0bc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e0c0:	930e      	str	r3, [sp, #56]	; 0x38
 801e0c2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801e0c4:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 801e0c8:	bf08      	it	eq
 801e0ca:	4613      	moveq	r3, r2
 801e0cc:	9309      	str	r3, [sp, #36]	; 0x24
 801e0ce:	eeb0 3a67 	vmov.f32	s6, s15
 801e0d2:	eef0 2a47 	vmov.f32	s5, s14
 801e0d6:	e68c      	b.n	801ddf2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801e0d8:	b149      	cbz	r1, 801e0ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801e0da:	5cb2      	ldrb	r2, [r6, r2]
 801e0dc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801e0e0:	4422      	add	r2, r4
 801e0e2:	4628      	mov	r0, r5
 801e0e4:	46ac      	mov	ip, r5
 801e0e6:	e6f1      	b.n	801decc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801e0e8:	4628      	mov	r0, r5
 801e0ea:	462a      	mov	r2, r5
 801e0ec:	e6ee      	b.n	801decc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801e0ee:	4628      	mov	r0, r5
 801e0f0:	462a      	mov	r2, r5
 801e0f2:	e7f7      	b.n	801e0e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801e0f4:	1c47      	adds	r7, r0, #1
 801e0f6:	f53f af69 	bmi.w	801dfcc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801e0fa:	42ba      	cmp	r2, r7
 801e0fc:	f6ff af66 	blt.w	801dfcc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801e100:	1c6f      	adds	r7, r5, #1
 801e102:	f53f af63 	bmi.w	801dfcc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801e106:	42be      	cmp	r6, r7
 801e108:	f6ff af60 	blt.w	801dfcc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801e10c:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801e10e:	9002      	str	r0, [sp, #8]
 801e110:	b236      	sxth	r6, r6
 801e112:	b212      	sxth	r2, r2
 801e114:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801e118:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801e11c:	9200      	str	r2, [sp, #0]
 801e11e:	9601      	str	r6, [sp, #4]
 801e120:	4623      	mov	r3, r4
 801e122:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 801e126:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801e128:	f7ff fd59 	bl	801dbde <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801e12c:	e74e      	b.n	801dfcc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801e12e:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801e130:	9820      	ldr	r0, [sp, #128]	; 0x80
 801e132:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801e134:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801e136:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801e13a:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801e13c:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801e140:	142d      	asrs	r5, r5, #16
 801e142:	1400      	asrs	r0, r0, #16
 801e144:	fb02 5000 	mla	r0, r2, r0, r5
 801e148:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801e14a:	f815 9000 	ldrb.w	r9, [r5, r0]
 801e14e:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801e152:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801e156:	182e      	adds	r6, r5, r0
 801e158:	eb04 0509 	add.w	r5, r4, r9
 801e15c:	2b00      	cmp	r3, #0
 801e15e:	f000 8096 	beq.w	801e28e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801e162:	7877      	ldrb	r7, [r6, #1]
 801e164:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801e168:	4427      	add	r7, r4
 801e16a:	2900      	cmp	r1, #0
 801e16c:	f000 8097 	beq.w	801e29e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801e170:	18b0      	adds	r0, r6, r2
 801e172:	5cb2      	ldrb	r2, [r6, r2]
 801e174:	7840      	ldrb	r0, [r0, #1]
 801e176:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801e17a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801e17e:	4422      	add	r2, r4
 801e180:	4420      	add	r0, r4
 801e182:	b29b      	uxth	r3, r3
 801e184:	b289      	uxth	r1, r1
 801e186:	fb03 f801 	mul.w	r8, r3, r1
 801e18a:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801e18c:	f895 b002 	ldrb.w	fp, [r5, #2]
 801e190:	f8b6 c000 	ldrh.w	ip, [r6]
 801e194:	78be      	ldrb	r6, [r7, #2]
 801e196:	f814 9009 	ldrb.w	r9, [r4, r9]
 801e19a:	011b      	lsls	r3, r3, #4
 801e19c:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801e1a0:	b289      	uxth	r1, r1
 801e1a2:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801e1a6:	eba3 0308 	sub.w	r3, r3, r8
 801e1aa:	b29b      	uxth	r3, r3
 801e1ac:	ebae 0e01 	sub.w	lr, lr, r1
 801e1b0:	fa1f fe8e 	uxth.w	lr, lr
 801e1b4:	435e      	muls	r6, r3
 801e1b6:	fb0e 660b 	mla	r6, lr, fp, r6
 801e1ba:	f892 b002 	ldrb.w	fp, [r2, #2]
 801e1be:	9310      	str	r3, [sp, #64]	; 0x40
 801e1c0:	fb01 660b 	mla	r6, r1, fp, r6
 801e1c4:	f890 b002 	ldrb.w	fp, [r0, #2]
 801e1c8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e1ca:	fb08 660b 	mla	r6, r8, fp, r6
 801e1ce:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801e1d2:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801e1d6:	fb1b fb03 	smulbb	fp, fp, r3
 801e1da:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801e1de:	fb06 b60a 	mla	r6, r6, sl, fp
 801e1e2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e1e4:	f895 b001 	ldrb.w	fp, [r5, #1]
 801e1e8:	787d      	ldrb	r5, [r7, #1]
 801e1ea:	783f      	ldrb	r7, [r7, #0]
 801e1ec:	435d      	muls	r5, r3
 801e1ee:	fb0e 550b 	mla	r5, lr, fp, r5
 801e1f2:	f892 b001 	ldrb.w	fp, [r2, #1]
 801e1f6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e1f8:	fb01 550b 	mla	r5, r1, fp, r5
 801e1fc:	f890 b001 	ldrb.w	fp, [r0, #1]
 801e200:	fb08 550b 	mla	r5, r8, fp, r5
 801e204:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801e208:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801e20c:	fb1b fb03 	smulbb	fp, fp, r3
 801e210:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e212:	437b      	muls	r3, r7
 801e214:	7817      	ldrb	r7, [r2, #0]
 801e216:	fb0e 3309 	mla	r3, lr, r9, r3
 801e21a:	fb01 3307 	mla	r3, r1, r7, r3
 801e21e:	7807      	ldrb	r7, [r0, #0]
 801e220:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801e224:	fb08 3707 	mla	r7, r8, r7, r3
 801e228:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e22a:	fa5f fc8c 	uxtb.w	ip, ip
 801e22e:	fb1c fc03 	smulbb	ip, ip, r3
 801e232:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801e236:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801e23a:	fb05 b50a 	mla	r5, r5, sl, fp
 801e23e:	fb07 c70a 	mla	r7, r7, sl, ip
 801e242:	b2b6      	uxth	r6, r6
 801e244:	b2ad      	uxth	r5, r5
 801e246:	b2bf      	uxth	r7, r7
 801e248:	1c73      	adds	r3, r6, #1
 801e24a:	1c7a      	adds	r2, r7, #1
 801e24c:	f105 0b01 	add.w	fp, r5, #1
 801e250:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801e254:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801e258:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801e25c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801e260:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801e264:	096d      	lsrs	r5, r5, #5
 801e266:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801e268:	4316      	orrs	r6, r2
 801e26a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801e26e:	432e      	orrs	r6, r5
 801e270:	f823 6b02 	strh.w	r6, [r3], #2
 801e274:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801e276:	930c      	str	r3, [sp, #48]	; 0x30
 801e278:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801e27a:	4413      	add	r3, r2
 801e27c:	931f      	str	r3, [sp, #124]	; 0x7c
 801e27e:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801e280:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e282:	4413      	add	r3, r2
 801e284:	9320      	str	r3, [sp, #128]	; 0x80
 801e286:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801e288:	3b01      	subs	r3, #1
 801e28a:	9311      	str	r3, [sp, #68]	; 0x44
 801e28c:	e6db      	b.n	801e046 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801e28e:	b149      	cbz	r1, 801e2a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801e290:	5cb2      	ldrb	r2, [r6, r2]
 801e292:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801e296:	4422      	add	r2, r4
 801e298:	4628      	mov	r0, r5
 801e29a:	462f      	mov	r7, r5
 801e29c:	e771      	b.n	801e182 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801e29e:	4628      	mov	r0, r5
 801e2a0:	462a      	mov	r2, r5
 801e2a2:	e76e      	b.n	801e182 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801e2a4:	4628      	mov	r0, r5
 801e2a6:	462a      	mov	r2, r5
 801e2a8:	e7f7      	b.n	801e29a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801e2aa:	b015      	add	sp, #84	; 0x54
 801e2ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e2b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801e2b0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e2b4:	880f      	ldrh	r7, [r1, #0]
 801e2b6:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 801e2ba:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801e2be:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 801e2c2:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801e2c6:	023c      	lsls	r4, r7, #8
 801e2c8:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 801e2cc:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 801e2d0:	017c      	lsls	r4, r7, #5
 801e2d2:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 801e2d6:	00ff      	lsls	r7, r7, #3
 801e2d8:	ea4b 0404 	orr.w	r4, fp, r4
 801e2dc:	b2ff      	uxtb	r7, r7
 801e2de:	fb05 ca0e 	mla	sl, r5, lr, ip
 801e2e2:	4327      	orrs	r7, r4
 801e2e4:	2d00      	cmp	r5, #0
 801e2e6:	eb02 080a 	add.w	r8, r2, sl
 801e2ea:	9701      	str	r7, [sp, #4]
 801e2ec:	db7e      	blt.n	801e3ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801e2ee:	45a9      	cmp	r9, r5
 801e2f0:	dd7c      	ble.n	801e3ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801e2f2:	f1bc 0f00 	cmp.w	ip, #0
 801e2f6:	db77      	blt.n	801e3e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801e2f8:	45e6      	cmp	lr, ip
 801e2fa:	dd75      	ble.n	801e3e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801e2fc:	f812 700a 	ldrb.w	r7, [r2, sl]
 801e300:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801e304:	441f      	add	r7, r3
 801e306:	f11c 0201 	adds.w	r2, ip, #1
 801e30a:	d472      	bmi.n	801e3f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801e30c:	4596      	cmp	lr, r2
 801e30e:	dd70      	ble.n	801e3f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801e310:	2800      	cmp	r0, #0
 801e312:	d06e      	beq.n	801e3f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801e314:	f898 4001 	ldrb.w	r4, [r8, #1]
 801e318:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801e31c:	441c      	add	r4, r3
 801e31e:	3501      	adds	r5, #1
 801e320:	d46b      	bmi.n	801e3fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801e322:	45a9      	cmp	r9, r5
 801e324:	dd69      	ble.n	801e3fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801e326:	2e00      	cmp	r6, #0
 801e328:	d067      	beq.n	801e3fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801e32a:	f1bc 0f00 	cmp.w	ip, #0
 801e32e:	db62      	blt.n	801e3f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801e330:	45e6      	cmp	lr, ip
 801e332:	dd60      	ble.n	801e3f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801e334:	f818 500e 	ldrb.w	r5, [r8, lr]
 801e338:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801e33c:	441d      	add	r5, r3
 801e33e:	f11c 0201 	adds.w	r2, ip, #1
 801e342:	d45d      	bmi.n	801e400 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801e344:	4596      	cmp	lr, r2
 801e346:	dd5b      	ble.n	801e400 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801e348:	2800      	cmp	r0, #0
 801e34a:	d059      	beq.n	801e400 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801e34c:	44c6      	add	lr, r8
 801e34e:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801e352:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801e356:	4413      	add	r3, r2
 801e358:	b280      	uxth	r0, r0
 801e35a:	b2b2      	uxth	r2, r6
 801e35c:	fb00 f602 	mul.w	r6, r0, r2
 801e360:	0100      	lsls	r0, r0, #4
 801e362:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 801e366:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 801e36a:	1b80      	subs	r0, r0, r6
 801e36c:	fa1f fc82 	uxth.w	ip, r2
 801e370:	b282      	uxth	r2, r0
 801e372:	78a0      	ldrb	r0, [r4, #2]
 801e374:	f897 e002 	ldrb.w	lr, [r7, #2]
 801e378:	f897 9000 	ldrb.w	r9, [r7]
 801e37c:	787f      	ldrb	r7, [r7, #1]
 801e37e:	eba8 080c 	sub.w	r8, r8, ip
 801e382:	fa1f f888 	uxth.w	r8, r8
 801e386:	4350      	muls	r0, r2
 801e388:	fb08 0e0e 	mla	lr, r8, lr, r0
 801e38c:	78a8      	ldrb	r0, [r5, #2]
 801e38e:	fb0c e000 	mla	r0, ip, r0, lr
 801e392:	f893 e002 	ldrb.w	lr, [r3, #2]
 801e396:	fb06 0e0e 	mla	lr, r6, lr, r0
 801e39a:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 801e39e:	f894 e000 	ldrb.w	lr, [r4]
 801e3a2:	fb02 fe0e 	mul.w	lr, r2, lr
 801e3a6:	fb08 e909 	mla	r9, r8, r9, lr
 801e3aa:	f895 e000 	ldrb.w	lr, [r5]
 801e3ae:	fb0c 990e 	mla	r9, ip, lr, r9
 801e3b2:	f893 e000 	ldrb.w	lr, [r3]
 801e3b6:	785b      	ldrb	r3, [r3, #1]
 801e3b8:	fb06 9e0e 	mla	lr, r6, lr, r9
 801e3bc:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801e3c0:	ea4e 0e00 	orr.w	lr, lr, r0
 801e3c4:	7860      	ldrb	r0, [r4, #1]
 801e3c6:	4350      	muls	r0, r2
 801e3c8:	786a      	ldrb	r2, [r5, #1]
 801e3ca:	fb08 0007 	mla	r0, r8, r7, r0
 801e3ce:	fb0c 0202 	mla	r2, ip, r2, r0
 801e3d2:	fb06 2303 	mla	r3, r6, r3, r2
 801e3d6:	095b      	lsrs	r3, r3, #5
 801e3d8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e3dc:	ea4e 0303 	orr.w	r3, lr, r3
 801e3e0:	800b      	strh	r3, [r1, #0]
 801e3e2:	b003      	add	sp, #12
 801e3e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e3e8:	af01      	add	r7, sp, #4
 801e3ea:	e78c      	b.n	801e306 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 801e3ec:	ac01      	add	r4, sp, #4
 801e3ee:	4627      	mov	r7, r4
 801e3f0:	e795      	b.n	801e31e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801e3f2:	ac01      	add	r4, sp, #4
 801e3f4:	e793      	b.n	801e31e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801e3f6:	ad01      	add	r5, sp, #4
 801e3f8:	e7a1      	b.n	801e33e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 801e3fa:	ab01      	add	r3, sp, #4
 801e3fc:	461d      	mov	r5, r3
 801e3fe:	e7ab      	b.n	801e358 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 801e400:	ab01      	add	r3, sp, #4
 801e402:	e7a9      	b.n	801e358 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

0801e404 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e404:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e408:	b08f      	sub	sp, #60	; 0x3c
 801e40a:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 801e40e:	920c      	str	r2, [sp, #48]	; 0x30
 801e410:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 801e412:	910a      	str	r1, [sp, #40]	; 0x28
 801e414:	9306      	str	r3, [sp, #24]
 801e416:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 801e41a:	900d      	str	r0, [sp, #52]	; 0x34
 801e41c:	6850      	ldr	r0, [r2, #4]
 801e41e:	6812      	ldr	r2, [r2, #0]
 801e420:	fb00 1303 	mla	r3, r0, r3, r1
 801e424:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801e428:	9307      	str	r3, [sp, #28]
 801e42a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e42c:	681b      	ldr	r3, [r3, #0]
 801e42e:	9308      	str	r3, [sp, #32]
 801e430:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e432:	685c      	ldr	r4, [r3, #4]
 801e434:	3404      	adds	r4, #4
 801e436:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e438:	2b00      	cmp	r3, #0
 801e43a:	dc03      	bgt.n	801e444 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801e43c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801e43e:	2b00      	cmp	r3, #0
 801e440:	f340 81d6 	ble.w	801e7f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801e444:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e446:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e44a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e44e:	1e48      	subs	r0, r1, #1
 801e450:	1e56      	subs	r6, r2, #1
 801e452:	9b06      	ldr	r3, [sp, #24]
 801e454:	2b00      	cmp	r3, #0
 801e456:	f340 80b7 	ble.w	801e5c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801e45a:	ea5f 472b 	movs.w	r7, fp, asr #16
 801e45e:	ea4f 4325 	mov.w	r3, r5, asr #16
 801e462:	d406      	bmi.n	801e472 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801e464:	4287      	cmp	r7, r0
 801e466:	da04      	bge.n	801e472 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801e468:	2b00      	cmp	r3, #0
 801e46a:	db02      	blt.n	801e472 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801e46c:	42b3      	cmp	r3, r6
 801e46e:	f2c0 80ac 	blt.w	801e5ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801e472:	3701      	adds	r7, #1
 801e474:	f100 809d 	bmi.w	801e5b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801e478:	42b9      	cmp	r1, r7
 801e47a:	f2c0 809a 	blt.w	801e5b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801e47e:	3301      	adds	r3, #1
 801e480:	f100 8097 	bmi.w	801e5b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801e484:	429a      	cmp	r2, r3
 801e486:	f2c0 8094 	blt.w	801e5b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801e48a:	9b06      	ldr	r3, [sp, #24]
 801e48c:	930b      	str	r3, [sp, #44]	; 0x2c
 801e48e:	9b07      	ldr	r3, [sp, #28]
 801e490:	9309      	str	r3, [sp, #36]	; 0x24
 801e492:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e494:	2b00      	cmp	r3, #0
 801e496:	f340 80b5 	ble.w	801e604 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801e49a:	9820      	ldr	r0, [sp, #128]	; 0x80
 801e49c:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801e49e:	68c7      	ldr	r7, [r0, #12]
 801e4a0:	6892      	ldr	r2, [r2, #8]
 801e4a2:	ea5f 402b 	movs.w	r0, fp, asr #16
 801e4a6:	ea4f 4625 	mov.w	r6, r5, asr #16
 801e4aa:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801e4ae:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801e4b2:	f100 80fb 	bmi.w	801e6ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801e4b6:	f102 3cff 	add.w	ip, r2, #4294967295
 801e4ba:	4560      	cmp	r0, ip
 801e4bc:	f280 80f6 	bge.w	801e6ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801e4c0:	2e00      	cmp	r6, #0
 801e4c2:	f2c0 80f3 	blt.w	801e6ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801e4c6:	f107 3cff 	add.w	ip, r7, #4294967295
 801e4ca:	4566      	cmp	r6, ip
 801e4cc:	f280 80ee 	bge.w	801e6ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801e4d0:	b212      	sxth	r2, r2
 801e4d2:	fb06 0002 	mla	r0, r6, r2, r0
 801e4d6:	9e08      	ldr	r6, [sp, #32]
 801e4d8:	1837      	adds	r7, r6, r0
 801e4da:	5c30      	ldrb	r0, [r6, r0]
 801e4dc:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801e4e0:	eb04 0c08 	add.w	ip, r4, r8
 801e4e4:	2b00      	cmp	r3, #0
 801e4e6:	f000 80d3 	beq.w	801e690 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801e4ea:	787e      	ldrb	r6, [r7, #1]
 801e4ec:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801e4f0:	4426      	add	r6, r4
 801e4f2:	2900      	cmp	r1, #0
 801e4f4:	f000 80d4 	beq.w	801e6a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 801e4f8:	18b8      	adds	r0, r7, r2
 801e4fa:	5cba      	ldrb	r2, [r7, r2]
 801e4fc:	7840      	ldrb	r0, [r0, #1]
 801e4fe:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801e502:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801e506:	4422      	add	r2, r4
 801e508:	4420      	add	r0, r4
 801e50a:	b29b      	uxth	r3, r3
 801e50c:	b289      	uxth	r1, r1
 801e50e:	fb03 f901 	mul.w	r9, r3, r1
 801e512:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801e516:	011b      	lsls	r3, r3, #4
 801e518:	b289      	uxth	r1, r1
 801e51a:	78b7      	ldrb	r7, [r6, #2]
 801e51c:	f89c a002 	ldrb.w	sl, [ip, #2]
 801e520:	f89c c001 	ldrb.w	ip, [ip, #1]
 801e524:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801e528:	eba3 0309 	sub.w	r3, r3, r9
 801e52c:	b29b      	uxth	r3, r3
 801e52e:	ebae 0e01 	sub.w	lr, lr, r1
 801e532:	fa1f fe8e 	uxth.w	lr, lr
 801e536:	435f      	muls	r7, r3
 801e538:	fb0e 770a 	mla	r7, lr, sl, r7
 801e53c:	f892 a002 	ldrb.w	sl, [r2, #2]
 801e540:	fb01 770a 	mla	r7, r1, sl, r7
 801e544:	f890 a002 	ldrb.w	sl, [r0, #2]
 801e548:	fb09 7a0a 	mla	sl, r9, sl, r7
 801e54c:	f814 7008 	ldrb.w	r7, [r4, r8]
 801e550:	f896 8000 	ldrb.w	r8, [r6]
 801e554:	7876      	ldrb	r6, [r6, #1]
 801e556:	fb03 f808 	mul.w	r8, r3, r8
 801e55a:	fb0e 8807 	mla	r8, lr, r7, r8
 801e55e:	7817      	ldrb	r7, [r2, #0]
 801e560:	fb01 8807 	mla	r8, r1, r7, r8
 801e564:	7807      	ldrb	r7, [r0, #0]
 801e566:	fb09 8707 	mla	r7, r9, r7, r8
 801e56a:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801e56e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801e572:	ea47 070a 	orr.w	r7, r7, sl
 801e576:	4373      	muls	r3, r6
 801e578:	f892 a001 	ldrb.w	sl, [r2, #1]
 801e57c:	fb0e 330c 	mla	r3, lr, ip, r3
 801e580:	fb01 310a 	mla	r1, r1, sl, r3
 801e584:	f890 a001 	ldrb.w	sl, [r0, #1]
 801e588:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e58a:	fb09 1a0a 	mla	sl, r9, sl, r1
 801e58e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801e592:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801e596:	ea47 070a 	orr.w	r7, r7, sl
 801e59a:	801f      	strh	r7, [r3, #0]
 801e59c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e59e:	3302      	adds	r3, #2
 801e5a0:	9309      	str	r3, [sp, #36]	; 0x24
 801e5a2:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801e5a4:	449b      	add	fp, r3
 801e5a6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801e5a8:	441d      	add	r5, r3
 801e5aa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e5ac:	3b01      	subs	r3, #1
 801e5ae:	930b      	str	r3, [sp, #44]	; 0x2c
 801e5b0:	e76f      	b.n	801e492 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e5b2:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801e5b4:	449b      	add	fp, r3
 801e5b6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801e5b8:	441d      	add	r5, r3
 801e5ba:	9b06      	ldr	r3, [sp, #24]
 801e5bc:	3b01      	subs	r3, #1
 801e5be:	9306      	str	r3, [sp, #24]
 801e5c0:	9b07      	ldr	r3, [sp, #28]
 801e5c2:	3302      	adds	r3, #2
 801e5c4:	9307      	str	r3, [sp, #28]
 801e5c6:	e744      	b.n	801e452 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801e5c8:	d023      	beq.n	801e612 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801e5ca:	9b06      	ldr	r3, [sp, #24]
 801e5cc:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801e5ce:	3b01      	subs	r3, #1
 801e5d0:	fb00 b003 	mla	r0, r0, r3, fp
 801e5d4:	1400      	asrs	r0, r0, #16
 801e5d6:	f53f af58 	bmi.w	801e48a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801e5da:	3901      	subs	r1, #1
 801e5dc:	4288      	cmp	r0, r1
 801e5de:	f6bf af54 	bge.w	801e48a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801e5e2:	991c      	ldr	r1, [sp, #112]	; 0x70
 801e5e4:	fb01 5303 	mla	r3, r1, r3, r5
 801e5e8:	141b      	asrs	r3, r3, #16
 801e5ea:	f53f af4e 	bmi.w	801e48a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801e5ee:	3a01      	subs	r2, #1
 801e5f0:	4293      	cmp	r3, r2
 801e5f2:	f6bf af4a 	bge.w	801e48a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801e5f6:	9b06      	ldr	r3, [sp, #24]
 801e5f8:	9309      	str	r3, [sp, #36]	; 0x24
 801e5fa:	9b07      	ldr	r3, [sp, #28]
 801e5fc:	930b      	str	r3, [sp, #44]	; 0x2c
 801e5fe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e600:	2b00      	cmp	r3, #0
 801e602:	dc70      	bgt.n	801e6e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 801e604:	9b06      	ldr	r3, [sp, #24]
 801e606:	9a07      	ldr	r2, [sp, #28]
 801e608:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801e60c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801e610:	9307      	str	r3, [sp, #28]
 801e612:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e614:	2b00      	cmp	r3, #0
 801e616:	f340 80eb 	ble.w	801e7f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801e61a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e61e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801e622:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e626:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801e628:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e62c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e630:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e634:	eef0 6a62 	vmov.f32	s13, s5
 801e638:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e63c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e640:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e644:	ee16 ba90 	vmov	fp, s13
 801e648:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e64c:	eef0 6a43 	vmov.f32	s13, s6
 801e650:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e654:	ee12 2a90 	vmov	r2, s5
 801e658:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e65c:	fb92 f3f3 	sdiv	r3, r2, r3
 801e660:	ee13 2a10 	vmov	r2, s6
 801e664:	931b      	str	r3, [sp, #108]	; 0x6c
 801e666:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801e668:	fb92 f3f3 	sdiv	r3, r2, r3
 801e66c:	931c      	str	r3, [sp, #112]	; 0x70
 801e66e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e670:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801e672:	3b01      	subs	r3, #1
 801e674:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e678:	930a      	str	r3, [sp, #40]	; 0x28
 801e67a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801e67c:	bf08      	it	eq
 801e67e:	4613      	moveq	r3, r2
 801e680:	ee16 5a90 	vmov	r5, s13
 801e684:	9306      	str	r3, [sp, #24]
 801e686:	eeb0 3a67 	vmov.f32	s6, s15
 801e68a:	eef0 2a47 	vmov.f32	s5, s14
 801e68e:	e6d2      	b.n	801e436 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801e690:	b149      	cbz	r1, 801e6a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801e692:	5cba      	ldrb	r2, [r7, r2]
 801e694:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801e698:	4422      	add	r2, r4
 801e69a:	4660      	mov	r0, ip
 801e69c:	4666      	mov	r6, ip
 801e69e:	e734      	b.n	801e50a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801e6a0:	4660      	mov	r0, ip
 801e6a2:	4662      	mov	r2, ip
 801e6a4:	e731      	b.n	801e50a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801e6a6:	4660      	mov	r0, ip
 801e6a8:	4662      	mov	r2, ip
 801e6aa:	e7f7      	b.n	801e69c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 801e6ac:	f110 0c01 	adds.w	ip, r0, #1
 801e6b0:	f53f af74 	bmi.w	801e59c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e6b4:	4562      	cmp	r2, ip
 801e6b6:	f6ff af71 	blt.w	801e59c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e6ba:	f116 0c01 	adds.w	ip, r6, #1
 801e6be:	f53f af6d 	bmi.w	801e59c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e6c2:	4567      	cmp	r7, ip
 801e6c4:	f6ff af6a 	blt.w	801e59c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e6c8:	b23f      	sxth	r7, r7
 801e6ca:	b212      	sxth	r2, r2
 801e6cc:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801e6d0:	e9cd 0602 	strd	r0, r6, [sp, #8]
 801e6d4:	9200      	str	r2, [sp, #0]
 801e6d6:	9701      	str	r7, [sp, #4]
 801e6d8:	4623      	mov	r3, r4
 801e6da:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801e6de:	980d      	ldr	r0, [sp, #52]	; 0x34
 801e6e0:	f7ff fde6 	bl	801e2b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 801e6e4:	e75a      	b.n	801e59c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e6e6:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801e6e8:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801e6ec:	ea4f 462b 	mov.w	r6, fp, asr #16
 801e6f0:	1428      	asrs	r0, r5, #16
 801e6f2:	fb02 6000 	mla	r0, r2, r0, r6
 801e6f6:	9e08      	ldr	r6, [sp, #32]
 801e6f8:	f816 8000 	ldrb.w	r8, [r6, r0]
 801e6fc:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801e700:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801e704:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801e708:	1837      	adds	r7, r6, r0
 801e70a:	eb04 0c08 	add.w	ip, r4, r8
 801e70e:	2b00      	cmp	r3, #0
 801e710:	d060      	beq.n	801e7d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 801e712:	787e      	ldrb	r6, [r7, #1]
 801e714:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801e718:	4426      	add	r6, r4
 801e71a:	2900      	cmp	r1, #0
 801e71c:	d062      	beq.n	801e7e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 801e71e:	18b8      	adds	r0, r7, r2
 801e720:	5cba      	ldrb	r2, [r7, r2]
 801e722:	7840      	ldrb	r0, [r0, #1]
 801e724:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801e728:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801e72c:	4422      	add	r2, r4
 801e72e:	4420      	add	r0, r4
 801e730:	b29b      	uxth	r3, r3
 801e732:	b289      	uxth	r1, r1
 801e734:	fb03 f901 	mul.w	r9, r3, r1
 801e738:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801e73c:	011b      	lsls	r3, r3, #4
 801e73e:	b289      	uxth	r1, r1
 801e740:	78b7      	ldrb	r7, [r6, #2]
 801e742:	f89c a002 	ldrb.w	sl, [ip, #2]
 801e746:	f89c c001 	ldrb.w	ip, [ip, #1]
 801e74a:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801e74e:	eba3 0309 	sub.w	r3, r3, r9
 801e752:	b29b      	uxth	r3, r3
 801e754:	ebae 0e01 	sub.w	lr, lr, r1
 801e758:	fa1f fe8e 	uxth.w	lr, lr
 801e75c:	435f      	muls	r7, r3
 801e75e:	fb0e 770a 	mla	r7, lr, sl, r7
 801e762:	f892 a002 	ldrb.w	sl, [r2, #2]
 801e766:	fb01 770a 	mla	r7, r1, sl, r7
 801e76a:	f890 a002 	ldrb.w	sl, [r0, #2]
 801e76e:	fb09 7a0a 	mla	sl, r9, sl, r7
 801e772:	f814 7008 	ldrb.w	r7, [r4, r8]
 801e776:	f896 8000 	ldrb.w	r8, [r6]
 801e77a:	7876      	ldrb	r6, [r6, #1]
 801e77c:	fb03 f808 	mul.w	r8, r3, r8
 801e780:	fb0e 8807 	mla	r8, lr, r7, r8
 801e784:	7817      	ldrb	r7, [r2, #0]
 801e786:	fb01 8807 	mla	r8, r1, r7, r8
 801e78a:	7807      	ldrb	r7, [r0, #0]
 801e78c:	fb09 8707 	mla	r7, r9, r7, r8
 801e790:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801e794:	4373      	muls	r3, r6
 801e796:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801e79a:	7856      	ldrb	r6, [r2, #1]
 801e79c:	ea47 070a 	orr.w	r7, r7, sl
 801e7a0:	fb0e 330c 	mla	r3, lr, ip, r3
 801e7a4:	f890 a001 	ldrb.w	sl, [r0, #1]
 801e7a8:	fb01 3306 	mla	r3, r1, r6, r3
 801e7ac:	fb09 3a0a 	mla	sl, r9, sl, r3
 801e7b0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801e7b4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e7b6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801e7ba:	ea47 070a 	orr.w	r7, r7, sl
 801e7be:	f823 7b02 	strh.w	r7, [r3], #2
 801e7c2:	930b      	str	r3, [sp, #44]	; 0x2c
 801e7c4:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801e7c6:	449b      	add	fp, r3
 801e7c8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801e7ca:	441d      	add	r5, r3
 801e7cc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e7ce:	3b01      	subs	r3, #1
 801e7d0:	9309      	str	r3, [sp, #36]	; 0x24
 801e7d2:	e714      	b.n	801e5fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801e7d4:	b149      	cbz	r1, 801e7ea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801e7d6:	5cba      	ldrb	r2, [r7, r2]
 801e7d8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801e7dc:	4422      	add	r2, r4
 801e7de:	4660      	mov	r0, ip
 801e7e0:	4666      	mov	r6, ip
 801e7e2:	e7a5      	b.n	801e730 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801e7e4:	4660      	mov	r0, ip
 801e7e6:	4662      	mov	r2, ip
 801e7e8:	e7a2      	b.n	801e730 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801e7ea:	4660      	mov	r0, ip
 801e7ec:	4662      	mov	r2, ip
 801e7ee:	e7f7      	b.n	801e7e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 801e7f0:	b00f      	add	sp, #60	; 0x3c
 801e7f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e7f6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801e7f6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e7fa:	b085      	sub	sp, #20
 801e7fc:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 801e800:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 801e804:	9102      	str	r1, [sp, #8]
 801e806:	2c00      	cmp	r4, #0
 801e808:	fb04 710c 	mla	r1, r4, ip, r7
 801e80c:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 801e810:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 801e814:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 801e818:	eb02 0e01 	add.w	lr, r2, r1
 801e81c:	f2c0 8122 	blt.w	801ea64 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801e820:	45a0      	cmp	r8, r4
 801e822:	f340 811f 	ble.w	801ea64 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801e826:	2f00      	cmp	r7, #0
 801e828:	f2c0 811a 	blt.w	801ea60 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801e82c:	45bc      	cmp	ip, r7
 801e82e:	f340 8117 	ble.w	801ea60 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801e832:	5c52      	ldrb	r2, [r2, r1]
 801e834:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801e838:	1c7a      	adds	r2, r7, #1
 801e83a:	f100 8116 	bmi.w	801ea6a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801e83e:	4594      	cmp	ip, r2
 801e840:	f340 8113 	ble.w	801ea6a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801e844:	2e00      	cmp	r6, #0
 801e846:	f000 8112 	beq.w	801ea6e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 801e84a:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801e84e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801e852:	3401      	adds	r4, #1
 801e854:	f100 810f 	bmi.w	801ea76 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801e858:	45a0      	cmp	r8, r4
 801e85a:	f340 810c 	ble.w	801ea76 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801e85e:	2800      	cmp	r0, #0
 801e860:	f000 810c 	beq.w	801ea7c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 801e864:	2f00      	cmp	r7, #0
 801e866:	f2c0 8104 	blt.w	801ea72 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801e86a:	45bc      	cmp	ip, r7
 801e86c:	f340 8101 	ble.w	801ea72 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801e870:	f81e 200c 	ldrb.w	r2, [lr, ip]
 801e874:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 801e878:	3701      	adds	r7, #1
 801e87a:	f100 8102 	bmi.w	801ea82 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801e87e:	45bc      	cmp	ip, r7
 801e880:	f340 80ff 	ble.w	801ea82 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801e884:	2e00      	cmp	r6, #0
 801e886:	f000 80fe 	beq.w	801ea86 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 801e88a:	44f4      	add	ip, lr
 801e88c:	f89c 2001 	ldrb.w	r2, [ip, #1]
 801e890:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801e894:	b2b6      	uxth	r6, r6
 801e896:	b280      	uxth	r0, r0
 801e898:	fb00 fe06 	mul.w	lr, r0, r6
 801e89c:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801e8a0:	0136      	lsls	r6, r6, #4
 801e8a2:	eba6 070e 	sub.w	r7, r6, lr
 801e8a6:	b280      	uxth	r0, r0
 801e8a8:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801e8ac:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801e8b0:	b2bf      	uxth	r7, r7
 801e8b2:	1a1b      	subs	r3, r3, r0
 801e8b4:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801e8b8:	b29b      	uxth	r3, r3
 801e8ba:	fb0a f607 	mul.w	r6, sl, r7
 801e8be:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801e8c2:	fb0b 6603 	mla	r6, fp, r3, r6
 801e8c6:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801e8ca:	fb00 6609 	mla	r6, r0, r9, r6
 801e8ce:	fb0e 6608 	mla	r6, lr, r8, r6
 801e8d2:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801e8d6:	9600      	str	r6, [sp, #0]
 801e8d8:	2e00      	cmp	r6, #0
 801e8da:	f000 80be 	beq.w	801ea5a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 801e8de:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801e8e2:	fb0b fc0c 	mul.w	ip, fp, ip
 801e8e6:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801e8ea:	fb0b f505 	mul.w	r5, fp, r5
 801e8ee:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801e8f2:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801e8f6:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801e8fa:	44dc      	add	ip, fp
 801e8fc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e900:	9501      	str	r5, [sp, #4]
 801e902:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801e906:	9503      	str	r5, [sp, #12]
 801e908:	9d01      	ldr	r5, [sp, #4]
 801e90a:	9e02      	ldr	r6, [sp, #8]
 801e90c:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801e910:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801e914:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801e918:	fb0a fc0c 	mul.w	ip, sl, ip
 801e91c:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801e920:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801e924:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801e928:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801e92c:	4465      	add	r5, ip
 801e92e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801e932:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801e936:	fb09 fc0c 	mul.w	ip, r9, ip
 801e93a:	fb09 f904 	mul.w	r9, r9, r4
 801e93e:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801e942:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801e946:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801e94a:	fb08 f404 	mul.w	r4, r8, r4
 801e94e:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801e952:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801e956:	fb08 f802 	mul.w	r8, r8, r2
 801e95a:	fb0a fa01 	mul.w	sl, sl, r1
 801e95e:	0a22      	lsrs	r2, r4, #8
 801e960:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801e964:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801e968:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801e96c:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801e970:	4414      	add	r4, r2
 801e972:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801e976:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801e97a:	0a2d      	lsrs	r5, r5, #8
 801e97c:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801e980:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801e984:	9a03      	ldr	r2, [sp, #12]
 801e986:	8836      	ldrh	r6, [r6, #0]
 801e988:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801e98c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801e990:	437d      	muls	r5, r7
 801e992:	4461      	add	r1, ip
 801e994:	0a24      	lsrs	r4, r4, #8
 801e996:	fb02 5503 	mla	r5, r2, r3, r5
 801e99a:	0a09      	lsrs	r1, r1, #8
 801e99c:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801e9a0:	fb04 540e 	mla	r4, r4, lr, r5
 801e9a4:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801e9a8:	fb01 4100 	mla	r1, r1, r0, r4
 801e9ac:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e9b0:	0a09      	lsrs	r1, r1, #8
 801e9b2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e9b6:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801e9ba:	fb07 f70a 	mul.w	r7, r7, sl
 801e9be:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801e9c2:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801e9c6:	fb03 7101 	mla	r1, r3, r1, r7
 801e9ca:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e9ce:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801e9d2:	fb0e 1e08 	mla	lr, lr, r8, r1
 801e9d6:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801e9da:	fb00 e101 	mla	r1, r0, r1, lr
 801e9de:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 801e9e2:	9a00      	ldr	r2, [sp, #0]
 801e9e4:	b287      	uxth	r7, r0
 801e9e6:	437a      	muls	r2, r7
 801e9e8:	0a09      	lsrs	r1, r1, #8
 801e9ea:	1c53      	adds	r3, r2, #1
 801e9ec:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801e9f0:	4321      	orrs	r1, r4
 801e9f2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e9f6:	1235      	asrs	r5, r6, #8
 801e9f8:	0c0a      	lsrs	r2, r1, #16
 801e9fa:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801e9fe:	b2db      	uxtb	r3, r3
 801ea00:	fb12 f207 	smulbb	r2, r2, r7
 801ea04:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801ea08:	fb05 2503 	mla	r5, r5, r3, r2
 801ea0c:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801ea10:	10f2      	asrs	r2, r6, #3
 801ea12:	b2c8      	uxtb	r0, r1
 801ea14:	00f6      	lsls	r6, r6, #3
 801ea16:	fb14 f407 	smulbb	r4, r4, r7
 801ea1a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801ea1e:	b2f6      	uxtb	r6, r6
 801ea20:	fb10 f007 	smulbb	r0, r0, r7
 801ea24:	fb02 4203 	mla	r2, r2, r3, r4
 801ea28:	b2ad      	uxth	r5, r5
 801ea2a:	fb06 0303 	mla	r3, r6, r3, r0
 801ea2e:	b299      	uxth	r1, r3
 801ea30:	b294      	uxth	r4, r2
 801ea32:	1c6b      	adds	r3, r5, #1
 801ea34:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801ea38:	1c62      	adds	r2, r4, #1
 801ea3a:	1c4b      	adds	r3, r1, #1
 801ea3c:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801ea40:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801ea44:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801ea48:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ea4c:	0952      	lsrs	r2, r2, #5
 801ea4e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ea52:	432b      	orrs	r3, r5
 801ea54:	4313      	orrs	r3, r2
 801ea56:	9a02      	ldr	r2, [sp, #8]
 801ea58:	8013      	strh	r3, [r2, #0]
 801ea5a:	b005      	add	sp, #20
 801ea5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ea60:	2500      	movs	r5, #0
 801ea62:	e6e9      	b.n	801e838 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 801ea64:	2100      	movs	r1, #0
 801ea66:	460d      	mov	r5, r1
 801ea68:	e6f3      	b.n	801e852 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801ea6a:	2100      	movs	r1, #0
 801ea6c:	e6f1      	b.n	801e852 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801ea6e:	4631      	mov	r1, r6
 801ea70:	e6ef      	b.n	801e852 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801ea72:	2400      	movs	r4, #0
 801ea74:	e700      	b.n	801e878 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 801ea76:	2200      	movs	r2, #0
 801ea78:	4614      	mov	r4, r2
 801ea7a:	e70b      	b.n	801e894 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801ea7c:	4602      	mov	r2, r0
 801ea7e:	4604      	mov	r4, r0
 801ea80:	e708      	b.n	801e894 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801ea82:	2200      	movs	r2, #0
 801ea84:	e706      	b.n	801e894 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801ea86:	4632      	mov	r2, r6
 801ea88:	e704      	b.n	801e894 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0801ea8a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ea8a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ea8e:	b09f      	sub	sp, #124	; 0x7c
 801ea90:	921b      	str	r2, [sp, #108]	; 0x6c
 801ea92:	9309      	str	r3, [sp, #36]	; 0x24
 801ea94:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801ea96:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 801ea9a:	931c      	str	r3, [sp, #112]	; 0x70
 801ea9c:	9119      	str	r1, [sp, #100]	; 0x64
 801ea9e:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801eaa2:	901d      	str	r0, [sp, #116]	; 0x74
 801eaa4:	6850      	ldr	r0, [r2, #4]
 801eaa6:	6812      	ldr	r2, [r2, #0]
 801eaa8:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 801eaaa:	fb00 1303 	mla	r3, r0, r3, r1
 801eaae:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801eab2:	930c      	str	r3, [sp, #48]	; 0x30
 801eab4:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801eab6:	681b      	ldr	r3, [r3, #0]
 801eab8:	9312      	str	r3, [sp, #72]	; 0x48
 801eaba:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801eabc:	685e      	ldr	r6, [r3, #4]
 801eabe:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 801eac2:	930d      	str	r3, [sp, #52]	; 0x34
 801eac4:	3604      	adds	r6, #4
 801eac6:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801eac8:	2b00      	cmp	r3, #0
 801eaca:	dc03      	bgt.n	801ead4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801eacc:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801eace:	2b00      	cmp	r3, #0
 801ead0:	f340 8388 	ble.w	801f1e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801ead4:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801ead6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801eada:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801eade:	1e48      	subs	r0, r1, #1
 801eae0:	1e57      	subs	r7, r2, #1
 801eae2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801eae4:	2b00      	cmp	r3, #0
 801eae6:	f340 8195 	ble.w	801ee14 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801eaea:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801eaec:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801eaf0:	ea4f 4325 	mov.w	r3, r5, asr #16
 801eaf4:	d406      	bmi.n	801eb04 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801eaf6:	4584      	cmp	ip, r0
 801eaf8:	da04      	bge.n	801eb04 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801eafa:	2b00      	cmp	r3, #0
 801eafc:	db02      	blt.n	801eb04 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801eafe:	42bb      	cmp	r3, r7
 801eb00:	f2c0 8189 	blt.w	801ee16 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 801eb04:	f11c 0c01 	adds.w	ip, ip, #1
 801eb08:	f100 8177 	bmi.w	801edfa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801eb0c:	4561      	cmp	r1, ip
 801eb0e:	f2c0 8174 	blt.w	801edfa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801eb12:	3301      	adds	r3, #1
 801eb14:	f100 8171 	bmi.w	801edfa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801eb18:	429a      	cmp	r2, r3
 801eb1a:	f2c0 816e 	blt.w	801edfa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801eb1e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801eb20:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801eb22:	931a      	str	r3, [sp, #104]	; 0x68
 801eb24:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801eb26:	2b00      	cmp	r3, #0
 801eb28:	f340 8193 	ble.w	801ee52 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 801eb2c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801eb2e:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801eb32:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801eb34:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 801eb38:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801eb3a:	141b      	asrs	r3, r3, #16
 801eb3c:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801eb40:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801eb44:	f100 81d6 	bmi.w	801eef4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801eb48:	f100 38ff 	add.w	r8, r0, #4294967295
 801eb4c:	4543      	cmp	r3, r8
 801eb4e:	f280 81d1 	bge.w	801eef4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801eb52:	f1bc 0f00 	cmp.w	ip, #0
 801eb56:	f2c0 81cd 	blt.w	801eef4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801eb5a:	f10e 38ff 	add.w	r8, lr, #4294967295
 801eb5e:	45c4      	cmp	ip, r8
 801eb60:	f280 81c8 	bge.w	801eef4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801eb64:	b200      	sxth	r0, r0
 801eb66:	fb0c 3300 	mla	r3, ip, r0, r3
 801eb6a:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801eb6c:	eb04 0803 	add.w	r8, r4, r3
 801eb70:	5ce3      	ldrb	r3, [r4, r3]
 801eb72:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801eb76:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801eb7a:	2a00      	cmp	r2, #0
 801eb7c:	f000 81af 	beq.w	801eede <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801eb80:	f898 c001 	ldrb.w	ip, [r8, #1]
 801eb84:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801eb88:	940e      	str	r4, [sp, #56]	; 0x38
 801eb8a:	0e24      	lsrs	r4, r4, #24
 801eb8c:	9415      	str	r4, [sp, #84]	; 0x54
 801eb8e:	b179      	cbz	r1, 801ebb0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801eb90:	eb08 0c00 	add.w	ip, r8, r0
 801eb94:	f818 0000 	ldrb.w	r0, [r8, r0]
 801eb98:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801eb9c:	900a      	str	r0, [sp, #40]	; 0x28
 801eb9e:	0e00      	lsrs	r0, r0, #24
 801eba0:	9013      	str	r0, [sp, #76]	; 0x4c
 801eba2:	f89c 0001 	ldrb.w	r0, [ip, #1]
 801eba6:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801ebaa:	900f      	str	r0, [sp, #60]	; 0x3c
 801ebac:	0e00      	lsrs	r0, r0, #24
 801ebae:	9016      	str	r0, [sp, #88]	; 0x58
 801ebb0:	b292      	uxth	r2, r2
 801ebb2:	b289      	uxth	r1, r1
 801ebb4:	fb02 f901 	mul.w	r9, r2, r1
 801ebb8:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801ebbc:	0112      	lsls	r2, r2, #4
 801ebbe:	eba2 0809 	sub.w	r8, r2, r9
 801ebc2:	b289      	uxth	r1, r1
 801ebc4:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801ebc8:	9815      	ldr	r0, [sp, #84]	; 0x54
 801ebca:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ebcc:	fa1f f888 	uxth.w	r8, r8
 801ebd0:	1a52      	subs	r2, r2, r1
 801ebd2:	b292      	uxth	r2, r2
 801ebd4:	fb08 f000 	mul.w	r0, r8, r0
 801ebd8:	fb02 000e 	mla	r0, r2, lr, r0
 801ebdc:	fb01 0004 	mla	r0, r1, r4, r0
 801ebe0:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801ebe2:	fb09 0004 	mla	r0, r9, r4, r0
 801ebe6:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801ebea:	2800      	cmp	r0, #0
 801ebec:	f000 80fa 	beq.w	801ede4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801ebf0:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801ebf4:	d01b      	beq.n	801ec2e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801ebf6:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801ebfa:	fb0e fa0a 	mul.w	sl, lr, sl
 801ebfe:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801ec02:	fb0e fe03 	mul.w	lr, lr, r3
 801ec06:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801ec0a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801ec0e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801ec12:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801ec16:	4453      	add	r3, sl
 801ec18:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801ec1c:	0a1b      	lsrs	r3, r3, #8
 801ec1e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ec22:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801ec26:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801ec2a:	ea43 030c 	orr.w	r3, r3, ip
 801ec2e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801ec30:	2cff      	cmp	r4, #255	; 0xff
 801ec32:	d021      	beq.n	801ec78 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801ec34:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801ec36:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801ec3a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801ec3c:	fb04 fb0b 	mul.w	fp, r4, fp
 801ec40:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801ec42:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801ec46:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801ec48:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ec4c:	fb04 fa0a 	mul.w	sl, r4, sl
 801ec50:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ec54:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801ec58:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801ec5c:	44de      	add	lr, fp
 801ec5e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ec62:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ec66:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ec6a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ec6e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ec72:	ea4e 040a 	orr.w	r4, lr, sl
 801ec76:	940e      	str	r4, [sp, #56]	; 0x38
 801ec78:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ec7a:	2cff      	cmp	r4, #255	; 0xff
 801ec7c:	d021      	beq.n	801ecc2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 801ec7e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801ec80:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801ec84:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ec86:	fb04 fb0b 	mul.w	fp, r4, fp
 801ec8a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801ec8c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801ec90:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ec92:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ec96:	fb04 fa0a 	mul.w	sl, r4, sl
 801ec9a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ec9e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801eca2:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801eca6:	44de      	add	lr, fp
 801eca8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ecac:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ecb0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ecb4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ecb8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ecbc:	ea4e 040a 	orr.w	r4, lr, sl
 801ecc0:	940a      	str	r4, [sp, #40]	; 0x28
 801ecc2:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801ecc4:	2cff      	cmp	r4, #255	; 0xff
 801ecc6:	d021      	beq.n	801ed0c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801ecc8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801ecca:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801ecce:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801ecd0:	fb04 fb0b 	mul.w	fp, r4, fp
 801ecd4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801ecd6:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801ecda:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801ecdc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ece0:	fb04 fa0a 	mul.w	sl, r4, sl
 801ece4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ece8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801ecec:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801ecf0:	44de      	add	lr, fp
 801ecf2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ecf6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ecfa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ecfe:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ed02:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ed06:	ea4e 040a 	orr.w	r4, lr, sl
 801ed0a:	940f      	str	r4, [sp, #60]	; 0x3c
 801ed0c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801ed0e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801ed12:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801ed14:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801ed18:	fb08 fc0c 	mul.w	ip, r8, ip
 801ed1c:	fb02 cc0e 	mla	ip, r2, lr, ip
 801ed20:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801ed24:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801ed26:	fb01 cc0e 	mla	ip, r1, lr, ip
 801ed2a:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801ed2e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801ed30:	fb09 cc0e 	mla	ip, r9, lr, ip
 801ed34:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801ed38:	fb08 f80e 	mul.w	r8, r8, lr
 801ed3c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801ed40:	fb02 8303 	mla	r3, r2, r3, r8
 801ed44:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801ed46:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801ed48:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801ed4c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ed4e:	fb01 330a 	mla	r3, r1, sl, r3
 801ed52:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 801ed56:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801ed58:	fb09 3901 	mla	r9, r9, r1, r3
 801ed5c:	4342      	muls	r2, r0
 801ed5e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ed62:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801ed66:	883b      	ldrh	r3, [r7, #0]
 801ed68:	1c50      	adds	r0, r2, #1
 801ed6a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ed6e:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801ed72:	ea4c 0c09 	orr.w	ip, ip, r9
 801ed76:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801ed7a:	1219      	asrs	r1, r3, #8
 801ed7c:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801ed80:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801ed84:	b2c0      	uxtb	r0, r0
 801ed86:	fb12 f204 	smulbb	r2, r2, r4
 801ed8a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801ed8e:	fb01 2100 	mla	r1, r1, r0, r2
 801ed92:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801ed96:	10da      	asrs	r2, r3, #3
 801ed98:	fa5f fc8c 	uxtb.w	ip, ip
 801ed9c:	00db      	lsls	r3, r3, #3
 801ed9e:	fb1c fc04 	smulbb	ip, ip, r4
 801eda2:	b2db      	uxtb	r3, r3
 801eda4:	b289      	uxth	r1, r1
 801eda6:	fb03 c300 	mla	r3, r3, r0, ip
 801edaa:	fa1f fc83 	uxth.w	ip, r3
 801edae:	1c4b      	adds	r3, r1, #1
 801edb0:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801edb4:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801edb8:	fb1e fe04 	smulbb	lr, lr, r4
 801edbc:	f10c 0301 	add.w	r3, ip, #1
 801edc0:	fb02 e200 	mla	r2, r2, r0, lr
 801edc4:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801edc8:	b292      	uxth	r2, r2
 801edca:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801edce:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801edd2:	430b      	orrs	r3, r1
 801edd4:	1c51      	adds	r1, r2, #1
 801edd6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801edda:	0952      	lsrs	r2, r2, #5
 801eddc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ede0:	4313      	orrs	r3, r2
 801ede2:	803b      	strh	r3, [r7, #0]
 801ede4:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801ede6:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801ede8:	441a      	add	r2, r3
 801edea:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801edec:	9229      	str	r2, [sp, #164]	; 0xa4
 801edee:	441d      	add	r5, r3
 801edf0:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801edf2:	3b01      	subs	r3, #1
 801edf4:	3702      	adds	r7, #2
 801edf6:	931a      	str	r3, [sp, #104]	; 0x68
 801edf8:	e694      	b.n	801eb24 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801edfa:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801edfc:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801edfe:	441c      	add	r4, r3
 801ee00:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801ee02:	9429      	str	r4, [sp, #164]	; 0xa4
 801ee04:	441d      	add	r5, r3
 801ee06:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ee08:	3b01      	subs	r3, #1
 801ee0a:	9309      	str	r3, [sp, #36]	; 0x24
 801ee0c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801ee0e:	3302      	adds	r3, #2
 801ee10:	930c      	str	r3, [sp, #48]	; 0x30
 801ee12:	e666      	b.n	801eae2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801ee14:	d024      	beq.n	801ee60 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 801ee16:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ee18:	982b      	ldr	r0, [sp, #172]	; 0xac
 801ee1a:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801ee1c:	3b01      	subs	r3, #1
 801ee1e:	fb00 4003 	mla	r0, r0, r3, r4
 801ee22:	1400      	asrs	r0, r0, #16
 801ee24:	f53f ae7b 	bmi.w	801eb1e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ee28:	3901      	subs	r1, #1
 801ee2a:	4288      	cmp	r0, r1
 801ee2c:	f6bf ae77 	bge.w	801eb1e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ee30:	992c      	ldr	r1, [sp, #176]	; 0xb0
 801ee32:	fb01 5303 	mla	r3, r1, r3, r5
 801ee36:	141b      	asrs	r3, r3, #16
 801ee38:	f53f ae71 	bmi.w	801eb1e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ee3c:	3a01      	subs	r2, #1
 801ee3e:	4293      	cmp	r3, r2
 801ee40:	f6bf ae6d 	bge.w	801eb1e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ee44:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801ee48:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 801ee4c:	f1bb 0f00 	cmp.w	fp, #0
 801ee50:	dc70      	bgt.n	801ef34 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 801ee52:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ee54:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801ee58:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801ee5a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801ee5e:	930c      	str	r3, [sp, #48]	; 0x30
 801ee60:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801ee62:	2b00      	cmp	r3, #0
 801ee64:	f340 81be 	ble.w	801f1e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801ee68:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ee6c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ee70:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ee74:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ee76:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ee7a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ee7e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ee82:	eef0 6a62 	vmov.f32	s13, s5
 801ee86:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ee8a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ee8e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ee92:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 801ee96:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ee9a:	eef0 6a43 	vmov.f32	s13, s6
 801ee9e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801eea2:	ee12 2a90 	vmov	r2, s5
 801eea6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801eeaa:	fb92 f3f3 	sdiv	r3, r2, r3
 801eeae:	ee13 2a10 	vmov	r2, s6
 801eeb2:	932b      	str	r3, [sp, #172]	; 0xac
 801eeb4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801eeb6:	fb92 f3f3 	sdiv	r3, r2, r3
 801eeba:	932c      	str	r3, [sp, #176]	; 0xb0
 801eebc:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801eebe:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 801eec0:	3b01      	subs	r3, #1
 801eec2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801eec6:	9319      	str	r3, [sp, #100]	; 0x64
 801eec8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801eeca:	bf08      	it	eq
 801eecc:	4613      	moveq	r3, r2
 801eece:	ee16 5a90 	vmov	r5, s13
 801eed2:	9309      	str	r3, [sp, #36]	; 0x24
 801eed4:	eeb0 3a67 	vmov.f32	s6, s15
 801eed8:	eef0 2a47 	vmov.f32	s5, s14
 801eedc:	e5f3      	b.n	801eac6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801eede:	2900      	cmp	r1, #0
 801eee0:	f43f ae66 	beq.w	801ebb0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801eee4:	f818 0000 	ldrb.w	r0, [r8, r0]
 801eee8:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801eeec:	900a      	str	r0, [sp, #40]	; 0x28
 801eeee:	0e00      	lsrs	r0, r0, #24
 801eef0:	9013      	str	r0, [sp, #76]	; 0x4c
 801eef2:	e65d      	b.n	801ebb0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801eef4:	f113 0801 	adds.w	r8, r3, #1
 801eef8:	f53f af74 	bmi.w	801ede4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801eefc:	4540      	cmp	r0, r8
 801eefe:	f6ff af71 	blt.w	801ede4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801ef02:	f11c 0801 	adds.w	r8, ip, #1
 801ef06:	f53f af6d 	bmi.w	801ede4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801ef0a:	45c6      	cmp	lr, r8
 801ef0c:	f6ff af6a 	blt.w	801ede4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801ef10:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 801ef12:	9302      	str	r3, [sp, #8]
 801ef14:	b200      	sxth	r0, r0
 801ef16:	fa0f f38e 	sxth.w	r3, lr
 801ef1a:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801ef1e:	e9cd c203 	strd	ip, r2, [sp, #12]
 801ef22:	9301      	str	r3, [sp, #4]
 801ef24:	9000      	str	r0, [sp, #0]
 801ef26:	4633      	mov	r3, r6
 801ef28:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801ef2a:	981d      	ldr	r0, [sp, #116]	; 0x74
 801ef2c:	4639      	mov	r1, r7
 801ef2e:	f7ff fc62 	bl	801e7f6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 801ef32:	e757      	b.n	801ede4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801ef34:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801ef36:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801ef38:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801ef3c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801ef3e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ef42:	1427      	asrs	r7, r4, #16
 801ef44:	142b      	asrs	r3, r5, #16
 801ef46:	fb01 7303 	mla	r3, r1, r3, r7
 801ef4a:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801ef4c:	18e7      	adds	r7, r4, r3
 801ef4e:	5ce3      	ldrb	r3, [r4, r3]
 801ef50:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801ef54:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801ef58:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801ef5c:	2a00      	cmp	r2, #0
 801ef5e:	f000 8137 	beq.w	801f1d0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801ef62:	f897 e001 	ldrb.w	lr, [r7, #1]
 801ef66:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801ef6a:	9410      	str	r4, [sp, #64]	; 0x40
 801ef6c:	0e24      	lsrs	r4, r4, #24
 801ef6e:	9417      	str	r4, [sp, #92]	; 0x5c
 801ef70:	b170      	cbz	r0, 801ef90 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801ef72:	eb07 0e01 	add.w	lr, r7, r1
 801ef76:	5c79      	ldrb	r1, [r7, r1]
 801ef78:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801ef7c:	910b      	str	r1, [sp, #44]	; 0x2c
 801ef7e:	0e09      	lsrs	r1, r1, #24
 801ef80:	9114      	str	r1, [sp, #80]	; 0x50
 801ef82:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801ef86:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801ef8a:	9111      	str	r1, [sp, #68]	; 0x44
 801ef8c:	0e09      	lsrs	r1, r1, #24
 801ef8e:	9118      	str	r1, [sp, #96]	; 0x60
 801ef90:	b292      	uxth	r2, r2
 801ef92:	b280      	uxth	r0, r0
 801ef94:	fb02 f800 	mul.w	r8, r2, r0
 801ef98:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801ef9c:	0112      	lsls	r2, r2, #4
 801ef9e:	eba2 0e08 	sub.w	lr, r2, r8
 801efa2:	b280      	uxth	r0, r0
 801efa4:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801efa8:	9917      	ldr	r1, [sp, #92]	; 0x5c
 801efaa:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801efac:	fa1f fe8e 	uxth.w	lr, lr
 801efb0:	1a12      	subs	r2, r2, r0
 801efb2:	b292      	uxth	r2, r2
 801efb4:	fb0e f101 	mul.w	r1, lr, r1
 801efb8:	fb02 110c 	mla	r1, r2, ip, r1
 801efbc:	fb00 1104 	mla	r1, r0, r4, r1
 801efc0:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801efc2:	fb08 1104 	mla	r1, r8, r4, r1
 801efc6:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801efca:	2900      	cmp	r1, #0
 801efcc:	f000 80f5 	beq.w	801f1ba <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801efd0:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801efd4:	d019      	beq.n	801f00a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 801efd6:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801efda:	fb0c fa0a 	mul.w	sl, ip, sl
 801efde:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801efe2:	fb0c fc03 	mul.w	ip, ip, r3
 801efe6:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801efea:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801efee:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801eff2:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801eff6:	4453      	add	r3, sl
 801eff8:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801effc:	0a1b      	lsrs	r3, r3, #8
 801effe:	0a3f      	lsrs	r7, r7, #8
 801f000:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801f004:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801f008:	433b      	orrs	r3, r7
 801f00a:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801f00c:	2cff      	cmp	r4, #255	; 0xff
 801f00e:	d020      	beq.n	801f052 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 801f010:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801f012:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801f016:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801f018:	4367      	muls	r7, r4
 801f01a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801f01c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801f020:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801f022:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f026:	fb04 fa0a 	mul.w	sl, r4, sl
 801f02a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801f02e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f032:	44bc      	add	ip, r7
 801f034:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801f038:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f03c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f040:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f044:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f048:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f04c:	ea4c 040a 	orr.w	r4, ip, sl
 801f050:	9410      	str	r4, [sp, #64]	; 0x40
 801f052:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801f054:	2cff      	cmp	r4, #255	; 0xff
 801f056:	d020      	beq.n	801f09a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 801f058:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801f05a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801f05e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801f060:	4367      	muls	r7, r4
 801f062:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801f064:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801f068:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801f06a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f06e:	fb04 fa0a 	mul.w	sl, r4, sl
 801f072:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801f076:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f07a:	44bc      	add	ip, r7
 801f07c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801f080:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f084:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f088:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f08c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f090:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f094:	ea4c 040a 	orr.w	r4, ip, sl
 801f098:	940b      	str	r4, [sp, #44]	; 0x2c
 801f09a:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801f09c:	2cff      	cmp	r4, #255	; 0xff
 801f09e:	d020      	beq.n	801f0e2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 801f0a0:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801f0a2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801f0a6:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801f0a8:	4367      	muls	r7, r4
 801f0aa:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801f0ac:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801f0b0:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801f0b2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f0b6:	fb04 fa0a 	mul.w	sl, r4, sl
 801f0ba:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801f0be:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f0c2:	44bc      	add	ip, r7
 801f0c4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801f0c8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f0cc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f0d0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f0d4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f0d8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f0dc:	ea4c 040a 	orr.w	r4, ip, sl
 801f0e0:	9411      	str	r4, [sp, #68]	; 0x44
 801f0e2:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801f0e4:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801f0e8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801f0ea:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801f0ee:	fb0e f707 	mul.w	r7, lr, r7
 801f0f2:	fb02 770c 	mla	r7, r2, ip, r7
 801f0f6:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801f0fa:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801f0fc:	fb00 770c 	mla	r7, r0, ip, r7
 801f100:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801f104:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801f106:	fb08 770c 	mla	r7, r8, ip, r7
 801f10a:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801f10e:	fb0e fe0c 	mul.w	lr, lr, ip
 801f112:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801f116:	fb02 e303 	mla	r3, r2, r3, lr
 801f11a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801f11c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801f11e:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801f122:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801f124:	fb00 330a 	mla	r3, r0, sl, r3
 801f128:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801f12c:	fb08 3c0c 	mla	ip, r8, ip, r3
 801f130:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f132:	f8b9 0000 	ldrh.w	r0, [r9]
 801f136:	434b      	muls	r3, r1
 801f138:	0a3f      	lsrs	r7, r7, #8
 801f13a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f13e:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801f142:	1c59      	adds	r1, r3, #1
 801f144:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801f148:	ea47 070c 	orr.w	r7, r7, ip
 801f14c:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801f150:	1202      	asrs	r2, r0, #8
 801f152:	0c3b      	lsrs	r3, r7, #16
 801f154:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801f158:	b2c9      	uxtb	r1, r1
 801f15a:	fb13 f304 	smulbb	r3, r3, r4
 801f15e:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801f162:	fb02 3201 	mla	r2, r2, r1, r3
 801f166:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801f16a:	10c3      	asrs	r3, r0, #3
 801f16c:	b2ff      	uxtb	r7, r7
 801f16e:	00c0      	lsls	r0, r0, #3
 801f170:	b292      	uxth	r2, r2
 801f172:	fb1c fc04 	smulbb	ip, ip, r4
 801f176:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801f17a:	b2c0      	uxtb	r0, r0
 801f17c:	fb17 f704 	smulbb	r7, r7, r4
 801f180:	fb03 c301 	mla	r3, r3, r1, ip
 801f184:	fb00 7001 	mla	r0, r0, r1, r7
 801f188:	f102 0c01 	add.w	ip, r2, #1
 801f18c:	b280      	uxth	r0, r0
 801f18e:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801f192:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 801f196:	1c42      	adds	r2, r0, #1
 801f198:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801f19c:	b29b      	uxth	r3, r3
 801f19e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801f1a2:	ea42 020c 	orr.w	r2, r2, ip
 801f1a6:	f103 0c01 	add.w	ip, r3, #1
 801f1aa:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801f1ae:	095b      	lsrs	r3, r3, #5
 801f1b0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f1b4:	431a      	orrs	r2, r3
 801f1b6:	f8a9 2000 	strh.w	r2, [r9]
 801f1ba:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801f1bc:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801f1be:	441a      	add	r2, r3
 801f1c0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801f1c2:	9229      	str	r2, [sp, #164]	; 0xa4
 801f1c4:	f109 0902 	add.w	r9, r9, #2
 801f1c8:	441d      	add	r5, r3
 801f1ca:	f10b 3bff 	add.w	fp, fp, #4294967295
 801f1ce:	e63d      	b.n	801ee4c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801f1d0:	2800      	cmp	r0, #0
 801f1d2:	f43f aedd 	beq.w	801ef90 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801f1d6:	5c79      	ldrb	r1, [r7, r1]
 801f1d8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801f1dc:	910b      	str	r1, [sp, #44]	; 0x2c
 801f1de:	0e09      	lsrs	r1, r1, #24
 801f1e0:	9114      	str	r1, [sp, #80]	; 0x50
 801f1e2:	e6d5      	b.n	801ef90 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801f1e4:	b01f      	add	sp, #124	; 0x7c
 801f1e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f1ea <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 801f1ea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f1ee:	b089      	sub	sp, #36	; 0x24
 801f1f0:	9101      	str	r1, [sp, #4]
 801f1f2:	9801      	ldr	r0, [sp, #4]
 801f1f4:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 801f1f8:	8800      	ldrh	r0, [r0, #0]
 801f1fa:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 801f1fe:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 801f202:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 801f206:	1206      	asrs	r6, r0, #8
 801f208:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 801f20c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801f210:	9602      	str	r6, [sp, #8]
 801f212:	10c6      	asrs	r6, r0, #3
 801f214:	00c0      	lsls	r0, r0, #3
 801f216:	b2c0      	uxtb	r0, r0
 801f218:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801f21c:	9004      	str	r0, [sp, #16]
 801f21e:	2f00      	cmp	r7, #0
 801f220:	fb07 100c 	mla	r0, r7, ip, r1
 801f224:	9603      	str	r6, [sp, #12]
 801f226:	eb02 0e00 	add.w	lr, r2, r0
 801f22a:	f2c0 810a 	blt.w	801f442 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801f22e:	45b8      	cmp	r8, r7
 801f230:	f340 8107 	ble.w	801f442 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801f234:	2900      	cmp	r1, #0
 801f236:	f2c0 8102 	blt.w	801f43e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801f23a:	458c      	cmp	ip, r1
 801f23c:	f340 80ff 	ble.w	801f43e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801f240:	5c12      	ldrb	r2, [r2, r0]
 801f242:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 801f246:	1c4a      	adds	r2, r1, #1
 801f248:	f100 80fe 	bmi.w	801f448 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801f24c:	4594      	cmp	ip, r2
 801f24e:	f340 80fb 	ble.w	801f448 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801f252:	2d00      	cmp	r5, #0
 801f254:	f000 80fa 	beq.w	801f44c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 801f258:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801f25c:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801f260:	3701      	adds	r7, #1
 801f262:	f100 80f7 	bmi.w	801f454 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801f266:	45b8      	cmp	r8, r7
 801f268:	f340 80f4 	ble.w	801f454 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801f26c:	2c00      	cmp	r4, #0
 801f26e:	f000 80f4 	beq.w	801f45a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 801f272:	2900      	cmp	r1, #0
 801f274:	eb0e 020c 	add.w	r2, lr, ip
 801f278:	f2c0 80ea 	blt.w	801f450 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801f27c:	458c      	cmp	ip, r1
 801f27e:	f340 80e7 	ble.w	801f450 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801f282:	f81e 700c 	ldrb.w	r7, [lr, ip]
 801f286:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 801f28a:	3101      	adds	r1, #1
 801f28c:	f100 80e8 	bmi.w	801f460 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801f290:	458c      	cmp	ip, r1
 801f292:	f340 80e5 	ble.w	801f460 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801f296:	2d00      	cmp	r5, #0
 801f298:	f000 80e4 	beq.w	801f464 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 801f29c:	7852      	ldrb	r2, [r2, #1]
 801f29e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801f2a2:	0e0b      	lsrs	r3, r1, #24
 801f2a4:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 801f2a8:	9300      	str	r3, [sp, #0]
 801f2aa:	b2a4      	uxth	r4, r4
 801f2ac:	b2ab      	uxth	r3, r5
 801f2ae:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 801f2b2:	fb03 f904 	mul.w	r9, r3, r4
 801f2b6:	fb0a f505 	mul.w	r5, sl, r5
 801f2ba:	011b      	lsls	r3, r3, #4
 801f2bc:	eba3 0e09 	sub.w	lr, r3, r9
 801f2c0:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 801f2c4:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 801f2c8:	0a28      	lsrs	r0, r5, #8
 801f2ca:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801f2ce:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 801f2d2:	4405      	add	r5, r0
 801f2d4:	0a2d      	lsrs	r5, r5, #8
 801f2d6:	fb0a f303 	mul.w	r3, sl, r3
 801f2da:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 801f2de:	9005      	str	r0, [sp, #20]
 801f2e0:	f503 7080 	add.w	r0, r3, #256	; 0x100
 801f2e4:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801f2e8:	0a1b      	lsrs	r3, r3, #8
 801f2ea:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 801f2ee:	9306      	str	r3, [sp, #24]
 801f2f0:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 801f2f4:	fb0b f303 	mul.w	r3, fp, r3
 801f2f8:	0a1d      	lsrs	r5, r3, #8
 801f2fa:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801f2fe:	ea4f 6817 	mov.w	r8, r7, lsr #24
 801f302:	fb0b f606 	mul.w	r6, fp, r6
 801f306:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 801f30a:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 801f30e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801f312:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801f316:	fb08 f707 	mul.w	r7, r8, r7
 801f31a:	441d      	add	r5, r3
 801f31c:	f506 7380 	add.w	r3, r6, #256	; 0x100
 801f320:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801f324:	f507 7380 	add.w	r3, r7, #256	; 0x100
 801f328:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 801f32c:	fb08 fc0c 	mul.w	ip, r8, ip
 801f330:	0a1b      	lsrs	r3, r3, #8
 801f332:	9307      	str	r3, [sp, #28]
 801f334:	ea4f 201c 	mov.w	r0, ip, lsr #8
 801f338:	0e0b      	lsrs	r3, r1, #24
 801f33a:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 801f33e:	435f      	muls	r7, r3
 801f340:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801f344:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801f348:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 801f34c:	4460      	add	r0, ip
 801f34e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f352:	b2a4      	uxth	r4, r4
 801f354:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801f358:	0a2d      	lsrs	r5, r5, #8
 801f35a:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801f35e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f362:	fa1f fe8e 	uxth.w	lr, lr
 801f366:	4359      	muls	r1, r3
 801f368:	1b12      	subs	r2, r2, r4
 801f36a:	9b05      	ldr	r3, [sp, #20]
 801f36c:	44bc      	add	ip, r7
 801f36e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801f372:	b292      	uxth	r2, r2
 801f374:	fb05 f50e 	mul.w	r5, r5, lr
 801f378:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f37c:	fb03 5502 	mla	r5, r3, r2, r5
 801f380:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f384:	9b06      	ldr	r3, [sp, #24]
 801f386:	f501 7780 	add.w	r7, r1, #256	; 0x100
 801f38a:	0a36      	lsrs	r6, r6, #8
 801f38c:	0a00      	lsrs	r0, r0, #8
 801f38e:	fb0c 5509 	mla	r5, ip, r9, r5
 801f392:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801f396:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801f39a:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801f39e:	fb00 5504 	mla	r5, r0, r4, r5
 801f3a2:	fb0e f606 	mul.w	r6, lr, r6
 801f3a6:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 801f3aa:	0a09      	lsrs	r1, r1, #8
 801f3ac:	9b07      	ldr	r3, [sp, #28]
 801f3ae:	fb02 6000 	mla	r0, r2, r0, r6
 801f3b2:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801f3b6:	fb09 0001 	mla	r0, r9, r1, r0
 801f3ba:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801f3be:	fb0e fe0b 	mul.w	lr, lr, fp
 801f3c2:	fb04 0003 	mla	r0, r4, r3, r0
 801f3c6:	fb02 e20a 	mla	r2, r2, sl, lr
 801f3ca:	9b00      	ldr	r3, [sp, #0]
 801f3cc:	fb04 2408 	mla	r4, r4, r8, r2
 801f3d0:	fb09 4903 	mla	r9, r9, r3, r4
 801f3d4:	ea6f 2929 	mvn.w	r9, r9, asr #8
 801f3d8:	9b02      	ldr	r3, [sp, #8]
 801f3da:	9a04      	ldr	r2, [sp, #16]
 801f3dc:	fa5f f989 	uxtb.w	r9, r9
 801f3e0:	fb03 f109 	mul.w	r1, r3, r9
 801f3e4:	9b03      	ldr	r3, [sp, #12]
 801f3e6:	0a2d      	lsrs	r5, r5, #8
 801f3e8:	0a00      	lsrs	r0, r0, #8
 801f3ea:	fb03 f309 	mul.w	r3, r3, r9
 801f3ee:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801f3f2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801f3f6:	4305      	orrs	r5, r0
 801f3f8:	fb02 f909 	mul.w	r9, r2, r9
 801f3fc:	1c58      	adds	r0, r3, #1
 801f3fe:	1c4a      	adds	r2, r1, #1
 801f400:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801f404:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801f408:	0a2b      	lsrs	r3, r5, #8
 801f40a:	0c2a      	lsrs	r2, r5, #16
 801f40c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801f410:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 801f414:	00db      	lsls	r3, r3, #3
 801f416:	0212      	lsls	r2, r2, #8
 801f418:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801f41c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f420:	4313      	orrs	r3, r2
 801f422:	f109 0201 	add.w	r2, r9, #1
 801f426:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 801f42a:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 801f42e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801f432:	431d      	orrs	r5, r3
 801f434:	9b01      	ldr	r3, [sp, #4]
 801f436:	801d      	strh	r5, [r3, #0]
 801f438:	b009      	add	sp, #36	; 0x24
 801f43a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f43e:	2000      	movs	r0, #0
 801f440:	e701      	b.n	801f246 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 801f442:	2600      	movs	r6, #0
 801f444:	4630      	mov	r0, r6
 801f446:	e70b      	b.n	801f260 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801f448:	2600      	movs	r6, #0
 801f44a:	e709      	b.n	801f260 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801f44c:	462e      	mov	r6, r5
 801f44e:	e707      	b.n	801f260 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801f450:	2700      	movs	r7, #0
 801f452:	e71a      	b.n	801f28a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 801f454:	2100      	movs	r1, #0
 801f456:	460f      	mov	r7, r1
 801f458:	e723      	b.n	801f2a2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801f45a:	4621      	mov	r1, r4
 801f45c:	4627      	mov	r7, r4
 801f45e:	e720      	b.n	801f2a2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801f460:	2100      	movs	r1, #0
 801f462:	e71e      	b.n	801f2a2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801f464:	4629      	mov	r1, r5
 801f466:	e71c      	b.n	801f2a2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

0801f468 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f468:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f46c:	b09b      	sub	sp, #108	; 0x6c
 801f46e:	9218      	str	r2, [sp, #96]	; 0x60
 801f470:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801f472:	9116      	str	r1, [sp, #88]	; 0x58
 801f474:	9307      	str	r3, [sp, #28]
 801f476:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801f47a:	9019      	str	r0, [sp, #100]	; 0x64
 801f47c:	6850      	ldr	r0, [r2, #4]
 801f47e:	6812      	ldr	r2, [r2, #0]
 801f480:	9d26      	ldr	r5, [sp, #152]	; 0x98
 801f482:	fb00 1303 	mla	r3, r0, r3, r1
 801f486:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f48a:	930a      	str	r3, [sp, #40]	; 0x28
 801f48c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801f48e:	681b      	ldr	r3, [r3, #0]
 801f490:	930f      	str	r3, [sp, #60]	; 0x3c
 801f492:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801f494:	685e      	ldr	r6, [r3, #4]
 801f496:	3604      	adds	r6, #4
 801f498:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801f49a:	2b00      	cmp	r3, #0
 801f49c:	dc03      	bgt.n	801f4a6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801f49e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801f4a0:	2b00      	cmp	r3, #0
 801f4a2:	f340 8373 	ble.w	801fb8c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801f4a6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801f4a8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f4ac:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f4b0:	1e48      	subs	r0, r1, #1
 801f4b2:	1e57      	subs	r7, r2, #1
 801f4b4:	9b07      	ldr	r3, [sp, #28]
 801f4b6:	2b00      	cmp	r3, #0
 801f4b8:	f340 8190 	ble.w	801f7dc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801f4bc:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801f4be:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801f4c2:	ea4f 4325 	mov.w	r3, r5, asr #16
 801f4c6:	d406      	bmi.n	801f4d6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801f4c8:	4584      	cmp	ip, r0
 801f4ca:	da04      	bge.n	801f4d6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801f4cc:	2b00      	cmp	r3, #0
 801f4ce:	db02      	blt.n	801f4d6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801f4d0:	42bb      	cmp	r3, r7
 801f4d2:	f2c0 8184 	blt.w	801f7de <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 801f4d6:	f11c 0c01 	adds.w	ip, ip, #1
 801f4da:	f100 8172 	bmi.w	801f7c2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801f4de:	4561      	cmp	r1, ip
 801f4e0:	f2c0 816f 	blt.w	801f7c2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801f4e4:	3301      	adds	r3, #1
 801f4e6:	f100 816c 	bmi.w	801f7c2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801f4ea:	429a      	cmp	r2, r3
 801f4ec:	f2c0 8169 	blt.w	801f7c2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801f4f0:	9b07      	ldr	r3, [sp, #28]
 801f4f2:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801f4f4:	9317      	str	r3, [sp, #92]	; 0x5c
 801f4f6:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801f4f8:	2b00      	cmp	r3, #0
 801f4fa:	f340 818e 	ble.w	801f81a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 801f4fe:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801f500:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801f504:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801f506:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 801f50a:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801f50c:	141b      	asrs	r3, r3, #16
 801f50e:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801f512:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801f516:	f100 81d1 	bmi.w	801f8bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801f51a:	f101 38ff 	add.w	r8, r1, #4294967295
 801f51e:	4543      	cmp	r3, r8
 801f520:	f280 81cc 	bge.w	801f8bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801f524:	f1bc 0f00 	cmp.w	ip, #0
 801f528:	f2c0 81c8 	blt.w	801f8bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801f52c:	f10e 38ff 	add.w	r8, lr, #4294967295
 801f530:	45c4      	cmp	ip, r8
 801f532:	f280 81c3 	bge.w	801f8bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801f536:	b209      	sxth	r1, r1
 801f538:	fb0c 3301 	mla	r3, ip, r1, r3
 801f53c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801f53e:	eb04 0803 	add.w	r8, r4, r3
 801f542:	5ce3      	ldrb	r3, [r4, r3]
 801f544:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801f548:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801f54c:	2a00      	cmp	r2, #0
 801f54e:	f000 81aa 	beq.w	801f8a6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 801f552:	f898 c001 	ldrb.w	ip, [r8, #1]
 801f556:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801f55a:	940b      	str	r4, [sp, #44]	; 0x2c
 801f55c:	0e24      	lsrs	r4, r4, #24
 801f55e:	9412      	str	r4, [sp, #72]	; 0x48
 801f560:	b178      	cbz	r0, 801f582 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801f562:	eb08 0c01 	add.w	ip, r8, r1
 801f566:	f818 1001 	ldrb.w	r1, [r8, r1]
 801f56a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801f56e:	9108      	str	r1, [sp, #32]
 801f570:	0e09      	lsrs	r1, r1, #24
 801f572:	9110      	str	r1, [sp, #64]	; 0x40
 801f574:	f89c 1001 	ldrb.w	r1, [ip, #1]
 801f578:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801f57c:	910c      	str	r1, [sp, #48]	; 0x30
 801f57e:	0e09      	lsrs	r1, r1, #24
 801f580:	9113      	str	r1, [sp, #76]	; 0x4c
 801f582:	b292      	uxth	r2, r2
 801f584:	b280      	uxth	r0, r0
 801f586:	fb02 f900 	mul.w	r9, r2, r0
 801f58a:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801f58e:	0112      	lsls	r2, r2, #4
 801f590:	eba2 0809 	sub.w	r8, r2, r9
 801f594:	b280      	uxth	r0, r0
 801f596:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801f59a:	9912      	ldr	r1, [sp, #72]	; 0x48
 801f59c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801f59e:	fa1f f888 	uxth.w	r8, r8
 801f5a2:	1a12      	subs	r2, r2, r0
 801f5a4:	b292      	uxth	r2, r2
 801f5a6:	fb08 f101 	mul.w	r1, r8, r1
 801f5aa:	fb02 110e 	mla	r1, r2, lr, r1
 801f5ae:	fb00 1104 	mla	r1, r0, r4, r1
 801f5b2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801f5b4:	fb09 1104 	mla	r1, r9, r4, r1
 801f5b8:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801f5bc:	2900      	cmp	r1, #0
 801f5be:	f000 80f5 	beq.w	801f7ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801f5c2:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801f5c6:	d01b      	beq.n	801f600 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801f5c8:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801f5cc:	fb0e fa0a 	mul.w	sl, lr, sl
 801f5d0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801f5d4:	fb0e fe03 	mul.w	lr, lr, r3
 801f5d8:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801f5dc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801f5e0:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801f5e4:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801f5e8:	4453      	add	r3, sl
 801f5ea:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801f5ee:	0a1b      	lsrs	r3, r3, #8
 801f5f0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f5f4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801f5f8:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801f5fc:	ea43 030c 	orr.w	r3, r3, ip
 801f600:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801f602:	2cff      	cmp	r4, #255	; 0xff
 801f604:	d021      	beq.n	801f64a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 801f606:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801f608:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801f60c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801f60e:	fb04 fb0b 	mul.w	fp, r4, fp
 801f612:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801f614:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801f618:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801f61a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801f61e:	fb04 fa0a 	mul.w	sl, r4, sl
 801f622:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f626:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801f62a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801f62e:	44de      	add	lr, fp
 801f630:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801f634:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f638:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f63c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f640:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f644:	ea4e 040a 	orr.w	r4, lr, sl
 801f648:	940b      	str	r4, [sp, #44]	; 0x2c
 801f64a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801f64c:	2cff      	cmp	r4, #255	; 0xff
 801f64e:	d021      	beq.n	801f694 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 801f650:	9c08      	ldr	r4, [sp, #32]
 801f652:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801f656:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801f658:	fb04 fb0b 	mul.w	fp, r4, fp
 801f65c:	9c08      	ldr	r4, [sp, #32]
 801f65e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801f662:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801f664:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801f668:	fb04 fa0a 	mul.w	sl, r4, sl
 801f66c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f670:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801f674:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801f678:	44de      	add	lr, fp
 801f67a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801f67e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f682:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f686:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f68a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f68e:	ea4e 040a 	orr.w	r4, lr, sl
 801f692:	9408      	str	r4, [sp, #32]
 801f694:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801f696:	2cff      	cmp	r4, #255	; 0xff
 801f698:	d021      	beq.n	801f6de <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801f69a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801f69c:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801f6a0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801f6a2:	fb04 fb0b 	mul.w	fp, r4, fp
 801f6a6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801f6a8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801f6ac:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801f6ae:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801f6b2:	fb04 fa0a 	mul.w	sl, r4, sl
 801f6b6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f6ba:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801f6be:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801f6c2:	44de      	add	lr, fp
 801f6c4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801f6c8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f6cc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f6d0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f6d4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f6d8:	ea4e 040a 	orr.w	r4, lr, sl
 801f6dc:	940c      	str	r4, [sp, #48]	; 0x30
 801f6de:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801f6e0:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801f6e4:	9c08      	ldr	r4, [sp, #32]
 801f6e6:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801f6ea:	fb08 fc0c 	mul.w	ip, r8, ip
 801f6ee:	fb02 cc0e 	mla	ip, r2, lr, ip
 801f6f2:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801f6f6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801f6f8:	fb00 cc0e 	mla	ip, r0, lr, ip
 801f6fc:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801f700:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801f702:	fb09 cc0e 	mla	ip, r9, lr, ip
 801f706:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801f70a:	fb08 f80e 	mul.w	r8, r8, lr
 801f70e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801f712:	fb02 8303 	mla	r3, r2, r3, r8
 801f716:	9a08      	ldr	r2, [sp, #32]
 801f718:	f8b7 8000 	ldrh.w	r8, [r7]
 801f71c:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801f720:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801f722:	fb00 330a 	mla	r3, r0, sl, r3
 801f726:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 801f72a:	fb09 3900 	mla	r9, r9, r0, r3
 801f72e:	43c9      	mvns	r1, r1
 801f730:	ea4f 2228 	mov.w	r2, r8, asr #8
 801f734:	fa5f fe81 	uxtb.w	lr, r1
 801f738:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f73c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801f740:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801f744:	fb02 f20e 	mul.w	r2, r2, lr
 801f748:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f74c:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801f750:	ea4c 0c09 	orr.w	ip, ip, r9
 801f754:	1c53      	adds	r3, r2, #1
 801f756:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801f75a:	ea4f 00e8 	mov.w	r0, r8, asr #3
 801f75e:	ea4f 431c 	mov.w	r3, ip, lsr #16
 801f762:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f766:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801f76a:	4a63      	ldr	r2, [pc, #396]	; (801f8f8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 801f76c:	fb00 f00e 	mul.w	r0, r0, lr
 801f770:	b2db      	uxtb	r3, r3
 801f772:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 801f776:	1c43      	adds	r3, r0, #1
 801f778:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801f77c:	ea4f 231c 	mov.w	r3, ip, lsr #8
 801f780:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 801f784:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801f788:	b2c9      	uxtb	r1, r1
 801f78a:	00db      	lsls	r3, r3, #3
 801f78c:	fb01 f10e 	mul.w	r1, r1, lr
 801f790:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f794:	4313      	orrs	r3, r2
 801f796:	1c4a      	adds	r2, r1, #1
 801f798:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801f79c:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801f7a0:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801f7a4:	ea4c 0c03 	orr.w	ip, ip, r3
 801f7a8:	f8a7 c000 	strh.w	ip, [r7]
 801f7ac:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801f7ae:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801f7b0:	441a      	add	r2, r3
 801f7b2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f7b4:	9225      	str	r2, [sp, #148]	; 0x94
 801f7b6:	441d      	add	r5, r3
 801f7b8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801f7ba:	3b01      	subs	r3, #1
 801f7bc:	3702      	adds	r7, #2
 801f7be:	9317      	str	r3, [sp, #92]	; 0x5c
 801f7c0:	e699      	b.n	801f4f6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801f7c2:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801f7c4:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801f7c6:	441c      	add	r4, r3
 801f7c8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f7ca:	9425      	str	r4, [sp, #148]	; 0x94
 801f7cc:	441d      	add	r5, r3
 801f7ce:	9b07      	ldr	r3, [sp, #28]
 801f7d0:	3b01      	subs	r3, #1
 801f7d2:	9307      	str	r3, [sp, #28]
 801f7d4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f7d6:	3302      	adds	r3, #2
 801f7d8:	930a      	str	r3, [sp, #40]	; 0x28
 801f7da:	e66b      	b.n	801f4b4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801f7dc:	d024      	beq.n	801f828 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 801f7de:	9b07      	ldr	r3, [sp, #28]
 801f7e0:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801f7e2:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801f7e4:	3b01      	subs	r3, #1
 801f7e6:	fb00 4003 	mla	r0, r0, r3, r4
 801f7ea:	1400      	asrs	r0, r0, #16
 801f7ec:	f53f ae80 	bmi.w	801f4f0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801f7f0:	3901      	subs	r1, #1
 801f7f2:	4288      	cmp	r0, r1
 801f7f4:	f6bf ae7c 	bge.w	801f4f0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801f7f8:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801f7fa:	fb01 5303 	mla	r3, r1, r3, r5
 801f7fe:	141b      	asrs	r3, r3, #16
 801f800:	f53f ae76 	bmi.w	801f4f0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801f804:	3a01      	subs	r2, #1
 801f806:	4293      	cmp	r3, r2
 801f808:	f6bf ae72 	bge.w	801f4f0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801f80c:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801f810:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801f814:	f1bb 0f00 	cmp.w	fp, #0
 801f818:	dc70      	bgt.n	801f8fc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801f81a:	9b07      	ldr	r3, [sp, #28]
 801f81c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801f820:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f822:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801f826:	930a      	str	r3, [sp, #40]	; 0x28
 801f828:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801f82a:	2b00      	cmp	r3, #0
 801f82c:	f340 81ae 	ble.w	801fb8c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801f830:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f834:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801f838:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f83c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f83e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f842:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f846:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f84a:	eef0 6a62 	vmov.f32	s13, s5
 801f84e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f852:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f856:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f85a:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 801f85e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f862:	eef0 6a43 	vmov.f32	s13, s6
 801f866:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f86a:	ee12 2a90 	vmov	r2, s5
 801f86e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f872:	fb92 f3f3 	sdiv	r3, r2, r3
 801f876:	ee13 2a10 	vmov	r2, s6
 801f87a:	9327      	str	r3, [sp, #156]	; 0x9c
 801f87c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f87e:	fb92 f3f3 	sdiv	r3, r2, r3
 801f882:	9328      	str	r3, [sp, #160]	; 0xa0
 801f884:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801f886:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801f888:	3b01      	subs	r3, #1
 801f88a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f88e:	9316      	str	r3, [sp, #88]	; 0x58
 801f890:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f892:	bf08      	it	eq
 801f894:	4613      	moveq	r3, r2
 801f896:	ee16 5a90 	vmov	r5, s13
 801f89a:	9307      	str	r3, [sp, #28]
 801f89c:	eeb0 3a67 	vmov.f32	s6, s15
 801f8a0:	eef0 2a47 	vmov.f32	s5, s14
 801f8a4:	e5f8      	b.n	801f498 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801f8a6:	2800      	cmp	r0, #0
 801f8a8:	f43f ae6b 	beq.w	801f582 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801f8ac:	f818 1001 	ldrb.w	r1, [r8, r1]
 801f8b0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801f8b4:	9108      	str	r1, [sp, #32]
 801f8b6:	0e09      	lsrs	r1, r1, #24
 801f8b8:	9110      	str	r1, [sp, #64]	; 0x40
 801f8ba:	e662      	b.n	801f582 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801f8bc:	f113 0801 	adds.w	r8, r3, #1
 801f8c0:	f53f af74 	bmi.w	801f7ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801f8c4:	4541      	cmp	r1, r8
 801f8c6:	f6ff af71 	blt.w	801f7ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801f8ca:	f11c 0801 	adds.w	r8, ip, #1
 801f8ce:	f53f af6d 	bmi.w	801f7ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801f8d2:	45c6      	cmp	lr, r8
 801f8d4:	f6ff af6a 	blt.w	801f7ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801f8d8:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 801f8dc:	b209      	sxth	r1, r1
 801f8de:	fa0f f38e 	sxth.w	r3, lr
 801f8e2:	e9cd 2004 	strd	r2, r0, [sp, #16]
 801f8e6:	9301      	str	r3, [sp, #4]
 801f8e8:	9100      	str	r1, [sp, #0]
 801f8ea:	4633      	mov	r3, r6
 801f8ec:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801f8ee:	9819      	ldr	r0, [sp, #100]	; 0x64
 801f8f0:	4639      	mov	r1, r7
 801f8f2:	f7ff fc7a 	bl	801f1ea <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 801f8f6:	e759      	b.n	801f7ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801f8f8:	fffff800 	.word	0xfffff800
 801f8fc:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801f8fe:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801f900:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801f904:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801f906:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f90a:	1427      	asrs	r7, r4, #16
 801f90c:	142b      	asrs	r3, r5, #16
 801f90e:	fb01 7303 	mla	r3, r1, r3, r7
 801f912:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801f914:	18e7      	adds	r7, r4, r3
 801f916:	5ce3      	ldrb	r3, [r4, r3]
 801f918:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801f91c:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801f920:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801f924:	2a00      	cmp	r2, #0
 801f926:	f000 8127 	beq.w	801fb78 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801f92a:	f897 e001 	ldrb.w	lr, [r7, #1]
 801f92e:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801f932:	940d      	str	r4, [sp, #52]	; 0x34
 801f934:	0e24      	lsrs	r4, r4, #24
 801f936:	9414      	str	r4, [sp, #80]	; 0x50
 801f938:	b170      	cbz	r0, 801f958 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801f93a:	eb07 0e01 	add.w	lr, r7, r1
 801f93e:	5c79      	ldrb	r1, [r7, r1]
 801f940:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801f944:	9109      	str	r1, [sp, #36]	; 0x24
 801f946:	0e09      	lsrs	r1, r1, #24
 801f948:	9111      	str	r1, [sp, #68]	; 0x44
 801f94a:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801f94e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801f952:	910e      	str	r1, [sp, #56]	; 0x38
 801f954:	0e09      	lsrs	r1, r1, #24
 801f956:	9115      	str	r1, [sp, #84]	; 0x54
 801f958:	b292      	uxth	r2, r2
 801f95a:	b280      	uxth	r0, r0
 801f95c:	fb02 f800 	mul.w	r8, r2, r0
 801f960:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801f964:	0112      	lsls	r2, r2, #4
 801f966:	eba2 0e08 	sub.w	lr, r2, r8
 801f96a:	b280      	uxth	r0, r0
 801f96c:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801f970:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801f972:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801f974:	fa1f fe8e 	uxth.w	lr, lr
 801f978:	1a09      	subs	r1, r1, r0
 801f97a:	b289      	uxth	r1, r1
 801f97c:	fb0e f202 	mul.w	r2, lr, r2
 801f980:	fb01 220c 	mla	r2, r1, ip, r2
 801f984:	fb00 2204 	mla	r2, r0, r4, r2
 801f988:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801f98a:	fb08 2204 	mla	r2, r8, r4, r2
 801f98e:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801f992:	2a00      	cmp	r2, #0
 801f994:	f000 80e5 	beq.w	801fb62 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 801f998:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801f99c:	d019      	beq.n	801f9d2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 801f99e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801f9a2:	fb0c fa0a 	mul.w	sl, ip, sl
 801f9a6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801f9aa:	fb0c fc03 	mul.w	ip, ip, r3
 801f9ae:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801f9b2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801f9b6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801f9ba:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801f9be:	4453      	add	r3, sl
 801f9c0:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801f9c4:	0a1b      	lsrs	r3, r3, #8
 801f9c6:	0a3f      	lsrs	r7, r7, #8
 801f9c8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801f9cc:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801f9d0:	433b      	orrs	r3, r7
 801f9d2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801f9d4:	2cff      	cmp	r4, #255	; 0xff
 801f9d6:	d020      	beq.n	801fa1a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 801f9d8:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801f9da:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801f9de:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801f9e0:	4367      	muls	r7, r4
 801f9e2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801f9e4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801f9e8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801f9ea:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f9ee:	fb04 fa0a 	mul.w	sl, r4, sl
 801f9f2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801f9f6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f9fa:	44bc      	add	ip, r7
 801f9fc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801fa00:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801fa04:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fa08:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801fa0c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801fa10:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801fa14:	ea4c 040a 	orr.w	r4, ip, sl
 801fa18:	940d      	str	r4, [sp, #52]	; 0x34
 801fa1a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801fa1c:	2cff      	cmp	r4, #255	; 0xff
 801fa1e:	d020      	beq.n	801fa62 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 801fa20:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801fa22:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801fa26:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801fa28:	4367      	muls	r7, r4
 801fa2a:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801fa2c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801fa30:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801fa32:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801fa36:	fb04 fa0a 	mul.w	sl, r4, sl
 801fa3a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801fa3e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801fa42:	44bc      	add	ip, r7
 801fa44:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801fa48:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801fa4c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fa50:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801fa54:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801fa58:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801fa5c:	ea4c 040a 	orr.w	r4, ip, sl
 801fa60:	9409      	str	r4, [sp, #36]	; 0x24
 801fa62:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801fa64:	2cff      	cmp	r4, #255	; 0xff
 801fa66:	d020      	beq.n	801faaa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 801fa68:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801fa6a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801fa6e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801fa70:	4367      	muls	r7, r4
 801fa72:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801fa74:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801fa78:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801fa7a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801fa7e:	fb04 fa0a 	mul.w	sl, r4, sl
 801fa82:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801fa86:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801fa8a:	44bc      	add	ip, r7
 801fa8c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801fa90:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801fa94:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fa98:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801fa9c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801faa0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801faa4:	ea4c 040a 	orr.w	r4, ip, sl
 801faa8:	940e      	str	r4, [sp, #56]	; 0x38
 801faaa:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801faac:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801fab0:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801fab2:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801fab6:	fb0e f707 	mul.w	r7, lr, r7
 801faba:	fb01 770c 	mla	r7, r1, ip, r7
 801fabe:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801fac2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801fac4:	fb00 770c 	mla	r7, r0, ip, r7
 801fac8:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801facc:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801face:	fb08 770c 	mla	r7, r8, ip, r7
 801fad2:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801fad6:	fb0e fe0c 	mul.w	lr, lr, ip
 801fada:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801fade:	fb01 e303 	mla	r3, r1, r3, lr
 801fae2:	9909      	ldr	r1, [sp, #36]	; 0x24
 801fae4:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801fae8:	990e      	ldr	r1, [sp, #56]	; 0x38
 801faea:	fb00 330a 	mla	r3, r0, sl, r3
 801faee:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801faf2:	fb08 3c0c 	mla	ip, r8, ip, r3
 801faf6:	f8b9 3000 	ldrh.w	r3, [r9]
 801fafa:	43d2      	mvns	r2, r2
 801fafc:	1218      	asrs	r0, r3, #8
 801fafe:	b2d2      	uxtb	r2, r2
 801fb00:	10d9      	asrs	r1, r3, #3
 801fb02:	0a3f      	lsrs	r7, r7, #8
 801fb04:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fb08:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801fb0c:	00db      	lsls	r3, r3, #3
 801fb0e:	4350      	muls	r0, r2
 801fb10:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801fb14:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801fb18:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801fb1c:	b2db      	uxtb	r3, r3
 801fb1e:	ea47 070c 	orr.w	r7, r7, ip
 801fb22:	4351      	muls	r1, r2
 801fb24:	4353      	muls	r3, r2
 801fb26:	1c42      	adds	r2, r0, #1
 801fb28:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801fb2c:	0c3a      	lsrs	r2, r7, #16
 801fb2e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801fb32:	4a18      	ldr	r2, [pc, #96]	; (801fb94 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 801fb34:	b2c0      	uxtb	r0, r0
 801fb36:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 801fb3a:	1c4a      	adds	r2, r1, #1
 801fb3c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801fb40:	0a3a      	lsrs	r2, r7, #8
 801fb42:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801fb46:	00c9      	lsls	r1, r1, #3
 801fb48:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801fb4c:	4301      	orrs	r1, r0
 801fb4e:	1c58      	adds	r0, r3, #1
 801fb50:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801fb54:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801fb58:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 801fb5c:	4308      	orrs	r0, r1
 801fb5e:	f8a9 0000 	strh.w	r0, [r9]
 801fb62:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801fb64:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801fb66:	441a      	add	r2, r3
 801fb68:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801fb6a:	9225      	str	r2, [sp, #148]	; 0x94
 801fb6c:	f109 0902 	add.w	r9, r9, #2
 801fb70:	441d      	add	r5, r3
 801fb72:	f10b 3bff 	add.w	fp, fp, #4294967295
 801fb76:	e64d      	b.n	801f814 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 801fb78:	2800      	cmp	r0, #0
 801fb7a:	f43f aeed 	beq.w	801f958 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801fb7e:	5c79      	ldrb	r1, [r7, r1]
 801fb80:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801fb84:	9109      	str	r1, [sp, #36]	; 0x24
 801fb86:	0e09      	lsrs	r1, r1, #24
 801fb88:	9111      	str	r1, [sp, #68]	; 0x44
 801fb8a:	e6e5      	b.n	801f958 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801fb8c:	b01b      	add	sp, #108	; 0x6c
 801fb8e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fb92:	bf00      	nop
 801fb94:	fffff800 	.word	0xfffff800

0801fb98 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 801fb98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fb9c:	b085      	sub	sp, #20
 801fb9e:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 801fba2:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801fba6:	9103      	str	r1, [sp, #12]
 801fba8:	fb00 7406 	mla	r4, r0, r6, r7
 801fbac:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 801fbb0:	2800      	cmp	r0, #0
 801fbb2:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 801fbb6:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 801fbba:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801fbbe:	9501      	str	r5, [sp, #4]
 801fbc0:	eb03 0904 	add.w	r9, r3, r4
 801fbc4:	f2c0 8150 	blt.w	801fe68 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801fbc8:	4583      	cmp	fp, r0
 801fbca:	f340 814d 	ble.w	801fe68 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801fbce:	2f00      	cmp	r7, #0
 801fbd0:	f2c0 8146 	blt.w	801fe60 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801fbd4:	42be      	cmp	r6, r7
 801fbd6:	f340 8143 	ble.w	801fe60 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801fbda:	f813 c004 	ldrb.w	ip, [r3, r4]
 801fbde:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 801fbe2:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801fbe6:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 801fbea:	4355      	muls	r5, r2
 801fbec:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801fbf0:	f64f 041f 	movw	r4, #63519	; 0xf81f
 801fbf4:	fb0c f203 	mul.w	r2, ip, r3
 801fbf8:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801fbfc:	f605 0501 	addw	r5, r5, #2049	; 0x801
 801fc00:	441d      	add	r5, r3
 801fc02:	f102 0320 	add.w	r3, r2, #32
 801fc06:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801fc0a:	0a1b      	lsrs	r3, r3, #8
 801fc0c:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801fc10:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801fc14:	431c      	orrs	r4, r3
 801fc16:	1c7b      	adds	r3, r7, #1
 801fc18:	f100 812b 	bmi.w	801fe72 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801fc1c:	429e      	cmp	r6, r3
 801fc1e:	f340 8128 	ble.w	801fe72 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801fc22:	2900      	cmp	r1, #0
 801fc24:	f000 8128 	beq.w	801fe78 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 801fc28:	9a01      	ldr	r2, [sp, #4]
 801fc2a:	f899 3001 	ldrb.w	r3, [r9, #1]
 801fc2e:	8855      	ldrh	r5, [r2, #2]
 801fc30:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801fc34:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 801fc38:	fb08 f802 	mul.w	r8, r8, r2
 801fc3c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801fc40:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801fc44:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801fc48:	435d      	muls	r5, r3
 801fc4a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801fc4e:	44d0      	add	r8, sl
 801fc50:	f105 0a20 	add.w	sl, r5, #32
 801fc54:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801fc58:	0a2d      	lsrs	r5, r5, #8
 801fc5a:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801fc5e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801fc62:	432a      	orrs	r2, r5
 801fc64:	3001      	adds	r0, #1
 801fc66:	f100 810d 	bmi.w	801fe84 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801fc6a:	4583      	cmp	fp, r0
 801fc6c:	f340 810a 	ble.w	801fe84 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801fc70:	f1be 0f00 	cmp.w	lr, #0
 801fc74:	f000 810b 	beq.w	801fe8e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 801fc78:	2f00      	cmp	r7, #0
 801fc7a:	f2c0 8100 	blt.w	801fe7e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801fc7e:	42be      	cmp	r6, r7
 801fc80:	f340 80fd 	ble.w	801fe7e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801fc84:	9801      	ldr	r0, [sp, #4]
 801fc86:	f819 5006 	ldrb.w	r5, [r9, r6]
 801fc8a:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801fc8e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801fc92:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 801fc96:	fb0a fa00 	mul.w	sl, sl, r0
 801fc9a:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801fc9e:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801fca2:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801fca6:	fb05 f808 	mul.w	r8, r5, r8
 801fcaa:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801fcae:	4482      	add	sl, r0
 801fcb0:	f108 0020 	add.w	r0, r8, #32
 801fcb4:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801fcb8:	0a00      	lsrs	r0, r0, #8
 801fcba:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801fcbe:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801fcc2:	ea4b 0b00 	orr.w	fp, fp, r0
 801fcc6:	3701      	adds	r7, #1
 801fcc8:	f100 80e6 	bmi.w	801fe98 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801fccc:	42be      	cmp	r6, r7
 801fcce:	f340 80e3 	ble.w	801fe98 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801fcd2:	2900      	cmp	r1, #0
 801fcd4:	f000 80e3 	beq.w	801fe9e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 801fcd8:	3601      	adds	r6, #1
 801fcda:	9801      	ldr	r0, [sp, #4]
 801fcdc:	f819 7006 	ldrb.w	r7, [r9, r6]
 801fce0:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801fce4:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801fce8:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 801fcec:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801fcf0:	fb09 f906 	mul.w	r9, r9, r6
 801fcf4:	fb07 f800 	mul.w	r8, r7, r0
 801fcf8:	f64f 001f 	movw	r0, #63519	; 0xf81f
 801fcfc:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801fd00:	f609 0901 	addw	r9, r9, #2049	; 0x801
 801fd04:	44d1      	add	r9, sl
 801fd06:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801fd0a:	f108 0020 	add.w	r0, r8, #32
 801fd0e:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801fd12:	0a00      	lsrs	r0, r0, #8
 801fd14:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801fd18:	4330      	orrs	r0, r6
 801fd1a:	b28e      	uxth	r6, r1
 801fd1c:	fa1f f98e 	uxth.w	r9, lr
 801fd20:	fb06 f809 	mul.w	r8, r6, r9
 801fd24:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801fd28:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801fd2c:	0136      	lsls	r6, r6, #4
 801fd2e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801fd32:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801fd36:	9601      	str	r6, [sp, #4]
 801fd38:	ea4a 0404 	orr.w	r4, sl, r4
 801fd3c:	fa1f f689 	uxth.w	r6, r9
 801fd40:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801fd44:	fb11 f90e 	smulbb	r9, r1, lr
 801fd48:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801fd4c:	9602      	str	r6, [sp, #8]
 801fd4e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801fd52:	4626      	mov	r6, r4
 801fd54:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801fd58:	f1ce 0410 	rsb	r4, lr, #16
 801fd5c:	1a64      	subs	r4, r4, r1
 801fd5e:	ea4a 0202 	orr.w	r2, sl, r2
 801fd62:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801fd66:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801fd6a:	434a      	muls	r2, r1
 801fd6c:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801fd70:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801fd74:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801fd78:	fb04 2406 	mla	r4, r4, r6, r2
 801fd7c:	ea4a 0000 	orr.w	r0, sl, r0
 801fd80:	fb09 4200 	mla	r2, r9, r0, r4
 801fd84:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801fd88:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801fd8c:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801fd90:	ea44 0b0b 	orr.w	fp, r4, fp
 801fd94:	9c01      	ldr	r4, [sp, #4]
 801fd96:	9e02      	ldr	r6, [sp, #8]
 801fd98:	9903      	ldr	r1, [sp, #12]
 801fd9a:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 801fd9e:	1ba4      	subs	r4, r4, r6
 801fda0:	9e01      	ldr	r6, [sp, #4]
 801fda2:	8808      	ldrh	r0, [r1, #0]
 801fda4:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 801fda8:	eba6 0608 	sub.w	r6, r6, r8
 801fdac:	b2b6      	uxth	r6, r6
 801fdae:	b2a4      	uxth	r4, r4
 801fdb0:	4373      	muls	r3, r6
 801fdb2:	fb0c 3304 	mla	r3, ip, r4, r3
 801fdb6:	9c02      	ldr	r4, [sp, #8]
 801fdb8:	fb04 3505 	mla	r5, r4, r5, r3
 801fdbc:	fb08 5707 	mla	r7, r8, r7, r5
 801fdc0:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801fdc4:	b289      	uxth	r1, r1
 801fdc6:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801fdca:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801fdce:	434f      	muls	r7, r1
 801fdd0:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801fdd4:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801fdd8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801fddc:	1c7b      	adds	r3, r7, #1
 801fdde:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801fde2:	ea42 0e0e 	orr.w	lr, r2, lr
 801fde6:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801fdea:	fa1f f28e 	uxth.w	r2, lr
 801fdee:	1203      	asrs	r3, r0, #8
 801fdf0:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 801fdf4:	b2ff      	uxtb	r7, r7
 801fdf6:	1215      	asrs	r5, r2, #8
 801fdf8:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801fdfc:	fb13 f307 	smulbb	r3, r3, r7
 801fe00:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801fe04:	fb05 3501 	mla	r5, r5, r1, r3
 801fe08:	10c3      	asrs	r3, r0, #3
 801fe0a:	10d4      	asrs	r4, r2, #3
 801fe0c:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801fe10:	fb13 f307 	smulbb	r3, r3, r7
 801fe14:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801fe18:	fb04 3401 	mla	r4, r4, r1, r3
 801fe1c:	00c3      	lsls	r3, r0, #3
 801fe1e:	00d2      	lsls	r2, r2, #3
 801fe20:	b2db      	uxtb	r3, r3
 801fe22:	fb13 f307 	smulbb	r3, r3, r7
 801fe26:	b2d2      	uxtb	r2, r2
 801fe28:	fb02 3101 	mla	r1, r2, r1, r3
 801fe2c:	b2ad      	uxth	r5, r5
 801fe2e:	b289      	uxth	r1, r1
 801fe30:	b2a4      	uxth	r4, r4
 801fe32:	1c6b      	adds	r3, r5, #1
 801fe34:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801fe38:	1c62      	adds	r2, r4, #1
 801fe3a:	1c4b      	adds	r3, r1, #1
 801fe3c:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801fe40:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801fe44:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801fe48:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801fe4c:	0964      	lsrs	r4, r4, #5
 801fe4e:	432b      	orrs	r3, r5
 801fe50:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801fe54:	9a03      	ldr	r2, [sp, #12]
 801fe56:	4323      	orrs	r3, r4
 801fe58:	8013      	strh	r3, [r2, #0]
 801fe5a:	b005      	add	sp, #20
 801fe5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fe60:	f04f 0c00 	mov.w	ip, #0
 801fe64:	4664      	mov	r4, ip
 801fe66:	e6d6      	b.n	801fc16 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 801fe68:	2300      	movs	r3, #0
 801fe6a:	469c      	mov	ip, r3
 801fe6c:	461a      	mov	r2, r3
 801fe6e:	461c      	mov	r4, r3
 801fe70:	e6f8      	b.n	801fc64 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801fe72:	2300      	movs	r3, #0
 801fe74:	461a      	mov	r2, r3
 801fe76:	e6f5      	b.n	801fc64 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801fe78:	460b      	mov	r3, r1
 801fe7a:	460a      	mov	r2, r1
 801fe7c:	e6f2      	b.n	801fc64 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801fe7e:	2500      	movs	r5, #0
 801fe80:	46ab      	mov	fp, r5
 801fe82:	e720      	b.n	801fcc6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 801fe84:	2700      	movs	r7, #0
 801fe86:	463d      	mov	r5, r7
 801fe88:	4638      	mov	r0, r7
 801fe8a:	46bb      	mov	fp, r7
 801fe8c:	e745      	b.n	801fd1a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801fe8e:	4677      	mov	r7, lr
 801fe90:	4675      	mov	r5, lr
 801fe92:	4670      	mov	r0, lr
 801fe94:	46f3      	mov	fp, lr
 801fe96:	e740      	b.n	801fd1a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801fe98:	2700      	movs	r7, #0
 801fe9a:	4638      	mov	r0, r7
 801fe9c:	e73d      	b.n	801fd1a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801fe9e:	460f      	mov	r7, r1
 801fea0:	4608      	mov	r0, r1
 801fea2:	e73a      	b.n	801fd1a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

0801fea4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801fea4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fea8:	b097      	sub	sp, #92	; 0x5c
 801feaa:	9214      	str	r2, [sp, #80]	; 0x50
 801feac:	9308      	str	r3, [sp, #32]
 801feae:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801feb0:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801feb4:	9312      	str	r3, [sp, #72]	; 0x48
 801feb6:	9111      	str	r1, [sp, #68]	; 0x44
 801feb8:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 801febc:	9015      	str	r0, [sp, #84]	; 0x54
 801febe:	6850      	ldr	r0, [r2, #4]
 801fec0:	6812      	ldr	r2, [r2, #0]
 801fec2:	fb00 1303 	mla	r3, r0, r3, r1
 801fec6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801feca:	9309      	str	r3, [sp, #36]	; 0x24
 801fecc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801fece:	681b      	ldr	r3, [r3, #0]
 801fed0:	930b      	str	r3, [sp, #44]	; 0x2c
 801fed2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801fed4:	685b      	ldr	r3, [r3, #4]
 801fed6:	930c      	str	r3, [sp, #48]	; 0x30
 801fed8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801fedc:	930a      	str	r3, [sp, #40]	; 0x28
 801fede:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801fee0:	2b00      	cmp	r3, #0
 801fee2:	dc03      	bgt.n	801feec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801fee4:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801fee6:	2b00      	cmp	r3, #0
 801fee8:	f340 83cb 	ble.w	8020682 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801feec:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801feee:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801fef2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801fef6:	1e48      	subs	r0, r1, #1
 801fef8:	1e55      	subs	r5, r2, #1
 801fefa:	9b08      	ldr	r3, [sp, #32]
 801fefc:	2b00      	cmp	r3, #0
 801fefe:	f340 81a3 	ble.w	8020248 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 801ff02:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801ff04:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801ff06:	1436      	asrs	r6, r6, #16
 801ff08:	ea4f 4323 	mov.w	r3, r3, asr #16
 801ff0c:	d406      	bmi.n	801ff1c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801ff0e:	4286      	cmp	r6, r0
 801ff10:	da04      	bge.n	801ff1c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801ff12:	2b00      	cmp	r3, #0
 801ff14:	db02      	blt.n	801ff1c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801ff16:	42ab      	cmp	r3, r5
 801ff18:	f2c0 8197 	blt.w	802024a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801ff1c:	3601      	adds	r6, #1
 801ff1e:	f100 8184 	bmi.w	802022a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801ff22:	42b1      	cmp	r1, r6
 801ff24:	f2c0 8181 	blt.w	802022a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801ff28:	3301      	adds	r3, #1
 801ff2a:	f100 817e 	bmi.w	802022a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801ff2e:	429a      	cmp	r2, r3
 801ff30:	f2c0 817b 	blt.w	802022a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801ff34:	9b08      	ldr	r3, [sp, #32]
 801ff36:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801ff38:	9313      	str	r3, [sp, #76]	; 0x4c
 801ff3a:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801ff3e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801ff40:	2b00      	cmp	r3, #0
 801ff42:	f340 81a4 	ble.w	802028e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801ff46:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801ff48:	9d21      	ldr	r5, [sp, #132]	; 0x84
 801ff4a:	1418      	asrs	r0, r3, #16
 801ff4c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801ff4e:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801ff52:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801ff54:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801ff58:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ff5a:	142d      	asrs	r5, r5, #16
 801ff5c:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801ff60:	f100 81f8 	bmi.w	8020354 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801ff64:	f102 3eff 	add.w	lr, r2, #4294967295
 801ff68:	4575      	cmp	r5, lr
 801ff6a:	f280 81f3 	bge.w	8020354 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801ff6e:	2800      	cmp	r0, #0
 801ff70:	f2c0 81f0 	blt.w	8020354 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801ff74:	f103 3eff 	add.w	lr, r3, #4294967295
 801ff78:	4570      	cmp	r0, lr
 801ff7a:	f280 81eb 	bge.w	8020354 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801ff7e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801ff80:	b212      	sxth	r2, r2
 801ff82:	fb00 5002 	mla	r0, r0, r2, r5
 801ff86:	fa1f fe81 	uxth.w	lr, r1
 801ff8a:	eb03 0a00 	add.w	sl, r3, r0
 801ff8e:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801ff92:	f813 9000 	ldrb.w	r9, [r3, r0]
 801ff96:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801ff9a:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 801ff9e:	b29b      	uxth	r3, r3
 801ffa0:	f1bc 0f00 	cmp.w	ip, #0
 801ffa4:	f000 81b9 	beq.w	802031a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 801ffa8:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801ffac:	940d      	str	r4, [sp, #52]	; 0x34
 801ffae:	eb0a 0b02 	add.w	fp, sl, r2
 801ffb2:	fa1f fa8c 	uxth.w	sl, ip
 801ffb6:	fb0a fe0e 	mul.w	lr, sl, lr
 801ffba:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801ffbe:	fa1f fa8a 	uxth.w	sl, sl
 801ffc2:	eba5 050e 	sub.w	r5, r5, lr
 801ffc6:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801ffca:	940e      	str	r4, [sp, #56]	; 0x38
 801ffcc:	eba3 030a 	sub.w	r3, r3, sl
 801ffd0:	b2ad      	uxth	r5, r5
 801ffd2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801ffd4:	b29b      	uxth	r3, r3
 801ffd6:	fb08 f505 	mul.w	r5, r8, r5
 801ffda:	fb09 5303 	mla	r3, r9, r3, r5
 801ffde:	fb0a 3304 	mla	r3, sl, r4, r3
 801ffe2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801ffe4:	fb0e 3304 	mla	r3, lr, r4, r3
 801ffe8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801ffec:	2b00      	cmp	r3, #0
 801ffee:	f000 810f 	beq.w	8020210 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801fff2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801fff4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801fff8:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801fffc:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8020000:	f000 8190 	beq.w	8020324 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 8020004:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8020008:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 802000c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8020010:	fb09 f000 	mul.w	r0, r9, r0
 8020014:	fb0a fe0e 	mul.w	lr, sl, lr
 8020018:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 802001c:	f100 0b20 	add.w	fp, r0, #32
 8020020:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8020024:	44ce      	add	lr, r9
 8020026:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 802002a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802002e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8020032:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8020036:	ea4e 0909 	orr.w	r9, lr, r9
 802003a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 802003e:	8868      	ldrh	r0, [r5, #2]
 8020040:	d019      	beq.n	8020076 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8020042:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8020046:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 802004a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802004e:	fb08 f800 	mul.w	r8, r8, r0
 8020052:	fb0a fe0e 	mul.w	lr, sl, lr
 8020056:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 802005a:	f108 0b20 	add.w	fp, r8, #32
 802005e:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8020062:	4486      	add	lr, r0
 8020064:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8020068:	0a00      	lsrs	r0, r0, #8
 802006a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 802006e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8020072:	ea4e 0000 	orr.w	r0, lr, r0
 8020076:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 802007a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802007e:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8020082:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8020086:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802008a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802008e:	ea4e 0909 	orr.w	r9, lr, r9
 8020092:	ea4a 0000 	orr.w	r0, sl, r0
 8020096:	f1bc 0f00 	cmp.w	ip, #0
 802009a:	f000 8145 	beq.w	8020328 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 802009e:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 80200a2:	3a01      	subs	r2, #1
 80200a4:	0052      	lsls	r2, r2, #1
 80200a6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80200a8:	3202      	adds	r2, #2
 80200aa:	2cff      	cmp	r4, #255	; 0xff
 80200ac:	eb05 0e02 	add.w	lr, r5, r2
 80200b0:	5aaa      	ldrh	r2, [r5, r2]
 80200b2:	d018      	beq.n	80200e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 80200b4:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 80200b8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80200bc:	fb04 fa02 	mul.w	sl, r4, r2
 80200c0:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80200c4:	fb08 f805 	mul.w	r8, r8, r5
 80200c8:	f10a 0520 	add.w	r5, sl, #32
 80200cc:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 80200d0:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 80200d4:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80200d8:	4442      	add	r2, r8
 80200da:	0a2d      	lsrs	r5, r5, #8
 80200dc:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 80200e0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80200e4:	432a      	orrs	r2, r5
 80200e6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80200e8:	f8be 5002 	ldrh.w	r5, [lr, #2]
 80200ec:	2cff      	cmp	r4, #255	; 0xff
 80200ee:	d01a      	beq.n	8020126 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 80200f0:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 80200f4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80200f8:	fb04 fa05 	mul.w	sl, r4, r5
 80200fc:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8020100:	fb08 f80e 	mul.w	r8, r8, lr
 8020104:	f10a 0e20 	add.w	lr, sl, #32
 8020108:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 802010c:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8020110:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8020114:	4445      	add	r5, r8
 8020116:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802011a:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 802011e:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8020122:	ea45 050e 	orr.w	r5, r5, lr
 8020126:	fb1c fe01 	smulbb	lr, ip, r1
 802012a:	ea4f 0eee 	mov.w	lr, lr, asr #3
 802012e:	f1cc 0810 	rsb	r8, ip, #16
 8020132:	eba8 0801 	sub.w	r8, r8, r1
 8020136:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 802013a:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 802013e:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8020142:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8020146:	4341      	muls	r1, r0
 8020148:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802014c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8020150:	ea4a 0202 	orr.w	r2, sl, r2
 8020154:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8020158:	fb09 1108 	mla	r1, r9, r8, r1
 802015c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8020160:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8020164:	fb0c 1102 	mla	r1, ip, r2, r1
 8020168:	ea4b 0505 	orr.w	r5, fp, r5
 802016c:	fb0e 1e05 	mla	lr, lr, r5, r1
 8020170:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8020174:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8020178:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802017c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8020180:	ea42 0e0e 	orr.w	lr, r2, lr
 8020184:	fa1f f28e 	uxth.w	r2, lr
 8020188:	2bff      	cmp	r3, #255	; 0xff
 802018a:	d103      	bne.n	8020194 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 802018c:	9912      	ldr	r1, [sp, #72]	; 0x48
 802018e:	29ff      	cmp	r1, #255	; 0xff
 8020190:	f000 80de 	beq.w	8020350 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 8020194:	990a      	ldr	r1, [sp, #40]	; 0x28
 8020196:	8838      	ldrh	r0, [r7, #0]
 8020198:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 802019a:	434b      	muls	r3, r1
 802019c:	f103 0c01 	add.w	ip, r3, #1
 80201a0:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 80201a4:	ea6f 2323 	mvn.w	r3, r3, asr #8
 80201a8:	fa5f fc83 	uxtb.w	ip, r3
 80201ac:	1203      	asrs	r3, r0, #8
 80201ae:	1215      	asrs	r5, r2, #8
 80201b0:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80201b4:	fb13 f30c 	smulbb	r3, r3, ip
 80201b8:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80201bc:	fb05 3501 	mla	r5, r5, r1, r3
 80201c0:	10c3      	asrs	r3, r0, #3
 80201c2:	10d1      	asrs	r1, r2, #3
 80201c4:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80201c8:	fb13 f30c 	smulbb	r3, r3, ip
 80201cc:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80201d0:	fb01 3104 	mla	r1, r1, r4, r3
 80201d4:	00c3      	lsls	r3, r0, #3
 80201d6:	00d2      	lsls	r2, r2, #3
 80201d8:	b2db      	uxtb	r3, r3
 80201da:	b2d2      	uxtb	r2, r2
 80201dc:	fb13 f30c 	smulbb	r3, r3, ip
 80201e0:	b2ad      	uxth	r5, r5
 80201e2:	fb02 3304 	mla	r3, r2, r4, r3
 80201e6:	b29a      	uxth	r2, r3
 80201e8:	1c6b      	adds	r3, r5, #1
 80201ea:	b289      	uxth	r1, r1
 80201ec:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80201f0:	1c53      	adds	r3, r2, #1
 80201f2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80201f6:	1c4a      	adds	r2, r1, #1
 80201f8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80201fc:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8020200:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8020204:	0949      	lsrs	r1, r1, #5
 8020206:	432b      	orrs	r3, r5
 8020208:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802020c:	430b      	orrs	r3, r1
 802020e:	803b      	strh	r3, [r7, #0]
 8020210:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8020212:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8020214:	4413      	add	r3, r2
 8020216:	9321      	str	r3, [sp, #132]	; 0x84
 8020218:	9a22      	ldr	r2, [sp, #136]	; 0x88
 802021a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802021c:	441a      	add	r2, r3
 802021e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8020220:	9222      	str	r2, [sp, #136]	; 0x88
 8020222:	3b01      	subs	r3, #1
 8020224:	3702      	adds	r7, #2
 8020226:	9313      	str	r3, [sp, #76]	; 0x4c
 8020228:	e689      	b.n	801ff3e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 802022a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802022c:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 802022e:	9c22      	ldr	r4, [sp, #136]	; 0x88
 8020230:	4433      	add	r3, r6
 8020232:	9321      	str	r3, [sp, #132]	; 0x84
 8020234:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020236:	441c      	add	r4, r3
 8020238:	9b08      	ldr	r3, [sp, #32]
 802023a:	9422      	str	r4, [sp, #136]	; 0x88
 802023c:	3b01      	subs	r3, #1
 802023e:	9308      	str	r3, [sp, #32]
 8020240:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020242:	3302      	adds	r3, #2
 8020244:	9309      	str	r3, [sp, #36]	; 0x24
 8020246:	e658      	b.n	801fefa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 8020248:	d028      	beq.n	802029c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 802024a:	9b08      	ldr	r3, [sp, #32]
 802024c:	9823      	ldr	r0, [sp, #140]	; 0x8c
 802024e:	9d21      	ldr	r5, [sp, #132]	; 0x84
 8020250:	3b01      	subs	r3, #1
 8020252:	fb00 5003 	mla	r0, r0, r3, r5
 8020256:	1400      	asrs	r0, r0, #16
 8020258:	f53f ae6c 	bmi.w	801ff34 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802025c:	3901      	subs	r1, #1
 802025e:	4288      	cmp	r0, r1
 8020260:	f6bf ae68 	bge.w	801ff34 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8020264:	9924      	ldr	r1, [sp, #144]	; 0x90
 8020266:	9822      	ldr	r0, [sp, #136]	; 0x88
 8020268:	fb01 0303 	mla	r3, r1, r3, r0
 802026c:	141b      	asrs	r3, r3, #16
 802026e:	f53f ae61 	bmi.w	801ff34 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8020272:	3a01      	subs	r2, #1
 8020274:	4293      	cmp	r3, r2
 8020276:	f6bf ae5d 	bge.w	801ff34 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802027a:	9b08      	ldr	r3, [sp, #32]
 802027c:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8020280:	9313      	str	r3, [sp, #76]	; 0x4c
 8020282:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8020286:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8020288:	2b00      	cmp	r3, #0
 802028a:	f300 8082 	bgt.w	8020392 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 802028e:	9b08      	ldr	r3, [sp, #32]
 8020290:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8020294:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020296:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 802029a:	9309      	str	r3, [sp, #36]	; 0x24
 802029c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 802029e:	2b00      	cmp	r3, #0
 80202a0:	f340 81ef 	ble.w	8020682 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 80202a4:	ee30 0a04 	vadd.f32	s0, s0, s8
 80202a8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80202ac:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80202b0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80202b2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80202b6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80202ba:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80202be:	eef0 6a62 	vmov.f32	s13, s5
 80202c2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80202c6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80202ca:	ee77 2a62 	vsub.f32	s5, s14, s5
 80202ce:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 80202d2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80202d6:	eef0 6a43 	vmov.f32	s13, s6
 80202da:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80202de:	ee12 2a90 	vmov	r2, s5
 80202e2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80202e6:	fb92 f3f3 	sdiv	r3, r2, r3
 80202ea:	ee13 2a10 	vmov	r2, s6
 80202ee:	9323      	str	r3, [sp, #140]	; 0x8c
 80202f0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80202f2:	fb92 f3f3 	sdiv	r3, r2, r3
 80202f6:	9324      	str	r3, [sp, #144]	; 0x90
 80202f8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80202fa:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80202fc:	3b01      	subs	r3, #1
 80202fe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020302:	9311      	str	r3, [sp, #68]	; 0x44
 8020304:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020306:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 802030a:	bf08      	it	eq
 802030c:	4613      	moveq	r3, r2
 802030e:	9308      	str	r3, [sp, #32]
 8020310:	eeb0 3a67 	vmov.f32	s6, s15
 8020314:	eef0 2a47 	vmov.f32	s5, s14
 8020318:	e5e1      	b.n	801fede <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 802031a:	fb08 f505 	mul.w	r5, r8, r5
 802031e:	fb09 5303 	mla	r3, r9, r3, r5
 8020322:	e661      	b.n	801ffe8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 8020324:	4681      	mov	r9, r0
 8020326:	e688      	b.n	802003a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 8020328:	f1c1 0210 	rsb	r2, r1, #16
 802032c:	4341      	muls	r1, r0
 802032e:	fb09 1902 	mla	r9, r9, r2, r1
 8020332:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8020336:	ea4f 5259 	mov.w	r2, r9, lsr #21
 802033a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 802033e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020342:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8020346:	ea42 0909 	orr.w	r9, r2, r9
 802034a:	fa1f f289 	uxth.w	r2, r9
 802034e:	e71b      	b.n	8020188 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8020350:	803a      	strh	r2, [r7, #0]
 8020352:	e75d      	b.n	8020210 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8020354:	f115 0e01 	adds.w	lr, r5, #1
 8020358:	f53f af5a 	bmi.w	8020210 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 802035c:	4572      	cmp	r2, lr
 802035e:	f6ff af57 	blt.w	8020210 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8020362:	f110 0e01 	adds.w	lr, r0, #1
 8020366:	f53f af53 	bmi.w	8020210 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 802036a:	4573      	cmp	r3, lr
 802036c:	f6ff af50 	blt.w	8020210 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8020370:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8020372:	9502      	str	r5, [sp, #8]
 8020374:	b21b      	sxth	r3, r3
 8020376:	b212      	sxth	r2, r2
 8020378:	e9cd 0103 	strd	r0, r1, [sp, #12]
 802037c:	9301      	str	r3, [sp, #4]
 802037e:	9200      	str	r2, [sp, #0]
 8020380:	e9cd c405 	strd	ip, r4, [sp, #20]
 8020384:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 8020388:	4639      	mov	r1, r7
 802038a:	9815      	ldr	r0, [sp, #84]	; 0x54
 802038c:	f7ff fc04 	bl	801fb98 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8020390:	e73e      	b.n	8020210 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8020392:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8020394:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8020398:	9b22      	ldr	r3, [sp, #136]	; 0x88
 802039a:	f3c3 3503 	ubfx	r5, r3, #12, #4
 802039e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80203a0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80203a4:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80203a6:	141f      	asrs	r7, r3, #16
 80203a8:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80203aa:	141b      	asrs	r3, r3, #16
 80203ac:	fb01 3707 	mla	r7, r1, r7, r3
 80203b0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80203b2:	fa1f fc82 	uxth.w	ip, r2
 80203b6:	eb03 0a07 	add.w	sl, r3, r7
 80203ba:	ea4f 100c 	mov.w	r0, ip, lsl #4
 80203be:	f813 9007 	ldrb.w	r9, [r3, r7]
 80203c2:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80203c6:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 80203ca:	b29b      	uxth	r3, r3
 80203cc:	2d00      	cmp	r5, #0
 80203ce:	f000 813d 	beq.w	802064c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 80203d2:	f81a 4001 	ldrb.w	r4, [sl, r1]
 80203d6:	940f      	str	r4, [sp, #60]	; 0x3c
 80203d8:	eb0a 0b01 	add.w	fp, sl, r1
 80203dc:	fa1f fa85 	uxth.w	sl, r5
 80203e0:	fb0a fc0c 	mul.w	ip, sl, ip
 80203e4:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 80203e8:	fa1f fa8a 	uxth.w	sl, sl
 80203ec:	eba0 000c 	sub.w	r0, r0, ip
 80203f0:	eba3 030a 	sub.w	r3, r3, sl
 80203f4:	b280      	uxth	r0, r0
 80203f6:	fb08 f000 	mul.w	r0, r8, r0
 80203fa:	b29b      	uxth	r3, r3
 80203fc:	fb09 0303 	mla	r3, r9, r3, r0
 8020400:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8020402:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8020406:	9410      	str	r4, [sp, #64]	; 0x40
 8020408:	fb0a 3300 	mla	r3, sl, r0, r3
 802040c:	fb0c 3304 	mla	r3, ip, r4, r3
 8020410:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8020414:	2b00      	cmp	r3, #0
 8020416:	f000 810b 	beq.w	8020630 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 802041a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 802041c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802041e:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8020422:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8020426:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 802042a:	f000 8114 	beq.w	8020656 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 802042e:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8020432:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8020436:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802043a:	fb09 f707 	mul.w	r7, r9, r7
 802043e:	fb0a fc0c 	mul.w	ip, sl, ip
 8020442:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8020446:	f107 0b20 	add.w	fp, r7, #32
 802044a:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 802044e:	44cc      	add	ip, r9
 8020450:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8020454:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8020458:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 802045c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8020460:	ea4c 0909 	orr.w	r9, ip, r9
 8020464:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8020468:	8847      	ldrh	r7, [r0, #2]
 802046a:	d019      	beq.n	80204a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 802046c:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8020470:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8020474:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8020478:	fb08 f807 	mul.w	r8, r8, r7
 802047c:	fb0a fc0c 	mul.w	ip, sl, ip
 8020480:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8020484:	f108 0b20 	add.w	fp, r8, #32
 8020488:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 802048c:	44bc      	add	ip, r7
 802048e:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8020492:	0a3f      	lsrs	r7, r7, #8
 8020494:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8020498:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802049c:	ea4c 0707 	orr.w	r7, ip, r7
 80204a0:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 80204a4:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 80204a8:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80204ac:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80204b0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80204b4:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80204b8:	ea4c 0909 	orr.w	r9, ip, r9
 80204bc:	ea4a 0707 	orr.w	r7, sl, r7
 80204c0:	2d00      	cmp	r5, #0
 80204c2:	f000 80ca 	beq.w	802065a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 80204c6:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 80204ca:	3901      	subs	r1, #1
 80204cc:	0049      	lsls	r1, r1, #1
 80204ce:	3102      	adds	r1, #2
 80204d0:	eb00 0c01 	add.w	ip, r0, r1
 80204d4:	5a41      	ldrh	r1, [r0, r1]
 80204d6:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80204d8:	28ff      	cmp	r0, #255	; 0xff
 80204da:	d019      	beq.n	8020510 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 80204dc:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80204de:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 80204e2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80204e6:	fb04 fa01 	mul.w	sl, r4, r1
 80204ea:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80204ee:	fb08 f800 	mul.w	r8, r8, r0
 80204f2:	f10a 0020 	add.w	r0, sl, #32
 80204f6:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 80204fa:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 80204fe:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8020502:	4441      	add	r1, r8
 8020504:	0a00      	lsrs	r0, r0, #8
 8020506:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 802050a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802050e:	4301      	orrs	r1, r0
 8020510:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020512:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8020516:	2cff      	cmp	r4, #255	; 0xff
 8020518:	d01a      	beq.n	8020550 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 802051a:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 802051e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8020522:	fb04 fa00 	mul.w	sl, r4, r0
 8020526:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802052a:	fb08 f80c 	mul.w	r8, r8, ip
 802052e:	f10a 0c20 	add.w	ip, sl, #32
 8020532:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8020536:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 802053a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802053e:	4440      	add	r0, r8
 8020540:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020544:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8020548:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 802054c:	ea40 000c 	orr.w	r0, r0, ip
 8020550:	fb15 fc02 	smulbb	ip, r5, r2
 8020554:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8020558:	f1c5 0810 	rsb	r8, r5, #16
 802055c:	eba8 0802 	sub.w	r8, r8, r2
 8020560:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8020564:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8020568:	437a      	muls	r2, r7
 802056a:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 802056e:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8020572:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8020576:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802057a:	fb09 2208 	mla	r2, r9, r8, r2
 802057e:	ea4a 0101 	orr.w	r1, sl, r1
 8020582:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8020586:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802058a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802058e:	fb05 2201 	mla	r2, r5, r1, r2
 8020592:	ea4b 0000 	orr.w	r0, fp, r0
 8020596:	fb0c 2200 	mla	r2, ip, r0, r2
 802059a:	0d57      	lsrs	r7, r2, #21
 802059c:	0952      	lsrs	r2, r2, #5
 802059e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80205a2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80205a6:	433a      	orrs	r2, r7
 80205a8:	2bff      	cmp	r3, #255	; 0xff
 80205aa:	b292      	uxth	r2, r2
 80205ac:	d102      	bne.n	80205b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 80205ae:	9912      	ldr	r1, [sp, #72]	; 0x48
 80205b0:	29ff      	cmp	r1, #255	; 0xff
 80205b2:	d063      	beq.n	802067c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 80205b4:	980a      	ldr	r0, [sp, #40]	; 0x28
 80205b6:	f8be 1000 	ldrh.w	r1, [lr]
 80205ba:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80205bc:	4343      	muls	r3, r0
 80205be:	1c58      	adds	r0, r3, #1
 80205c0:	eb00 2323 	add.w	r3, r0, r3, asr #8
 80205c4:	ea6f 2323 	mvn.w	r3, r3, asr #8
 80205c8:	1208      	asrs	r0, r1, #8
 80205ca:	b2db      	uxtb	r3, r3
 80205cc:	1215      	asrs	r5, r2, #8
 80205ce:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80205d2:	fb10 f003 	smulbb	r0, r0, r3
 80205d6:	10cf      	asrs	r7, r1, #3
 80205d8:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80205dc:	00c9      	lsls	r1, r1, #3
 80205de:	fb05 0504 	mla	r5, r5, r4, r0
 80205e2:	b2c9      	uxtb	r1, r1
 80205e4:	10d0      	asrs	r0, r2, #3
 80205e6:	00d2      	lsls	r2, r2, #3
 80205e8:	fb11 f103 	smulbb	r1, r1, r3
 80205ec:	b2d2      	uxtb	r2, r2
 80205ee:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80205f2:	fb02 1204 	mla	r2, r2, r4, r1
 80205f6:	fb17 f703 	smulbb	r7, r7, r3
 80205fa:	b2ad      	uxth	r5, r5
 80205fc:	b292      	uxth	r2, r2
 80205fe:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8020602:	fb00 7004 	mla	r0, r0, r4, r7
 8020606:	1c6b      	adds	r3, r5, #1
 8020608:	1c57      	adds	r7, r2, #1
 802060a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802060e:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8020612:	b280      	uxth	r0, r0
 8020614:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8020618:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 802061c:	433d      	orrs	r5, r7
 802061e:	1c47      	adds	r7, r0, #1
 8020620:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8020624:	097f      	lsrs	r7, r7, #5
 8020626:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802062a:	433d      	orrs	r5, r7
 802062c:	f8ae 5000 	strh.w	r5, [lr]
 8020630:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8020632:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8020634:	4413      	add	r3, r2
 8020636:	9321      	str	r3, [sp, #132]	; 0x84
 8020638:	9a22      	ldr	r2, [sp, #136]	; 0x88
 802063a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802063c:	441a      	add	r2, r3
 802063e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8020640:	9222      	str	r2, [sp, #136]	; 0x88
 8020642:	3b01      	subs	r3, #1
 8020644:	f10e 0e02 	add.w	lr, lr, #2
 8020648:	9313      	str	r3, [sp, #76]	; 0x4c
 802064a:	e61c      	b.n	8020286 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 802064c:	fb08 f000 	mul.w	r0, r8, r0
 8020650:	fb09 0303 	mla	r3, r9, r3, r0
 8020654:	e6dc      	b.n	8020410 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 8020656:	46b9      	mov	r9, r7
 8020658:	e704      	b.n	8020464 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 802065a:	f1c2 0110 	rsb	r1, r2, #16
 802065e:	437a      	muls	r2, r7
 8020660:	fb09 2901 	mla	r9, r9, r1, r2
 8020664:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8020668:	ea4f 5059 	mov.w	r0, r9, lsr #21
 802066c:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8020670:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8020674:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8020678:	4302      	orrs	r2, r0
 802067a:	e795      	b.n	80205a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 802067c:	f8ae 2000 	strh.w	r2, [lr]
 8020680:	e7d6      	b.n	8020630 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8020682:	b017      	add	sp, #92	; 0x5c
 8020684:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020688 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8020688:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802068c:	b085      	sub	sp, #20
 802068e:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8020692:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8020696:	9103      	str	r1, [sp, #12]
 8020698:	fb00 7406 	mla	r4, r0, r6, r7
 802069c:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 80206a0:	2800      	cmp	r0, #0
 80206a2:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 80206a6:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 80206aa:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 80206ae:	9501      	str	r5, [sp, #4]
 80206b0:	eb02 0904 	add.w	r9, r2, r4
 80206b4:	f2c0 8141 	blt.w	802093a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 80206b8:	4583      	cmp	fp, r0
 80206ba:	f340 813e 	ble.w	802093a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 80206be:	2f00      	cmp	r7, #0
 80206c0:	f2c0 8137 	blt.w	8020932 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 80206c4:	42be      	cmp	r6, r7
 80206c6:	f340 8134 	ble.w	8020932 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 80206ca:	f812 c004 	ldrb.w	ip, [r2, r4]
 80206ce:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 80206d2:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80206d6:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 80206da:	4355      	muls	r5, r2
 80206dc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80206e0:	f64f 041f 	movw	r4, #63519	; 0xf81f
 80206e4:	fb0c f203 	mul.w	r2, ip, r3
 80206e8:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 80206ec:	f605 0501 	addw	r5, r5, #2049	; 0x801
 80206f0:	441d      	add	r5, r3
 80206f2:	f102 0320 	add.w	r3, r2, #32
 80206f6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80206fa:	0a1b      	lsrs	r3, r3, #8
 80206fc:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8020700:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020704:	431c      	orrs	r4, r3
 8020706:	1c7b      	adds	r3, r7, #1
 8020708:	f100 811c 	bmi.w	8020944 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 802070c:	429e      	cmp	r6, r3
 802070e:	f340 8119 	ble.w	8020944 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8020712:	2900      	cmp	r1, #0
 8020714:	f000 8119 	beq.w	802094a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 8020718:	9a01      	ldr	r2, [sp, #4]
 802071a:	f899 3001 	ldrb.w	r3, [r9, #1]
 802071e:	8855      	ldrh	r5, [r2, #2]
 8020720:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8020724:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 8020728:	fb08 f802 	mul.w	r8, r8, r2
 802072c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8020730:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8020734:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8020738:	435d      	muls	r5, r3
 802073a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802073e:	44d0      	add	r8, sl
 8020740:	f105 0a20 	add.w	sl, r5, #32
 8020744:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8020748:	0a2d      	lsrs	r5, r5, #8
 802074a:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 802074e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8020752:	432a      	orrs	r2, r5
 8020754:	3001      	adds	r0, #1
 8020756:	f100 80fe 	bmi.w	8020956 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 802075a:	4583      	cmp	fp, r0
 802075c:	f340 80fb 	ble.w	8020956 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8020760:	f1be 0f00 	cmp.w	lr, #0
 8020764:	f000 80fc 	beq.w	8020960 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 8020768:	2f00      	cmp	r7, #0
 802076a:	f2c0 80f1 	blt.w	8020950 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 802076e:	42be      	cmp	r6, r7
 8020770:	f340 80ee 	ble.w	8020950 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8020774:	9801      	ldr	r0, [sp, #4]
 8020776:	f819 5006 	ldrb.w	r5, [r9, r6]
 802077a:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 802077e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8020782:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8020786:	fb0a fa00 	mul.w	sl, sl, r0
 802078a:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 802078e:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8020792:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8020796:	fb05 f808 	mul.w	r8, r5, r8
 802079a:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 802079e:	4482      	add	sl, r0
 80207a0:	f108 0020 	add.w	r0, r8, #32
 80207a4:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80207a8:	0a00      	lsrs	r0, r0, #8
 80207aa:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 80207ae:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80207b2:	ea4b 0b00 	orr.w	fp, fp, r0
 80207b6:	3701      	adds	r7, #1
 80207b8:	f100 80d7 	bmi.w	802096a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 80207bc:	42be      	cmp	r6, r7
 80207be:	f340 80d4 	ble.w	802096a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 80207c2:	2900      	cmp	r1, #0
 80207c4:	f000 80d4 	beq.w	8020970 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 80207c8:	3601      	adds	r6, #1
 80207ca:	9801      	ldr	r0, [sp, #4]
 80207cc:	f819 7006 	ldrb.w	r7, [r9, r6]
 80207d0:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 80207d4:	ea4f 09e7 	mov.w	r9, r7, asr #3
 80207d8:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 80207dc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80207e0:	fb09 f906 	mul.w	r9, r9, r6
 80207e4:	fb07 f800 	mul.w	r8, r7, r0
 80207e8:	f64f 001f 	movw	r0, #63519	; 0xf81f
 80207ec:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 80207f0:	f609 0901 	addw	r9, r9, #2049	; 0x801
 80207f4:	44d1      	add	r9, sl
 80207f6:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 80207fa:	f108 0020 	add.w	r0, r8, #32
 80207fe:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8020802:	0a00      	lsrs	r0, r0, #8
 8020804:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8020808:	4330      	orrs	r0, r6
 802080a:	b28e      	uxth	r6, r1
 802080c:	fa1f f98e 	uxth.w	r9, lr
 8020810:	fb06 f809 	mul.w	r8, r6, r9
 8020814:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8020818:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 802081c:	0136      	lsls	r6, r6, #4
 802081e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8020822:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8020826:	9601      	str	r6, [sp, #4]
 8020828:	ea4a 0404 	orr.w	r4, sl, r4
 802082c:	fa1f f689 	uxth.w	r6, r9
 8020830:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8020834:	fb11 f90e 	smulbb	r9, r1, lr
 8020838:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 802083c:	9602      	str	r6, [sp, #8]
 802083e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8020842:	4626      	mov	r6, r4
 8020844:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8020848:	f1ce 0410 	rsb	r4, lr, #16
 802084c:	1a64      	subs	r4, r4, r1
 802084e:	ea4a 0202 	orr.w	r2, sl, r2
 8020852:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8020856:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802085a:	434a      	muls	r2, r1
 802085c:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8020860:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8020864:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8020868:	fb04 2406 	mla	r4, r4, r6, r2
 802086c:	ea4a 0000 	orr.w	r0, sl, r0
 8020870:	fb09 4200 	mla	r2, r9, r0, r4
 8020874:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8020878:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 802087c:	9801      	ldr	r0, [sp, #4]
 802087e:	9903      	ldr	r1, [sp, #12]
 8020880:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8020884:	ea44 0b0b 	orr.w	fp, r4, fp
 8020888:	9c02      	ldr	r4, [sp, #8]
 802088a:	8809      	ldrh	r1, [r1, #0]
 802088c:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8020890:	1b00      	subs	r0, r0, r4
 8020892:	9c01      	ldr	r4, [sp, #4]
 8020894:	eba4 0608 	sub.w	r6, r4, r8
 8020898:	b2b6      	uxth	r6, r6
 802089a:	b280      	uxth	r0, r0
 802089c:	4373      	muls	r3, r6
 802089e:	fb0c 3300 	mla	r3, ip, r0, r3
 80208a2:	9802      	ldr	r0, [sp, #8]
 80208a4:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 80208a8:	fb00 3505 	mla	r5, r0, r5, r3
 80208ac:	fb0e 2e0b 	mla	lr, lr, fp, r2
 80208b0:	fb08 5707 	mla	r7, r8, r7, r5
 80208b4:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80208b8:	120b      	asrs	r3, r1, #8
 80208ba:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80208be:	ea6f 2727 	mvn.w	r7, r7, asr #8
 80208c2:	b2ff      	uxtb	r7, r7
 80208c4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80208c8:	10c8      	asrs	r0, r1, #3
 80208ca:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80208ce:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80208d2:	00c9      	lsls	r1, r1, #3
 80208d4:	437b      	muls	r3, r7
 80208d6:	ea42 0e0e 	orr.w	lr, r2, lr
 80208da:	b2c9      	uxtb	r1, r1
 80208dc:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80208e0:	fa1f f28e 	uxth.w	r2, lr
 80208e4:	4378      	muls	r0, r7
 80208e6:	434f      	muls	r7, r1
 80208e8:	1c59      	adds	r1, r3, #1
 80208ea:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80208ee:	1213      	asrs	r3, r2, #8
 80208f0:	f023 0307 	bic.w	r3, r3, #7
 80208f4:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80208f8:	1c41      	adds	r1, r0, #1
 80208fa:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80208fe:	10d1      	asrs	r1, r2, #3
 8020900:	f021 0103 	bic.w	r1, r1, #3
 8020904:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8020908:	021b      	lsls	r3, r3, #8
 802090a:	00c9      	lsls	r1, r1, #3
 802090c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8020910:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8020914:	430b      	orrs	r3, r1
 8020916:	1c79      	adds	r1, r7, #1
 8020918:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 802091c:	00d2      	lsls	r2, r2, #3
 802091e:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8020922:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8020926:	431a      	orrs	r2, r3
 8020928:	9b03      	ldr	r3, [sp, #12]
 802092a:	801a      	strh	r2, [r3, #0]
 802092c:	b005      	add	sp, #20
 802092e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020932:	f04f 0c00 	mov.w	ip, #0
 8020936:	4664      	mov	r4, ip
 8020938:	e6e5      	b.n	8020706 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 802093a:	2300      	movs	r3, #0
 802093c:	469c      	mov	ip, r3
 802093e:	461a      	mov	r2, r3
 8020940:	461c      	mov	r4, r3
 8020942:	e707      	b.n	8020754 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8020944:	2300      	movs	r3, #0
 8020946:	461a      	mov	r2, r3
 8020948:	e704      	b.n	8020754 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 802094a:	460b      	mov	r3, r1
 802094c:	460a      	mov	r2, r1
 802094e:	e701      	b.n	8020754 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8020950:	2500      	movs	r5, #0
 8020952:	46ab      	mov	fp, r5
 8020954:	e72f      	b.n	80207b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 8020956:	2700      	movs	r7, #0
 8020958:	463d      	mov	r5, r7
 802095a:	4638      	mov	r0, r7
 802095c:	46bb      	mov	fp, r7
 802095e:	e754      	b.n	802080a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8020960:	4677      	mov	r7, lr
 8020962:	4675      	mov	r5, lr
 8020964:	4670      	mov	r0, lr
 8020966:	46f3      	mov	fp, lr
 8020968:	e74f      	b.n	802080a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 802096a:	2700      	movs	r7, #0
 802096c:	4638      	mov	r0, r7
 802096e:	e74c      	b.n	802080a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8020970:	460f      	mov	r7, r1
 8020972:	4608      	mov	r0, r1
 8020974:	e749      	b.n	802080a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

08020978 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020978:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802097c:	b093      	sub	sp, #76	; 0x4c
 802097e:	9210      	str	r2, [sp, #64]	; 0x40
 8020980:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8020982:	910e      	str	r1, [sp, #56]	; 0x38
 8020984:	9306      	str	r3, [sp, #24]
 8020986:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 802098a:	9011      	str	r0, [sp, #68]	; 0x44
 802098c:	6850      	ldr	r0, [r2, #4]
 802098e:	6812      	ldr	r2, [r2, #0]
 8020990:	fb00 1303 	mla	r3, r0, r3, r1
 8020994:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020998:	9307      	str	r3, [sp, #28]
 802099a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802099c:	681b      	ldr	r3, [r3, #0]
 802099e:	9308      	str	r3, [sp, #32]
 80209a0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80209a2:	685b      	ldr	r3, [r3, #4]
 80209a4:	9309      	str	r3, [sp, #36]	; 0x24
 80209a6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80209a8:	2b00      	cmp	r3, #0
 80209aa:	dc03      	bgt.n	80209b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80209ac:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80209ae:	2b00      	cmp	r3, #0
 80209b0:	f340 83b4 	ble.w	802111c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 80209b4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80209b6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80209ba:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80209be:	1e48      	subs	r0, r1, #1
 80209c0:	1e55      	subs	r5, r2, #1
 80209c2:	9b06      	ldr	r3, [sp, #24]
 80209c4:	2b00      	cmp	r3, #0
 80209c6:	f340 8163 	ble.w	8020c90 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 80209ca:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 80209cc:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80209ce:	1436      	asrs	r6, r6, #16
 80209d0:	ea4f 4323 	mov.w	r3, r3, asr #16
 80209d4:	d406      	bmi.n	80209e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80209d6:	4286      	cmp	r6, r0
 80209d8:	da04      	bge.n	80209e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80209da:	2b00      	cmp	r3, #0
 80209dc:	db02      	blt.n	80209e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80209de:	42ab      	cmp	r3, r5
 80209e0:	f2c0 8157 	blt.w	8020c92 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 80209e4:	3601      	adds	r6, #1
 80209e6:	f100 8144 	bmi.w	8020c72 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 80209ea:	42b1      	cmp	r1, r6
 80209ec:	f2c0 8141 	blt.w	8020c72 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 80209f0:	3301      	adds	r3, #1
 80209f2:	f100 813e 	bmi.w	8020c72 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 80209f6:	429a      	cmp	r2, r3
 80209f8:	f2c0 813b 	blt.w	8020c72 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 80209fc:	9b06      	ldr	r3, [sp, #24]
 80209fe:	9f07      	ldr	r7, [sp, #28]
 8020a00:	930f      	str	r3, [sp, #60]	; 0x3c
 8020a02:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8020a06:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8020a08:	2b00      	cmp	r3, #0
 8020a0a:	f340 8164 	ble.w	8020cd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8020a0e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8020a10:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8020a12:	1418      	asrs	r0, r3, #16
 8020a14:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8020a16:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8020a1a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8020a1c:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8020a20:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020a22:	142d      	asrs	r5, r5, #16
 8020a24:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8020a28:	f100 81ee 	bmi.w	8020e08 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8020a2c:	f102 3eff 	add.w	lr, r2, #4294967295
 8020a30:	4575      	cmp	r5, lr
 8020a32:	f280 81e9 	bge.w	8020e08 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8020a36:	2800      	cmp	r0, #0
 8020a38:	f2c0 81e6 	blt.w	8020e08 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8020a3c:	f103 3eff 	add.w	lr, r3, #4294967295
 8020a40:	4570      	cmp	r0, lr
 8020a42:	f280 81e1 	bge.w	8020e08 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8020a46:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020a48:	b212      	sxth	r2, r2
 8020a4a:	fb00 5002 	mla	r0, r0, r2, r5
 8020a4e:	fa1f fe81 	uxth.w	lr, r1
 8020a52:	eb03 0a00 	add.w	sl, r3, r0
 8020a56:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8020a5a:	f813 9000 	ldrb.w	r9, [r3, r0]
 8020a5e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8020a62:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8020a66:	b29b      	uxth	r3, r3
 8020a68:	f1bc 0f00 	cmp.w	ip, #0
 8020a6c:	f000 8179 	beq.w	8020d62 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8020a70:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8020a74:	940a      	str	r4, [sp, #40]	; 0x28
 8020a76:	eb0a 0b02 	add.w	fp, sl, r2
 8020a7a:	fa1f fa8c 	uxth.w	sl, ip
 8020a7e:	fb0a fe0e 	mul.w	lr, sl, lr
 8020a82:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8020a86:	fa1f fa8a 	uxth.w	sl, sl
 8020a8a:	eba5 050e 	sub.w	r5, r5, lr
 8020a8e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8020a92:	940b      	str	r4, [sp, #44]	; 0x2c
 8020a94:	eba3 030a 	sub.w	r3, r3, sl
 8020a98:	b2ad      	uxth	r5, r5
 8020a9a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8020a9c:	b29b      	uxth	r3, r3
 8020a9e:	fb08 f505 	mul.w	r5, r8, r5
 8020aa2:	fb09 5303 	mla	r3, r9, r3, r5
 8020aa6:	fb0a 3304 	mla	r3, sl, r4, r3
 8020aaa:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020aac:	fb0e 3304 	mla	r3, lr, r4, r3
 8020ab0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8020ab4:	2b00      	cmp	r3, #0
 8020ab6:	f000 80cf 	beq.w	8020c58 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8020aba:	9c08      	ldr	r4, [sp, #32]
 8020abc:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8020ac0:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8020ac4:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8020ac8:	f000 8150 	beq.w	8020d6c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8020acc:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8020ad0:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8020ad4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8020ad8:	fb09 f000 	mul.w	r0, r9, r0
 8020adc:	fb0a fe0e 	mul.w	lr, sl, lr
 8020ae0:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8020ae4:	f100 0b20 	add.w	fp, r0, #32
 8020ae8:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8020aec:	44ce      	add	lr, r9
 8020aee:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8020af2:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8020af6:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8020afa:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8020afe:	ea4e 0909 	orr.w	r9, lr, r9
 8020b02:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8020b06:	8868      	ldrh	r0, [r5, #2]
 8020b08:	d019      	beq.n	8020b3e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8020b0a:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8020b0e:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8020b12:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8020b16:	fb08 f800 	mul.w	r8, r8, r0
 8020b1a:	fb0a fe0e 	mul.w	lr, sl, lr
 8020b1e:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8020b22:	f108 0b20 	add.w	fp, r8, #32
 8020b26:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8020b2a:	4486      	add	lr, r0
 8020b2c:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8020b30:	0a00      	lsrs	r0, r0, #8
 8020b32:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8020b36:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8020b3a:	ea4e 0000 	orr.w	r0, lr, r0
 8020b3e:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8020b42:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8020b46:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8020b4a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8020b4e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8020b52:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8020b56:	ea4e 0909 	orr.w	r9, lr, r9
 8020b5a:	ea4a 0000 	orr.w	r0, sl, r0
 8020b5e:	f1bc 0f00 	cmp.w	ip, #0
 8020b62:	f000 8105 	beq.w	8020d70 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8020b66:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8020b6a:	3a01      	subs	r2, #1
 8020b6c:	0052      	lsls	r2, r2, #1
 8020b6e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8020b70:	3202      	adds	r2, #2
 8020b72:	2cff      	cmp	r4, #255	; 0xff
 8020b74:	eb05 0e02 	add.w	lr, r5, r2
 8020b78:	5aaa      	ldrh	r2, [r5, r2]
 8020b7a:	d018      	beq.n	8020bae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8020b7c:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8020b80:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020b84:	fb04 fa02 	mul.w	sl, r4, r2
 8020b88:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8020b8c:	fb08 f805 	mul.w	r8, r8, r5
 8020b90:	f10a 0520 	add.w	r5, sl, #32
 8020b94:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8020b98:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8020b9c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8020ba0:	4442      	add	r2, r8
 8020ba2:	0a2d      	lsrs	r5, r5, #8
 8020ba4:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8020ba8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8020bac:	432a      	orrs	r2, r5
 8020bae:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020bb0:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8020bb4:	2cff      	cmp	r4, #255	; 0xff
 8020bb6:	d01a      	beq.n	8020bee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8020bb8:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8020bbc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8020bc0:	fb04 fa05 	mul.w	sl, r4, r5
 8020bc4:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8020bc8:	fb08 f80e 	mul.w	r8, r8, lr
 8020bcc:	f10a 0e20 	add.w	lr, sl, #32
 8020bd0:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8020bd4:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8020bd8:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8020bdc:	4445      	add	r5, r8
 8020bde:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020be2:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8020be6:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8020bea:	ea45 050e 	orr.w	r5, r5, lr
 8020bee:	fb1c fe01 	smulbb	lr, ip, r1
 8020bf2:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8020bf6:	f1cc 0810 	rsb	r8, ip, #16
 8020bfa:	eba8 0801 	sub.w	r8, r8, r1
 8020bfe:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8020c02:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8020c06:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8020c0a:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8020c0e:	4341      	muls	r1, r0
 8020c10:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8020c14:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8020c18:	ea4a 0202 	orr.w	r2, sl, r2
 8020c1c:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8020c20:	fb09 1108 	mla	r1, r9, r8, r1
 8020c24:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8020c28:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8020c2c:	fb0c 1102 	mla	r1, ip, r2, r1
 8020c30:	ea4b 0505 	orr.w	r5, fp, r5
 8020c34:	fb0e 1e05 	mla	lr, lr, r5, r1
 8020c38:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8020c3c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8020c40:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020c44:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8020c48:	ea42 0e0e 	orr.w	lr, r2, lr
 8020c4c:	fa1f f28e 	uxth.w	r2, lr
 8020c50:	2bff      	cmp	r3, #255	; 0xff
 8020c52:	f040 80a1 	bne.w	8020d98 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 8020c56:	803a      	strh	r2, [r7, #0]
 8020c58:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8020c5a:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8020c5c:	4413      	add	r3, r2
 8020c5e:	931d      	str	r3, [sp, #116]	; 0x74
 8020c60:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8020c62:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020c64:	441a      	add	r2, r3
 8020c66:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8020c68:	921e      	str	r2, [sp, #120]	; 0x78
 8020c6a:	3b01      	subs	r3, #1
 8020c6c:	3702      	adds	r7, #2
 8020c6e:	930f      	str	r3, [sp, #60]	; 0x3c
 8020c70:	e6c9      	b.n	8020a06 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8020c72:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8020c74:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 8020c76:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 8020c78:	4433      	add	r3, r6
 8020c7a:	931d      	str	r3, [sp, #116]	; 0x74
 8020c7c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020c7e:	441c      	add	r4, r3
 8020c80:	9b06      	ldr	r3, [sp, #24]
 8020c82:	941e      	str	r4, [sp, #120]	; 0x78
 8020c84:	3b01      	subs	r3, #1
 8020c86:	9306      	str	r3, [sp, #24]
 8020c88:	9b07      	ldr	r3, [sp, #28]
 8020c8a:	3302      	adds	r3, #2
 8020c8c:	9307      	str	r3, [sp, #28]
 8020c8e:	e698      	b.n	80209c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8020c90:	d028      	beq.n	8020ce4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8020c92:	9b06      	ldr	r3, [sp, #24]
 8020c94:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8020c96:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8020c98:	3b01      	subs	r3, #1
 8020c9a:	fb00 5003 	mla	r0, r0, r3, r5
 8020c9e:	1400      	asrs	r0, r0, #16
 8020ca0:	f53f aeac 	bmi.w	80209fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8020ca4:	3901      	subs	r1, #1
 8020ca6:	4288      	cmp	r0, r1
 8020ca8:	f6bf aea8 	bge.w	80209fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8020cac:	9920      	ldr	r1, [sp, #128]	; 0x80
 8020cae:	981e      	ldr	r0, [sp, #120]	; 0x78
 8020cb0:	fb01 0303 	mla	r3, r1, r3, r0
 8020cb4:	141b      	asrs	r3, r3, #16
 8020cb6:	f53f aea1 	bmi.w	80209fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8020cba:	3a01      	subs	r2, #1
 8020cbc:	4293      	cmp	r3, r2
 8020cbe:	f6bf ae9d 	bge.w	80209fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8020cc2:	9b06      	ldr	r3, [sp, #24]
 8020cc4:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8020cc8:	930f      	str	r3, [sp, #60]	; 0x3c
 8020cca:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8020cce:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8020cd0:	2b00      	cmp	r3, #0
 8020cd2:	f300 80b6 	bgt.w	8020e42 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 8020cd6:	9b06      	ldr	r3, [sp, #24]
 8020cd8:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8020cdc:	9b07      	ldr	r3, [sp, #28]
 8020cde:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8020ce2:	9307      	str	r3, [sp, #28]
 8020ce4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8020ce6:	2b00      	cmp	r3, #0
 8020ce8:	f340 8218 	ble.w	802111c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8020cec:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020cf0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8020cf4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020cf8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020cfa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020cfe:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020d02:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020d06:	eef0 6a62 	vmov.f32	s13, s5
 8020d0a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020d0e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020d12:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020d16:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 8020d1a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020d1e:	eef0 6a43 	vmov.f32	s13, s6
 8020d22:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020d26:	ee12 2a90 	vmov	r2, s5
 8020d2a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020d2e:	fb92 f3f3 	sdiv	r3, r2, r3
 8020d32:	ee13 2a10 	vmov	r2, s6
 8020d36:	931f      	str	r3, [sp, #124]	; 0x7c
 8020d38:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020d3a:	fb92 f3f3 	sdiv	r3, r2, r3
 8020d3e:	9320      	str	r3, [sp, #128]	; 0x80
 8020d40:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8020d42:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8020d44:	3b01      	subs	r3, #1
 8020d46:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020d4a:	930e      	str	r3, [sp, #56]	; 0x38
 8020d4c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020d4e:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 8020d52:	bf08      	it	eq
 8020d54:	4613      	moveq	r3, r2
 8020d56:	9306      	str	r3, [sp, #24]
 8020d58:	eeb0 3a67 	vmov.f32	s6, s15
 8020d5c:	eef0 2a47 	vmov.f32	s5, s14
 8020d60:	e621      	b.n	80209a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8020d62:	fb08 f505 	mul.w	r5, r8, r5
 8020d66:	fb09 5303 	mla	r3, r9, r3, r5
 8020d6a:	e6a1      	b.n	8020ab0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 8020d6c:	4681      	mov	r9, r0
 8020d6e:	e6c8      	b.n	8020b02 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 8020d70:	f1c1 0210 	rsb	r2, r1, #16
 8020d74:	4341      	muls	r1, r0
 8020d76:	fb09 1902 	mla	r9, r9, r2, r1
 8020d7a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8020d7e:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8020d82:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8020d86:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020d8a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8020d8e:	ea42 0909 	orr.w	r9, r2, r9
 8020d92:	fa1f f289 	uxth.w	r2, r9
 8020d96:	e75b      	b.n	8020c50 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8020d98:	f8b7 c000 	ldrh.w	ip, [r7]
 8020d9c:	43db      	mvns	r3, r3
 8020d9e:	ea4f 202c 	mov.w	r0, ip, asr #8
 8020da2:	fa5f fe83 	uxtb.w	lr, r3
 8020da6:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8020daa:	fb00 f00e 	mul.w	r0, r0, lr
 8020dae:	1c41      	adds	r1, r0, #1
 8020db0:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8020db4:	1211      	asrs	r1, r2, #8
 8020db6:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8020dba:	f021 0107 	bic.w	r1, r1, #7
 8020dbe:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8020dc2:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8020dc6:	48d7      	ldr	r0, [pc, #860]	; (8021124 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8020dc8:	fb05 f50e 	mul.w	r5, r5, lr
 8020dcc:	b2c9      	uxtb	r1, r1
 8020dce:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 8020dd2:	1c69      	adds	r1, r5, #1
 8020dd4:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8020dd8:	10d1      	asrs	r1, r2, #3
 8020dda:	f021 0103 	bic.w	r1, r1, #3
 8020dde:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 8020de2:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8020de6:	b2db      	uxtb	r3, r3
 8020de8:	00c9      	lsls	r1, r1, #3
 8020dea:	fb03 f30e 	mul.w	r3, r3, lr
 8020dee:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8020df2:	4301      	orrs	r1, r0
 8020df4:	1c58      	adds	r0, r3, #1
 8020df6:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8020dfa:	00d2      	lsls	r2, r2, #3
 8020dfc:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8020e00:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8020e04:	430a      	orrs	r2, r1
 8020e06:	e726      	b.n	8020c56 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 8020e08:	f115 0e01 	adds.w	lr, r5, #1
 8020e0c:	f53f af24 	bmi.w	8020c58 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8020e10:	4572      	cmp	r2, lr
 8020e12:	f6ff af21 	blt.w	8020c58 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8020e16:	f110 0e01 	adds.w	lr, r0, #1
 8020e1a:	f53f af1d 	bmi.w	8020c58 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8020e1e:	4573      	cmp	r3, lr
 8020e20:	f6ff af1a 	blt.w	8020c58 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8020e24:	b21b      	sxth	r3, r3
 8020e26:	b212      	sxth	r2, r2
 8020e28:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 8020e2c:	e9cd 5002 	strd	r5, r0, [sp, #8]
 8020e30:	9301      	str	r3, [sp, #4]
 8020e32:	9200      	str	r2, [sp, #0]
 8020e34:	4639      	mov	r1, r7
 8020e36:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 8020e3a:	9811      	ldr	r0, [sp, #68]	; 0x44
 8020e3c:	f7ff fc24 	bl	8020688 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8020e40:	e70a      	b.n	8020c58 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8020e42:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8020e44:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8020e48:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8020e4a:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8020e4e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020e50:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020e54:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8020e56:	141f      	asrs	r7, r3, #16
 8020e58:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8020e5a:	141b      	asrs	r3, r3, #16
 8020e5c:	fb01 3707 	mla	r7, r1, r7, r3
 8020e60:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020e62:	fa1f fc82 	uxth.w	ip, r2
 8020e66:	eb03 0a07 	add.w	sl, r3, r7
 8020e6a:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8020e6e:	f813 9007 	ldrb.w	r9, [r3, r7]
 8020e72:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8020e76:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8020e7a:	b29b      	uxth	r3, r3
 8020e7c:	2d00      	cmp	r5, #0
 8020e7e:	f000 80fe 	beq.w	802107e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 8020e82:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8020e86:	940c      	str	r4, [sp, #48]	; 0x30
 8020e88:	eb0a 0b01 	add.w	fp, sl, r1
 8020e8c:	fa1f fa85 	uxth.w	sl, r5
 8020e90:	fb0a fc0c 	mul.w	ip, sl, ip
 8020e94:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8020e98:	fa1f fa8a 	uxth.w	sl, sl
 8020e9c:	eba0 000c 	sub.w	r0, r0, ip
 8020ea0:	eba3 030a 	sub.w	r3, r3, sl
 8020ea4:	b280      	uxth	r0, r0
 8020ea6:	fb08 f000 	mul.w	r0, r8, r0
 8020eaa:	b29b      	uxth	r3, r3
 8020eac:	fb09 0303 	mla	r3, r9, r3, r0
 8020eb0:	980c      	ldr	r0, [sp, #48]	; 0x30
 8020eb2:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8020eb6:	940d      	str	r4, [sp, #52]	; 0x34
 8020eb8:	fb0a 3300 	mla	r3, sl, r0, r3
 8020ebc:	fb0c 3304 	mla	r3, ip, r4, r3
 8020ec0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8020ec4:	2b00      	cmp	r3, #0
 8020ec6:	f000 80cc 	beq.w	8021062 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8020eca:	9808      	ldr	r0, [sp, #32]
 8020ecc:	9c08      	ldr	r4, [sp, #32]
 8020ece:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8020ed2:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8020ed6:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8020eda:	f000 80d5 	beq.w	8021088 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8020ede:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8020ee2:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8020ee6:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8020eea:	fb09 f707 	mul.w	r7, r9, r7
 8020eee:	fb0a fc0c 	mul.w	ip, sl, ip
 8020ef2:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8020ef6:	f107 0b20 	add.w	fp, r7, #32
 8020efa:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8020efe:	44cc      	add	ip, r9
 8020f00:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8020f04:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8020f08:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8020f0c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8020f10:	ea4c 0909 	orr.w	r9, ip, r9
 8020f14:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8020f18:	8847      	ldrh	r7, [r0, #2]
 8020f1a:	d019      	beq.n	8020f50 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 8020f1c:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8020f20:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8020f24:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8020f28:	fb08 f807 	mul.w	r8, r8, r7
 8020f2c:	fb0a fc0c 	mul.w	ip, sl, ip
 8020f30:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8020f34:	f108 0b20 	add.w	fp, r8, #32
 8020f38:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8020f3c:	44bc      	add	ip, r7
 8020f3e:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8020f42:	0a3f      	lsrs	r7, r7, #8
 8020f44:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8020f48:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8020f4c:	ea4c 0707 	orr.w	r7, ip, r7
 8020f50:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8020f54:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8020f58:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8020f5c:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8020f60:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8020f64:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8020f68:	ea4c 0909 	orr.w	r9, ip, r9
 8020f6c:	ea4a 0707 	orr.w	r7, sl, r7
 8020f70:	2d00      	cmp	r5, #0
 8020f72:	f000 808b 	beq.w	802108c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 8020f76:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8020f7a:	3901      	subs	r1, #1
 8020f7c:	0049      	lsls	r1, r1, #1
 8020f7e:	3102      	adds	r1, #2
 8020f80:	eb00 0c01 	add.w	ip, r0, r1
 8020f84:	5a41      	ldrh	r1, [r0, r1]
 8020f86:	980c      	ldr	r0, [sp, #48]	; 0x30
 8020f88:	28ff      	cmp	r0, #255	; 0xff
 8020f8a:	d019      	beq.n	8020fc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 8020f8c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8020f8e:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8020f92:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8020f96:	fb04 fa01 	mul.w	sl, r4, r1
 8020f9a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8020f9e:	fb08 f800 	mul.w	r8, r8, r0
 8020fa2:	f10a 0020 	add.w	r0, sl, #32
 8020fa6:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8020faa:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8020fae:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8020fb2:	4441      	add	r1, r8
 8020fb4:	0a00      	lsrs	r0, r0, #8
 8020fb6:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8020fba:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8020fbe:	4301      	orrs	r1, r0
 8020fc0:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8020fc2:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8020fc6:	2cff      	cmp	r4, #255	; 0xff
 8020fc8:	d01a      	beq.n	8021000 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 8020fca:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8020fce:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8020fd2:	fb04 fa00 	mul.w	sl, r4, r0
 8020fd6:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8020fda:	fb08 f80c 	mul.w	r8, r8, ip
 8020fde:	f10a 0c20 	add.w	ip, sl, #32
 8020fe2:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8020fe6:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8020fea:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8020fee:	4440      	add	r0, r8
 8020ff0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020ff4:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8020ff8:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8020ffc:	ea40 000c 	orr.w	r0, r0, ip
 8021000:	fb15 fc02 	smulbb	ip, r5, r2
 8021004:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8021008:	f1c5 0810 	rsb	r8, r5, #16
 802100c:	eba8 0802 	sub.w	r8, r8, r2
 8021010:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8021014:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8021018:	437a      	muls	r2, r7
 802101a:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 802101e:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8021022:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021026:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802102a:	fb09 2208 	mla	r2, r9, r8, r2
 802102e:	ea4a 0101 	orr.w	r1, sl, r1
 8021032:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8021036:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802103a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802103e:	fb05 2201 	mla	r2, r5, r1, r2
 8021042:	ea4b 0000 	orr.w	r0, fp, r0
 8021046:	fb0c 2200 	mla	r2, ip, r0, r2
 802104a:	0d57      	lsrs	r7, r2, #21
 802104c:	0952      	lsrs	r2, r2, #5
 802104e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021052:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021056:	433a      	orrs	r2, r7
 8021058:	2bff      	cmp	r3, #255	; 0xff
 802105a:	b292      	uxth	r2, r2
 802105c:	d127      	bne.n	80210ae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 802105e:	f8ae 2000 	strh.w	r2, [lr]
 8021062:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8021064:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8021066:	4413      	add	r3, r2
 8021068:	931d      	str	r3, [sp, #116]	; 0x74
 802106a:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 802106c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802106e:	441a      	add	r2, r3
 8021070:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8021072:	921e      	str	r2, [sp, #120]	; 0x78
 8021074:	3b01      	subs	r3, #1
 8021076:	f10e 0e02 	add.w	lr, lr, #2
 802107a:	930f      	str	r3, [sp, #60]	; 0x3c
 802107c:	e627      	b.n	8020cce <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802107e:	fb08 f000 	mul.w	r0, r8, r0
 8021082:	fb09 0303 	mla	r3, r9, r3, r0
 8021086:	e71b      	b.n	8020ec0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 8021088:	46b9      	mov	r9, r7
 802108a:	e743      	b.n	8020f14 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 802108c:	f1c2 0110 	rsb	r1, r2, #16
 8021090:	437a      	muls	r2, r7
 8021092:	fb09 2901 	mla	r9, r9, r1, r2
 8021096:	ea4f 0949 	mov.w	r9, r9, lsl #1
 802109a:	ea4f 5059 	mov.w	r0, r9, lsr #21
 802109e:	ea4f 1259 	mov.w	r2, r9, lsr #5
 80210a2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80210a6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80210aa:	4302      	orrs	r2, r0
 80210ac:	e7d4      	b.n	8021058 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 80210ae:	f8be 7000 	ldrh.w	r7, [lr]
 80210b2:	4c1c      	ldr	r4, [pc, #112]	; (8021124 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 80210b4:	43db      	mvns	r3, r3
 80210b6:	1238      	asrs	r0, r7, #8
 80210b8:	fa5f fc83 	uxtb.w	ip, r3
 80210bc:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80210c0:	10fd      	asrs	r5, r7, #3
 80210c2:	fb00 f00c 	mul.w	r0, r0, ip
 80210c6:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80210ca:	fb05 f10c 	mul.w	r1, r5, ip
 80210ce:	1c45      	adds	r5, r0, #1
 80210d0:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 80210d4:	1215      	asrs	r5, r2, #8
 80210d6:	f025 0507 	bic.w	r5, r5, #7
 80210da:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 80210de:	1c4d      	adds	r5, r1, #1
 80210e0:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 80210e4:	10d1      	asrs	r1, r2, #3
 80210e6:	f021 0103 	bic.w	r1, r1, #3
 80210ea:	00fb      	lsls	r3, r7, #3
 80210ec:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 80210f0:	b2db      	uxtb	r3, r3
 80210f2:	b2c0      	uxtb	r0, r0
 80210f4:	00c9      	lsls	r1, r1, #3
 80210f6:	fb03 f30c 	mul.w	r3, r3, ip
 80210fa:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80210fe:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 8021102:	4308      	orrs	r0, r1
 8021104:	1c59      	adds	r1, r3, #1
 8021106:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 802110a:	00d2      	lsls	r2, r2, #3
 802110c:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8021110:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8021114:	4318      	orrs	r0, r3
 8021116:	f8ae 0000 	strh.w	r0, [lr]
 802111a:	e7a2      	b.n	8021062 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 802111c:	b013      	add	sp, #76	; 0x4c
 802111e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021122:	bf00      	nop
 8021124:	fffff800 	.word	0xfffff800

08021128 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 8021128:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802112c:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 8021130:	fb05 4c03 	mla	ip, r5, r3, r4
 8021134:	2d00      	cmp	r5, #0
 8021136:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 802113a:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 802113e:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8021142:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 8021146:	8808      	ldrh	r0, [r1, #0]
 8021148:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 802114c:	f2c0 80a7 	blt.w	802129e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8021150:	45aa      	cmp	sl, r5
 8021152:	f340 80a4 	ble.w	802129e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8021156:	2c00      	cmp	r4, #0
 8021158:	f2c0 809f 	blt.w	802129a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 802115c:	42a3      	cmp	r3, r4
 802115e:	f340 809c 	ble.w	802129a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8021162:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 8021166:	1c62      	adds	r2, r4, #1
 8021168:	f100 809c 	bmi.w	80212a4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 802116c:	4293      	cmp	r3, r2
 802116e:	f340 8099 	ble.w	80212a4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8021172:	f1b9 0f00 	cmp.w	r9, #0
 8021176:	f000 8095 	beq.w	80212a4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 802117a:	f8be c002 	ldrh.w	ip, [lr, #2]
 802117e:	3501      	adds	r5, #1
 8021180:	f100 8094 	bmi.w	80212ac <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8021184:	45aa      	cmp	sl, r5
 8021186:	f340 8091 	ble.w	80212ac <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 802118a:	2f00      	cmp	r7, #0
 802118c:	f000 808e 	beq.w	80212ac <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8021190:	2c00      	cmp	r4, #0
 8021192:	f2c0 8089 	blt.w	80212a8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8021196:	42a3      	cmp	r3, r4
 8021198:	f340 8086 	ble.w	80212a8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 802119c:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 80211a0:	3401      	adds	r4, #1
 80211a2:	f100 8086 	bmi.w	80212b2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 80211a6:	42a3      	cmp	r3, r4
 80211a8:	f340 8083 	ble.w	80212b2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 80211ac:	f1b9 0f00 	cmp.w	r9, #0
 80211b0:	d07f      	beq.n	80212b2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 80211b2:	3301      	adds	r3, #1
 80211b4:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 80211b8:	ea4f 4408 	mov.w	r4, r8, lsl #16
 80211bc:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80211c0:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 80211c4:	fb19 fe07 	smulbb	lr, r9, r7
 80211c8:	ea44 0808 	orr.w	r8, r4, r8
 80211cc:	ea4f 440c 	mov.w	r4, ip, lsl #16
 80211d0:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 80211d4:	f1c7 0210 	rsb	r2, r7, #16
 80211d8:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80211dc:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80211e0:	ea44 0c0c 	orr.w	ip, r4, ip
 80211e4:	eba2 0209 	sub.w	r2, r2, r9
 80211e8:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 80211ec:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 80211f0:	fb04 f40c 	mul.w	r4, r4, ip
 80211f4:	fb02 4808 	mla	r8, r2, r8, r4
 80211f8:	041a      	lsls	r2, r3, #16
 80211fa:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80211fe:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8021202:	4313      	orrs	r3, r2
 8021204:	042a      	lsls	r2, r5, #16
 8021206:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 802120a:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 802120e:	fb0e 8303 	mla	r3, lr, r3, r8
 8021212:	432a      	orrs	r2, r5
 8021214:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8021218:	fb07 3202 	mla	r2, r7, r2, r3
 802121c:	0d53      	lsrs	r3, r2, #21
 802121e:	0952      	lsrs	r2, r2, #5
 8021220:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021224:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021228:	431a      	orrs	r2, r3
 802122a:	b293      	uxth	r3, r2
 802122c:	b2b4      	uxth	r4, r6
 802122e:	1202      	asrs	r2, r0, #8
 8021230:	43f6      	mvns	r6, r6
 8021232:	b2f6      	uxtb	r6, r6
 8021234:	121d      	asrs	r5, r3, #8
 8021236:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 802123a:	fb12 f206 	smulbb	r2, r2, r6
 802123e:	10c7      	asrs	r7, r0, #3
 8021240:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8021244:	00c0      	lsls	r0, r0, #3
 8021246:	fb05 2504 	mla	r5, r5, r4, r2
 802124a:	b2c0      	uxtb	r0, r0
 802124c:	10da      	asrs	r2, r3, #3
 802124e:	00db      	lsls	r3, r3, #3
 8021250:	b2db      	uxtb	r3, r3
 8021252:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8021256:	fb10 f006 	smulbb	r0, r0, r6
 802125a:	b2ad      	uxth	r5, r5
 802125c:	fb03 0004 	mla	r0, r3, r4, r0
 8021260:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8021264:	fb17 f706 	smulbb	r7, r7, r6
 8021268:	b280      	uxth	r0, r0
 802126a:	1c6b      	adds	r3, r5, #1
 802126c:	fb02 7204 	mla	r2, r2, r4, r7
 8021270:	b292      	uxth	r2, r2
 8021272:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8021276:	1c43      	adds	r3, r0, #1
 8021278:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 802127c:	1c50      	adds	r0, r2, #1
 802127e:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8021282:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8021286:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802128a:	0952      	lsrs	r2, r2, #5
 802128c:	432b      	orrs	r3, r5
 802128e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021292:	4313      	orrs	r3, r2
 8021294:	800b      	strh	r3, [r1, #0]
 8021296:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802129a:	4680      	mov	r8, r0
 802129c:	e763      	b.n	8021166 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 802129e:	4684      	mov	ip, r0
 80212a0:	4680      	mov	r8, r0
 80212a2:	e76c      	b.n	802117e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 80212a4:	4684      	mov	ip, r0
 80212a6:	e76a      	b.n	802117e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 80212a8:	4605      	mov	r5, r0
 80212aa:	e779      	b.n	80211a0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 80212ac:	4603      	mov	r3, r0
 80212ae:	4605      	mov	r5, r0
 80212b0:	e782      	b.n	80211b8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 80212b2:	4603      	mov	r3, r0
 80212b4:	e780      	b.n	80211b8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

080212b6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80212b6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80212ba:	b093      	sub	sp, #76	; 0x4c
 80212bc:	461d      	mov	r5, r3
 80212be:	9210      	str	r2, [sp, #64]	; 0x40
 80212c0:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80212c2:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 80212c6:	920b      	str	r2, [sp, #44]	; 0x2c
 80212c8:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 80212cc:	910a      	str	r1, [sp, #40]	; 0x28
 80212ce:	6859      	ldr	r1, [r3, #4]
 80212d0:	681b      	ldr	r3, [r3, #0]
 80212d2:	9011      	str	r0, [sp, #68]	; 0x44
 80212d4:	fb01 2707 	mla	r7, r1, r7, r2
 80212d8:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 80212dc:	9307      	str	r3, [sp, #28]
 80212de:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80212e0:	681b      	ldr	r3, [r3, #0]
 80212e2:	9309      	str	r3, [sp, #36]	; 0x24
 80212e4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80212e6:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 80212ea:	43db      	mvns	r3, r3
 80212ec:	b2db      	uxtb	r3, r3
 80212ee:	9308      	str	r3, [sp, #32]
 80212f0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80212f2:	2b00      	cmp	r3, #0
 80212f4:	dc03      	bgt.n	80212fe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80212f6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80212f8:	2b00      	cmp	r3, #0
 80212fa:	f340 8203 	ble.w	8021704 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80212fe:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021300:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021304:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021308:	1e48      	subs	r0, r1, #1
 802130a:	f102 3cff 	add.w	ip, r2, #4294967295
 802130e:	2d00      	cmp	r5, #0
 8021310:	f340 80da 	ble.w	80214c8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8021314:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8021318:	ea4f 4326 	mov.w	r3, r6, asr #16
 802131c:	d406      	bmi.n	802132c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 802131e:	4586      	cmp	lr, r0
 8021320:	da04      	bge.n	802132c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8021322:	2b00      	cmp	r3, #0
 8021324:	db02      	blt.n	802132c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8021326:	4563      	cmp	r3, ip
 8021328:	f2c0 80cf 	blt.w	80214ca <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 802132c:	f11e 0e01 	adds.w	lr, lr, #1
 8021330:	f100 80c1 	bmi.w	80214b6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8021334:	4571      	cmp	r1, lr
 8021336:	f2c0 80be 	blt.w	80214b6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 802133a:	3301      	adds	r3, #1
 802133c:	f100 80bb 	bmi.w	80214b6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8021340:	429a      	cmp	r2, r3
 8021342:	f2c0 80b8 	blt.w	80214b6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8021346:	f8dd 801c 	ldr.w	r8, [sp, #28]
 802134a:	46a9      	mov	r9, r5
 802134c:	f1b9 0f00 	cmp.w	r9, #0
 8021350:	f340 80d8 	ble.w	8021504 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8021354:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021356:	1421      	asrs	r1, r4, #16
 8021358:	ea4f 4026 	mov.w	r0, r6, asr #16
 802135c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8021360:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8021364:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8021368:	f100 8111 	bmi.w	802158e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 802136c:	f10e 3aff 	add.w	sl, lr, #4294967295
 8021370:	4551      	cmp	r1, sl
 8021372:	f280 810c 	bge.w	802158e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8021376:	2800      	cmp	r0, #0
 8021378:	f2c0 8109 	blt.w	802158e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 802137c:	f103 3aff 	add.w	sl, r3, #4294967295
 8021380:	4550      	cmp	r0, sl
 8021382:	f280 8104 	bge.w	802158e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8021386:	fa0f f38e 	sxth.w	r3, lr
 802138a:	fb00 1103 	mla	r1, r0, r3, r1
 802138e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8021390:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 8021394:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 8021398:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 802139c:	f1bc 0f00 	cmp.w	ip, #0
 80213a0:	d007      	beq.n	80213b2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 80213a2:	005b      	lsls	r3, r3, #1
 80213a4:	eb0a 0003 	add.w	r0, sl, r3
 80213a8:	f83a 3003 	ldrh.w	r3, [sl, r3]
 80213ac:	930c      	str	r3, [sp, #48]	; 0x30
 80213ae:	8843      	ldrh	r3, [r0, #2]
 80213b0:	930d      	str	r3, [sp, #52]	; 0x34
 80213b2:	ea4f 400e 	mov.w	r0, lr, lsl #16
 80213b6:	fb12 f30c 	smulbb	r3, r2, ip
 80213ba:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80213be:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80213c2:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80213c6:	10db      	asrs	r3, r3, #3
 80213c8:	ea40 000e 	orr.w	r0, r0, lr
 80213cc:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80213d0:	f1cc 0e10 	rsb	lr, ip, #16
 80213d4:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80213d8:	ebae 0e02 	sub.w	lr, lr, r2
 80213dc:	ea4a 0101 	orr.w	r1, sl, r1
 80213e0:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80213e4:	4351      	muls	r1, r2
 80213e6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80213e8:	9f08      	ldr	r7, [sp, #32]
 80213ea:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 80213ee:	fb0e 1e00 	mla	lr, lr, r0, r1
 80213f2:	0410      	lsls	r0, r2, #16
 80213f4:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80213f8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80213fc:	4310      	orrs	r0, r2
 80213fe:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8021400:	990c      	ldr	r1, [sp, #48]	; 0x30
 8021402:	0412      	lsls	r2, r2, #16
 8021404:	fb03 e000 	mla	r0, r3, r0, lr
 8021408:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 802140c:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8021410:	ea42 020e 	orr.w	r2, r2, lr
 8021414:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8021418:	fb03 0302 	mla	r3, r3, r2, r0
 802141c:	0d5a      	lsrs	r2, r3, #21
 802141e:	095b      	lsrs	r3, r3, #5
 8021420:	f8b8 0000 	ldrh.w	r0, [r8]
 8021424:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021428:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 802142c:	4313      	orrs	r3, r2
 802142e:	b29b      	uxth	r3, r3
 8021430:	1201      	asrs	r1, r0, #8
 8021432:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8021436:	ea4f 2c23 	mov.w	ip, r3, asr #8
 802143a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 802143e:	fb11 f107 	smulbb	r1, r1, r7
 8021442:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8021446:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 802144a:	00c0      	lsls	r0, r0, #3
 802144c:	fb0c 1c02 	mla	ip, ip, r2, r1
 8021450:	b2c0      	uxtb	r0, r0
 8021452:	10d9      	asrs	r1, r3, #3
 8021454:	00db      	lsls	r3, r3, #3
 8021456:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 802145a:	b2db      	uxtb	r3, r3
 802145c:	fb10 f007 	smulbb	r0, r0, r7
 8021460:	fa1f fc8c 	uxth.w	ip, ip
 8021464:	fb03 0302 	mla	r3, r3, r2, r0
 8021468:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 802146c:	fb1e fe07 	smulbb	lr, lr, r7
 8021470:	fb01 e102 	mla	r1, r1, r2, lr
 8021474:	b29a      	uxth	r2, r3
 8021476:	f10c 0301 	add.w	r3, ip, #1
 802147a:	b289      	uxth	r1, r1
 802147c:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8021480:	1c53      	adds	r3, r2, #1
 8021482:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021486:	1c4a      	adds	r2, r1, #1
 8021488:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 802148c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8021490:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8021494:	0949      	lsrs	r1, r1, #5
 8021496:	ea43 030c 	orr.w	r3, r3, ip
 802149a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802149e:	430b      	orrs	r3, r1
 80214a0:	f8a8 3000 	strh.w	r3, [r8]
 80214a4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80214a6:	441c      	add	r4, r3
 80214a8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80214aa:	f108 0802 	add.w	r8, r8, #2
 80214ae:	441e      	add	r6, r3
 80214b0:	f109 39ff 	add.w	r9, r9, #4294967295
 80214b4:	e74a      	b.n	802134c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80214b6:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80214b8:	441c      	add	r4, r3
 80214ba:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80214bc:	441e      	add	r6, r3
 80214be:	9b07      	ldr	r3, [sp, #28]
 80214c0:	3302      	adds	r3, #2
 80214c2:	3d01      	subs	r5, #1
 80214c4:	9307      	str	r3, [sp, #28]
 80214c6:	e722      	b.n	802130e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80214c8:	d022      	beq.n	8021510 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 80214ca:	981f      	ldr	r0, [sp, #124]	; 0x7c
 80214cc:	1e6b      	subs	r3, r5, #1
 80214ce:	fb00 4003 	mla	r0, r0, r3, r4
 80214d2:	1400      	asrs	r0, r0, #16
 80214d4:	f53f af37 	bmi.w	8021346 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80214d8:	3901      	subs	r1, #1
 80214da:	4288      	cmp	r0, r1
 80214dc:	f6bf af33 	bge.w	8021346 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80214e0:	9920      	ldr	r1, [sp, #128]	; 0x80
 80214e2:	fb01 6303 	mla	r3, r1, r3, r6
 80214e6:	141b      	asrs	r3, r3, #16
 80214e8:	f53f af2d 	bmi.w	8021346 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80214ec:	3a01      	subs	r2, #1
 80214ee:	4293      	cmp	r3, r2
 80214f0:	f6bf af29 	bge.w	8021346 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80214f4:	f8dd 901c 	ldr.w	r9, [sp, #28]
 80214f8:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 80214fc:	46a8      	mov	r8, r5
 80214fe:	f1b8 0f00 	cmp.w	r8, #0
 8021502:	dc5e      	bgt.n	80215c2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8021504:	9b07      	ldr	r3, [sp, #28]
 8021506:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 802150a:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 802150e:	9307      	str	r3, [sp, #28]
 8021510:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021512:	2b00      	cmp	r3, #0
 8021514:	f340 80f6 	ble.w	8021704 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8021518:	ee30 0a04 	vadd.f32	s0, s0, s8
 802151c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8021520:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8021524:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8021526:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802152a:	ee31 1a05 	vadd.f32	s2, s2, s10
 802152e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8021532:	eef0 6a62 	vmov.f32	s13, s5
 8021536:	ee61 7a27 	vmul.f32	s15, s2, s15
 802153a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802153e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8021542:	ee16 4a90 	vmov	r4, s13
 8021546:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802154a:	eef0 6a43 	vmov.f32	s13, s6
 802154e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8021552:	ee12 2a90 	vmov	r2, s5
 8021556:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802155a:	fb92 f3f3 	sdiv	r3, r2, r3
 802155e:	ee13 2a10 	vmov	r2, s6
 8021562:	931f      	str	r3, [sp, #124]	; 0x7c
 8021564:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8021566:	fb92 f3f3 	sdiv	r3, r2, r3
 802156a:	9320      	str	r3, [sp, #128]	; 0x80
 802156c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802156e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8021570:	3b01      	subs	r3, #1
 8021572:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021576:	930a      	str	r3, [sp, #40]	; 0x28
 8021578:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802157a:	ee16 6a90 	vmov	r6, s13
 802157e:	bf14      	ite	ne
 8021580:	461d      	movne	r5, r3
 8021582:	4615      	moveq	r5, r2
 8021584:	eeb0 3a67 	vmov.f32	s6, s15
 8021588:	eef0 2a47 	vmov.f32	s5, s14
 802158c:	e6b0      	b.n	80212f0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 802158e:	f111 0a01 	adds.w	sl, r1, #1
 8021592:	d487      	bmi.n	80214a4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8021594:	45d6      	cmp	lr, sl
 8021596:	db85      	blt.n	80214a4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8021598:	f110 0a01 	adds.w	sl, r0, #1
 802159c:	d482      	bmi.n	80214a4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 802159e:	4553      	cmp	r3, sl
 80215a0:	db80      	blt.n	80214a4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80215a2:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 80215a4:	9101      	str	r1, [sp, #4]
 80215a6:	b21b      	sxth	r3, r3
 80215a8:	e9cd 0202 	strd	r0, r2, [sp, #8]
 80215ac:	9300      	str	r3, [sp, #0]
 80215ae:	e9cd c704 	strd	ip, r7, [sp, #16]
 80215b2:	fa0f f38e 	sxth.w	r3, lr
 80215b6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80215b8:	9811      	ldr	r0, [sp, #68]	; 0x44
 80215ba:	4641      	mov	r1, r8
 80215bc:	f7ff fdb4 	bl	8021128 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 80215c0:	e770      	b.n	80214a4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80215c2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80215c4:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80215c6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80215ca:	1430      	asrs	r0, r6, #16
 80215cc:	1423      	asrs	r3, r4, #16
 80215ce:	fb01 3000 	mla	r0, r1, r0, r3
 80215d2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80215d4:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 80215d8:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 80215dc:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 80215e0:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80215e4:	8858      	ldrh	r0, [r3, #2]
 80215e6:	f1be 0f00 	cmp.w	lr, #0
 80215ea:	d00b      	beq.n	8021604 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 80215ec:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 80215f0:	3901      	subs	r1, #1
 80215f2:	0049      	lsls	r1, r1, #1
 80215f4:	3102      	adds	r1, #2
 80215f6:	eb03 0b01 	add.w	fp, r3, r1
 80215fa:	5a5b      	ldrh	r3, [r3, r1]
 80215fc:	930e      	str	r3, [sp, #56]	; 0x38
 80215fe:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8021602:	930f      	str	r3, [sp, #60]	; 0x3c
 8021604:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8021608:	fb12 f30e 	smulbb	r3, r2, lr
 802160c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8021610:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8021614:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 8021618:	10db      	asrs	r3, r3, #3
 802161a:	ea41 010c 	orr.w	r1, r1, ip
 802161e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8021622:	f1ce 0c10 	rsb	ip, lr, #16
 8021626:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802162a:	ebac 0c02 	sub.w	ip, ip, r2
 802162e:	ea4b 0000 	orr.w	r0, fp, r0
 8021632:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8021636:	4350      	muls	r0, r2
 8021638:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802163a:	9f08      	ldr	r7, [sp, #32]
 802163c:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8021640:	fb0c 0c01 	mla	ip, ip, r1, r0
 8021644:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8021648:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 802164c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 802164e:	980e      	ldr	r0, [sp, #56]	; 0x38
 8021650:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8021654:	0412      	lsls	r2, r2, #16
 8021656:	ea4b 0101 	orr.w	r1, fp, r1
 802165a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802165e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8021662:	fb03 c101 	mla	r1, r3, r1, ip
 8021666:	4302      	orrs	r2, r0
 8021668:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 802166c:	fb03 1202 	mla	r2, r3, r2, r1
 8021670:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8021674:	0952      	lsrs	r2, r2, #5
 8021676:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 802167a:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 802167e:	f8b9 2000 	ldrh.w	r2, [r9]
 8021682:	ea4b 0303 	orr.w	r3, fp, r3
 8021686:	b29b      	uxth	r3, r3
 8021688:	1211      	asrs	r1, r2, #8
 802168a:	1218      	asrs	r0, r3, #8
 802168c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8021690:	fb11 f107 	smulbb	r1, r1, r7
 8021694:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8021698:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 802169c:	00d2      	lsls	r2, r2, #3
 802169e:	fb00 100a 	mla	r0, r0, sl, r1
 80216a2:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 80216a6:	10d9      	asrs	r1, r3, #3
 80216a8:	b2d2      	uxtb	r2, r2
 80216aa:	00db      	lsls	r3, r3, #3
 80216ac:	fb1c fc07 	smulbb	ip, ip, r7
 80216b0:	fb12 f207 	smulbb	r2, r2, r7
 80216b4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80216b8:	b2db      	uxtb	r3, r3
 80216ba:	b280      	uxth	r0, r0
 80216bc:	fb01 c10a 	mla	r1, r1, sl, ip
 80216c0:	fb03 230a 	mla	r3, r3, sl, r2
 80216c4:	b29b      	uxth	r3, r3
 80216c6:	b289      	uxth	r1, r1
 80216c8:	1c42      	adds	r2, r0, #1
 80216ca:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80216ce:	f101 0c01 	add.w	ip, r1, #1
 80216d2:	1c5a      	adds	r2, r3, #1
 80216d4:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80216d8:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 80216dc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80216de:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80216e2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80216e6:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80216ea:	4310      	orrs	r0, r2
 80216ec:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80216f0:	441c      	add	r4, r3
 80216f2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80216f4:	ea40 000c 	orr.w	r0, r0, ip
 80216f8:	f829 0b02 	strh.w	r0, [r9], #2
 80216fc:	441e      	add	r6, r3
 80216fe:	f108 38ff 	add.w	r8, r8, #4294967295
 8021702:	e6fc      	b.n	80214fe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8021704:	b013      	add	sp, #76	; 0x4c
 8021706:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802170a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 802170a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 802170e:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 8021712:	fb0e 4703 	mla	r7, lr, r3, r4
 8021716:	f1be 0f00 	cmp.w	lr, #0
 802171a:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 802171e:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 8021722:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 8021726:	8808      	ldrh	r0, [r1, #0]
 8021728:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 802172c:	db60      	blt.n	80217f0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 802172e:	45f1      	cmp	r9, lr
 8021730:	dd5e      	ble.n	80217f0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8021732:	2c00      	cmp	r4, #0
 8021734:	db5a      	blt.n	80217ec <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8021736:	42a3      	cmp	r3, r4
 8021738:	dd58      	ble.n	80217ec <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 802173a:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 802173e:	1c62      	adds	r2, r4, #1
 8021740:	d459      	bmi.n	80217f6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8021742:	4293      	cmp	r3, r2
 8021744:	dd57      	ble.n	80217f6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8021746:	2d00      	cmp	r5, #0
 8021748:	d055      	beq.n	80217f6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 802174a:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 802174e:	f11e 0e01 	adds.w	lr, lr, #1
 8021752:	d454      	bmi.n	80217fe <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8021754:	45f1      	cmp	r9, lr
 8021756:	dd52      	ble.n	80217fe <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8021758:	2e00      	cmp	r6, #0
 802175a:	d050      	beq.n	80217fe <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 802175c:	2c00      	cmp	r4, #0
 802175e:	db4c      	blt.n	80217fa <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8021760:	42a3      	cmp	r3, r4
 8021762:	dd4a      	ble.n	80217fa <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8021764:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 8021768:	3401      	adds	r4, #1
 802176a:	d405      	bmi.n	8021778 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 802176c:	42a3      	cmp	r3, r4
 802176e:	dd03      	ble.n	8021778 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8021770:	b115      	cbz	r5, 8021778 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8021772:	3301      	adds	r3, #1
 8021774:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 8021778:	ea4f 430c 	mov.w	r3, ip, lsl #16
 802177c:	fb15 f406 	smulbb	r4, r5, r6
 8021780:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8021784:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8021788:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 802178c:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8021790:	ea43 0c0c 	orr.w	ip, r3, ip
 8021794:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8021798:	f1c6 0310 	rsb	r3, r6, #16
 802179c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80217a0:	1b5b      	subs	r3, r3, r5
 80217a2:	ea4e 0707 	orr.w	r7, lr, r7
 80217a6:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 80217aa:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80217ae:	437d      	muls	r5, r7
 80217b0:	fb03 5c0c 	mla	ip, r3, ip, r5
 80217b4:	0403      	lsls	r3, r0, #16
 80217b6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80217ba:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80217be:	4318      	orrs	r0, r3
 80217c0:	0413      	lsls	r3, r2, #16
 80217c2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80217c6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80217ca:	4313      	orrs	r3, r2
 80217cc:	fb04 c000 	mla	r0, r4, r0, ip
 80217d0:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 80217d4:	fb06 0003 	mla	r0, r6, r3, r0
 80217d8:	0d43      	lsrs	r3, r0, #21
 80217da:	0940      	lsrs	r0, r0, #5
 80217dc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80217e0:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80217e4:	4318      	orrs	r0, r3
 80217e6:	8008      	strh	r0, [r1, #0]
 80217e8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80217ec:	4684      	mov	ip, r0
 80217ee:	e7a6      	b.n	802173e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 80217f0:	4607      	mov	r7, r0
 80217f2:	4684      	mov	ip, r0
 80217f4:	e7ab      	b.n	802174e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 80217f6:	4607      	mov	r7, r0
 80217f8:	e7a9      	b.n	802174e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 80217fa:	4602      	mov	r2, r0
 80217fc:	e7b4      	b.n	8021768 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 80217fe:	4602      	mov	r2, r0
 8021800:	e7ba      	b.n	8021778 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

08021802 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021802:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021806:	b08f      	sub	sp, #60	; 0x3c
 8021808:	461d      	mov	r5, r3
 802180a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802180c:	920c      	str	r2, [sp, #48]	; 0x30
 802180e:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 8021812:	9107      	str	r1, [sp, #28]
 8021814:	6859      	ldr	r1, [r3, #4]
 8021816:	681b      	ldr	r3, [r3, #0]
 8021818:	900d      	str	r0, [sp, #52]	; 0x34
 802181a:	fb01 2707 	mla	r7, r1, r7, r2
 802181e:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 8021822:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021824:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 8021828:	f8d3 8000 	ldr.w	r8, [r3]
 802182c:	9b07      	ldr	r3, [sp, #28]
 802182e:	2b00      	cmp	r3, #0
 8021830:	dc03      	bgt.n	802183a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8021832:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021834:	2b00      	cmp	r3, #0
 8021836:	f340 8181 	ble.w	8021b3c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 802183a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802183c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021840:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021844:	1e48      	subs	r0, r1, #1
 8021846:	f102 3cff 	add.w	ip, r2, #4294967295
 802184a:	2d00      	cmp	r5, #0
 802184c:	f340 809b 	ble.w	8021986 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 8021850:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8021854:	ea4f 4326 	mov.w	r3, r6, asr #16
 8021858:	d406      	bmi.n	8021868 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 802185a:	4586      	cmp	lr, r0
 802185c:	da04      	bge.n	8021868 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 802185e:	2b00      	cmp	r3, #0
 8021860:	db02      	blt.n	8021868 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8021862:	4563      	cmp	r3, ip
 8021864:	f2c0 8090 	blt.w	8021988 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8021868:	f11e 0e01 	adds.w	lr, lr, #1
 802186c:	f100 8084 	bmi.w	8021978 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8021870:	4571      	cmp	r1, lr
 8021872:	f2c0 8081 	blt.w	8021978 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8021876:	3301      	adds	r3, #1
 8021878:	d47e      	bmi.n	8021978 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 802187a:	429a      	cmp	r2, r3
 802187c:	db7c      	blt.n	8021978 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 802187e:	46aa      	mov	sl, r5
 8021880:	46b9      	mov	r9, r7
 8021882:	f1ba 0f00 	cmp.w	sl, #0
 8021886:	f340 8099 	ble.w	80219bc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 802188a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802188c:	1421      	asrs	r1, r4, #16
 802188e:	ea4f 4026 	mov.w	r0, r6, asr #16
 8021892:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8021896:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 802189a:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 802189e:	f100 80d0 	bmi.w	8021a42 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 80218a2:	f10e 3bff 	add.w	fp, lr, #4294967295
 80218a6:	4559      	cmp	r1, fp
 80218a8:	f280 80cb 	bge.w	8021a42 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 80218ac:	2800      	cmp	r0, #0
 80218ae:	f2c0 80c8 	blt.w	8021a42 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 80218b2:	f103 3bff 	add.w	fp, r3, #4294967295
 80218b6:	4558      	cmp	r0, fp
 80218b8:	f280 80c3 	bge.w	8021a42 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 80218bc:	fa0f fe8e 	sxth.w	lr, lr
 80218c0:	fb00 110e 	mla	r1, r0, lr, r1
 80218c4:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 80218c8:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 80218cc:	8841      	ldrh	r1, [r0, #2]
 80218ce:	f1bc 0f00 	cmp.w	ip, #0
 80218d2:	d00b      	beq.n	80218ec <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 80218d4:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 80218d8:	3b01      	subs	r3, #1
 80218da:	005b      	lsls	r3, r3, #1
 80218dc:	3302      	adds	r3, #2
 80218de:	eb00 0e03 	add.w	lr, r0, r3
 80218e2:	5ac3      	ldrh	r3, [r0, r3]
 80218e4:	9308      	str	r3, [sp, #32]
 80218e6:	f8be 3002 	ldrh.w	r3, [lr, #2]
 80218ea:	9309      	str	r3, [sp, #36]	; 0x24
 80218ec:	ea4f 400b 	mov.w	r0, fp, lsl #16
 80218f0:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80218f4:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 80218f8:	ea40 000b 	orr.w	r0, r0, fp
 80218fc:	fb12 f30c 	smulbb	r3, r2, ip
 8021900:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8021904:	10db      	asrs	r3, r3, #3
 8021906:	f1cc 0e10 	rsb	lr, ip, #16
 802190a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802190e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8021912:	ebae 0e02 	sub.w	lr, lr, r2
 8021916:	ea4b 0101 	orr.w	r1, fp, r1
 802191a:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 802191e:	4351      	muls	r1, r2
 8021920:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8021922:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8021926:	fb0e 1e00 	mla	lr, lr, r0, r1
 802192a:	0410      	lsls	r0, r2, #16
 802192c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8021930:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021934:	4310      	orrs	r0, r2
 8021936:	9a08      	ldr	r2, [sp, #32]
 8021938:	9908      	ldr	r1, [sp, #32]
 802193a:	0412      	lsls	r2, r2, #16
 802193c:	fb03 e000 	mla	r0, r3, r0, lr
 8021940:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8021944:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8021948:	ea42 020e 	orr.w	r2, r2, lr
 802194c:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8021950:	fb03 0302 	mla	r3, r3, r2, r0
 8021954:	0d5a      	lsrs	r2, r3, #21
 8021956:	095b      	lsrs	r3, r3, #5
 8021958:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802195c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8021960:	4313      	orrs	r3, r2
 8021962:	f8a9 3000 	strh.w	r3, [r9]
 8021966:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8021968:	441c      	add	r4, r3
 802196a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802196c:	f109 0902 	add.w	r9, r9, #2
 8021970:	441e      	add	r6, r3
 8021972:	f10a 3aff 	add.w	sl, sl, #4294967295
 8021976:	e784      	b.n	8021882 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8021978:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 802197a:	441c      	add	r4, r3
 802197c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802197e:	3d01      	subs	r5, #1
 8021980:	441e      	add	r6, r3
 8021982:	3702      	adds	r7, #2
 8021984:	e761      	b.n	802184a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8021986:	d01d      	beq.n	80219c4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8021988:	981b      	ldr	r0, [sp, #108]	; 0x6c
 802198a:	1e6b      	subs	r3, r5, #1
 802198c:	fb00 4003 	mla	r0, r0, r3, r4
 8021990:	1400      	asrs	r0, r0, #16
 8021992:	f53f af74 	bmi.w	802187e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8021996:	3901      	subs	r1, #1
 8021998:	4288      	cmp	r0, r1
 802199a:	f6bf af70 	bge.w	802187e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 802199e:	991c      	ldr	r1, [sp, #112]	; 0x70
 80219a0:	fb01 6303 	mla	r3, r1, r3, r6
 80219a4:	141b      	asrs	r3, r3, #16
 80219a6:	f53f af6a 	bmi.w	802187e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80219aa:	3a01      	subs	r2, #1
 80219ac:	4293      	cmp	r3, r2
 80219ae:	f6bf af66 	bge.w	802187e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80219b2:	46a9      	mov	r9, r5
 80219b4:	46ba      	mov	sl, r7
 80219b6:	f1b9 0f00 	cmp.w	r9, #0
 80219ba:	dc5a      	bgt.n	8021a72 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 80219bc:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80219c0:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 80219c4:	9b07      	ldr	r3, [sp, #28]
 80219c6:	2b00      	cmp	r3, #0
 80219c8:	f340 80b8 	ble.w	8021b3c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 80219cc:	ee30 0a04 	vadd.f32	s0, s0, s8
 80219d0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80219d4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80219d8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80219da:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80219de:	ee31 1a05 	vadd.f32	s2, s2, s10
 80219e2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80219e6:	eef0 6a62 	vmov.f32	s13, s5
 80219ea:	ee61 7a27 	vmul.f32	s15, s2, s15
 80219ee:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80219f2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80219f6:	ee16 4a90 	vmov	r4, s13
 80219fa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80219fe:	eef0 6a43 	vmov.f32	s13, s6
 8021a02:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8021a06:	ee12 2a90 	vmov	r2, s5
 8021a0a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8021a0e:	fb92 f3f3 	sdiv	r3, r2, r3
 8021a12:	ee13 2a10 	vmov	r2, s6
 8021a16:	931b      	str	r3, [sp, #108]	; 0x6c
 8021a18:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8021a1a:	fb92 f3f3 	sdiv	r3, r2, r3
 8021a1e:	931c      	str	r3, [sp, #112]	; 0x70
 8021a20:	9b07      	ldr	r3, [sp, #28]
 8021a22:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8021a24:	3b01      	subs	r3, #1
 8021a26:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021a2a:	9307      	str	r3, [sp, #28]
 8021a2c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8021a2e:	ee16 6a90 	vmov	r6, s13
 8021a32:	bf14      	ite	ne
 8021a34:	461d      	movne	r5, r3
 8021a36:	4615      	moveq	r5, r2
 8021a38:	eeb0 3a67 	vmov.f32	s6, s15
 8021a3c:	eef0 2a47 	vmov.f32	s5, s14
 8021a40:	e6f4      	b.n	802182c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8021a42:	f111 0b01 	adds.w	fp, r1, #1
 8021a46:	d48e      	bmi.n	8021966 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8021a48:	45de      	cmp	lr, fp
 8021a4a:	db8c      	blt.n	8021966 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8021a4c:	f110 0b01 	adds.w	fp, r0, #1
 8021a50:	d489      	bmi.n	8021966 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8021a52:	455b      	cmp	r3, fp
 8021a54:	db87      	blt.n	8021966 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8021a56:	b21b      	sxth	r3, r3
 8021a58:	e9cd 1001 	strd	r1, r0, [sp, #4]
 8021a5c:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 8021a60:	9300      	str	r3, [sp, #0]
 8021a62:	4642      	mov	r2, r8
 8021a64:	fa0f f38e 	sxth.w	r3, lr
 8021a68:	4649      	mov	r1, r9
 8021a6a:	980d      	ldr	r0, [sp, #52]	; 0x34
 8021a6c:	f7ff fe4d 	bl	802170a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8021a70:	e779      	b.n	8021966 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8021a72:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021a74:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8021a78:	1420      	asrs	r0, r4, #16
 8021a7a:	1431      	asrs	r1, r6, #16
 8021a7c:	fb03 0101 	mla	r1, r3, r1, r0
 8021a80:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8021a84:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8021a88:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 8021a8c:	8841      	ldrh	r1, [r0, #2]
 8021a8e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8021a92:	f1be 0f00 	cmp.w	lr, #0
 8021a96:	d00b      	beq.n	8021ab0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8021a98:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8021a9c:	3b01      	subs	r3, #1
 8021a9e:	005b      	lsls	r3, r3, #1
 8021aa0:	3302      	adds	r3, #2
 8021aa2:	eb00 0b03 	add.w	fp, r0, r3
 8021aa6:	5ac3      	ldrh	r3, [r0, r3]
 8021aa8:	930a      	str	r3, [sp, #40]	; 0x28
 8021aaa:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8021aae:	930b      	str	r3, [sp, #44]	; 0x2c
 8021ab0:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8021ab4:	fb12 f30e 	smulbb	r3, r2, lr
 8021ab8:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8021abc:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8021ac0:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8021ac4:	10db      	asrs	r3, r3, #3
 8021ac6:	ea40 000c 	orr.w	r0, r0, ip
 8021aca:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8021ace:	f1ce 0c10 	rsb	ip, lr, #16
 8021ad2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8021ad6:	ebac 0c02 	sub.w	ip, ip, r2
 8021ada:	ea4b 0101 	orr.w	r1, fp, r1
 8021ade:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8021ae2:	4351      	muls	r1, r2
 8021ae4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8021ae6:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8021aea:	fb0c 1c00 	mla	ip, ip, r0, r1
 8021aee:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8021af2:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 8021af6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8021af8:	990a      	ldr	r1, [sp, #40]	; 0x28
 8021afa:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8021afe:	0412      	lsls	r2, r2, #16
 8021b00:	ea4b 0000 	orr.w	r0, fp, r0
 8021b04:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8021b08:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 8021b0c:	fb03 c000 	mla	r0, r3, r0, ip
 8021b10:	ea42 0b0b 	orr.w	fp, r2, fp
 8021b14:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8021b18:	fb03 000b 	mla	r0, r3, fp, r0
 8021b1c:	0d43      	lsrs	r3, r0, #21
 8021b1e:	0940      	lsrs	r0, r0, #5
 8021b20:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021b24:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8021b28:	4318      	orrs	r0, r3
 8021b2a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8021b2c:	f82a 0b02 	strh.w	r0, [sl], #2
 8021b30:	441c      	add	r4, r3
 8021b32:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8021b34:	f109 39ff 	add.w	r9, r9, #4294967295
 8021b38:	441e      	add	r6, r3
 8021b3a:	e73c      	b.n	80219b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8021b3c:	b00f      	add	sp, #60	; 0x3c
 8021b3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08021b42 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 8021b42:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021b46:	b085      	sub	sp, #20
 8021b48:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8021b4c:	9102      	str	r1, [sp, #8]
 8021b4e:	2c00      	cmp	r4, #0
 8021b50:	fb04 7103 	mla	r1, r4, r3, r7
 8021b54:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8021b58:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8021b5c:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8021b60:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8021b64:	f2c0 811b 	blt.w	8021d9e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8021b68:	45a6      	cmp	lr, r4
 8021b6a:	f340 8118 	ble.w	8021d9e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8021b6e:	2f00      	cmp	r7, #0
 8021b70:	f2c0 8113 	blt.w	8021d9a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8021b74:	42bb      	cmp	r3, r7
 8021b76:	f340 8110 	ble.w	8021d9a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8021b7a:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8021b7e:	1c7a      	adds	r2, r7, #1
 8021b80:	f100 8110 	bmi.w	8021da4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8021b84:	4293      	cmp	r3, r2
 8021b86:	f340 810d 	ble.w	8021da4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8021b8a:	2e00      	cmp	r6, #0
 8021b8c:	f000 810c 	beq.w	8021da8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 8021b90:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8021b94:	3401      	adds	r4, #1
 8021b96:	f100 810b 	bmi.w	8021db0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8021b9a:	45a6      	cmp	lr, r4
 8021b9c:	f340 8108 	ble.w	8021db0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8021ba0:	2800      	cmp	r0, #0
 8021ba2:	f000 8108 	beq.w	8021db6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 8021ba6:	2f00      	cmp	r7, #0
 8021ba8:	f2c0 8100 	blt.w	8021dac <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8021bac:	42bb      	cmp	r3, r7
 8021bae:	f340 80fd 	ble.w	8021dac <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8021bb2:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8021bb6:	3701      	adds	r7, #1
 8021bb8:	f100 8100 	bmi.w	8021dbc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8021bbc:	42bb      	cmp	r3, r7
 8021bbe:	f340 80fd 	ble.w	8021dbc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8021bc2:	2e00      	cmp	r6, #0
 8021bc4:	f000 80fc 	beq.w	8021dc0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 8021bc8:	3301      	adds	r3, #1
 8021bca:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 8021bce:	b2b6      	uxth	r6, r6
 8021bd0:	b280      	uxth	r0, r0
 8021bd2:	fb00 fe06 	mul.w	lr, r0, r6
 8021bd6:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8021bda:	0136      	lsls	r6, r6, #4
 8021bdc:	eba6 070e 	sub.w	r7, r6, lr
 8021be0:	b280      	uxth	r0, r0
 8021be2:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8021be6:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8021bea:	b2bf      	uxth	r7, r7
 8021bec:	1a1b      	subs	r3, r3, r0
 8021bee:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8021bf2:	b29b      	uxth	r3, r3
 8021bf4:	fb0a f607 	mul.w	r6, sl, r7
 8021bf8:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8021bfc:	fb0b 6603 	mla	r6, fp, r3, r6
 8021c00:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8021c04:	fb00 6609 	mla	r6, r0, r9, r6
 8021c08:	fb0e 6608 	mla	r6, lr, r8, r6
 8021c0c:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8021c10:	9600      	str	r6, [sp, #0]
 8021c12:	2e00      	cmp	r6, #0
 8021c14:	f000 80be 	beq.w	8021d94 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 8021c18:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8021c1c:	fb0b fc0c 	mul.w	ip, fp, ip
 8021c20:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8021c24:	fb0b f505 	mul.w	r5, fp, r5
 8021c28:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8021c2c:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8021c30:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8021c34:	44dc      	add	ip, fp
 8021c36:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021c3a:	9501      	str	r5, [sp, #4]
 8021c3c:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8021c40:	9503      	str	r5, [sp, #12]
 8021c42:	9d01      	ldr	r5, [sp, #4]
 8021c44:	9e02      	ldr	r6, [sp, #8]
 8021c46:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8021c4a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8021c4e:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8021c52:	fb0a fc0c 	mul.w	ip, sl, ip
 8021c56:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8021c5a:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8021c5e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8021c62:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8021c66:	4465      	add	r5, ip
 8021c68:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8021c6c:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8021c70:	fb09 fc0c 	mul.w	ip, r9, ip
 8021c74:	fb09 f904 	mul.w	r9, r9, r4
 8021c78:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8021c7c:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8021c80:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8021c84:	fb08 f404 	mul.w	r4, r8, r4
 8021c88:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8021c8c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8021c90:	fb08 f802 	mul.w	r8, r8, r2
 8021c94:	fb0a fa01 	mul.w	sl, sl, r1
 8021c98:	0a22      	lsrs	r2, r4, #8
 8021c9a:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8021c9e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8021ca2:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8021ca6:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8021caa:	4414      	add	r4, r2
 8021cac:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8021cb0:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8021cb4:	0a2d      	lsrs	r5, r5, #8
 8021cb6:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8021cba:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8021cbe:	9a03      	ldr	r2, [sp, #12]
 8021cc0:	8836      	ldrh	r6, [r6, #0]
 8021cc2:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8021cc6:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8021cca:	437d      	muls	r5, r7
 8021ccc:	4461      	add	r1, ip
 8021cce:	0a24      	lsrs	r4, r4, #8
 8021cd0:	fb02 5503 	mla	r5, r2, r3, r5
 8021cd4:	0a09      	lsrs	r1, r1, #8
 8021cd6:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8021cda:	fb04 540e 	mla	r4, r4, lr, r5
 8021cde:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8021ce2:	fb01 4100 	mla	r1, r1, r0, r4
 8021ce6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021cea:	0a09      	lsrs	r1, r1, #8
 8021cec:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021cf0:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8021cf4:	fb07 f70a 	mul.w	r7, r7, sl
 8021cf8:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8021cfc:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8021d00:	fb03 7101 	mla	r1, r3, r1, r7
 8021d04:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021d08:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8021d0c:	fb0e 1e08 	mla	lr, lr, r8, r1
 8021d10:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8021d14:	fb00 e101 	mla	r1, r0, r1, lr
 8021d18:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 8021d1c:	9a00      	ldr	r2, [sp, #0]
 8021d1e:	b287      	uxth	r7, r0
 8021d20:	437a      	muls	r2, r7
 8021d22:	0a09      	lsrs	r1, r1, #8
 8021d24:	1c53      	adds	r3, r2, #1
 8021d26:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8021d2a:	4321      	orrs	r1, r4
 8021d2c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021d30:	1235      	asrs	r5, r6, #8
 8021d32:	0c0a      	lsrs	r2, r1, #16
 8021d34:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8021d38:	b2db      	uxtb	r3, r3
 8021d3a:	fb12 f207 	smulbb	r2, r2, r7
 8021d3e:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8021d42:	fb05 2503 	mla	r5, r5, r3, r2
 8021d46:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8021d4a:	10f2      	asrs	r2, r6, #3
 8021d4c:	b2c8      	uxtb	r0, r1
 8021d4e:	00f6      	lsls	r6, r6, #3
 8021d50:	fb14 f407 	smulbb	r4, r4, r7
 8021d54:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8021d58:	b2f6      	uxtb	r6, r6
 8021d5a:	fb10 f007 	smulbb	r0, r0, r7
 8021d5e:	fb02 4203 	mla	r2, r2, r3, r4
 8021d62:	b2ad      	uxth	r5, r5
 8021d64:	fb06 0303 	mla	r3, r6, r3, r0
 8021d68:	b299      	uxth	r1, r3
 8021d6a:	b294      	uxth	r4, r2
 8021d6c:	1c6b      	adds	r3, r5, #1
 8021d6e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8021d72:	1c62      	adds	r2, r4, #1
 8021d74:	1c4b      	adds	r3, r1, #1
 8021d76:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8021d7a:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8021d7e:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8021d82:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8021d86:	0952      	lsrs	r2, r2, #5
 8021d88:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021d8c:	432b      	orrs	r3, r5
 8021d8e:	4313      	orrs	r3, r2
 8021d90:	9a02      	ldr	r2, [sp, #8]
 8021d92:	8013      	strh	r3, [r2, #0]
 8021d94:	b005      	add	sp, #20
 8021d96:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021d9a:	2500      	movs	r5, #0
 8021d9c:	e6ef      	b.n	8021b7e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 8021d9e:	2100      	movs	r1, #0
 8021da0:	460d      	mov	r5, r1
 8021da2:	e6f7      	b.n	8021b94 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8021da4:	2100      	movs	r1, #0
 8021da6:	e6f5      	b.n	8021b94 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8021da8:	4631      	mov	r1, r6
 8021daa:	e6f3      	b.n	8021b94 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8021dac:	2400      	movs	r4, #0
 8021dae:	e702      	b.n	8021bb6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 8021db0:	2200      	movs	r2, #0
 8021db2:	4614      	mov	r4, r2
 8021db4:	e70b      	b.n	8021bce <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8021db6:	4602      	mov	r2, r0
 8021db8:	4604      	mov	r4, r0
 8021dba:	e708      	b.n	8021bce <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8021dbc:	2200      	movs	r2, #0
 8021dbe:	e706      	b.n	8021bce <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8021dc0:	4632      	mov	r2, r6
 8021dc2:	e704      	b.n	8021bce <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

08021dc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021dc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021dc8:	b09d      	sub	sp, #116	; 0x74
 8021dca:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 8021dce:	9219      	str	r2, [sp, #100]	; 0x64
 8021dd0:	9307      	str	r3, [sp, #28]
 8021dd2:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8021dd4:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 8021dd8:	931a      	str	r3, [sp, #104]	; 0x68
 8021dda:	9117      	str	r1, [sp, #92]	; 0x5c
 8021ddc:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8021de0:	901b      	str	r0, [sp, #108]	; 0x6c
 8021de2:	6850      	ldr	r0, [r2, #4]
 8021de4:	6812      	ldr	r2, [r2, #0]
 8021de6:	fb00 1303 	mla	r3, r0, r3, r1
 8021dea:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021dee:	930a      	str	r3, [sp, #40]	; 0x28
 8021df0:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8021df2:	681b      	ldr	r3, [r3, #0]
 8021df4:	9310      	str	r3, [sp, #64]	; 0x40
 8021df6:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 8021dfa:	930b      	str	r3, [sp, #44]	; 0x2c
 8021dfc:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8021dfe:	2b00      	cmp	r3, #0
 8021e00:	dc03      	bgt.n	8021e0a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8021e02:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8021e04:	2b00      	cmp	r3, #0
 8021e06:	f340 8375 	ble.w	80224f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8021e0a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8021e0c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021e10:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021e14:	1e48      	subs	r0, r1, #1
 8021e16:	1e57      	subs	r7, r2, #1
 8021e18:	9b07      	ldr	r3, [sp, #28]
 8021e1a:	2b00      	cmp	r3, #0
 8021e1c:	f340 818e 	ble.w	802213c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8021e20:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8021e24:	ea4f 4326 	mov.w	r3, r6, asr #16
 8021e28:	d406      	bmi.n	8021e38 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8021e2a:	4584      	cmp	ip, r0
 8021e2c:	da04      	bge.n	8021e38 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8021e2e:	2b00      	cmp	r3, #0
 8021e30:	db02      	blt.n	8021e38 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8021e32:	42bb      	cmp	r3, r7
 8021e34:	f2c0 8183 	blt.w	802213e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 8021e38:	f11c 0c01 	adds.w	ip, ip, #1
 8021e3c:	f100 8173 	bmi.w	8022126 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8021e40:	4561      	cmp	r1, ip
 8021e42:	f2c0 8170 	blt.w	8022126 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8021e46:	3301      	adds	r3, #1
 8021e48:	f100 816d 	bmi.w	8022126 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8021e4c:	429a      	cmp	r2, r3
 8021e4e:	f2c0 816a 	blt.w	8022126 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8021e52:	9b07      	ldr	r3, [sp, #28]
 8021e54:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8021e56:	9318      	str	r3, [sp, #96]	; 0x60
 8021e58:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8021e5a:	2b00      	cmp	r3, #0
 8021e5c:	f340 818c 	ble.w	8022178 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 8021e60:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8021e62:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8021e64:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8021e68:	689b      	ldr	r3, [r3, #8]
 8021e6a:	1422      	asrs	r2, r4, #16
 8021e6c:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8021e70:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8021e74:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8021e78:	f100 81cd 	bmi.w	8022216 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8021e7c:	f103 38ff 	add.w	r8, r3, #4294967295
 8021e80:	4542      	cmp	r2, r8
 8021e82:	f280 81c8 	bge.w	8022216 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8021e86:	f1bc 0f00 	cmp.w	ip, #0
 8021e8a:	f2c0 81c4 	blt.w	8022216 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8021e8e:	f10e 38ff 	add.w	r8, lr, #4294967295
 8021e92:	45c4      	cmp	ip, r8
 8021e94:	f280 81bf 	bge.w	8022216 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8021e98:	b21b      	sxth	r3, r3
 8021e9a:	fb0c 2203 	mla	r2, ip, r3, r2
 8021e9e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8021ea0:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8021ea4:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8021ea8:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8021eac:	2800      	cmp	r0, #0
 8021eae:	f000 81a9 	beq.w	8022204 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 8021eb2:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8021eb6:	950c      	str	r5, [sp, #48]	; 0x30
 8021eb8:	0e2d      	lsrs	r5, r5, #24
 8021eba:	9513      	str	r5, [sp, #76]	; 0x4c
 8021ebc:	b181      	cbz	r1, 8021ee0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8021ebe:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8021ec2:	3b01      	subs	r3, #1
 8021ec4:	009b      	lsls	r3, r3, #2
 8021ec6:	3304      	adds	r3, #4
 8021ec8:	eb08 0c03 	add.w	ip, r8, r3
 8021ecc:	f858 3003 	ldr.w	r3, [r8, r3]
 8021ed0:	9308      	str	r3, [sp, #32]
 8021ed2:	0e1b      	lsrs	r3, r3, #24
 8021ed4:	9311      	str	r3, [sp, #68]	; 0x44
 8021ed6:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8021eda:	930d      	str	r3, [sp, #52]	; 0x34
 8021edc:	0e1b      	lsrs	r3, r3, #24
 8021ede:	9314      	str	r3, [sp, #80]	; 0x50
 8021ee0:	b280      	uxth	r0, r0
 8021ee2:	b289      	uxth	r1, r1
 8021ee4:	fb00 f901 	mul.w	r9, r0, r1
 8021ee8:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8021eec:	0100      	lsls	r0, r0, #4
 8021eee:	eba0 0809 	sub.w	r8, r0, r9
 8021ef2:	b289      	uxth	r1, r1
 8021ef4:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8021ef8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8021efa:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8021efc:	fa1f f888 	uxth.w	r8, r8
 8021f00:	1a5b      	subs	r3, r3, r1
 8021f02:	b29b      	uxth	r3, r3
 8021f04:	fb08 f000 	mul.w	r0, r8, r0
 8021f08:	fb03 000e 	mla	r0, r3, lr, r0
 8021f0c:	fb01 0005 	mla	r0, r1, r5, r0
 8021f10:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8021f12:	fb09 0005 	mla	r0, r9, r5, r0
 8021f16:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8021f1a:	2800      	cmp	r0, #0
 8021f1c:	f000 80fa 	beq.w	8022114 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8021f20:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8021f24:	d01b      	beq.n	8021f5e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8021f26:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8021f2a:	fb0e fa0a 	mul.w	sl, lr, sl
 8021f2e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8021f32:	fb0e fe02 	mul.w	lr, lr, r2
 8021f36:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8021f3a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8021f3e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8021f42:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8021f46:	4452      	add	r2, sl
 8021f48:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8021f4c:	0a12      	lsrs	r2, r2, #8
 8021f4e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021f52:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8021f56:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8021f5a:	ea42 020c 	orr.w	r2, r2, ip
 8021f5e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8021f60:	2dff      	cmp	r5, #255	; 0xff
 8021f62:	d021      	beq.n	8021fa8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8021f64:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8021f66:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8021f6a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8021f6c:	fb05 fb0b 	mul.w	fp, r5, fp
 8021f70:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8021f72:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8021f76:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8021f78:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021f7c:	fb05 fa0a 	mul.w	sl, r5, sl
 8021f80:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021f84:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8021f88:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8021f8c:	44de      	add	lr, fp
 8021f8e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021f92:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021f96:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021f9a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021f9e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021fa2:	ea4e 050a 	orr.w	r5, lr, sl
 8021fa6:	950c      	str	r5, [sp, #48]	; 0x30
 8021fa8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8021faa:	2dff      	cmp	r5, #255	; 0xff
 8021fac:	d021      	beq.n	8021ff2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 8021fae:	9d08      	ldr	r5, [sp, #32]
 8021fb0:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8021fb4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8021fb6:	fb05 fb0b 	mul.w	fp, r5, fp
 8021fba:	9d08      	ldr	r5, [sp, #32]
 8021fbc:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8021fc0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8021fc2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021fc6:	fb05 fa0a 	mul.w	sl, r5, sl
 8021fca:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021fce:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8021fd2:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8021fd6:	44de      	add	lr, fp
 8021fd8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021fdc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021fe0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021fe4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021fe8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021fec:	ea4e 050a 	orr.w	r5, lr, sl
 8021ff0:	9508      	str	r5, [sp, #32]
 8021ff2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8021ff4:	2dff      	cmp	r5, #255	; 0xff
 8021ff6:	d021      	beq.n	802203c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 8021ff8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8021ffa:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8021ffe:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8022000:	fb05 fb0b 	mul.w	fp, r5, fp
 8022004:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8022006:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802200a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802200c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8022010:	fb05 fa0a 	mul.w	sl, r5, sl
 8022014:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022018:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802201c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8022020:	44de      	add	lr, fp
 8022022:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8022026:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802202a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802202e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022032:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022036:	ea4e 050a 	orr.w	r5, lr, sl
 802203a:	950d      	str	r5, [sp, #52]	; 0x34
 802203c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802203e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8022042:	9d08      	ldr	r5, [sp, #32]
 8022044:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8022048:	fb08 fc0c 	mul.w	ip, r8, ip
 802204c:	fb03 cc0e 	mla	ip, r3, lr, ip
 8022050:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8022054:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8022056:	fb01 cc0e 	mla	ip, r1, lr, ip
 802205a:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 802205e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8022060:	fb09 cc0e 	mla	ip, r9, lr, ip
 8022064:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8022068:	fb08 f80e 	mul.w	r8, r8, lr
 802206c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8022070:	fb03 8202 	mla	r2, r3, r2, r8
 8022074:	9b08      	ldr	r3, [sp, #32]
 8022076:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8022078:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 802207c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802207e:	fb01 220a 	mla	r2, r1, sl, r2
 8022082:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 8022086:	fb09 2901 	mla	r9, r9, r1, r2
 802208a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802208c:	883b      	ldrh	r3, [r7, #0]
 802208e:	4342      	muls	r2, r0
 8022090:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022094:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8022098:	1c50      	adds	r0, r2, #1
 802209a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802209e:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80220a2:	ea4c 0c09 	orr.w	ip, ip, r9
 80220a6:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80220aa:	1219      	asrs	r1, r3, #8
 80220ac:	ea4f 421c 	mov.w	r2, ip, lsr #16
 80220b0:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80220b4:	b2c0      	uxtb	r0, r0
 80220b6:	fb12 f205 	smulbb	r2, r2, r5
 80220ba:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80220be:	fb01 2100 	mla	r1, r1, r0, r2
 80220c2:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 80220c6:	10da      	asrs	r2, r3, #3
 80220c8:	fa5f fc8c 	uxtb.w	ip, ip
 80220cc:	00db      	lsls	r3, r3, #3
 80220ce:	fb1c fc05 	smulbb	ip, ip, r5
 80220d2:	b2db      	uxtb	r3, r3
 80220d4:	b289      	uxth	r1, r1
 80220d6:	fb03 c300 	mla	r3, r3, r0, ip
 80220da:	fa1f fc83 	uxth.w	ip, r3
 80220de:	1c4b      	adds	r3, r1, #1
 80220e0:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80220e4:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80220e8:	fb1e fe05 	smulbb	lr, lr, r5
 80220ec:	f10c 0301 	add.w	r3, ip, #1
 80220f0:	fb02 e200 	mla	r2, r2, r0, lr
 80220f4:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 80220f8:	b292      	uxth	r2, r2
 80220fa:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80220fe:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022102:	430b      	orrs	r3, r1
 8022104:	1c51      	adds	r1, r2, #1
 8022106:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802210a:	0952      	lsrs	r2, r2, #5
 802210c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022110:	4313      	orrs	r3, r2
 8022112:	803b      	strh	r3, [r7, #0]
 8022114:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8022116:	441c      	add	r4, r3
 8022118:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802211a:	441e      	add	r6, r3
 802211c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802211e:	3b01      	subs	r3, #1
 8022120:	3702      	adds	r7, #2
 8022122:	9318      	str	r3, [sp, #96]	; 0x60
 8022124:	e698      	b.n	8021e58 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8022126:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8022128:	441c      	add	r4, r3
 802212a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802212c:	441e      	add	r6, r3
 802212e:	9b07      	ldr	r3, [sp, #28]
 8022130:	3b01      	subs	r3, #1
 8022132:	9307      	str	r3, [sp, #28]
 8022134:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022136:	3302      	adds	r3, #2
 8022138:	930a      	str	r3, [sp, #40]	; 0x28
 802213a:	e66d      	b.n	8021e18 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 802213c:	d023      	beq.n	8022186 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 802213e:	9b07      	ldr	r3, [sp, #28]
 8022140:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8022142:	3b01      	subs	r3, #1
 8022144:	fb00 4003 	mla	r0, r0, r3, r4
 8022148:	1400      	asrs	r0, r0, #16
 802214a:	f53f ae82 	bmi.w	8021e52 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802214e:	3901      	subs	r1, #1
 8022150:	4288      	cmp	r0, r1
 8022152:	f6bf ae7e 	bge.w	8021e52 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8022156:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8022158:	fb01 6303 	mla	r3, r1, r3, r6
 802215c:	141b      	asrs	r3, r3, #16
 802215e:	f53f ae78 	bmi.w	8021e52 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8022162:	3a01      	subs	r2, #1
 8022164:	4293      	cmp	r3, r2
 8022166:	f6bf ae74 	bge.w	8021e52 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802216a:	f8dd b01c 	ldr.w	fp, [sp, #28]
 802216e:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8022172:	f1bb 0f00 	cmp.w	fp, #0
 8022176:	dc6c      	bgt.n	8022252 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8022178:	9b07      	ldr	r3, [sp, #28]
 802217a:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 802217e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022180:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8022184:	930a      	str	r3, [sp, #40]	; 0x28
 8022186:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8022188:	2b00      	cmp	r3, #0
 802218a:	f340 81b3 	ble.w	80224f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 802218e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022192:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022196:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802219a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 802219c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80221a0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80221a4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80221a8:	eef0 6a62 	vmov.f32	s13, s5
 80221ac:	ee61 7a27 	vmul.f32	s15, s2, s15
 80221b0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80221b4:	ee77 2a62 	vsub.f32	s5, s14, s5
 80221b8:	ee16 4a90 	vmov	r4, s13
 80221bc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80221c0:	eef0 6a43 	vmov.f32	s13, s6
 80221c4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80221c8:	ee12 2a90 	vmov	r2, s5
 80221cc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80221d0:	fb92 f3f3 	sdiv	r3, r2, r3
 80221d4:	ee13 2a10 	vmov	r2, s6
 80221d8:	9329      	str	r3, [sp, #164]	; 0xa4
 80221da:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80221dc:	fb92 f3f3 	sdiv	r3, r2, r3
 80221e0:	932a      	str	r3, [sp, #168]	; 0xa8
 80221e2:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80221e4:	9a19      	ldr	r2, [sp, #100]	; 0x64
 80221e6:	3b01      	subs	r3, #1
 80221e8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80221ec:	9317      	str	r3, [sp, #92]	; 0x5c
 80221ee:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80221f0:	bf08      	it	eq
 80221f2:	4613      	moveq	r3, r2
 80221f4:	ee16 6a90 	vmov	r6, s13
 80221f8:	9307      	str	r3, [sp, #28]
 80221fa:	eeb0 3a67 	vmov.f32	s6, s15
 80221fe:	eef0 2a47 	vmov.f32	s5, s14
 8022202:	e5fb      	b.n	8021dfc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8022204:	2900      	cmp	r1, #0
 8022206:	f43f ae6b 	beq.w	8021ee0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 802220a:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 802220e:	9308      	str	r3, [sp, #32]
 8022210:	0e1b      	lsrs	r3, r3, #24
 8022212:	9311      	str	r3, [sp, #68]	; 0x44
 8022214:	e664      	b.n	8021ee0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8022216:	f112 0801 	adds.w	r8, r2, #1
 802221a:	f53f af7b 	bmi.w	8022114 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802221e:	4543      	cmp	r3, r8
 8022220:	f6ff af78 	blt.w	8022114 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8022224:	f11c 0801 	adds.w	r8, ip, #1
 8022228:	f53f af74 	bmi.w	8022114 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802222c:	45c6      	cmp	lr, r8
 802222e:	f6ff af71 	blt.w	8022114 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8022232:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8022234:	9201      	str	r2, [sp, #4]
 8022236:	fa0f f28e 	sxth.w	r2, lr
 802223a:	e9cd 1504 	strd	r1, r5, [sp, #16]
 802223e:	e9cd c002 	strd	ip, r0, [sp, #8]
 8022242:	9200      	str	r2, [sp, #0]
 8022244:	b21b      	sxth	r3, r3
 8022246:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8022248:	981b      	ldr	r0, [sp, #108]	; 0x6c
 802224a:	4639      	mov	r1, r7
 802224c:	f7ff fc79 	bl	8021b42 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8022250:	e760      	b.n	8022114 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8022252:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8022254:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8022256:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802225a:	1427      	asrs	r7, r4, #16
 802225c:	1433      	asrs	r3, r6, #16
 802225e:	fb01 7303 	mla	r3, r1, r3, r7
 8022262:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 8022266:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 802226a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802226e:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8022272:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8022276:	2a00      	cmp	r2, #0
 8022278:	f000 8133 	beq.w	80224e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 802227c:	687d      	ldr	r5, [r7, #4]
 802227e:	950e      	str	r5, [sp, #56]	; 0x38
 8022280:	0e2d      	lsrs	r5, r5, #24
 8022282:	9515      	str	r5, [sp, #84]	; 0x54
 8022284:	b178      	cbz	r0, 80222a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8022286:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 802228a:	3901      	subs	r1, #1
 802228c:	0089      	lsls	r1, r1, #2
 802228e:	3104      	adds	r1, #4
 8022290:	eb07 0e01 	add.w	lr, r7, r1
 8022294:	5879      	ldr	r1, [r7, r1]
 8022296:	9109      	str	r1, [sp, #36]	; 0x24
 8022298:	0e09      	lsrs	r1, r1, #24
 802229a:	9112      	str	r1, [sp, #72]	; 0x48
 802229c:	f8de 1004 	ldr.w	r1, [lr, #4]
 80222a0:	910f      	str	r1, [sp, #60]	; 0x3c
 80222a2:	0e09      	lsrs	r1, r1, #24
 80222a4:	9116      	str	r1, [sp, #88]	; 0x58
 80222a6:	b292      	uxth	r2, r2
 80222a8:	b280      	uxth	r0, r0
 80222aa:	fb02 f800 	mul.w	r8, r2, r0
 80222ae:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80222b2:	0112      	lsls	r2, r2, #4
 80222b4:	eba2 0e08 	sub.w	lr, r2, r8
 80222b8:	b280      	uxth	r0, r0
 80222ba:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80222be:	9915      	ldr	r1, [sp, #84]	; 0x54
 80222c0:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80222c2:	fa1f fe8e 	uxth.w	lr, lr
 80222c6:	1a12      	subs	r2, r2, r0
 80222c8:	b292      	uxth	r2, r2
 80222ca:	fb0e f101 	mul.w	r1, lr, r1
 80222ce:	fb02 110c 	mla	r1, r2, ip, r1
 80222d2:	fb00 1105 	mla	r1, r0, r5, r1
 80222d6:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80222d8:	fb08 1105 	mla	r1, r8, r5, r1
 80222dc:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80222e0:	2900      	cmp	r1, #0
 80222e2:	f000 80f5 	beq.w	80224d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 80222e6:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80222ea:	d019      	beq.n	8022320 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 80222ec:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80222f0:	fb0c fa0a 	mul.w	sl, ip, sl
 80222f4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80222f8:	fb0c fc03 	mul.w	ip, ip, r3
 80222fc:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8022300:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8022304:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8022308:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 802230c:	4453      	add	r3, sl
 802230e:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8022312:	0a1b      	lsrs	r3, r3, #8
 8022314:	0a3f      	lsrs	r7, r7, #8
 8022316:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802231a:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 802231e:	433b      	orrs	r3, r7
 8022320:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8022322:	2dff      	cmp	r5, #255	; 0xff
 8022324:	d020      	beq.n	8022368 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 8022326:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8022328:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802232c:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802232e:	436f      	muls	r7, r5
 8022330:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8022332:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8022336:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8022338:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802233c:	fb05 fa0a 	mul.w	sl, r5, sl
 8022340:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8022344:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022348:	44bc      	add	ip, r7
 802234a:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802234e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8022352:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022356:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802235a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802235e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022362:	ea4c 050a 	orr.w	r5, ip, sl
 8022366:	950e      	str	r5, [sp, #56]	; 0x38
 8022368:	9d12      	ldr	r5, [sp, #72]	; 0x48
 802236a:	2dff      	cmp	r5, #255	; 0xff
 802236c:	d020      	beq.n	80223b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 802236e:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8022370:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8022374:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8022376:	436f      	muls	r7, r5
 8022378:	9d09      	ldr	r5, [sp, #36]	; 0x24
 802237a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802237e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8022380:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8022384:	fb05 fa0a 	mul.w	sl, r5, sl
 8022388:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802238c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022390:	44bc      	add	ip, r7
 8022392:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8022396:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802239a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802239e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80223a2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80223a6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80223aa:	ea4c 050a 	orr.w	r5, ip, sl
 80223ae:	9509      	str	r5, [sp, #36]	; 0x24
 80223b0:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80223b2:	2dff      	cmp	r5, #255	; 0xff
 80223b4:	d020      	beq.n	80223f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 80223b6:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80223b8:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80223bc:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80223be:	436f      	muls	r7, r5
 80223c0:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80223c2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80223c6:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80223c8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80223cc:	fb05 fa0a 	mul.w	sl, r5, sl
 80223d0:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80223d4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80223d8:	44bc      	add	ip, r7
 80223da:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80223de:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80223e2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80223e6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80223ea:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80223ee:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80223f2:	ea4c 050a 	orr.w	r5, ip, sl
 80223f6:	950f      	str	r5, [sp, #60]	; 0x3c
 80223f8:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80223fa:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80223fe:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8022400:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8022404:	fb0e f707 	mul.w	r7, lr, r7
 8022408:	fb02 770c 	mla	r7, r2, ip, r7
 802240c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8022410:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8022412:	fb00 770c 	mla	r7, r0, ip, r7
 8022416:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802241a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802241c:	fb08 770c 	mla	r7, r8, ip, r7
 8022420:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8022424:	fb0e fe0c 	mul.w	lr, lr, ip
 8022428:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802242c:	fb02 e303 	mla	r3, r2, r3, lr
 8022430:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8022432:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8022434:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8022438:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802243a:	fb00 330a 	mla	r3, r0, sl, r3
 802243e:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8022442:	fb08 3c0c 	mla	ip, r8, ip, r3
 8022446:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8022448:	f8b9 0000 	ldrh.w	r0, [r9]
 802244c:	4359      	muls	r1, r3
 802244e:	0a3f      	lsrs	r7, r7, #8
 8022450:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022454:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8022458:	1c4b      	adds	r3, r1, #1
 802245a:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 802245e:	ea47 070c 	orr.w	r7, r7, ip
 8022462:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8022466:	1202      	asrs	r2, r0, #8
 8022468:	0c3b      	lsrs	r3, r7, #16
 802246a:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 802246e:	b2c9      	uxtb	r1, r1
 8022470:	fb13 f305 	smulbb	r3, r3, r5
 8022474:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8022478:	fb02 3201 	mla	r2, r2, r1, r3
 802247c:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8022480:	10c3      	asrs	r3, r0, #3
 8022482:	b2ff      	uxtb	r7, r7
 8022484:	00c0      	lsls	r0, r0, #3
 8022486:	b2c0      	uxtb	r0, r0
 8022488:	fb17 f705 	smulbb	r7, r7, r5
 802248c:	fb00 7001 	mla	r0, r0, r1, r7
 8022490:	b292      	uxth	r2, r2
 8022492:	fb1c fc05 	smulbb	ip, ip, r5
 8022496:	b280      	uxth	r0, r0
 8022498:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 802249c:	fb03 c301 	mla	r3, r3, r1, ip
 80224a0:	1c51      	adds	r1, r2, #1
 80224a2:	f100 0c01 	add.w	ip, r0, #1
 80224a6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80224aa:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 80224ae:	b29b      	uxth	r3, r3
 80224b0:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80224b4:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 80224b8:	ea4c 0202 	orr.w	r2, ip, r2
 80224bc:	f103 0c01 	add.w	ip, r3, #1
 80224c0:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 80224c4:	095b      	lsrs	r3, r3, #5
 80224c6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80224ca:	431a      	orrs	r2, r3
 80224cc:	f8a9 2000 	strh.w	r2, [r9]
 80224d0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80224d2:	441c      	add	r4, r3
 80224d4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80224d6:	f109 0902 	add.w	r9, r9, #2
 80224da:	441e      	add	r6, r3
 80224dc:	f10b 3bff 	add.w	fp, fp, #4294967295
 80224e0:	e647      	b.n	8022172 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 80224e2:	2800      	cmp	r0, #0
 80224e4:	f43f aedf 	beq.w	80222a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 80224e8:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 80224ec:	9109      	str	r1, [sp, #36]	; 0x24
 80224ee:	0e09      	lsrs	r1, r1, #24
 80224f0:	9112      	str	r1, [sp, #72]	; 0x48
 80224f2:	e6d8      	b.n	80222a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 80224f4:	b01d      	add	sp, #116	; 0x74
 80224f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080224fa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 80224fa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80224fe:	b085      	sub	sp, #20
 8022500:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8022504:	9102      	str	r1, [sp, #8]
 8022506:	2c00      	cmp	r4, #0
 8022508:	fb04 7103 	mla	r1, r4, r3, r7
 802250c:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8022510:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8022514:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8022518:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 802251c:	f2c0 810c 	blt.w	8022738 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8022520:	45a6      	cmp	lr, r4
 8022522:	f340 8109 	ble.w	8022738 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8022526:	2f00      	cmp	r7, #0
 8022528:	f2c0 8104 	blt.w	8022734 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 802252c:	42bb      	cmp	r3, r7
 802252e:	f340 8101 	ble.w	8022734 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8022532:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8022536:	1c7a      	adds	r2, r7, #1
 8022538:	f100 8101 	bmi.w	802273e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 802253c:	4293      	cmp	r3, r2
 802253e:	f340 80fe 	ble.w	802273e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8022542:	2e00      	cmp	r6, #0
 8022544:	f000 80fd 	beq.w	8022742 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 8022548:	f8dc 1004 	ldr.w	r1, [ip, #4]
 802254c:	3401      	adds	r4, #1
 802254e:	f100 80fc 	bmi.w	802274a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8022552:	45a6      	cmp	lr, r4
 8022554:	f340 80f9 	ble.w	802274a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8022558:	2800      	cmp	r0, #0
 802255a:	f000 80f9 	beq.w	8022750 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 802255e:	2f00      	cmp	r7, #0
 8022560:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 8022564:	f2c0 80ef 	blt.w	8022746 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8022568:	42bb      	cmp	r3, r7
 802256a:	f340 80ec 	ble.w	8022746 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 802256e:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8022572:	3701      	adds	r7, #1
 8022574:	f100 80ef 	bmi.w	8022756 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8022578:	42bb      	cmp	r3, r7
 802257a:	f340 80ec 	ble.w	8022756 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 802257e:	2e00      	cmp	r6, #0
 8022580:	f000 80eb 	beq.w	802275a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 8022584:	6852      	ldr	r2, [r2, #4]
 8022586:	b2b6      	uxth	r6, r6
 8022588:	b280      	uxth	r0, r0
 802258a:	fb00 fe06 	mul.w	lr, r0, r6
 802258e:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8022592:	0136      	lsls	r6, r6, #4
 8022594:	eba6 070e 	sub.w	r7, r6, lr
 8022598:	b280      	uxth	r0, r0
 802259a:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 802259e:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 80225a2:	b2bf      	uxth	r7, r7
 80225a4:	1a1b      	subs	r3, r3, r0
 80225a6:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 80225aa:	b29b      	uxth	r3, r3
 80225ac:	fb07 f60a 	mul.w	r6, r7, sl
 80225b0:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80225b4:	fb0b 6603 	mla	r6, fp, r3, r6
 80225b8:	ea4f 6812 	mov.w	r8, r2, lsr #24
 80225bc:	fb00 6609 	mla	r6, r0, r9, r6
 80225c0:	fb0e 6608 	mla	r6, lr, r8, r6
 80225c4:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80225c8:	9600      	str	r6, [sp, #0]
 80225ca:	2e00      	cmp	r6, #0
 80225cc:	f000 80af 	beq.w	802272e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 80225d0:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80225d4:	fb0b fc0c 	mul.w	ip, fp, ip
 80225d8:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 80225dc:	fb0b f505 	mul.w	r5, fp, r5
 80225e0:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 80225e4:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 80225e8:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80225ec:	44dc      	add	ip, fp
 80225ee:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80225f2:	9501      	str	r5, [sp, #4]
 80225f4:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 80225f8:	9503      	str	r5, [sp, #12]
 80225fa:	9d01      	ldr	r5, [sp, #4]
 80225fc:	9e02      	ldr	r6, [sp, #8]
 80225fe:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8022602:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8022606:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 802260a:	fb0a fc0c 	mul.w	ip, sl, ip
 802260e:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8022612:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8022616:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 802261a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802261e:	4465      	add	r5, ip
 8022620:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8022624:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8022628:	fb09 fc0c 	mul.w	ip, r9, ip
 802262c:	fb09 f904 	mul.w	r9, r9, r4
 8022630:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8022634:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8022638:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 802263c:	fb08 f404 	mul.w	r4, r8, r4
 8022640:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8022644:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8022648:	fb08 f802 	mul.w	r8, r8, r2
 802264c:	fb0a fa01 	mul.w	sl, sl, r1
 8022650:	0a22      	lsrs	r2, r4, #8
 8022652:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8022656:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802265a:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 802265e:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8022662:	4414      	add	r4, r2
 8022664:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8022668:	f508 7280 	add.w	r2, r8, #256	; 0x100
 802266c:	0a2d      	lsrs	r5, r5, #8
 802266e:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8022672:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8022676:	9a03      	ldr	r2, [sp, #12]
 8022678:	8836      	ldrh	r6, [r6, #0]
 802267a:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 802267e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8022682:	437d      	muls	r5, r7
 8022684:	4461      	add	r1, ip
 8022686:	0a24      	lsrs	r4, r4, #8
 8022688:	fb02 5503 	mla	r5, r2, r3, r5
 802268c:	0a09      	lsrs	r1, r1, #8
 802268e:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8022692:	fb04 540e 	mla	r4, r4, lr, r5
 8022696:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 802269a:	fb01 4100 	mla	r1, r1, r0, r4
 802269e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80226a2:	0a09      	lsrs	r1, r1, #8
 80226a4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80226a8:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 80226ac:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80226b0:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 80226b4:	fb07 f70a 	mul.w	r7, r7, sl
 80226b8:	fb03 7101 	mla	r1, r3, r1, r7
 80226bc:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80226c0:	9b00      	ldr	r3, [sp, #0]
 80226c2:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 80226c6:	fb0e 1e08 	mla	lr, lr, r8, r1
 80226ca:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 80226ce:	fb00 e101 	mla	r1, r0, r1, lr
 80226d2:	43da      	mvns	r2, r3
 80226d4:	1233      	asrs	r3, r6, #8
 80226d6:	b2d2      	uxtb	r2, r2
 80226d8:	10f0      	asrs	r0, r6, #3
 80226da:	0a09      	lsrs	r1, r1, #8
 80226dc:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80226e0:	00f6      	lsls	r6, r6, #3
 80226e2:	4353      	muls	r3, r2
 80226e4:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80226e8:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80226ec:	b2f6      	uxtb	r6, r6
 80226ee:	4321      	orrs	r1, r4
 80226f0:	4350      	muls	r0, r2
 80226f2:	4356      	muls	r6, r2
 80226f4:	1c5a      	adds	r2, r3, #1
 80226f6:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80226fa:	0c0b      	lsrs	r3, r1, #16
 80226fc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022700:	1c42      	adds	r2, r0, #1
 8022702:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8022706:	0a0a      	lsrs	r2, r1, #8
 8022708:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 802270c:	021b      	lsls	r3, r3, #8
 802270e:	00d2      	lsls	r2, r2, #3
 8022710:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022714:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8022718:	4313      	orrs	r3, r2
 802271a:	1c72      	adds	r2, r6, #1
 802271c:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8022720:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 8022724:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8022728:	4319      	orrs	r1, r3
 802272a:	9b02      	ldr	r3, [sp, #8]
 802272c:	8019      	strh	r1, [r3, #0]
 802272e:	b005      	add	sp, #20
 8022730:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022734:	2500      	movs	r5, #0
 8022736:	e6fe      	b.n	8022536 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 8022738:	2100      	movs	r1, #0
 802273a:	460d      	mov	r5, r1
 802273c:	e706      	b.n	802254c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 802273e:	2100      	movs	r1, #0
 8022740:	e704      	b.n	802254c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8022742:	4631      	mov	r1, r6
 8022744:	e702      	b.n	802254c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8022746:	2400      	movs	r4, #0
 8022748:	e713      	b.n	8022572 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 802274a:	2200      	movs	r2, #0
 802274c:	4614      	mov	r4, r2
 802274e:	e71a      	b.n	8022586 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8022750:	4602      	mov	r2, r0
 8022752:	4604      	mov	r4, r0
 8022754:	e717      	b.n	8022586 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8022756:	2200      	movs	r2, #0
 8022758:	e715      	b.n	8022586 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 802275a:	4632      	mov	r2, r6
 802275c:	e713      	b.n	8022586 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

08022760 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022760:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022764:	b09b      	sub	sp, #108	; 0x6c
 8022766:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 802276a:	9218      	str	r2, [sp, #96]	; 0x60
 802276c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 802276e:	9116      	str	r1, [sp, #88]	; 0x58
 8022770:	9307      	str	r3, [sp, #28]
 8022772:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8022776:	9019      	str	r0, [sp, #100]	; 0x64
 8022778:	6850      	ldr	r0, [r2, #4]
 802277a:	6812      	ldr	r2, [r2, #0]
 802277c:	fb00 1303 	mla	r3, r0, r3, r1
 8022780:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8022784:	930a      	str	r3, [sp, #40]	; 0x28
 8022786:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022788:	681b      	ldr	r3, [r3, #0]
 802278a:	930f      	str	r3, [sp, #60]	; 0x3c
 802278c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802278e:	2b00      	cmp	r3, #0
 8022790:	dc03      	bgt.n	802279a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8022792:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8022794:	2b00      	cmp	r3, #0
 8022796:	f340 8386 	ble.w	8022ea6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 802279a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802279c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80227a0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80227a4:	1e48      	subs	r0, r1, #1
 80227a6:	1e57      	subs	r7, r2, #1
 80227a8:	9b07      	ldr	r3, [sp, #28]
 80227aa:	2b00      	cmp	r3, #0
 80227ac:	f340 8166 	ble.w	8022a7c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 80227b0:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80227b4:	ea4f 4326 	mov.w	r3, r6, asr #16
 80227b8:	d406      	bmi.n	80227c8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80227ba:	4584      	cmp	ip, r0
 80227bc:	da04      	bge.n	80227c8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80227be:	2b00      	cmp	r3, #0
 80227c0:	db02      	blt.n	80227c8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80227c2:	42bb      	cmp	r3, r7
 80227c4:	f2c0 815b 	blt.w	8022a7e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 80227c8:	f11c 0c01 	adds.w	ip, ip, #1
 80227cc:	f100 814b 	bmi.w	8022a66 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 80227d0:	4561      	cmp	r1, ip
 80227d2:	f2c0 8148 	blt.w	8022a66 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 80227d6:	3301      	adds	r3, #1
 80227d8:	f100 8145 	bmi.w	8022a66 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 80227dc:	429a      	cmp	r2, r3
 80227de:	f2c0 8142 	blt.w	8022a66 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 80227e2:	9b07      	ldr	r3, [sp, #28]
 80227e4:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80227e6:	9317      	str	r3, [sp, #92]	; 0x5c
 80227e8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80227ea:	2b00      	cmp	r3, #0
 80227ec:	f340 8165 	ble.w	8022aba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80227f0:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 80227f2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80227f4:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80227f8:	689b      	ldr	r3, [r3, #8]
 80227fa:	1422      	asrs	r2, r4, #16
 80227fc:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8022800:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8022804:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8022808:	f100 81d5 	bmi.w	8022bb6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 802280c:	f103 38ff 	add.w	r8, r3, #4294967295
 8022810:	4542      	cmp	r2, r8
 8022812:	f280 81d0 	bge.w	8022bb6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8022816:	f1bc 0f00 	cmp.w	ip, #0
 802281a:	f2c0 81cc 	blt.w	8022bb6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 802281e:	f10e 38ff 	add.w	r8, lr, #4294967295
 8022822:	45c4      	cmp	ip, r8
 8022824:	f280 81c7 	bge.w	8022bb6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8022828:	b21b      	sxth	r3, r3
 802282a:	fb0c 2203 	mla	r2, ip, r3, r2
 802282e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8022830:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8022834:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8022838:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 802283c:	2900      	cmp	r1, #0
 802283e:	f000 8182 	beq.w	8022b46 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8022842:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8022846:	950b      	str	r5, [sp, #44]	; 0x2c
 8022848:	0e2d      	lsrs	r5, r5, #24
 802284a:	9512      	str	r5, [sp, #72]	; 0x48
 802284c:	b180      	cbz	r0, 8022870 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 802284e:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8022852:	3b01      	subs	r3, #1
 8022854:	009b      	lsls	r3, r3, #2
 8022856:	3304      	adds	r3, #4
 8022858:	eb08 0c03 	add.w	ip, r8, r3
 802285c:	f858 3003 	ldr.w	r3, [r8, r3]
 8022860:	9308      	str	r3, [sp, #32]
 8022862:	0e1b      	lsrs	r3, r3, #24
 8022864:	9310      	str	r3, [sp, #64]	; 0x40
 8022866:	f8dc 3004 	ldr.w	r3, [ip, #4]
 802286a:	930c      	str	r3, [sp, #48]	; 0x30
 802286c:	0e1b      	lsrs	r3, r3, #24
 802286e:	9313      	str	r3, [sp, #76]	; 0x4c
 8022870:	b289      	uxth	r1, r1
 8022872:	b280      	uxth	r0, r0
 8022874:	fb01 f900 	mul.w	r9, r1, r0
 8022878:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 802287c:	0109      	lsls	r1, r1, #4
 802287e:	eba1 0809 	sub.w	r8, r1, r9
 8022882:	b280      	uxth	r0, r0
 8022884:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 8022888:	9b12      	ldr	r3, [sp, #72]	; 0x48
 802288a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802288c:	fa1f f888 	uxth.w	r8, r8
 8022890:	1a09      	subs	r1, r1, r0
 8022892:	b289      	uxth	r1, r1
 8022894:	fb08 f303 	mul.w	r3, r8, r3
 8022898:	fb01 330e 	mla	r3, r1, lr, r3
 802289c:	fb00 3305 	mla	r3, r0, r5, r3
 80228a0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80228a2:	fb09 3305 	mla	r3, r9, r5, r3
 80228a6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80228aa:	2b00      	cmp	r3, #0
 80228ac:	f000 80d2 	beq.w	8022a54 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80228b0:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80228b4:	d01b      	beq.n	80228ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 80228b6:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 80228ba:	fb0e fa0a 	mul.w	sl, lr, sl
 80228be:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80228c2:	fb0e fe02 	mul.w	lr, lr, r2
 80228c6:	ea4f 221a 	mov.w	r2, sl, lsr #8
 80228ca:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80228ce:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80228d2:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 80228d6:	4452      	add	r2, sl
 80228d8:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80228dc:	0a12      	lsrs	r2, r2, #8
 80228de:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80228e2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80228e6:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80228ea:	ea42 020c 	orr.w	r2, r2, ip
 80228ee:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80228f0:	2dff      	cmp	r5, #255	; 0xff
 80228f2:	d021      	beq.n	8022938 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 80228f4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80228f6:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80228fa:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80228fc:	fb05 fb0b 	mul.w	fp, r5, fp
 8022900:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8022902:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8022906:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8022908:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802290c:	fb05 fa0a 	mul.w	sl, r5, sl
 8022910:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022914:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8022918:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802291c:	44de      	add	lr, fp
 802291e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8022922:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022926:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802292a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802292e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022932:	ea4e 050a 	orr.w	r5, lr, sl
 8022936:	950b      	str	r5, [sp, #44]	; 0x2c
 8022938:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802293a:	2dff      	cmp	r5, #255	; 0xff
 802293c:	d021      	beq.n	8022982 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 802293e:	9d08      	ldr	r5, [sp, #32]
 8022940:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8022944:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8022946:	fb05 fb0b 	mul.w	fp, r5, fp
 802294a:	9d08      	ldr	r5, [sp, #32]
 802294c:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8022950:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8022952:	fb05 fa0e 	mul.w	sl, r5, lr
 8022956:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802295a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802295e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8022962:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8022966:	44de      	add	lr, fp
 8022968:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802296c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022970:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022974:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022978:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802297c:	ea4e 050a 	orr.w	r5, lr, sl
 8022980:	9508      	str	r5, [sp, #32]
 8022982:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8022984:	2dff      	cmp	r5, #255	; 0xff
 8022986:	d021      	beq.n	80229cc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8022988:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802298a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 802298e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8022990:	fb05 fb0b 	mul.w	fp, r5, fp
 8022994:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8022996:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802299a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 802299c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80229a0:	fb05 fa0a 	mul.w	sl, r5, sl
 80229a4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80229a8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80229ac:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80229b0:	44de      	add	lr, fp
 80229b2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80229b6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80229ba:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80229be:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80229c2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80229c6:	ea4e 050a 	orr.w	r5, lr, sl
 80229ca:	950c      	str	r5, [sp, #48]	; 0x30
 80229cc:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80229ce:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80229d2:	9d08      	ldr	r5, [sp, #32]
 80229d4:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 80229d8:	fb08 fc0c 	mul.w	ip, r8, ip
 80229dc:	fb01 cc0e 	mla	ip, r1, lr, ip
 80229e0:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 80229e4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80229e6:	fb00 cc0e 	mla	ip, r0, lr, ip
 80229ea:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 80229ee:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80229f0:	fb09 cc0e 	mla	ip, r9, lr, ip
 80229f4:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 80229f8:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80229fc:	fb08 f80e 	mul.w	r8, r8, lr
 8022a00:	fb01 8202 	mla	r2, r1, r2, r8
 8022a04:	9908      	ldr	r1, [sp, #32]
 8022a06:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8022a0a:	990c      	ldr	r1, [sp, #48]	; 0x30
 8022a0c:	fb00 220a 	mla	r2, r0, sl, r2
 8022a10:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 8022a14:	fb09 2900 	mla	r9, r9, r0, r2
 8022a18:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022a1c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8022a20:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022a24:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8022a28:	ea4c 0c09 	orr.w	ip, ip, r9
 8022a2c:	2bff      	cmp	r3, #255	; 0xff
 8022a2e:	ea4f 221c 	mov.w	r2, ip, lsr #8
 8022a32:	f040 8091 	bne.w	8022b58 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8022a36:	ea4f 135c 	mov.w	r3, ip, lsr #5
 8022a3a:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 8022a3e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022a42:	f022 0207 	bic.w	r2, r2, #7
 8022a46:	431a      	orrs	r2, r3
 8022a48:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8022a4c:	ea4c 0c02 	orr.w	ip, ip, r2
 8022a50:	f8a7 c000 	strh.w	ip, [r7]
 8022a54:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8022a56:	441c      	add	r4, r3
 8022a58:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022a5a:	441e      	add	r6, r3
 8022a5c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8022a5e:	3b01      	subs	r3, #1
 8022a60:	3702      	adds	r7, #2
 8022a62:	9317      	str	r3, [sp, #92]	; 0x5c
 8022a64:	e6c0      	b.n	80227e8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8022a66:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8022a68:	441c      	add	r4, r3
 8022a6a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022a6c:	441e      	add	r6, r3
 8022a6e:	9b07      	ldr	r3, [sp, #28]
 8022a70:	3b01      	subs	r3, #1
 8022a72:	9307      	str	r3, [sp, #28]
 8022a74:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022a76:	3302      	adds	r3, #2
 8022a78:	930a      	str	r3, [sp, #40]	; 0x28
 8022a7a:	e695      	b.n	80227a8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8022a7c:	d024      	beq.n	8022ac8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8022a7e:	9b07      	ldr	r3, [sp, #28]
 8022a80:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8022a82:	3b01      	subs	r3, #1
 8022a84:	fb00 4003 	mla	r0, r0, r3, r4
 8022a88:	1400      	asrs	r0, r0, #16
 8022a8a:	f53f aeaa 	bmi.w	80227e2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8022a8e:	3901      	subs	r1, #1
 8022a90:	4288      	cmp	r0, r1
 8022a92:	f6bf aea6 	bge.w	80227e2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8022a96:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8022a98:	fb01 6303 	mla	r3, r1, r3, r6
 8022a9c:	141b      	asrs	r3, r3, #16
 8022a9e:	f53f aea0 	bmi.w	80227e2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8022aa2:	3a01      	subs	r2, #1
 8022aa4:	4293      	cmp	r3, r2
 8022aa6:	f6bf ae9c 	bge.w	80227e2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8022aaa:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8022aae:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 8022ab2:	f1bb 0f00 	cmp.w	fp, #0
 8022ab6:	f300 809a 	bgt.w	8022bee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8022aba:	9b07      	ldr	r3, [sp, #28]
 8022abc:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8022ac0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022ac2:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8022ac6:	930a      	str	r3, [sp, #40]	; 0x28
 8022ac8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8022aca:	2b00      	cmp	r3, #0
 8022acc:	f340 81eb 	ble.w	8022ea6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8022ad0:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022ad4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022ad8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022adc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022ade:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022ae2:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022ae6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022aea:	eef0 6a62 	vmov.f32	s13, s5
 8022aee:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022af2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022af6:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022afa:	ee16 4a90 	vmov	r4, s13
 8022afe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022b02:	eef0 6a43 	vmov.f32	s13, s6
 8022b06:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022b0a:	ee12 2a90 	vmov	r2, s5
 8022b0e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022b12:	fb92 f3f3 	sdiv	r3, r2, r3
 8022b16:	ee13 2a10 	vmov	r2, s6
 8022b1a:	9327      	str	r3, [sp, #156]	; 0x9c
 8022b1c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022b1e:	fb92 f3f3 	sdiv	r3, r2, r3
 8022b22:	9328      	str	r3, [sp, #160]	; 0xa0
 8022b24:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8022b26:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8022b28:	3b01      	subs	r3, #1
 8022b2a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022b2e:	9316      	str	r3, [sp, #88]	; 0x58
 8022b30:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022b32:	bf08      	it	eq
 8022b34:	4613      	moveq	r3, r2
 8022b36:	ee16 6a90 	vmov	r6, s13
 8022b3a:	9307      	str	r3, [sp, #28]
 8022b3c:	eeb0 3a67 	vmov.f32	s6, s15
 8022b40:	eef0 2a47 	vmov.f32	s5, s14
 8022b44:	e622      	b.n	802278c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 8022b46:	2800      	cmp	r0, #0
 8022b48:	f43f ae92 	beq.w	8022870 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8022b4c:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8022b50:	9308      	str	r3, [sp, #32]
 8022b52:	0e1b      	lsrs	r3, r3, #24
 8022b54:	9310      	str	r3, [sp, #64]	; 0x40
 8022b56:	e68b      	b.n	8022870 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8022b58:	8839      	ldrh	r1, [r7, #0]
 8022b5a:	4dd4      	ldr	r5, [pc, #848]	; (8022eac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8022b5c:	43db      	mvns	r3, r3
 8022b5e:	ea4f 2e21 	mov.w	lr, r1, asr #8
 8022b62:	fa5f f883 	uxtb.w	r8, r3
 8022b66:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8022b6a:	fb0e fe08 	mul.w	lr, lr, r8
 8022b6e:	10c8      	asrs	r0, r1, #3
 8022b70:	00cb      	lsls	r3, r1, #3
 8022b72:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8022b76:	f10e 0101 	add.w	r1, lr, #1
 8022b7a:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 8022b7e:	fb00 f008 	mul.w	r0, r0, r8
 8022b82:	ea4f 411c 	mov.w	r1, ip, lsr #16
 8022b86:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 8022b8a:	f100 0e01 	add.w	lr, r0, #1
 8022b8e:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 8022b92:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8022b96:	b2db      	uxtb	r3, r3
 8022b98:	b2c9      	uxtb	r1, r1
 8022b9a:	00d2      	lsls	r2, r2, #3
 8022b9c:	fb03 f308 	mul.w	r3, r3, r8
 8022ba0:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 8022ba4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022ba8:	430a      	orrs	r2, r1
 8022baa:	1c59      	adds	r1, r3, #1
 8022bac:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8022bb0:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8022bb4:	e748      	b.n	8022a48 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 8022bb6:	f112 0801 	adds.w	r8, r2, #1
 8022bba:	f53f af4b 	bmi.w	8022a54 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8022bbe:	4543      	cmp	r3, r8
 8022bc0:	f6ff af48 	blt.w	8022a54 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8022bc4:	f11c 0801 	adds.w	r8, ip, #1
 8022bc8:	f53f af44 	bmi.w	8022a54 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8022bcc:	45c6      	cmp	lr, r8
 8022bce:	f6ff af41 	blt.w	8022a54 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8022bd2:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 8022bd6:	fa0f f28e 	sxth.w	r2, lr
 8022bda:	e9cd 1003 	strd	r1, r0, [sp, #12]
 8022bde:	9200      	str	r2, [sp, #0]
 8022be0:	b21b      	sxth	r3, r3
 8022be2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8022be4:	9819      	ldr	r0, [sp, #100]	; 0x64
 8022be6:	4639      	mov	r1, r7
 8022be8:	f7ff fc87 	bl	80224fa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 8022bec:	e732      	b.n	8022a54 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8022bee:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022bf0:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8022bf2:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 8022bf6:	1421      	asrs	r1, r4, #16
 8022bf8:	1433      	asrs	r3, r6, #16
 8022bfa:	fb07 1303 	mla	r3, r7, r3, r1
 8022bfe:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8022c00:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8022c04:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8022c08:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8022c0c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8022c10:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8022c14:	2a00      	cmp	r2, #0
 8022c16:	f000 8107 	beq.w	8022e28 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 8022c1a:	684d      	ldr	r5, [r1, #4]
 8022c1c:	950d      	str	r5, [sp, #52]	; 0x34
 8022c1e:	0e2d      	lsrs	r5, r5, #24
 8022c20:	9514      	str	r5, [sp, #80]	; 0x50
 8022c22:	b178      	cbz	r0, 8022c44 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8022c24:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 8022c28:	3f01      	subs	r7, #1
 8022c2a:	00bf      	lsls	r7, r7, #2
 8022c2c:	3704      	adds	r7, #4
 8022c2e:	eb01 0e07 	add.w	lr, r1, r7
 8022c32:	59c9      	ldr	r1, [r1, r7]
 8022c34:	9109      	str	r1, [sp, #36]	; 0x24
 8022c36:	0e09      	lsrs	r1, r1, #24
 8022c38:	9111      	str	r1, [sp, #68]	; 0x44
 8022c3a:	f8de 1004 	ldr.w	r1, [lr, #4]
 8022c3e:	910e      	str	r1, [sp, #56]	; 0x38
 8022c40:	0e09      	lsrs	r1, r1, #24
 8022c42:	9115      	str	r1, [sp, #84]	; 0x54
 8022c44:	b292      	uxth	r2, r2
 8022c46:	b280      	uxth	r0, r0
 8022c48:	fb02 f900 	mul.w	r9, r2, r0
 8022c4c:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8022c50:	0112      	lsls	r2, r2, #4
 8022c52:	eba2 0e09 	sub.w	lr, r2, r9
 8022c56:	b280      	uxth	r0, r0
 8022c58:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8022c5c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8022c5e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8022c60:	fa1f fe8e 	uxth.w	lr, lr
 8022c64:	1a09      	subs	r1, r1, r0
 8022c66:	b289      	uxth	r1, r1
 8022c68:	fb0e f202 	mul.w	r2, lr, r2
 8022c6c:	fb01 220c 	mla	r2, r1, ip, r2
 8022c70:	fb00 2205 	mla	r2, r0, r5, r2
 8022c74:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8022c76:	fb09 2205 	mla	r2, r9, r5, r2
 8022c7a:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8022c7e:	2a00      	cmp	r2, #0
 8022c80:	f000 80c9 	beq.w	8022e16 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 8022c84:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8022c88:	d019      	beq.n	8022cbe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 8022c8a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8022c8e:	fb0c fa0a 	mul.w	sl, ip, sl
 8022c92:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022c96:	fb0c fc03 	mul.w	ip, ip, r3
 8022c9a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8022c9e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8022ca2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8022ca6:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8022caa:	4453      	add	r3, sl
 8022cac:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8022cb0:	0a1b      	lsrs	r3, r3, #8
 8022cb2:	0a3f      	lsrs	r7, r7, #8
 8022cb4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8022cb8:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8022cbc:	433b      	orrs	r3, r7
 8022cbe:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8022cc0:	2dff      	cmp	r5, #255	; 0xff
 8022cc2:	d020      	beq.n	8022d06 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 8022cc4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8022cc6:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8022cca:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8022ccc:	436f      	muls	r7, r5
 8022cce:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8022cd0:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8022cd4:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8022cd6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8022cda:	fb05 fa0a 	mul.w	sl, r5, sl
 8022cde:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8022ce2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022ce6:	44bc      	add	ip, r7
 8022ce8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8022cec:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8022cf0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022cf4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022cf8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022cfc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022d00:	ea4c 050a 	orr.w	r5, ip, sl
 8022d04:	950d      	str	r5, [sp, #52]	; 0x34
 8022d06:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8022d08:	2dff      	cmp	r5, #255	; 0xff
 8022d0a:	d020      	beq.n	8022d4e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 8022d0c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8022d0e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8022d12:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8022d14:	436f      	muls	r7, r5
 8022d16:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8022d18:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8022d1c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8022d1e:	fb05 fa0c 	mul.w	sl, r5, ip
 8022d22:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8022d26:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022d2a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8022d2e:	44bc      	add	ip, r7
 8022d30:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8022d34:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8022d38:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022d3c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022d40:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022d44:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022d48:	ea4c 050a 	orr.w	r5, ip, sl
 8022d4c:	9509      	str	r5, [sp, #36]	; 0x24
 8022d4e:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8022d50:	2dff      	cmp	r5, #255	; 0xff
 8022d52:	d020      	beq.n	8022d96 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 8022d54:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8022d56:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8022d5a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8022d5c:	436f      	muls	r7, r5
 8022d5e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8022d60:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8022d64:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8022d66:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8022d6a:	fb05 fa0a 	mul.w	sl, r5, sl
 8022d6e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8022d72:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022d76:	44bc      	add	ip, r7
 8022d78:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8022d7c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8022d80:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022d84:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022d88:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022d8c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022d90:	ea4c 050a 	orr.w	r5, ip, sl
 8022d94:	950e      	str	r5, [sp, #56]	; 0x38
 8022d96:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8022d98:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8022d9c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8022d9e:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8022da2:	fb0e f707 	mul.w	r7, lr, r7
 8022da6:	fb01 770c 	mla	r7, r1, ip, r7
 8022daa:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8022dae:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8022db0:	fb00 770c 	mla	r7, r0, ip, r7
 8022db4:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8022db8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8022dba:	fb09 770c 	mla	r7, r9, ip, r7
 8022dbe:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8022dc2:	fb0e fe0c 	mul.w	lr, lr, ip
 8022dc6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022dca:	fb01 e303 	mla	r3, r1, r3, lr
 8022dce:	9909      	ldr	r1, [sp, #36]	; 0x24
 8022dd0:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8022dd4:	990e      	ldr	r1, [sp, #56]	; 0x38
 8022dd6:	fb00 330a 	mla	r3, r0, sl, r3
 8022dda:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8022dde:	fb09 3c0c 	mla	ip, r9, ip, r3
 8022de2:	0a3f      	lsrs	r7, r7, #8
 8022de4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022de8:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8022dec:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8022df0:	ea47 070c 	orr.w	r7, r7, ip
 8022df4:	2aff      	cmp	r2, #255	; 0xff
 8022df6:	ea4f 2317 	mov.w	r3, r7, lsr #8
 8022dfa:	d11e      	bne.n	8022e3a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 8022dfc:	097a      	lsrs	r2, r7, #5
 8022dfe:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 8022e02:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022e06:	f023 0307 	bic.w	r3, r3, #7
 8022e0a:	4313      	orrs	r3, r2
 8022e0c:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8022e10:	431f      	orrs	r7, r3
 8022e12:	f8a8 7000 	strh.w	r7, [r8]
 8022e16:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8022e18:	441c      	add	r4, r3
 8022e1a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022e1c:	f108 0802 	add.w	r8, r8, #2
 8022e20:	441e      	add	r6, r3
 8022e22:	f10b 3bff 	add.w	fp, fp, #4294967295
 8022e26:	e644      	b.n	8022ab2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 8022e28:	2800      	cmp	r0, #0
 8022e2a:	f43f af0b 	beq.w	8022c44 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8022e2e:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 8022e32:	9109      	str	r1, [sp, #36]	; 0x24
 8022e34:	0e09      	lsrs	r1, r1, #24
 8022e36:	9111      	str	r1, [sp, #68]	; 0x44
 8022e38:	e704      	b.n	8022c44 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8022e3a:	f8b8 1000 	ldrh.w	r1, [r8]
 8022e3e:	43d2      	mvns	r2, r2
 8022e40:	ea4f 2c21 	mov.w	ip, r1, asr #8
 8022e44:	fa5f fe82 	uxtb.w	lr, r2
 8022e48:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8022e4c:	fb0c fc0e 	mul.w	ip, ip, lr
 8022e50:	10c8      	asrs	r0, r1, #3
 8022e52:	00ca      	lsls	r2, r1, #3
 8022e54:	f10c 0101 	add.w	r1, ip, #1
 8022e58:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8022e5c:	0c39      	lsrs	r1, r7, #16
 8022e5e:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8022e62:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8022e66:	4911      	ldr	r1, [pc, #68]	; (8022eac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8022e68:	fb00 f00e 	mul.w	r0, r0, lr
 8022e6c:	fa5f fc8c 	uxtb.w	ip, ip
 8022e70:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 8022e74:	b2d2      	uxtb	r2, r2
 8022e76:	1c41      	adds	r1, r0, #1
 8022e78:	fb02 f20e 	mul.w	r2, r2, lr
 8022e7c:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8022e80:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8022e84:	1c51      	adds	r1, r2, #1
 8022e86:	00c0      	lsls	r0, r0, #3
 8022e88:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8022e8c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022e90:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8022e94:	ea4c 0c00 	orr.w	ip, ip, r0
 8022e98:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8022e9c:	ea47 0c0c 	orr.w	ip, r7, ip
 8022ea0:	f8a8 c000 	strh.w	ip, [r8]
 8022ea4:	e7b7      	b.n	8022e16 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 8022ea6:	b01b      	add	sp, #108	; 0x6c
 8022ea8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022eac:	fffff800 	.word	0xfffff800

08022eb0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 8022eb0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8022eb4:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8022eb8:	2d00      	cmp	r5, #0
 8022eba:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8022ebe:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8022ec2:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8022ec6:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8022eca:	fb05 0e03 	mla	lr, r5, r3, r0
 8022ece:	f2c0 808c 	blt.w	8022fea <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8022ed2:	45a9      	cmp	r9, r5
 8022ed4:	f340 8089 	ble.w	8022fea <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8022ed8:	2800      	cmp	r0, #0
 8022eda:	f2c0 8084 	blt.w	8022fe6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8022ede:	4580      	cmp	r8, r0
 8022ee0:	f340 8081 	ble.w	8022fe6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8022ee4:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8022ee8:	f01e 0f01 	tst.w	lr, #1
 8022eec:	5d16      	ldrb	r6, [r2, r4]
 8022eee:	bf0c      	ite	eq
 8022ef0:	f006 060f 	andeq.w	r6, r6, #15
 8022ef4:	1136      	asrne	r6, r6, #4
 8022ef6:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8022efa:	b2f6      	uxtb	r6, r6
 8022efc:	1c44      	adds	r4, r0, #1
 8022efe:	d477      	bmi.n	8022ff0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8022f00:	45a0      	cmp	r8, r4
 8022f02:	dd75      	ble.n	8022ff0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8022f04:	2f00      	cmp	r7, #0
 8022f06:	d075      	beq.n	8022ff4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 8022f08:	f10e 0a01 	add.w	sl, lr, #1
 8022f0c:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8022f10:	f01a 0f01 	tst.w	sl, #1
 8022f14:	5d14      	ldrb	r4, [r2, r4]
 8022f16:	bf0c      	ite	eq
 8022f18:	f004 040f 	andeq.w	r4, r4, #15
 8022f1c:	1124      	asrne	r4, r4, #4
 8022f1e:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8022f22:	b2e4      	uxtb	r4, r4
 8022f24:	3501      	adds	r5, #1
 8022f26:	d469      	bmi.n	8022ffc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8022f28:	45a9      	cmp	r9, r5
 8022f2a:	dd67      	ble.n	8022ffc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8022f2c:	f1bc 0f00 	cmp.w	ip, #0
 8022f30:	d067      	beq.n	8023002 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 8022f32:	2800      	cmp	r0, #0
 8022f34:	db60      	blt.n	8022ff8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 8022f36:	4580      	cmp	r8, r0
 8022f38:	dd5e      	ble.n	8022ff8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 8022f3a:	eb03 090e 	add.w	r9, r3, lr
 8022f3e:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8022f42:	f019 0f01 	tst.w	r9, #1
 8022f46:	5d55      	ldrb	r5, [r2, r5]
 8022f48:	bf0c      	ite	eq
 8022f4a:	f005 050f 	andeq.w	r5, r5, #15
 8022f4e:	112d      	asrne	r5, r5, #4
 8022f50:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8022f54:	b2ed      	uxtb	r5, r5
 8022f56:	3001      	adds	r0, #1
 8022f58:	d456      	bmi.n	8023008 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 8022f5a:	4580      	cmp	r8, r0
 8022f5c:	dd54      	ble.n	8023008 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 8022f5e:	2f00      	cmp	r7, #0
 8022f60:	d054      	beq.n	802300c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 8022f62:	3301      	adds	r3, #1
 8022f64:	449e      	add	lr, r3
 8022f66:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8022f6a:	f01e 0f01 	tst.w	lr, #1
 8022f6e:	5cd0      	ldrb	r0, [r2, r3]
 8022f70:	bf0c      	ite	eq
 8022f72:	f000 000f 	andeq.w	r0, r0, #15
 8022f76:	1100      	asrne	r0, r0, #4
 8022f78:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8022f7c:	b2c3      	uxtb	r3, r0
 8022f7e:	b2ba      	uxth	r2, r7
 8022f80:	fa1f fc8c 	uxth.w	ip, ip
 8022f84:	fb02 f00c 	mul.w	r0, r2, ip
 8022f88:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8022f8c:	0112      	lsls	r2, r2, #4
 8022f8e:	fa1f fc8c 	uxth.w	ip, ip
 8022f92:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8022f96:	1a12      	subs	r2, r2, r0
 8022f98:	eba7 070c 	sub.w	r7, r7, ip
 8022f9c:	b292      	uxth	r2, r2
 8022f9e:	b2bf      	uxth	r7, r7
 8022fa0:	4362      	muls	r2, r4
 8022fa2:	fb06 2207 	mla	r2, r6, r7, r2
 8022fa6:	fb0c 2505 	mla	r5, ip, r5, r2
 8022faa:	fb00 5303 	mla	r3, r0, r3, r5
 8022fae:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8022fb2:	b1b3      	cbz	r3, 8022fe2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8022fb4:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 8022fb8:	435a      	muls	r2, r3
 8022fba:	1c53      	adds	r3, r2, #1
 8022fbc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022fc0:	4a2d      	ldr	r2, [pc, #180]	; (8023078 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 8022fc2:	121b      	asrs	r3, r3, #8
 8022fc4:	6812      	ldr	r2, [r2, #0]
 8022fc6:	2bff      	cmp	r3, #255	; 0xff
 8022fc8:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8022fcc:	d120      	bne.n	8023010 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 8022fce:	4b2b      	ldr	r3, [pc, #172]	; (802307c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 8022fd0:	0950      	lsrs	r0, r2, #5
 8022fd2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022fd6:	4033      	ands	r3, r6
 8022fd8:	4318      	orrs	r0, r3
 8022fda:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8022fde:	4302      	orrs	r2, r0
 8022fe0:	800a      	strh	r2, [r1, #0]
 8022fe2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8022fe6:	2600      	movs	r6, #0
 8022fe8:	e788      	b.n	8022efc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 8022fea:	2400      	movs	r4, #0
 8022fec:	4626      	mov	r6, r4
 8022fee:	e799      	b.n	8022f24 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8022ff0:	2400      	movs	r4, #0
 8022ff2:	e797      	b.n	8022f24 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8022ff4:	463c      	mov	r4, r7
 8022ff6:	e795      	b.n	8022f24 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8022ff8:	2500      	movs	r5, #0
 8022ffa:	e7ac      	b.n	8022f56 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 8022ffc:	2300      	movs	r3, #0
 8022ffe:	461d      	mov	r5, r3
 8023000:	e7bd      	b.n	8022f7e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8023002:	4663      	mov	r3, ip
 8023004:	4665      	mov	r5, ip
 8023006:	e7ba      	b.n	8022f7e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8023008:	2300      	movs	r3, #0
 802300a:	e7b8      	b.n	8022f7e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 802300c:	463b      	mov	r3, r7
 802300e:	e7b6      	b.n	8022f7e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8023010:	880d      	ldrh	r5, [r1, #0]
 8023012:	b29f      	uxth	r7, r3
 8023014:	122c      	asrs	r4, r5, #8
 8023016:	f3c2 4007 	ubfx	r0, r2, #16, #8
 802301a:	43db      	mvns	r3, r3
 802301c:	b2db      	uxtb	r3, r3
 802301e:	fb10 f007 	smulbb	r0, r0, r7
 8023022:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8023026:	fb04 0403 	mla	r4, r4, r3, r0
 802302a:	b2f6      	uxtb	r6, r6
 802302c:	10e8      	asrs	r0, r5, #3
 802302e:	b2d2      	uxtb	r2, r2
 8023030:	00ed      	lsls	r5, r5, #3
 8023032:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8023036:	fb12 f207 	smulbb	r2, r2, r7
 802303a:	fb16 f607 	smulbb	r6, r6, r7
 802303e:	b2ed      	uxtb	r5, r5
 8023040:	b2a4      	uxth	r4, r4
 8023042:	fb00 6603 	mla	r6, r0, r3, r6
 8023046:	fb05 2303 	mla	r3, r5, r3, r2
 802304a:	b29a      	uxth	r2, r3
 802304c:	1c63      	adds	r3, r4, #1
 802304e:	b2b0      	uxth	r0, r6
 8023050:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8023054:	1c53      	adds	r3, r2, #1
 8023056:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802305a:	1c42      	adds	r2, r0, #1
 802305c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8023060:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8023064:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023068:	0940      	lsrs	r0, r0, #5
 802306a:	4323      	orrs	r3, r4
 802306c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023070:	4303      	orrs	r3, r0
 8023072:	800b      	strh	r3, [r1, #0]
 8023074:	e7b5      	b.n	8022fe2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8023076:	bf00      	nop
 8023078:	200137cc 	.word	0x200137cc
 802307c:	00fff800 	.word	0x00fff800

08023080 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023080:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023084:	b097      	sub	sp, #92	; 0x5c
 8023086:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 802308a:	9214      	str	r2, [sp, #80]	; 0x50
 802308c:	9309      	str	r3, [sp, #36]	; 0x24
 802308e:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8023090:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8023094:	910d      	str	r1, [sp, #52]	; 0x34
 8023096:	930f      	str	r3, [sp, #60]	; 0x3c
 8023098:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 802309c:	9015      	str	r0, [sp, #84]	; 0x54
 802309e:	6850      	ldr	r0, [r2, #4]
 80230a0:	6812      	ldr	r2, [r2, #0]
 80230a2:	fb00 1303 	mla	r3, r0, r3, r1
 80230a6:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 80230aa:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80230ac:	689b      	ldr	r3, [r3, #8]
 80230ae:	3301      	adds	r3, #1
 80230b0:	f023 0301 	bic.w	r3, r3, #1
 80230b4:	930a      	str	r3, [sp, #40]	; 0x28
 80230b6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80230b8:	681f      	ldr	r7, [r3, #0]
 80230ba:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80230bc:	2b00      	cmp	r3, #0
 80230be:	dc03      	bgt.n	80230c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80230c0:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80230c2:	2b00      	cmp	r3, #0
 80230c4:	f340 8287 	ble.w	80235d6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 80230c8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80230ca:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80230ce:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80230d2:	1e48      	subs	r0, r1, #1
 80230d4:	f102 3cff 	add.w	ip, r2, #4294967295
 80230d8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80230da:	2b00      	cmp	r3, #0
 80230dc:	f340 80c4 	ble.w	8023268 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80230e0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80230e4:	ea4f 4326 	mov.w	r3, r6, asr #16
 80230e8:	d406      	bmi.n	80230f8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80230ea:	4586      	cmp	lr, r0
 80230ec:	da04      	bge.n	80230f8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80230ee:	2b00      	cmp	r3, #0
 80230f0:	db02      	blt.n	80230f8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80230f2:	4563      	cmp	r3, ip
 80230f4:	f2c0 80b9 	blt.w	802326a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 80230f8:	f11e 0e01 	adds.w	lr, lr, #1
 80230fc:	f100 80aa 	bmi.w	8023254 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8023100:	4571      	cmp	r1, lr
 8023102:	f2c0 80a7 	blt.w	8023254 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8023106:	3301      	adds	r3, #1
 8023108:	f100 80a4 	bmi.w	8023254 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 802310c:	429a      	cmp	r2, r3
 802310e:	f2c0 80a1 	blt.w	8023254 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8023112:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023114:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 8023118:	930e      	str	r3, [sp, #56]	; 0x38
 802311a:	46c8      	mov	r8, r9
 802311c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802311e:	2b00      	cmp	r3, #0
 8023120:	f340 80c3 	ble.w	80232aa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8023124:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8023126:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 802312a:	1423      	asrs	r3, r4, #16
 802312c:	ea4f 4026 	mov.w	r0, r6, asr #16
 8023130:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8023134:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8023138:	f100 814d 	bmi.w	80233d6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802313c:	f10c 3bff 	add.w	fp, ip, #4294967295
 8023140:	455b      	cmp	r3, fp
 8023142:	f280 8148 	bge.w	80233d6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8023146:	2800      	cmp	r0, #0
 8023148:	f2c0 8145 	blt.w	80233d6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802314c:	f10e 3bff 	add.w	fp, lr, #4294967295
 8023150:	4558      	cmp	r0, fp
 8023152:	f280 8140 	bge.w	80233d6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8023156:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8023158:	fb00 3305 	mla	r3, r0, r5, r3
 802315c:	0858      	lsrs	r0, r3, #1
 802315e:	07dd      	lsls	r5, r3, #31
 8023160:	f817 c000 	ldrb.w	ip, [r7, r0]
 8023164:	bf54      	ite	pl
 8023166:	f00c 0c0f 	andpl.w	ip, ip, #15
 802316a:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 802316e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8023172:	fa5f fc8c 	uxtb.w	ip, ip
 8023176:	2a00      	cmp	r2, #0
 8023178:	f000 80db 	beq.w	8023332 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 802317c:	1c58      	adds	r0, r3, #1
 802317e:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8023182:	07c0      	lsls	r0, r0, #31
 8023184:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8023188:	bf54      	ite	pl
 802318a:	f00e 0e0f 	andpl.w	lr, lr, #15
 802318e:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8023192:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8023196:	fa5f f08e 	uxtb.w	r0, lr
 802319a:	9010      	str	r0, [sp, #64]	; 0x40
 802319c:	b1c9      	cbz	r1, 80231d2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 802319e:	4453      	add	r3, sl
 80231a0:	0858      	lsrs	r0, r3, #1
 80231a2:	07dd      	lsls	r5, r3, #31
 80231a4:	5c38      	ldrb	r0, [r7, r0]
 80231a6:	bf54      	ite	pl
 80231a8:	f000 000f 	andpl.w	r0, r0, #15
 80231ac:	1100      	asrmi	r0, r0, #4
 80231ae:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80231b2:	3301      	adds	r3, #1
 80231b4:	b2c0      	uxtb	r0, r0
 80231b6:	900b      	str	r0, [sp, #44]	; 0x2c
 80231b8:	0858      	lsrs	r0, r3, #1
 80231ba:	07dd      	lsls	r5, r3, #31
 80231bc:	f817 e000 	ldrb.w	lr, [r7, r0]
 80231c0:	bf54      	ite	pl
 80231c2:	f00e 030f 	andpl.w	r3, lr, #15
 80231c6:	ea4f 132e 	movmi.w	r3, lr, asr #4
 80231ca:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80231ce:	b2db      	uxtb	r3, r3
 80231d0:	9311      	str	r3, [sp, #68]	; 0x44
 80231d2:	b292      	uxth	r2, r2
 80231d4:	b289      	uxth	r1, r1
 80231d6:	fb02 f301 	mul.w	r3, r2, r1
 80231da:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 80231de:	0112      	lsls	r2, r2, #4
 80231e0:	b289      	uxth	r1, r1
 80231e2:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 80231e6:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80231e8:	1ad2      	subs	r2, r2, r3
 80231ea:	1a40      	subs	r0, r0, r1
 80231ec:	b292      	uxth	r2, r2
 80231ee:	436a      	muls	r2, r5
 80231f0:	b280      	uxth	r0, r0
 80231f2:	fb0c 2c00 	mla	ip, ip, r0, r2
 80231f6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80231f8:	fb01 c102 	mla	r1, r1, r2, ip
 80231fc:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80231fe:	fb03 1302 	mla	r3, r3, r2, r1
 8023202:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8023206:	b1db      	cbz	r3, 8023240 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8023208:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802320a:	4353      	muls	r3, r2
 802320c:	1c5a      	adds	r2, r3, #1
 802320e:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8023212:	4ac6      	ldr	r2, [pc, #792]	; (802352c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8023214:	121b      	asrs	r3, r3, #8
 8023216:	6812      	ldr	r2, [r2, #0]
 8023218:	2bff      	cmp	r3, #255	; 0xff
 802321a:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 802321e:	f040 8099 	bne.w	8023354 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 8023222:	0953      	lsrs	r3, r2, #5
 8023224:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8023228:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802322c:	f02c 0c07 	bic.w	ip, ip, #7
 8023230:	ea43 0c0c 	orr.w	ip, r3, ip
 8023234:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8023238:	ea4c 0202 	orr.w	r2, ip, r2
 802323c:	f8a8 2000 	strh.w	r2, [r8]
 8023240:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8023242:	441c      	add	r4, r3
 8023244:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023246:	441e      	add	r6, r3
 8023248:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802324a:	3b01      	subs	r3, #1
 802324c:	f108 0802 	add.w	r8, r8, #2
 8023250:	930e      	str	r3, [sp, #56]	; 0x38
 8023252:	e763      	b.n	802311c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8023254:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8023256:	441c      	add	r4, r3
 8023258:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802325a:	441e      	add	r6, r3
 802325c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802325e:	3b01      	subs	r3, #1
 8023260:	9309      	str	r3, [sp, #36]	; 0x24
 8023262:	f109 0902 	add.w	r9, r9, #2
 8023266:	e737      	b.n	80230d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8023268:	d024      	beq.n	80232b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 802326a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802326c:	9823      	ldr	r0, [sp, #140]	; 0x8c
 802326e:	3b01      	subs	r3, #1
 8023270:	fb00 4003 	mla	r0, r0, r3, r4
 8023274:	1400      	asrs	r0, r0, #16
 8023276:	f53f af4c 	bmi.w	8023112 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802327a:	3901      	subs	r1, #1
 802327c:	4288      	cmp	r0, r1
 802327e:	f6bf af48 	bge.w	8023112 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8023282:	9924      	ldr	r1, [sp, #144]	; 0x90
 8023284:	fb01 6303 	mla	r3, r1, r3, r6
 8023288:	141b      	asrs	r3, r3, #16
 802328a:	f53f af42 	bmi.w	8023112 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802328e:	3a01      	subs	r2, #1
 8023290:	4293      	cmp	r3, r2
 8023292:	f6bf af3e 	bge.w	8023112 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8023296:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 802329a:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 802329e:	930e      	str	r3, [sp, #56]	; 0x38
 80232a0:	46c8      	mov	r8, r9
 80232a2:	f1bb 0f00 	cmp.w	fp, #0
 80232a6:	f300 80b7 	bgt.w	8023418 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 80232aa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80232ac:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80232b0:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80232b4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80232b6:	2b00      	cmp	r3, #0
 80232b8:	f340 818d 	ble.w	80235d6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 80232bc:	ee30 0a04 	vadd.f32	s0, s0, s8
 80232c0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80232c4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80232c8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80232ca:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80232ce:	ee31 1a05 	vadd.f32	s2, s2, s10
 80232d2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80232d6:	eef0 6a62 	vmov.f32	s13, s5
 80232da:	ee61 7a27 	vmul.f32	s15, s2, s15
 80232de:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80232e2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80232e6:	ee16 4a90 	vmov	r4, s13
 80232ea:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80232ee:	eef0 6a43 	vmov.f32	s13, s6
 80232f2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80232f6:	ee12 2a90 	vmov	r2, s5
 80232fa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80232fe:	fb92 f3f3 	sdiv	r3, r2, r3
 8023302:	ee13 2a10 	vmov	r2, s6
 8023306:	9323      	str	r3, [sp, #140]	; 0x8c
 8023308:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802330a:	fb92 f3f3 	sdiv	r3, r2, r3
 802330e:	9324      	str	r3, [sp, #144]	; 0x90
 8023310:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8023312:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8023314:	3b01      	subs	r3, #1
 8023316:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802331a:	930d      	str	r3, [sp, #52]	; 0x34
 802331c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802331e:	bf08      	it	eq
 8023320:	4613      	moveq	r3, r2
 8023322:	ee16 6a90 	vmov	r6, s13
 8023326:	9309      	str	r3, [sp, #36]	; 0x24
 8023328:	eeb0 3a67 	vmov.f32	s6, s15
 802332c:	eef0 2a47 	vmov.f32	s5, s14
 8023330:	e6c3      	b.n	80230ba <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8023332:	2900      	cmp	r1, #0
 8023334:	f43f af4d 	beq.w	80231d2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8023338:	eb0a 0003 	add.w	r0, sl, r3
 802333c:	0843      	lsrs	r3, r0, #1
 802333e:	07c0      	lsls	r0, r0, #31
 8023340:	5cfb      	ldrb	r3, [r7, r3]
 8023342:	bf54      	ite	pl
 8023344:	f003 030f 	andpl.w	r3, r3, #15
 8023348:	111b      	asrmi	r3, r3, #4
 802334a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 802334e:	b2db      	uxtb	r3, r3
 8023350:	930b      	str	r3, [sp, #44]	; 0x2c
 8023352:	e73e      	b.n	80231d2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8023354:	f8b8 e000 	ldrh.w	lr, [r8]
 8023358:	fa1f fb83 	uxth.w	fp, r3
 802335c:	ea4f 202e 	mov.w	r0, lr, asr #8
 8023360:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8023364:	43db      	mvns	r3, r3
 8023366:	b2db      	uxtb	r3, r3
 8023368:	fb11 f10b 	smulbb	r1, r1, fp
 802336c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8023370:	fb00 1003 	mla	r0, r0, r3, r1
 8023374:	fa5f fc8c 	uxtb.w	ip, ip
 8023378:	ea4f 01ee 	mov.w	r1, lr, asr #3
 802337c:	b2d2      	uxtb	r2, r2
 802337e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8023382:	b280      	uxth	r0, r0
 8023384:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8023388:	fb1c fc0b 	smulbb	ip, ip, fp
 802338c:	fa5f fe8e 	uxtb.w	lr, lr
 8023390:	fb12 fb0b 	smulbb	fp, r2, fp
 8023394:	fb01 cc03 	mla	ip, r1, r3, ip
 8023398:	fb0e bb03 	mla	fp, lr, r3, fp
 802339c:	1c43      	adds	r3, r0, #1
 802339e:	fa1f fc8c 	uxth.w	ip, ip
 80233a2:	fa1f fb8b 	uxth.w	fp, fp
 80233a6:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80233aa:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 80233ae:	f10c 0101 	add.w	r1, ip, #1
 80233b2:	f10b 0001 	add.w	r0, fp, #1
 80233b6:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 80233ba:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80233be:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80233c2:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80233c6:	4318      	orrs	r0, r3
 80233c8:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80233cc:	ea40 000c 	orr.w	r0, r0, ip
 80233d0:	f8a8 0000 	strh.w	r0, [r8]
 80233d4:	e734      	b.n	8023240 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80233d6:	f113 0b01 	adds.w	fp, r3, #1
 80233da:	f53f af31 	bmi.w	8023240 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80233de:	45dc      	cmp	ip, fp
 80233e0:	f6ff af2e 	blt.w	8023240 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80233e4:	f110 0b01 	adds.w	fp, r0, #1
 80233e8:	f53f af2a 	bmi.w	8023240 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80233ec:	45de      	cmp	lr, fp
 80233ee:	f6ff af27 	blt.w	8023240 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80233f2:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80233f4:	9302      	str	r3, [sp, #8]
 80233f6:	fa0f f38e 	sxth.w	r3, lr
 80233fa:	9301      	str	r3, [sp, #4]
 80233fc:	fa0f f38c 	sxth.w	r3, ip
 8023400:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8023404:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8023408:	9300      	str	r3, [sp, #0]
 802340a:	463a      	mov	r2, r7
 802340c:	4653      	mov	r3, sl
 802340e:	4641      	mov	r1, r8
 8023410:	9815      	ldr	r0, [sp, #84]	; 0x54
 8023412:	f7ff fd4d 	bl	8022eb0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 8023416:	e713      	b.n	8023240 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8023418:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 802341a:	1422      	asrs	r2, r4, #16
 802341c:	1433      	asrs	r3, r6, #16
 802341e:	fb05 2303 	mla	r3, r5, r3, r2
 8023422:	085a      	lsrs	r2, r3, #1
 8023424:	07dd      	lsls	r5, r3, #31
 8023426:	5cba      	ldrb	r2, [r7, r2]
 8023428:	bf54      	ite	pl
 802342a:	f002 020f 	andpl.w	r2, r2, #15
 802342e:	1112      	asrmi	r2, r2, #4
 8023430:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8023434:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8023438:	f3c6 3003 	ubfx	r0, r6, #12, #4
 802343c:	b2d2      	uxtb	r2, r2
 802343e:	2900      	cmp	r1, #0
 8023440:	d076      	beq.n	8023530 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8023442:	f103 0e01 	add.w	lr, r3, #1
 8023446:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 802344a:	f01e 0f01 	tst.w	lr, #1
 802344e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8023452:	bf0c      	ite	eq
 8023454:	f00c 0c0f 	andeq.w	ip, ip, #15
 8023458:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 802345c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8023460:	fa5f f58c 	uxtb.w	r5, ip
 8023464:	9512      	str	r5, [sp, #72]	; 0x48
 8023466:	b300      	cbz	r0, 80234aa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8023468:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802346a:	442b      	add	r3, r5
 802346c:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8023470:	07dd      	lsls	r5, r3, #31
 8023472:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8023476:	bf54      	ite	pl
 8023478:	f00c 0c0f 	andpl.w	ip, ip, #15
 802347c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8023480:	3301      	adds	r3, #1
 8023482:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8023486:	fa5f f58c 	uxtb.w	r5, ip
 802348a:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 802348e:	950c      	str	r5, [sp, #48]	; 0x30
 8023490:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8023494:	07dd      	lsls	r5, r3, #31
 8023496:	bf54      	ite	pl
 8023498:	f00c 0c0f 	andpl.w	ip, ip, #15
 802349c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80234a0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80234a4:	fa5f f38c 	uxtb.w	r3, ip
 80234a8:	9313      	str	r3, [sp, #76]	; 0x4c
 80234aa:	b289      	uxth	r1, r1
 80234ac:	b280      	uxth	r0, r0
 80234ae:	fb01 f300 	mul.w	r3, r1, r0
 80234b2:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 80234b6:	0109      	lsls	r1, r1, #4
 80234b8:	b280      	uxth	r0, r0
 80234ba:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 80234be:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80234c0:	1ac9      	subs	r1, r1, r3
 80234c2:	ebac 0c00 	sub.w	ip, ip, r0
 80234c6:	b289      	uxth	r1, r1
 80234c8:	4369      	muls	r1, r5
 80234ca:	fa1f fc8c 	uxth.w	ip, ip
 80234ce:	fb02 120c 	mla	r2, r2, ip, r1
 80234d2:	990c      	ldr	r1, [sp, #48]	; 0x30
 80234d4:	fb00 2001 	mla	r0, r0, r1, r2
 80234d8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80234da:	fb03 0302 	mla	r3, r3, r2, r0
 80234de:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80234e2:	b1d3      	cbz	r3, 802351a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 80234e4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80234e6:	4353      	muls	r3, r2
 80234e8:	1c5a      	adds	r2, r3, #1
 80234ea:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80234ee:	4a0f      	ldr	r2, [pc, #60]	; (802352c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 80234f0:	121b      	asrs	r3, r3, #8
 80234f2:	6812      	ldr	r2, [r2, #0]
 80234f4:	2bff      	cmp	r3, #255	; 0xff
 80234f6:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 80234fa:	d12d      	bne.n	8023558 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 80234fc:	0953      	lsrs	r3, r2, #5
 80234fe:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8023502:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023506:	f02c 0c07 	bic.w	ip, ip, #7
 802350a:	ea43 0c0c 	orr.w	ip, r3, ip
 802350e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8023512:	ea4c 0202 	orr.w	r2, ip, r2
 8023516:	f8a8 2000 	strh.w	r2, [r8]
 802351a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 802351c:	441c      	add	r4, r3
 802351e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023520:	f108 0802 	add.w	r8, r8, #2
 8023524:	441e      	add	r6, r3
 8023526:	f10b 3bff 	add.w	fp, fp, #4294967295
 802352a:	e6ba      	b.n	80232a2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 802352c:	200137cc 	.word	0x200137cc
 8023530:	2800      	cmp	r0, #0
 8023532:	d0ba      	beq.n	80234aa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8023534:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8023536:	442b      	add	r3, r5
 8023538:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 802353c:	07db      	lsls	r3, r3, #31
 802353e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8023542:	bf54      	ite	pl
 8023544:	f00c 0c0f 	andpl.w	ip, ip, #15
 8023548:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 802354c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8023550:	fa5f f38c 	uxtb.w	r3, ip
 8023554:	930c      	str	r3, [sp, #48]	; 0x30
 8023556:	e7a8      	b.n	80234aa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8023558:	f8b8 e000 	ldrh.w	lr, [r8]
 802355c:	fa1f fa83 	uxth.w	sl, r3
 8023560:	ea4f 202e 	mov.w	r0, lr, asr #8
 8023564:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8023568:	43db      	mvns	r3, r3
 802356a:	b2db      	uxtb	r3, r3
 802356c:	fb11 f10a 	smulbb	r1, r1, sl
 8023570:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8023574:	fb00 1003 	mla	r0, r0, r3, r1
 8023578:	b2d2      	uxtb	r2, r2
 802357a:	ea4f 01ee 	mov.w	r1, lr, asr #3
 802357e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8023582:	fa5f fe8e 	uxtb.w	lr, lr
 8023586:	fb12 f20a 	smulbb	r2, r2, sl
 802358a:	fb0e 2203 	mla	r2, lr, r3, r2
 802358e:	fa5f fc8c 	uxtb.w	ip, ip
 8023592:	b280      	uxth	r0, r0
 8023594:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8023598:	b292      	uxth	r2, r2
 802359a:	fb1c fc0a 	smulbb	ip, ip, sl
 802359e:	fb01 cc03 	mla	ip, r1, r3, ip
 80235a2:	1c43      	adds	r3, r0, #1
 80235a4:	1c51      	adds	r1, r2, #1
 80235a6:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80235aa:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 80235ae:	fa1f fc8c 	uxth.w	ip, ip
 80235b2:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 80235b6:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80235ba:	4308      	orrs	r0, r1
 80235bc:	f10c 0101 	add.w	r1, ip, #1
 80235c0:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80235c4:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80235c8:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80235cc:	ea40 000c 	orr.w	r0, r0, ip
 80235d0:	f8a8 0000 	strh.w	r0, [r8]
 80235d4:	e7a1      	b.n	802351a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 80235d6:	b017      	add	sp, #92	; 0x5c
 80235d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080235dc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 80235dc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80235e0:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 80235e4:	2d00      	cmp	r5, #0
 80235e6:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 80235ea:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 80235ee:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 80235f2:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 80235f6:	fb05 0e03 	mla	lr, r5, r3, r0
 80235fa:	f2c0 80b0 	blt.w	802375e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 80235fe:	45a9      	cmp	r9, r5
 8023600:	f340 80ad 	ble.w	802375e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8023604:	2800      	cmp	r0, #0
 8023606:	f2c0 80a8 	blt.w	802375a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 802360a:	4580      	cmp	r8, r0
 802360c:	f340 80a5 	ble.w	802375a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8023610:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8023614:	f01e 0f01 	tst.w	lr, #1
 8023618:	5d16      	ldrb	r6, [r2, r4]
 802361a:	bf0c      	ite	eq
 802361c:	f006 060f 	andeq.w	r6, r6, #15
 8023620:	1136      	asrne	r6, r6, #4
 8023622:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8023626:	b2f6      	uxtb	r6, r6
 8023628:	1c44      	adds	r4, r0, #1
 802362a:	f100 809b 	bmi.w	8023764 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 802362e:	45a0      	cmp	r8, r4
 8023630:	f340 8098 	ble.w	8023764 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8023634:	2f00      	cmp	r7, #0
 8023636:	f000 8097 	beq.w	8023768 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 802363a:	f10e 0a01 	add.w	sl, lr, #1
 802363e:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8023642:	f01a 0f01 	tst.w	sl, #1
 8023646:	5d14      	ldrb	r4, [r2, r4]
 8023648:	bf0c      	ite	eq
 802364a:	f004 040f 	andeq.w	r4, r4, #15
 802364e:	1124      	asrne	r4, r4, #4
 8023650:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8023654:	b2e4      	uxtb	r4, r4
 8023656:	3501      	adds	r5, #1
 8023658:	f100 808a 	bmi.w	8023770 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 802365c:	45a9      	cmp	r9, r5
 802365e:	f340 8087 	ble.w	8023770 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8023662:	f1bc 0f00 	cmp.w	ip, #0
 8023666:	f000 8086 	beq.w	8023776 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 802366a:	2800      	cmp	r0, #0
 802366c:	db7e      	blt.n	802376c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 802366e:	4580      	cmp	r8, r0
 8023670:	dd7c      	ble.n	802376c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8023672:	eb03 090e 	add.w	r9, r3, lr
 8023676:	ea4f 0559 	mov.w	r5, r9, lsr #1
 802367a:	f019 0f01 	tst.w	r9, #1
 802367e:	5d55      	ldrb	r5, [r2, r5]
 8023680:	bf0c      	ite	eq
 8023682:	f005 050f 	andeq.w	r5, r5, #15
 8023686:	112d      	asrne	r5, r5, #4
 8023688:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 802368c:	b2ed      	uxtb	r5, r5
 802368e:	3001      	adds	r0, #1
 8023690:	d474      	bmi.n	802377c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8023692:	4580      	cmp	r8, r0
 8023694:	dd72      	ble.n	802377c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8023696:	2f00      	cmp	r7, #0
 8023698:	d072      	beq.n	8023780 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 802369a:	3301      	adds	r3, #1
 802369c:	449e      	add	lr, r3
 802369e:	ea4f 035e 	mov.w	r3, lr, lsr #1
 80236a2:	f01e 0f01 	tst.w	lr, #1
 80236a6:	5cd0      	ldrb	r0, [r2, r3]
 80236a8:	bf0c      	ite	eq
 80236aa:	f000 000f 	andeq.w	r0, r0, #15
 80236ae:	1100      	asrne	r0, r0, #4
 80236b0:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80236b4:	b2c3      	uxtb	r3, r0
 80236b6:	b2ba      	uxth	r2, r7
 80236b8:	fa1f fc8c 	uxth.w	ip, ip
 80236bc:	fb02 f00c 	mul.w	r0, r2, ip
 80236c0:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 80236c4:	0112      	lsls	r2, r2, #4
 80236c6:	fa1f fc8c 	uxth.w	ip, ip
 80236ca:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 80236ce:	1a12      	subs	r2, r2, r0
 80236d0:	eba7 070c 	sub.w	r7, r7, ip
 80236d4:	b292      	uxth	r2, r2
 80236d6:	b2bf      	uxth	r7, r7
 80236d8:	4362      	muls	r2, r4
 80236da:	fb06 2207 	mla	r2, r6, r7, r2
 80236de:	fb0c 2505 	mla	r5, ip, r5, r2
 80236e2:	fb00 5303 	mla	r3, r0, r3, r5
 80236e6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80236ea:	b3a3      	cbz	r3, 8023756 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 80236ec:	4a25      	ldr	r2, [pc, #148]	; (8023784 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 80236ee:	880e      	ldrh	r6, [r1, #0]
 80236f0:	6815      	ldr	r5, [r2, #0]
 80236f2:	1234      	asrs	r4, r6, #8
 80236f4:	b29a      	uxth	r2, r3
 80236f6:	f3c5 4007 	ubfx	r0, r5, #16, #8
 80236fa:	43db      	mvns	r3, r3
 80236fc:	b2db      	uxtb	r3, r3
 80236fe:	fb10 f002 	smulbb	r0, r0, r2
 8023702:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8023706:	fb04 0403 	mla	r4, r4, r3, r0
 802370a:	f3c5 2707 	ubfx	r7, r5, #8, #8
 802370e:	10f0      	asrs	r0, r6, #3
 8023710:	b2ed      	uxtb	r5, r5
 8023712:	00f6      	lsls	r6, r6, #3
 8023714:	fb17 f702 	smulbb	r7, r7, r2
 8023718:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802371c:	fb15 f202 	smulbb	r2, r5, r2
 8023720:	b2f6      	uxtb	r6, r6
 8023722:	b2a4      	uxth	r4, r4
 8023724:	fb00 7003 	mla	r0, r0, r3, r7
 8023728:	fb06 2303 	mla	r3, r6, r3, r2
 802372c:	b29a      	uxth	r2, r3
 802372e:	1c63      	adds	r3, r4, #1
 8023730:	b280      	uxth	r0, r0
 8023732:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8023736:	1c53      	adds	r3, r2, #1
 8023738:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802373c:	1c42      	adds	r2, r0, #1
 802373e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8023742:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8023746:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802374a:	0940      	lsrs	r0, r0, #5
 802374c:	4323      	orrs	r3, r4
 802374e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023752:	4303      	orrs	r3, r0
 8023754:	800b      	strh	r3, [r1, #0]
 8023756:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802375a:	2600      	movs	r6, #0
 802375c:	e764      	b.n	8023628 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 802375e:	2400      	movs	r4, #0
 8023760:	4626      	mov	r6, r4
 8023762:	e778      	b.n	8023656 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8023764:	2400      	movs	r4, #0
 8023766:	e776      	b.n	8023656 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8023768:	463c      	mov	r4, r7
 802376a:	e774      	b.n	8023656 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 802376c:	2500      	movs	r5, #0
 802376e:	e78e      	b.n	802368e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 8023770:	2300      	movs	r3, #0
 8023772:	461d      	mov	r5, r3
 8023774:	e79f      	b.n	80236b6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8023776:	4663      	mov	r3, ip
 8023778:	4665      	mov	r5, ip
 802377a:	e79c      	b.n	80236b6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 802377c:	2300      	movs	r3, #0
 802377e:	e79a      	b.n	80236b6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8023780:	463b      	mov	r3, r7
 8023782:	e798      	b.n	80236b6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8023784:	200137cc 	.word	0x200137cc

08023788 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023788:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802378c:	b093      	sub	sp, #76	; 0x4c
 802378e:	461d      	mov	r5, r3
 8023790:	920c      	str	r2, [sp, #48]	; 0x30
 8023792:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8023794:	9107      	str	r1, [sp, #28]
 8023796:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 802379a:	9011      	str	r0, [sp, #68]	; 0x44
 802379c:	6850      	ldr	r0, [r2, #4]
 802379e:	6812      	ldr	r2, [r2, #0]
 80237a0:	fb00 1303 	mla	r3, r0, r3, r1
 80237a4:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 80237a8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80237aa:	689b      	ldr	r3, [r3, #8]
 80237ac:	3301      	adds	r3, #1
 80237ae:	f023 0301 	bic.w	r3, r3, #1
 80237b2:	9306      	str	r3, [sp, #24]
 80237b4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80237b6:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 80237ba:	681f      	ldr	r7, [r3, #0]
 80237bc:	9b07      	ldr	r3, [sp, #28]
 80237be:	2b00      	cmp	r3, #0
 80237c0:	dc03      	bgt.n	80237ca <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 80237c2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80237c4:	2b00      	cmp	r3, #0
 80237c6:	f340 8267 	ble.w	8023c98 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 80237ca:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80237cc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80237d0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80237d4:	1e48      	subs	r0, r1, #1
 80237d6:	f102 3cff 	add.w	ip, r2, #4294967295
 80237da:	2d00      	cmp	r5, #0
 80237dc:	f340 80b8 	ble.w	8023950 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80237e0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80237e4:	ea4f 4326 	mov.w	r3, r6, asr #16
 80237e8:	d406      	bmi.n	80237f8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80237ea:	4586      	cmp	lr, r0
 80237ec:	da04      	bge.n	80237f8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80237ee:	2b00      	cmp	r3, #0
 80237f0:	db02      	blt.n	80237f8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80237f2:	4563      	cmp	r3, ip
 80237f4:	f2c0 80ad 	blt.w	8023952 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 80237f8:	f11e 0e01 	adds.w	lr, lr, #1
 80237fc:	f100 80a0 	bmi.w	8023940 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8023800:	4571      	cmp	r1, lr
 8023802:	f2c0 809d 	blt.w	8023940 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8023806:	3301      	adds	r3, #1
 8023808:	f100 809a 	bmi.w	8023940 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 802380c:	429a      	cmp	r2, r3
 802380e:	f2c0 8097 	blt.w	8023940 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8023812:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 8023816:	9509      	str	r5, [sp, #36]	; 0x24
 8023818:	46c8      	mov	r8, r9
 802381a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802381c:	2b00      	cmp	r3, #0
 802381e:	f340 80b6 	ble.w	802398e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8023822:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8023826:	9308      	str	r3, [sp, #32]
 8023828:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802382a:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 802382e:	1423      	asrs	r3, r4, #16
 8023830:	ea4f 4026 	mov.w	r0, r6, asr #16
 8023834:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8023838:	f100 813e 	bmi.w	8023ab8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 802383c:	f10c 3bff 	add.w	fp, ip, #4294967295
 8023840:	455b      	cmp	r3, fp
 8023842:	f280 8139 	bge.w	8023ab8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8023846:	2800      	cmp	r0, #0
 8023848:	f2c0 8136 	blt.w	8023ab8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 802384c:	f10e 3bff 	add.w	fp, lr, #4294967295
 8023850:	4558      	cmp	r0, fp
 8023852:	f280 8131 	bge.w	8023ab8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8023856:	9a06      	ldr	r2, [sp, #24]
 8023858:	fb00 3302 	mla	r3, r0, r2, r3
 802385c:	0858      	lsrs	r0, r3, #1
 802385e:	07da      	lsls	r2, r3, #31
 8023860:	f817 c000 	ldrb.w	ip, [r7, r0]
 8023864:	9a08      	ldr	r2, [sp, #32]
 8023866:	bf54      	ite	pl
 8023868:	f00c 0c0f 	andpl.w	ip, ip, #15
 802386c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8023870:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8023874:	fa5f fc8c 	uxtb.w	ip, ip
 8023878:	2a00      	cmp	r2, #0
 802387a:	f000 80cb 	beq.w	8023a14 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 802387e:	1c58      	adds	r0, r3, #1
 8023880:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8023884:	07c0      	lsls	r0, r0, #31
 8023886:	f817 e00e 	ldrb.w	lr, [r7, lr]
 802388a:	bf54      	ite	pl
 802388c:	f00e 0e0f 	andpl.w	lr, lr, #15
 8023890:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8023894:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8023898:	fa5f fe8e 	uxtb.w	lr, lr
 802389c:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 80238a0:	b1b9      	cbz	r1, 80238d2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80238a2:	4453      	add	r3, sl
 80238a4:	0858      	lsrs	r0, r3, #1
 80238a6:	07da      	lsls	r2, r3, #31
 80238a8:	5c38      	ldrb	r0, [r7, r0]
 80238aa:	bf54      	ite	pl
 80238ac:	f000 000f 	andpl.w	r0, r0, #15
 80238b0:	1100      	asrmi	r0, r0, #4
 80238b2:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80238b6:	b2c0      	uxtb	r0, r0
 80238b8:	900a      	str	r0, [sp, #40]	; 0x28
 80238ba:	1c58      	adds	r0, r3, #1
 80238bc:	0843      	lsrs	r3, r0, #1
 80238be:	07c2      	lsls	r2, r0, #31
 80238c0:	5cfb      	ldrb	r3, [r7, r3]
 80238c2:	bf54      	ite	pl
 80238c4:	f003 030f 	andpl.w	r3, r3, #15
 80238c8:	111b      	asrmi	r3, r3, #4
 80238ca:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80238ce:	b2db      	uxtb	r3, r3
 80238d0:	930e      	str	r3, [sp, #56]	; 0x38
 80238d2:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 80238d6:	b289      	uxth	r1, r1
 80238d8:	fb02 f301 	mul.w	r3, r2, r1
 80238dc:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 80238e0:	0112      	lsls	r2, r2, #4
 80238e2:	b289      	uxth	r1, r1
 80238e4:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 80238e8:	1a40      	subs	r0, r0, r1
 80238ea:	fa1f fe80 	uxth.w	lr, r0
 80238ee:	1ad2      	subs	r2, r2, r3
 80238f0:	980d      	ldr	r0, [sp, #52]	; 0x34
 80238f2:	b292      	uxth	r2, r2
 80238f4:	4342      	muls	r2, r0
 80238f6:	fb0c 2c0e 	mla	ip, ip, lr, r2
 80238fa:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80238fc:	fb01 c102 	mla	r1, r1, r2, ip
 8023900:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8023902:	fb03 1302 	mla	r3, r3, r2, r1
 8023906:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802390a:	2bff      	cmp	r3, #255	; 0xff
 802390c:	f040 8093 	bne.w	8023a36 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8023910:	4bbe      	ldr	r3, [pc, #760]	; (8023c0c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8023912:	681a      	ldr	r2, [r3, #0]
 8023914:	4bbe      	ldr	r3, [pc, #760]	; (8023c10 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8023916:	0951      	lsrs	r1, r2, #5
 8023918:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 802391c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8023920:	430b      	orrs	r3, r1
 8023922:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8023926:	4313      	orrs	r3, r2
 8023928:	f8a8 3000 	strh.w	r3, [r8]
 802392c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802392e:	441c      	add	r4, r3
 8023930:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023932:	441e      	add	r6, r3
 8023934:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023936:	3b01      	subs	r3, #1
 8023938:	f108 0802 	add.w	r8, r8, #2
 802393c:	9309      	str	r3, [sp, #36]	; 0x24
 802393e:	e76c      	b.n	802381a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8023940:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8023942:	441c      	add	r4, r3
 8023944:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023946:	3d01      	subs	r5, #1
 8023948:	441e      	add	r6, r3
 802394a:	f109 0902 	add.w	r9, r9, #2
 802394e:	e744      	b.n	80237da <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8023950:	d021      	beq.n	8023996 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8023952:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8023954:	1e6b      	subs	r3, r5, #1
 8023956:	fb00 4003 	mla	r0, r0, r3, r4
 802395a:	1400      	asrs	r0, r0, #16
 802395c:	f53f af59 	bmi.w	8023812 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8023960:	3901      	subs	r1, #1
 8023962:	4288      	cmp	r0, r1
 8023964:	f6bf af55 	bge.w	8023812 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8023968:	9920      	ldr	r1, [sp, #128]	; 0x80
 802396a:	fb01 6303 	mla	r3, r1, r3, r6
 802396e:	141b      	asrs	r3, r3, #16
 8023970:	f53f af4f 	bmi.w	8023812 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8023974:	3a01      	subs	r2, #1
 8023976:	4293      	cmp	r3, r2
 8023978:	f6bf af4b 	bge.w	8023812 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 802397c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8023980:	9308      	str	r3, [sp, #32]
 8023982:	46a8      	mov	r8, r5
 8023984:	46ce      	mov	lr, r9
 8023986:	f1b8 0f00 	cmp.w	r8, #0
 802398a:	f300 80b5 	bgt.w	8023af8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 802398e:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8023992:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8023996:	9b07      	ldr	r3, [sp, #28]
 8023998:	2b00      	cmp	r3, #0
 802399a:	f340 817d 	ble.w	8023c98 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 802399e:	ee30 0a04 	vadd.f32	s0, s0, s8
 80239a2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80239a6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80239aa:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80239ac:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80239b0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80239b4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80239b8:	eef0 6a62 	vmov.f32	s13, s5
 80239bc:	ee61 7a27 	vmul.f32	s15, s2, s15
 80239c0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80239c4:	ee77 2a62 	vsub.f32	s5, s14, s5
 80239c8:	ee16 4a90 	vmov	r4, s13
 80239cc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80239d0:	eef0 6a43 	vmov.f32	s13, s6
 80239d4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80239d8:	ee12 2a90 	vmov	r2, s5
 80239dc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80239e0:	fb92 f3f3 	sdiv	r3, r2, r3
 80239e4:	ee13 2a10 	vmov	r2, s6
 80239e8:	931f      	str	r3, [sp, #124]	; 0x7c
 80239ea:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80239ec:	fb92 f3f3 	sdiv	r3, r2, r3
 80239f0:	9320      	str	r3, [sp, #128]	; 0x80
 80239f2:	9b07      	ldr	r3, [sp, #28]
 80239f4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80239f6:	3b01      	subs	r3, #1
 80239f8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80239fc:	9307      	str	r3, [sp, #28]
 80239fe:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023a00:	ee16 6a90 	vmov	r6, s13
 8023a04:	bf14      	ite	ne
 8023a06:	461d      	movne	r5, r3
 8023a08:	4615      	moveq	r5, r2
 8023a0a:	eeb0 3a67 	vmov.f32	s6, s15
 8023a0e:	eef0 2a47 	vmov.f32	s5, s14
 8023a12:	e6d3      	b.n	80237bc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8023a14:	2900      	cmp	r1, #0
 8023a16:	f43f af5c 	beq.w	80238d2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8023a1a:	eb0a 0003 	add.w	r0, sl, r3
 8023a1e:	0843      	lsrs	r3, r0, #1
 8023a20:	07c0      	lsls	r0, r0, #31
 8023a22:	5cfb      	ldrb	r3, [r7, r3]
 8023a24:	bf54      	ite	pl
 8023a26:	f003 030f 	andpl.w	r3, r3, #15
 8023a2a:	111b      	asrmi	r3, r3, #4
 8023a2c:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8023a30:	b2db      	uxtb	r3, r3
 8023a32:	930a      	str	r3, [sp, #40]	; 0x28
 8023a34:	e74d      	b.n	80238d2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8023a36:	2b00      	cmp	r3, #0
 8023a38:	f43f af78 	beq.w	802392c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8023a3c:	4a73      	ldr	r2, [pc, #460]	; (8023c0c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8023a3e:	f8b8 c000 	ldrh.w	ip, [r8]
 8023a42:	6810      	ldr	r0, [r2, #0]
 8023a44:	fa1f fe83 	uxth.w	lr, r3
 8023a48:	ea4f 212c 	mov.w	r1, ip, asr #8
 8023a4c:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8023a50:	43db      	mvns	r3, r3
 8023a52:	b2db      	uxtb	r3, r3
 8023a54:	fb12 f20e 	smulbb	r2, r2, lr
 8023a58:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8023a5c:	fb01 2103 	mla	r1, r1, r3, r2
 8023a60:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8023a64:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8023a68:	b2c0      	uxtb	r0, r0
 8023a6a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8023a6e:	fb1b fb0e 	smulbb	fp, fp, lr
 8023a72:	b289      	uxth	r1, r1
 8023a74:	fb10 fe0e 	smulbb	lr, r0, lr
 8023a78:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8023a7c:	fa5f fc8c 	uxtb.w	ip, ip
 8023a80:	fb02 b203 	mla	r2, r2, r3, fp
 8023a84:	1c48      	adds	r0, r1, #1
 8023a86:	fb0c e303 	mla	r3, ip, r3, lr
 8023a8a:	b292      	uxth	r2, r2
 8023a8c:	b29b      	uxth	r3, r3
 8023a8e:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 8023a92:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 8023a96:	f102 0b01 	add.w	fp, r2, #1
 8023a9a:	1c59      	adds	r1, r3, #1
 8023a9c:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8023aa0:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8023aa4:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8023aa8:	0952      	lsrs	r2, r2, #5
 8023aaa:	4301      	orrs	r1, r0
 8023aac:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023ab0:	4311      	orrs	r1, r2
 8023ab2:	f8a8 1000 	strh.w	r1, [r8]
 8023ab6:	e739      	b.n	802392c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8023ab8:	f113 0b01 	adds.w	fp, r3, #1
 8023abc:	f53f af36 	bmi.w	802392c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8023ac0:	45dc      	cmp	ip, fp
 8023ac2:	f6ff af33 	blt.w	802392c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8023ac6:	f110 0b01 	adds.w	fp, r0, #1
 8023aca:	f53f af2f 	bmi.w	802392c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8023ace:	45de      	cmp	lr, fp
 8023ad0:	f6ff af2c 	blt.w	802392c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8023ad4:	9a08      	ldr	r2, [sp, #32]
 8023ad6:	9302      	str	r3, [sp, #8]
 8023ad8:	fa0f f38e 	sxth.w	r3, lr
 8023adc:	9301      	str	r3, [sp, #4]
 8023ade:	fa0f f38c 	sxth.w	r3, ip
 8023ae2:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8023ae6:	9105      	str	r1, [sp, #20]
 8023ae8:	9300      	str	r3, [sp, #0]
 8023aea:	463a      	mov	r2, r7
 8023aec:	4653      	mov	r3, sl
 8023aee:	4641      	mov	r1, r8
 8023af0:	9811      	ldr	r0, [sp, #68]	; 0x44
 8023af2:	f7ff fd73 	bl	80235dc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 8023af6:	e719      	b.n	802392c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8023af8:	9906      	ldr	r1, [sp, #24]
 8023afa:	1422      	asrs	r2, r4, #16
 8023afc:	1433      	asrs	r3, r6, #16
 8023afe:	fb01 2303 	mla	r3, r1, r3, r2
 8023b02:	085a      	lsrs	r2, r3, #1
 8023b04:	07d9      	lsls	r1, r3, #31
 8023b06:	5cba      	ldrb	r2, [r7, r2]
 8023b08:	bf54      	ite	pl
 8023b0a:	f002 020f 	andpl.w	r2, r2, #15
 8023b0e:	1112      	asrmi	r2, r2, #4
 8023b10:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8023b14:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8023b18:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8023b1c:	b2d2      	uxtb	r2, r2
 8023b1e:	2800      	cmp	r0, #0
 8023b20:	d062      	beq.n	8023be8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 8023b22:	f103 0a01 	add.w	sl, r3, #1
 8023b26:	ea4f 015a 	mov.w	r1, sl, lsr #1
 8023b2a:	f01a 0f01 	tst.w	sl, #1
 8023b2e:	5c79      	ldrb	r1, [r7, r1]
 8023b30:	bf0c      	ite	eq
 8023b32:	f001 010f 	andeq.w	r1, r1, #15
 8023b36:	1109      	asrne	r1, r1, #4
 8023b38:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8023b3c:	b2c9      	uxtb	r1, r1
 8023b3e:	910f      	str	r1, [sp, #60]	; 0x3c
 8023b40:	f1bc 0f00 	cmp.w	ip, #0
 8023b44:	d019      	beq.n	8023b7a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8023b46:	9908      	ldr	r1, [sp, #32]
 8023b48:	440b      	add	r3, r1
 8023b4a:	0859      	lsrs	r1, r3, #1
 8023b4c:	f013 0f01 	tst.w	r3, #1
 8023b50:	5c79      	ldrb	r1, [r7, r1]
 8023b52:	bf0c      	ite	eq
 8023b54:	f001 010f 	andeq.w	r1, r1, #15
 8023b58:	1109      	asrne	r1, r1, #4
 8023b5a:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8023b5e:	b2c9      	uxtb	r1, r1
 8023b60:	3301      	adds	r3, #1
 8023b62:	910b      	str	r1, [sp, #44]	; 0x2c
 8023b64:	0859      	lsrs	r1, r3, #1
 8023b66:	07db      	lsls	r3, r3, #31
 8023b68:	5c79      	ldrb	r1, [r7, r1]
 8023b6a:	bf54      	ite	pl
 8023b6c:	f001 010f 	andpl.w	r1, r1, #15
 8023b70:	1109      	asrmi	r1, r1, #4
 8023b72:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8023b76:	b2c9      	uxtb	r1, r1
 8023b78:	9110      	str	r1, [sp, #64]	; 0x40
 8023b7a:	b280      	uxth	r0, r0
 8023b7c:	fa1f fc8c 	uxth.w	ip, ip
 8023b80:	fb00 f30c 	mul.w	r3, r0, ip
 8023b84:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 8023b88:	0100      	lsls	r0, r0, #4
 8023b8a:	fa1f fc8c 	uxth.w	ip, ip
 8023b8e:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 8023b92:	eba1 010c 	sub.w	r1, r1, ip
 8023b96:	fa1f fa81 	uxth.w	sl, r1
 8023b9a:	1ac0      	subs	r0, r0, r3
 8023b9c:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8023b9e:	b280      	uxth	r0, r0
 8023ba0:	4348      	muls	r0, r1
 8023ba2:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8023ba4:	fb02 020a 	mla	r2, r2, sl, r0
 8023ba8:	fb0c 2c01 	mla	ip, ip, r1, r2
 8023bac:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8023bae:	fb03 c302 	mla	r3, r3, r2, ip
 8023bb2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8023bb6:	2bff      	cmp	r3, #255	; 0xff
 8023bb8:	d12c      	bne.n	8023c14 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 8023bba:	4b14      	ldr	r3, [pc, #80]	; (8023c0c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8023bbc:	681a      	ldr	r2, [r3, #0]
 8023bbe:	4b14      	ldr	r3, [pc, #80]	; (8023c10 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8023bc0:	0951      	lsrs	r1, r2, #5
 8023bc2:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8023bc6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8023bca:	430b      	orrs	r3, r1
 8023bcc:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8023bd0:	4313      	orrs	r3, r2
 8023bd2:	f8ae 3000 	strh.w	r3, [lr]
 8023bd6:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8023bd8:	441c      	add	r4, r3
 8023bda:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023bdc:	f10e 0e02 	add.w	lr, lr, #2
 8023be0:	441e      	add	r6, r3
 8023be2:	f108 38ff 	add.w	r8, r8, #4294967295
 8023be6:	e6ce      	b.n	8023986 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8023be8:	f1bc 0f00 	cmp.w	ip, #0
 8023bec:	d0c5      	beq.n	8023b7a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8023bee:	9908      	ldr	r1, [sp, #32]
 8023bf0:	440b      	add	r3, r1
 8023bf2:	0859      	lsrs	r1, r3, #1
 8023bf4:	07db      	lsls	r3, r3, #31
 8023bf6:	5c79      	ldrb	r1, [r7, r1]
 8023bf8:	bf54      	ite	pl
 8023bfa:	f001 010f 	andpl.w	r1, r1, #15
 8023bfe:	1109      	asrmi	r1, r1, #4
 8023c00:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8023c04:	b2c9      	uxtb	r1, r1
 8023c06:	910b      	str	r1, [sp, #44]	; 0x2c
 8023c08:	e7b7      	b.n	8023b7a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8023c0a:	bf00      	nop
 8023c0c:	200137cc 	.word	0x200137cc
 8023c10:	fffff800 	.word	0xfffff800
 8023c14:	2b00      	cmp	r3, #0
 8023c16:	d0de      	beq.n	8023bd6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8023c18:	4a21      	ldr	r2, [pc, #132]	; (8023ca0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 8023c1a:	f8be c000 	ldrh.w	ip, [lr]
 8023c1e:	6810      	ldr	r0, [r2, #0]
 8023c20:	fa1f fa83 	uxth.w	sl, r3
 8023c24:	ea4f 212c 	mov.w	r1, ip, asr #8
 8023c28:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8023c2c:	43db      	mvns	r3, r3
 8023c2e:	b2db      	uxtb	r3, r3
 8023c30:	fb12 f20a 	smulbb	r2, r2, sl
 8023c34:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8023c38:	fb01 2103 	mla	r1, r1, r3, r2
 8023c3c:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8023c40:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8023c44:	b2c0      	uxtb	r0, r0
 8023c46:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8023c4a:	fa5f fc8c 	uxtb.w	ip, ip
 8023c4e:	fb10 f00a 	smulbb	r0, r0, sl
 8023c52:	fb0c 0003 	mla	r0, ip, r3, r0
 8023c56:	b289      	uxth	r1, r1
 8023c58:	fb1b fb0a 	smulbb	fp, fp, sl
 8023c5c:	b280      	uxth	r0, r0
 8023c5e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8023c62:	fb02 b203 	mla	r2, r2, r3, fp
 8023c66:	1c4b      	adds	r3, r1, #1
 8023c68:	f100 0b01 	add.w	fp, r0, #1
 8023c6c:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8023c70:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8023c74:	b292      	uxth	r2, r2
 8023c76:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 8023c7a:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8023c7e:	ea4b 0101 	orr.w	r1, fp, r1
 8023c82:	f102 0b01 	add.w	fp, r2, #1
 8023c86:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8023c8a:	0952      	lsrs	r2, r2, #5
 8023c8c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023c90:	4311      	orrs	r1, r2
 8023c92:	f8ae 1000 	strh.w	r1, [lr]
 8023c96:	e79e      	b.n	8023bd6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8023c98:	b013      	add	sp, #76	; 0x4c
 8023c9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023c9e:	bf00      	nop
 8023ca0:	200137cc 	.word	0x200137cc

08023ca4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 8023ca4:	b570      	push	{r4, r5, r6, lr}
 8023ca6:	1208      	asrs	r0, r1, #8
 8023ca8:	b29e      	uxth	r6, r3
 8023caa:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8023cae:	1213      	asrs	r3, r2, #8
 8023cb0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8023cb4:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8023cb8:	fb13 f305 	smulbb	r3, r3, r5
 8023cbc:	fb10 f006 	smulbb	r0, r0, r6
 8023cc0:	4418      	add	r0, r3
 8023cc2:	10cc      	asrs	r4, r1, #3
 8023cc4:	10d3      	asrs	r3, r2, #3
 8023cc6:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8023cca:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8023cce:	fb13 f305 	smulbb	r3, r3, r5
 8023cd2:	fb14 f406 	smulbb	r4, r4, r6
 8023cd6:	00c9      	lsls	r1, r1, #3
 8023cd8:	00d2      	lsls	r2, r2, #3
 8023cda:	441c      	add	r4, r3
 8023cdc:	b2d2      	uxtb	r2, r2
 8023cde:	b2cb      	uxtb	r3, r1
 8023ce0:	fb12 f205 	smulbb	r2, r2, r5
 8023ce4:	b280      	uxth	r0, r0
 8023ce6:	fb13 f306 	smulbb	r3, r3, r6
 8023cea:	4413      	add	r3, r2
 8023cec:	1c42      	adds	r2, r0, #1
 8023cee:	b29b      	uxth	r3, r3
 8023cf0:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8023cf4:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
 8023cf8:	1c58      	adds	r0, r3, #1
 8023cfa:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8023cfe:	b2a4      	uxth	r4, r4
 8023d00:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8023d04:	4310      	orrs	r0, r2
 8023d06:	1c62      	adds	r2, r4, #1
 8023d08:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8023d0c:	0964      	lsrs	r4, r4, #5
 8023d0e:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8023d12:	4320      	orrs	r0, r4
 8023d14:	bd70      	pop	{r4, r5, r6, pc}
	...

08023d18 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8023d18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023d1c:	b08f      	sub	sp, #60	; 0x3c
 8023d1e:	461c      	mov	r4, r3
 8023d20:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 8023d24:	9004      	str	r0, [sp, #16]
 8023d26:	460d      	mov	r5, r1
 8023d28:	4616      	mov	r6, r2
 8023d2a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023d2c:	2f00      	cmp	r7, #0
 8023d2e:	f000 80f6 	beq.w	8023f1e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 8023d32:	6820      	ldr	r0, [r4, #0]
 8023d34:	6861      	ldr	r1, [r4, #4]
 8023d36:	aa0a      	add	r2, sp, #40	; 0x28
 8023d38:	c203      	stmia	r2!, {r0, r1}
 8023d3a:	6818      	ldr	r0, [r3, #0]
 8023d3c:	6859      	ldr	r1, [r3, #4]
 8023d3e:	aa0c      	add	r2, sp, #48	; 0x30
 8023d40:	c203      	stmia	r2!, {r0, r1}
 8023d42:	a80a      	add	r0, sp, #40	; 0x28
 8023d44:	f7ef fc90 	bl	8013668 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8023d48:	4621      	mov	r1, r4
 8023d4a:	a80c      	add	r0, sp, #48	; 0x30
 8023d4c:	f7ef fcd0 	bl	80136f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8023d50:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8023d54:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 8023d58:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 8023d5c:	f002 0301 	and.w	r3, r2, #1
 8023d60:	9306      	str	r3, [sp, #24]
 8023d62:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8023d66:	f003 0101 	and.w	r1, r3, #1
 8023d6a:	9105      	str	r1, [sp, #20]
 8023d6c:	9805      	ldr	r0, [sp, #20]
 8023d6e:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8023d72:	4403      	add	r3, r0
 8023d74:	fb01 2303 	mla	r3, r1, r3, r2
 8023d78:	f04f 0802 	mov.w	r8, #2
 8023d7c:	fb93 f3f8 	sdiv	r3, r3, r8
 8023d80:	441d      	add	r5, r3
 8023d82:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8023d86:	441a      	add	r2, r3
 8023d88:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8023d8c:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8023d90:	4419      	add	r1, r3
 8023d92:	4b64      	ldr	r3, [pc, #400]	; (8023f24 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8023d94:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 8023d98:	6818      	ldr	r0, [r3, #0]
 8023d9a:	6803      	ldr	r3, [r0, #0]
 8023d9c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8023d9e:	4798      	blx	r3
 8023da0:	4a61      	ldr	r2, [pc, #388]	; (8023f28 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 8023da2:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 8023da6:	8813      	ldrh	r3, [r2, #0]
 8023da8:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
 8023dac:	2fff      	cmp	r7, #255	; 0xff
 8023dae:	fb03 a404 	mla	r4, r3, r4, sl
 8023db2:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8023db6:	f106 0604 	add.w	r6, r6, #4
 8023dba:	4611      	mov	r1, r2
 8023dbc:	fb03 fb0b 	mul.w	fp, r3, fp
 8023dc0:	d06b      	beq.n	8023e9a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 8023dc2:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
 8023dc6:	9303      	str	r3, [sp, #12]
 8023dc8:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 8023dcc:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8023dd0:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8023dd4:	9b07      	ldr	r3, [sp, #28]
 8023dd6:	42a3      	cmp	r3, r4
 8023dd8:	f240 809c 	bls.w	8023f14 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8023ddc:	9b06      	ldr	r3, [sp, #24]
 8023dde:	2b00      	cmp	r3, #0
 8023de0:	d039      	beq.n	8023e56 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 8023de2:	782b      	ldrb	r3, [r5, #0]
 8023de4:	8822      	ldrh	r2, [r4, #0]
 8023de6:	9804      	ldr	r0, [sp, #16]
 8023de8:	f003 030f 	and.w	r3, r3, #15
 8023dec:	f105 0801 	add.w	r8, r5, #1
 8023df0:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8023df4:	9b03      	ldr	r3, [sp, #12]
 8023df6:	9300      	str	r3, [sp, #0]
 8023df8:	463b      	mov	r3, r7
 8023dfa:	f7ff ff53 	bl	8023ca4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8023dfe:	f824 0b02 	strh.w	r0, [r4], #2
 8023e02:	f109 3bff 	add.w	fp, r9, #4294967295
 8023e06:	f1bb 0f01 	cmp.w	fp, #1
 8023e0a:	46a2      	mov	sl, r4
 8023e0c:	f104 0404 	add.w	r4, r4, #4
 8023e10:	dd24      	ble.n	8023e5c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 8023e12:	f898 3000 	ldrb.w	r3, [r8]
 8023e16:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8023e1a:	9804      	ldr	r0, [sp, #16]
 8023e1c:	091b      	lsrs	r3, r3, #4
 8023e1e:	f1ab 0b02 	sub.w	fp, fp, #2
 8023e22:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8023e26:	9b03      	ldr	r3, [sp, #12]
 8023e28:	9300      	str	r3, [sp, #0]
 8023e2a:	463b      	mov	r3, r7
 8023e2c:	f7ff ff3a 	bl	8023ca4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8023e30:	f824 0c04 	strh.w	r0, [r4, #-4]
 8023e34:	f818 3b01 	ldrb.w	r3, [r8], #1
 8023e38:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8023e3c:	9804      	ldr	r0, [sp, #16]
 8023e3e:	f003 030f 	and.w	r3, r3, #15
 8023e42:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8023e46:	9b03      	ldr	r3, [sp, #12]
 8023e48:	9300      	str	r3, [sp, #0]
 8023e4a:	463b      	mov	r3, r7
 8023e4c:	f7ff ff2a 	bl	8023ca4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8023e50:	f824 0c02 	strh.w	r0, [r4, #-2]
 8023e54:	e7d7      	b.n	8023e06 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8023e56:	46a8      	mov	r8, r5
 8023e58:	46cb      	mov	fp, r9
 8023e5a:	e7d4      	b.n	8023e06 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8023e5c:	d10e      	bne.n	8023e7c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 8023e5e:	f898 3000 	ldrb.w	r3, [r8]
 8023e62:	f8ba 2000 	ldrh.w	r2, [sl]
 8023e66:	9804      	ldr	r0, [sp, #16]
 8023e68:	091b      	lsrs	r3, r3, #4
 8023e6a:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8023e6e:	9b03      	ldr	r3, [sp, #12]
 8023e70:	9300      	str	r3, [sp, #0]
 8023e72:	463b      	mov	r3, r7
 8023e74:	f7ff ff16 	bl	8023ca4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8023e78:	f82a 0b02 	strh.w	r0, [sl], #2
 8023e7c:	9b08      	ldr	r3, [sp, #32]
 8023e7e:	9a05      	ldr	r2, [sp, #20]
 8023e80:	881c      	ldrh	r4, [r3, #0]
 8023e82:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8023e86:	eba4 0409 	sub.w	r4, r4, r9
 8023e8a:	4413      	add	r3, r2
 8023e8c:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 8023e90:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8023e92:	fb93 f3f2 	sdiv	r3, r3, r2
 8023e96:	441d      	add	r5, r3
 8023e98:	e79c      	b.n	8023dd4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 8023e9a:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 8023e9e:	45a3      	cmp	fp, r4
 8023ea0:	d938      	bls.n	8023f14 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8023ea2:	9b06      	ldr	r3, [sp, #24]
 8023ea4:	b1f3      	cbz	r3, 8023ee4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 8023ea6:	782b      	ldrb	r3, [r5, #0]
 8023ea8:	f003 030f 	and.w	r3, r3, #15
 8023eac:	1c6a      	adds	r2, r5, #1
 8023eae:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8023eb2:	8023      	strh	r3, [r4, #0]
 8023eb4:	f109 30ff 	add.w	r0, r9, #4294967295
 8023eb8:	3402      	adds	r4, #2
 8023eba:	2801      	cmp	r0, #1
 8023ebc:	4623      	mov	r3, r4
 8023ebe:	f104 0404 	add.w	r4, r4, #4
 8023ec2:	dd12      	ble.n	8023eea <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 8023ec4:	7813      	ldrb	r3, [r2, #0]
 8023ec6:	091b      	lsrs	r3, r3, #4
 8023ec8:	3802      	subs	r0, #2
 8023eca:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8023ece:	f824 3c04 	strh.w	r3, [r4, #-4]
 8023ed2:	f812 3b01 	ldrb.w	r3, [r2], #1
 8023ed6:	f003 030f 	and.w	r3, r3, #15
 8023eda:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8023ede:	f824 3c02 	strh.w	r3, [r4, #-2]
 8023ee2:	e7ea      	b.n	8023eba <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8023ee4:	462a      	mov	r2, r5
 8023ee6:	4648      	mov	r0, r9
 8023ee8:	e7e7      	b.n	8023eba <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8023eea:	d106      	bne.n	8023efa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 8023eec:	7812      	ldrb	r2, [r2, #0]
 8023eee:	0912      	lsrs	r2, r2, #4
 8023ef0:	3302      	adds	r3, #2
 8023ef2:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8023ef6:	f823 2c02 	strh.w	r2, [r3, #-2]
 8023efa:	880c      	ldrh	r4, [r1, #0]
 8023efc:	9a05      	ldr	r2, [sp, #20]
 8023efe:	eba4 0409 	sub.w	r4, r4, r9
 8023f02:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 8023f06:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8023f0a:	4413      	add	r3, r2
 8023f0c:	fb93 f3f8 	sdiv	r3, r3, r8
 8023f10:	441d      	add	r5, r3
 8023f12:	e7c4      	b.n	8023e9e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 8023f14:	4b03      	ldr	r3, [pc, #12]	; (8023f24 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8023f16:	6818      	ldr	r0, [r3, #0]
 8023f18:	6803      	ldr	r3, [r0, #0]
 8023f1a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8023f1c:	4798      	blx	r3
 8023f1e:	b00f      	add	sp, #60	; 0x3c
 8023f20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023f24:	200137bc 	.word	0x200137bc
 8023f28:	200137b6 	.word	0x200137b6

08023f2c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 8023f2c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8023f2e:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8023f32:	2dff      	cmp	r5, #255	; 0xff
 8023f34:	ea4f 2711 	mov.w	r7, r1, lsr #8
 8023f38:	d10c      	bne.n	8023f54 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 8023f3a:	2bff      	cmp	r3, #255	; 0xff
 8023f3c:	d10a      	bne.n	8023f54 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 8023f3e:	4b25      	ldr	r3, [pc, #148]	; (8023fd4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 8023f40:	0948      	lsrs	r0, r1, #5
 8023f42:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023f46:	403b      	ands	r3, r7
 8023f48:	4318      	orrs	r0, r3
 8023f4a:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8023f4e:	4308      	orrs	r0, r1
 8023f50:	b280      	uxth	r0, r0
 8023f52:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8023f54:	fb15 f503 	smulbb	r5, r5, r3
 8023f58:	b2ab      	uxth	r3, r5
 8023f5a:	1c5d      	adds	r5, r3, #1
 8023f5c:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 8023f60:	1214      	asrs	r4, r2, #8
 8023f62:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8023f66:	fa1f fc85 	uxth.w	ip, r5
 8023f6a:	10d6      	asrs	r6, r2, #3
 8023f6c:	00d0      	lsls	r0, r2, #3
 8023f6e:	43ed      	mvns	r5, r5
 8023f70:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8023f74:	f3c1 4207 	ubfx	r2, r1, #16, #8
 8023f78:	b2eb      	uxtb	r3, r5
 8023f7a:	b2c0      	uxtb	r0, r0
 8023f7c:	fb12 f20c 	smulbb	r2, r2, ip
 8023f80:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8023f84:	fb04 2403 	mla	r4, r4, r3, r2
 8023f88:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 8023f8c:	b2c8      	uxtb	r0, r1
 8023f8e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8023f92:	b2fd      	uxtb	r5, r7
 8023f94:	fb10 f00c 	smulbb	r0, r0, ip
 8023f98:	b2a4      	uxth	r4, r4
 8023f9a:	fb02 0003 	mla	r0, r2, r3, r0
 8023f9e:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8023fa2:	fb15 f50c 	smulbb	r5, r5, ip
 8023fa6:	fb06 5503 	mla	r5, r6, r3, r5
 8023faa:	b283      	uxth	r3, r0
 8023fac:	1c60      	adds	r0, r4, #1
 8023fae:	b2ad      	uxth	r5, r5
 8023fb0:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 8023fb4:	1c58      	adds	r0, r3, #1
 8023fb6:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8023fba:	1c6b      	adds	r3, r5, #1
 8023fbc:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8023fc0:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8023fc4:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8023fc8:	096d      	lsrs	r5, r5, #5
 8023fca:	4320      	orrs	r0, r4
 8023fcc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8023fd0:	4328      	orrs	r0, r5
 8023fd2:	e7be      	b.n	8023f52 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 8023fd4:	00fff800 	.word	0x00fff800

08023fd8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8023fd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023fdc:	461c      	mov	r4, r3
 8023fde:	b08d      	sub	sp, #52	; 0x34
 8023fe0:	460d      	mov	r5, r1
 8023fe2:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8023fe4:	6861      	ldr	r1, [r4, #4]
 8023fe6:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
 8023fea:	4680      	mov	r8, r0
 8023fec:	6820      	ldr	r0, [r4, #0]
 8023fee:	4616      	mov	r6, r2
 8023ff0:	aa08      	add	r2, sp, #32
 8023ff2:	c203      	stmia	r2!, {r0, r1}
 8023ff4:	6818      	ldr	r0, [r3, #0]
 8023ff6:	6859      	ldr	r1, [r3, #4]
 8023ff8:	aa0a      	add	r2, sp, #40	; 0x28
 8023ffa:	c203      	stmia	r2!, {r0, r1}
 8023ffc:	a808      	add	r0, sp, #32
 8023ffe:	f7ef fb33 	bl	8013668 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8024002:	4621      	mov	r1, r4
 8024004:	a80a      	add	r0, sp, #40	; 0x28
 8024006:	f7ef fb73 	bl	80136f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802400a:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 802400e:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 8024012:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 8024016:	f002 0301 	and.w	r3, r2, #1
 802401a:	9303      	str	r3, [sp, #12]
 802401c:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8024020:	f003 0101 	and.w	r1, r3, #1
 8024024:	9102      	str	r1, [sp, #8]
 8024026:	9802      	ldr	r0, [sp, #8]
 8024028:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 802402c:	4403      	add	r3, r0
 802402e:	fb01 2303 	mla	r3, r1, r3, r2
 8024032:	f04f 0a02 	mov.w	sl, #2
 8024036:	fb93 f3fa 	sdiv	r3, r3, sl
 802403a:	441d      	add	r5, r3
 802403c:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8024040:	441a      	add	r2, r3
 8024042:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8024046:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 802404a:	4a3f      	ldr	r2, [pc, #252]	; (8024148 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 802404c:	9205      	str	r2, [sp, #20]
 802404e:	4419      	add	r1, r3
 8024050:	6810      	ldr	r0, [r2, #0]
 8024052:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 8024056:	6803      	ldr	r3, [r0, #0]
 8024058:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 802405a:	4798      	blx	r3
 802405c:	4b3b      	ldr	r3, [pc, #236]	; (802414c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 802405e:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 8024062:	8819      	ldrh	r1, [r3, #0]
 8024064:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
 8024068:	fb01 c404 	mla	r4, r1, r4, ip
 802406c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8024070:	434f      	muls	r7, r1
 8024072:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 8024076:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 802407a:	3604      	adds	r6, #4
 802407c:	9204      	str	r2, [sp, #16]
 802407e:	9b04      	ldr	r3, [sp, #16]
 8024080:	429c      	cmp	r4, r3
 8024082:	d258      	bcs.n	8024136 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 8024084:	9b03      	ldr	r3, [sp, #12]
 8024086:	2b00      	cmp	r3, #0
 8024088:	d034      	beq.n	80240f4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 802408a:	782b      	ldrb	r3, [r5, #0]
 802408c:	f003 030f 	and.w	r3, r3, #15
 8024090:	1c6f      	adds	r7, r5, #1
 8024092:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8024096:	0e0b      	lsrs	r3, r1, #24
 8024098:	d006      	beq.n	80240a8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 802409a:	8822      	ldrh	r2, [r4, #0]
 802409c:	9300      	str	r3, [sp, #0]
 802409e:	4640      	mov	r0, r8
 80240a0:	464b      	mov	r3, r9
 80240a2:	f7ff ff43 	bl	8023f2c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80240a6:	8020      	strh	r0, [r4, #0]
 80240a8:	3402      	adds	r4, #2
 80240aa:	f10b 3aff 	add.w	sl, fp, #4294967295
 80240ae:	f1ba 0f01 	cmp.w	sl, #1
 80240b2:	dd22      	ble.n	80240fa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 80240b4:	783b      	ldrb	r3, [r7, #0]
 80240b6:	091b      	lsrs	r3, r3, #4
 80240b8:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80240bc:	0e0b      	lsrs	r3, r1, #24
 80240be:	d006      	beq.n	80240ce <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 80240c0:	8822      	ldrh	r2, [r4, #0]
 80240c2:	9300      	str	r3, [sp, #0]
 80240c4:	4640      	mov	r0, r8
 80240c6:	464b      	mov	r3, r9
 80240c8:	f7ff ff30 	bl	8023f2c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80240cc:	8020      	strh	r0, [r4, #0]
 80240ce:	f817 3b01 	ldrb.w	r3, [r7], #1
 80240d2:	f003 030f 	and.w	r3, r3, #15
 80240d6:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80240da:	0e0b      	lsrs	r3, r1, #24
 80240dc:	d006      	beq.n	80240ec <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 80240de:	8862      	ldrh	r2, [r4, #2]
 80240e0:	9300      	str	r3, [sp, #0]
 80240e2:	4640      	mov	r0, r8
 80240e4:	464b      	mov	r3, r9
 80240e6:	f7ff ff21 	bl	8023f2c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80240ea:	8060      	strh	r0, [r4, #2]
 80240ec:	3404      	adds	r4, #4
 80240ee:	f1aa 0a02 	sub.w	sl, sl, #2
 80240f2:	e7dc      	b.n	80240ae <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 80240f4:	462f      	mov	r7, r5
 80240f6:	46da      	mov	sl, fp
 80240f8:	e7d9      	b.n	80240ae <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 80240fa:	d10d      	bne.n	8024118 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 80240fc:	783b      	ldrb	r3, [r7, #0]
 80240fe:	091b      	lsrs	r3, r3, #4
 8024100:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8024104:	0e0b      	lsrs	r3, r1, #24
 8024106:	d006      	beq.n	8024116 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 8024108:	8822      	ldrh	r2, [r4, #0]
 802410a:	9300      	str	r3, [sp, #0]
 802410c:	4640      	mov	r0, r8
 802410e:	464b      	mov	r3, r9
 8024110:	f7ff ff0c 	bl	8023f2c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8024114:	8020      	strh	r0, [r4, #0]
 8024116:	3402      	adds	r4, #2
 8024118:	9b06      	ldr	r3, [sp, #24]
 802411a:	9a02      	ldr	r2, [sp, #8]
 802411c:	881b      	ldrh	r3, [r3, #0]
 802411e:	eba3 030b 	sub.w	r3, r3, fp
 8024122:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8024126:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 802412a:	4413      	add	r3, r2
 802412c:	9a07      	ldr	r2, [sp, #28]
 802412e:	fb93 f3f2 	sdiv	r3, r3, r2
 8024132:	441d      	add	r5, r3
 8024134:	e7a3      	b.n	802407e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 8024136:	9b05      	ldr	r3, [sp, #20]
 8024138:	6818      	ldr	r0, [r3, #0]
 802413a:	6803      	ldr	r3, [r0, #0]
 802413c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802413e:	4798      	blx	r3
 8024140:	b00d      	add	sp, #52	; 0x34
 8024142:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024146:	bf00      	nop
 8024148:	200137bc 	.word	0x200137bc
 802414c:	200137b6 	.word	0x200137b6

08024150 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 8024150:	b570      	push	{r4, r5, r6, lr}
 8024152:	1214      	asrs	r4, r2, #8
 8024154:	788d      	ldrb	r5, [r1, #2]
 8024156:	f89d 6010 	ldrb.w	r6, [sp, #16]
 802415a:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 802415e:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8024162:	fb15 f503 	smulbb	r5, r5, r3
 8024166:	fb04 5506 	mla	r5, r4, r6, r5
 802416a:	10d0      	asrs	r0, r2, #3
 802416c:	784c      	ldrb	r4, [r1, #1]
 802416e:	7809      	ldrb	r1, [r1, #0]
 8024170:	00d2      	lsls	r2, r2, #3
 8024172:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024176:	b2d2      	uxtb	r2, r2
 8024178:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 802417c:	fb14 f403 	smulbb	r4, r4, r3
 8024180:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8024184:	fb11 f303 	smulbb	r3, r1, r3
 8024188:	fb00 4406 	mla	r4, r0, r6, r4
 802418c:	fb02 3306 	mla	r3, r2, r6, r3
 8024190:	b2ad      	uxth	r5, r5
 8024192:	b29b      	uxth	r3, r3
 8024194:	b2a4      	uxth	r4, r4
 8024196:	1c68      	adds	r0, r5, #1
 8024198:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 802419c:	1c62      	adds	r2, r4, #1
 802419e:	1c58      	adds	r0, r3, #1
 80241a0:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80241a4:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80241a8:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80241ac:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80241b0:	0964      	lsrs	r4, r4, #5
 80241b2:	4328      	orrs	r0, r5
 80241b4:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80241b8:	4320      	orrs	r0, r4
 80241ba:	bd70      	pop	{r4, r5, r6, pc}

080241bc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 80241bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80241c0:	b08f      	sub	sp, #60	; 0x3c
 80241c2:	461c      	mov	r4, r3
 80241c4:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 80241c8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80241ca:	4682      	mov	sl, r0
 80241cc:	460e      	mov	r6, r1
 80241ce:	4615      	mov	r5, r2
 80241d0:	2f00      	cmp	r7, #0
 80241d2:	f000 8142 	beq.w	802445a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 80241d6:	6820      	ldr	r0, [r4, #0]
 80241d8:	6861      	ldr	r1, [r4, #4]
 80241da:	aa0a      	add	r2, sp, #40	; 0x28
 80241dc:	c203      	stmia	r2!, {r0, r1}
 80241de:	6818      	ldr	r0, [r3, #0]
 80241e0:	6859      	ldr	r1, [r3, #4]
 80241e2:	aa0c      	add	r2, sp, #48	; 0x30
 80241e4:	c203      	stmia	r2!, {r0, r1}
 80241e6:	a80a      	add	r0, sp, #40	; 0x28
 80241e8:	f7ef fa3e 	bl	8013668 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80241ec:	4621      	mov	r1, r4
 80241ee:	a80c      	add	r0, sp, #48	; 0x30
 80241f0:	f7ef fa7e 	bl	80136f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80241f4:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 80241f8:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 80241fc:	f002 0301 	and.w	r3, r2, #1
 8024200:	9306      	str	r3, [sp, #24]
 8024202:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8024206:	f003 0101 	and.w	r1, r3, #1
 802420a:	9105      	str	r1, [sp, #20]
 802420c:	9805      	ldr	r0, [sp, #20]
 802420e:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8024212:	4403      	add	r3, r0
 8024214:	fb01 2303 	mla	r3, r1, r3, r2
 8024218:	f04f 0802 	mov.w	r8, #2
 802421c:	fb93 f3f8 	sdiv	r3, r3, r8
 8024220:	441e      	add	r6, r3
 8024222:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8024226:	441a      	add	r2, r3
 8024228:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 802422c:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8024230:	4419      	add	r1, r3
 8024232:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8024236:	9303      	str	r3, [sp, #12]
 8024238:	4b89      	ldr	r3, [pc, #548]	; (8024460 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 802423a:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 802423e:	6818      	ldr	r0, [r3, #0]
 8024240:	6803      	ldr	r3, [r0, #0]
 8024242:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8024244:	4798      	blx	r3
 8024246:	4a87      	ldr	r2, [pc, #540]	; (8024464 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 8024248:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 802424c:	8813      	ldrh	r3, [r2, #0]
 802424e:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
 8024252:	2fff      	cmp	r7, #255	; 0xff
 8024254:	fb03 9404 	mla	r4, r3, r4, r9
 8024258:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802425c:	f105 0504 	add.w	r5, r5, #4
 8024260:	4694      	mov	ip, r2
 8024262:	fb03 f30b 	mul.w	r3, r3, fp
 8024266:	d071      	beq.n	802434c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 8024268:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 802426c:	43f9      	mvns	r1, r7
 802426e:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8024272:	b2c9      	uxtb	r1, r1
 8024274:	9104      	str	r1, [sp, #16]
 8024276:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 802427a:	9b07      	ldr	r3, [sp, #28]
 802427c:	42a3      	cmp	r3, r4
 802427e:	f240 80e7 	bls.w	8024450 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8024282:	9b06      	ldr	r3, [sp, #24]
 8024284:	2b00      	cmp	r3, #0
 8024286:	d03d      	beq.n	8024304 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 8024288:	7831      	ldrb	r1, [r6, #0]
 802428a:	9b04      	ldr	r3, [sp, #16]
 802428c:	8822      	ldrh	r2, [r4, #0]
 802428e:	9300      	str	r3, [sp, #0]
 8024290:	f001 010f 	and.w	r1, r1, #15
 8024294:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8024298:	463b      	mov	r3, r7
 802429a:	4429      	add	r1, r5
 802429c:	4650      	mov	r0, sl
 802429e:	f7ff ff57 	bl	8024150 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80242a2:	9b03      	ldr	r3, [sp, #12]
 80242a4:	f824 0b02 	strh.w	r0, [r4], #2
 80242a8:	f106 0801 	add.w	r8, r6, #1
 80242ac:	f103 3bff 	add.w	fp, r3, #4294967295
 80242b0:	f1bb 0f01 	cmp.w	fp, #1
 80242b4:	46a1      	mov	r9, r4
 80242b6:	f104 0404 	add.w	r4, r4, #4
 80242ba:	dd27      	ble.n	802430c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 80242bc:	f898 1000 	ldrb.w	r1, [r8]
 80242c0:	9b04      	ldr	r3, [sp, #16]
 80242c2:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 80242c6:	9300      	str	r3, [sp, #0]
 80242c8:	0909      	lsrs	r1, r1, #4
 80242ca:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80242ce:	463b      	mov	r3, r7
 80242d0:	4429      	add	r1, r5
 80242d2:	4650      	mov	r0, sl
 80242d4:	f7ff ff3c 	bl	8024150 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80242d8:	f824 0c04 	strh.w	r0, [r4, #-4]
 80242dc:	f818 1b01 	ldrb.w	r1, [r8], #1
 80242e0:	9b04      	ldr	r3, [sp, #16]
 80242e2:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 80242e6:	9300      	str	r3, [sp, #0]
 80242e8:	f001 010f 	and.w	r1, r1, #15
 80242ec:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80242f0:	463b      	mov	r3, r7
 80242f2:	4429      	add	r1, r5
 80242f4:	4650      	mov	r0, sl
 80242f6:	f7ff ff2b 	bl	8024150 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80242fa:	f1ab 0b02 	sub.w	fp, fp, #2
 80242fe:	f824 0c02 	strh.w	r0, [r4, #-2]
 8024302:	e7d5      	b.n	80242b0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8024304:	46b0      	mov	r8, r6
 8024306:	f8dd b00c 	ldr.w	fp, [sp, #12]
 802430a:	e7d1      	b.n	80242b0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 802430c:	d10f      	bne.n	802432e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 802430e:	f898 1000 	ldrb.w	r1, [r8]
 8024312:	9b04      	ldr	r3, [sp, #16]
 8024314:	f8b9 2000 	ldrh.w	r2, [r9]
 8024318:	9300      	str	r3, [sp, #0]
 802431a:	0909      	lsrs	r1, r1, #4
 802431c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8024320:	463b      	mov	r3, r7
 8024322:	4429      	add	r1, r5
 8024324:	4650      	mov	r0, sl
 8024326:	f7ff ff13 	bl	8024150 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802432a:	f829 0b02 	strh.w	r0, [r9], #2
 802432e:	9b08      	ldr	r3, [sp, #32]
 8024330:	9a05      	ldr	r2, [sp, #20]
 8024332:	881c      	ldrh	r4, [r3, #0]
 8024334:	9b03      	ldr	r3, [sp, #12]
 8024336:	1ae4      	subs	r4, r4, r3
 8024338:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802433c:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8024340:	4413      	add	r3, r2
 8024342:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8024344:	fb93 f3f2 	sdiv	r3, r3, r2
 8024348:	441e      	add	r6, r3
 802434a:	e796      	b.n	802427a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 802434c:	4f46      	ldr	r7, [pc, #280]	; (8024468 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 802434e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8024352:	42a3      	cmp	r3, r4
 8024354:	d97c      	bls.n	8024450 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8024356:	9a06      	ldr	r2, [sp, #24]
 8024358:	2a00      	cmp	r2, #0
 802435a:	d054      	beq.n	8024406 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 802435c:	7830      	ldrb	r0, [r6, #0]
 802435e:	f000 000f 	and.w	r0, r0, #15
 8024362:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8024366:	eb05 0e00 	add.w	lr, r5, r0
 802436a:	5c28      	ldrb	r0, [r5, r0]
 802436c:	f89e 2002 	ldrb.w	r2, [lr, #2]
 8024370:	f89e e001 	ldrb.w	lr, [lr, #1]
 8024374:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8024378:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 802437c:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8024380:	ea42 020e 	orr.w	r2, r2, lr
 8024384:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 8024388:	f824 2b02 	strh.w	r2, [r4], #2
 802438c:	9a03      	ldr	r2, [sp, #12]
 802438e:	1c71      	adds	r1, r6, #1
 8024390:	f102 3eff 	add.w	lr, r2, #4294967295
 8024394:	f1be 0f01 	cmp.w	lr, #1
 8024398:	4620      	mov	r0, r4
 802439a:	f104 0404 	add.w	r4, r4, #4
 802439e:	dd36      	ble.n	802440e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 80243a0:	7808      	ldrb	r0, [r1, #0]
 80243a2:	0900      	lsrs	r0, r0, #4
 80243a4:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80243a8:	eb05 0a00 	add.w	sl, r5, r0
 80243ac:	f1ae 0e02 	sub.w	lr, lr, #2
 80243b0:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80243b4:	f89a 9002 	ldrb.w	r9, [sl, #2]
 80243b8:	00d2      	lsls	r2, r2, #3
 80243ba:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 80243be:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80243c2:	ea49 0202 	orr.w	r2, r9, r2
 80243c6:	f815 9000 	ldrb.w	r9, [r5, r0]
 80243ca:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 80243ce:	f824 2c04 	strh.w	r2, [r4, #-4]
 80243d2:	f811 0b01 	ldrb.w	r0, [r1], #1
 80243d6:	f000 000f 	and.w	r0, r0, #15
 80243da:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80243de:	eb05 0a00 	add.w	sl, r5, r0
 80243e2:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80243e6:	f89a 9002 	ldrb.w	r9, [sl, #2]
 80243ea:	00d2      	lsls	r2, r2, #3
 80243ec:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 80243f0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80243f4:	ea49 0202 	orr.w	r2, r9, r2
 80243f8:	f815 9000 	ldrb.w	r9, [r5, r0]
 80243fc:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8024400:	f824 2c02 	strh.w	r2, [r4, #-2]
 8024404:	e7c6      	b.n	8024394 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8024406:	4631      	mov	r1, r6
 8024408:	f8dd e00c 	ldr.w	lr, [sp, #12]
 802440c:	e7c2      	b.n	8024394 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 802440e:	d111      	bne.n	8024434 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 8024410:	7809      	ldrb	r1, [r1, #0]
 8024412:	0909      	lsrs	r1, r1, #4
 8024414:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8024418:	186c      	adds	r4, r5, r1
 802441a:	5c69      	ldrb	r1, [r5, r1]
 802441c:	78a2      	ldrb	r2, [r4, #2]
 802441e:	7864      	ldrb	r4, [r4, #1]
 8024420:	00e4      	lsls	r4, r4, #3
 8024422:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8024426:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 802442a:	4322      	orrs	r2, r4
 802442c:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 8024430:	f820 2b02 	strh.w	r2, [r0], #2
 8024434:	9a03      	ldr	r2, [sp, #12]
 8024436:	f8bc 4000 	ldrh.w	r4, [ip]
 802443a:	9905      	ldr	r1, [sp, #20]
 802443c:	1aa4      	subs	r4, r4, r2
 802443e:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8024442:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8024446:	440a      	add	r2, r1
 8024448:	fb92 f2f8 	sdiv	r2, r2, r8
 802444c:	4416      	add	r6, r2
 802444e:	e780      	b.n	8024352 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 8024450:	4b03      	ldr	r3, [pc, #12]	; (8024460 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8024452:	6818      	ldr	r0, [r3, #0]
 8024454:	6803      	ldr	r3, [r0, #0]
 8024456:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8024458:	4798      	blx	r3
 802445a:	b00f      	add	sp, #60	; 0x3c
 802445c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024460:	200137bc 	.word	0x200137bc
 8024464:	200137b6 	.word	0x200137b6
 8024468:	fffff800 	.word	0xfffff800

0802446c <CRC_Lock>:
 802446c:	b530      	push	{r4, r5, lr}
 802446e:	4a20      	ldr	r2, [pc, #128]	; (80244f0 <CRC_Lock+0x84>)
 8024470:	6813      	ldr	r3, [r2, #0]
 8024472:	f023 0301 	bic.w	r3, r3, #1
 8024476:	6013      	str	r3, [r2, #0]
 8024478:	4b1e      	ldr	r3, [pc, #120]	; (80244f4 <CRC_Lock+0x88>)
 802447a:	681a      	ldr	r2, [r3, #0]
 802447c:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 8024480:	4022      	ands	r2, r4
 8024482:	f24c 2540 	movw	r5, #49728	; 0xc240
 8024486:	42aa      	cmp	r2, r5
 8024488:	d005      	beq.n	8024496 <CRC_Lock+0x2a>
 802448a:	681b      	ldr	r3, [r3, #0]
 802448c:	f24c 2270 	movw	r2, #49776	; 0xc270
 8024490:	4023      	ands	r3, r4
 8024492:	4293      	cmp	r3, r2
 8024494:	d124      	bne.n	80244e0 <CRC_Lock+0x74>
 8024496:	4b18      	ldr	r3, [pc, #96]	; (80244f8 <CRC_Lock+0x8c>)
 8024498:	681b      	ldr	r3, [r3, #0]
 802449a:	bb0b      	cbnz	r3, 80244e0 <CRC_Lock+0x74>
 802449c:	4b17      	ldr	r3, [pc, #92]	; (80244fc <CRC_Lock+0x90>)
 802449e:	681a      	ldr	r2, [r3, #0]
 80244a0:	f3c2 020b 	ubfx	r2, r2, #0, #12
 80244a4:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 80244a8:	d00d      	beq.n	80244c6 <CRC_Lock+0x5a>
 80244aa:	681a      	ldr	r2, [r3, #0]
 80244ac:	f240 4483 	movw	r4, #1155	; 0x483
 80244b0:	f3c2 020b 	ubfx	r2, r2, #0, #12
 80244b4:	42a2      	cmp	r2, r4
 80244b6:	d006      	beq.n	80244c6 <CRC_Lock+0x5a>
 80244b8:	681b      	ldr	r3, [r3, #0]
 80244ba:	f240 4285 	movw	r2, #1157	; 0x485
 80244be:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80244c2:	4293      	cmp	r3, r2
 80244c4:	d10c      	bne.n	80244e0 <CRC_Lock+0x74>
 80244c6:	4b0e      	ldr	r3, [pc, #56]	; (8024500 <CRC_Lock+0x94>)
 80244c8:	2201      	movs	r2, #1
 80244ca:	601a      	str	r2, [r3, #0]
 80244cc:	681a      	ldr	r2, [r3, #0]
 80244ce:	2a00      	cmp	r2, #0
 80244d0:	d1fc      	bne.n	80244cc <CRC_Lock+0x60>
 80244d2:	4b0c      	ldr	r3, [pc, #48]	; (8024504 <CRC_Lock+0x98>)
 80244d4:	6018      	str	r0, [r3, #0]
 80244d6:	6818      	ldr	r0, [r3, #0]
 80244d8:	1a43      	subs	r3, r0, r1
 80244da:	4258      	negs	r0, r3
 80244dc:	4158      	adcs	r0, r3
 80244de:	bd30      	pop	{r4, r5, pc}
 80244e0:	4b09      	ldr	r3, [pc, #36]	; (8024508 <CRC_Lock+0x9c>)
 80244e2:	2201      	movs	r2, #1
 80244e4:	601a      	str	r2, [r3, #0]
 80244e6:	681a      	ldr	r2, [r3, #0]
 80244e8:	2a00      	cmp	r2, #0
 80244ea:	d1fc      	bne.n	80244e6 <CRC_Lock+0x7a>
 80244ec:	4b07      	ldr	r3, [pc, #28]	; (802450c <CRC_Lock+0xa0>)
 80244ee:	e7f1      	b.n	80244d4 <CRC_Lock+0x68>
 80244f0:	e0002000 	.word	0xe0002000
 80244f4:	e000ed00 	.word	0xe000ed00
 80244f8:	e0042000 	.word	0xe0042000
 80244fc:	5c001000 	.word	0x5c001000
 8024500:	58024c08 	.word	0x58024c08
 8024504:	58024c00 	.word	0x58024c00
 8024508:	40023008 	.word	0x40023008
 802450c:	40023000 	.word	0x40023000

08024510 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8024510:	6101      	str	r1, [r0, #16]
 8024512:	4770      	bx	lr

08024514 <_ZN8touchgfx8Gestures4tickEv>:
 8024514:	7b83      	ldrb	r3, [r0, #14]
 8024516:	b14b      	cbz	r3, 802452c <_ZN8touchgfx8Gestures4tickEv+0x18>
 8024518:	8903      	ldrh	r3, [r0, #8]
 802451a:	3301      	adds	r3, #1
 802451c:	b29b      	uxth	r3, r3
 802451e:	2b07      	cmp	r3, #7
 8024520:	8103      	strh	r3, [r0, #8]
 8024522:	bf81      	itttt	hi
 8024524:	2300      	movhi	r3, #0
 8024526:	8143      	strhhi	r3, [r0, #10]
 8024528:	8183      	strhhi	r3, [r0, #12]
 802452a:	7383      	strbhi	r3, [r0, #14]
 802452c:	4770      	bx	lr
	...

08024530 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8024530:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8024534:	4698      	mov	r8, r3
 8024536:	8883      	ldrh	r3, [r0, #4]
 8024538:	f8ad 3006 	strh.w	r3, [sp, #6]
 802453c:	eba8 0303 	sub.w	r3, r8, r3
 8024540:	b21b      	sxth	r3, r3
 8024542:	4604      	mov	r4, r0
 8024544:	2b00      	cmp	r3, #0
 8024546:	4617      	mov	r7, r2
 8024548:	4a18      	ldr	r2, [pc, #96]	; (80245ac <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 802454a:	9200      	str	r2, [sp, #0]
 802454c:	bfb8      	it	lt
 802454e:	425b      	neglt	r3, r3
 8024550:	8aa2      	ldrh	r2, [r4, #20]
 8024552:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 8024556:	f8ad 800a 	strh.w	r8, [sp, #10]
 802455a:	b21b      	sxth	r3, r3
 802455c:	460e      	mov	r6, r1
 802455e:	4293      	cmp	r3, r2
 8024560:	88c1      	ldrh	r1, [r0, #6]
 8024562:	f8ad 1008 	strh.w	r1, [sp, #8]
 8024566:	f04f 0000 	mov.w	r0, #0
 802456a:	f88d 0004 	strb.w	r0, [sp, #4]
 802456e:	f8ad 500c 	strh.w	r5, [sp, #12]
 8024572:	dc07      	bgt.n	8024584 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 8024574:	1a69      	subs	r1, r5, r1
 8024576:	b209      	sxth	r1, r1
 8024578:	2900      	cmp	r1, #0
 802457a:	bfb8      	it	lt
 802457c:	4249      	neglt	r1, r1
 802457e:	b209      	sxth	r1, r1
 8024580:	428a      	cmp	r2, r1
 8024582:	da10      	bge.n	80245a6 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 8024584:	6920      	ldr	r0, [r4, #16]
 8024586:	6803      	ldr	r3, [r0, #0]
 8024588:	4669      	mov	r1, sp
 802458a:	685b      	ldr	r3, [r3, #4]
 802458c:	4798      	blx	r3
 802458e:	eba8 0606 	sub.w	r6, r8, r6
 8024592:	2300      	movs	r3, #0
 8024594:	1bef      	subs	r7, r5, r7
 8024596:	2001      	movs	r0, #1
 8024598:	8123      	strh	r3, [r4, #8]
 802459a:	8166      	strh	r6, [r4, #10]
 802459c:	81a7      	strh	r7, [r4, #12]
 802459e:	f8a4 8004 	strh.w	r8, [r4, #4]
 80245a2:	80e5      	strh	r5, [r4, #6]
 80245a4:	73a0      	strb	r0, [r4, #14]
 80245a6:	b004      	add	sp, #16
 80245a8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80245ac:	0802b4c0 	.word	0x0802b4c0

080245b0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 80245b0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80245b2:	461e      	mov	r6, r3
 80245b4:	1e4b      	subs	r3, r1, #1
 80245b6:	2b01      	cmp	r3, #1
 80245b8:	b085      	sub	sp, #20
 80245ba:	4604      	mov	r4, r0
 80245bc:	460d      	mov	r5, r1
 80245be:	4617      	mov	r7, r2
 80245c0:	d84b      	bhi.n	802465a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 80245c2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80245c6:	1cd3      	adds	r3, r2, #3
 80245c8:	b29b      	uxth	r3, r3
 80245ca:	2b06      	cmp	r3, #6
 80245cc:	d916      	bls.n	80245fc <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 80245ce:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 8024670 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 80245d2:	f8cd c004 	str.w	ip, [sp, #4]
 80245d6:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80245da:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80245de:	6900      	ldr	r0, [r0, #16]
 80245e0:	f8ad 100c 	strh.w	r1, [sp, #12]
 80245e4:	f04f 0c00 	mov.w	ip, #0
 80245e8:	f88d c008 	strb.w	ip, [sp, #8]
 80245ec:	f8ad 200a 	strh.w	r2, [sp, #10]
 80245f0:	f8ad 300e 	strh.w	r3, [sp, #14]
 80245f4:	6803      	ldr	r3, [r0, #0]
 80245f6:	a901      	add	r1, sp, #4
 80245f8:	689b      	ldr	r3, [r3, #8]
 80245fa:	4798      	blx	r3
 80245fc:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8024600:	1cd3      	adds	r3, r2, #3
 8024602:	b29b      	uxth	r3, r3
 8024604:	2b06      	cmp	r3, #6
 8024606:	d916      	bls.n	8024636 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8024608:	f8df c064 	ldr.w	ip, [pc, #100]	; 8024670 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 802460c:	f8cd c004 	str.w	ip, [sp, #4]
 8024610:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8024614:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8024618:	6920      	ldr	r0, [r4, #16]
 802461a:	f8ad 100c 	strh.w	r1, [sp, #12]
 802461e:	f04f 0c01 	mov.w	ip, #1
 8024622:	f88d c008 	strb.w	ip, [sp, #8]
 8024626:	f8ad 200a 	strh.w	r2, [sp, #10]
 802462a:	f8ad 300e 	strh.w	r3, [sp, #14]
 802462e:	6803      	ldr	r3, [r0, #0]
 8024630:	a901      	add	r1, sp, #4
 8024632:	689b      	ldr	r3, [r3, #8]
 8024634:	4798      	blx	r3
 8024636:	4b0d      	ldr	r3, [pc, #52]	; (802466c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8024638:	9301      	str	r3, [sp, #4]
 802463a:	6920      	ldr	r0, [r4, #16]
 802463c:	f88d 5008 	strb.w	r5, [sp, #8]
 8024640:	2300      	movs	r3, #0
 8024642:	f8ad 700a 	strh.w	r7, [sp, #10]
 8024646:	f8ad 600c 	strh.w	r6, [sp, #12]
 802464a:	f8ad 300e 	strh.w	r3, [sp, #14]
 802464e:	6803      	ldr	r3, [r0, #0]
 8024650:	a901      	add	r1, sp, #4
 8024652:	681b      	ldr	r3, [r3, #0]
 8024654:	4798      	blx	r3
 8024656:	b005      	add	sp, #20
 8024658:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802465a:	2900      	cmp	r1, #0
 802465c:	d1eb      	bne.n	8024636 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802465e:	80a2      	strh	r2, [r4, #4]
 8024660:	80c6      	strh	r6, [r0, #6]
 8024662:	60a1      	str	r1, [r4, #8]
 8024664:	81a1      	strh	r1, [r4, #12]
 8024666:	73a1      	strb	r1, [r4, #14]
 8024668:	e7e5      	b.n	8024636 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802466a:	bf00      	nop
 802466c:	0802b4ac 	.word	0x0802b4ac
 8024670:	0802b4d4 	.word	0x0802b4d4

08024674 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
 8024674:	10c9      	asrs	r1, r1, #3
 8024676:	2900      	cmp	r1, #0
 8024678:	bfb8      	it	lt
 802467a:	4249      	neglt	r1, r1
 802467c:	2801      	cmp	r0, #1
 802467e:	d108      	bne.n	8024692 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8024680:	f3c1 0008 	ubfx	r0, r1, #0, #9
 8024684:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 8024688:	4601      	mov	r1, r0
 802468a:	dd02      	ble.n	8024692 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 802468c:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 8024690:	4770      	bx	lr
 8024692:	29ff      	cmp	r1, #255	; 0xff
 8024694:	bfa8      	it	ge
 8024696:	21ff      	movge	r1, #255	; 0xff
 8024698:	4608      	mov	r0, r1
 802469a:	4770      	bx	lr

0802469c <_ZN8touchgfx10Rasterizer6lineToEii>:
 802469c:	b410      	push	{r4}
 802469e:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 80246a2:	429c      	cmp	r4, r3
 80246a4:	d803      	bhi.n	80246ae <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 80246a6:	f85d 4b04 	ldr.w	r4, [sp], #4
 80246aa:	f7ed bae3 	b.w	8011c74 <_ZN8touchgfx7Outline6lineToEii>
 80246ae:	f85d 4b04 	ldr.w	r4, [sp], #4
 80246b2:	4770      	bx	lr

080246b4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 80246b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80246b8:	b08b      	sub	sp, #44	; 0x2c
 80246ba:	e9cd 2306 	strd	r2, r3, [sp, #24]
 80246be:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 80246c2:	9308      	str	r3, [sp, #32]
 80246c4:	4606      	mov	r6, r0
 80246c6:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 80246ca:	9309      	str	r3, [sp, #36]	; 0x24
 80246cc:	468a      	mov	sl, r1
 80246ce:	f7ed fc3e 	bl	8011f4e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 80246d2:	68b5      	ldr	r5, [r6, #8]
 80246d4:	4604      	mov	r4, r0
 80246d6:	2d00      	cmp	r5, #0
 80246d8:	d044      	beq.n	8024764 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 80246da:	6873      	ldr	r3, [r6, #4]
 80246dc:	42ab      	cmp	r3, r5
 80246de:	d33d      	bcc.n	802475c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 80246e0:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 80246e4:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
 80246e8:	eb02 0b03 	add.w	fp, r2, r3
 80246ec:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 80246f0:	fb02 1203 	mla	r2, r2, r3, r1
 80246f4:	9205      	str	r2, [sp, #20]
 80246f6:	1e6a      	subs	r2, r5, #1
 80246f8:	9204      	str	r2, [sp, #16]
 80246fa:	f04f 0800 	mov.w	r8, #0
 80246fe:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 8024702:	f9b4 7000 	ldrsh.w	r7, [r4]
 8024706:	454b      	cmp	r3, r9
 8024708:	463a      	mov	r2, r7
 802470a:	d008      	beq.n	802471e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 802470c:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
 8024710:	eb03 0b09 	add.w	fp, r3, r9
 8024714:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 8024718:	fb03 1309 	mla	r3, r3, r9, r1
 802471c:	9305      	str	r3, [sp, #20]
 802471e:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8024722:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8024726:	4498      	add	r8, r3
 8024728:	9b04      	ldr	r3, [sp, #16]
 802472a:	3b01      	subs	r3, #1
 802472c:	9304      	str	r3, [sp, #16]
 802472e:	9b04      	ldr	r3, [sp, #16]
 8024730:	3301      	adds	r3, #1
 8024732:	d015      	beq.n	8024760 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 8024734:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 8024738:	42bb      	cmp	r3, r7
 802473a:	d117      	bne.n	802476c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 802473c:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 8024740:	9b04      	ldr	r3, [sp, #16]
 8024742:	4548      	cmp	r0, r9
 8024744:	f103 33ff 	add.w	r3, r3, #4294967295
 8024748:	d17f      	bne.n	802484a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 802474a:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 802474e:	4401      	add	r1, r0
 8024750:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8024754:	4480      	add	r8, r0
 8024756:	e7e9      	b.n	802472c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 8024758:	461f      	mov	r7, r3
 802475a:	e044      	b.n	80247e6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 802475c:	2000      	movs	r0, #0
 802475e:	e002      	b.n	8024766 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 8024760:	2900      	cmp	r1, #0
 8024762:	d16f      	bne.n	8024844 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 8024764:	2001      	movs	r0, #1
 8024766:	b00b      	add	sp, #44	; 0x2c
 8024768:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802476c:	2900      	cmp	r1, #0
 802476e:	d030      	beq.n	80247d2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 8024770:	2f00      	cmp	r7, #0
 8024772:	db29      	blt.n	80247c8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8024774:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8024778:	42bb      	cmp	r3, r7
 802477a:	dd25      	ble.n	80247c8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 802477c:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 8024780:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8024784:	f7ff ff76 	bl	8024674 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8024788:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802478a:	fb10 f003 	smulbb	r0, r0, r3
 802478e:	b280      	uxth	r0, r0
 8024790:	1c41      	adds	r1, r0, #1
 8024792:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8024796:	1209      	asrs	r1, r1, #8
 8024798:	f011 0fff 	tst.w	r1, #255	; 0xff
 802479c:	d014      	beq.n	80247c8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 802479e:	9808      	ldr	r0, [sp, #32]
 80247a0:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 80247a2:	b2c9      	uxtb	r1, r1
 80247a4:	b2ba      	uxth	r2, r7
 80247a6:	9102      	str	r1, [sp, #8]
 80247a8:	2101      	movs	r1, #1
 80247aa:	4413      	add	r3, r2
 80247ac:	9101      	str	r1, [sp, #4]
 80247ae:	4402      	add	r2, r0
 80247b0:	fa0f f18b 	sxth.w	r1, fp
 80247b4:	f8da 0000 	ldr.w	r0, [sl]
 80247b8:	9100      	str	r1, [sp, #0]
 80247ba:	6941      	ldr	r1, [r0, #20]
 80247bc:	b21b      	sxth	r3, r3
 80247be:	460d      	mov	r5, r1
 80247c0:	b212      	sxth	r2, r2
 80247c2:	9905      	ldr	r1, [sp, #20]
 80247c4:	4650      	mov	r0, sl
 80247c6:	47a8      	blx	r5
 80247c8:	9b04      	ldr	r3, [sp, #16]
 80247ca:	3301      	adds	r3, #1
 80247cc:	f107 0201 	add.w	r2, r7, #1
 80247d0:	d0c8      	beq.n	8024764 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 80247d2:	f9b4 7000 	ldrsh.w	r7, [r4]
 80247d6:	1abb      	subs	r3, r7, r2
 80247d8:	2b00      	cmp	r3, #0
 80247da:	dd31      	ble.n	8024840 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80247dc:	2a00      	cmp	r2, #0
 80247de:	dabb      	bge.n	8024758 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 80247e0:	2f00      	cmp	r7, #0
 80247e2:	dd2d      	ble.n	8024840 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80247e4:	2200      	movs	r2, #0
 80247e6:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 80247ea:	19d1      	adds	r1, r2, r7
 80247ec:	4299      	cmp	r1, r3
 80247ee:	db02      	blt.n	80247f6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 80247f0:	1a9f      	subs	r7, r3, r2
 80247f2:	2f00      	cmp	r7, #0
 80247f4:	dd24      	ble.n	8024840 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80247f6:	ea4f 1188 	mov.w	r1, r8, lsl #6
 80247fa:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 80247fe:	f7ff ff39 	bl	8024674 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8024802:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024804:	fb10 f003 	smulbb	r0, r0, r3
 8024808:	b280      	uxth	r0, r0
 802480a:	1c41      	adds	r1, r0, #1
 802480c:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8024810:	1209      	asrs	r1, r1, #8
 8024812:	f011 0fff 	tst.w	r1, #255	; 0xff
 8024816:	d013      	beq.n	8024840 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8024818:	9808      	ldr	r0, [sp, #32]
 802481a:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 802481c:	b292      	uxth	r2, r2
 802481e:	b2c9      	uxtb	r1, r1
 8024820:	4413      	add	r3, r2
 8024822:	9102      	str	r1, [sp, #8]
 8024824:	4402      	add	r2, r0
 8024826:	b23f      	sxth	r7, r7
 8024828:	f8da 0000 	ldr.w	r0, [sl]
 802482c:	9701      	str	r7, [sp, #4]
 802482e:	fa0f f18b 	sxth.w	r1, fp
 8024832:	9100      	str	r1, [sp, #0]
 8024834:	6947      	ldr	r7, [r0, #20]
 8024836:	9905      	ldr	r1, [sp, #20]
 8024838:	b21b      	sxth	r3, r3
 802483a:	b212      	sxth	r2, r2
 802483c:	4650      	mov	r0, sl
 802483e:	47b8      	blx	r7
 8024840:	464b      	mov	r3, r9
 8024842:	e75c      	b.n	80246fe <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 8024844:	2f00      	cmp	r7, #0
 8024846:	da95      	bge.n	8024774 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 8024848:	e78c      	b.n	8024764 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 802484a:	2900      	cmp	r1, #0
 802484c:	d0f8      	beq.n	8024840 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802484e:	e78f      	b.n	8024770 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

08024850 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 8024850:	4b4b      	ldr	r3, [pc, #300]	; (8024980 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x130>)
 8024852:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8024856:	2500      	movs	r5, #0
 8024858:	f100 0620 	add.w	r6, r0, #32
 802485c:	4604      	mov	r4, r0
 802485e:	e9c0 3100 	strd	r3, r1, [r0]
 8024862:	e9c0 5502 	strd	r5, r5, [r0, #8]
 8024866:	e9c0 5504 	strd	r5, r5, [r0, #16]
 802486a:	e9c0 5506 	strd	r5, r5, [r0, #24]
 802486e:	f100 0718 	add.w	r7, r0, #24
 8024872:	4630      	mov	r0, r6
 8024874:	4690      	mov	r8, r2
 8024876:	f7ec fd35 	bl	80112e4 <_ZN8touchgfx7OutlineC1Ev>
 802487a:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 802487e:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8024882:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
 8024886:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 802488a:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 802488e:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 8024892:	f884 5058 	strb.w	r5, [r4, #88]	; 0x58
 8024896:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 802489a:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 802489e:	f9b8 2000 	ldrsh.w	r2, [r8]
 80248a2:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 80248a6:	f8d4 c004 	ldr.w	ip, [r4, #4]
 80248aa:	9500      	str	r5, [sp, #0]
 80248ac:	4410      	add	r0, r2
 80248ae:	b280      	uxth	r0, r0
 80248b0:	fa0f fa80 	sxth.w	sl, r0
 80248b4:	45aa      	cmp	sl, r5
 80248b6:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 80248ba:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 80248be:	dd5c      	ble.n	802497a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 80248c0:	4591      	cmp	r9, r2
 80248c2:	dd5a      	ble.n	802497a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 80248c4:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 80248c8:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 80248cc:	440b      	add	r3, r1
 80248ce:	b29b      	uxth	r3, r3
 80248d0:	b21d      	sxth	r5, r3
 80248d2:	2d00      	cmp	r5, #0
 80248d4:	dd51      	ble.n	802497a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 80248d6:	458e      	cmp	lr, r1
 80248d8:	dd4f      	ble.n	802497a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 80248da:	45d1      	cmp	r9, sl
 80248dc:	bfb8      	it	lt
 80248de:	fa1f f089 	uxthlt.w	r0, r9
 80248e2:	45ae      	cmp	lr, r5
 80248e4:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 80248e8:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 80248ec:	bfb8      	it	lt
 80248ee:	fa1f f38e 	uxthlt.w	r3, lr
 80248f2:	1a80      	subs	r0, r0, r2
 80248f4:	1a5b      	subs	r3, r3, r1
 80248f6:	f8ad 0004 	strh.w	r0, [sp, #4]
 80248fa:	f8ad 3006 	strh.w	r3, [sp, #6]
 80248fe:	f8ad 2000 	strh.w	r2, [sp]
 8024902:	f8ad 1002 	strh.w	r1, [sp, #2]
 8024906:	466d      	mov	r5, sp
 8024908:	e895 0003 	ldmia.w	r5, {r0, r1}
 802490c:	e887 0003 	stmia.w	r7, {r0, r1}
 8024910:	f8dc 3000 	ldr.w	r3, [ip]
 8024914:	4660      	mov	r0, ip
 8024916:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8024918:	4639      	mov	r1, r7
 802491a:	4798      	blx	r3
 802491c:	6861      	ldr	r1, [r4, #4]
 802491e:	4628      	mov	r0, r5
 8024920:	3104      	adds	r1, #4
 8024922:	f7ee fee5 	bl	80136f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8024926:	4638      	mov	r0, r7
 8024928:	f7ee fe9e 	bl	8013668 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802492c:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8024930:	f8bd 2000 	ldrh.w	r2, [sp]
 8024934:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 8024938:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 802493c:	4630      	mov	r0, r6
 802493e:	f7ec fcb5 	bl	80112ac <_ZN8touchgfx7Outline5resetEv>
 8024942:	f9bd 3000 	ldrsh.w	r3, [sp]
 8024946:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
 802494a:	015b      	lsls	r3, r3, #5
 802494c:	60a3      	str	r3, [r4, #8]
 802494e:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8024952:	015b      	lsls	r3, r3, #5
 8024954:	60e3      	str	r3, [r4, #12]
 8024956:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 802495a:	015b      	lsls	r3, r3, #5
 802495c:	6123      	str	r3, [r4, #16]
 802495e:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8024962:	015b      	lsls	r3, r3, #5
 8024964:	6163      	str	r3, [r4, #20]
 8024966:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
 802496a:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 802496e:	4620      	mov	r0, r4
 8024970:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
 8024974:	b002      	add	sp, #8
 8024976:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802497a:	2300      	movs	r3, #0
 802497c:	9301      	str	r3, [sp, #4]
 802497e:	e7c2      	b.n	8024906 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb6>
 8024980:	0802b7f8 	.word	0x0802b7f8

08024984 <_ZN8touchgfx6Canvas5closeEv>:
 8024984:	b538      	push	{r3, r4, r5, lr}
 8024986:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 802498a:	4604      	mov	r4, r0
 802498c:	b193      	cbz	r3, 80249b4 <_ZN8touchgfx6Canvas5closeEv+0x30>
 802498e:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 8024992:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
 8024996:	4213      	tst	r3, r2
 8024998:	d10c      	bne.n	80249b4 <_ZN8touchgfx6Canvas5closeEv+0x30>
 802499a:	f100 0520 	add.w	r5, r0, #32
 802499e:	b123      	cbz	r3, 80249aa <_ZN8touchgfx6Canvas5closeEv+0x26>
 80249a0:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
 80249a4:	4628      	mov	r0, r5
 80249a6:	f7ff fe79 	bl	802469c <_ZN8touchgfx10Rasterizer6lineToEii>
 80249aa:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
 80249ae:	4628      	mov	r0, r5
 80249b0:	f7ff fe74 	bl	802469c <_ZN8touchgfx10Rasterizer6lineToEii>
 80249b4:	2300      	movs	r3, #0
 80249b6:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 80249ba:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
 80249be:	4298      	cmp	r0, r3
 80249c0:	bf34      	ite	cc
 80249c2:	2000      	movcc	r0, #0
 80249c4:	2001      	movcs	r0, #1
 80249c6:	bd38      	pop	{r3, r4, r5, pc}

080249c8 <_ZN8touchgfx6Canvas6renderEh>:
 80249c8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80249cc:	4604      	mov	r4, r0
 80249ce:	6840      	ldr	r0, [r0, #4]
 80249d0:	6803      	ldr	r3, [r0, #0]
 80249d2:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80249d4:	460d      	mov	r5, r1
 80249d6:	4798      	blx	r3
 80249d8:	fb10 f105 	smulbb	r1, r0, r5
 80249dc:	b289      	uxth	r1, r1
 80249de:	1c4d      	adds	r5, r1, #1
 80249e0:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 80249e4:	122d      	asrs	r5, r5, #8
 80249e6:	f000 809d 	beq.w	8024b24 <_ZN8touchgfx6Canvas6renderEh+0x15c>
 80249ea:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 80249ee:	2b00      	cmp	r3, #0
 80249f0:	f000 8098 	beq.w	8024b24 <_ZN8touchgfx6Canvas6renderEh+0x15c>
 80249f4:	4620      	mov	r0, r4
 80249f6:	f7ff ffc5 	bl	8024984 <_ZN8touchgfx6Canvas5closeEv>
 80249fa:	4607      	mov	r7, r0
 80249fc:	2800      	cmp	r0, #0
 80249fe:	d048      	beq.n	8024a92 <_ZN8touchgfx6Canvas6renderEh+0xca>
 8024a00:	6863      	ldr	r3, [r4, #4]
 8024a02:	4e49      	ldr	r6, [pc, #292]	; (8024b28 <_ZN8touchgfx6Canvas6renderEh+0x160>)
 8024a04:	6a98      	ldr	r0, [r3, #40]	; 0x28
 8024a06:	6837      	ldr	r7, [r6, #0]
 8024a08:	6803      	ldr	r3, [r0, #0]
 8024a0a:	689b      	ldr	r3, [r3, #8]
 8024a0c:	4798      	blx	r3
 8024a0e:	4601      	mov	r1, r0
 8024a10:	4638      	mov	r0, r7
 8024a12:	f7ea fdb9 	bl	800f588 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 8024a16:	4607      	mov	r7, r0
 8024a18:	f7de f964 	bl	8002ce4 <_ZN8touchgfx3HAL3lcdEv>
 8024a1c:	6803      	ldr	r3, [r0, #0]
 8024a1e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8024a20:	4798      	blx	r3
 8024a22:	4680      	mov	r8, r0
 8024a24:	f7de f95e 	bl	8002ce4 <_ZN8touchgfx3HAL3lcdEv>
 8024a28:	6803      	ldr	r3, [r0, #0]
 8024a2a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8024a2c:	4798      	blx	r3
 8024a2e:	280b      	cmp	r0, #11
 8024a30:	d85d      	bhi.n	8024aee <_ZN8touchgfx6Canvas6renderEh+0x126>
 8024a32:	e8df f000 	tbb	[pc, r0]
 8024a36:	5e53      	.short	0x5e53
 8024a38:	325c066e 	.word	0x325c066e
 8024a3c:	67676742 	.word	0x67676742
 8024a40:	6767      	.short	0x6767
 8024a42:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8024a46:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8024a4a:	2208      	movs	r2, #8
 8024a4c:	fb91 f2f2 	sdiv	r2, r1, r2
 8024a50:	fb08 2303 	mla	r3, r8, r3, r2
 8024a54:	441f      	add	r7, r3
 8024a56:	424b      	negs	r3, r1
 8024a58:	f003 0307 	and.w	r3, r3, #7
 8024a5c:	f001 0107 	and.w	r1, r1, #7
 8024a60:	bf58      	it	pl
 8024a62:	4259      	negpl	r1, r3
 8024a64:	b2c9      	uxtb	r1, r1
 8024a66:	b2ed      	uxtb	r5, r5
 8024a68:	e9cd 1500 	strd	r1, r5, [sp]
 8024a6c:	6860      	ldr	r0, [r4, #4]
 8024a6e:	463a      	mov	r2, r7
 8024a70:	6a81      	ldr	r1, [r0, #40]	; 0x28
 8024a72:	fa0f f388 	sxth.w	r3, r8
 8024a76:	f104 0020 	add.w	r0, r4, #32
 8024a7a:	f7ff fe1b 	bl	80246b4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 8024a7e:	6863      	ldr	r3, [r4, #4]
 8024a80:	4607      	mov	r7, r0
 8024a82:	6a98      	ldr	r0, [r3, #40]	; 0x28
 8024a84:	6803      	ldr	r3, [r0, #0]
 8024a86:	691b      	ldr	r3, [r3, #16]
 8024a88:	4798      	blx	r3
 8024a8a:	6830      	ldr	r0, [r6, #0]
 8024a8c:	6803      	ldr	r3, [r0, #0]
 8024a8e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8024a90:	4798      	blx	r3
 8024a92:	4638      	mov	r0, r7
 8024a94:	b002      	add	sp, #8
 8024a96:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8024a9a:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8024a9e:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8024aa2:	2204      	movs	r2, #4
 8024aa4:	fb91 f2f2 	sdiv	r2, r1, r2
 8024aa8:	fb08 2303 	mla	r3, r8, r3, r2
 8024aac:	441f      	add	r7, r3
 8024aae:	424b      	negs	r3, r1
 8024ab0:	f003 0303 	and.w	r3, r3, #3
 8024ab4:	f001 0103 	and.w	r1, r1, #3
 8024ab8:	e7d2      	b.n	8024a60 <_ZN8touchgfx6Canvas6renderEh+0x98>
 8024aba:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8024abe:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8024ac2:	2900      	cmp	r1, #0
 8024ac4:	f04f 0202 	mov.w	r2, #2
 8024ac8:	fb91 f2f2 	sdiv	r2, r1, r2
 8024acc:	f001 0101 	and.w	r1, r1, #1
 8024ad0:	fb08 2303 	mla	r3, r8, r3, r2
 8024ad4:	441f      	add	r7, r3
 8024ad6:	bfb8      	it	lt
 8024ad8:	4249      	neglt	r1, r1
 8024ada:	e7c3      	b.n	8024a64 <_ZN8touchgfx6Canvas6renderEh+0x9c>
 8024adc:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8024ae0:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8024ae4:	fb08 f303 	mul.w	r3, r8, r3
 8024ae8:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8024aec:	441f      	add	r7, r3
 8024aee:	2100      	movs	r1, #0
 8024af0:	e7b9      	b.n	8024a66 <_ZN8touchgfx6Canvas6renderEh+0x9e>
 8024af2:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8024af6:	fb08 f203 	mul.w	r2, r8, r3
 8024afa:	8b23      	ldrh	r3, [r4, #24]
 8024afc:	2103      	movs	r1, #3
 8024afe:	fb13 2301 	smlabb	r3, r3, r1, r2
 8024b02:	e7f3      	b.n	8024aec <_ZN8touchgfx6Canvas6renderEh+0x124>
 8024b04:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8024b08:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8024b0c:	fb08 2303 	mla	r3, r8, r3, r2
 8024b10:	e7ec      	b.n	8024aec <_ZN8touchgfx6Canvas6renderEh+0x124>
 8024b12:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8024b16:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8024b1a:	fb08 f303 	mul.w	r3, r8, r3
 8024b1e:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8024b22:	e7e3      	b.n	8024aec <_ZN8touchgfx6Canvas6renderEh+0x124>
 8024b24:	2701      	movs	r7, #1
 8024b26:	e7b4      	b.n	8024a92 <_ZN8touchgfx6Canvas6renderEh+0xca>
 8024b28:	200137bc 	.word	0x200137bc

08024b2c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 8024b2c:	b510      	push	{r4, lr}
 8024b2e:	4b07      	ldr	r3, [pc, #28]	; (8024b4c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 8024b30:	781b      	ldrb	r3, [r3, #0]
 8024b32:	2b01      	cmp	r3, #1
 8024b34:	d108      	bne.n	8024b48 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 8024b36:	6843      	ldr	r3, [r0, #4]
 8024b38:	6814      	ldr	r4, [r2, #0]
 8024b3a:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8024b3e:	680b      	ldr	r3, [r1, #0]
 8024b40:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 8024b44:	6013      	str	r3, [r2, #0]
 8024b46:	600c      	str	r4, [r1, #0]
 8024b48:	bd10      	pop	{r4, pc}
 8024b4a:	bf00      	nop
 8024b4c:	200137b4 	.word	0x200137b4

08024b50 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 8024b50:	b513      	push	{r0, r1, r4, lr}
 8024b52:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8024b56:	4604      	mov	r4, r0
 8024b58:	e9cd 2100 	strd	r2, r1, [sp]
 8024b5c:	b9a3      	cbnz	r3, 8024b88 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 8024b5e:	466a      	mov	r2, sp
 8024b60:	a901      	add	r1, sp, #4
 8024b62:	4620      	mov	r0, r4
 8024b64:	f7ff ffe2 	bl	8024b2c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8024b68:	68a3      	ldr	r3, [r4, #8]
 8024b6a:	9901      	ldr	r1, [sp, #4]
 8024b6c:	9a00      	ldr	r2, [sp, #0]
 8024b6e:	1ac9      	subs	r1, r1, r3
 8024b70:	68e3      	ldr	r3, [r4, #12]
 8024b72:	9101      	str	r1, [sp, #4]
 8024b74:	1ad2      	subs	r2, r2, r3
 8024b76:	2a00      	cmp	r2, #0
 8024b78:	9200      	str	r2, [sp, #0]
 8024b7a:	da0b      	bge.n	8024b94 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 8024b7c:	2301      	movs	r3, #1
 8024b7e:	2900      	cmp	r1, #0
 8024b80:	da0e      	bge.n	8024ba0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 8024b82:	f043 0304 	orr.w	r3, r3, #4
 8024b86:	e013      	b.n	8024bb0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 8024b88:	f7ff fefc 	bl	8024984 <_ZN8touchgfx6Canvas5closeEv>
 8024b8c:	2800      	cmp	r0, #0
 8024b8e:	d1e6      	bne.n	8024b5e <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 8024b90:	b002      	add	sp, #8
 8024b92:	bd10      	pop	{r4, pc}
 8024b94:	6963      	ldr	r3, [r4, #20]
 8024b96:	429a      	cmp	r2, r3
 8024b98:	bfac      	ite	ge
 8024b9a:	2302      	movge	r3, #2
 8024b9c:	2300      	movlt	r3, #0
 8024b9e:	e7ee      	b.n	8024b7e <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 8024ba0:	6920      	ldr	r0, [r4, #16]
 8024ba2:	4281      	cmp	r1, r0
 8024ba4:	bfac      	ite	ge
 8024ba6:	2008      	movge	r0, #8
 8024ba8:	2000      	movlt	r0, #0
 8024baa:	4318      	orrs	r0, r3
 8024bac:	b2c3      	uxtb	r3, r0
 8024bae:	b158      	cbz	r0, 8024bc8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 8024bb0:	2200      	movs	r2, #0
 8024bb2:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
 8024bb6:	9901      	ldr	r1, [sp, #4]
 8024bb8:	9a00      	ldr	r2, [sp, #0]
 8024bba:	66a1      	str	r1, [r4, #104]	; 0x68
 8024bbc:	66e2      	str	r2, [r4, #108]	; 0x6c
 8024bbe:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
 8024bc2:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 8024bc6:	e7e3      	b.n	8024b90 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 8024bc8:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 8024bcc:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8024bd0:	4298      	cmp	r0, r3
 8024bd2:	d803      	bhi.n	8024bdc <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 8024bd4:	f104 0020 	add.w	r0, r4, #32
 8024bd8:	f7ed f866 	bl	8011ca8 <_ZN8touchgfx7Outline6moveToEii>
 8024bdc:	2301      	movs	r3, #1
 8024bde:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8024be2:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8024be6:	2300      	movs	r3, #0
 8024be8:	e7e5      	b.n	8024bb6 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

08024bea <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 8024bea:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8024bec:	ab02      	add	r3, sp, #8
 8024bee:	4604      	mov	r4, r0
 8024bf0:	f843 2d08 	str.w	r2, [r3, #-8]!
 8024bf4:	9101      	str	r1, [sp, #4]
 8024bf6:	461a      	mov	r2, r3
 8024bf8:	a901      	add	r1, sp, #4
 8024bfa:	f7ff ff97 	bl	8024b2c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8024bfe:	68a3      	ldr	r3, [r4, #8]
 8024c00:	9901      	ldr	r1, [sp, #4]
 8024c02:	9a00      	ldr	r2, [sp, #0]
 8024c04:	1ac9      	subs	r1, r1, r3
 8024c06:	68e3      	ldr	r3, [r4, #12]
 8024c08:	9101      	str	r1, [sp, #4]
 8024c0a:	1ad2      	subs	r2, r2, r3
 8024c0c:	2a00      	cmp	r2, #0
 8024c0e:	9200      	str	r2, [sp, #0]
 8024c10:	db1c      	blt.n	8024c4c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 8024c12:	6963      	ldr	r3, [r4, #20]
 8024c14:	429a      	cmp	r2, r3
 8024c16:	bfac      	ite	ge
 8024c18:	2002      	movge	r0, #2
 8024c1a:	2000      	movlt	r0, #0
 8024c1c:	2900      	cmp	r1, #0
 8024c1e:	db17      	blt.n	8024c50 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 8024c20:	6923      	ldr	r3, [r4, #16]
 8024c22:	4299      	cmp	r1, r3
 8024c24:	bfac      	ite	ge
 8024c26:	2308      	movge	r3, #8
 8024c28:	2300      	movlt	r3, #0
 8024c2a:	4303      	orrs	r3, r0
 8024c2c:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
 8024c30:	b2dd      	uxtb	r5, r3
 8024c32:	b978      	cbnz	r0, 8024c54 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 8024c34:	f104 0020 	add.w	r0, r4, #32
 8024c38:	f7ff fd30 	bl	802469c <_ZN8touchgfx10Rasterizer6lineToEii>
 8024c3c:	9b01      	ldr	r3, [sp, #4]
 8024c3e:	65e3      	str	r3, [r4, #92]	; 0x5c
 8024c40:	9b00      	ldr	r3, [sp, #0]
 8024c42:	6623      	str	r3, [r4, #96]	; 0x60
 8024c44:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 8024c48:	b002      	add	sp, #8
 8024c4a:	bd70      	pop	{r4, r5, r6, pc}
 8024c4c:	2001      	movs	r0, #1
 8024c4e:	e7e5      	b.n	8024c1c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 8024c50:	2304      	movs	r3, #4
 8024c52:	e7ea      	b.n	8024c2a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 8024c54:	b113      	cbz	r3, 8024c5c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 8024c56:	ea10 0305 	ands.w	r3, r0, r5
 8024c5a:	d11c      	bne.n	8024c96 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 8024c5c:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
 8024c60:	f104 0620 	add.w	r6, r4, #32
 8024c64:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
 8024c68:	b98b      	cbnz	r3, 8024c8e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 8024c6a:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 8024c6e:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8024c72:	4298      	cmp	r0, r3
 8024c74:	d802      	bhi.n	8024c7c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 8024c76:	4630      	mov	r0, r6
 8024c78:	f7ed f816 	bl	8011ca8 <_ZN8touchgfx7Outline6moveToEii>
 8024c7c:	2301      	movs	r3, #1
 8024c7e:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8024c82:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8024c86:	e9dd 2100 	ldrd	r2, r1, [sp]
 8024c8a:	4630      	mov	r0, r6
 8024c8c:	e7d4      	b.n	8024c38 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 8024c8e:	4630      	mov	r0, r6
 8024c90:	f7ff fd04 	bl	802469c <_ZN8touchgfx10Rasterizer6lineToEii>
 8024c94:	e7f7      	b.n	8024c86 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 8024c96:	461d      	mov	r5, r3
 8024c98:	e7d0      	b.n	8024c3c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

08024c9c <_ZN8touchgfx6CanvasD1Ev>:
 8024c9c:	b510      	push	{r4, lr}
 8024c9e:	4b04      	ldr	r3, [pc, #16]	; (8024cb0 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 8024ca0:	4604      	mov	r4, r0
 8024ca2:	f840 3b20 	str.w	r3, [r0], #32
 8024ca6:	f7ec faf9 	bl	801129c <_ZN8touchgfx7OutlineD1Ev>
 8024caa:	4620      	mov	r0, r4
 8024cac:	bd10      	pop	{r4, pc}
 8024cae:	bf00      	nop
 8024cb0:	0802b7f8 	.word	0x0802b7f8

08024cb4 <_ZN8touchgfx6CanvasD0Ev>:
 8024cb4:	b510      	push	{r4, lr}
 8024cb6:	4604      	mov	r4, r0
 8024cb8:	f7ff fff0 	bl	8024c9c <_ZN8touchgfx6CanvasD1Ev>
 8024cbc:	4620      	mov	r0, r4
 8024cbe:	2170      	movs	r1, #112	; 0x70
 8024cc0:	f001 fbe5 	bl	802648e <_ZdlPvj>
 8024cc4:	4620      	mov	r0, r4
 8024cc6:	bd10      	pop	{r4, pc}

08024cc8 <_ZN8touchgfx6CircleD1Ev>:
 8024cc8:	4770      	bx	lr

08024cca <_ZN8touchgfx6CircleD0Ev>:
 8024cca:	b510      	push	{r4, lr}
 8024ccc:	2148      	movs	r1, #72	; 0x48
 8024cce:	4604      	mov	r4, r0
 8024cd0:	f001 fbdd 	bl	802648e <_ZdlPvj>
 8024cd4:	4620      	mov	r0, r4
 8024cd6:	bd10      	pop	{r4, pc}

08024cd8 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
 8024cd8:	b508      	push	{r3, lr}
 8024cda:	f5c0 6034 	rsb	r0, r0, #2880	; 0xb40
 8024cde:	f7ea ffa9 	bl	800fc34 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8024ce2:	bd08      	pop	{r3, pc}

08024ce4 <_ZN8touchgfx6CircleC1Ev>:
 8024ce4:	b510      	push	{r4, lr}
 8024ce6:	4604      	mov	r4, r0
 8024ce8:	f7ea fe40 	bl	800f96c <_ZN8touchgfx12CanvasWidgetC1Ev>
 8024cec:	4b08      	ldr	r3, [pc, #32]	; (8024d10 <_ZN8touchgfx6CircleC1Ev+0x2c>)
 8024cee:	6023      	str	r3, [r4, #0]
 8024cf0:	f44f 5234 	mov.w	r2, #11520	; 0x2d00
 8024cf4:	2300      	movs	r3, #0
 8024cf6:	e9c4 230f 	strd	r2, r3, [r4, #60]	; 0x3c
 8024cfa:	f24b 4205 	movw	r2, #46085	; 0xb405
 8024cfe:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 8024d02:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 8024d06:	f8a4 2044 	strh.w	r2, [r4, #68]	; 0x44
 8024d0a:	60a3      	str	r3, [r4, #8]
 8024d0c:	4620      	mov	r0, r4
 8024d0e:	bd10      	pop	{r4, pc}
 8024d10:	0802b80c 	.word	0x0802b80c

08024d14 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
 8024d14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024d18:	428a      	cmp	r2, r1
 8024d1a:	4680      	mov	r8, r0
 8024d1c:	4610      	mov	r0, r2
 8024d1e:	4699      	mov	r9, r3
 8024d20:	bfa6      	itte	ge
 8024d22:	460a      	movge	r2, r1
 8024d24:	4603      	movge	r3, r0
 8024d26:	460b      	movlt	r3, r1
 8024d28:	1a99      	subs	r1, r3, r2
 8024d2a:	b085      	sub	sp, #20
 8024d2c:	f5b1 5f34 	cmp.w	r1, #11520	; 0x2d00
 8024d30:	f8d8 4040 	ldr.w	r4, [r8, #64]	; 0x40
 8024d34:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8024d36:	bfa4      	itt	ge
 8024d38:	f44f 5334 	movge.w	r3, #11520	; 0x2d00
 8024d3c:	2200      	movge	r2, #0
 8024d3e:	e9dd 760e 	ldrd	r7, r6, [sp, #56]	; 0x38
 8024d42:	9300      	str	r3, [sp, #0]
 8024d44:	f108 0a34 	add.w	sl, r8, #52	; 0x34
 8024d48:	f102 0b01 	add.w	fp, r2, #1
 8024d4c:	2c00      	cmp	r4, #0
 8024d4e:	f040 80af 	bne.w	8024eb0 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x19c>
 8024d52:	4610      	mov	r0, r2
 8024d54:	9201      	str	r2, [sp, #4]
 8024d56:	f7ea ff6d 	bl	800fc34 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8024d5a:	a903      	add	r1, sp, #12
 8024d5c:	9003      	str	r0, [sp, #12]
 8024d5e:	4650      	mov	r0, sl
 8024d60:	f7ea fe30 	bl	800f9c4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8024d64:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 8024d68:	9a01      	ldr	r2, [sp, #4]
 8024d6a:	4408      	add	r0, r1
 8024d6c:	f8d9 1000 	ldr.w	r1, [r9]
 8024d70:	4281      	cmp	r1, r0
 8024d72:	bfc8      	it	gt
 8024d74:	f8c9 0000 	strgt.w	r0, [r9]
 8024d78:	6839      	ldr	r1, [r7, #0]
 8024d7a:	4288      	cmp	r0, r1
 8024d7c:	bfc8      	it	gt
 8024d7e:	6038      	strgt	r0, [r7, #0]
 8024d80:	4610      	mov	r0, r2
 8024d82:	f7ff ffa9 	bl	8024cd8 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8024d86:	a903      	add	r1, sp, #12
 8024d88:	9003      	str	r0, [sp, #12]
 8024d8a:	4650      	mov	r0, sl
 8024d8c:	f7ea fe1a 	bl	800f9c4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8024d90:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8024d94:	1a10      	subs	r0, r2, r0
 8024d96:	6832      	ldr	r2, [r6, #0]
 8024d98:	4282      	cmp	r2, r0
 8024d9a:	bfc8      	it	gt
 8024d9c:	6030      	strgt	r0, [r6, #0]
 8024d9e:	682a      	ldr	r2, [r5, #0]
 8024da0:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 8024da4:	4290      	cmp	r0, r2
 8024da6:	fb9b f2f1 	sdiv	r2, fp, r1
 8024daa:	fb01 b212 	mls	r2, r1, r2, fp
 8024dae:	eba1 0202 	sub.w	r2, r1, r2
 8024db2:	bfc8      	it	gt
 8024db4:	6028      	strgt	r0, [r5, #0]
 8024db6:	fb92 f0f1 	sdiv	r0, r2, r1
 8024dba:	fb01 2210 	mls	r2, r1, r0, r2
 8024dbe:	4493      	add	fp, r2
 8024dc0:	9b00      	ldr	r3, [sp, #0]
 8024dc2:	455b      	cmp	r3, fp
 8024dc4:	db2a      	blt.n	8024e1c <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x108>
 8024dc6:	4658      	mov	r0, fp
 8024dc8:	f7ea ff34 	bl	800fc34 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8024dcc:	a903      	add	r1, sp, #12
 8024dce:	9003      	str	r0, [sp, #12]
 8024dd0:	4650      	mov	r0, sl
 8024dd2:	f7ea fdf7 	bl	800f9c4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8024dd6:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8024dda:	4410      	add	r0, r2
 8024ddc:	f8d9 2000 	ldr.w	r2, [r9]
 8024de0:	4282      	cmp	r2, r0
 8024de2:	bfc8      	it	gt
 8024de4:	f8c9 0000 	strgt.w	r0, [r9]
 8024de8:	683a      	ldr	r2, [r7, #0]
 8024dea:	4290      	cmp	r0, r2
 8024dec:	bfc8      	it	gt
 8024dee:	6038      	strgt	r0, [r7, #0]
 8024df0:	4658      	mov	r0, fp
 8024df2:	f7ff ff71 	bl	8024cd8 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8024df6:	a903      	add	r1, sp, #12
 8024df8:	9003      	str	r0, [sp, #12]
 8024dfa:	4650      	mov	r0, sl
 8024dfc:	f7ea fde2 	bl	800f9c4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8024e00:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8024e04:	1a10      	subs	r0, r2, r0
 8024e06:	6832      	ldr	r2, [r6, #0]
 8024e08:	4282      	cmp	r2, r0
 8024e0a:	bfc8      	it	gt
 8024e0c:	6030      	strgt	r0, [r6, #0]
 8024e0e:	682a      	ldr	r2, [r5, #0]
 8024e10:	4290      	cmp	r0, r2
 8024e12:	bfc8      	it	gt
 8024e14:	6028      	strgt	r0, [r5, #0]
 8024e16:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 8024e1a:	e7d1      	b.n	8024dc0 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xac>
 8024e1c:	9b00      	ldr	r3, [sp, #0]
 8024e1e:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 8024e22:	455b      	cmp	r3, fp
 8024e24:	dd27      	ble.n	8024e76 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x162>
 8024e26:	4618      	mov	r0, r3
 8024e28:	f7ea ff04 	bl	800fc34 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8024e2c:	a903      	add	r1, sp, #12
 8024e2e:	9003      	str	r0, [sp, #12]
 8024e30:	4650      	mov	r0, sl
 8024e32:	f7ea fdc7 	bl	800f9c4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8024e36:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8024e3a:	4410      	add	r0, r2
 8024e3c:	f8d9 2000 	ldr.w	r2, [r9]
 8024e40:	4282      	cmp	r2, r0
 8024e42:	bfc8      	it	gt
 8024e44:	f8c9 0000 	strgt.w	r0, [r9]
 8024e48:	683a      	ldr	r2, [r7, #0]
 8024e4a:	4290      	cmp	r0, r2
 8024e4c:	bfc8      	it	gt
 8024e4e:	6038      	strgt	r0, [r7, #0]
 8024e50:	9800      	ldr	r0, [sp, #0]
 8024e52:	f7ff ff41 	bl	8024cd8 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8024e56:	a903      	add	r1, sp, #12
 8024e58:	9003      	str	r0, [sp, #12]
 8024e5a:	4650      	mov	r0, sl
 8024e5c:	f7ea fdb2 	bl	800f9c4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8024e60:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8024e64:	1a10      	subs	r0, r2, r0
 8024e66:	6832      	ldr	r2, [r6, #0]
 8024e68:	4282      	cmp	r2, r0
 8024e6a:	bfc8      	it	gt
 8024e6c:	6030      	strgt	r0, [r6, #0]
 8024e6e:	682a      	ldr	r2, [r5, #0]
 8024e70:	4290      	cmp	r0, r2
 8024e72:	bfc8      	it	gt
 8024e74:	6028      	strgt	r0, [r5, #0]
 8024e76:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8024e7a:	f8d9 1000 	ldr.w	r1, [r9]
 8024e7e:	4291      	cmp	r1, r2
 8024e80:	bfc8      	it	gt
 8024e82:	f8c9 2000 	strgt.w	r2, [r9]
 8024e86:	683a      	ldr	r2, [r7, #0]
 8024e88:	f8d8 302c 	ldr.w	r3, [r8, #44]	; 0x2c
 8024e8c:	429a      	cmp	r2, r3
 8024e8e:	bfb8      	it	lt
 8024e90:	603b      	strlt	r3, [r7, #0]
 8024e92:	6832      	ldr	r2, [r6, #0]
 8024e94:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 8024e98:	429a      	cmp	r2, r3
 8024e9a:	bfc8      	it	gt
 8024e9c:	6033      	strgt	r3, [r6, #0]
 8024e9e:	682a      	ldr	r2, [r5, #0]
 8024ea0:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 8024ea4:	429a      	cmp	r2, r3
 8024ea6:	da00      	bge.n	8024eaa <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 8024ea8:	602b      	str	r3, [r5, #0]
 8024eaa:	b005      	add	sp, #20
 8024eac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024eb0:	2002      	movs	r0, #2
 8024eb2:	3401      	adds	r4, #1
 8024eb4:	fb94 f4f0 	sdiv	r4, r4, r0
 8024eb8:	4610      	mov	r0, r2
 8024eba:	9201      	str	r2, [sp, #4]
 8024ebc:	f7ea feba 	bl	800fc34 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8024ec0:	a903      	add	r1, sp, #12
 8024ec2:	9003      	str	r0, [sp, #12]
 8024ec4:	4650      	mov	r0, sl
 8024ec6:	f7ea fd7d 	bl	800f9c4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8024eca:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 8024ece:	9a01      	ldr	r2, [sp, #4]
 8024ed0:	4408      	add	r0, r1
 8024ed2:	f8d9 1000 	ldr.w	r1, [r9]
 8024ed6:	1b03      	subs	r3, r0, r4
 8024ed8:	4299      	cmp	r1, r3
 8024eda:	bfc8      	it	gt
 8024edc:	f8c9 3000 	strgt.w	r3, [r9]
 8024ee0:	6839      	ldr	r1, [r7, #0]
 8024ee2:	428b      	cmp	r3, r1
 8024ee4:	bfc8      	it	gt
 8024ee6:	603b      	strgt	r3, [r7, #0]
 8024ee8:	f8d9 1000 	ldr.w	r1, [r9]
 8024eec:	4420      	add	r0, r4
 8024eee:	4281      	cmp	r1, r0
 8024ef0:	bfc8      	it	gt
 8024ef2:	f8c9 0000 	strgt.w	r0, [r9]
 8024ef6:	6839      	ldr	r1, [r7, #0]
 8024ef8:	4288      	cmp	r0, r1
 8024efa:	bfc8      	it	gt
 8024efc:	6038      	strgt	r0, [r7, #0]
 8024efe:	4610      	mov	r0, r2
 8024f00:	f7ff feea 	bl	8024cd8 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8024f04:	a903      	add	r1, sp, #12
 8024f06:	9003      	str	r0, [sp, #12]
 8024f08:	4650      	mov	r0, sl
 8024f0a:	f7ea fd5b 	bl	800f9c4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8024f0e:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8024f12:	1a10      	subs	r0, r2, r0
 8024f14:	6832      	ldr	r2, [r6, #0]
 8024f16:	1b01      	subs	r1, r0, r4
 8024f18:	428a      	cmp	r2, r1
 8024f1a:	bfc8      	it	gt
 8024f1c:	6031      	strgt	r1, [r6, #0]
 8024f1e:	682a      	ldr	r2, [r5, #0]
 8024f20:	4291      	cmp	r1, r2
 8024f22:	bfc8      	it	gt
 8024f24:	6029      	strgt	r1, [r5, #0]
 8024f26:	6832      	ldr	r2, [r6, #0]
 8024f28:	4420      	add	r0, r4
 8024f2a:	4282      	cmp	r2, r0
 8024f2c:	bfc8      	it	gt
 8024f2e:	6030      	strgt	r0, [r6, #0]
 8024f30:	682a      	ldr	r2, [r5, #0]
 8024f32:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 8024f36:	4290      	cmp	r0, r2
 8024f38:	fb9b f2f1 	sdiv	r2, fp, r1
 8024f3c:	fb01 b212 	mls	r2, r1, r2, fp
 8024f40:	eba1 0202 	sub.w	r2, r1, r2
 8024f44:	bfc8      	it	gt
 8024f46:	6028      	strgt	r0, [r5, #0]
 8024f48:	fb92 f0f1 	sdiv	r0, r2, r1
 8024f4c:	fb01 2210 	mls	r2, r1, r0, r2
 8024f50:	4493      	add	fp, r2
 8024f52:	9b00      	ldr	r3, [sp, #0]
 8024f54:	455b      	cmp	r3, fp
 8024f56:	db40      	blt.n	8024fda <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x2c6>
 8024f58:	4658      	mov	r0, fp
 8024f5a:	f7ea fe6b 	bl	800fc34 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8024f5e:	a903      	add	r1, sp, #12
 8024f60:	9003      	str	r0, [sp, #12]
 8024f62:	4650      	mov	r0, sl
 8024f64:	f7ea fd2e 	bl	800f9c4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8024f68:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8024f6c:	4410      	add	r0, r2
 8024f6e:	f8d9 2000 	ldr.w	r2, [r9]
 8024f72:	1b01      	subs	r1, r0, r4
 8024f74:	428a      	cmp	r2, r1
 8024f76:	bfc8      	it	gt
 8024f78:	f8c9 1000 	strgt.w	r1, [r9]
 8024f7c:	683a      	ldr	r2, [r7, #0]
 8024f7e:	4291      	cmp	r1, r2
 8024f80:	bfc8      	it	gt
 8024f82:	6039      	strgt	r1, [r7, #0]
 8024f84:	f8d9 2000 	ldr.w	r2, [r9]
 8024f88:	4420      	add	r0, r4
 8024f8a:	4282      	cmp	r2, r0
 8024f8c:	bfc8      	it	gt
 8024f8e:	f8c9 0000 	strgt.w	r0, [r9]
 8024f92:	683a      	ldr	r2, [r7, #0]
 8024f94:	4290      	cmp	r0, r2
 8024f96:	bfc8      	it	gt
 8024f98:	6038      	strgt	r0, [r7, #0]
 8024f9a:	4658      	mov	r0, fp
 8024f9c:	f7ff fe9c 	bl	8024cd8 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8024fa0:	a903      	add	r1, sp, #12
 8024fa2:	9003      	str	r0, [sp, #12]
 8024fa4:	4650      	mov	r0, sl
 8024fa6:	f7ea fd0d 	bl	800f9c4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8024faa:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8024fae:	1a10      	subs	r0, r2, r0
 8024fb0:	6832      	ldr	r2, [r6, #0]
 8024fb2:	1b01      	subs	r1, r0, r4
 8024fb4:	428a      	cmp	r2, r1
 8024fb6:	bfc8      	it	gt
 8024fb8:	6031      	strgt	r1, [r6, #0]
 8024fba:	682a      	ldr	r2, [r5, #0]
 8024fbc:	4291      	cmp	r1, r2
 8024fbe:	bfc8      	it	gt
 8024fc0:	6029      	strgt	r1, [r5, #0]
 8024fc2:	6832      	ldr	r2, [r6, #0]
 8024fc4:	4420      	add	r0, r4
 8024fc6:	4282      	cmp	r2, r0
 8024fc8:	bfc8      	it	gt
 8024fca:	6030      	strgt	r0, [r6, #0]
 8024fcc:	682a      	ldr	r2, [r5, #0]
 8024fce:	4290      	cmp	r0, r2
 8024fd0:	bfc8      	it	gt
 8024fd2:	6028      	strgt	r0, [r5, #0]
 8024fd4:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 8024fd8:	e7bb      	b.n	8024f52 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x23e>
 8024fda:	9b00      	ldr	r3, [sp, #0]
 8024fdc:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 8024fe0:	455b      	cmp	r3, fp
 8024fe2:	f77f af62 	ble.w	8024eaa <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 8024fe6:	4618      	mov	r0, r3
 8024fe8:	f7ea fe24 	bl	800fc34 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8024fec:	a903      	add	r1, sp, #12
 8024fee:	9003      	str	r0, [sp, #12]
 8024ff0:	4650      	mov	r0, sl
 8024ff2:	f7ea fce7 	bl	800f9c4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8024ff6:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8024ffa:	4410      	add	r0, r2
 8024ffc:	f8d9 2000 	ldr.w	r2, [r9]
 8025000:	1b01      	subs	r1, r0, r4
 8025002:	428a      	cmp	r2, r1
 8025004:	bfc8      	it	gt
 8025006:	f8c9 1000 	strgt.w	r1, [r9]
 802500a:	683a      	ldr	r2, [r7, #0]
 802500c:	4291      	cmp	r1, r2
 802500e:	bfc8      	it	gt
 8025010:	6039      	strgt	r1, [r7, #0]
 8025012:	f8d9 2000 	ldr.w	r2, [r9]
 8025016:	4420      	add	r0, r4
 8025018:	4282      	cmp	r2, r0
 802501a:	bfc8      	it	gt
 802501c:	f8c9 0000 	strgt.w	r0, [r9]
 8025020:	683b      	ldr	r3, [r7, #0]
 8025022:	4298      	cmp	r0, r3
 8025024:	bfc8      	it	gt
 8025026:	6038      	strgt	r0, [r7, #0]
 8025028:	9800      	ldr	r0, [sp, #0]
 802502a:	f7ff fe55 	bl	8024cd8 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802502e:	a903      	add	r1, sp, #12
 8025030:	9003      	str	r0, [sp, #12]
 8025032:	4650      	mov	r0, sl
 8025034:	f7ea fcc6 	bl	800f9c4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8025038:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 802503c:	6832      	ldr	r2, [r6, #0]
 802503e:	1a18      	subs	r0, r3, r0
 8025040:	1b03      	subs	r3, r0, r4
 8025042:	429a      	cmp	r2, r3
 8025044:	bfc8      	it	gt
 8025046:	6033      	strgt	r3, [r6, #0]
 8025048:	682a      	ldr	r2, [r5, #0]
 802504a:	4293      	cmp	r3, r2
 802504c:	bfc8      	it	gt
 802504e:	602b      	strgt	r3, [r5, #0]
 8025050:	6833      	ldr	r3, [r6, #0]
 8025052:	4404      	add	r4, r0
 8025054:	42a3      	cmp	r3, r4
 8025056:	bfc8      	it	gt
 8025058:	6034      	strgt	r4, [r6, #0]
 802505a:	682b      	ldr	r3, [r5, #0]
 802505c:	429c      	cmp	r4, r3
 802505e:	bfc8      	it	gt
 8025060:	602c      	strgt	r4, [r5, #0]
 8025062:	e722      	b.n	8024eaa <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>

08025064 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
 8025064:	b530      	push	{r4, r5, lr}
 8025066:	4604      	mov	r4, r0
 8025068:	4608      	mov	r0, r1
 802506a:	4611      	mov	r1, r2
 802506c:	461a      	mov	r2, r3
 802506e:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8025072:	b089      	sub	sp, #36	; 0x24
 8025074:	015b      	lsls	r3, r3, #5
 8025076:	9304      	str	r3, [sp, #16]
 8025078:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 802507c:	2500      	movs	r5, #0
 802507e:	015b      	lsls	r3, r3, #5
 8025080:	e9cd 3506 	strd	r3, r5, [sp, #24]
 8025084:	ab07      	add	r3, sp, #28
 8025086:	9302      	str	r3, [sp, #8]
 8025088:	ab06      	add	r3, sp, #24
 802508a:	9301      	str	r3, [sp, #4]
 802508c:	ab05      	add	r3, sp, #20
 802508e:	9300      	str	r3, [sp, #0]
 8025090:	ab04      	add	r3, sp, #16
 8025092:	9505      	str	r5, [sp, #20]
 8025094:	f7ff fe3e 	bl	8024d14 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
 8025098:	2520      	movs	r5, #32
 802509a:	9a04      	ldr	r2, [sp, #16]
 802509c:	9805      	ldr	r0, [sp, #20]
 802509e:	fb92 f2f5 	sdiv	r2, r2, r5
 80250a2:	fb90 f0f5 	sdiv	r0, r0, r5
 80250a6:	b292      	uxth	r2, r2
 80250a8:	3002      	adds	r0, #2
 80250aa:	1a80      	subs	r0, r0, r2
 80250ac:	9b06      	ldr	r3, [sp, #24]
 80250ae:	9907      	ldr	r1, [sp, #28]
 80250b0:	fb93 f3f5 	sdiv	r3, r3, r5
 80250b4:	fb91 f1f5 	sdiv	r1, r1, r5
 80250b8:	b29b      	uxth	r3, r3
 80250ba:	3102      	adds	r1, #2
 80250bc:	1ac9      	subs	r1, r1, r3
 80250be:	3a01      	subs	r2, #1
 80250c0:	3b01      	subs	r3, #1
 80250c2:	80a0      	strh	r0, [r4, #4]
 80250c4:	4620      	mov	r0, r4
 80250c6:	8022      	strh	r2, [r4, #0]
 80250c8:	8063      	strh	r3, [r4, #2]
 80250ca:	80e1      	strh	r1, [r4, #6]
 80250cc:	b009      	add	sp, #36	; 0x24
 80250ce:	bd30      	pop	{r4, r5, pc}

080250d0 <_ZNK8touchgfx6Circle14getMinimalRectEv>:
 80250d0:	b510      	push	{r4, lr}
 80250d2:	e9d1 230e 	ldrd	r2, r3, [r1, #56]	; 0x38
 80250d6:	4604      	mov	r4, r0
 80250d8:	f7ff ffc4 	bl	8025064 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 80250dc:	4620      	mov	r0, r4
 80250de:	bd10      	pop	{r4, pc}

080250e0 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>:
 80250e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80250e2:	e9d1 540e 	ldrd	r5, r4, [r1, #56]	; 0x38
 80250e6:	4606      	mov	r6, r0
 80250e8:	f891 0044 	ldrb.w	r0, [r1, #68]	; 0x44
 80250ec:	6813      	ldr	r3, [r2, #0]
 80250ee:	42a5      	cmp	r5, r4
 80250f0:	ea4f 1040 	mov.w	r0, r0, lsl #5
 80250f4:	da2b      	bge.n	802514e <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x6e>
 80250f6:	42a3      	cmp	r3, r4
 80250f8:	dd14      	ble.n	8025124 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x44>
 80250fa:	b168      	cbz	r0, 8025118 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 80250fc:	4267      	negs	r7, r4
 80250fe:	fb97 f2f0 	sdiv	r2, r7, r0
 8025102:	fb00 7212 	mls	r2, r0, r2, r7
 8025106:	1a82      	subs	r2, r0, r2
 8025108:	fb92 f7f0 	sdiv	r7, r2, r0
 802510c:	fb00 2017 	mls	r0, r0, r7, r2
 8025110:	1a24      	subs	r4, r4, r0
 8025112:	42ac      	cmp	r4, r5
 8025114:	bfb8      	it	lt
 8025116:	462c      	movlt	r4, r5
 8025118:	4630      	mov	r0, r6
 802511a:	4622      	mov	r2, r4
 802511c:	f7ff ffa2 	bl	8025064 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 8025120:	4630      	mov	r0, r6
 8025122:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8025124:	42ab      	cmp	r3, r5
 8025126:	dd0e      	ble.n	8025146 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 8025128:	b168      	cbz	r0, 8025146 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 802512a:	425f      	negs	r7, r3
 802512c:	fb97 f2f0 	sdiv	r2, r7, r0
 8025130:	fb00 7212 	mls	r2, r0, r2, r7
 8025134:	1a82      	subs	r2, r0, r2
 8025136:	fb92 f7f0 	sdiv	r7, r2, r0
 802513a:	fb00 2017 	mls	r0, r0, r7, r2
 802513e:	1a1b      	subs	r3, r3, r0
 8025140:	42ab      	cmp	r3, r5
 8025142:	bfb8      	it	lt
 8025144:	462b      	movlt	r3, r5
 8025146:	4622      	mov	r2, r4
 8025148:	461c      	mov	r4, r3
 802514a:	4613      	mov	r3, r2
 802514c:	e7e4      	b.n	8025118 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 802514e:	42a3      	cmp	r3, r4
 8025150:	da10      	bge.n	8025174 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x94>
 8025152:	b148      	cbz	r0, 8025168 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x88>
 8025154:	fb94 f2f0 	sdiv	r2, r4, r0
 8025158:	fb00 4212 	mls	r2, r0, r2, r4
 802515c:	1a82      	subs	r2, r0, r2
 802515e:	fb92 f7f0 	sdiv	r7, r2, r0
 8025162:	fb00 2017 	mls	r0, r0, r7, r2
 8025166:	4404      	add	r4, r0
 8025168:	42a5      	cmp	r5, r4
 802516a:	bfa8      	it	ge
 802516c:	4625      	movge	r5, r4
 802516e:	461c      	mov	r4, r3
 8025170:	462b      	mov	r3, r5
 8025172:	e7d1      	b.n	8025118 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8025174:	42ab      	cmp	r3, r5
 8025176:	dacf      	bge.n	8025118 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8025178:	2800      	cmp	r0, #0
 802517a:	d0cd      	beq.n	8025118 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 802517c:	fb93 f2f0 	sdiv	r2, r3, r0
 8025180:	fb00 3212 	mls	r2, r0, r2, r3
 8025184:	1a82      	subs	r2, r0, r2
 8025186:	fb92 f7f0 	sdiv	r7, r2, r0
 802518a:	fb00 2017 	mls	r0, r0, r7, r2
 802518e:	4403      	add	r3, r0
 8025190:	42ab      	cmp	r3, r5
 8025192:	bfa8      	it	ge
 8025194:	462b      	movge	r3, r5
 8025196:	e7bf      	b.n	8025118 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>

08025198 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
 8025198:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802519c:	e9d0 560e 	ldrd	r5, r6, [r0, #56]	; 0x38
 80251a0:	42ae      	cmp	r6, r5
 80251a2:	bfa2      	ittt	ge
 80251a4:	4633      	movge	r3, r6
 80251a6:	462e      	movge	r6, r5
 80251a8:	461d      	movge	r5, r3
 80251aa:	1bab      	subs	r3, r5, r6
 80251ac:	468b      	mov	fp, r1
 80251ae:	6c01      	ldr	r1, [r0, #64]	; 0x40
 80251b0:	f9b0 902c 	ldrsh.w	r9, [r0, #44]	; 0x2c
 80251b4:	f9b0 a030 	ldrsh.w	sl, [r0, #48]	; 0x30
 80251b8:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 80251bc:	f04f 0220 	mov.w	r2, #32
 80251c0:	b0ab      	sub	sp, #172	; 0xac
 80251c2:	4604      	mov	r4, r0
 80251c4:	bfa4      	itt	ge
 80251c6:	f44f 5534 	movge.w	r5, #11520	; 0x2d00
 80251ca:	2600      	movge	r6, #0
 80251cc:	fb99 f9f2 	sdiv	r9, r9, r2
 80251d0:	fb9a faf2 	sdiv	sl, sl, r2
 80251d4:	6b43      	ldr	r3, [r0, #52]	; 0x34
 80251d6:	2900      	cmp	r1, #0
 80251d8:	f000 80f5 	beq.w	80253c6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x22e>
 80251dc:	f9bb 0000 	ldrsh.w	r0, [fp]
 80251e0:	f9bb 2002 	ldrsh.w	r2, [fp, #2]
 80251e4:	eba9 0700 	sub.w	r7, r9, r0
 80251e8:	ea87 7ce7 	eor.w	ip, r7, r7, asr #31
 80251ec:	ebac 7ce7 	sub.w	ip, ip, r7, asr #31
 80251f0:	f8bb 7004 	ldrh.w	r7, [fp, #4]
 80251f4:	ebaa 0802 	sub.w	r8, sl, r2
 80251f8:	4407      	add	r7, r0
 80251fa:	ea88 70e8 	eor.w	r0, r8, r8, asr #31
 80251fe:	eba0 70e8 	sub.w	r0, r0, r8, asr #31
 8025202:	f8bb 8006 	ldrh.w	r8, [fp, #6]
 8025206:	b23f      	sxth	r7, r7
 8025208:	4490      	add	r8, r2
 802520a:	eba9 0707 	sub.w	r7, r9, r7
 802520e:	fa0f f888 	sxth.w	r8, r8
 8025212:	ebaa 0808 	sub.w	r8, sl, r8
 8025216:	2f00      	cmp	r7, #0
 8025218:	bfb8      	it	lt
 802521a:	427f      	neglt	r7, r7
 802521c:	f1b8 0f00 	cmp.w	r8, #0
 8025220:	bfb8      	it	lt
 8025222:	f1c8 0800 	rsblt	r8, r8, #0
 8025226:	45bc      	cmp	ip, r7
 8025228:	bfcc      	ite	gt
 802522a:	f10c 0701 	addgt.w	r7, ip, #1
 802522e:	3701      	addle	r7, #1
 8025230:	4540      	cmp	r0, r8
 8025232:	bfc8      	it	gt
 8025234:	f100 0801 	addgt.w	r8, r0, #1
 8025238:	f894 0044 	ldrb.w	r0, [r4, #68]	; 0x44
 802523c:	f100 0001 	add.w	r0, r0, #1
 8025240:	ea4f 0060 	mov.w	r0, r0, asr #1
 8025244:	f04f 0202 	mov.w	r2, #2
 8025248:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 802524c:	fb91 f1f2 	sdiv	r1, r1, r2
 8025250:	eba3 0301 	sub.w	r3, r3, r1
 8025254:	bfd8      	it	le
 8025256:	f108 0801 	addle.w	r8, r8, #1
 802525a:	9201      	str	r2, [sp, #4]
 802525c:	930d      	str	r3, [sp, #52]	; 0x34
 802525e:	f7ea fcc9 	bl	800fbf4 <_ZN8touchgfx7CWRUtil4sineEi>
 8025262:	a92a      	add	r1, sp, #168	; 0xa8
 8025264:	fb08 f808 	mul.w	r8, r8, r8
 8025268:	f841 0d70 	str.w	r0, [r1, #-112]!
 802526c:	a80d      	add	r0, sp, #52	; 0x34
 802526e:	f7ea fba9 	bl	800f9c4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8025272:	fb07 8707 	mla	r7, r7, r7, r8
 8025276:	f04f 0c20 	mov.w	ip, #32
 802527a:	fb90 f0fc 	sdiv	r0, r0, ip
 802527e:	4340      	muls	r0, r0
 8025280:	4287      	cmp	r7, r0
 8025282:	9a01      	ldr	r2, [sp, #4]
 8025284:	da04      	bge.n	8025290 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf8>
 8025286:	2401      	movs	r4, #1
 8025288:	4620      	mov	r0, r4
 802528a:	b02b      	add	sp, #172	; 0xac
 802528c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025290:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8025292:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8025294:	fb91 f3f2 	sdiv	r3, r1, r2
 8025298:	4403      	add	r3, r0
 802529a:	fb93 f3fc 	sdiv	r3, r3, ip
 802529e:	f9bb 1000 	ldrsh.w	r1, [fp]
 80252a2:	f8bb 2004 	ldrh.w	r2, [fp, #4]
 80252a6:	440a      	add	r2, r1
 80252a8:	b212      	sxth	r2, r2
 80252aa:	454a      	cmp	r2, r9
 80252ac:	bfa8      	it	ge
 80252ae:	464a      	movge	r2, r9
 80252b0:	428a      	cmp	r2, r1
 80252b2:	bfac      	ite	ge
 80252b4:	eba9 0902 	subge.w	r9, r9, r2
 80252b8:	eba9 0901 	sublt.w	r9, r9, r1
 80252bc:	f8bb 2006 	ldrh.w	r2, [fp, #6]
 80252c0:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 80252c4:	440a      	add	r2, r1
 80252c6:	b212      	sxth	r2, r2
 80252c8:	4552      	cmp	r2, sl
 80252ca:	bfa8      	it	ge
 80252cc:	4652      	movge	r2, sl
 80252ce:	428a      	cmp	r2, r1
 80252d0:	bfac      	ite	ge
 80252d2:	ebaa 0a02 	subge.w	sl, sl, r2
 80252d6:	ebaa 0a01 	sublt.w	sl, sl, r1
 80252da:	3301      	adds	r3, #1
 80252dc:	fb0a fa0a 	mul.w	sl, sl, sl
 80252e0:	fb09 a909 	mla	r9, r9, r9, sl
 80252e4:	435b      	muls	r3, r3
 80252e6:	4599      	cmp	r9, r3
 80252e8:	dccd      	bgt.n	8025286 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xee>
 80252ea:	465a      	mov	r2, fp
 80252ec:	4621      	mov	r1, r4
 80252ee:	a80e      	add	r0, sp, #56	; 0x38
 80252f0:	f7ff faae 	bl	8024850 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 80252f4:	6b62      	ldr	r2, [r4, #52]	; 0x34
 80252f6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80252f8:	9209      	str	r2, [sp, #36]	; 0x24
 80252fa:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 80252fe:	930a      	str	r3, [sp, #40]	; 0x28
 8025300:	dd07      	ble.n	8025312 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x17a>
 8025302:	2102      	movs	r1, #2
 8025304:	fb93 f3f1 	sdiv	r3, r3, r1
 8025308:	4413      	add	r3, r2
 802530a:	930a      	str	r3, [sp, #40]	; 0x28
 802530c:	fb93 f3f1 	sdiv	r3, r3, r1
 8025310:	9309      	str	r3, [sp, #36]	; 0x24
 8025312:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8025316:	4630      	mov	r0, r6
 8025318:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 802531c:	930b      	str	r3, [sp, #44]	; 0x2c
 802531e:	f894 7044 	ldrb.w	r7, [r4, #68]	; 0x44
 8025322:	f7ea fc87 	bl	800fc34 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8025326:	f10d 09a8 	add.w	r9, sp, #168	; 0xa8
 802532a:	f04f 0a02 	mov.w	sl, #2
 802532e:	f849 0d74 	str.w	r0, [r9, #-116]!
 8025332:	a80b      	add	r0, sp, #44	; 0x2c
 8025334:	4649      	mov	r1, r9
 8025336:	f7ea fb45 	bl	800f9c4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802533a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 802533c:	fb90 f0fa 	sdiv	r0, r0, sl
 8025340:	eb00 0b03 	add.w	fp, r0, r3
 8025344:	4630      	mov	r0, r6
 8025346:	f7ff fcc7 	bl	8024cd8 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802534a:	f10d 08a8 	add.w	r8, sp, #168	; 0xa8
 802534e:	017f      	lsls	r7, r7, #5
 8025350:	f848 0d78 	str.w	r0, [r8, #-120]!
 8025354:	a80b      	add	r0, sp, #44	; 0x2c
 8025356:	4641      	mov	r1, r8
 8025358:	f7ea fb34 	bl	800f9c4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802535c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 802535e:	fb90 f0fa 	sdiv	r0, r0, sl
 8025362:	4659      	mov	r1, fp
 8025364:	1a12      	subs	r2, r2, r0
 8025366:	a80e      	add	r0, sp, #56	; 0x38
 8025368:	f7ff fbf2 	bl	8024b50 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 802536c:	f106 0a20 	add.w	sl, r6, #32
 8025370:	bb67      	cbnz	r7, 80253cc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x234>
 8025372:	46b3      	mov	fp, r6
 8025374:	45aa      	cmp	sl, r5
 8025376:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8025378:	dc33      	bgt.n	80253e2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x24a>
 802537a:	9909      	ldr	r1, [sp, #36]	; 0x24
 802537c:	4650      	mov	r0, sl
 802537e:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 8025382:	920b      	str	r2, [sp, #44]	; 0x2c
 8025384:	f7ea fc56 	bl	800fc34 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8025388:	4641      	mov	r1, r8
 802538a:	900c      	str	r0, [sp, #48]	; 0x30
 802538c:	a80b      	add	r0, sp, #44	; 0x2c
 802538e:	f7ea fb19 	bl	800f9c4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8025392:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8025394:	2302      	movs	r3, #2
 8025396:	fb90 f0f3 	sdiv	r0, r0, r3
 802539a:	eb00 0b02 	add.w	fp, r0, r2
 802539e:	4650      	mov	r0, sl
 80253a0:	f7ff fc9a 	bl	8024cd8 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80253a4:	4649      	mov	r1, r9
 80253a6:	900d      	str	r0, [sp, #52]	; 0x34
 80253a8:	a80b      	add	r0, sp, #44	; 0x2c
 80253aa:	f7ea fb0b 	bl	800f9c4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80253ae:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80253b0:	2302      	movs	r3, #2
 80253b2:	4659      	mov	r1, fp
 80253b4:	fb90 f0f3 	sdiv	r0, r0, r3
 80253b8:	1a12      	subs	r2, r2, r0
 80253ba:	a80e      	add	r0, sp, #56	; 0x38
 80253bc:	46d3      	mov	fp, sl
 80253be:	f7ff fc14 	bl	8024bea <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80253c2:	44ba      	add	sl, r7
 80253c4:	e7d6      	b.n	8025374 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1dc>
 80253c6:	fb93 f3f2 	sdiv	r3, r3, r2
 80253ca:	e768      	b.n	802529e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x106>
 80253cc:	fb9a f2f7 	sdiv	r2, sl, r7
 80253d0:	fb07 a212 	mls	r2, r7, r2, sl
 80253d4:	1aba      	subs	r2, r7, r2
 80253d6:	fb92 f1f7 	sdiv	r1, r2, r7
 80253da:	fb07 2211 	mls	r2, r7, r1, r2
 80253de:	4492      	add	sl, r2
 80253e0:	e7c7      	b.n	8025372 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1da>
 80253e2:	45ab      	cmp	fp, r5
 80253e4:	da23      	bge.n	802542e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x296>
 80253e6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80253e8:	4628      	mov	r0, r5
 80253ea:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 80253ee:	920b      	str	r2, [sp, #44]	; 0x2c
 80253f0:	f7ea fc20 	bl	800fc34 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80253f4:	4641      	mov	r1, r8
 80253f6:	900c      	str	r0, [sp, #48]	; 0x30
 80253f8:	a80b      	add	r0, sp, #44	; 0x2c
 80253fa:	f7ea fae3 	bl	800f9c4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80253fe:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8025400:	f04f 0a02 	mov.w	sl, #2
 8025404:	fb90 f0fa 	sdiv	r0, r0, sl
 8025408:	4403      	add	r3, r0
 802540a:	4628      	mov	r0, r5
 802540c:	9301      	str	r3, [sp, #4]
 802540e:	f7ff fc63 	bl	8024cd8 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8025412:	4649      	mov	r1, r9
 8025414:	900d      	str	r0, [sp, #52]	; 0x34
 8025416:	a80b      	add	r0, sp, #44	; 0x2c
 8025418:	f7ea fad4 	bl	800f9c4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802541c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 802541e:	9b01      	ldr	r3, [sp, #4]
 8025420:	fb90 f0fa 	sdiv	r0, r0, sl
 8025424:	4619      	mov	r1, r3
 8025426:	1a12      	subs	r2, r2, r0
 8025428:	a80e      	add	r0, sp, #56	; 0x38
 802542a:	f7ff fbde 	bl	8024bea <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802542e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8025430:	b99b      	cbnz	r3, 802545a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c2>
 8025432:	1bad      	subs	r5, r5, r6
 8025434:	f5b5 5f34 	cmp.w	r5, #11520	; 0x2d00
 8025438:	da04      	bge.n	8025444 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 802543a:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	; 0x2c
 802543e:	a80e      	add	r0, sp, #56	; 0x38
 8025440:	f7ff fbd3 	bl	8024bea <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8025444:	21ff      	movs	r1, #255	; 0xff
 8025446:	a80e      	add	r0, sp, #56	; 0x38
 8025448:	f7ff fabe 	bl	80249c8 <_ZN8touchgfx6Canvas6renderEh>
 802544c:	4604      	mov	r4, r0
 802544e:	4b8a      	ldr	r3, [pc, #552]	; (8025678 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4e0>)
 8025450:	930e      	str	r3, [sp, #56]	; 0x38
 8025452:	a816      	add	r0, sp, #88	; 0x58
 8025454:	f7eb ff22 	bl	801129c <_ZN8touchgfx7OutlineD1Ev>
 8025458:	e716      	b.n	8025288 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf0>
 802545a:	e9dd 2317 	ldrd	r2, r3, [sp, #92]	; 0x5c
 802545e:	429a      	cmp	r2, r3
 8025460:	f0c0 8107 	bcc.w	8025672 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4da>
 8025464:	1bab      	subs	r3, r5, r6
 8025466:	f894 a045 	ldrb.w	sl, [r4, #69]	; 0x45
 802546a:	9301      	str	r3, [sp, #4]
 802546c:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8025470:	ea4f 1a4a 	mov.w	sl, sl, lsl #5
 8025474:	da43      	bge.n	80254fe <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 8025476:	4628      	mov	r0, r5
 8025478:	f7ea fbdc 	bl	800fc34 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802547c:	4649      	mov	r1, r9
 802547e:	900d      	str	r0, [sp, #52]	; 0x34
 8025480:	a809      	add	r0, sp, #36	; 0x24
 8025482:	f7ea fa9f 	bl	800f9c4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8025486:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8025488:	18c3      	adds	r3, r0, r3
 802548a:	4628      	mov	r0, r5
 802548c:	9303      	str	r3, [sp, #12]
 802548e:	f7ff fc23 	bl	8024cd8 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8025492:	4649      	mov	r1, r9
 8025494:	900d      	str	r0, [sp, #52]	; 0x34
 8025496:	a809      	add	r0, sp, #36	; 0x24
 8025498:	f7ea fa94 	bl	800f9c4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802549c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 802549e:	f505 52b4 	add.w	r2, r5, #5760	; 0x1680
 80254a2:	1a1b      	subs	r3, r3, r0
 80254a4:	9302      	str	r3, [sp, #8]
 80254a6:	9204      	str	r2, [sp, #16]
 80254a8:	eb0a 0305 	add.w	r3, sl, r5
 80254ac:	9a04      	ldr	r2, [sp, #16]
 80254ae:	4293      	cmp	r3, r2
 80254b0:	da25      	bge.n	80254fe <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 80254b2:	4618      	mov	r0, r3
 80254b4:	9306      	str	r3, [sp, #24]
 80254b6:	f7ea fbbd 	bl	800fc34 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80254ba:	4649      	mov	r1, r9
 80254bc:	900d      	str	r0, [sp, #52]	; 0x34
 80254be:	a80a      	add	r0, sp, #40	; 0x28
 80254c0:	f7ea fa80 	bl	800f9c4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80254c4:	9b03      	ldr	r3, [sp, #12]
 80254c6:	2202      	movs	r2, #2
 80254c8:	fb90 f0f2 	sdiv	r0, r0, r2
 80254cc:	18c3      	adds	r3, r0, r3
 80254ce:	9305      	str	r3, [sp, #20]
 80254d0:	9b06      	ldr	r3, [sp, #24]
 80254d2:	9207      	str	r2, [sp, #28]
 80254d4:	4618      	mov	r0, r3
 80254d6:	f7ff fbff 	bl	8024cd8 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80254da:	a92a      	add	r1, sp, #168	; 0xa8
 80254dc:	f841 0d78 	str.w	r0, [r1, #-120]!
 80254e0:	a80a      	add	r0, sp, #40	; 0x28
 80254e2:	f7ea fa6f 	bl	800f9c4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80254e6:	9b02      	ldr	r3, [sp, #8]
 80254e8:	9a07      	ldr	r2, [sp, #28]
 80254ea:	9905      	ldr	r1, [sp, #20]
 80254ec:	fb90 f2f2 	sdiv	r2, r0, r2
 80254f0:	a80e      	add	r0, sp, #56	; 0x38
 80254f2:	1a9a      	subs	r2, r3, r2
 80254f4:	f7ff fb79 	bl	8024bea <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80254f8:	9b06      	ldr	r3, [sp, #24]
 80254fa:	4453      	add	r3, sl
 80254fc:	e7d6      	b.n	80254ac <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x314>
 80254fe:	45ab      	cmp	fp, r5
 8025500:	da25      	bge.n	802554e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3b6>
 8025502:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8025506:	4628      	mov	r0, r5
 8025508:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 802550c:	930b      	str	r3, [sp, #44]	; 0x2c
 802550e:	f7ea fb91 	bl	800fc34 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8025512:	4641      	mov	r1, r8
 8025514:	900c      	str	r0, [sp, #48]	; 0x30
 8025516:	a80b      	add	r0, sp, #44	; 0x2c
 8025518:	f7ea fa54 	bl	800f9c4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802551c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 802551e:	2202      	movs	r2, #2
 8025520:	fb90 f0f2 	sdiv	r0, r0, r2
 8025524:	eb00 0903 	add.w	r9, r0, r3
 8025528:	4628      	mov	r0, r5
 802552a:	9202      	str	r2, [sp, #8]
 802552c:	f7ff fbd4 	bl	8024cd8 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8025530:	a92a      	add	r1, sp, #168	; 0xa8
 8025532:	f841 0d74 	str.w	r0, [r1, #-116]!
 8025536:	a80b      	add	r0, sp, #44	; 0x2c
 8025538:	f7ea fa44 	bl	800f9c4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802553c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 802553e:	9a02      	ldr	r2, [sp, #8]
 8025540:	fb90 f2f2 	sdiv	r2, r0, r2
 8025544:	4649      	mov	r1, r9
 8025546:	1a9a      	subs	r2, r3, r2
 8025548:	a80e      	add	r0, sp, #56	; 0x38
 802554a:	f7ff fb4e 	bl	8024bea <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802554e:	46d9      	mov	r9, fp
 8025550:	2502      	movs	r5, #2
 8025552:	45b1      	cmp	r9, r6
 8025554:	db25      	blt.n	80255a2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x40a>
 8025556:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 802555a:	4648      	mov	r0, r9
 802555c:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8025560:	930b      	str	r3, [sp, #44]	; 0x2c
 8025562:	f7ea fb67 	bl	800fc34 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8025566:	4641      	mov	r1, r8
 8025568:	900c      	str	r0, [sp, #48]	; 0x30
 802556a:	a80b      	add	r0, sp, #44	; 0x2c
 802556c:	f7ea fa2a 	bl	800f9c4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8025570:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8025572:	fb90 f0f5 	sdiv	r0, r0, r5
 8025576:	eb00 0b03 	add.w	fp, r0, r3
 802557a:	4648      	mov	r0, r9
 802557c:	f7ff fbac 	bl	8024cd8 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8025580:	a90d      	add	r1, sp, #52	; 0x34
 8025582:	900d      	str	r0, [sp, #52]	; 0x34
 8025584:	a80b      	add	r0, sp, #44	; 0x2c
 8025586:	f7ea fa1d 	bl	800f9c4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802558a:	6b22      	ldr	r2, [r4, #48]	; 0x30
 802558c:	fb90 f0f5 	sdiv	r0, r0, r5
 8025590:	4659      	mov	r1, fp
 8025592:	1a12      	subs	r2, r2, r0
 8025594:	a80e      	add	r0, sp, #56	; 0x38
 8025596:	46cb      	mov	fp, r9
 8025598:	f7ff fb27 	bl	8024bea <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802559c:	eba9 0907 	sub.w	r9, r9, r7
 80255a0:	e7d7      	b.n	8025552 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3ba>
 80255a2:	455e      	cmp	r6, fp
 80255a4:	da22      	bge.n	80255ec <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x454>
 80255a6:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80255aa:	4630      	mov	r0, r6
 80255ac:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 80255b0:	930b      	str	r3, [sp, #44]	; 0x2c
 80255b2:	f7ea fb3f 	bl	800fc34 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80255b6:	4641      	mov	r1, r8
 80255b8:	900c      	str	r0, [sp, #48]	; 0x30
 80255ba:	a80b      	add	r0, sp, #44	; 0x2c
 80255bc:	f7ea fa02 	bl	800f9c4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80255c0:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 80255c2:	2502      	movs	r5, #2
 80255c4:	fb90 f0f5 	sdiv	r0, r0, r5
 80255c8:	4407      	add	r7, r0
 80255ca:	4630      	mov	r0, r6
 80255cc:	f7ff fb84 	bl	8024cd8 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80255d0:	a92a      	add	r1, sp, #168	; 0xa8
 80255d2:	f841 0d74 	str.w	r0, [r1, #-116]!
 80255d6:	a80b      	add	r0, sp, #44	; 0x2c
 80255d8:	f7ea f9f4 	bl	800f9c4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80255dc:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80255de:	fb90 f0f5 	sdiv	r0, r0, r5
 80255e2:	4639      	mov	r1, r7
 80255e4:	1a12      	subs	r2, r2, r0
 80255e6:	a80e      	add	r0, sp, #56	; 0x38
 80255e8:	f7ff faff 	bl	8024bea <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80255ec:	9b01      	ldr	r3, [sp, #4]
 80255ee:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 80255f2:	f6bf af27 	bge.w	8025444 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 80255f6:	4630      	mov	r0, r6
 80255f8:	f7ea fb1c 	bl	800fc34 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80255fc:	ad2a      	add	r5, sp, #168	; 0xa8
 80255fe:	f04f 0b02 	mov.w	fp, #2
 8025602:	f845 0d74 	str.w	r0, [r5, #-116]!
 8025606:	a809      	add	r0, sp, #36	; 0x24
 8025608:	4629      	mov	r1, r5
 802560a:	f7ea f9db 	bl	800f9c4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802560e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8025610:	eb00 0903 	add.w	r9, r0, r3
 8025614:	4630      	mov	r0, r6
 8025616:	f7ff fb5f 	bl	8024cd8 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802561a:	4629      	mov	r1, r5
 802561c:	900d      	str	r0, [sp, #52]	; 0x34
 802561e:	a809      	add	r0, sp, #36	; 0x24
 8025620:	f7ea f9d0 	bl	800f9c4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8025624:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8025626:	f5a6 54b4 	sub.w	r4, r6, #5760	; 0x1680
 802562a:	eba3 0800 	sub.w	r8, r3, r0
 802562e:	4454      	add	r4, sl
 8025630:	42a6      	cmp	r6, r4
 8025632:	f77f af07 	ble.w	8025444 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8025636:	4620      	mov	r0, r4
 8025638:	f7ea fafc 	bl	800fc34 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802563c:	4629      	mov	r1, r5
 802563e:	900d      	str	r0, [sp, #52]	; 0x34
 8025640:	a80a      	add	r0, sp, #40	; 0x28
 8025642:	f7ea f9bf 	bl	800f9c4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8025646:	fb90 f0fb 	sdiv	r0, r0, fp
 802564a:	eb00 0709 	add.w	r7, r0, r9
 802564e:	4620      	mov	r0, r4
 8025650:	f7ff fb42 	bl	8024cd8 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8025654:	a90c      	add	r1, sp, #48	; 0x30
 8025656:	900c      	str	r0, [sp, #48]	; 0x30
 8025658:	a80a      	add	r0, sp, #40	; 0x28
 802565a:	f7ea f9b3 	bl	800f9c4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802565e:	4639      	mov	r1, r7
 8025660:	fb90 f2fb 	sdiv	r2, r0, fp
 8025664:	a80e      	add	r0, sp, #56	; 0x38
 8025666:	eba8 0202 	sub.w	r2, r8, r2
 802566a:	f7ff fabe 	bl	8024bea <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802566e:	4454      	add	r4, sl
 8025670:	e7de      	b.n	8025630 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x498>
 8025672:	2400      	movs	r4, #0
 8025674:	e6eb      	b.n	802544e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2b6>
 8025676:	bf00      	nop
 8025678:	0802b7f8 	.word	0x0802b7f8

0802567c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 802567c:	b570      	push	{r4, r5, r6, lr}
 802567e:	790b      	ldrb	r3, [r1, #4]
 8025680:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 8025684:	2b00      	cmp	r3, #0
 8025686:	bf0c      	ite	eq
 8025688:	2301      	moveq	r3, #1
 802568a:	2300      	movne	r3, #0
 802568c:	4604      	mov	r4, r0
 802568e:	460e      	mov	r6, r1
 8025690:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8025694:	d109      	bne.n	80256aa <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 8025696:	b14d      	cbz	r5, 80256ac <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 8025698:	7933      	ldrb	r3, [r6, #4]
 802569a:	2b01      	cmp	r3, #1
 802569c:	d10c      	bne.n	80256b8 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 802569e:	6823      	ldr	r3, [r4, #0]
 80256a0:	4620      	mov	r0, r4
 80256a2:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80256a4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80256a8:	4718      	bx	r3
 80256aa:	b12d      	cbz	r5, 80256b8 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 80256ac:	6823      	ldr	r3, [r4, #0]
 80256ae:	4620      	mov	r0, r4
 80256b0:	695b      	ldr	r3, [r3, #20]
 80256b2:	4798      	blx	r3
 80256b4:	2d00      	cmp	r5, #0
 80256b6:	d1ef      	bne.n	8025698 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 80256b8:	bd70      	pop	{r4, r5, r6, pc}

080256ba <_ZN8touchgfx13TextureMapper21setRenderingAlgorithmENS0_18RenderingAlgorithmE>:
 80256ba:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 80256be:	4770      	bx	lr

080256c0 <_ZNK8touchgfx13TextureMapper21getRenderingAlgorithmEv>:
 80256c0:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
 80256c4:	4770      	bx	lr

080256c6 <_ZN8touchgfx13TextureMapper9setXAngleEf>:
 80256c6:	6802      	ldr	r2, [r0, #0]
 80256c8:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 80256cc:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 80256ce:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 80256d2:	4710      	bx	r2

080256d4 <_ZN8touchgfx13TextureMapper9setYAngleEf>:
 80256d4:	6802      	ldr	r2, [r0, #0]
 80256d6:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 80256da:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 80256dc:	eef0 0a40 	vmov.f32	s1, s0
 80256e0:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 80256e4:	4710      	bx	r2

080256e6 <_ZN8touchgfx13TextureMapper9setZAngleEf>:
 80256e6:	6802      	ldr	r2, [r0, #0]
 80256e8:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 80256ec:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 80256ee:	eeb0 1a40 	vmov.f32	s2, s0
 80256f2:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 80256f6:	4710      	bx	r2

080256f8 <_ZN8touchgfx13TextureMapper12updateXAngleEf>:
 80256f8:	6802      	ldr	r2, [r0, #0]
 80256fa:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 80256fe:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8025700:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8025704:	4710      	bx	r2

08025706 <_ZN8touchgfx13TextureMapper12updateYAngleEf>:
 8025706:	6802      	ldr	r2, [r0, #0]
 8025708:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 802570c:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 802570e:	eef0 0a40 	vmov.f32	s1, s0
 8025712:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8025716:	4710      	bx	r2

08025718 <_ZN8touchgfx13TextureMapper12updateZAngleEf>:
 8025718:	6802      	ldr	r2, [r0, #0]
 802571a:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 802571e:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8025720:	eeb0 1a40 	vmov.f32	s2, s0
 8025724:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8025728:	4710      	bx	r2

0802572a <_ZNK8touchgfx13TextureMapper9getXAngleEv>:
 802572a:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 802572e:	4770      	bx	lr

08025730 <_ZNK8touchgfx13TextureMapper9getYAngleEv>:
 8025730:	ed90 0a0e 	vldr	s0, [r0, #56]	; 0x38
 8025734:	4770      	bx	lr

08025736 <_ZNK8touchgfx13TextureMapper9getZAngleEv>:
 8025736:	ed90 0a0f 	vldr	s0, [r0, #60]	; 0x3c
 802573a:	4770      	bx	lr

0802573c <_ZNK8touchgfx13TextureMapper8getScaleEv>:
 802573c:	ed90 0a10 	vldr	s0, [r0, #64]	; 0x40
 8025740:	4770      	bx	lr

08025742 <_ZNK8touchgfx13TextureMapper9getOrigoXEv>:
 8025742:	ed90 0a11 	vldr	s0, [r0, #68]	; 0x44
 8025746:	4770      	bx	lr

08025748 <_ZNK8touchgfx13TextureMapper9getOrigoYEv>:
 8025748:	ed90 0a12 	vldr	s0, [r0, #72]	; 0x48
 802574c:	4770      	bx	lr

0802574e <_ZNK8touchgfx13TextureMapper9getOrigoZEv>:
 802574e:	ed90 0a13 	vldr	s0, [r0, #76]	; 0x4c
 8025752:	4770      	bx	lr

08025754 <_ZNK8touchgfx13TextureMapper10getCameraXEv>:
 8025754:	ed90 0a14 	vldr	s0, [r0, #80]	; 0x50
 8025758:	4770      	bx	lr

0802575a <_ZNK8touchgfx13TextureMapper10getCameraYEv>:
 802575a:	ed90 0a15 	vldr	s0, [r0, #84]	; 0x54
 802575e:	4770      	bx	lr

08025760 <_ZNK8touchgfx13TextureMapper17getCameraDistanceEv>:
 8025760:	ed90 0a16 	vldr	s0, [r0, #88]	; 0x58
 8025764:	4770      	bx	lr

08025766 <_ZN8touchgfx13TextureMapper17setBitmapPositionEii>:
 8025766:	ee07 2a90 	vmov	s15, r2
 802576a:	6803      	ldr	r3, [r0, #0]
 802576c:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 8025770:	ee07 1a90 	vmov	s15, r1
 8025774:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8025778:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 802577c:	4718      	bx	r3

0802577e <_ZNK8touchgfx13TextureMapper18getBitmapPositionXEv>:
 802577e:	ed90 0a0b 	vldr	s0, [r0, #44]	; 0x2c
 8025782:	4770      	bx	lr

08025784 <_ZNK8touchgfx13TextureMapper18getBitmapPositionYEv>:
 8025784:	ed90 0a0c 	vldr	s0, [r0, #48]	; 0x30
 8025788:	4770      	bx	lr

0802578a <_ZNK8touchgfx13TextureMapper5getX0Ev>:
 802578a:	ed90 0a17 	vldr	s0, [r0, #92]	; 0x5c
 802578e:	4770      	bx	lr

08025790 <_ZNK8touchgfx13TextureMapper5getX1Ev>:
 8025790:	ed90 0a1a 	vldr	s0, [r0, #104]	; 0x68
 8025794:	4770      	bx	lr

08025796 <_ZNK8touchgfx13TextureMapper5getX2Ev>:
 8025796:	ed90 0a1d 	vldr	s0, [r0, #116]	; 0x74
 802579a:	4770      	bx	lr

0802579c <_ZNK8touchgfx13TextureMapper5getX3Ev>:
 802579c:	ed90 0a20 	vldr	s0, [r0, #128]	; 0x80
 80257a0:	4770      	bx	lr

080257a2 <_ZNK8touchgfx13TextureMapper5getY0Ev>:
 80257a2:	ed90 0a18 	vldr	s0, [r0, #96]	; 0x60
 80257a6:	4770      	bx	lr

080257a8 <_ZNK8touchgfx13TextureMapper5getY1Ev>:
 80257a8:	ed90 0a1b 	vldr	s0, [r0, #108]	; 0x6c
 80257ac:	4770      	bx	lr

080257ae <_ZNK8touchgfx13TextureMapper5getY2Ev>:
 80257ae:	ed90 0a1e 	vldr	s0, [r0, #120]	; 0x78
 80257b2:	4770      	bx	lr

080257b4 <_ZNK8touchgfx13TextureMapper5getY3Ev>:
 80257b4:	ed90 0a21 	vldr	s0, [r0, #132]	; 0x84
 80257b8:	4770      	bx	lr

080257ba <_ZNK8touchgfx13TextureMapper5getZ0Ev>:
 80257ba:	ed90 0a19 	vldr	s0, [r0, #100]	; 0x64
 80257be:	4770      	bx	lr

080257c0 <_ZNK8touchgfx13TextureMapper5getZ1Ev>:
 80257c0:	ed90 0a1c 	vldr	s0, [r0, #112]	; 0x70
 80257c4:	4770      	bx	lr

080257c6 <_ZNK8touchgfx13TextureMapper5getZ2Ev>:
 80257c6:	ed90 0a1f 	vldr	s0, [r0, #124]	; 0x7c
 80257ca:	4770      	bx	lr

080257cc <_ZNK8touchgfx13TextureMapper5getZ3Ev>:
 80257cc:	ed90 0a22 	vldr	s0, [r0, #136]	; 0x88
 80257d0:	4770      	bx	lr

080257d2 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>:
 80257d2:	b510      	push	{r4, lr}
 80257d4:	ed2d 8b04 	vpush	{d8-d9}
 80257d8:	6803      	ldr	r3, [r0, #0]
 80257da:	4604      	mov	r4, r0
 80257dc:	699b      	ldr	r3, [r3, #24]
 80257de:	eeb0 8a40 	vmov.f32	s16, s0
 80257e2:	eef0 8a60 	vmov.f32	s17, s1
 80257e6:	eeb0 9a41 	vmov.f32	s18, s2
 80257ea:	4798      	blx	r3
 80257ec:	6823      	ldr	r3, [r4, #0]
 80257ee:	4620      	mov	r0, r4
 80257f0:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80257f2:	eeb0 1a49 	vmov.f32	s2, s18
 80257f6:	eef0 0a68 	vmov.f32	s1, s17
 80257fa:	eeb0 0a48 	vmov.f32	s0, s16
 80257fe:	4798      	blx	r3
 8025800:	ecbd 8b04 	vpop	{d8-d9}
 8025804:	6823      	ldr	r3, [r4, #0]
 8025806:	4620      	mov	r0, r4
 8025808:	699b      	ldr	r3, [r3, #24]
 802580a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802580e:	4718      	bx	r3

08025810 <_ZN8touchgfx13TextureMapper11updateScaleEf>:
 8025810:	b510      	push	{r4, lr}
 8025812:	ed2d 8b02 	vpush	{d8}
 8025816:	6803      	ldr	r3, [r0, #0]
 8025818:	4604      	mov	r4, r0
 802581a:	699b      	ldr	r3, [r3, #24]
 802581c:	eeb0 8a40 	vmov.f32	s16, s0
 8025820:	4798      	blx	r3
 8025822:	6823      	ldr	r3, [r4, #0]
 8025824:	4620      	mov	r0, r4
 8025826:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 802582a:	eeb0 0a48 	vmov.f32	s0, s16
 802582e:	4798      	blx	r3
 8025830:	ecbd 8b02 	vpop	{d8}
 8025834:	6823      	ldr	r3, [r4, #0]
 8025836:	4620      	mov	r0, r4
 8025838:	699b      	ldr	r3, [r3, #24]
 802583a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802583e:	4718      	bx	r3

08025840 <_ZNK8touchgfx13TextureMapper12getSolidRectEv>:
 8025840:	2200      	movs	r2, #0
 8025842:	8002      	strh	r2, [r0, #0]
 8025844:	8042      	strh	r2, [r0, #2]
 8025846:	8082      	strh	r2, [r0, #4]
 8025848:	80c2      	strh	r2, [r0, #6]
 802584a:	4770      	bx	lr

0802584c <_ZN8touchgfx13TextureMapperD1Ev>:
 802584c:	4770      	bx	lr

0802584e <_ZN8touchgfx13TextureMapperD0Ev>:
 802584e:	b510      	push	{r4, lr}
 8025850:	2190      	movs	r1, #144	; 0x90
 8025852:	4604      	mov	r4, r0
 8025854:	f000 fe1b 	bl	802648e <_ZdlPvj>
 8025858:	4620      	mov	r0, r4
 802585a:	bd10      	pop	{r4, pc}

0802585c <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>:
 802585c:	b538      	push	{r3, r4, r5, lr}
 802585e:	2500      	movs	r5, #0
 8025860:	e9c0 5505 	strd	r5, r5, [r0, #20]
 8025864:	2301      	movs	r3, #1
 8025866:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
 802586a:	4b1f      	ldr	r3, [pc, #124]	; (80258e8 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x8c>)
 802586c:	8085      	strh	r5, [r0, #4]
 802586e:	80c5      	strh	r5, [r0, #6]
 8025870:	8105      	strh	r5, [r0, #8]
 8025872:	8145      	strh	r5, [r0, #10]
 8025874:	8185      	strh	r5, [r0, #12]
 8025876:	81c5      	strh	r5, [r0, #14]
 8025878:	8205      	strh	r5, [r0, #16]
 802587a:	8245      	strh	r5, [r0, #18]
 802587c:	61c5      	str	r5, [r0, #28]
 802587e:	8405      	strh	r5, [r0, #32]
 8025880:	8445      	strh	r5, [r0, #34]	; 0x22
 8025882:	f880 5024 	strb.w	r5, [r0, #36]	; 0x24
 8025886:	6003      	str	r3, [r0, #0]
 8025888:	880b      	ldrh	r3, [r1, #0]
 802588a:	84c3      	strh	r3, [r0, #38]	; 0x26
 802588c:	23ff      	movs	r3, #255	; 0xff
 802588e:	4604      	mov	r4, r0
 8025890:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8025894:	f7eb fb93 	bl	8010fbe <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8025898:	4b14      	ldr	r3, [pc, #80]	; (80258ec <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x90>)
 802589a:	6023      	str	r3, [r4, #0]
 802589c:	2300      	movs	r3, #0
 802589e:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 80258a2:	4913      	ldr	r1, [pc, #76]	; (80258f0 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x94>)
 80258a4:	62e3      	str	r3, [r4, #44]	; 0x2c
 80258a6:	6323      	str	r3, [r4, #48]	; 0x30
 80258a8:	6363      	str	r3, [r4, #52]	; 0x34
 80258aa:	63a3      	str	r3, [r4, #56]	; 0x38
 80258ac:	63e3      	str	r3, [r4, #60]	; 0x3c
 80258ae:	6463      	str	r3, [r4, #68]	; 0x44
 80258b0:	64a3      	str	r3, [r4, #72]	; 0x48
 80258b2:	6523      	str	r3, [r4, #80]	; 0x50
 80258b4:	6563      	str	r3, [r4, #84]	; 0x54
 80258b6:	65e3      	str	r3, [r4, #92]	; 0x5c
 80258b8:	6623      	str	r3, [r4, #96]	; 0x60
 80258ba:	66a3      	str	r3, [r4, #104]	; 0x68
 80258bc:	66e3      	str	r3, [r4, #108]	; 0x6c
 80258be:	6763      	str	r3, [r4, #116]	; 0x74
 80258c0:	67a3      	str	r3, [r4, #120]	; 0x78
 80258c2:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
 80258c6:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 80258ca:	230c      	movs	r3, #12
 80258cc:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 80258d0:	6422      	str	r2, [r4, #64]	; 0x40
 80258d2:	64e1      	str	r1, [r4, #76]	; 0x4c
 80258d4:	65a1      	str	r1, [r4, #88]	; 0x58
 80258d6:	6662      	str	r2, [r4, #100]	; 0x64
 80258d8:	6722      	str	r2, [r4, #112]	; 0x70
 80258da:	67e2      	str	r2, [r4, #124]	; 0x7c
 80258dc:	f8c4 2088 	str.w	r2, [r4, #136]	; 0x88
 80258e0:	f8a4 308c 	strh.w	r3, [r4, #140]	; 0x8c
 80258e4:	4620      	mov	r0, r4
 80258e6:	bd38      	pop	{r3, r4, r5, pc}
 80258e8:	0802b2a0 	.word	0x0802b2a0
 80258ec:	0802b884 	.word	0x0802b884
 80258f0:	447a0000 	.word	0x447a0000

080258f4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>:
 80258f4:	b570      	push	{r4, r5, r6, lr}
 80258f6:	ed2d 8b04 	vpush	{d8-d9}
 80258fa:	f5ad 7d50 	sub.w	sp, sp, #832	; 0x340
 80258fe:	add0      	add	r5, sp, #832	; 0x340
 8025900:	8cc3      	ldrh	r3, [r0, #38]	; 0x26
 8025902:	f825 3d40 	strh.w	r3, [r5, #-64]!
 8025906:	4604      	mov	r4, r0
 8025908:	4628      	mov	r0, r5
 802590a:	f7f1 fa7f 	bl	8016e0c <_ZNK8touchgfx6Bitmap8getWidthEv>
 802590e:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 8025910:	f8ad 3300 	strh.w	r3, [sp, #768]	; 0x300
 8025914:	4606      	mov	r6, r0
 8025916:	4628      	mov	r0, r5
 8025918:	f7f1 faac 	bl	8016e74 <_ZNK8touchgfx6Bitmap9getHeightEv>
 802591c:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8025920:	ed94 6a0b 	vldr	s12, [r4, #44]	; 0x2c
 8025924:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8025926:	ed94 9a11 	vldr	s18, [r4, #68]	; 0x44
 802592a:	9312      	str	r3, [sp, #72]	; 0x48
 802592c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8025930:	1c72      	adds	r2, r6, #1
 8025932:	3001      	adds	r0, #1
 8025934:	ee76 5ac7 	vsub.f32	s11, s13, s14
 8025938:	ee07 2a90 	vmov	s15, r2
 802593c:	ee06 0a90 	vmov	s13, r0
 8025940:	ee36 6a47 	vsub.f32	s12, s12, s14
 8025944:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8025948:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 802594c:	ee77 7a86 	vadd.f32	s15, s15, s12
 8025950:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8025954:	9316      	str	r3, [sp, #88]	; 0x58
 8025956:	931a      	str	r3, [sp, #104]	; 0x68
 8025958:	931e      	str	r3, [sp, #120]	; 0x78
 802595a:	2300      	movs	r3, #0
 802595c:	9320      	str	r3, [sp, #128]	; 0x80
 802595e:	9321      	str	r3, [sp, #132]	; 0x84
 8025960:	9322      	str	r3, [sp, #136]	; 0x88
 8025962:	9324      	str	r3, [sp, #144]	; 0x90
 8025964:	9325      	str	r3, [sp, #148]	; 0x94
 8025966:	9326      	str	r3, [sp, #152]	; 0x98
 8025968:	9328      	str	r3, [sp, #160]	; 0xa0
 802596a:	9329      	str	r3, [sp, #164]	; 0xa4
 802596c:	932a      	str	r3, [sp, #168]	; 0xa8
 802596e:	932c      	str	r3, [sp, #176]	; 0xb0
 8025970:	932d      	str	r3, [sp, #180]	; 0xb4
 8025972:	932e      	str	r3, [sp, #184]	; 0xb8
 8025974:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8025978:	edcd 5a11 	vstr	s11, [sp, #68]	; 0x44
 802597c:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 8025980:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 8025984:	edcd 5a15 	vstr	s11, [sp, #84]	; 0x54
 8025988:	ed8d 7a17 	vstr	s14, [sp, #92]	; 0x5c
 802598c:	edcd 7a18 	vstr	s15, [sp, #96]	; 0x60
 8025990:	edcd 6a19 	vstr	s13, [sp, #100]	; 0x64
 8025994:	ed8d 7a1b 	vstr	s14, [sp, #108]	; 0x6c
 8025998:	ed8d 6a1c 	vstr	s12, [sp, #112]	; 0x70
 802599c:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 80259a0:	ed8d 7a1f 	vstr	s14, [sp, #124]	; 0x7c
 80259a4:	a830      	add	r0, sp, #192	; 0xc0
 80259a6:	edd4 8a12 	vldr	s17, [r4, #72]	; 0x48
 80259aa:	ed94 8a13 	vldr	s16, [r4, #76]	; 0x4c
 80259ae:	f000 fc43 	bl	8026238 <_ZN8touchgfx9Matrix4x4C1Ev>
 80259b2:	eeb1 0a49 	vneg.f32	s0, s18
 80259b6:	a830      	add	r0, sp, #192	; 0xc0
 80259b8:	f000 fd12 	bl	80263e0 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 80259bc:	eeb1 0a68 	vneg.f32	s0, s17
 80259c0:	f000 fd1c 	bl	80263fc <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 80259c4:	eeb1 0a48 	vneg.f32	s0, s16
 80259c8:	f000 fd27 	bl	802641a <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 80259cc:	a840      	add	r0, sp, #256	; 0x100
 80259ce:	f000 fc33 	bl	8026238 <_ZN8touchgfx9Matrix4x4C1Ev>
 80259d2:	ed94 0a0d 	vldr	s0, [r4, #52]	; 0x34
 80259d6:	a840      	add	r0, sp, #256	; 0x100
 80259d8:	f000 fc86 	bl	80262e8 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>
 80259dc:	ed94 0a0e 	vldr	s0, [r4, #56]	; 0x38
 80259e0:	f000 fcac 	bl	802633c <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>
 80259e4:	ed94 0a0f 	vldr	s0, [r4, #60]	; 0x3c
 80259e8:	f000 fcd1 	bl	802638e <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>
 80259ec:	a850      	add	r0, sp, #320	; 0x140
 80259ee:	f000 fc23 	bl	8026238 <_ZN8touchgfx9Matrix4x4C1Ev>
 80259f2:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 80259f6:	a850      	add	r0, sp, #320	; 0x140
 80259f8:	f000 fd1e 	bl	8026438 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>
 80259fc:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8025a00:	f000 fd26 	bl	8026450 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>
 8025a04:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8025a08:	f000 fd2f 	bl	802646a <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>
 8025a0c:	a860      	add	r0, sp, #384	; 0x180
 8025a0e:	f000 fc13 	bl	8026238 <_ZN8touchgfx9Matrix4x4C1Ev>
 8025a12:	eeb0 0a49 	vmov.f32	s0, s18
 8025a16:	a860      	add	r0, sp, #384	; 0x180
 8025a18:	f000 fce2 	bl	80263e0 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8025a1c:	eeb0 0a68 	vmov.f32	s0, s17
 8025a20:	f000 fcec 	bl	80263fc <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8025a24:	eeb0 0a48 	vmov.f32	s0, s16
 8025a28:	f000 fcf7 	bl	802641a <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 8025a2c:	aa50      	add	r2, sp, #320	; 0x140
 8025a2e:	a960      	add	r1, sp, #384	; 0x180
 8025a30:	a8b0      	add	r0, sp, #704	; 0x2c0
 8025a32:	f000 fc1b 	bl	802626c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8025a36:	4628      	mov	r0, r5
 8025a38:	aa40      	add	r2, sp, #256	; 0x100
 8025a3a:	a9b0      	add	r1, sp, #704	; 0x2c0
 8025a3c:	f000 fc16 	bl	802626c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8025a40:	4629      	mov	r1, r5
 8025a42:	aa30      	add	r2, sp, #192	; 0xc0
 8025a44:	a870      	add	r0, sp, #448	; 0x1c0
 8025a46:	f000 fc11 	bl	802626c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8025a4a:	a880      	add	r0, sp, #512	; 0x200
 8025a4c:	f000 fbf4 	bl	8026238 <_ZN8touchgfx9Matrix4x4C1Ev>
 8025a50:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 8025a54:	a880      	add	r0, sp, #512	; 0x200
 8025a56:	eeb1 0a40 	vneg.f32	s0, s0
 8025a5a:	f000 fcc1 	bl	80263e0 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8025a5e:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 8025a62:	a880      	add	r0, sp, #512	; 0x200
 8025a64:	eeb1 0a40 	vneg.f32	s0, s0
 8025a68:	f000 fcc8 	bl	80263fc <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8025a6c:	a890      	add	r0, sp, #576	; 0x240
 8025a6e:	f000 fbe3 	bl	8026238 <_ZN8touchgfx9Matrix4x4C1Ev>
 8025a72:	ed94 0a16 	vldr	s0, [r4, #88]	; 0x58
 8025a76:	a890      	add	r0, sp, #576	; 0x240
 8025a78:	f000 fc26 	bl	80262c8 <_ZN8touchgfx9Matrix4x415setViewDistanceEf>
 8025a7c:	a8a0      	add	r0, sp, #640	; 0x280
 8025a7e:	f000 fbdb 	bl	8026238 <_ZN8touchgfx9Matrix4x4C1Ev>
 8025a82:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 8025a86:	a8a0      	add	r0, sp, #640	; 0x280
 8025a88:	f000 fcaa 	bl	80263e0 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8025a8c:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 8025a90:	f000 fcb4 	bl	80263fc <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8025a94:	aa90      	add	r2, sp, #576	; 0x240
 8025a96:	a9a0      	add	r1, sp, #640	; 0x280
 8025a98:	a8b0      	add	r0, sp, #704	; 0x2c0
 8025a9a:	f000 fbe7 	bl	802626c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8025a9e:	4628      	mov	r0, r5
 8025aa0:	aa80      	add	r2, sp, #512	; 0x200
 8025aa2:	a9b0      	add	r1, sp, #704	; 0x2c0
 8025aa4:	f000 fbe2 	bl	802626c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8025aa8:	4629      	mov	r1, r5
 8025aaa:	aa70      	add	r2, sp, #448	; 0x1c0
 8025aac:	4668      	mov	r0, sp
 8025aae:	466d      	mov	r5, sp
 8025ab0:	f000 fbdc 	bl	802626c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8025ab4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8025ab6:	ae70      	add	r6, sp, #448	; 0x1c0
 8025ab8:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8025aba:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8025abc:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8025abe:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8025ac0:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8025ac2:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8025ac6:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 8025aca:	2500      	movs	r5, #0
 8025acc:	0129      	lsls	r1, r5, #4
 8025ace:	ab20      	add	r3, sp, #128	; 0x80
 8025ad0:	185e      	adds	r6, r3, r1
 8025ad2:	ab10      	add	r3, sp, #64	; 0x40
 8025ad4:	4419      	add	r1, r3
 8025ad6:	a870      	add	r0, sp, #448	; 0x1c0
 8025ad8:	f000 fb7e 	bl	80261d8 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>
 8025adc:	3501      	adds	r5, #1
 8025ade:	2d04      	cmp	r5, #4
 8025ae0:	ed86 0a00 	vstr	s0, [r6]
 8025ae4:	edc6 0a01 	vstr	s1, [r6, #4]
 8025ae8:	ed86 1a02 	vstr	s2, [r6, #8]
 8025aec:	edc6 1a03 	vstr	s3, [r6, #12]
 8025af0:	d1ec      	bne.n	8025acc <_ZN8touchgfx13TextureMapper19applyTransformationEv+0x1d8>
 8025af2:	edd4 7a16 	vldr	s15, [r4, #88]	; 0x58
 8025af6:	eddd 6a20 	vldr	s13, [sp, #128]	; 0x80
 8025afa:	ed9d 7a22 	vldr	s14, [sp, #136]	; 0x88
 8025afe:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8025b02:	ed84 7a19 	vstr	s14, [r4, #100]	; 0x64
 8025b06:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8025b0a:	eddd 6a21 	vldr	s13, [sp, #132]	; 0x84
 8025b0e:	ed84 6a17 	vstr	s12, [r4, #92]	; 0x5c
 8025b12:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8025b16:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8025b1a:	eddd 6a24 	vldr	s13, [sp, #144]	; 0x90
 8025b1e:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8025b22:	ed84 6a18 	vstr	s12, [r4, #96]	; 0x60
 8025b26:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8025b2a:	ed84 7a1c 	vstr	s14, [r4, #112]	; 0x70
 8025b2e:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8025b32:	eddd 6a25 	vldr	s13, [sp, #148]	; 0x94
 8025b36:	ed84 6a1a 	vstr	s12, [r4, #104]	; 0x68
 8025b3a:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8025b3e:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8025b42:	eddd 6a28 	vldr	s13, [sp, #160]	; 0xa0
 8025b46:	ed9d 7a2a 	vldr	s14, [sp, #168]	; 0xa8
 8025b4a:	ed84 6a1b 	vstr	s12, [r4, #108]	; 0x6c
 8025b4e:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8025b52:	ed84 7a1f 	vstr	s14, [r4, #124]	; 0x7c
 8025b56:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8025b5a:	eddd 6a29 	vldr	s13, [sp, #164]	; 0xa4
 8025b5e:	ed84 6a1d 	vstr	s12, [r4, #116]	; 0x74
 8025b62:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8025b66:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8025b6a:	eddd 6a2c 	vldr	s13, [sp, #176]	; 0xb0
 8025b6e:	ed9d 7a2e 	vldr	s14, [sp, #184]	; 0xb8
 8025b72:	ed84 6a1e 	vstr	s12, [r4, #120]	; 0x78
 8025b76:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8025b7a:	ed84 7a22 	vstr	s14, [r4, #136]	; 0x88
 8025b7e:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8025b82:	eddd 6a2d 	vldr	s13, [sp, #180]	; 0xb4
 8025b86:	ed84 6a20 	vstr	s12, [r4, #128]	; 0x80
 8025b8a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8025b8e:	eec7 6a87 	vdiv.f32	s13, s15, s14
 8025b92:	edc4 6a21 	vstr	s13, [r4, #132]	; 0x84
 8025b96:	f50d 7d50 	add.w	sp, sp, #832	; 0x340
 8025b9a:	ecbd 8b04 	vpop	{d8-d9}
 8025b9e:	bd70      	pop	{r4, r5, r6, pc}

08025ba0 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>:
 8025ba0:	b510      	push	{r4, lr}
 8025ba2:	4604      	mov	r4, r0
 8025ba4:	f7eb fa0b 	bl	8010fbe <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8025ba8:	4620      	mov	r0, r4
 8025baa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8025bae:	f7ff bea1 	b.w	80258f4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08025bb2 <_ZN8touchgfx13TextureMapper9setAnglesEfff>:
 8025bb2:	ed80 0a0d 	vstr	s0, [r0, #52]	; 0x34
 8025bb6:	edc0 0a0e 	vstr	s1, [r0, #56]	; 0x38
 8025bba:	ed80 1a0f 	vstr	s2, [r0, #60]	; 0x3c
 8025bbe:	f7ff be99 	b.w	80258f4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08025bc2 <_ZN8touchgfx13TextureMapper8setScaleEf>:
 8025bc2:	ed80 0a10 	vstr	s0, [r0, #64]	; 0x40
 8025bc6:	f7ff be95 	b.w	80258f4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08025bca <_ZN8touchgfx13TextureMapper17setBitmapPositionEff>:
 8025bca:	ed80 0a0b 	vstr	s0, [r0, #44]	; 0x2c
 8025bce:	edc0 0a0c 	vstr	s1, [r0, #48]	; 0x30
 8025bd2:	f7ff be8f 	b.w	80258f4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08025bd6 <_ZN8touchgfx13TextureMapper17setCameraDistanceEf>:
 8025bd6:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8025bda:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8025bde:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8025be2:	bfd8      	it	le
 8025be4:	eeb0 0a67 	vmovle.f32	s0, s15
 8025be8:	ed80 0a16 	vstr	s0, [r0, #88]	; 0x58
 8025bec:	f7ff be82 	b.w	80258f4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08025bf0 <_ZN8touchgfx13TextureMapper9setCameraEff>:
 8025bf0:	ed80 0a14 	vstr	s0, [r0, #80]	; 0x50
 8025bf4:	edc0 0a15 	vstr	s1, [r0, #84]	; 0x54
 8025bf8:	f7ff be7c 	b.w	80258f4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08025bfc <_ZN8touchgfx13TextureMapper8setOrigoEff>:
 8025bfc:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 8025c00:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 8025c04:	f7ff be76 	b.w	80258f4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08025c08 <_ZN8touchgfx13TextureMapper8setOrigoEfff>:
 8025c08:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 8025c0c:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 8025c10:	ed80 1a13 	vstr	s2, [r0, #76]	; 0x4c
 8025c14:	f7ff be6e 	b.w	80258f4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08025c18 <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>:
 8025c18:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8025c1c:	ed2d 8b04 	vpush	{d8-d9}
 8025c20:	edd1 9a1a 	vldr	s19, [r1, #104]	; 0x68
 8025c24:	ed91 8a17 	vldr	s16, [r1, #92]	; 0x5c
 8025c28:	ed91 9a1d 	vldr	s18, [r1, #116]	; 0x74
 8025c2c:	edd1 8a20 	vldr	s17, [r1, #128]	; 0x80
 8025c30:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8025c34:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8025c38:	bf54      	ite	pl
 8025c3a:	eeb0 0a69 	vmovpl.f32	s0, s19
 8025c3e:	eeb0 0a48 	vmovmi.f32	s0, s16
 8025c42:	eeb4 9ac0 	vcmpe.f32	s18, s0
 8025c46:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8025c4a:	bfd8      	it	le
 8025c4c:	eeb0 0a49 	vmovle.f32	s0, s18
 8025c50:	eef4 8ac0 	vcmpe.f32	s17, s0
 8025c54:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8025c58:	bfd8      	it	le
 8025c5a:	eeb0 0a68 	vmovle.f32	s0, s17
 8025c5e:	460c      	mov	r4, r1
 8025c60:	4607      	mov	r7, r0
 8025c62:	f000 fd09 	bl	8026678 <floorf>
 8025c66:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8025c6a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8025c6e:	bf58      	it	pl
 8025c70:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 8025c74:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8025c78:	bf56      	itet	pl
 8025c7a:	ee10 3a10 	vmovpl	r3, s0
 8025c7e:	2600      	movmi	r6, #0
 8025c80:	b21e      	sxthpl	r6, r3
 8025c82:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8025c86:	bfd8      	it	le
 8025c88:	eeb0 8a69 	vmovle.f32	s16, s19
 8025c8c:	eeb4 9ac8 	vcmpe.f32	s18, s16
 8025c90:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8025c94:	bf58      	it	pl
 8025c96:	eeb0 8a49 	vmovpl.f32	s16, s18
 8025c9a:	eef4 8ac8 	vcmpe.f32	s17, s16
 8025c9e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8025ca2:	bf54      	ite	pl
 8025ca4:	eeb0 0a68 	vmovpl.f32	s0, s17
 8025ca8:	eeb0 0a48 	vmovmi.f32	s0, s16
 8025cac:	f000 fca2 	bl	80265f4 <ceilf>
 8025cb0:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 8025cb4:	edd4 9a1b 	vldr	s19, [r4, #108]	; 0x6c
 8025cb8:	ed94 8a18 	vldr	s16, [r4, #96]	; 0x60
 8025cbc:	ed94 9a1e 	vldr	s18, [r4, #120]	; 0x78
 8025cc0:	edd4 8a21 	vldr	s17, [r4, #132]	; 0x84
 8025cc4:	ee07 8a90 	vmov	s15, r8
 8025cc8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8025ccc:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8025cd0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8025cd4:	bfd8      	it	le
 8025cd6:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 8025cda:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8025cde:	bfdc      	itt	le
 8025ce0:	ee10 3a10 	vmovle	r3, s0
 8025ce4:	fa0f f883 	sxthle.w	r8, r3
 8025ce8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8025cec:	bf54      	ite	pl
 8025cee:	eeb0 0a69 	vmovpl.f32	s0, s19
 8025cf2:	eeb0 0a48 	vmovmi.f32	s0, s16
 8025cf6:	eeb4 9ac0 	vcmpe.f32	s18, s0
 8025cfa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8025cfe:	bfd8      	it	le
 8025d00:	eeb0 0a49 	vmovle.f32	s0, s18
 8025d04:	eef4 8ac0 	vcmpe.f32	s17, s0
 8025d08:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8025d0c:	bfd8      	it	le
 8025d0e:	eeb0 0a68 	vmovle.f32	s0, s17
 8025d12:	f000 fcb1 	bl	8026678 <floorf>
 8025d16:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8025d1a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8025d1e:	bf58      	it	pl
 8025d20:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 8025d24:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8025d28:	bf56      	itet	pl
 8025d2a:	ee10 3a10 	vmovpl	r3, s0
 8025d2e:	2500      	movmi	r5, #0
 8025d30:	b21d      	sxthpl	r5, r3
 8025d32:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8025d36:	bfd8      	it	le
 8025d38:	eeb0 8a69 	vmovle.f32	s16, s19
 8025d3c:	eeb4 9ac8 	vcmpe.f32	s18, s16
 8025d40:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8025d44:	bf58      	it	pl
 8025d46:	eeb0 8a49 	vmovpl.f32	s16, s18
 8025d4a:	eef4 8ac8 	vcmpe.f32	s17, s16
 8025d4e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8025d52:	bf54      	ite	pl
 8025d54:	eeb0 0a68 	vmovpl.f32	s0, s17
 8025d58:	eeb0 0a48 	vmovmi.f32	s0, s16
 8025d5c:	f000 fc4a 	bl	80265f4 <ceilf>
 8025d60:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8025d64:	803e      	strh	r6, [r7, #0]
 8025d66:	ee07 3a90 	vmov	s15, r3
 8025d6a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8025d6e:	807d      	strh	r5, [r7, #2]
 8025d70:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8025d74:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8025d78:	bfd8      	it	le
 8025d7a:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 8025d7e:	eba8 0606 	sub.w	r6, r8, r6
 8025d82:	bfdc      	itt	le
 8025d84:	ee10 3a10 	vmovle	r3, s0
 8025d88:	b21b      	sxthle	r3, r3
 8025d8a:	1b5d      	subs	r5, r3, r5
 8025d8c:	80be      	strh	r6, [r7, #4]
 8025d8e:	80fd      	strh	r5, [r7, #6]
 8025d90:	ecbd 8b04 	vpop	{d8-d9}
 8025d94:	4638      	mov	r0, r7
 8025d96:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08025d9a <_ZNK8touchgfx13TextureMapper17invalidateContentEv>:
 8025d9a:	b513      	push	{r0, r1, r4, lr}
 8025d9c:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 8025da0:	4604      	mov	r4, r0
 8025da2:	b143      	cbz	r3, 8025db6 <_ZNK8touchgfx13TextureMapper17invalidateContentEv+0x1c>
 8025da4:	4601      	mov	r1, r0
 8025da6:	4668      	mov	r0, sp
 8025da8:	f7ff ff36 	bl	8025c18 <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>
 8025dac:	6823      	ldr	r3, [r4, #0]
 8025dae:	4669      	mov	r1, sp
 8025db0:	691b      	ldr	r3, [r3, #16]
 8025db2:	4620      	mov	r0, r4
 8025db4:	4798      	blx	r3
 8025db6:	b002      	add	sp, #8
 8025db8:	bd10      	pop	{r4, pc}

08025dba <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>:
 8025dba:	4603      	mov	r3, r0
 8025dbc:	3026      	adds	r0, #38	; 0x26
 8025dbe:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 8025dc2:	b90b      	cbnz	r3, 8025dc8 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv+0xe>
 8025dc4:	f7ef b82c 	b.w	8014e20 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 8025dc8:	f7ef b83a 	b.w	8014e40 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>

08025dcc <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 8025dcc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025dd0:	ed2d 8b04 	vpush	{d8-d9}
 8025dd4:	4604      	mov	r4, r0
 8025dd6:	469b      	mov	fp, r3
 8025dd8:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 8025ddc:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8025de0:	f9b1 6000 	ldrsh.w	r6, [r1]
 8025de4:	8888      	ldrh	r0, [r1, #4]
 8025de6:	b0b3      	sub	sp, #204	; 0xcc
 8025de8:	4430      	add	r0, r6
 8025dea:	b280      	uxth	r0, r0
 8025dec:	9206      	str	r2, [sp, #24]
 8025dee:	fa0f fe80 	sxth.w	lr, r0
 8025df2:	2200      	movs	r2, #0
 8025df4:	4596      	cmp	lr, r2
 8025df6:	f8dd a100 	ldr.w	sl, [sp, #256]	; 0x100
 8025dfa:	f8dd 9104 	ldr.w	r9, [sp, #260]	; 0x104
 8025dfe:	f8dd 8108 	ldr.w	r8, [sp, #264]	; 0x108
 8025e02:	9f43      	ldr	r7, [sp, #268]	; 0x10c
 8025e04:	9211      	str	r2, [sp, #68]	; 0x44
 8025e06:	f340 8129 	ble.w	802605c <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8025e0a:	45b4      	cmp	ip, r6
 8025e0c:	f340 8126 	ble.w	802605c <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8025e10:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8025e14:	88ca      	ldrh	r2, [r1, #6]
 8025e16:	442a      	add	r2, r5
 8025e18:	b292      	uxth	r2, r2
 8025e1a:	b211      	sxth	r1, r2
 8025e1c:	2900      	cmp	r1, #0
 8025e1e:	f340 811d 	ble.w	802605c <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8025e22:	42ab      	cmp	r3, r5
 8025e24:	f340 811a 	ble.w	802605c <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8025e28:	45f4      	cmp	ip, lr
 8025e2a:	bfb8      	it	lt
 8025e2c:	fa1f f08c 	uxthlt.w	r0, ip
 8025e30:	428b      	cmp	r3, r1
 8025e32:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 8025e36:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8025e3a:	bfb8      	it	lt
 8025e3c:	b29a      	uxthlt	r2, r3
 8025e3e:	1b80      	subs	r0, r0, r6
 8025e40:	1b52      	subs	r2, r2, r5
 8025e42:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
 8025e46:	f8ad 204a 	strh.w	r2, [sp, #74]	; 0x4a
 8025e4a:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8025e4e:	f8ad 5046 	strh.w	r5, [sp, #70]	; 0x46
 8025e52:	ab11      	add	r3, sp, #68	; 0x44
 8025e54:	e893 0003 	ldmia.w	r3, {r0, r1}
 8025e58:	6822      	ldr	r2, [r4, #0]
 8025e5a:	9307      	str	r3, [sp, #28]
 8025e5c:	ad13      	add	r5, sp, #76	; 0x4c
 8025e5e:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8025e60:	e885 0003 	stmia.w	r5, {r0, r1}
 8025e64:	4629      	mov	r1, r5
 8025e66:	4620      	mov	r0, r4
 8025e68:	4790      	blx	r2
 8025e6a:	4621      	mov	r1, r4
 8025e6c:	a815      	add	r0, sp, #84	; 0x54
 8025e6e:	f7ee ff33 	bl	8014cd8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8025e72:	a815      	add	r0, sp, #84	; 0x54
 8025e74:	f7ed fbf8 	bl	8013668 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8025e78:	9b07      	ldr	r3, [sp, #28]
 8025e7a:	1d26      	adds	r6, r4, #4
 8025e7c:	4618      	mov	r0, r3
 8025e7e:	4631      	mov	r1, r6
 8025e80:	f7ed fc36 	bl	80136f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8025e84:	4628      	mov	r0, r5
 8025e86:	f104 0526 	add.w	r5, r4, #38	; 0x26
 8025e8a:	f7ed fbed 	bl	8013668 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8025e8e:	4628      	mov	r0, r5
 8025e90:	f7f1 f8a8 	bl	8016fe4 <_ZNK8touchgfx6Bitmap7getDataEv>
 8025e94:	9007      	str	r0, [sp, #28]
 8025e96:	2800      	cmp	r0, #0
 8025e98:	f000 80db 	beq.w	8026052 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x286>
 8025e9c:	f8db 2000 	ldr.w	r2, [fp]
 8025ea0:	9209      	str	r2, [sp, #36]	; 0x24
 8025ea2:	f8db 2004 	ldr.w	r2, [fp, #4]
 8025ea6:	920a      	str	r2, [sp, #40]	; 0x28
 8025ea8:	f8db 2008 	ldr.w	r2, [fp, #8]
 8025eac:	920b      	str	r2, [sp, #44]	; 0x2c
 8025eae:	f8db 200c 	ldr.w	r2, [fp, #12]
 8025eb2:	920c      	str	r2, [sp, #48]	; 0x30
 8025eb4:	f8da 2000 	ldr.w	r2, [sl]
 8025eb8:	920d      	str	r2, [sp, #52]	; 0x34
 8025eba:	f8da 2004 	ldr.w	r2, [sl, #4]
 8025ebe:	920e      	str	r2, [sp, #56]	; 0x38
 8025ec0:	f8da 2008 	ldr.w	r2, [sl, #8]
 8025ec4:	920f      	str	r2, [sp, #60]	; 0x3c
 8025ec6:	f8da 200c 	ldr.w	r2, [sl, #12]
 8025eca:	9210      	str	r2, [sp, #64]	; 0x40
 8025ecc:	a90d      	add	r1, sp, #52	; 0x34
 8025ece:	4632      	mov	r2, r6
 8025ed0:	a809      	add	r0, sp, #36	; 0x24
 8025ed2:	f7ed fbf1 	bl	80136b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8025ed6:	4632      	mov	r2, r6
 8025ed8:	a90e      	add	r1, sp, #56	; 0x38
 8025eda:	a80a      	add	r0, sp, #40	; 0x28
 8025edc:	f7ed fbec 	bl	80136b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8025ee0:	4632      	mov	r2, r6
 8025ee2:	a90f      	add	r1, sp, #60	; 0x3c
 8025ee4:	a80b      	add	r0, sp, #44	; 0x2c
 8025ee6:	f7ed fbe7 	bl	80136b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8025eea:	4632      	mov	r2, r6
 8025eec:	a910      	add	r1, sp, #64	; 0x40
 8025eee:	a80c      	add	r0, sp, #48	; 0x30
 8025ef0:	f7ed fbe2 	bl	80136b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8025ef4:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
 8025ef8:	edd7 4a00 	vldr	s9, [r7]
 8025efc:	edd7 5a01 	vldr	s11, [r7, #4]
 8025f00:	ed98 4a00 	vldr	s8, [r8]
 8025f04:	ed98 5a01 	vldr	s10, [r8, #4]
 8025f08:	ed99 9a00 	vldr	s18, [r9]
 8025f0c:	ed99 8a01 	vldr	s16, [r9, #4]
 8025f10:	edd9 8a02 	vldr	s17, [r9, #8]
 8025f14:	f8d9 e00c 	ldr.w	lr, [r9, #12]
 8025f18:	f8d8 c00c 	ldr.w	ip, [r8, #12]
 8025f1c:	ed8d 4a21 	vstr	s8, [sp, #132]	; 0x84
 8025f20:	eef0 6a67 	vmov.f32	s13, s15
 8025f24:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 8025f28:	edcd 4a22 	vstr	s9, [sp, #136]	; 0x88
 8025f2c:	eeb0 7a67 	vmov.f32	s14, s15
 8025f30:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
 8025f34:	ed8d 5a26 	vstr	s10, [sp, #152]	; 0x98
 8025f38:	eeb0 6a67 	vmov.f32	s12, s15
 8025f3c:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8025f40:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
 8025f44:	edcd 5a27 	vstr	s11, [sp, #156]	; 0x9c
 8025f48:	ee16 6a10 	vmov	r6, s12
 8025f4c:	eeb0 6a67 	vmov.f32	s12, s15
 8025f50:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8025f54:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
 8025f58:	f8d7 a008 	ldr.w	sl, [r7, #8]
 8025f5c:	f8d8 b008 	ldr.w	fp, [r8, #8]
 8025f60:	68ff      	ldr	r7, [r7, #12]
 8025f62:	9624      	str	r6, [sp, #144]	; 0x90
 8025f64:	ee16 0a10 	vmov	r0, s12
 8025f68:	eeb0 6a67 	vmov.f32	s12, s15
 8025f6c:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8025f70:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
 8025f74:	ed8d 9a20 	vstr	s18, [sp, #128]	; 0x80
 8025f78:	ee16 1a10 	vmov	r1, s12
 8025f7c:	eeb0 6a67 	vmov.f32	s12, s15
 8025f80:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8025f84:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
 8025f88:	ee16 2a10 	vmov	r2, s12
 8025f8c:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
 8025f90:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
 8025f94:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 8025f98:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 8025f9c:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8025fa0:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
 8025fa4:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
 8025fa8:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
 8025fac:	ed8d 8a25 	vstr	s16, [sp, #148]	; 0x94
 8025fb0:	edcd 8a2a 	vstr	s17, [sp, #168]	; 0xa8
 8025fb4:	922d      	str	r2, [sp, #180]	; 0xb4
 8025fb6:	4a2b      	ldr	r2, [pc, #172]	; (8026064 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x298>)
 8025fb8:	9b06      	ldr	r3, [sp, #24]
 8025fba:	8812      	ldrh	r2, [r2, #0]
 8025fbc:	9317      	str	r3, [sp, #92]	; 0x5c
 8025fbe:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 8025fc2:	9b07      	ldr	r3, [sp, #28]
 8025fc4:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
 8025fc8:	4628      	mov	r0, r5
 8025fca:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
 8025fce:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
 8025fd2:	9218      	str	r2, [sp, #96]	; 0x60
 8025fd4:	9319      	str	r3, [sp, #100]	; 0x64
 8025fd6:	f8cd b0ac 	str.w	fp, [sp, #172]	; 0xac
 8025fda:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
 8025fde:	9731      	str	r7, [sp, #196]	; 0xc4
 8025fe0:	f7f1 f830 	bl	8017044 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8025fe4:	901a      	str	r0, [sp, #104]	; 0x68
 8025fe6:	4628      	mov	r0, r5
 8025fe8:	f7f0 ff10 	bl	8016e0c <_ZNK8touchgfx6Bitmap8getWidthEv>
 8025fec:	901b      	str	r0, [sp, #108]	; 0x6c
 8025fee:	4628      	mov	r0, r5
 8025ff0:	f7f0 ff40 	bl	8016e74 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8025ff4:	901c      	str	r0, [sp, #112]	; 0x70
 8025ff6:	4628      	mov	r0, r5
 8025ff8:	f7f0 ff08 	bl	8016e0c <_ZNK8touchgfx6Bitmap8getWidthEv>
 8025ffc:	eeb4 9a48 	vcmp.f32	s18, s16
 8026000:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026004:	901d      	str	r0, [sp, #116]	; 0x74
 8026006:	f8b4 608c 	ldrh.w	r6, [r4, #140]	; 0x8c
 802600a:	d107      	bne.n	802601c <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x250>
 802600c:	eeb4 8a68 	vcmp.f32	s16, s17
 8026010:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026014:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8026018:	bf08      	it	eq
 802601a:	461e      	moveq	r6, r3
 802601c:	4b12      	ldr	r3, [pc, #72]	; (8026068 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x29c>)
 802601e:	681b      	ldr	r3, [r3, #0]
 8026020:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8026024:	b10a      	cbz	r2, 802602a <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x25e>
 8026026:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 8026028:	b905      	cbnz	r5, 802602c <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x260>
 802602a:	689d      	ldr	r5, [r3, #8]
 802602c:	682b      	ldr	r3, [r5, #0]
 802602e:	4620      	mov	r0, r4
 8026030:	6c1f      	ldr	r7, [r3, #64]	; 0x40
 8026032:	f7ff fec2 	bl	8025dba <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>
 8026036:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 802603a:	9604      	str	r6, [sp, #16]
 802603c:	e9cd 0302 	strd	r0, r3, [sp, #8]
 8026040:	ab13      	add	r3, sp, #76	; 0x4c
 8026042:	9301      	str	r3, [sp, #4]
 8026044:	ab15      	add	r3, sp, #84	; 0x54
 8026046:	9300      	str	r3, [sp, #0]
 8026048:	aa1e      	add	r2, sp, #120	; 0x78
 802604a:	ab19      	add	r3, sp, #100	; 0x64
 802604c:	a917      	add	r1, sp, #92	; 0x5c
 802604e:	4628      	mov	r0, r5
 8026050:	47b8      	blx	r7
 8026052:	b033      	add	sp, #204	; 0xcc
 8026054:	ecbd 8b04 	vpop	{d8-d9}
 8026058:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802605c:	2300      	movs	r3, #0
 802605e:	9312      	str	r3, [sp, #72]	; 0x48
 8026060:	e6f7      	b.n	8025e52 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x86>
 8026062:	bf00      	nop
 8026064:	200137b6 	.word	0x200137b6
 8026068:	200137bc 	.word	0x200137bc

0802606c <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE>:
 802606c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8026070:	ed2d 8b02 	vpush	{d8}
 8026074:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 8026078:	b098      	sub	sp, #96	; 0x60
 802607a:	4604      	mov	r4, r0
 802607c:	4688      	mov	r8, r1
 802607e:	2b00      	cmp	r3, #0
 8026080:	d077      	beq.n	8026172 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x106>
 8026082:	f100 0526 	add.w	r5, r0, #38	; 0x26
 8026086:	4628      	mov	r0, r5
 8026088:	f7f0 fec0 	bl	8016e0c <_ZNK8touchgfx6Bitmap8getWidthEv>
 802608c:	ee07 0a90 	vmov	s15, r0
 8026090:	4628      	mov	r0, r5
 8026092:	eeb8 8ae7 	vcvt.f32.s32	s16, s15
 8026096:	f7f0 feed 	bl	8016e74 <_ZNK8touchgfx6Bitmap9getHeightEv>
 802609a:	4b4e      	ldr	r3, [pc, #312]	; (80261d4 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x168>)
 802609c:	781b      	ldrb	r3, [r3, #0]
 802609e:	ee07 0a90 	vmov	s15, r0
 80260a2:	2b01      	cmp	r3, #1
 80260a4:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80260a8:	eeff 7a00 	vmov.f32	s15, #240	; 0xbf800000 -1.0
 80260ac:	d066      	beq.n	802617c <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x110>
 80260ae:	eeb0 6a47 	vmov.f32	s12, s14
 80260b2:	ee17 3a10 	vmov	r3, s14
 80260b6:	eeb0 4a48 	vmov.f32	s8, s16
 80260ba:	eeb0 7a48 	vmov.f32	s14, s16
 80260be:	eef0 4a67 	vmov.f32	s9, s15
 80260c2:	eeb0 8a67 	vmov.f32	s16, s15
 80260c6:	ed94 5a17 	vldr	s10, [r4, #92]	; 0x5c
 80260ca:	edd4 5a18 	vldr	s11, [r4, #96]	; 0x60
 80260ce:	ed94 3a1b 	vldr	s6, [r4, #108]	; 0x6c
 80260d2:	edd4 2a1d 	vldr	s5, [r4, #116]	; 0x74
 80260d6:	ed94 2a1a 	vldr	s4, [r4, #104]	; 0x68
 80260da:	edd4 3a1e 	vldr	s7, [r4, #120]	; 0x78
 80260de:	6f25      	ldr	r5, [r4, #112]	; 0x70
 80260e0:	6e66      	ldr	r6, [r4, #100]	; 0x64
 80260e2:	6fe2      	ldr	r2, [r4, #124]	; 0x7c
 80260e4:	f8d4 c080 	ldr.w	ip, [r4, #128]	; 0x80
 80260e8:	f8d4 7084 	ldr.w	r7, [r4, #132]	; 0x84
 80260ec:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 80260f0:	ee73 1a65 	vsub.f32	s3, s6, s11
 80260f4:	ee72 6ac5 	vsub.f32	s13, s5, s10
 80260f8:	ee32 1a45 	vsub.f32	s2, s4, s10
 80260fc:	ee66 6ae1 	vnmul.f32	s13, s13, s3
 8026100:	ee73 1ae5 	vsub.f32	s3, s7, s11
 8026104:	eee1 6a21 	vfma.f32	s13, s2, s3
 8026108:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 802610c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026110:	dd3d      	ble.n	802618e <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x122>
 8026112:	ed8d 5a04 	vstr	s10, [sp, #16]
 8026116:	ed8d 2a05 	vstr	s4, [sp, #20]
 802611a:	edcd 2a06 	vstr	s5, [sp, #24]
 802611e:	f8cd c01c 	str.w	ip, [sp, #28]
 8026122:	edcd 5a08 	vstr	s11, [sp, #32]
 8026126:	ed8d 3a09 	vstr	s6, [sp, #36]	; 0x24
 802612a:	edcd 3a0a 	vstr	s7, [sp, #40]	; 0x28
 802612e:	970b      	str	r7, [sp, #44]	; 0x2c
 8026130:	960c      	str	r6, [sp, #48]	; 0x30
 8026132:	950d      	str	r5, [sp, #52]	; 0x34
 8026134:	920e      	str	r2, [sp, #56]	; 0x38
 8026136:	900f      	str	r0, [sp, #60]	; 0x3c
 8026138:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
 802613c:	ed8d 4a11 	vstr	s8, [sp, #68]	; 0x44
 8026140:	ed8d 7a12 	vstr	s14, [sp, #72]	; 0x48
 8026144:	edcd 4a13 	vstr	s9, [sp, #76]	; 0x4c
 8026148:	ed8d 8a14 	vstr	s16, [sp, #80]	; 0x50
 802614c:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
 8026150:	9316      	str	r3, [sp, #88]	; 0x58
 8026152:	ed8d 6a17 	vstr	s12, [sp, #92]	; 0x5c
 8026156:	ab14      	add	r3, sp, #80	; 0x50
 8026158:	9303      	str	r3, [sp, #12]
 802615a:	ab10      	add	r3, sp, #64	; 0x40
 802615c:	9302      	str	r3, [sp, #8]
 802615e:	ab0c      	add	r3, sp, #48	; 0x30
 8026160:	9301      	str	r3, [sp, #4]
 8026162:	ab08      	add	r3, sp, #32
 8026164:	9300      	str	r3, [sp, #0]
 8026166:	2200      	movs	r2, #0
 8026168:	ab04      	add	r3, sp, #16
 802616a:	4641      	mov	r1, r8
 802616c:	4620      	mov	r0, r4
 802616e:	f7ff fe2d 	bl	8025dcc <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
 8026172:	b018      	add	sp, #96	; 0x60
 8026174:	ecbd 8b02 	vpop	{d8}
 8026178:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802617c:	eeb0 6a48 	vmov.f32	s12, s16
 8026180:	eef0 4a47 	vmov.f32	s9, s14
 8026184:	ee17 3a90 	vmov	r3, s15
 8026188:	eeb0 4a67 	vmov.f32	s8, s15
 802618c:	e79b      	b.n	80260c6 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x5a>
 802618e:	ed8d 5a05 	vstr	s10, [sp, #20]
 8026192:	ed8d 2a04 	vstr	s4, [sp, #16]
 8026196:	f8cd c018 	str.w	ip, [sp, #24]
 802619a:	edcd 2a07 	vstr	s5, [sp, #28]
 802619e:	edcd 5a09 	vstr	s11, [sp, #36]	; 0x24
 80261a2:	ed8d 3a08 	vstr	s6, [sp, #32]
 80261a6:	970a      	str	r7, [sp, #40]	; 0x28
 80261a8:	edcd 3a0b 	vstr	s7, [sp, #44]	; 0x2c
 80261ac:	960d      	str	r6, [sp, #52]	; 0x34
 80261ae:	950c      	str	r5, [sp, #48]	; 0x30
 80261b0:	900e      	str	r0, [sp, #56]	; 0x38
 80261b2:	920f      	str	r2, [sp, #60]	; 0x3c
 80261b4:	edcd 7a11 	vstr	s15, [sp, #68]	; 0x44
 80261b8:	ed8d 4a10 	vstr	s8, [sp, #64]	; 0x40
 80261bc:	edcd 4a12 	vstr	s9, [sp, #72]	; 0x48
 80261c0:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 80261c4:	ed8d 8a15 	vstr	s16, [sp, #84]	; 0x54
 80261c8:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 80261cc:	ed8d 6a16 	vstr	s12, [sp, #88]	; 0x58
 80261d0:	9317      	str	r3, [sp, #92]	; 0x5c
 80261d2:	e7c0      	b.n	8026156 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0xea>
 80261d4:	200137b4 	.word	0x200137b4

080261d8 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>:
 80261d8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80261da:	b08d      	sub	sp, #52	; 0x34
 80261dc:	2300      	movs	r3, #0
 80261de:	9304      	str	r3, [sp, #16]
 80261e0:	9305      	str	r3, [sp, #20]
 80261e2:	9306      	str	r3, [sp, #24]
 80261e4:	aa04      	add	r2, sp, #16
 80261e6:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 80261ea:	9307      	str	r3, [sp, #28]
 80261ec:	f100 0640 	add.w	r6, r0, #64	; 0x40
 80261f0:	4613      	mov	r3, r2
 80261f2:	f101 0710 	add.w	r7, r1, #16
 80261f6:	eddf 7a0f 	vldr	s15, [pc, #60]	; 8026234 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x5c>
 80261fa:	460c      	mov	r4, r1
 80261fc:	4605      	mov	r5, r0
 80261fe:	ecb4 7a01 	vldmia	r4!, {s14}
 8026202:	ecf5 6a01 	vldmia	r5!, {s13}
 8026206:	42bc      	cmp	r4, r7
 8026208:	eee6 7a87 	vfma.f32	s15, s13, s14
 802620c:	d1f7      	bne.n	80261fe <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x26>
 802620e:	3010      	adds	r0, #16
 8026210:	42b0      	cmp	r0, r6
 8026212:	ece2 7a01 	vstmia	r2!, {s15}
 8026216:	d1ee      	bne.n	80261f6 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x1e>
 8026218:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 802621a:	ac0c      	add	r4, sp, #48	; 0x30
 802621c:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 8026220:	ed9d 0a08 	vldr	s0, [sp, #32]
 8026224:	eddd 0a09 	vldr	s1, [sp, #36]	; 0x24
 8026228:	ed9d 1a0a 	vldr	s2, [sp, #40]	; 0x28
 802622c:	eddd 1a0b 	vldr	s3, [sp, #44]	; 0x2c
 8026230:	b00d      	add	sp, #52	; 0x34
 8026232:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8026234:	00000000 	.word	0x00000000

08026238 <_ZN8touchgfx9Matrix4x4C1Ev>:
 8026238:	ed9f 7a0b 	vldr	s14, [pc, #44]	; 8026268 <_ZN8touchgfx9Matrix4x4C1Ev+0x30>
 802623c:	2300      	movs	r3, #0
 802623e:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8026242:	eb00 1103 	add.w	r1, r0, r3, lsl #4
 8026246:	2200      	movs	r2, #0
 8026248:	4293      	cmp	r3, r2
 802624a:	f102 0201 	add.w	r2, r2, #1
 802624e:	bf14      	ite	ne
 8026250:	eef0 6a47 	vmovne.f32	s13, s14
 8026254:	eef0 6a67 	vmoveq.f32	s13, s15
 8026258:	2a04      	cmp	r2, #4
 802625a:	ece1 6a01 	vstmia	r1!, {s13}
 802625e:	d1f3      	bne.n	8026248 <_ZN8touchgfx9Matrix4x4C1Ev+0x10>
 8026260:	3301      	adds	r3, #1
 8026262:	2b04      	cmp	r3, #4
 8026264:	d1ed      	bne.n	8026242 <_ZN8touchgfx9Matrix4x4C1Ev+0xa>
 8026266:	4770      	bx	lr
 8026268:	00000000 	.word	0x00000000

0802626c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>:
 802626c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8026270:	460c      	mov	r4, r1
 8026272:	4605      	mov	r5, r0
 8026274:	4690      	mov	r8, r2
 8026276:	f7ff ffdf 	bl	8026238 <_ZN8touchgfx9Matrix4x4C1Ev>
 802627a:	4628      	mov	r0, r5
 802627c:	4621      	mov	r1, r4
 802627e:	f104 0c40 	add.w	ip, r4, #64	; 0x40
 8026282:	2300      	movs	r3, #0
 8026284:	eddf 7a0f 	vldr	s15, [pc, #60]	; 80262c4 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x58>
 8026288:	eb08 0603 	add.w	r6, r8, r3
 802628c:	460f      	mov	r7, r1
 802628e:	2400      	movs	r4, #0
 8026290:	4632      	mov	r2, r6
 8026292:	ecf7 6a01 	vldmia	r7!, {s13}
 8026296:	ed92 7a00 	vldr	s14, [r2]
 802629a:	3401      	adds	r4, #1
 802629c:	2c04      	cmp	r4, #4
 802629e:	f106 0610 	add.w	r6, r6, #16
 80262a2:	eee6 7a87 	vfma.f32	s15, s13, s14
 80262a6:	d1f3      	bne.n	8026290 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x24>
 80262a8:	18c2      	adds	r2, r0, r3
 80262aa:	3304      	adds	r3, #4
 80262ac:	2b10      	cmp	r3, #16
 80262ae:	edc2 7a00 	vstr	s15, [r2]
 80262b2:	d1e7      	bne.n	8026284 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x18>
 80262b4:	3110      	adds	r1, #16
 80262b6:	4561      	cmp	r1, ip
 80262b8:	f100 0010 	add.w	r0, r0, #16
 80262bc:	d1e1      	bne.n	8026282 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x16>
 80262be:	4628      	mov	r0, r5
 80262c0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80262c4:	00000000 	.word	0x00000000

080262c8 <_ZN8touchgfx9Matrix4x415setViewDistanceEf>:
 80262c8:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 80262cc:	ee87 0a80 	vdiv.f32	s0, s15, s0
 80262d0:	f100 0320 	add.w	r3, r0, #32
 80262d4:	3030      	adds	r0, #48	; 0x30
 80262d6:	ecf3 7a01 	vldmia	r3!, {s15}
 80262da:	ee60 7a27 	vmul.f32	s15, s0, s15
 80262de:	4283      	cmp	r3, r0
 80262e0:	edc3 7a03 	vstr	s15, [r3, #12]
 80262e4:	d1f7      	bne.n	80262d6 <_ZN8touchgfx9Matrix4x415setViewDistanceEf+0xe>
 80262e6:	4770      	bx	lr

080262e8 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>:
 80262e8:	b510      	push	{r4, lr}
 80262ea:	ed2d 8b02 	vpush	{d8}
 80262ee:	4604      	mov	r4, r0
 80262f0:	eef0 8a40 	vmov.f32	s17, s0
 80262f4:	f000 f938 	bl	8026568 <sinf>
 80262f8:	eeb0 8a40 	vmov.f32	s16, s0
 80262fc:	eeb0 0a68 	vmov.f32	s0, s17
 8026300:	f000 f8ee 	bl	80264e0 <cosf>
 8026304:	f104 0310 	add.w	r3, r4, #16
 8026308:	f104 0220 	add.w	r2, r4, #32
 802630c:	eeb1 6a48 	vneg.f32	s12, s16
 8026310:	edd3 7a04 	vldr	s15, [r3, #16]
 8026314:	edd3 6a00 	vldr	s13, [r3]
 8026318:	ee26 7a27 	vmul.f32	s14, s12, s15
 802631c:	ee67 7a80 	vmul.f32	s15, s15, s0
 8026320:	eea6 7a80 	vfma.f32	s14, s13, s0
 8026324:	eee6 7a88 	vfma.f32	s15, s13, s16
 8026328:	eca3 7a01 	vstmia	r3!, {s14}
 802632c:	429a      	cmp	r2, r3
 802632e:	edc3 7a03 	vstr	s15, [r3, #12]
 8026332:	d1ed      	bne.n	8026310 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf+0x28>
 8026334:	ecbd 8b02 	vpop	{d8}
 8026338:	4620      	mov	r0, r4
 802633a:	bd10      	pop	{r4, pc}

0802633c <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>:
 802633c:	b510      	push	{r4, lr}
 802633e:	ed2d 8b02 	vpush	{d8}
 8026342:	4604      	mov	r4, r0
 8026344:	eef0 8a40 	vmov.f32	s17, s0
 8026348:	f000 f90e 	bl	8026568 <sinf>
 802634c:	eeb0 8a40 	vmov.f32	s16, s0
 8026350:	eeb0 0a68 	vmov.f32	s0, s17
 8026354:	f000 f8c4 	bl	80264e0 <cosf>
 8026358:	4623      	mov	r3, r4
 802635a:	f104 0210 	add.w	r2, r4, #16
 802635e:	eeb1 6a48 	vneg.f32	s12, s16
 8026362:	edd3 7a08 	vldr	s15, [r3, #32]
 8026366:	edd3 6a00 	vldr	s13, [r3]
 802636a:	ee27 7a88 	vmul.f32	s14, s15, s16
 802636e:	ee67 7a80 	vmul.f32	s15, s15, s0
 8026372:	eea6 7a80 	vfma.f32	s14, s13, s0
 8026376:	eee6 7a26 	vfma.f32	s15, s12, s13
 802637a:	eca3 7a01 	vstmia	r3!, {s14}
 802637e:	429a      	cmp	r2, r3
 8026380:	edc3 7a07 	vstr	s15, [r3, #28]
 8026384:	d1ed      	bne.n	8026362 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf+0x26>
 8026386:	ecbd 8b02 	vpop	{d8}
 802638a:	4620      	mov	r0, r4
 802638c:	bd10      	pop	{r4, pc}

0802638e <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>:
 802638e:	b510      	push	{r4, lr}
 8026390:	ed2d 8b02 	vpush	{d8}
 8026394:	4604      	mov	r4, r0
 8026396:	eef0 8a40 	vmov.f32	s17, s0
 802639a:	f000 f8e5 	bl	8026568 <sinf>
 802639e:	eeb0 8a40 	vmov.f32	s16, s0
 80263a2:	eeb0 0a68 	vmov.f32	s0, s17
 80263a6:	f000 f89b 	bl	80264e0 <cosf>
 80263aa:	4623      	mov	r3, r4
 80263ac:	f104 0210 	add.w	r2, r4, #16
 80263b0:	eeb1 6a48 	vneg.f32	s12, s16
 80263b4:	edd3 7a04 	vldr	s15, [r3, #16]
 80263b8:	edd3 6a00 	vldr	s13, [r3]
 80263bc:	ee26 7a27 	vmul.f32	s14, s12, s15
 80263c0:	ee67 7a80 	vmul.f32	s15, s15, s0
 80263c4:	eea6 7a80 	vfma.f32	s14, s13, s0
 80263c8:	eee6 7a88 	vfma.f32	s15, s13, s16
 80263cc:	eca3 7a01 	vstmia	r3!, {s14}
 80263d0:	429a      	cmp	r2, r3
 80263d2:	edc3 7a03 	vstr	s15, [r3, #12]
 80263d6:	d1ed      	bne.n	80263b4 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf+0x26>
 80263d8:	ecbd 8b02 	vpop	{d8}
 80263dc:	4620      	mov	r0, r4
 80263de:	bd10      	pop	{r4, pc}

080263e0 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>:
 80263e0:	4603      	mov	r3, r0
 80263e2:	f100 0210 	add.w	r2, r0, #16
 80263e6:	ed93 7a0c 	vldr	s14, [r3, #48]	; 0x30
 80263ea:	edd3 7a00 	vldr	s15, [r3]
 80263ee:	eee7 7a00 	vfma.f32	s15, s14, s0
 80263f2:	ece3 7a01 	vstmia	r3!, {s15}
 80263f6:	4293      	cmp	r3, r2
 80263f8:	d1f5      	bne.n	80263e6 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf+0x6>
 80263fa:	4770      	bx	lr

080263fc <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>:
 80263fc:	f100 0310 	add.w	r3, r0, #16
 8026400:	f100 0220 	add.w	r2, r0, #32
 8026404:	ed93 7a08 	vldr	s14, [r3, #32]
 8026408:	edd3 7a00 	vldr	s15, [r3]
 802640c:	eee7 7a00 	vfma.f32	s15, s14, s0
 8026410:	ece3 7a01 	vstmia	r3!, {s15}
 8026414:	4293      	cmp	r3, r2
 8026416:	d1f5      	bne.n	8026404 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf+0x8>
 8026418:	4770      	bx	lr

0802641a <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>:
 802641a:	f100 0320 	add.w	r3, r0, #32
 802641e:	f100 0230 	add.w	r2, r0, #48	; 0x30
 8026422:	ed93 7a04 	vldr	s14, [r3, #16]
 8026426:	edd3 7a00 	vldr	s15, [r3]
 802642a:	eee7 7a00 	vfma.f32	s15, s14, s0
 802642e:	ece3 7a01 	vstmia	r3!, {s15}
 8026432:	4293      	cmp	r3, r2
 8026434:	d1f5      	bne.n	8026422 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf+0x8>
 8026436:	4770      	bx	lr

08026438 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>:
 8026438:	4603      	mov	r3, r0
 802643a:	f100 0210 	add.w	r2, r0, #16
 802643e:	edd3 7a00 	vldr	s15, [r3]
 8026442:	ee67 7a80 	vmul.f32	s15, s15, s0
 8026446:	ece3 7a01 	vstmia	r3!, {s15}
 802644a:	4293      	cmp	r3, r2
 802644c:	d1f7      	bne.n	802643e <_ZN8touchgfx9Matrix4x417concatenateXScaleEf+0x6>
 802644e:	4770      	bx	lr

08026450 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>:
 8026450:	f100 0310 	add.w	r3, r0, #16
 8026454:	f100 0220 	add.w	r2, r0, #32
 8026458:	edd3 7a00 	vldr	s15, [r3]
 802645c:	ee67 7a80 	vmul.f32	s15, s15, s0
 8026460:	ece3 7a01 	vstmia	r3!, {s15}
 8026464:	4293      	cmp	r3, r2
 8026466:	d1f7      	bne.n	8026458 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf+0x8>
 8026468:	4770      	bx	lr

0802646a <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>:
 802646a:	f100 0320 	add.w	r3, r0, #32
 802646e:	f100 0230 	add.w	r2, r0, #48	; 0x30
 8026472:	edd3 7a00 	vldr	s15, [r3]
 8026476:	ee67 7a80 	vmul.f32	s15, s15, s0
 802647a:	ece3 7a01 	vstmia	r3!, {s15}
 802647e:	4293      	cmp	r3, r2
 8026480:	d1f7      	bne.n	8026472 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf+0x8>
 8026482:	4770      	bx	lr

08026484 <__aeabi_atexit>:
 8026484:	460b      	mov	r3, r1
 8026486:	4601      	mov	r1, r0
 8026488:	4618      	mov	r0, r3
 802648a:	f000 bed1 	b.w	8027230 <__cxa_atexit>

0802648e <_ZdlPvj>:
 802648e:	f000 b812 	b.w	80264b6 <_ZdlPv>

08026492 <__cxa_guard_acquire>:
 8026492:	6803      	ldr	r3, [r0, #0]
 8026494:	07db      	lsls	r3, r3, #31
 8026496:	d406      	bmi.n	80264a6 <__cxa_guard_acquire+0x14>
 8026498:	7843      	ldrb	r3, [r0, #1]
 802649a:	b103      	cbz	r3, 802649e <__cxa_guard_acquire+0xc>
 802649c:	deff      	udf	#255	; 0xff
 802649e:	2301      	movs	r3, #1
 80264a0:	7043      	strb	r3, [r0, #1]
 80264a2:	4618      	mov	r0, r3
 80264a4:	4770      	bx	lr
 80264a6:	2000      	movs	r0, #0
 80264a8:	4770      	bx	lr

080264aa <__cxa_guard_release>:
 80264aa:	2301      	movs	r3, #1
 80264ac:	6003      	str	r3, [r0, #0]
 80264ae:	4770      	bx	lr

080264b0 <__cxa_pure_virtual>:
 80264b0:	b508      	push	{r3, lr}
 80264b2:	f000 f80f 	bl	80264d4 <_ZSt9terminatev>

080264b6 <_ZdlPv>:
 80264b6:	f000 be07 	b.w	80270c8 <free>

080264ba <_ZN10__cxxabiv111__terminateEPFvvE>:
 80264ba:	b508      	push	{r3, lr}
 80264bc:	4780      	blx	r0
 80264be:	f000 fdcf 	bl	8027060 <abort>
	...

080264c4 <_ZSt13get_terminatev>:
 80264c4:	4b02      	ldr	r3, [pc, #8]	; (80264d0 <_ZSt13get_terminatev+0xc>)
 80264c6:	6818      	ldr	r0, [r3, #0]
 80264c8:	f3bf 8f5b 	dmb	ish
 80264cc:	4770      	bx	lr
 80264ce:	bf00      	nop
 80264d0:	20000104 	.word	0x20000104

080264d4 <_ZSt9terminatev>:
 80264d4:	b508      	push	{r3, lr}
 80264d6:	f7ff fff5 	bl	80264c4 <_ZSt13get_terminatev>
 80264da:	f7ff ffee 	bl	80264ba <_ZN10__cxxabiv111__terminateEPFvvE>
	...

080264e0 <cosf>:
 80264e0:	ee10 3a10 	vmov	r3, s0
 80264e4:	b507      	push	{r0, r1, r2, lr}
 80264e6:	4a1e      	ldr	r2, [pc, #120]	; (8026560 <cosf+0x80>)
 80264e8:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80264ec:	4293      	cmp	r3, r2
 80264ee:	dc06      	bgt.n	80264fe <cosf+0x1e>
 80264f0:	eddf 0a1c 	vldr	s1, [pc, #112]	; 8026564 <cosf+0x84>
 80264f4:	b003      	add	sp, #12
 80264f6:	f85d eb04 	ldr.w	lr, [sp], #4
 80264fa:	f000 b8ff 	b.w	80266fc <__kernel_cosf>
 80264fe:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 8026502:	db04      	blt.n	802650e <cosf+0x2e>
 8026504:	ee30 0a40 	vsub.f32	s0, s0, s0
 8026508:	b003      	add	sp, #12
 802650a:	f85d fb04 	ldr.w	pc, [sp], #4
 802650e:	4668      	mov	r0, sp
 8026510:	f000 f99a 	bl	8026848 <__ieee754_rem_pio2f>
 8026514:	f000 0003 	and.w	r0, r0, #3
 8026518:	2801      	cmp	r0, #1
 802651a:	d009      	beq.n	8026530 <cosf+0x50>
 802651c:	2802      	cmp	r0, #2
 802651e:	d010      	beq.n	8026542 <cosf+0x62>
 8026520:	b9b0      	cbnz	r0, 8026550 <cosf+0x70>
 8026522:	eddd 0a01 	vldr	s1, [sp, #4]
 8026526:	ed9d 0a00 	vldr	s0, [sp]
 802652a:	f000 f8e7 	bl	80266fc <__kernel_cosf>
 802652e:	e7eb      	b.n	8026508 <cosf+0x28>
 8026530:	eddd 0a01 	vldr	s1, [sp, #4]
 8026534:	ed9d 0a00 	vldr	s0, [sp]
 8026538:	f000 f93e 	bl	80267b8 <__kernel_sinf>
 802653c:	eeb1 0a40 	vneg.f32	s0, s0
 8026540:	e7e2      	b.n	8026508 <cosf+0x28>
 8026542:	eddd 0a01 	vldr	s1, [sp, #4]
 8026546:	ed9d 0a00 	vldr	s0, [sp]
 802654a:	f000 f8d7 	bl	80266fc <__kernel_cosf>
 802654e:	e7f5      	b.n	802653c <cosf+0x5c>
 8026550:	eddd 0a01 	vldr	s1, [sp, #4]
 8026554:	ed9d 0a00 	vldr	s0, [sp]
 8026558:	2001      	movs	r0, #1
 802655a:	f000 f92d 	bl	80267b8 <__kernel_sinf>
 802655e:	e7d3      	b.n	8026508 <cosf+0x28>
 8026560:	3f490fd8 	.word	0x3f490fd8
 8026564:	00000000 	.word	0x00000000

08026568 <sinf>:
 8026568:	ee10 3a10 	vmov	r3, s0
 802656c:	b507      	push	{r0, r1, r2, lr}
 802656e:	4a1f      	ldr	r2, [pc, #124]	; (80265ec <sinf+0x84>)
 8026570:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8026574:	4293      	cmp	r3, r2
 8026576:	dc07      	bgt.n	8026588 <sinf+0x20>
 8026578:	eddf 0a1d 	vldr	s1, [pc, #116]	; 80265f0 <sinf+0x88>
 802657c:	2000      	movs	r0, #0
 802657e:	b003      	add	sp, #12
 8026580:	f85d eb04 	ldr.w	lr, [sp], #4
 8026584:	f000 b918 	b.w	80267b8 <__kernel_sinf>
 8026588:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 802658c:	db04      	blt.n	8026598 <sinf+0x30>
 802658e:	ee30 0a40 	vsub.f32	s0, s0, s0
 8026592:	b003      	add	sp, #12
 8026594:	f85d fb04 	ldr.w	pc, [sp], #4
 8026598:	4668      	mov	r0, sp
 802659a:	f000 f955 	bl	8026848 <__ieee754_rem_pio2f>
 802659e:	f000 0003 	and.w	r0, r0, #3
 80265a2:	2801      	cmp	r0, #1
 80265a4:	d00a      	beq.n	80265bc <sinf+0x54>
 80265a6:	2802      	cmp	r0, #2
 80265a8:	d00f      	beq.n	80265ca <sinf+0x62>
 80265aa:	b9c0      	cbnz	r0, 80265de <sinf+0x76>
 80265ac:	eddd 0a01 	vldr	s1, [sp, #4]
 80265b0:	ed9d 0a00 	vldr	s0, [sp]
 80265b4:	2001      	movs	r0, #1
 80265b6:	f000 f8ff 	bl	80267b8 <__kernel_sinf>
 80265ba:	e7ea      	b.n	8026592 <sinf+0x2a>
 80265bc:	eddd 0a01 	vldr	s1, [sp, #4]
 80265c0:	ed9d 0a00 	vldr	s0, [sp]
 80265c4:	f000 f89a 	bl	80266fc <__kernel_cosf>
 80265c8:	e7e3      	b.n	8026592 <sinf+0x2a>
 80265ca:	eddd 0a01 	vldr	s1, [sp, #4]
 80265ce:	ed9d 0a00 	vldr	s0, [sp]
 80265d2:	2001      	movs	r0, #1
 80265d4:	f000 f8f0 	bl	80267b8 <__kernel_sinf>
 80265d8:	eeb1 0a40 	vneg.f32	s0, s0
 80265dc:	e7d9      	b.n	8026592 <sinf+0x2a>
 80265de:	eddd 0a01 	vldr	s1, [sp, #4]
 80265e2:	ed9d 0a00 	vldr	s0, [sp]
 80265e6:	f000 f889 	bl	80266fc <__kernel_cosf>
 80265ea:	e7f5      	b.n	80265d8 <sinf+0x70>
 80265ec:	3f490fd8 	.word	0x3f490fd8
 80265f0:	00000000 	.word	0x00000000

080265f4 <ceilf>:
 80265f4:	ee10 3a10 	vmov	r3, s0
 80265f8:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 80265fc:	3a7f      	subs	r2, #127	; 0x7f
 80265fe:	2a16      	cmp	r2, #22
 8026600:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 8026604:	dc2a      	bgt.n	802665c <ceilf+0x68>
 8026606:	2a00      	cmp	r2, #0
 8026608:	da11      	bge.n	802662e <ceilf+0x3a>
 802660a:	eddf 7a19 	vldr	s15, [pc, #100]	; 8026670 <ceilf+0x7c>
 802660e:	ee30 0a27 	vadd.f32	s0, s0, s15
 8026612:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8026616:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802661a:	dd05      	ble.n	8026628 <ceilf+0x34>
 802661c:	2b00      	cmp	r3, #0
 802661e:	db23      	blt.n	8026668 <ceilf+0x74>
 8026620:	2900      	cmp	r1, #0
 8026622:	bf18      	it	ne
 8026624:	f04f 537e 	movne.w	r3, #1065353216	; 0x3f800000
 8026628:	ee00 3a10 	vmov	s0, r3
 802662c:	4770      	bx	lr
 802662e:	4911      	ldr	r1, [pc, #68]	; (8026674 <ceilf+0x80>)
 8026630:	4111      	asrs	r1, r2
 8026632:	420b      	tst	r3, r1
 8026634:	d0fa      	beq.n	802662c <ceilf+0x38>
 8026636:	eddf 7a0e 	vldr	s15, [pc, #56]	; 8026670 <ceilf+0x7c>
 802663a:	ee30 0a27 	vadd.f32	s0, s0, s15
 802663e:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8026642:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026646:	ddef      	ble.n	8026628 <ceilf+0x34>
 8026648:	2b00      	cmp	r3, #0
 802664a:	bfc2      	ittt	gt
 802664c:	f44f 0000 	movgt.w	r0, #8388608	; 0x800000
 8026650:	fa40 f202 	asrgt.w	r2, r0, r2
 8026654:	189b      	addgt	r3, r3, r2
 8026656:	ea23 0301 	bic.w	r3, r3, r1
 802665a:	e7e5      	b.n	8026628 <ceilf+0x34>
 802665c:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 8026660:	d3e4      	bcc.n	802662c <ceilf+0x38>
 8026662:	ee30 0a00 	vadd.f32	s0, s0, s0
 8026666:	4770      	bx	lr
 8026668:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 802666c:	e7dc      	b.n	8026628 <ceilf+0x34>
 802666e:	bf00      	nop
 8026670:	7149f2ca 	.word	0x7149f2ca
 8026674:	007fffff 	.word	0x007fffff

08026678 <floorf>:
 8026678:	ee10 3a10 	vmov	r3, s0
 802667c:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8026680:	3a7f      	subs	r2, #127	; 0x7f
 8026682:	2a16      	cmp	r2, #22
 8026684:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 8026688:	dc2a      	bgt.n	80266e0 <floorf+0x68>
 802668a:	2a00      	cmp	r2, #0
 802668c:	da11      	bge.n	80266b2 <floorf+0x3a>
 802668e:	eddf 7a18 	vldr	s15, [pc, #96]	; 80266f0 <floorf+0x78>
 8026692:	ee30 0a27 	vadd.f32	s0, s0, s15
 8026696:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802669a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802669e:	dd05      	ble.n	80266ac <floorf+0x34>
 80266a0:	2b00      	cmp	r3, #0
 80266a2:	da23      	bge.n	80266ec <floorf+0x74>
 80266a4:	4a13      	ldr	r2, [pc, #76]	; (80266f4 <floorf+0x7c>)
 80266a6:	2900      	cmp	r1, #0
 80266a8:	bf18      	it	ne
 80266aa:	4613      	movne	r3, r2
 80266ac:	ee00 3a10 	vmov	s0, r3
 80266b0:	4770      	bx	lr
 80266b2:	4911      	ldr	r1, [pc, #68]	; (80266f8 <floorf+0x80>)
 80266b4:	4111      	asrs	r1, r2
 80266b6:	420b      	tst	r3, r1
 80266b8:	d0fa      	beq.n	80266b0 <floorf+0x38>
 80266ba:	eddf 7a0d 	vldr	s15, [pc, #52]	; 80266f0 <floorf+0x78>
 80266be:	ee30 0a27 	vadd.f32	s0, s0, s15
 80266c2:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80266c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80266ca:	ddef      	ble.n	80266ac <floorf+0x34>
 80266cc:	2b00      	cmp	r3, #0
 80266ce:	bfbe      	ittt	lt
 80266d0:	f44f 0000 	movlt.w	r0, #8388608	; 0x800000
 80266d4:	fa40 f202 	asrlt.w	r2, r0, r2
 80266d8:	189b      	addlt	r3, r3, r2
 80266da:	ea23 0301 	bic.w	r3, r3, r1
 80266de:	e7e5      	b.n	80266ac <floorf+0x34>
 80266e0:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 80266e4:	d3e4      	bcc.n	80266b0 <floorf+0x38>
 80266e6:	ee30 0a00 	vadd.f32	s0, s0, s0
 80266ea:	4770      	bx	lr
 80266ec:	2300      	movs	r3, #0
 80266ee:	e7dd      	b.n	80266ac <floorf+0x34>
 80266f0:	7149f2ca 	.word	0x7149f2ca
 80266f4:	bf800000 	.word	0xbf800000
 80266f8:	007fffff 	.word	0x007fffff

080266fc <__kernel_cosf>:
 80266fc:	ee10 3a10 	vmov	r3, s0
 8026700:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8026704:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 8026708:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 802670c:	da05      	bge.n	802671a <__kernel_cosf+0x1e>
 802670e:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8026712:	ee17 2a90 	vmov	r2, s15
 8026716:	2a00      	cmp	r2, #0
 8026718:	d03b      	beq.n	8026792 <__kernel_cosf+0x96>
 802671a:	ee20 7a00 	vmul.f32	s14, s0, s0
 802671e:	eddf 7a1e 	vldr	s15, [pc, #120]	; 8026798 <__kernel_cosf+0x9c>
 8026722:	ed9f 6a1e 	vldr	s12, [pc, #120]	; 802679c <__kernel_cosf+0xa0>
 8026726:	4a1e      	ldr	r2, [pc, #120]	; (80267a0 <__kernel_cosf+0xa4>)
 8026728:	eea7 6a27 	vfma.f32	s12, s14, s15
 802672c:	4293      	cmp	r3, r2
 802672e:	eddf 7a1d 	vldr	s15, [pc, #116]	; 80267a4 <__kernel_cosf+0xa8>
 8026732:	eee6 7a07 	vfma.f32	s15, s12, s14
 8026736:	ed9f 6a1c 	vldr	s12, [pc, #112]	; 80267a8 <__kernel_cosf+0xac>
 802673a:	eea7 6a87 	vfma.f32	s12, s15, s14
 802673e:	eddf 7a1b 	vldr	s15, [pc, #108]	; 80267ac <__kernel_cosf+0xb0>
 8026742:	eee6 7a07 	vfma.f32	s15, s12, s14
 8026746:	ed9f 6a1a 	vldr	s12, [pc, #104]	; 80267b0 <__kernel_cosf+0xb4>
 802674a:	eea7 6a87 	vfma.f32	s12, s15, s14
 802674e:	ee60 0ac0 	vnmul.f32	s1, s1, s0
 8026752:	ee26 6a07 	vmul.f32	s12, s12, s14
 8026756:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802675a:	eee7 0a06 	vfma.f32	s1, s14, s12
 802675e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8026762:	dc04      	bgt.n	802676e <__kernel_cosf+0x72>
 8026764:	ee77 7ae0 	vsub.f32	s15, s15, s1
 8026768:	ee36 0ae7 	vsub.f32	s0, s13, s15
 802676c:	4770      	bx	lr
 802676e:	4a11      	ldr	r2, [pc, #68]	; (80267b4 <__kernel_cosf+0xb8>)
 8026770:	4293      	cmp	r3, r2
 8026772:	bfda      	itte	le
 8026774:	f103 437f 	addle.w	r3, r3, #4278190080	; 0xff000000
 8026778:	ee07 3a10 	vmovle	s14, r3
 802677c:	eeb5 7a02 	vmovgt.f32	s14, #82	; 0x3e900000  0.2812500
 8026780:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8026784:	ee36 0ac7 	vsub.f32	s0, s13, s14
 8026788:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802678c:	ee30 0a67 	vsub.f32	s0, s0, s15
 8026790:	4770      	bx	lr
 8026792:	eeb0 0a66 	vmov.f32	s0, s13
 8026796:	4770      	bx	lr
 8026798:	ad47d74e 	.word	0xad47d74e
 802679c:	310f74f6 	.word	0x310f74f6
 80267a0:	3e999999 	.word	0x3e999999
 80267a4:	b493f27c 	.word	0xb493f27c
 80267a8:	37d00d01 	.word	0x37d00d01
 80267ac:	bab60b61 	.word	0xbab60b61
 80267b0:	3d2aaaab 	.word	0x3d2aaaab
 80267b4:	3f480000 	.word	0x3f480000

080267b8 <__kernel_sinf>:
 80267b8:	ee10 3a10 	vmov	r3, s0
 80267bc:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80267c0:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 80267c4:	da04      	bge.n	80267d0 <__kernel_sinf+0x18>
 80267c6:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80267ca:	ee17 3a90 	vmov	r3, s15
 80267ce:	b35b      	cbz	r3, 8026828 <__kernel_sinf+0x70>
 80267d0:	ee20 7a00 	vmul.f32	s14, s0, s0
 80267d4:	eddf 7a15 	vldr	s15, [pc, #84]	; 802682c <__kernel_sinf+0x74>
 80267d8:	ed9f 6a15 	vldr	s12, [pc, #84]	; 8026830 <__kernel_sinf+0x78>
 80267dc:	eea7 6a27 	vfma.f32	s12, s14, s15
 80267e0:	eddf 7a14 	vldr	s15, [pc, #80]	; 8026834 <__kernel_sinf+0x7c>
 80267e4:	eee6 7a07 	vfma.f32	s15, s12, s14
 80267e8:	ed9f 6a13 	vldr	s12, [pc, #76]	; 8026838 <__kernel_sinf+0x80>
 80267ec:	eea7 6a87 	vfma.f32	s12, s15, s14
 80267f0:	eddf 7a12 	vldr	s15, [pc, #72]	; 802683c <__kernel_sinf+0x84>
 80267f4:	ee60 6a07 	vmul.f32	s13, s0, s14
 80267f8:	eee6 7a07 	vfma.f32	s15, s12, s14
 80267fc:	b930      	cbnz	r0, 802680c <__kernel_sinf+0x54>
 80267fe:	ed9f 6a10 	vldr	s12, [pc, #64]	; 8026840 <__kernel_sinf+0x88>
 8026802:	eea7 6a27 	vfma.f32	s12, s14, s15
 8026806:	eea6 0a26 	vfma.f32	s0, s12, s13
 802680a:	4770      	bx	lr
 802680c:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 8026810:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 8026814:	eee0 7a86 	vfma.f32	s15, s1, s12
 8026818:	eed7 0a87 	vfnms.f32	s1, s15, s14
 802681c:	eddf 7a09 	vldr	s15, [pc, #36]	; 8026844 <__kernel_sinf+0x8c>
 8026820:	eee6 0aa7 	vfma.f32	s1, s13, s15
 8026824:	ee30 0a60 	vsub.f32	s0, s0, s1
 8026828:	4770      	bx	lr
 802682a:	bf00      	nop
 802682c:	2f2ec9d3 	.word	0x2f2ec9d3
 8026830:	b2d72f34 	.word	0xb2d72f34
 8026834:	3638ef1b 	.word	0x3638ef1b
 8026838:	b9500d01 	.word	0xb9500d01
 802683c:	3c088889 	.word	0x3c088889
 8026840:	be2aaaab 	.word	0xbe2aaaab
 8026844:	3e2aaaab 	.word	0x3e2aaaab

08026848 <__ieee754_rem_pio2f>:
 8026848:	b5f0      	push	{r4, r5, r6, r7, lr}
 802684a:	ee10 6a10 	vmov	r6, s0
 802684e:	4b86      	ldr	r3, [pc, #536]	; (8026a68 <__ieee754_rem_pio2f+0x220>)
 8026850:	f026 4500 	bic.w	r5, r6, #2147483648	; 0x80000000
 8026854:	429d      	cmp	r5, r3
 8026856:	b087      	sub	sp, #28
 8026858:	4604      	mov	r4, r0
 802685a:	dc05      	bgt.n	8026868 <__ieee754_rem_pio2f+0x20>
 802685c:	2300      	movs	r3, #0
 802685e:	ed80 0a00 	vstr	s0, [r0]
 8026862:	6043      	str	r3, [r0, #4]
 8026864:	2000      	movs	r0, #0
 8026866:	e020      	b.n	80268aa <__ieee754_rem_pio2f+0x62>
 8026868:	4b80      	ldr	r3, [pc, #512]	; (8026a6c <__ieee754_rem_pio2f+0x224>)
 802686a:	429d      	cmp	r5, r3
 802686c:	dc38      	bgt.n	80268e0 <__ieee754_rem_pio2f+0x98>
 802686e:	2e00      	cmp	r6, #0
 8026870:	ed9f 7a7f 	vldr	s14, [pc, #508]	; 8026a70 <__ieee754_rem_pio2f+0x228>
 8026874:	4b7f      	ldr	r3, [pc, #508]	; (8026a74 <__ieee754_rem_pio2f+0x22c>)
 8026876:	f025 050f 	bic.w	r5, r5, #15
 802687a:	dd18      	ble.n	80268ae <__ieee754_rem_pio2f+0x66>
 802687c:	429d      	cmp	r5, r3
 802687e:	ee70 7a47 	vsub.f32	s15, s0, s14
 8026882:	bf09      	itett	eq
 8026884:	ed9f 7a7c 	vldreq	s14, [pc, #496]	; 8026a78 <__ieee754_rem_pio2f+0x230>
 8026888:	ed9f 7a7c 	vldrne	s14, [pc, #496]	; 8026a7c <__ieee754_rem_pio2f+0x234>
 802688c:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 8026890:	ed9f 7a7b 	vldreq	s14, [pc, #492]	; 8026a80 <__ieee754_rem_pio2f+0x238>
 8026894:	ee77 6ac7 	vsub.f32	s13, s15, s14
 8026898:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802689c:	edc0 6a00 	vstr	s13, [r0]
 80268a0:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80268a4:	edc0 7a01 	vstr	s15, [r0, #4]
 80268a8:	2001      	movs	r0, #1
 80268aa:	b007      	add	sp, #28
 80268ac:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80268ae:	429d      	cmp	r5, r3
 80268b0:	ee70 7a07 	vadd.f32	s15, s0, s14
 80268b4:	bf09      	itett	eq
 80268b6:	ed9f 7a70 	vldreq	s14, [pc, #448]	; 8026a78 <__ieee754_rem_pio2f+0x230>
 80268ba:	ed9f 7a70 	vldrne	s14, [pc, #448]	; 8026a7c <__ieee754_rem_pio2f+0x234>
 80268be:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 80268c2:	ed9f 7a6f 	vldreq	s14, [pc, #444]	; 8026a80 <__ieee754_rem_pio2f+0x238>
 80268c6:	ee77 6a87 	vadd.f32	s13, s15, s14
 80268ca:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80268ce:	edc0 6a00 	vstr	s13, [r0]
 80268d2:	ee77 7a87 	vadd.f32	s15, s15, s14
 80268d6:	edc0 7a01 	vstr	s15, [r0, #4]
 80268da:	f04f 30ff 	mov.w	r0, #4294967295
 80268de:	e7e4      	b.n	80268aa <__ieee754_rem_pio2f+0x62>
 80268e0:	4b68      	ldr	r3, [pc, #416]	; (8026a84 <__ieee754_rem_pio2f+0x23c>)
 80268e2:	429d      	cmp	r5, r3
 80268e4:	dc71      	bgt.n	80269ca <__ieee754_rem_pio2f+0x182>
 80268e6:	f000 f8db 	bl	8026aa0 <fabsf>
 80268ea:	ed9f 7a67 	vldr	s14, [pc, #412]	; 8026a88 <__ieee754_rem_pio2f+0x240>
 80268ee:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 80268f2:	eee0 7a07 	vfma.f32	s15, s0, s14
 80268f6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80268fa:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80268fe:	ee17 0a90 	vmov	r0, s15
 8026902:	eddf 7a5b 	vldr	s15, [pc, #364]	; 8026a70 <__ieee754_rem_pio2f+0x228>
 8026906:	eea7 0a67 	vfms.f32	s0, s14, s15
 802690a:	281f      	cmp	r0, #31
 802690c:	eddf 7a5b 	vldr	s15, [pc, #364]	; 8026a7c <__ieee754_rem_pio2f+0x234>
 8026910:	ee67 7a27 	vmul.f32	s15, s14, s15
 8026914:	eeb1 6a47 	vneg.f32	s12, s14
 8026918:	ee70 6a67 	vsub.f32	s13, s0, s15
 802691c:	ee16 2a90 	vmov	r2, s13
 8026920:	dc1c      	bgt.n	802695c <__ieee754_rem_pio2f+0x114>
 8026922:	495a      	ldr	r1, [pc, #360]	; (8026a8c <__ieee754_rem_pio2f+0x244>)
 8026924:	1e47      	subs	r7, r0, #1
 8026926:	f025 03ff 	bic.w	r3, r5, #255	; 0xff
 802692a:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 802692e:	428b      	cmp	r3, r1
 8026930:	d014      	beq.n	802695c <__ieee754_rem_pio2f+0x114>
 8026932:	6022      	str	r2, [r4, #0]
 8026934:	ed94 7a00 	vldr	s14, [r4]
 8026938:	ee30 0a47 	vsub.f32	s0, s0, s14
 802693c:	2e00      	cmp	r6, #0
 802693e:	ee30 0a67 	vsub.f32	s0, s0, s15
 8026942:	ed84 0a01 	vstr	s0, [r4, #4]
 8026946:	dab0      	bge.n	80268aa <__ieee754_rem_pio2f+0x62>
 8026948:	eeb1 7a47 	vneg.f32	s14, s14
 802694c:	eeb1 0a40 	vneg.f32	s0, s0
 8026950:	ed84 7a00 	vstr	s14, [r4]
 8026954:	ed84 0a01 	vstr	s0, [r4, #4]
 8026958:	4240      	negs	r0, r0
 802695a:	e7a6      	b.n	80268aa <__ieee754_rem_pio2f+0x62>
 802695c:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 8026960:	ebc1 51d5 	rsb	r1, r1, r5, lsr #23
 8026964:	2908      	cmp	r1, #8
 8026966:	ea4f 53e5 	mov.w	r3, r5, asr #23
 802696a:	dde2      	ble.n	8026932 <__ieee754_rem_pio2f+0xea>
 802696c:	eddf 5a42 	vldr	s11, [pc, #264]	; 8026a78 <__ieee754_rem_pio2f+0x230>
 8026970:	eef0 6a40 	vmov.f32	s13, s0
 8026974:	eee6 6a25 	vfma.f32	s13, s12, s11
 8026978:	ee70 7a66 	vsub.f32	s15, s0, s13
 802697c:	eee6 7a25 	vfma.f32	s15, s12, s11
 8026980:	eddf 5a3f 	vldr	s11, [pc, #252]	; 8026a80 <__ieee754_rem_pio2f+0x238>
 8026984:	eed7 7a25 	vfnms.f32	s15, s14, s11
 8026988:	ee76 5ae7 	vsub.f32	s11, s13, s15
 802698c:	ee15 2a90 	vmov	r2, s11
 8026990:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 8026994:	1a5b      	subs	r3, r3, r1
 8026996:	2b19      	cmp	r3, #25
 8026998:	dc04      	bgt.n	80269a4 <__ieee754_rem_pio2f+0x15c>
 802699a:	edc4 5a00 	vstr	s11, [r4]
 802699e:	eeb0 0a66 	vmov.f32	s0, s13
 80269a2:	e7c7      	b.n	8026934 <__ieee754_rem_pio2f+0xec>
 80269a4:	eddf 5a3a 	vldr	s11, [pc, #232]	; 8026a90 <__ieee754_rem_pio2f+0x248>
 80269a8:	eeb0 0a66 	vmov.f32	s0, s13
 80269ac:	eea6 0a25 	vfma.f32	s0, s12, s11
 80269b0:	ee76 7ac0 	vsub.f32	s15, s13, s0
 80269b4:	eddf 6a37 	vldr	s13, [pc, #220]	; 8026a94 <__ieee754_rem_pio2f+0x24c>
 80269b8:	eee6 7a25 	vfma.f32	s15, s12, s11
 80269bc:	eed7 7a26 	vfnms.f32	s15, s14, s13
 80269c0:	ee30 7a67 	vsub.f32	s14, s0, s15
 80269c4:	ed84 7a00 	vstr	s14, [r4]
 80269c8:	e7b4      	b.n	8026934 <__ieee754_rem_pio2f+0xec>
 80269ca:	f1b5 4fff 	cmp.w	r5, #2139095040	; 0x7f800000
 80269ce:	db06      	blt.n	80269de <__ieee754_rem_pio2f+0x196>
 80269d0:	ee70 7a40 	vsub.f32	s15, s0, s0
 80269d4:	edc0 7a01 	vstr	s15, [r0, #4]
 80269d8:	edc0 7a00 	vstr	s15, [r0]
 80269dc:	e742      	b.n	8026864 <__ieee754_rem_pio2f+0x1c>
 80269de:	15ea      	asrs	r2, r5, #23
 80269e0:	3a86      	subs	r2, #134	; 0x86
 80269e2:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 80269e6:	ee07 3a90 	vmov	s15, r3
 80269ea:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80269ee:	eddf 6a2a 	vldr	s13, [pc, #168]	; 8026a98 <__ieee754_rem_pio2f+0x250>
 80269f2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80269f6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80269fa:	ed8d 7a03 	vstr	s14, [sp, #12]
 80269fe:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8026a02:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8026a06:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8026a0a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8026a0e:	ed8d 7a04 	vstr	s14, [sp, #16]
 8026a12:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8026a16:	eef5 7a40 	vcmp.f32	s15, #0.0
 8026a1a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026a1e:	edcd 7a05 	vstr	s15, [sp, #20]
 8026a22:	d11e      	bne.n	8026a62 <__ieee754_rem_pio2f+0x21a>
 8026a24:	eeb5 7a40 	vcmp.f32	s14, #0.0
 8026a28:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026a2c:	bf14      	ite	ne
 8026a2e:	2302      	movne	r3, #2
 8026a30:	2301      	moveq	r3, #1
 8026a32:	491a      	ldr	r1, [pc, #104]	; (8026a9c <__ieee754_rem_pio2f+0x254>)
 8026a34:	9101      	str	r1, [sp, #4]
 8026a36:	2102      	movs	r1, #2
 8026a38:	9100      	str	r1, [sp, #0]
 8026a3a:	a803      	add	r0, sp, #12
 8026a3c:	4621      	mov	r1, r4
 8026a3e:	f000 f89d 	bl	8026b7c <__kernel_rem_pio2f>
 8026a42:	2e00      	cmp	r6, #0
 8026a44:	f6bf af31 	bge.w	80268aa <__ieee754_rem_pio2f+0x62>
 8026a48:	edd4 7a00 	vldr	s15, [r4]
 8026a4c:	eef1 7a67 	vneg.f32	s15, s15
 8026a50:	edc4 7a00 	vstr	s15, [r4]
 8026a54:	edd4 7a01 	vldr	s15, [r4, #4]
 8026a58:	eef1 7a67 	vneg.f32	s15, s15
 8026a5c:	edc4 7a01 	vstr	s15, [r4, #4]
 8026a60:	e77a      	b.n	8026958 <__ieee754_rem_pio2f+0x110>
 8026a62:	2303      	movs	r3, #3
 8026a64:	e7e5      	b.n	8026a32 <__ieee754_rem_pio2f+0x1ea>
 8026a66:	bf00      	nop
 8026a68:	3f490fd8 	.word	0x3f490fd8
 8026a6c:	4016cbe3 	.word	0x4016cbe3
 8026a70:	3fc90f80 	.word	0x3fc90f80
 8026a74:	3fc90fd0 	.word	0x3fc90fd0
 8026a78:	37354400 	.word	0x37354400
 8026a7c:	37354443 	.word	0x37354443
 8026a80:	2e85a308 	.word	0x2e85a308
 8026a84:	43490f80 	.word	0x43490f80
 8026a88:	3f22f984 	.word	0x3f22f984
 8026a8c:	0802b990 	.word	0x0802b990
 8026a90:	2e85a300 	.word	0x2e85a300
 8026a94:	248d3132 	.word	0x248d3132
 8026a98:	43800000 	.word	0x43800000
 8026a9c:	0802ba10 	.word	0x0802ba10

08026aa0 <fabsf>:
 8026aa0:	ee10 3a10 	vmov	r3, s0
 8026aa4:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8026aa8:	ee00 3a10 	vmov	s0, r3
 8026aac:	4770      	bx	lr
	...

08026ab0 <scalbnf>:
 8026ab0:	ee10 3a10 	vmov	r3, s0
 8026ab4:	f033 4200 	bics.w	r2, r3, #2147483648	; 0x80000000
 8026ab8:	d02b      	beq.n	8026b12 <scalbnf+0x62>
 8026aba:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 8026abe:	d302      	bcc.n	8026ac6 <scalbnf+0x16>
 8026ac0:	ee30 0a00 	vadd.f32	s0, s0, s0
 8026ac4:	4770      	bx	lr
 8026ac6:	f013 4fff 	tst.w	r3, #2139095040	; 0x7f800000
 8026aca:	d123      	bne.n	8026b14 <scalbnf+0x64>
 8026acc:	4b24      	ldr	r3, [pc, #144]	; (8026b60 <scalbnf+0xb0>)
 8026ace:	eddf 7a25 	vldr	s15, [pc, #148]	; 8026b64 <scalbnf+0xb4>
 8026ad2:	4298      	cmp	r0, r3
 8026ad4:	ee20 0a27 	vmul.f32	s0, s0, s15
 8026ad8:	db17      	blt.n	8026b0a <scalbnf+0x5a>
 8026ada:	ee10 3a10 	vmov	r3, s0
 8026ade:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8026ae2:	3a19      	subs	r2, #25
 8026ae4:	f24c 3150 	movw	r1, #50000	; 0xc350
 8026ae8:	4288      	cmp	r0, r1
 8026aea:	dd15      	ble.n	8026b18 <scalbnf+0x68>
 8026aec:	eddf 7a1e 	vldr	s15, [pc, #120]	; 8026b68 <scalbnf+0xb8>
 8026af0:	eddf 6a1e 	vldr	s13, [pc, #120]	; 8026b6c <scalbnf+0xbc>
 8026af4:	ee10 3a10 	vmov	r3, s0
 8026af8:	eeb0 7a67 	vmov.f32	s14, s15
 8026afc:	2b00      	cmp	r3, #0
 8026afe:	bfb8      	it	lt
 8026b00:	eef0 7a66 	vmovlt.f32	s15, s13
 8026b04:	ee27 0a87 	vmul.f32	s0, s15, s14
 8026b08:	4770      	bx	lr
 8026b0a:	eddf 7a19 	vldr	s15, [pc, #100]	; 8026b70 <scalbnf+0xc0>
 8026b0e:	ee27 0a80 	vmul.f32	s0, s15, s0
 8026b12:	4770      	bx	lr
 8026b14:	0dd2      	lsrs	r2, r2, #23
 8026b16:	e7e5      	b.n	8026ae4 <scalbnf+0x34>
 8026b18:	4410      	add	r0, r2
 8026b1a:	28fe      	cmp	r0, #254	; 0xfe
 8026b1c:	dce6      	bgt.n	8026aec <scalbnf+0x3c>
 8026b1e:	2800      	cmp	r0, #0
 8026b20:	dd06      	ble.n	8026b30 <scalbnf+0x80>
 8026b22:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8026b26:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 8026b2a:	ee00 3a10 	vmov	s0, r3
 8026b2e:	4770      	bx	lr
 8026b30:	f110 0f16 	cmn.w	r0, #22
 8026b34:	da09      	bge.n	8026b4a <scalbnf+0x9a>
 8026b36:	eddf 7a0e 	vldr	s15, [pc, #56]	; 8026b70 <scalbnf+0xc0>
 8026b3a:	eddf 6a0e 	vldr	s13, [pc, #56]	; 8026b74 <scalbnf+0xc4>
 8026b3e:	ee10 3a10 	vmov	r3, s0
 8026b42:	eeb0 7a67 	vmov.f32	s14, s15
 8026b46:	2b00      	cmp	r3, #0
 8026b48:	e7d9      	b.n	8026afe <scalbnf+0x4e>
 8026b4a:	3019      	adds	r0, #25
 8026b4c:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8026b50:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 8026b54:	ed9f 0a08 	vldr	s0, [pc, #32]	; 8026b78 <scalbnf+0xc8>
 8026b58:	ee07 3a90 	vmov	s15, r3
 8026b5c:	e7d7      	b.n	8026b0e <scalbnf+0x5e>
 8026b5e:	bf00      	nop
 8026b60:	ffff3cb0 	.word	0xffff3cb0
 8026b64:	4c000000 	.word	0x4c000000
 8026b68:	7149f2ca 	.word	0x7149f2ca
 8026b6c:	f149f2ca 	.word	0xf149f2ca
 8026b70:	0da24260 	.word	0x0da24260
 8026b74:	8da24260 	.word	0x8da24260
 8026b78:	33000000 	.word	0x33000000

08026b7c <__kernel_rem_pio2f>:
 8026b7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026b80:	ed2d 8b04 	vpush	{d8-d9}
 8026b84:	b0d9      	sub	sp, #356	; 0x164
 8026b86:	4688      	mov	r8, r1
 8026b88:	9002      	str	r0, [sp, #8]
 8026b8a:	49b8      	ldr	r1, [pc, #736]	; (8026e6c <__kernel_rem_pio2f+0x2f0>)
 8026b8c:	9866      	ldr	r0, [sp, #408]	; 0x198
 8026b8e:	9301      	str	r3, [sp, #4]
 8026b90:	f851 a020 	ldr.w	sl, [r1, r0, lsl #2]
 8026b94:	9901      	ldr	r1, [sp, #4]
 8026b96:	9b67      	ldr	r3, [sp, #412]	; 0x19c
 8026b98:	f101 3bff 	add.w	fp, r1, #4294967295
 8026b9c:	1d11      	adds	r1, r2, #4
 8026b9e:	db25      	blt.n	8026bec <__kernel_rem_pio2f+0x70>
 8026ba0:	1ed0      	subs	r0, r2, #3
 8026ba2:	bf48      	it	mi
 8026ba4:	1d10      	addmi	r0, r2, #4
 8026ba6:	10c0      	asrs	r0, r0, #3
 8026ba8:	1c45      	adds	r5, r0, #1
 8026baa:	00e9      	lsls	r1, r5, #3
 8026bac:	eba0 070b 	sub.w	r7, r0, fp
 8026bb0:	ed9f 7ab2 	vldr	s14, [pc, #712]	; 8026e7c <__kernel_rem_pio2f+0x300>
 8026bb4:	9103      	str	r1, [sp, #12]
 8026bb6:	eba2 05c5 	sub.w	r5, r2, r5, lsl #3
 8026bba:	eb0a 0c0b 	add.w	ip, sl, fp
 8026bbe:	ae1c      	add	r6, sp, #112	; 0x70
 8026bc0:	eb03 0e87 	add.w	lr, r3, r7, lsl #2
 8026bc4:	2400      	movs	r4, #0
 8026bc6:	4564      	cmp	r4, ip
 8026bc8:	dd12      	ble.n	8026bf0 <__kernel_rem_pio2f+0x74>
 8026bca:	9901      	ldr	r1, [sp, #4]
 8026bcc:	ac1c      	add	r4, sp, #112	; 0x70
 8026bce:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8026bd2:	f50d 7988 	add.w	r9, sp, #272	; 0x110
 8026bd6:	f04f 0c00 	mov.w	ip, #0
 8026bda:	45d4      	cmp	ip, sl
 8026bdc:	dc27      	bgt.n	8026c2e <__kernel_rem_pio2f+0xb2>
 8026bde:	f8dd e008 	ldr.w	lr, [sp, #8]
 8026be2:	eddf 7aa6 	vldr	s15, [pc, #664]	; 8026e7c <__kernel_rem_pio2f+0x300>
 8026be6:	4627      	mov	r7, r4
 8026be8:	2600      	movs	r6, #0
 8026bea:	e016      	b.n	8026c1a <__kernel_rem_pio2f+0x9e>
 8026bec:	2000      	movs	r0, #0
 8026bee:	e7db      	b.n	8026ba8 <__kernel_rem_pio2f+0x2c>
 8026bf0:	42e7      	cmn	r7, r4
 8026bf2:	bf5d      	ittte	pl
 8026bf4:	f85e 1024 	ldrpl.w	r1, [lr, r4, lsl #2]
 8026bf8:	ee07 1a90 	vmovpl	s15, r1
 8026bfc:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 8026c00:	eef0 7a47 	vmovmi.f32	s15, s14
 8026c04:	ece6 7a01 	vstmia	r6!, {s15}
 8026c08:	3401      	adds	r4, #1
 8026c0a:	e7dc      	b.n	8026bc6 <__kernel_rem_pio2f+0x4a>
 8026c0c:	ecfe 6a01 	vldmia	lr!, {s13}
 8026c10:	ed97 7a00 	vldr	s14, [r7]
 8026c14:	eee6 7a87 	vfma.f32	s15, s13, s14
 8026c18:	3601      	adds	r6, #1
 8026c1a:	455e      	cmp	r6, fp
 8026c1c:	f1a7 0704 	sub.w	r7, r7, #4
 8026c20:	ddf4      	ble.n	8026c0c <__kernel_rem_pio2f+0x90>
 8026c22:	ece9 7a01 	vstmia	r9!, {s15}
 8026c26:	f10c 0c01 	add.w	ip, ip, #1
 8026c2a:	3404      	adds	r4, #4
 8026c2c:	e7d5      	b.n	8026bda <__kernel_rem_pio2f+0x5e>
 8026c2e:	a908      	add	r1, sp, #32
 8026c30:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8026c34:	eb03 0380 	add.w	r3, r3, r0, lsl #2
 8026c38:	eddf 8a8f 	vldr	s17, [pc, #572]	; 8026e78 <__kernel_rem_pio2f+0x2fc>
 8026c3c:	ed9f 9a8d 	vldr	s18, [pc, #564]	; 8026e74 <__kernel_rem_pio2f+0x2f8>
 8026c40:	9105      	str	r1, [sp, #20]
 8026c42:	9304      	str	r3, [sp, #16]
 8026c44:	4656      	mov	r6, sl
 8026c46:	00b3      	lsls	r3, r6, #2
 8026c48:	9306      	str	r3, [sp, #24]
 8026c4a:	ab58      	add	r3, sp, #352	; 0x160
 8026c4c:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 8026c50:	ac08      	add	r4, sp, #32
 8026c52:	ab44      	add	r3, sp, #272	; 0x110
 8026c54:	ed10 0a14 	vldr	s0, [r0, #-80]	; 0xffffffb0
 8026c58:	46a4      	mov	ip, r4
 8026c5a:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 8026c5e:	4637      	mov	r7, r6
 8026c60:	2f00      	cmp	r7, #0
 8026c62:	f1a0 0004 	sub.w	r0, r0, #4
 8026c66:	dc4a      	bgt.n	8026cfe <__kernel_rem_pio2f+0x182>
 8026c68:	4628      	mov	r0, r5
 8026c6a:	9207      	str	r2, [sp, #28]
 8026c6c:	f7ff ff20 	bl	8026ab0 <scalbnf>
 8026c70:	eeb0 8a40 	vmov.f32	s16, s0
 8026c74:	eeb4 0a00 	vmov.f32	s0, #64	; 0x3e000000  0.125
 8026c78:	ee28 0a00 	vmul.f32	s0, s16, s0
 8026c7c:	f7ff fcfc 	bl	8026678 <floorf>
 8026c80:	eef2 7a00 	vmov.f32	s15, #32	; 0x41000000  8.0
 8026c84:	eea0 8a67 	vfms.f32	s16, s0, s15
 8026c88:	2d00      	cmp	r5, #0
 8026c8a:	9a07      	ldr	r2, [sp, #28]
 8026c8c:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 8026c90:	ee17 9a90 	vmov	r9, s15
 8026c94:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8026c98:	ee38 8a67 	vsub.f32	s16, s16, s15
 8026c9c:	dd41      	ble.n	8026d22 <__kernel_rem_pio2f+0x1a6>
 8026c9e:	f106 3cff 	add.w	ip, r6, #4294967295
 8026ca2:	ab08      	add	r3, sp, #32
 8026ca4:	f1c5 0e08 	rsb	lr, r5, #8
 8026ca8:	f853 702c 	ldr.w	r7, [r3, ip, lsl #2]
 8026cac:	fa47 f00e 	asr.w	r0, r7, lr
 8026cb0:	4481      	add	r9, r0
 8026cb2:	fa00 f00e 	lsl.w	r0, r0, lr
 8026cb6:	1a3f      	subs	r7, r7, r0
 8026cb8:	f1c5 0007 	rsb	r0, r5, #7
 8026cbc:	f843 702c 	str.w	r7, [r3, ip, lsl #2]
 8026cc0:	4107      	asrs	r7, r0
 8026cc2:	2f00      	cmp	r7, #0
 8026cc4:	dd3c      	ble.n	8026d40 <__kernel_rem_pio2f+0x1c4>
 8026cc6:	f04f 0e00 	mov.w	lr, #0
 8026cca:	f109 0901 	add.w	r9, r9, #1
 8026cce:	4671      	mov	r1, lr
 8026cd0:	4576      	cmp	r6, lr
 8026cd2:	dc67      	bgt.n	8026da4 <__kernel_rem_pio2f+0x228>
 8026cd4:	2d00      	cmp	r5, #0
 8026cd6:	dd03      	ble.n	8026ce0 <__kernel_rem_pio2f+0x164>
 8026cd8:	2d01      	cmp	r5, #1
 8026cda:	d074      	beq.n	8026dc6 <__kernel_rem_pio2f+0x24a>
 8026cdc:	2d02      	cmp	r5, #2
 8026cde:	d07b      	beq.n	8026dd8 <__kernel_rem_pio2f+0x25c>
 8026ce0:	2f02      	cmp	r7, #2
 8026ce2:	d12d      	bne.n	8026d40 <__kernel_rem_pio2f+0x1c4>
 8026ce4:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 8026ce8:	ee30 8a48 	vsub.f32	s16, s0, s16
 8026cec:	b341      	cbz	r1, 8026d40 <__kernel_rem_pio2f+0x1c4>
 8026cee:	4628      	mov	r0, r5
 8026cf0:	9207      	str	r2, [sp, #28]
 8026cf2:	f7ff fedd 	bl	8026ab0 <scalbnf>
 8026cf6:	9a07      	ldr	r2, [sp, #28]
 8026cf8:	ee38 8a40 	vsub.f32	s16, s16, s0
 8026cfc:	e020      	b.n	8026d40 <__kernel_rem_pio2f+0x1c4>
 8026cfe:	ee60 7a28 	vmul.f32	s15, s0, s17
 8026d02:	3f01      	subs	r7, #1
 8026d04:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8026d08:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8026d0c:	eea7 0ac9 	vfms.f32	s0, s15, s18
 8026d10:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8026d14:	ecac 0a01 	vstmia	ip!, {s0}
 8026d18:	ed90 0a00 	vldr	s0, [r0]
 8026d1c:	ee37 0a80 	vadd.f32	s0, s15, s0
 8026d20:	e79e      	b.n	8026c60 <__kernel_rem_pio2f+0xe4>
 8026d22:	d105      	bne.n	8026d30 <__kernel_rem_pio2f+0x1b4>
 8026d24:	1e70      	subs	r0, r6, #1
 8026d26:	ab08      	add	r3, sp, #32
 8026d28:	f853 7020 	ldr.w	r7, [r3, r0, lsl #2]
 8026d2c:	11ff      	asrs	r7, r7, #7
 8026d2e:	e7c8      	b.n	8026cc2 <__kernel_rem_pio2f+0x146>
 8026d30:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8026d34:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8026d38:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026d3c:	da30      	bge.n	8026da0 <__kernel_rem_pio2f+0x224>
 8026d3e:	2700      	movs	r7, #0
 8026d40:	eeb5 8a40 	vcmp.f32	s16, #0.0
 8026d44:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026d48:	f040 809a 	bne.w	8026e80 <__kernel_rem_pio2f+0x304>
 8026d4c:	1e74      	subs	r4, r6, #1
 8026d4e:	46a4      	mov	ip, r4
 8026d50:	2100      	movs	r1, #0
 8026d52:	45d4      	cmp	ip, sl
 8026d54:	da47      	bge.n	8026de6 <__kernel_rem_pio2f+0x26a>
 8026d56:	2900      	cmp	r1, #0
 8026d58:	d063      	beq.n	8026e22 <__kernel_rem_pio2f+0x2a6>
 8026d5a:	ab08      	add	r3, sp, #32
 8026d5c:	3d08      	subs	r5, #8
 8026d5e:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 8026d62:	2b00      	cmp	r3, #0
 8026d64:	d07f      	beq.n	8026e66 <__kernel_rem_pio2f+0x2ea>
 8026d66:	4628      	mov	r0, r5
 8026d68:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 8026d6c:	f7ff fea0 	bl	8026ab0 <scalbnf>
 8026d70:	1c63      	adds	r3, r4, #1
 8026d72:	aa44      	add	r2, sp, #272	; 0x110
 8026d74:	ed9f 7a40 	vldr	s14, [pc, #256]	; 8026e78 <__kernel_rem_pio2f+0x2fc>
 8026d78:	0099      	lsls	r1, r3, #2
 8026d7a:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 8026d7e:	4623      	mov	r3, r4
 8026d80:	2b00      	cmp	r3, #0
 8026d82:	f280 80ad 	bge.w	8026ee0 <__kernel_rem_pio2f+0x364>
 8026d86:	4623      	mov	r3, r4
 8026d88:	2b00      	cmp	r3, #0
 8026d8a:	f2c0 80cb 	blt.w	8026f24 <__kernel_rem_pio2f+0x3a8>
 8026d8e:	aa44      	add	r2, sp, #272	; 0x110
 8026d90:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 8026d94:	4e36      	ldr	r6, [pc, #216]	; (8026e70 <__kernel_rem_pio2f+0x2f4>)
 8026d96:	eddf 7a39 	vldr	s15, [pc, #228]	; 8026e7c <__kernel_rem_pio2f+0x300>
 8026d9a:	2000      	movs	r0, #0
 8026d9c:	1ae2      	subs	r2, r4, r3
 8026d9e:	e0b6      	b.n	8026f0e <__kernel_rem_pio2f+0x392>
 8026da0:	2702      	movs	r7, #2
 8026da2:	e790      	b.n	8026cc6 <__kernel_rem_pio2f+0x14a>
 8026da4:	6820      	ldr	r0, [r4, #0]
 8026da6:	b949      	cbnz	r1, 8026dbc <__kernel_rem_pio2f+0x240>
 8026da8:	b118      	cbz	r0, 8026db2 <__kernel_rem_pio2f+0x236>
 8026daa:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8026dae:	6020      	str	r0, [r4, #0]
 8026db0:	2001      	movs	r0, #1
 8026db2:	f10e 0e01 	add.w	lr, lr, #1
 8026db6:	3404      	adds	r4, #4
 8026db8:	4601      	mov	r1, r0
 8026dba:	e789      	b.n	8026cd0 <__kernel_rem_pio2f+0x154>
 8026dbc:	f1c0 00ff 	rsb	r0, r0, #255	; 0xff
 8026dc0:	6020      	str	r0, [r4, #0]
 8026dc2:	4608      	mov	r0, r1
 8026dc4:	e7f5      	b.n	8026db2 <__kernel_rem_pio2f+0x236>
 8026dc6:	1e74      	subs	r4, r6, #1
 8026dc8:	ab08      	add	r3, sp, #32
 8026dca:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8026dce:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8026dd2:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 8026dd6:	e783      	b.n	8026ce0 <__kernel_rem_pio2f+0x164>
 8026dd8:	1e74      	subs	r4, r6, #1
 8026dda:	ab08      	add	r3, sp, #32
 8026ddc:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8026de0:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 8026de4:	e7f5      	b.n	8026dd2 <__kernel_rem_pio2f+0x256>
 8026de6:	ab08      	add	r3, sp, #32
 8026de8:	f853 002c 	ldr.w	r0, [r3, ip, lsl #2]
 8026dec:	f10c 3cff 	add.w	ip, ip, #4294967295
 8026df0:	4301      	orrs	r1, r0
 8026df2:	e7ae      	b.n	8026d52 <__kernel_rem_pio2f+0x1d6>
 8026df4:	3001      	adds	r0, #1
 8026df6:	f854 7d04 	ldr.w	r7, [r4, #-4]!
 8026dfa:	2f00      	cmp	r7, #0
 8026dfc:	d0fa      	beq.n	8026df4 <__kernel_rem_pio2f+0x278>
 8026dfe:	9b06      	ldr	r3, [sp, #24]
 8026e00:	f503 73b0 	add.w	r3, r3, #352	; 0x160
 8026e04:	eb0d 0403 	add.w	r4, sp, r3
 8026e08:	9b01      	ldr	r3, [sp, #4]
 8026e0a:	18f7      	adds	r7, r6, r3
 8026e0c:	ab1c      	add	r3, sp, #112	; 0x70
 8026e0e:	f106 0c01 	add.w	ip, r6, #1
 8026e12:	3c4c      	subs	r4, #76	; 0x4c
 8026e14:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 8026e18:	4430      	add	r0, r6
 8026e1a:	4560      	cmp	r0, ip
 8026e1c:	da04      	bge.n	8026e28 <__kernel_rem_pio2f+0x2ac>
 8026e1e:	4606      	mov	r6, r0
 8026e20:	e711      	b.n	8026c46 <__kernel_rem_pio2f+0xca>
 8026e22:	9c05      	ldr	r4, [sp, #20]
 8026e24:	2001      	movs	r0, #1
 8026e26:	e7e6      	b.n	8026df6 <__kernel_rem_pio2f+0x27a>
 8026e28:	9b04      	ldr	r3, [sp, #16]
 8026e2a:	f8dd e008 	ldr.w	lr, [sp, #8]
 8026e2e:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8026e32:	9306      	str	r3, [sp, #24]
 8026e34:	ee07 3a90 	vmov	s15, r3
 8026e38:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8026e3c:	2600      	movs	r6, #0
 8026e3e:	ece7 7a01 	vstmia	r7!, {s15}
 8026e42:	eddf 7a0e 	vldr	s15, [pc, #56]	; 8026e7c <__kernel_rem_pio2f+0x300>
 8026e46:	46b9      	mov	r9, r7
 8026e48:	455e      	cmp	r6, fp
 8026e4a:	dd04      	ble.n	8026e56 <__kernel_rem_pio2f+0x2da>
 8026e4c:	ece4 7a01 	vstmia	r4!, {s15}
 8026e50:	f10c 0c01 	add.w	ip, ip, #1
 8026e54:	e7e1      	b.n	8026e1a <__kernel_rem_pio2f+0x29e>
 8026e56:	ecfe 6a01 	vldmia	lr!, {s13}
 8026e5a:	ed39 7a01 	vldmdb	r9!, {s14}
 8026e5e:	3601      	adds	r6, #1
 8026e60:	eee6 7a87 	vfma.f32	s15, s13, s14
 8026e64:	e7f0      	b.n	8026e48 <__kernel_rem_pio2f+0x2cc>
 8026e66:	3c01      	subs	r4, #1
 8026e68:	e777      	b.n	8026d5a <__kernel_rem_pio2f+0x1de>
 8026e6a:	bf00      	nop
 8026e6c:	0802bd54 	.word	0x0802bd54
 8026e70:	0802bd28 	.word	0x0802bd28
 8026e74:	43800000 	.word	0x43800000
 8026e78:	3b800000 	.word	0x3b800000
 8026e7c:	00000000 	.word	0x00000000
 8026e80:	9b03      	ldr	r3, [sp, #12]
 8026e82:	eeb0 0a48 	vmov.f32	s0, s16
 8026e86:	1a98      	subs	r0, r3, r2
 8026e88:	f7ff fe12 	bl	8026ab0 <scalbnf>
 8026e8c:	ed1f 7a07 	vldr	s14, [pc, #-28]	; 8026e74 <__kernel_rem_pio2f+0x2f8>
 8026e90:	eeb4 0ac7 	vcmpe.f32	s0, s14
 8026e94:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026e98:	db19      	blt.n	8026ece <__kernel_rem_pio2f+0x352>
 8026e9a:	ed5f 7a09 	vldr	s15, [pc, #-36]	; 8026e78 <__kernel_rem_pio2f+0x2fc>
 8026e9e:	ee60 7a27 	vmul.f32	s15, s0, s15
 8026ea2:	aa08      	add	r2, sp, #32
 8026ea4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8026ea8:	1c74      	adds	r4, r6, #1
 8026eaa:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8026eae:	3508      	adds	r5, #8
 8026eb0:	eea7 0ac7 	vfms.f32	s0, s15, s14
 8026eb4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8026eb8:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8026ebc:	ee10 3a10 	vmov	r3, s0
 8026ec0:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 8026ec4:	ee17 3a90 	vmov	r3, s15
 8026ec8:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 8026ecc:	e74b      	b.n	8026d66 <__kernel_rem_pio2f+0x1ea>
 8026ece:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8026ed2:	aa08      	add	r2, sp, #32
 8026ed4:	ee10 3a10 	vmov	r3, s0
 8026ed8:	4634      	mov	r4, r6
 8026eda:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 8026ede:	e742      	b.n	8026d66 <__kernel_rem_pio2f+0x1ea>
 8026ee0:	a808      	add	r0, sp, #32
 8026ee2:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 8026ee6:	9001      	str	r0, [sp, #4]
 8026ee8:	ee07 0a90 	vmov	s15, r0
 8026eec:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8026ef0:	3b01      	subs	r3, #1
 8026ef2:	ee67 7a80 	vmul.f32	s15, s15, s0
 8026ef6:	ee20 0a07 	vmul.f32	s0, s0, s14
 8026efa:	ed62 7a01 	vstmdb	r2!, {s15}
 8026efe:	e73f      	b.n	8026d80 <__kernel_rem_pio2f+0x204>
 8026f00:	ecf6 6a01 	vldmia	r6!, {s13}
 8026f04:	ecb5 7a01 	vldmia	r5!, {s14}
 8026f08:	eee6 7a87 	vfma.f32	s15, s13, s14
 8026f0c:	3001      	adds	r0, #1
 8026f0e:	4550      	cmp	r0, sl
 8026f10:	dc01      	bgt.n	8026f16 <__kernel_rem_pio2f+0x39a>
 8026f12:	4290      	cmp	r0, r2
 8026f14:	ddf4      	ble.n	8026f00 <__kernel_rem_pio2f+0x384>
 8026f16:	a858      	add	r0, sp, #352	; 0x160
 8026f18:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 8026f1c:	ed42 7a28 	vstr	s15, [r2, #-160]	; 0xffffff60
 8026f20:	3b01      	subs	r3, #1
 8026f22:	e731      	b.n	8026d88 <__kernel_rem_pio2f+0x20c>
 8026f24:	9b66      	ldr	r3, [sp, #408]	; 0x198
 8026f26:	2b02      	cmp	r3, #2
 8026f28:	dc09      	bgt.n	8026f3e <__kernel_rem_pio2f+0x3c2>
 8026f2a:	2b00      	cmp	r3, #0
 8026f2c:	dc2b      	bgt.n	8026f86 <__kernel_rem_pio2f+0x40a>
 8026f2e:	d044      	beq.n	8026fba <__kernel_rem_pio2f+0x43e>
 8026f30:	f009 0007 	and.w	r0, r9, #7
 8026f34:	b059      	add	sp, #356	; 0x164
 8026f36:	ecbd 8b04 	vpop	{d8-d9}
 8026f3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026f3e:	9b66      	ldr	r3, [sp, #408]	; 0x198
 8026f40:	2b03      	cmp	r3, #3
 8026f42:	d1f5      	bne.n	8026f30 <__kernel_rem_pio2f+0x3b4>
 8026f44:	aa30      	add	r2, sp, #192	; 0xc0
 8026f46:	1f0b      	subs	r3, r1, #4
 8026f48:	4413      	add	r3, r2
 8026f4a:	461a      	mov	r2, r3
 8026f4c:	4620      	mov	r0, r4
 8026f4e:	2800      	cmp	r0, #0
 8026f50:	f1a2 0204 	sub.w	r2, r2, #4
 8026f54:	dc52      	bgt.n	8026ffc <__kernel_rem_pio2f+0x480>
 8026f56:	4622      	mov	r2, r4
 8026f58:	2a01      	cmp	r2, #1
 8026f5a:	f1a3 0304 	sub.w	r3, r3, #4
 8026f5e:	dc5d      	bgt.n	802701c <__kernel_rem_pio2f+0x4a0>
 8026f60:	ab30      	add	r3, sp, #192	; 0xc0
 8026f62:	ed5f 7a3a 	vldr	s15, [pc, #-232]	; 8026e7c <__kernel_rem_pio2f+0x300>
 8026f66:	440b      	add	r3, r1
 8026f68:	2c01      	cmp	r4, #1
 8026f6a:	dc67      	bgt.n	802703c <__kernel_rem_pio2f+0x4c0>
 8026f6c:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 8026f70:	ed9d 7a31 	vldr	s14, [sp, #196]	; 0xc4
 8026f74:	2f00      	cmp	r7, #0
 8026f76:	d167      	bne.n	8027048 <__kernel_rem_pio2f+0x4cc>
 8026f78:	edc8 6a00 	vstr	s13, [r8]
 8026f7c:	ed88 7a01 	vstr	s14, [r8, #4]
 8026f80:	edc8 7a02 	vstr	s15, [r8, #8]
 8026f84:	e7d4      	b.n	8026f30 <__kernel_rem_pio2f+0x3b4>
 8026f86:	ab30      	add	r3, sp, #192	; 0xc0
 8026f88:	ed1f 7a44 	vldr	s14, [pc, #-272]	; 8026e7c <__kernel_rem_pio2f+0x300>
 8026f8c:	440b      	add	r3, r1
 8026f8e:	4622      	mov	r2, r4
 8026f90:	2a00      	cmp	r2, #0
 8026f92:	da24      	bge.n	8026fde <__kernel_rem_pio2f+0x462>
 8026f94:	b34f      	cbz	r7, 8026fea <__kernel_rem_pio2f+0x46e>
 8026f96:	eef1 7a47 	vneg.f32	s15, s14
 8026f9a:	edc8 7a00 	vstr	s15, [r8]
 8026f9e:	eddd 7a30 	vldr	s15, [sp, #192]	; 0xc0
 8026fa2:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8026fa6:	aa31      	add	r2, sp, #196	; 0xc4
 8026fa8:	2301      	movs	r3, #1
 8026faa:	429c      	cmp	r4, r3
 8026fac:	da20      	bge.n	8026ff0 <__kernel_rem_pio2f+0x474>
 8026fae:	b10f      	cbz	r7, 8026fb4 <__kernel_rem_pio2f+0x438>
 8026fb0:	eef1 7a67 	vneg.f32	s15, s15
 8026fb4:	edc8 7a01 	vstr	s15, [r8, #4]
 8026fb8:	e7ba      	b.n	8026f30 <__kernel_rem_pio2f+0x3b4>
 8026fba:	ab30      	add	r3, sp, #192	; 0xc0
 8026fbc:	ed5f 7a51 	vldr	s15, [pc, #-324]	; 8026e7c <__kernel_rem_pio2f+0x300>
 8026fc0:	440b      	add	r3, r1
 8026fc2:	2c00      	cmp	r4, #0
 8026fc4:	da05      	bge.n	8026fd2 <__kernel_rem_pio2f+0x456>
 8026fc6:	b10f      	cbz	r7, 8026fcc <__kernel_rem_pio2f+0x450>
 8026fc8:	eef1 7a67 	vneg.f32	s15, s15
 8026fcc:	edc8 7a00 	vstr	s15, [r8]
 8026fd0:	e7ae      	b.n	8026f30 <__kernel_rem_pio2f+0x3b4>
 8026fd2:	ed33 7a01 	vldmdb	r3!, {s14}
 8026fd6:	3c01      	subs	r4, #1
 8026fd8:	ee77 7a87 	vadd.f32	s15, s15, s14
 8026fdc:	e7f1      	b.n	8026fc2 <__kernel_rem_pio2f+0x446>
 8026fde:	ed73 7a01 	vldmdb	r3!, {s15}
 8026fe2:	3a01      	subs	r2, #1
 8026fe4:	ee37 7a27 	vadd.f32	s14, s14, s15
 8026fe8:	e7d2      	b.n	8026f90 <__kernel_rem_pio2f+0x414>
 8026fea:	eef0 7a47 	vmov.f32	s15, s14
 8026fee:	e7d4      	b.n	8026f9a <__kernel_rem_pio2f+0x41e>
 8026ff0:	ecb2 7a01 	vldmia	r2!, {s14}
 8026ff4:	3301      	adds	r3, #1
 8026ff6:	ee77 7a87 	vadd.f32	s15, s15, s14
 8026ffa:	e7d6      	b.n	8026faa <__kernel_rem_pio2f+0x42e>
 8026ffc:	edd2 7a00 	vldr	s15, [r2]
 8027000:	edd2 6a01 	vldr	s13, [r2, #4]
 8027004:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8027008:	3801      	subs	r0, #1
 802700a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802700e:	ed82 7a00 	vstr	s14, [r2]
 8027012:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8027016:	edc2 7a01 	vstr	s15, [r2, #4]
 802701a:	e798      	b.n	8026f4e <__kernel_rem_pio2f+0x3d2>
 802701c:	edd3 7a00 	vldr	s15, [r3]
 8027020:	edd3 6a01 	vldr	s13, [r3, #4]
 8027024:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8027028:	3a01      	subs	r2, #1
 802702a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802702e:	ed83 7a00 	vstr	s14, [r3]
 8027032:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8027036:	edc3 7a01 	vstr	s15, [r3, #4]
 802703a:	e78d      	b.n	8026f58 <__kernel_rem_pio2f+0x3dc>
 802703c:	ed33 7a01 	vldmdb	r3!, {s14}
 8027040:	3c01      	subs	r4, #1
 8027042:	ee77 7a87 	vadd.f32	s15, s15, s14
 8027046:	e78f      	b.n	8026f68 <__kernel_rem_pio2f+0x3ec>
 8027048:	eef1 6a66 	vneg.f32	s13, s13
 802704c:	eeb1 7a47 	vneg.f32	s14, s14
 8027050:	edc8 6a00 	vstr	s13, [r8]
 8027054:	ed88 7a01 	vstr	s14, [r8, #4]
 8027058:	eef1 7a67 	vneg.f32	s15, s15
 802705c:	e790      	b.n	8026f80 <__kernel_rem_pio2f+0x404>
 802705e:	bf00      	nop

08027060 <abort>:
 8027060:	b508      	push	{r3, lr}
 8027062:	2006      	movs	r0, #6
 8027064:	f000 fa3a 	bl	80274dc <raise>
 8027068:	2001      	movs	r0, #1
 802706a:	f7db f893 	bl	8002194 <_exit>
	...

08027070 <__assert_func>:
 8027070:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8027072:	4614      	mov	r4, r2
 8027074:	461a      	mov	r2, r3
 8027076:	4b09      	ldr	r3, [pc, #36]	; (802709c <__assert_func+0x2c>)
 8027078:	681b      	ldr	r3, [r3, #0]
 802707a:	4605      	mov	r5, r0
 802707c:	68d8      	ldr	r0, [r3, #12]
 802707e:	b14c      	cbz	r4, 8027094 <__assert_func+0x24>
 8027080:	4b07      	ldr	r3, [pc, #28]	; (80270a0 <__assert_func+0x30>)
 8027082:	9100      	str	r1, [sp, #0]
 8027084:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8027088:	4906      	ldr	r1, [pc, #24]	; (80270a4 <__assert_func+0x34>)
 802708a:	462b      	mov	r3, r5
 802708c:	f000 f982 	bl	8027394 <fiprintf>
 8027090:	f7ff ffe6 	bl	8027060 <abort>
 8027094:	4b04      	ldr	r3, [pc, #16]	; (80270a8 <__assert_func+0x38>)
 8027096:	461c      	mov	r4, r3
 8027098:	e7f3      	b.n	8027082 <__assert_func+0x12>
 802709a:	bf00      	nop
 802709c:	20000160 	.word	0x20000160
 80270a0:	0802bd60 	.word	0x0802bd60
 80270a4:	0802bd6d 	.word	0x0802bd6d
 80270a8:	0802bd9b 	.word	0x0802bd9b

080270ac <atexit>:
 80270ac:	2300      	movs	r3, #0
 80270ae:	4601      	mov	r1, r0
 80270b0:	461a      	mov	r2, r3
 80270b2:	4618      	mov	r0, r3
 80270b4:	f000 bb16 	b.w	80276e4 <__register_exitproc>

080270b8 <malloc>:
 80270b8:	4b02      	ldr	r3, [pc, #8]	; (80270c4 <malloc+0xc>)
 80270ba:	4601      	mov	r1, r0
 80270bc:	6818      	ldr	r0, [r3, #0]
 80270be:	f000 b82b 	b.w	8027118 <_malloc_r>
 80270c2:	bf00      	nop
 80270c4:	20000160 	.word	0x20000160

080270c8 <free>:
 80270c8:	4b02      	ldr	r3, [pc, #8]	; (80270d4 <free+0xc>)
 80270ca:	4601      	mov	r1, r0
 80270cc:	6818      	ldr	r0, [r3, #0]
 80270ce:	f000 bb67 	b.w	80277a0 <_free_r>
 80270d2:	bf00      	nop
 80270d4:	20000160 	.word	0x20000160

080270d8 <sbrk_aligned>:
 80270d8:	b570      	push	{r4, r5, r6, lr}
 80270da:	4e0e      	ldr	r6, [pc, #56]	; (8027114 <sbrk_aligned+0x3c>)
 80270dc:	460c      	mov	r4, r1
 80270de:	6831      	ldr	r1, [r6, #0]
 80270e0:	4605      	mov	r5, r0
 80270e2:	b911      	cbnz	r1, 80270ea <sbrk_aligned+0x12>
 80270e4:	f000 faa0 	bl	8027628 <_sbrk_r>
 80270e8:	6030      	str	r0, [r6, #0]
 80270ea:	4621      	mov	r1, r4
 80270ec:	4628      	mov	r0, r5
 80270ee:	f000 fa9b 	bl	8027628 <_sbrk_r>
 80270f2:	1c43      	adds	r3, r0, #1
 80270f4:	d00a      	beq.n	802710c <sbrk_aligned+0x34>
 80270f6:	1cc4      	adds	r4, r0, #3
 80270f8:	f024 0403 	bic.w	r4, r4, #3
 80270fc:	42a0      	cmp	r0, r4
 80270fe:	d007      	beq.n	8027110 <sbrk_aligned+0x38>
 8027100:	1a21      	subs	r1, r4, r0
 8027102:	4628      	mov	r0, r5
 8027104:	f000 fa90 	bl	8027628 <_sbrk_r>
 8027108:	3001      	adds	r0, #1
 802710a:	d101      	bne.n	8027110 <sbrk_aligned+0x38>
 802710c:	f04f 34ff 	mov.w	r4, #4294967295
 8027110:	4620      	mov	r0, r4
 8027112:	bd70      	pop	{r4, r5, r6, pc}
 8027114:	20014114 	.word	0x20014114

08027118 <_malloc_r>:
 8027118:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802711c:	1ccd      	adds	r5, r1, #3
 802711e:	f025 0503 	bic.w	r5, r5, #3
 8027122:	3508      	adds	r5, #8
 8027124:	2d0c      	cmp	r5, #12
 8027126:	bf38      	it	cc
 8027128:	250c      	movcc	r5, #12
 802712a:	2d00      	cmp	r5, #0
 802712c:	4607      	mov	r7, r0
 802712e:	db01      	blt.n	8027134 <_malloc_r+0x1c>
 8027130:	42a9      	cmp	r1, r5
 8027132:	d905      	bls.n	8027140 <_malloc_r+0x28>
 8027134:	230c      	movs	r3, #12
 8027136:	603b      	str	r3, [r7, #0]
 8027138:	2600      	movs	r6, #0
 802713a:	4630      	mov	r0, r6
 802713c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8027140:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8027214 <_malloc_r+0xfc>
 8027144:	f000 f868 	bl	8027218 <__malloc_lock>
 8027148:	f8d8 3000 	ldr.w	r3, [r8]
 802714c:	461c      	mov	r4, r3
 802714e:	bb5c      	cbnz	r4, 80271a8 <_malloc_r+0x90>
 8027150:	4629      	mov	r1, r5
 8027152:	4638      	mov	r0, r7
 8027154:	f7ff ffc0 	bl	80270d8 <sbrk_aligned>
 8027158:	1c43      	adds	r3, r0, #1
 802715a:	4604      	mov	r4, r0
 802715c:	d155      	bne.n	802720a <_malloc_r+0xf2>
 802715e:	f8d8 4000 	ldr.w	r4, [r8]
 8027162:	4626      	mov	r6, r4
 8027164:	2e00      	cmp	r6, #0
 8027166:	d145      	bne.n	80271f4 <_malloc_r+0xdc>
 8027168:	2c00      	cmp	r4, #0
 802716a:	d048      	beq.n	80271fe <_malloc_r+0xe6>
 802716c:	6823      	ldr	r3, [r4, #0]
 802716e:	4631      	mov	r1, r6
 8027170:	4638      	mov	r0, r7
 8027172:	eb04 0903 	add.w	r9, r4, r3
 8027176:	f000 fa57 	bl	8027628 <_sbrk_r>
 802717a:	4581      	cmp	r9, r0
 802717c:	d13f      	bne.n	80271fe <_malloc_r+0xe6>
 802717e:	6821      	ldr	r1, [r4, #0]
 8027180:	1a6d      	subs	r5, r5, r1
 8027182:	4629      	mov	r1, r5
 8027184:	4638      	mov	r0, r7
 8027186:	f7ff ffa7 	bl	80270d8 <sbrk_aligned>
 802718a:	3001      	adds	r0, #1
 802718c:	d037      	beq.n	80271fe <_malloc_r+0xe6>
 802718e:	6823      	ldr	r3, [r4, #0]
 8027190:	442b      	add	r3, r5
 8027192:	6023      	str	r3, [r4, #0]
 8027194:	f8d8 3000 	ldr.w	r3, [r8]
 8027198:	2b00      	cmp	r3, #0
 802719a:	d038      	beq.n	802720e <_malloc_r+0xf6>
 802719c:	685a      	ldr	r2, [r3, #4]
 802719e:	42a2      	cmp	r2, r4
 80271a0:	d12b      	bne.n	80271fa <_malloc_r+0xe2>
 80271a2:	2200      	movs	r2, #0
 80271a4:	605a      	str	r2, [r3, #4]
 80271a6:	e00f      	b.n	80271c8 <_malloc_r+0xb0>
 80271a8:	6822      	ldr	r2, [r4, #0]
 80271aa:	1b52      	subs	r2, r2, r5
 80271ac:	d41f      	bmi.n	80271ee <_malloc_r+0xd6>
 80271ae:	2a0b      	cmp	r2, #11
 80271b0:	d917      	bls.n	80271e2 <_malloc_r+0xca>
 80271b2:	1961      	adds	r1, r4, r5
 80271b4:	42a3      	cmp	r3, r4
 80271b6:	6025      	str	r5, [r4, #0]
 80271b8:	bf18      	it	ne
 80271ba:	6059      	strne	r1, [r3, #4]
 80271bc:	6863      	ldr	r3, [r4, #4]
 80271be:	bf08      	it	eq
 80271c0:	f8c8 1000 	streq.w	r1, [r8]
 80271c4:	5162      	str	r2, [r4, r5]
 80271c6:	604b      	str	r3, [r1, #4]
 80271c8:	4638      	mov	r0, r7
 80271ca:	f104 060b 	add.w	r6, r4, #11
 80271ce:	f000 f829 	bl	8027224 <__malloc_unlock>
 80271d2:	f026 0607 	bic.w	r6, r6, #7
 80271d6:	1d23      	adds	r3, r4, #4
 80271d8:	1af2      	subs	r2, r6, r3
 80271da:	d0ae      	beq.n	802713a <_malloc_r+0x22>
 80271dc:	1b9b      	subs	r3, r3, r6
 80271de:	50a3      	str	r3, [r4, r2]
 80271e0:	e7ab      	b.n	802713a <_malloc_r+0x22>
 80271e2:	42a3      	cmp	r3, r4
 80271e4:	6862      	ldr	r2, [r4, #4]
 80271e6:	d1dd      	bne.n	80271a4 <_malloc_r+0x8c>
 80271e8:	f8c8 2000 	str.w	r2, [r8]
 80271ec:	e7ec      	b.n	80271c8 <_malloc_r+0xb0>
 80271ee:	4623      	mov	r3, r4
 80271f0:	6864      	ldr	r4, [r4, #4]
 80271f2:	e7ac      	b.n	802714e <_malloc_r+0x36>
 80271f4:	4634      	mov	r4, r6
 80271f6:	6876      	ldr	r6, [r6, #4]
 80271f8:	e7b4      	b.n	8027164 <_malloc_r+0x4c>
 80271fa:	4613      	mov	r3, r2
 80271fc:	e7cc      	b.n	8027198 <_malloc_r+0x80>
 80271fe:	230c      	movs	r3, #12
 8027200:	603b      	str	r3, [r7, #0]
 8027202:	4638      	mov	r0, r7
 8027204:	f000 f80e 	bl	8027224 <__malloc_unlock>
 8027208:	e797      	b.n	802713a <_malloc_r+0x22>
 802720a:	6025      	str	r5, [r4, #0]
 802720c:	e7dc      	b.n	80271c8 <_malloc_r+0xb0>
 802720e:	605b      	str	r3, [r3, #4]
 8027210:	deff      	udf	#255	; 0xff
 8027212:	bf00      	nop
 8027214:	20014110 	.word	0x20014110

08027218 <__malloc_lock>:
 8027218:	4801      	ldr	r0, [pc, #4]	; (8027220 <__malloc_lock+0x8>)
 802721a:	f000 ba52 	b.w	80276c2 <__retarget_lock_acquire_recursive>
 802721e:	bf00      	nop
 8027220:	20014259 	.word	0x20014259

08027224 <__malloc_unlock>:
 8027224:	4801      	ldr	r0, [pc, #4]	; (802722c <__malloc_unlock+0x8>)
 8027226:	f000 ba4d 	b.w	80276c4 <__retarget_lock_release_recursive>
 802722a:	bf00      	nop
 802722c:	20014259 	.word	0x20014259

08027230 <__cxa_atexit>:
 8027230:	b510      	push	{r4, lr}
 8027232:	4c05      	ldr	r4, [pc, #20]	; (8027248 <__cxa_atexit+0x18>)
 8027234:	4613      	mov	r3, r2
 8027236:	b12c      	cbz	r4, 8027244 <__cxa_atexit+0x14>
 8027238:	460a      	mov	r2, r1
 802723a:	4601      	mov	r1, r0
 802723c:	2002      	movs	r0, #2
 802723e:	f000 fa51 	bl	80276e4 <__register_exitproc>
 8027242:	bd10      	pop	{r4, pc}
 8027244:	4620      	mov	r0, r4
 8027246:	e7fc      	b.n	8027242 <__cxa_atexit+0x12>
 8027248:	080276e5 	.word	0x080276e5

0802724c <std>:
 802724c:	2300      	movs	r3, #0
 802724e:	b510      	push	{r4, lr}
 8027250:	4604      	mov	r4, r0
 8027252:	e9c0 3300 	strd	r3, r3, [r0]
 8027256:	e9c0 3304 	strd	r3, r3, [r0, #16]
 802725a:	6083      	str	r3, [r0, #8]
 802725c:	8181      	strh	r1, [r0, #12]
 802725e:	6643      	str	r3, [r0, #100]	; 0x64
 8027260:	81c2      	strh	r2, [r0, #14]
 8027262:	6183      	str	r3, [r0, #24]
 8027264:	4619      	mov	r1, r3
 8027266:	2208      	movs	r2, #8
 8027268:	305c      	adds	r0, #92	; 0x5c
 802726a:	f000 f906 	bl	802747a <memset>
 802726e:	4b0d      	ldr	r3, [pc, #52]	; (80272a4 <std+0x58>)
 8027270:	6263      	str	r3, [r4, #36]	; 0x24
 8027272:	4b0d      	ldr	r3, [pc, #52]	; (80272a8 <std+0x5c>)
 8027274:	62a3      	str	r3, [r4, #40]	; 0x28
 8027276:	4b0d      	ldr	r3, [pc, #52]	; (80272ac <std+0x60>)
 8027278:	62e3      	str	r3, [r4, #44]	; 0x2c
 802727a:	4b0d      	ldr	r3, [pc, #52]	; (80272b0 <std+0x64>)
 802727c:	6323      	str	r3, [r4, #48]	; 0x30
 802727e:	4b0d      	ldr	r3, [pc, #52]	; (80272b4 <std+0x68>)
 8027280:	6224      	str	r4, [r4, #32]
 8027282:	429c      	cmp	r4, r3
 8027284:	d006      	beq.n	8027294 <std+0x48>
 8027286:	f103 0268 	add.w	r2, r3, #104	; 0x68
 802728a:	4294      	cmp	r4, r2
 802728c:	d002      	beq.n	8027294 <std+0x48>
 802728e:	33d0      	adds	r3, #208	; 0xd0
 8027290:	429c      	cmp	r4, r3
 8027292:	d105      	bne.n	80272a0 <std+0x54>
 8027294:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8027298:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802729c:	f000 ba10 	b.w	80276c0 <__retarget_lock_init_recursive>
 80272a0:	bd10      	pop	{r4, pc}
 80272a2:	bf00      	nop
 80272a4:	080273f5 	.word	0x080273f5
 80272a8:	08027417 	.word	0x08027417
 80272ac:	0802744f 	.word	0x0802744f
 80272b0:	08027473 	.word	0x08027473
 80272b4:	20014118 	.word	0x20014118

080272b8 <stdio_exit_handler>:
 80272b8:	4a02      	ldr	r2, [pc, #8]	; (80272c4 <stdio_exit_handler+0xc>)
 80272ba:	4903      	ldr	r1, [pc, #12]	; (80272c8 <stdio_exit_handler+0x10>)
 80272bc:	4803      	ldr	r0, [pc, #12]	; (80272cc <stdio_exit_handler+0x14>)
 80272be:	f000 b87b 	b.w	80273b8 <_fwalk_sglue>
 80272c2:	bf00      	nop
 80272c4:	20000108 	.word	0x20000108
 80272c8:	08027eed 	.word	0x08027eed
 80272cc:	20000114 	.word	0x20000114

080272d0 <cleanup_stdio>:
 80272d0:	6841      	ldr	r1, [r0, #4]
 80272d2:	4b0c      	ldr	r3, [pc, #48]	; (8027304 <cleanup_stdio+0x34>)
 80272d4:	4299      	cmp	r1, r3
 80272d6:	b510      	push	{r4, lr}
 80272d8:	4604      	mov	r4, r0
 80272da:	d001      	beq.n	80272e0 <cleanup_stdio+0x10>
 80272dc:	f000 fe06 	bl	8027eec <_fflush_r>
 80272e0:	68a1      	ldr	r1, [r4, #8]
 80272e2:	4b09      	ldr	r3, [pc, #36]	; (8027308 <cleanup_stdio+0x38>)
 80272e4:	4299      	cmp	r1, r3
 80272e6:	d002      	beq.n	80272ee <cleanup_stdio+0x1e>
 80272e8:	4620      	mov	r0, r4
 80272ea:	f000 fdff 	bl	8027eec <_fflush_r>
 80272ee:	68e1      	ldr	r1, [r4, #12]
 80272f0:	4b06      	ldr	r3, [pc, #24]	; (802730c <cleanup_stdio+0x3c>)
 80272f2:	4299      	cmp	r1, r3
 80272f4:	d004      	beq.n	8027300 <cleanup_stdio+0x30>
 80272f6:	4620      	mov	r0, r4
 80272f8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80272fc:	f000 bdf6 	b.w	8027eec <_fflush_r>
 8027300:	bd10      	pop	{r4, pc}
 8027302:	bf00      	nop
 8027304:	20014118 	.word	0x20014118
 8027308:	20014180 	.word	0x20014180
 802730c:	200141e8 	.word	0x200141e8

08027310 <global_stdio_init.part.0>:
 8027310:	b510      	push	{r4, lr}
 8027312:	4b0b      	ldr	r3, [pc, #44]	; (8027340 <global_stdio_init.part.0+0x30>)
 8027314:	4c0b      	ldr	r4, [pc, #44]	; (8027344 <global_stdio_init.part.0+0x34>)
 8027316:	4a0c      	ldr	r2, [pc, #48]	; (8027348 <global_stdio_init.part.0+0x38>)
 8027318:	601a      	str	r2, [r3, #0]
 802731a:	4620      	mov	r0, r4
 802731c:	2200      	movs	r2, #0
 802731e:	2104      	movs	r1, #4
 8027320:	f7ff ff94 	bl	802724c <std>
 8027324:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8027328:	2201      	movs	r2, #1
 802732a:	2109      	movs	r1, #9
 802732c:	f7ff ff8e 	bl	802724c <std>
 8027330:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8027334:	2202      	movs	r2, #2
 8027336:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802733a:	2112      	movs	r1, #18
 802733c:	f7ff bf86 	b.w	802724c <std>
 8027340:	20014250 	.word	0x20014250
 8027344:	20014118 	.word	0x20014118
 8027348:	080272b9 	.word	0x080272b9

0802734c <__sfp_lock_acquire>:
 802734c:	4801      	ldr	r0, [pc, #4]	; (8027354 <__sfp_lock_acquire+0x8>)
 802734e:	f000 b9b8 	b.w	80276c2 <__retarget_lock_acquire_recursive>
 8027352:	bf00      	nop
 8027354:	2001425a 	.word	0x2001425a

08027358 <__sfp_lock_release>:
 8027358:	4801      	ldr	r0, [pc, #4]	; (8027360 <__sfp_lock_release+0x8>)
 802735a:	f000 b9b3 	b.w	80276c4 <__retarget_lock_release_recursive>
 802735e:	bf00      	nop
 8027360:	2001425a 	.word	0x2001425a

08027364 <__sinit>:
 8027364:	b510      	push	{r4, lr}
 8027366:	4604      	mov	r4, r0
 8027368:	f7ff fff0 	bl	802734c <__sfp_lock_acquire>
 802736c:	6a23      	ldr	r3, [r4, #32]
 802736e:	b11b      	cbz	r3, 8027378 <__sinit+0x14>
 8027370:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8027374:	f7ff bff0 	b.w	8027358 <__sfp_lock_release>
 8027378:	4b04      	ldr	r3, [pc, #16]	; (802738c <__sinit+0x28>)
 802737a:	6223      	str	r3, [r4, #32]
 802737c:	4b04      	ldr	r3, [pc, #16]	; (8027390 <__sinit+0x2c>)
 802737e:	681b      	ldr	r3, [r3, #0]
 8027380:	2b00      	cmp	r3, #0
 8027382:	d1f5      	bne.n	8027370 <__sinit+0xc>
 8027384:	f7ff ffc4 	bl	8027310 <global_stdio_init.part.0>
 8027388:	e7f2      	b.n	8027370 <__sinit+0xc>
 802738a:	bf00      	nop
 802738c:	080272d1 	.word	0x080272d1
 8027390:	20014250 	.word	0x20014250

08027394 <fiprintf>:
 8027394:	b40e      	push	{r1, r2, r3}
 8027396:	b503      	push	{r0, r1, lr}
 8027398:	4601      	mov	r1, r0
 802739a:	ab03      	add	r3, sp, #12
 802739c:	4805      	ldr	r0, [pc, #20]	; (80273b4 <fiprintf+0x20>)
 802739e:	f853 2b04 	ldr.w	r2, [r3], #4
 80273a2:	6800      	ldr	r0, [r0, #0]
 80273a4:	9301      	str	r3, [sp, #4]
 80273a6:	f000 fa71 	bl	802788c <_vfiprintf_r>
 80273aa:	b002      	add	sp, #8
 80273ac:	f85d eb04 	ldr.w	lr, [sp], #4
 80273b0:	b003      	add	sp, #12
 80273b2:	4770      	bx	lr
 80273b4:	20000160 	.word	0x20000160

080273b8 <_fwalk_sglue>:
 80273b8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80273bc:	4607      	mov	r7, r0
 80273be:	4688      	mov	r8, r1
 80273c0:	4614      	mov	r4, r2
 80273c2:	2600      	movs	r6, #0
 80273c4:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80273c8:	f1b9 0901 	subs.w	r9, r9, #1
 80273cc:	d505      	bpl.n	80273da <_fwalk_sglue+0x22>
 80273ce:	6824      	ldr	r4, [r4, #0]
 80273d0:	2c00      	cmp	r4, #0
 80273d2:	d1f7      	bne.n	80273c4 <_fwalk_sglue+0xc>
 80273d4:	4630      	mov	r0, r6
 80273d6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80273da:	89ab      	ldrh	r3, [r5, #12]
 80273dc:	2b01      	cmp	r3, #1
 80273de:	d907      	bls.n	80273f0 <_fwalk_sglue+0x38>
 80273e0:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80273e4:	3301      	adds	r3, #1
 80273e6:	d003      	beq.n	80273f0 <_fwalk_sglue+0x38>
 80273e8:	4629      	mov	r1, r5
 80273ea:	4638      	mov	r0, r7
 80273ec:	47c0      	blx	r8
 80273ee:	4306      	orrs	r6, r0
 80273f0:	3568      	adds	r5, #104	; 0x68
 80273f2:	e7e9      	b.n	80273c8 <_fwalk_sglue+0x10>

080273f4 <__sread>:
 80273f4:	b510      	push	{r4, lr}
 80273f6:	460c      	mov	r4, r1
 80273f8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80273fc:	f000 f8ee 	bl	80275dc <_read_r>
 8027400:	2800      	cmp	r0, #0
 8027402:	bfab      	itete	ge
 8027404:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8027406:	89a3      	ldrhlt	r3, [r4, #12]
 8027408:	181b      	addge	r3, r3, r0
 802740a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 802740e:	bfac      	ite	ge
 8027410:	6563      	strge	r3, [r4, #84]	; 0x54
 8027412:	81a3      	strhlt	r3, [r4, #12]
 8027414:	bd10      	pop	{r4, pc}

08027416 <__swrite>:
 8027416:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802741a:	461f      	mov	r7, r3
 802741c:	898b      	ldrh	r3, [r1, #12]
 802741e:	05db      	lsls	r3, r3, #23
 8027420:	4605      	mov	r5, r0
 8027422:	460c      	mov	r4, r1
 8027424:	4616      	mov	r6, r2
 8027426:	d505      	bpl.n	8027434 <__swrite+0x1e>
 8027428:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802742c:	2302      	movs	r3, #2
 802742e:	2200      	movs	r2, #0
 8027430:	f000 f8c2 	bl	80275b8 <_lseek_r>
 8027434:	89a3      	ldrh	r3, [r4, #12]
 8027436:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802743a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 802743e:	81a3      	strh	r3, [r4, #12]
 8027440:	4632      	mov	r2, r6
 8027442:	463b      	mov	r3, r7
 8027444:	4628      	mov	r0, r5
 8027446:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802744a:	f000 b8fd 	b.w	8027648 <_write_r>

0802744e <__sseek>:
 802744e:	b510      	push	{r4, lr}
 8027450:	460c      	mov	r4, r1
 8027452:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8027456:	f000 f8af 	bl	80275b8 <_lseek_r>
 802745a:	1c43      	adds	r3, r0, #1
 802745c:	89a3      	ldrh	r3, [r4, #12]
 802745e:	bf15      	itete	ne
 8027460:	6560      	strne	r0, [r4, #84]	; 0x54
 8027462:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8027466:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 802746a:	81a3      	strheq	r3, [r4, #12]
 802746c:	bf18      	it	ne
 802746e:	81a3      	strhne	r3, [r4, #12]
 8027470:	bd10      	pop	{r4, pc}

08027472 <__sclose>:
 8027472:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8027476:	f000 b839 	b.w	80274ec <_close_r>

0802747a <memset>:
 802747a:	4402      	add	r2, r0
 802747c:	4603      	mov	r3, r0
 802747e:	4293      	cmp	r3, r2
 8027480:	d100      	bne.n	8027484 <memset+0xa>
 8027482:	4770      	bx	lr
 8027484:	f803 1b01 	strb.w	r1, [r3], #1
 8027488:	e7f9      	b.n	802747e <memset+0x4>

0802748a <_raise_r>:
 802748a:	291f      	cmp	r1, #31
 802748c:	b538      	push	{r3, r4, r5, lr}
 802748e:	4604      	mov	r4, r0
 8027490:	460d      	mov	r5, r1
 8027492:	d904      	bls.n	802749e <_raise_r+0x14>
 8027494:	2316      	movs	r3, #22
 8027496:	6003      	str	r3, [r0, #0]
 8027498:	f04f 30ff 	mov.w	r0, #4294967295
 802749c:	bd38      	pop	{r3, r4, r5, pc}
 802749e:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 80274a0:	b112      	cbz	r2, 80274a8 <_raise_r+0x1e>
 80274a2:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80274a6:	b94b      	cbnz	r3, 80274bc <_raise_r+0x32>
 80274a8:	4620      	mov	r0, r4
 80274aa:	f000 f8bb 	bl	8027624 <_getpid_r>
 80274ae:	462a      	mov	r2, r5
 80274b0:	4601      	mov	r1, r0
 80274b2:	4620      	mov	r0, r4
 80274b4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80274b8:	f000 b8a2 	b.w	8027600 <_kill_r>
 80274bc:	2b01      	cmp	r3, #1
 80274be:	d00a      	beq.n	80274d6 <_raise_r+0x4c>
 80274c0:	1c59      	adds	r1, r3, #1
 80274c2:	d103      	bne.n	80274cc <_raise_r+0x42>
 80274c4:	2316      	movs	r3, #22
 80274c6:	6003      	str	r3, [r0, #0]
 80274c8:	2001      	movs	r0, #1
 80274ca:	e7e7      	b.n	802749c <_raise_r+0x12>
 80274cc:	2400      	movs	r4, #0
 80274ce:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 80274d2:	4628      	mov	r0, r5
 80274d4:	4798      	blx	r3
 80274d6:	2000      	movs	r0, #0
 80274d8:	e7e0      	b.n	802749c <_raise_r+0x12>
	...

080274dc <raise>:
 80274dc:	4b02      	ldr	r3, [pc, #8]	; (80274e8 <raise+0xc>)
 80274de:	4601      	mov	r1, r0
 80274e0:	6818      	ldr	r0, [r3, #0]
 80274e2:	f7ff bfd2 	b.w	802748a <_raise_r>
 80274e6:	bf00      	nop
 80274e8:	20000160 	.word	0x20000160

080274ec <_close_r>:
 80274ec:	b538      	push	{r3, r4, r5, lr}
 80274ee:	4d06      	ldr	r5, [pc, #24]	; (8027508 <_close_r+0x1c>)
 80274f0:	2300      	movs	r3, #0
 80274f2:	4604      	mov	r4, r0
 80274f4:	4608      	mov	r0, r1
 80274f6:	602b      	str	r3, [r5, #0]
 80274f8:	f7da fe6e 	bl	80021d8 <_close>
 80274fc:	1c43      	adds	r3, r0, #1
 80274fe:	d102      	bne.n	8027506 <_close_r+0x1a>
 8027500:	682b      	ldr	r3, [r5, #0]
 8027502:	b103      	cbz	r3, 8027506 <_close_r+0x1a>
 8027504:	6023      	str	r3, [r4, #0]
 8027506:	bd38      	pop	{r3, r4, r5, pc}
 8027508:	20014254 	.word	0x20014254

0802750c <_reclaim_reent>:
 802750c:	4b29      	ldr	r3, [pc, #164]	; (80275b4 <_reclaim_reent+0xa8>)
 802750e:	681b      	ldr	r3, [r3, #0]
 8027510:	4283      	cmp	r3, r0
 8027512:	b570      	push	{r4, r5, r6, lr}
 8027514:	4604      	mov	r4, r0
 8027516:	d04b      	beq.n	80275b0 <_reclaim_reent+0xa4>
 8027518:	69c3      	ldr	r3, [r0, #28]
 802751a:	b143      	cbz	r3, 802752e <_reclaim_reent+0x22>
 802751c:	68db      	ldr	r3, [r3, #12]
 802751e:	2b00      	cmp	r3, #0
 8027520:	d144      	bne.n	80275ac <_reclaim_reent+0xa0>
 8027522:	69e3      	ldr	r3, [r4, #28]
 8027524:	6819      	ldr	r1, [r3, #0]
 8027526:	b111      	cbz	r1, 802752e <_reclaim_reent+0x22>
 8027528:	4620      	mov	r0, r4
 802752a:	f000 f939 	bl	80277a0 <_free_r>
 802752e:	6961      	ldr	r1, [r4, #20]
 8027530:	b111      	cbz	r1, 8027538 <_reclaim_reent+0x2c>
 8027532:	4620      	mov	r0, r4
 8027534:	f000 f934 	bl	80277a0 <_free_r>
 8027538:	69e1      	ldr	r1, [r4, #28]
 802753a:	b111      	cbz	r1, 8027542 <_reclaim_reent+0x36>
 802753c:	4620      	mov	r0, r4
 802753e:	f000 f92f 	bl	80277a0 <_free_r>
 8027542:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8027544:	b111      	cbz	r1, 802754c <_reclaim_reent+0x40>
 8027546:	4620      	mov	r0, r4
 8027548:	f000 f92a 	bl	80277a0 <_free_r>
 802754c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802754e:	b111      	cbz	r1, 8027556 <_reclaim_reent+0x4a>
 8027550:	4620      	mov	r0, r4
 8027552:	f000 f925 	bl	80277a0 <_free_r>
 8027556:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8027558:	b111      	cbz	r1, 8027560 <_reclaim_reent+0x54>
 802755a:	4620      	mov	r0, r4
 802755c:	f000 f920 	bl	80277a0 <_free_r>
 8027560:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8027562:	b111      	cbz	r1, 802756a <_reclaim_reent+0x5e>
 8027564:	4620      	mov	r0, r4
 8027566:	f000 f91b 	bl	80277a0 <_free_r>
 802756a:	6c61      	ldr	r1, [r4, #68]	; 0x44
 802756c:	b111      	cbz	r1, 8027574 <_reclaim_reent+0x68>
 802756e:	4620      	mov	r0, r4
 8027570:	f000 f916 	bl	80277a0 <_free_r>
 8027574:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8027576:	b111      	cbz	r1, 802757e <_reclaim_reent+0x72>
 8027578:	4620      	mov	r0, r4
 802757a:	f000 f911 	bl	80277a0 <_free_r>
 802757e:	6a23      	ldr	r3, [r4, #32]
 8027580:	b1b3      	cbz	r3, 80275b0 <_reclaim_reent+0xa4>
 8027582:	4620      	mov	r0, r4
 8027584:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8027588:	4718      	bx	r3
 802758a:	5949      	ldr	r1, [r1, r5]
 802758c:	b941      	cbnz	r1, 80275a0 <_reclaim_reent+0x94>
 802758e:	3504      	adds	r5, #4
 8027590:	69e3      	ldr	r3, [r4, #28]
 8027592:	2d80      	cmp	r5, #128	; 0x80
 8027594:	68d9      	ldr	r1, [r3, #12]
 8027596:	d1f8      	bne.n	802758a <_reclaim_reent+0x7e>
 8027598:	4620      	mov	r0, r4
 802759a:	f000 f901 	bl	80277a0 <_free_r>
 802759e:	e7c0      	b.n	8027522 <_reclaim_reent+0x16>
 80275a0:	680e      	ldr	r6, [r1, #0]
 80275a2:	4620      	mov	r0, r4
 80275a4:	f000 f8fc 	bl	80277a0 <_free_r>
 80275a8:	4631      	mov	r1, r6
 80275aa:	e7ef      	b.n	802758c <_reclaim_reent+0x80>
 80275ac:	2500      	movs	r5, #0
 80275ae:	e7ef      	b.n	8027590 <_reclaim_reent+0x84>
 80275b0:	bd70      	pop	{r4, r5, r6, pc}
 80275b2:	bf00      	nop
 80275b4:	20000160 	.word	0x20000160

080275b8 <_lseek_r>:
 80275b8:	b538      	push	{r3, r4, r5, lr}
 80275ba:	4d07      	ldr	r5, [pc, #28]	; (80275d8 <_lseek_r+0x20>)
 80275bc:	4604      	mov	r4, r0
 80275be:	4608      	mov	r0, r1
 80275c0:	4611      	mov	r1, r2
 80275c2:	2200      	movs	r2, #0
 80275c4:	602a      	str	r2, [r5, #0]
 80275c6:	461a      	mov	r2, r3
 80275c8:	f7da fe12 	bl	80021f0 <_lseek>
 80275cc:	1c43      	adds	r3, r0, #1
 80275ce:	d102      	bne.n	80275d6 <_lseek_r+0x1e>
 80275d0:	682b      	ldr	r3, [r5, #0]
 80275d2:	b103      	cbz	r3, 80275d6 <_lseek_r+0x1e>
 80275d4:	6023      	str	r3, [r4, #0]
 80275d6:	bd38      	pop	{r3, r4, r5, pc}
 80275d8:	20014254 	.word	0x20014254

080275dc <_read_r>:
 80275dc:	b538      	push	{r3, r4, r5, lr}
 80275de:	4d07      	ldr	r5, [pc, #28]	; (80275fc <_read_r+0x20>)
 80275e0:	4604      	mov	r4, r0
 80275e2:	4608      	mov	r0, r1
 80275e4:	4611      	mov	r1, r2
 80275e6:	2200      	movs	r2, #0
 80275e8:	602a      	str	r2, [r5, #0]
 80275ea:	461a      	mov	r2, r3
 80275ec:	f7da fdd8 	bl	80021a0 <_read>
 80275f0:	1c43      	adds	r3, r0, #1
 80275f2:	d102      	bne.n	80275fa <_read_r+0x1e>
 80275f4:	682b      	ldr	r3, [r5, #0]
 80275f6:	b103      	cbz	r3, 80275fa <_read_r+0x1e>
 80275f8:	6023      	str	r3, [r4, #0]
 80275fa:	bd38      	pop	{r3, r4, r5, pc}
 80275fc:	20014254 	.word	0x20014254

08027600 <_kill_r>:
 8027600:	b538      	push	{r3, r4, r5, lr}
 8027602:	4d07      	ldr	r5, [pc, #28]	; (8027620 <_kill_r+0x20>)
 8027604:	2300      	movs	r3, #0
 8027606:	4604      	mov	r4, r0
 8027608:	4608      	mov	r0, r1
 802760a:	4611      	mov	r1, r2
 802760c:	602b      	str	r3, [r5, #0]
 802760e:	f7da fdb9 	bl	8002184 <_kill>
 8027612:	1c43      	adds	r3, r0, #1
 8027614:	d102      	bne.n	802761c <_kill_r+0x1c>
 8027616:	682b      	ldr	r3, [r5, #0]
 8027618:	b103      	cbz	r3, 802761c <_kill_r+0x1c>
 802761a:	6023      	str	r3, [r4, #0]
 802761c:	bd38      	pop	{r3, r4, r5, pc}
 802761e:	bf00      	nop
 8027620:	20014254 	.word	0x20014254

08027624 <_getpid_r>:
 8027624:	f7da bdac 	b.w	8002180 <_getpid>

08027628 <_sbrk_r>:
 8027628:	b538      	push	{r3, r4, r5, lr}
 802762a:	4d06      	ldr	r5, [pc, #24]	; (8027644 <_sbrk_r+0x1c>)
 802762c:	2300      	movs	r3, #0
 802762e:	4604      	mov	r4, r0
 8027630:	4608      	mov	r0, r1
 8027632:	602b      	str	r3, [r5, #0]
 8027634:	f7da fdde 	bl	80021f4 <_sbrk>
 8027638:	1c43      	adds	r3, r0, #1
 802763a:	d102      	bne.n	8027642 <_sbrk_r+0x1a>
 802763c:	682b      	ldr	r3, [r5, #0]
 802763e:	b103      	cbz	r3, 8027642 <_sbrk_r+0x1a>
 8027640:	6023      	str	r3, [r4, #0]
 8027642:	bd38      	pop	{r3, r4, r5, pc}
 8027644:	20014254 	.word	0x20014254

08027648 <_write_r>:
 8027648:	b538      	push	{r3, r4, r5, lr}
 802764a:	4d07      	ldr	r5, [pc, #28]	; (8027668 <_write_r+0x20>)
 802764c:	4604      	mov	r4, r0
 802764e:	4608      	mov	r0, r1
 8027650:	4611      	mov	r1, r2
 8027652:	2200      	movs	r2, #0
 8027654:	602a      	str	r2, [r5, #0]
 8027656:	461a      	mov	r2, r3
 8027658:	f7da fdb0 	bl	80021bc <_write>
 802765c:	1c43      	adds	r3, r0, #1
 802765e:	d102      	bne.n	8027666 <_write_r+0x1e>
 8027660:	682b      	ldr	r3, [r5, #0]
 8027662:	b103      	cbz	r3, 8027666 <_write_r+0x1e>
 8027664:	6023      	str	r3, [r4, #0]
 8027666:	bd38      	pop	{r3, r4, r5, pc}
 8027668:	20014254 	.word	0x20014254

0802766c <__errno>:
 802766c:	4b01      	ldr	r3, [pc, #4]	; (8027674 <__errno+0x8>)
 802766e:	6818      	ldr	r0, [r3, #0]
 8027670:	4770      	bx	lr
 8027672:	bf00      	nop
 8027674:	20000160 	.word	0x20000160

08027678 <__libc_init_array>:
 8027678:	b570      	push	{r4, r5, r6, lr}
 802767a:	4d0d      	ldr	r5, [pc, #52]	; (80276b0 <__libc_init_array+0x38>)
 802767c:	4c0d      	ldr	r4, [pc, #52]	; (80276b4 <__libc_init_array+0x3c>)
 802767e:	1b64      	subs	r4, r4, r5
 8027680:	10a4      	asrs	r4, r4, #2
 8027682:	2600      	movs	r6, #0
 8027684:	42a6      	cmp	r6, r4
 8027686:	d109      	bne.n	802769c <__libc_init_array+0x24>
 8027688:	4d0b      	ldr	r5, [pc, #44]	; (80276b8 <__libc_init_array+0x40>)
 802768a:	4c0c      	ldr	r4, [pc, #48]	; (80276bc <__libc_init_array+0x44>)
 802768c:	f000 fd70 	bl	8028170 <_init>
 8027690:	1b64      	subs	r4, r4, r5
 8027692:	10a4      	asrs	r4, r4, #2
 8027694:	2600      	movs	r6, #0
 8027696:	42a6      	cmp	r6, r4
 8027698:	d105      	bne.n	80276a6 <__libc_init_array+0x2e>
 802769a:	bd70      	pop	{r4, r5, r6, pc}
 802769c:	f855 3b04 	ldr.w	r3, [r5], #4
 80276a0:	4798      	blx	r3
 80276a2:	3601      	adds	r6, #1
 80276a4:	e7ee      	b.n	8027684 <__libc_init_array+0xc>
 80276a6:	f855 3b04 	ldr.w	r3, [r5], #4
 80276aa:	4798      	blx	r3
 80276ac:	3601      	adds	r6, #1
 80276ae:	e7f2      	b.n	8027696 <__libc_init_array+0x1e>
 80276b0:	08147608 	.word	0x08147608
 80276b4:	08147608 	.word	0x08147608
 80276b8:	08147608 	.word	0x08147608
 80276bc:	0814761c 	.word	0x0814761c

080276c0 <__retarget_lock_init_recursive>:
 80276c0:	4770      	bx	lr

080276c2 <__retarget_lock_acquire_recursive>:
 80276c2:	4770      	bx	lr

080276c4 <__retarget_lock_release_recursive>:
 80276c4:	4770      	bx	lr

080276c6 <memcpy>:
 80276c6:	440a      	add	r2, r1
 80276c8:	4291      	cmp	r1, r2
 80276ca:	f100 33ff 	add.w	r3, r0, #4294967295
 80276ce:	d100      	bne.n	80276d2 <memcpy+0xc>
 80276d0:	4770      	bx	lr
 80276d2:	b510      	push	{r4, lr}
 80276d4:	f811 4b01 	ldrb.w	r4, [r1], #1
 80276d8:	f803 4f01 	strb.w	r4, [r3, #1]!
 80276dc:	4291      	cmp	r1, r2
 80276de:	d1f9      	bne.n	80276d4 <memcpy+0xe>
 80276e0:	bd10      	pop	{r4, pc}
	...

080276e4 <__register_exitproc>:
 80276e4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80276e8:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 802779c <__register_exitproc+0xb8>
 80276ec:	4606      	mov	r6, r0
 80276ee:	f8d8 0000 	ldr.w	r0, [r8]
 80276f2:	461f      	mov	r7, r3
 80276f4:	460d      	mov	r5, r1
 80276f6:	4691      	mov	r9, r2
 80276f8:	f7ff ffe3 	bl	80276c2 <__retarget_lock_acquire_recursive>
 80276fc:	4b23      	ldr	r3, [pc, #140]	; (802778c <__register_exitproc+0xa8>)
 80276fe:	681c      	ldr	r4, [r3, #0]
 8027700:	b934      	cbnz	r4, 8027710 <__register_exitproc+0x2c>
 8027702:	4c23      	ldr	r4, [pc, #140]	; (8027790 <__register_exitproc+0xac>)
 8027704:	601c      	str	r4, [r3, #0]
 8027706:	4b23      	ldr	r3, [pc, #140]	; (8027794 <__register_exitproc+0xb0>)
 8027708:	b113      	cbz	r3, 8027710 <__register_exitproc+0x2c>
 802770a:	681b      	ldr	r3, [r3, #0]
 802770c:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 8027710:	6863      	ldr	r3, [r4, #4]
 8027712:	2b1f      	cmp	r3, #31
 8027714:	dd07      	ble.n	8027726 <__register_exitproc+0x42>
 8027716:	f8d8 0000 	ldr.w	r0, [r8]
 802771a:	f7ff ffd3 	bl	80276c4 <__retarget_lock_release_recursive>
 802771e:	f04f 30ff 	mov.w	r0, #4294967295
 8027722:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8027726:	b32e      	cbz	r6, 8027774 <__register_exitproc+0x90>
 8027728:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 802772c:	b968      	cbnz	r0, 802774a <__register_exitproc+0x66>
 802772e:	4b1a      	ldr	r3, [pc, #104]	; (8027798 <__register_exitproc+0xb4>)
 8027730:	2b00      	cmp	r3, #0
 8027732:	d0f0      	beq.n	8027716 <__register_exitproc+0x32>
 8027734:	f44f 7084 	mov.w	r0, #264	; 0x108
 8027738:	f7ff fcbe 	bl	80270b8 <malloc>
 802773c:	2800      	cmp	r0, #0
 802773e:	d0ea      	beq.n	8027716 <__register_exitproc+0x32>
 8027740:	2300      	movs	r3, #0
 8027742:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 8027746:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 802774a:	6863      	ldr	r3, [r4, #4]
 802774c:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 8027750:	2201      	movs	r2, #1
 8027752:	409a      	lsls	r2, r3
 8027754:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 8027758:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 802775c:	4313      	orrs	r3, r2
 802775e:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 8027762:	2e02      	cmp	r6, #2
 8027764:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 8027768:	bf02      	ittt	eq
 802776a:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 802776e:	4313      	orreq	r3, r2
 8027770:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 8027774:	6863      	ldr	r3, [r4, #4]
 8027776:	f8d8 0000 	ldr.w	r0, [r8]
 802777a:	1c5a      	adds	r2, r3, #1
 802777c:	3302      	adds	r3, #2
 802777e:	6062      	str	r2, [r4, #4]
 8027780:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8027784:	f7ff ff9e 	bl	80276c4 <__retarget_lock_release_recursive>
 8027788:	2000      	movs	r0, #0
 802778a:	e7ca      	b.n	8027722 <__register_exitproc+0x3e>
 802778c:	200142e8 	.word	0x200142e8
 8027790:	2001425c 	.word	0x2001425c
 8027794:	0802bd9c 	.word	0x0802bd9c
 8027798:	080270b9 	.word	0x080270b9
 802779c:	20000164 	.word	0x20000164

080277a0 <_free_r>:
 80277a0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80277a2:	2900      	cmp	r1, #0
 80277a4:	d044      	beq.n	8027830 <_free_r+0x90>
 80277a6:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80277aa:	9001      	str	r0, [sp, #4]
 80277ac:	2b00      	cmp	r3, #0
 80277ae:	f1a1 0404 	sub.w	r4, r1, #4
 80277b2:	bfb8      	it	lt
 80277b4:	18e4      	addlt	r4, r4, r3
 80277b6:	f7ff fd2f 	bl	8027218 <__malloc_lock>
 80277ba:	4a1e      	ldr	r2, [pc, #120]	; (8027834 <_free_r+0x94>)
 80277bc:	9801      	ldr	r0, [sp, #4]
 80277be:	6813      	ldr	r3, [r2, #0]
 80277c0:	b933      	cbnz	r3, 80277d0 <_free_r+0x30>
 80277c2:	6063      	str	r3, [r4, #4]
 80277c4:	6014      	str	r4, [r2, #0]
 80277c6:	b003      	add	sp, #12
 80277c8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80277cc:	f7ff bd2a 	b.w	8027224 <__malloc_unlock>
 80277d0:	42a3      	cmp	r3, r4
 80277d2:	d908      	bls.n	80277e6 <_free_r+0x46>
 80277d4:	6825      	ldr	r5, [r4, #0]
 80277d6:	1961      	adds	r1, r4, r5
 80277d8:	428b      	cmp	r3, r1
 80277da:	bf01      	itttt	eq
 80277dc:	6819      	ldreq	r1, [r3, #0]
 80277de:	685b      	ldreq	r3, [r3, #4]
 80277e0:	1949      	addeq	r1, r1, r5
 80277e2:	6021      	streq	r1, [r4, #0]
 80277e4:	e7ed      	b.n	80277c2 <_free_r+0x22>
 80277e6:	461a      	mov	r2, r3
 80277e8:	685b      	ldr	r3, [r3, #4]
 80277ea:	b10b      	cbz	r3, 80277f0 <_free_r+0x50>
 80277ec:	42a3      	cmp	r3, r4
 80277ee:	d9fa      	bls.n	80277e6 <_free_r+0x46>
 80277f0:	6811      	ldr	r1, [r2, #0]
 80277f2:	1855      	adds	r5, r2, r1
 80277f4:	42a5      	cmp	r5, r4
 80277f6:	d10b      	bne.n	8027810 <_free_r+0x70>
 80277f8:	6824      	ldr	r4, [r4, #0]
 80277fa:	4421      	add	r1, r4
 80277fc:	1854      	adds	r4, r2, r1
 80277fe:	42a3      	cmp	r3, r4
 8027800:	6011      	str	r1, [r2, #0]
 8027802:	d1e0      	bne.n	80277c6 <_free_r+0x26>
 8027804:	681c      	ldr	r4, [r3, #0]
 8027806:	685b      	ldr	r3, [r3, #4]
 8027808:	6053      	str	r3, [r2, #4]
 802780a:	440c      	add	r4, r1
 802780c:	6014      	str	r4, [r2, #0]
 802780e:	e7da      	b.n	80277c6 <_free_r+0x26>
 8027810:	d902      	bls.n	8027818 <_free_r+0x78>
 8027812:	230c      	movs	r3, #12
 8027814:	6003      	str	r3, [r0, #0]
 8027816:	e7d6      	b.n	80277c6 <_free_r+0x26>
 8027818:	6825      	ldr	r5, [r4, #0]
 802781a:	1961      	adds	r1, r4, r5
 802781c:	428b      	cmp	r3, r1
 802781e:	bf04      	itt	eq
 8027820:	6819      	ldreq	r1, [r3, #0]
 8027822:	685b      	ldreq	r3, [r3, #4]
 8027824:	6063      	str	r3, [r4, #4]
 8027826:	bf04      	itt	eq
 8027828:	1949      	addeq	r1, r1, r5
 802782a:	6021      	streq	r1, [r4, #0]
 802782c:	6054      	str	r4, [r2, #4]
 802782e:	e7ca      	b.n	80277c6 <_free_r+0x26>
 8027830:	b003      	add	sp, #12
 8027832:	bd30      	pop	{r4, r5, pc}
 8027834:	20014110 	.word	0x20014110

08027838 <__sfputc_r>:
 8027838:	6893      	ldr	r3, [r2, #8]
 802783a:	3b01      	subs	r3, #1
 802783c:	2b00      	cmp	r3, #0
 802783e:	b410      	push	{r4}
 8027840:	6093      	str	r3, [r2, #8]
 8027842:	da08      	bge.n	8027856 <__sfputc_r+0x1e>
 8027844:	6994      	ldr	r4, [r2, #24]
 8027846:	42a3      	cmp	r3, r4
 8027848:	db01      	blt.n	802784e <__sfputc_r+0x16>
 802784a:	290a      	cmp	r1, #10
 802784c:	d103      	bne.n	8027856 <__sfputc_r+0x1e>
 802784e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8027852:	f000 bb73 	b.w	8027f3c <__swbuf_r>
 8027856:	6813      	ldr	r3, [r2, #0]
 8027858:	1c58      	adds	r0, r3, #1
 802785a:	6010      	str	r0, [r2, #0]
 802785c:	7019      	strb	r1, [r3, #0]
 802785e:	4608      	mov	r0, r1
 8027860:	f85d 4b04 	ldr.w	r4, [sp], #4
 8027864:	4770      	bx	lr

08027866 <__sfputs_r>:
 8027866:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8027868:	4606      	mov	r6, r0
 802786a:	460f      	mov	r7, r1
 802786c:	4614      	mov	r4, r2
 802786e:	18d5      	adds	r5, r2, r3
 8027870:	42ac      	cmp	r4, r5
 8027872:	d101      	bne.n	8027878 <__sfputs_r+0x12>
 8027874:	2000      	movs	r0, #0
 8027876:	e007      	b.n	8027888 <__sfputs_r+0x22>
 8027878:	f814 1b01 	ldrb.w	r1, [r4], #1
 802787c:	463a      	mov	r2, r7
 802787e:	4630      	mov	r0, r6
 8027880:	f7ff ffda 	bl	8027838 <__sfputc_r>
 8027884:	1c43      	adds	r3, r0, #1
 8027886:	d1f3      	bne.n	8027870 <__sfputs_r+0xa>
 8027888:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0802788c <_vfiprintf_r>:
 802788c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027890:	460d      	mov	r5, r1
 8027892:	b09d      	sub	sp, #116	; 0x74
 8027894:	4614      	mov	r4, r2
 8027896:	4698      	mov	r8, r3
 8027898:	4606      	mov	r6, r0
 802789a:	b118      	cbz	r0, 80278a4 <_vfiprintf_r+0x18>
 802789c:	6a03      	ldr	r3, [r0, #32]
 802789e:	b90b      	cbnz	r3, 80278a4 <_vfiprintf_r+0x18>
 80278a0:	f7ff fd60 	bl	8027364 <__sinit>
 80278a4:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80278a6:	07d9      	lsls	r1, r3, #31
 80278a8:	d405      	bmi.n	80278b6 <_vfiprintf_r+0x2a>
 80278aa:	89ab      	ldrh	r3, [r5, #12]
 80278ac:	059a      	lsls	r2, r3, #22
 80278ae:	d402      	bmi.n	80278b6 <_vfiprintf_r+0x2a>
 80278b0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80278b2:	f7ff ff06 	bl	80276c2 <__retarget_lock_acquire_recursive>
 80278b6:	89ab      	ldrh	r3, [r5, #12]
 80278b8:	071b      	lsls	r3, r3, #28
 80278ba:	d501      	bpl.n	80278c0 <_vfiprintf_r+0x34>
 80278bc:	692b      	ldr	r3, [r5, #16]
 80278be:	b99b      	cbnz	r3, 80278e8 <_vfiprintf_r+0x5c>
 80278c0:	4629      	mov	r1, r5
 80278c2:	4630      	mov	r0, r6
 80278c4:	f000 fb78 	bl	8027fb8 <__swsetup_r>
 80278c8:	b170      	cbz	r0, 80278e8 <_vfiprintf_r+0x5c>
 80278ca:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80278cc:	07dc      	lsls	r4, r3, #31
 80278ce:	d504      	bpl.n	80278da <_vfiprintf_r+0x4e>
 80278d0:	f04f 30ff 	mov.w	r0, #4294967295
 80278d4:	b01d      	add	sp, #116	; 0x74
 80278d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80278da:	89ab      	ldrh	r3, [r5, #12]
 80278dc:	0598      	lsls	r0, r3, #22
 80278de:	d4f7      	bmi.n	80278d0 <_vfiprintf_r+0x44>
 80278e0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80278e2:	f7ff feef 	bl	80276c4 <__retarget_lock_release_recursive>
 80278e6:	e7f3      	b.n	80278d0 <_vfiprintf_r+0x44>
 80278e8:	2300      	movs	r3, #0
 80278ea:	9309      	str	r3, [sp, #36]	; 0x24
 80278ec:	2320      	movs	r3, #32
 80278ee:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80278f2:	f8cd 800c 	str.w	r8, [sp, #12]
 80278f6:	2330      	movs	r3, #48	; 0x30
 80278f8:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 8027aac <_vfiprintf_r+0x220>
 80278fc:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8027900:	f04f 0901 	mov.w	r9, #1
 8027904:	4623      	mov	r3, r4
 8027906:	469a      	mov	sl, r3
 8027908:	f813 2b01 	ldrb.w	r2, [r3], #1
 802790c:	b10a      	cbz	r2, 8027912 <_vfiprintf_r+0x86>
 802790e:	2a25      	cmp	r2, #37	; 0x25
 8027910:	d1f9      	bne.n	8027906 <_vfiprintf_r+0x7a>
 8027912:	ebba 0b04 	subs.w	fp, sl, r4
 8027916:	d00b      	beq.n	8027930 <_vfiprintf_r+0xa4>
 8027918:	465b      	mov	r3, fp
 802791a:	4622      	mov	r2, r4
 802791c:	4629      	mov	r1, r5
 802791e:	4630      	mov	r0, r6
 8027920:	f7ff ffa1 	bl	8027866 <__sfputs_r>
 8027924:	3001      	adds	r0, #1
 8027926:	f000 80a9 	beq.w	8027a7c <_vfiprintf_r+0x1f0>
 802792a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802792c:	445a      	add	r2, fp
 802792e:	9209      	str	r2, [sp, #36]	; 0x24
 8027930:	f89a 3000 	ldrb.w	r3, [sl]
 8027934:	2b00      	cmp	r3, #0
 8027936:	f000 80a1 	beq.w	8027a7c <_vfiprintf_r+0x1f0>
 802793a:	2300      	movs	r3, #0
 802793c:	f04f 32ff 	mov.w	r2, #4294967295
 8027940:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8027944:	f10a 0a01 	add.w	sl, sl, #1
 8027948:	9304      	str	r3, [sp, #16]
 802794a:	9307      	str	r3, [sp, #28]
 802794c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8027950:	931a      	str	r3, [sp, #104]	; 0x68
 8027952:	4654      	mov	r4, sl
 8027954:	2205      	movs	r2, #5
 8027956:	f814 1b01 	ldrb.w	r1, [r4], #1
 802795a:	4854      	ldr	r0, [pc, #336]	; (8027aac <_vfiprintf_r+0x220>)
 802795c:	f7d8 fc48 	bl	80001f0 <memchr>
 8027960:	9a04      	ldr	r2, [sp, #16]
 8027962:	b9d8      	cbnz	r0, 802799c <_vfiprintf_r+0x110>
 8027964:	06d1      	lsls	r1, r2, #27
 8027966:	bf44      	itt	mi
 8027968:	2320      	movmi	r3, #32
 802796a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802796e:	0713      	lsls	r3, r2, #28
 8027970:	bf44      	itt	mi
 8027972:	232b      	movmi	r3, #43	; 0x2b
 8027974:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8027978:	f89a 3000 	ldrb.w	r3, [sl]
 802797c:	2b2a      	cmp	r3, #42	; 0x2a
 802797e:	d015      	beq.n	80279ac <_vfiprintf_r+0x120>
 8027980:	9a07      	ldr	r2, [sp, #28]
 8027982:	4654      	mov	r4, sl
 8027984:	2000      	movs	r0, #0
 8027986:	f04f 0c0a 	mov.w	ip, #10
 802798a:	4621      	mov	r1, r4
 802798c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8027990:	3b30      	subs	r3, #48	; 0x30
 8027992:	2b09      	cmp	r3, #9
 8027994:	d94d      	bls.n	8027a32 <_vfiprintf_r+0x1a6>
 8027996:	b1b0      	cbz	r0, 80279c6 <_vfiprintf_r+0x13a>
 8027998:	9207      	str	r2, [sp, #28]
 802799a:	e014      	b.n	80279c6 <_vfiprintf_r+0x13a>
 802799c:	eba0 0308 	sub.w	r3, r0, r8
 80279a0:	fa09 f303 	lsl.w	r3, r9, r3
 80279a4:	4313      	orrs	r3, r2
 80279a6:	9304      	str	r3, [sp, #16]
 80279a8:	46a2      	mov	sl, r4
 80279aa:	e7d2      	b.n	8027952 <_vfiprintf_r+0xc6>
 80279ac:	9b03      	ldr	r3, [sp, #12]
 80279ae:	1d19      	adds	r1, r3, #4
 80279b0:	681b      	ldr	r3, [r3, #0]
 80279b2:	9103      	str	r1, [sp, #12]
 80279b4:	2b00      	cmp	r3, #0
 80279b6:	bfbb      	ittet	lt
 80279b8:	425b      	neglt	r3, r3
 80279ba:	f042 0202 	orrlt.w	r2, r2, #2
 80279be:	9307      	strge	r3, [sp, #28]
 80279c0:	9307      	strlt	r3, [sp, #28]
 80279c2:	bfb8      	it	lt
 80279c4:	9204      	strlt	r2, [sp, #16]
 80279c6:	7823      	ldrb	r3, [r4, #0]
 80279c8:	2b2e      	cmp	r3, #46	; 0x2e
 80279ca:	d10c      	bne.n	80279e6 <_vfiprintf_r+0x15a>
 80279cc:	7863      	ldrb	r3, [r4, #1]
 80279ce:	2b2a      	cmp	r3, #42	; 0x2a
 80279d0:	d134      	bne.n	8027a3c <_vfiprintf_r+0x1b0>
 80279d2:	9b03      	ldr	r3, [sp, #12]
 80279d4:	1d1a      	adds	r2, r3, #4
 80279d6:	681b      	ldr	r3, [r3, #0]
 80279d8:	9203      	str	r2, [sp, #12]
 80279da:	2b00      	cmp	r3, #0
 80279dc:	bfb8      	it	lt
 80279de:	f04f 33ff 	movlt.w	r3, #4294967295
 80279e2:	3402      	adds	r4, #2
 80279e4:	9305      	str	r3, [sp, #20]
 80279e6:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 8027abc <_vfiprintf_r+0x230>
 80279ea:	7821      	ldrb	r1, [r4, #0]
 80279ec:	2203      	movs	r2, #3
 80279ee:	4650      	mov	r0, sl
 80279f0:	f7d8 fbfe 	bl	80001f0 <memchr>
 80279f4:	b138      	cbz	r0, 8027a06 <_vfiprintf_r+0x17a>
 80279f6:	9b04      	ldr	r3, [sp, #16]
 80279f8:	eba0 000a 	sub.w	r0, r0, sl
 80279fc:	2240      	movs	r2, #64	; 0x40
 80279fe:	4082      	lsls	r2, r0
 8027a00:	4313      	orrs	r3, r2
 8027a02:	3401      	adds	r4, #1
 8027a04:	9304      	str	r3, [sp, #16]
 8027a06:	f814 1b01 	ldrb.w	r1, [r4], #1
 8027a0a:	4829      	ldr	r0, [pc, #164]	; (8027ab0 <_vfiprintf_r+0x224>)
 8027a0c:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8027a10:	2206      	movs	r2, #6
 8027a12:	f7d8 fbed 	bl	80001f0 <memchr>
 8027a16:	2800      	cmp	r0, #0
 8027a18:	d03f      	beq.n	8027a9a <_vfiprintf_r+0x20e>
 8027a1a:	4b26      	ldr	r3, [pc, #152]	; (8027ab4 <_vfiprintf_r+0x228>)
 8027a1c:	bb1b      	cbnz	r3, 8027a66 <_vfiprintf_r+0x1da>
 8027a1e:	9b03      	ldr	r3, [sp, #12]
 8027a20:	3307      	adds	r3, #7
 8027a22:	f023 0307 	bic.w	r3, r3, #7
 8027a26:	3308      	adds	r3, #8
 8027a28:	9303      	str	r3, [sp, #12]
 8027a2a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8027a2c:	443b      	add	r3, r7
 8027a2e:	9309      	str	r3, [sp, #36]	; 0x24
 8027a30:	e768      	b.n	8027904 <_vfiprintf_r+0x78>
 8027a32:	fb0c 3202 	mla	r2, ip, r2, r3
 8027a36:	460c      	mov	r4, r1
 8027a38:	2001      	movs	r0, #1
 8027a3a:	e7a6      	b.n	802798a <_vfiprintf_r+0xfe>
 8027a3c:	2300      	movs	r3, #0
 8027a3e:	3401      	adds	r4, #1
 8027a40:	9305      	str	r3, [sp, #20]
 8027a42:	4619      	mov	r1, r3
 8027a44:	f04f 0c0a 	mov.w	ip, #10
 8027a48:	4620      	mov	r0, r4
 8027a4a:	f810 2b01 	ldrb.w	r2, [r0], #1
 8027a4e:	3a30      	subs	r2, #48	; 0x30
 8027a50:	2a09      	cmp	r2, #9
 8027a52:	d903      	bls.n	8027a5c <_vfiprintf_r+0x1d0>
 8027a54:	2b00      	cmp	r3, #0
 8027a56:	d0c6      	beq.n	80279e6 <_vfiprintf_r+0x15a>
 8027a58:	9105      	str	r1, [sp, #20]
 8027a5a:	e7c4      	b.n	80279e6 <_vfiprintf_r+0x15a>
 8027a5c:	fb0c 2101 	mla	r1, ip, r1, r2
 8027a60:	4604      	mov	r4, r0
 8027a62:	2301      	movs	r3, #1
 8027a64:	e7f0      	b.n	8027a48 <_vfiprintf_r+0x1bc>
 8027a66:	ab03      	add	r3, sp, #12
 8027a68:	9300      	str	r3, [sp, #0]
 8027a6a:	462a      	mov	r2, r5
 8027a6c:	4b12      	ldr	r3, [pc, #72]	; (8027ab8 <_vfiprintf_r+0x22c>)
 8027a6e:	a904      	add	r1, sp, #16
 8027a70:	4630      	mov	r0, r6
 8027a72:	f3af 8000 	nop.w
 8027a76:	4607      	mov	r7, r0
 8027a78:	1c78      	adds	r0, r7, #1
 8027a7a:	d1d6      	bne.n	8027a2a <_vfiprintf_r+0x19e>
 8027a7c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8027a7e:	07d9      	lsls	r1, r3, #31
 8027a80:	d405      	bmi.n	8027a8e <_vfiprintf_r+0x202>
 8027a82:	89ab      	ldrh	r3, [r5, #12]
 8027a84:	059a      	lsls	r2, r3, #22
 8027a86:	d402      	bmi.n	8027a8e <_vfiprintf_r+0x202>
 8027a88:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8027a8a:	f7ff fe1b 	bl	80276c4 <__retarget_lock_release_recursive>
 8027a8e:	89ab      	ldrh	r3, [r5, #12]
 8027a90:	065b      	lsls	r3, r3, #25
 8027a92:	f53f af1d 	bmi.w	80278d0 <_vfiprintf_r+0x44>
 8027a96:	9809      	ldr	r0, [sp, #36]	; 0x24
 8027a98:	e71c      	b.n	80278d4 <_vfiprintf_r+0x48>
 8027a9a:	ab03      	add	r3, sp, #12
 8027a9c:	9300      	str	r3, [sp, #0]
 8027a9e:	462a      	mov	r2, r5
 8027aa0:	4b05      	ldr	r3, [pc, #20]	; (8027ab8 <_vfiprintf_r+0x22c>)
 8027aa2:	a904      	add	r1, sp, #16
 8027aa4:	4630      	mov	r0, r6
 8027aa6:	f000 f879 	bl	8027b9c <_printf_i>
 8027aaa:	e7e4      	b.n	8027a76 <_vfiprintf_r+0x1ea>
 8027aac:	0802bda0 	.word	0x0802bda0
 8027ab0:	0802bdaa 	.word	0x0802bdaa
 8027ab4:	00000000 	.word	0x00000000
 8027ab8:	08027867 	.word	0x08027867
 8027abc:	0802bda6 	.word	0x0802bda6

08027ac0 <_printf_common>:
 8027ac0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8027ac4:	4616      	mov	r6, r2
 8027ac6:	4699      	mov	r9, r3
 8027ac8:	688a      	ldr	r2, [r1, #8]
 8027aca:	690b      	ldr	r3, [r1, #16]
 8027acc:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8027ad0:	4293      	cmp	r3, r2
 8027ad2:	bfb8      	it	lt
 8027ad4:	4613      	movlt	r3, r2
 8027ad6:	6033      	str	r3, [r6, #0]
 8027ad8:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8027adc:	4607      	mov	r7, r0
 8027ade:	460c      	mov	r4, r1
 8027ae0:	b10a      	cbz	r2, 8027ae6 <_printf_common+0x26>
 8027ae2:	3301      	adds	r3, #1
 8027ae4:	6033      	str	r3, [r6, #0]
 8027ae6:	6823      	ldr	r3, [r4, #0]
 8027ae8:	0699      	lsls	r1, r3, #26
 8027aea:	bf42      	ittt	mi
 8027aec:	6833      	ldrmi	r3, [r6, #0]
 8027aee:	3302      	addmi	r3, #2
 8027af0:	6033      	strmi	r3, [r6, #0]
 8027af2:	6825      	ldr	r5, [r4, #0]
 8027af4:	f015 0506 	ands.w	r5, r5, #6
 8027af8:	d106      	bne.n	8027b08 <_printf_common+0x48>
 8027afa:	f104 0a19 	add.w	sl, r4, #25
 8027afe:	68e3      	ldr	r3, [r4, #12]
 8027b00:	6832      	ldr	r2, [r6, #0]
 8027b02:	1a9b      	subs	r3, r3, r2
 8027b04:	42ab      	cmp	r3, r5
 8027b06:	dc26      	bgt.n	8027b56 <_printf_common+0x96>
 8027b08:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8027b0c:	1e13      	subs	r3, r2, #0
 8027b0e:	6822      	ldr	r2, [r4, #0]
 8027b10:	bf18      	it	ne
 8027b12:	2301      	movne	r3, #1
 8027b14:	0692      	lsls	r2, r2, #26
 8027b16:	d42b      	bmi.n	8027b70 <_printf_common+0xb0>
 8027b18:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8027b1c:	4649      	mov	r1, r9
 8027b1e:	4638      	mov	r0, r7
 8027b20:	47c0      	blx	r8
 8027b22:	3001      	adds	r0, #1
 8027b24:	d01e      	beq.n	8027b64 <_printf_common+0xa4>
 8027b26:	6823      	ldr	r3, [r4, #0]
 8027b28:	6922      	ldr	r2, [r4, #16]
 8027b2a:	f003 0306 	and.w	r3, r3, #6
 8027b2e:	2b04      	cmp	r3, #4
 8027b30:	bf02      	ittt	eq
 8027b32:	68e5      	ldreq	r5, [r4, #12]
 8027b34:	6833      	ldreq	r3, [r6, #0]
 8027b36:	1aed      	subeq	r5, r5, r3
 8027b38:	68a3      	ldr	r3, [r4, #8]
 8027b3a:	bf0c      	ite	eq
 8027b3c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8027b40:	2500      	movne	r5, #0
 8027b42:	4293      	cmp	r3, r2
 8027b44:	bfc4      	itt	gt
 8027b46:	1a9b      	subgt	r3, r3, r2
 8027b48:	18ed      	addgt	r5, r5, r3
 8027b4a:	2600      	movs	r6, #0
 8027b4c:	341a      	adds	r4, #26
 8027b4e:	42b5      	cmp	r5, r6
 8027b50:	d11a      	bne.n	8027b88 <_printf_common+0xc8>
 8027b52:	2000      	movs	r0, #0
 8027b54:	e008      	b.n	8027b68 <_printf_common+0xa8>
 8027b56:	2301      	movs	r3, #1
 8027b58:	4652      	mov	r2, sl
 8027b5a:	4649      	mov	r1, r9
 8027b5c:	4638      	mov	r0, r7
 8027b5e:	47c0      	blx	r8
 8027b60:	3001      	adds	r0, #1
 8027b62:	d103      	bne.n	8027b6c <_printf_common+0xac>
 8027b64:	f04f 30ff 	mov.w	r0, #4294967295
 8027b68:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8027b6c:	3501      	adds	r5, #1
 8027b6e:	e7c6      	b.n	8027afe <_printf_common+0x3e>
 8027b70:	18e1      	adds	r1, r4, r3
 8027b72:	1c5a      	adds	r2, r3, #1
 8027b74:	2030      	movs	r0, #48	; 0x30
 8027b76:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8027b7a:	4422      	add	r2, r4
 8027b7c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8027b80:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8027b84:	3302      	adds	r3, #2
 8027b86:	e7c7      	b.n	8027b18 <_printf_common+0x58>
 8027b88:	2301      	movs	r3, #1
 8027b8a:	4622      	mov	r2, r4
 8027b8c:	4649      	mov	r1, r9
 8027b8e:	4638      	mov	r0, r7
 8027b90:	47c0      	blx	r8
 8027b92:	3001      	adds	r0, #1
 8027b94:	d0e6      	beq.n	8027b64 <_printf_common+0xa4>
 8027b96:	3601      	adds	r6, #1
 8027b98:	e7d9      	b.n	8027b4e <_printf_common+0x8e>
	...

08027b9c <_printf_i>:
 8027b9c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8027ba0:	7e0f      	ldrb	r7, [r1, #24]
 8027ba2:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8027ba4:	2f78      	cmp	r7, #120	; 0x78
 8027ba6:	4691      	mov	r9, r2
 8027ba8:	4680      	mov	r8, r0
 8027baa:	460c      	mov	r4, r1
 8027bac:	469a      	mov	sl, r3
 8027bae:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8027bb2:	d807      	bhi.n	8027bc4 <_printf_i+0x28>
 8027bb4:	2f62      	cmp	r7, #98	; 0x62
 8027bb6:	d80a      	bhi.n	8027bce <_printf_i+0x32>
 8027bb8:	2f00      	cmp	r7, #0
 8027bba:	f000 80d4 	beq.w	8027d66 <_printf_i+0x1ca>
 8027bbe:	2f58      	cmp	r7, #88	; 0x58
 8027bc0:	f000 80c0 	beq.w	8027d44 <_printf_i+0x1a8>
 8027bc4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8027bc8:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8027bcc:	e03a      	b.n	8027c44 <_printf_i+0xa8>
 8027bce:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8027bd2:	2b15      	cmp	r3, #21
 8027bd4:	d8f6      	bhi.n	8027bc4 <_printf_i+0x28>
 8027bd6:	a101      	add	r1, pc, #4	; (adr r1, 8027bdc <_printf_i+0x40>)
 8027bd8:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8027bdc:	08027c35 	.word	0x08027c35
 8027be0:	08027c49 	.word	0x08027c49
 8027be4:	08027bc5 	.word	0x08027bc5
 8027be8:	08027bc5 	.word	0x08027bc5
 8027bec:	08027bc5 	.word	0x08027bc5
 8027bf0:	08027bc5 	.word	0x08027bc5
 8027bf4:	08027c49 	.word	0x08027c49
 8027bf8:	08027bc5 	.word	0x08027bc5
 8027bfc:	08027bc5 	.word	0x08027bc5
 8027c00:	08027bc5 	.word	0x08027bc5
 8027c04:	08027bc5 	.word	0x08027bc5
 8027c08:	08027d4d 	.word	0x08027d4d
 8027c0c:	08027c75 	.word	0x08027c75
 8027c10:	08027d07 	.word	0x08027d07
 8027c14:	08027bc5 	.word	0x08027bc5
 8027c18:	08027bc5 	.word	0x08027bc5
 8027c1c:	08027d6f 	.word	0x08027d6f
 8027c20:	08027bc5 	.word	0x08027bc5
 8027c24:	08027c75 	.word	0x08027c75
 8027c28:	08027bc5 	.word	0x08027bc5
 8027c2c:	08027bc5 	.word	0x08027bc5
 8027c30:	08027d0f 	.word	0x08027d0f
 8027c34:	682b      	ldr	r3, [r5, #0]
 8027c36:	1d1a      	adds	r2, r3, #4
 8027c38:	681b      	ldr	r3, [r3, #0]
 8027c3a:	602a      	str	r2, [r5, #0]
 8027c3c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8027c40:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8027c44:	2301      	movs	r3, #1
 8027c46:	e09f      	b.n	8027d88 <_printf_i+0x1ec>
 8027c48:	6820      	ldr	r0, [r4, #0]
 8027c4a:	682b      	ldr	r3, [r5, #0]
 8027c4c:	0607      	lsls	r7, r0, #24
 8027c4e:	f103 0104 	add.w	r1, r3, #4
 8027c52:	6029      	str	r1, [r5, #0]
 8027c54:	d501      	bpl.n	8027c5a <_printf_i+0xbe>
 8027c56:	681e      	ldr	r6, [r3, #0]
 8027c58:	e003      	b.n	8027c62 <_printf_i+0xc6>
 8027c5a:	0646      	lsls	r6, r0, #25
 8027c5c:	d5fb      	bpl.n	8027c56 <_printf_i+0xba>
 8027c5e:	f9b3 6000 	ldrsh.w	r6, [r3]
 8027c62:	2e00      	cmp	r6, #0
 8027c64:	da03      	bge.n	8027c6e <_printf_i+0xd2>
 8027c66:	232d      	movs	r3, #45	; 0x2d
 8027c68:	4276      	negs	r6, r6
 8027c6a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8027c6e:	485a      	ldr	r0, [pc, #360]	; (8027dd8 <_printf_i+0x23c>)
 8027c70:	230a      	movs	r3, #10
 8027c72:	e012      	b.n	8027c9a <_printf_i+0xfe>
 8027c74:	682b      	ldr	r3, [r5, #0]
 8027c76:	6820      	ldr	r0, [r4, #0]
 8027c78:	1d19      	adds	r1, r3, #4
 8027c7a:	6029      	str	r1, [r5, #0]
 8027c7c:	0605      	lsls	r5, r0, #24
 8027c7e:	d501      	bpl.n	8027c84 <_printf_i+0xe8>
 8027c80:	681e      	ldr	r6, [r3, #0]
 8027c82:	e002      	b.n	8027c8a <_printf_i+0xee>
 8027c84:	0641      	lsls	r1, r0, #25
 8027c86:	d5fb      	bpl.n	8027c80 <_printf_i+0xe4>
 8027c88:	881e      	ldrh	r6, [r3, #0]
 8027c8a:	4853      	ldr	r0, [pc, #332]	; (8027dd8 <_printf_i+0x23c>)
 8027c8c:	2f6f      	cmp	r7, #111	; 0x6f
 8027c8e:	bf0c      	ite	eq
 8027c90:	2308      	moveq	r3, #8
 8027c92:	230a      	movne	r3, #10
 8027c94:	2100      	movs	r1, #0
 8027c96:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8027c9a:	6865      	ldr	r5, [r4, #4]
 8027c9c:	60a5      	str	r5, [r4, #8]
 8027c9e:	2d00      	cmp	r5, #0
 8027ca0:	bfa2      	ittt	ge
 8027ca2:	6821      	ldrge	r1, [r4, #0]
 8027ca4:	f021 0104 	bicge.w	r1, r1, #4
 8027ca8:	6021      	strge	r1, [r4, #0]
 8027caa:	b90e      	cbnz	r6, 8027cb0 <_printf_i+0x114>
 8027cac:	2d00      	cmp	r5, #0
 8027cae:	d04b      	beq.n	8027d48 <_printf_i+0x1ac>
 8027cb0:	4615      	mov	r5, r2
 8027cb2:	fbb6 f1f3 	udiv	r1, r6, r3
 8027cb6:	fb03 6711 	mls	r7, r3, r1, r6
 8027cba:	5dc7      	ldrb	r7, [r0, r7]
 8027cbc:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8027cc0:	4637      	mov	r7, r6
 8027cc2:	42bb      	cmp	r3, r7
 8027cc4:	460e      	mov	r6, r1
 8027cc6:	d9f4      	bls.n	8027cb2 <_printf_i+0x116>
 8027cc8:	2b08      	cmp	r3, #8
 8027cca:	d10b      	bne.n	8027ce4 <_printf_i+0x148>
 8027ccc:	6823      	ldr	r3, [r4, #0]
 8027cce:	07de      	lsls	r6, r3, #31
 8027cd0:	d508      	bpl.n	8027ce4 <_printf_i+0x148>
 8027cd2:	6923      	ldr	r3, [r4, #16]
 8027cd4:	6861      	ldr	r1, [r4, #4]
 8027cd6:	4299      	cmp	r1, r3
 8027cd8:	bfde      	ittt	le
 8027cda:	2330      	movle	r3, #48	; 0x30
 8027cdc:	f805 3c01 	strble.w	r3, [r5, #-1]
 8027ce0:	f105 35ff 	addle.w	r5, r5, #4294967295
 8027ce4:	1b52      	subs	r2, r2, r5
 8027ce6:	6122      	str	r2, [r4, #16]
 8027ce8:	f8cd a000 	str.w	sl, [sp]
 8027cec:	464b      	mov	r3, r9
 8027cee:	aa03      	add	r2, sp, #12
 8027cf0:	4621      	mov	r1, r4
 8027cf2:	4640      	mov	r0, r8
 8027cf4:	f7ff fee4 	bl	8027ac0 <_printf_common>
 8027cf8:	3001      	adds	r0, #1
 8027cfa:	d14a      	bne.n	8027d92 <_printf_i+0x1f6>
 8027cfc:	f04f 30ff 	mov.w	r0, #4294967295
 8027d00:	b004      	add	sp, #16
 8027d02:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8027d06:	6823      	ldr	r3, [r4, #0]
 8027d08:	f043 0320 	orr.w	r3, r3, #32
 8027d0c:	6023      	str	r3, [r4, #0]
 8027d0e:	4833      	ldr	r0, [pc, #204]	; (8027ddc <_printf_i+0x240>)
 8027d10:	2778      	movs	r7, #120	; 0x78
 8027d12:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8027d16:	6823      	ldr	r3, [r4, #0]
 8027d18:	6829      	ldr	r1, [r5, #0]
 8027d1a:	061f      	lsls	r7, r3, #24
 8027d1c:	f851 6b04 	ldr.w	r6, [r1], #4
 8027d20:	d402      	bmi.n	8027d28 <_printf_i+0x18c>
 8027d22:	065f      	lsls	r7, r3, #25
 8027d24:	bf48      	it	mi
 8027d26:	b2b6      	uxthmi	r6, r6
 8027d28:	07df      	lsls	r7, r3, #31
 8027d2a:	bf48      	it	mi
 8027d2c:	f043 0320 	orrmi.w	r3, r3, #32
 8027d30:	6029      	str	r1, [r5, #0]
 8027d32:	bf48      	it	mi
 8027d34:	6023      	strmi	r3, [r4, #0]
 8027d36:	b91e      	cbnz	r6, 8027d40 <_printf_i+0x1a4>
 8027d38:	6823      	ldr	r3, [r4, #0]
 8027d3a:	f023 0320 	bic.w	r3, r3, #32
 8027d3e:	6023      	str	r3, [r4, #0]
 8027d40:	2310      	movs	r3, #16
 8027d42:	e7a7      	b.n	8027c94 <_printf_i+0xf8>
 8027d44:	4824      	ldr	r0, [pc, #144]	; (8027dd8 <_printf_i+0x23c>)
 8027d46:	e7e4      	b.n	8027d12 <_printf_i+0x176>
 8027d48:	4615      	mov	r5, r2
 8027d4a:	e7bd      	b.n	8027cc8 <_printf_i+0x12c>
 8027d4c:	682b      	ldr	r3, [r5, #0]
 8027d4e:	6826      	ldr	r6, [r4, #0]
 8027d50:	6961      	ldr	r1, [r4, #20]
 8027d52:	1d18      	adds	r0, r3, #4
 8027d54:	6028      	str	r0, [r5, #0]
 8027d56:	0635      	lsls	r5, r6, #24
 8027d58:	681b      	ldr	r3, [r3, #0]
 8027d5a:	d501      	bpl.n	8027d60 <_printf_i+0x1c4>
 8027d5c:	6019      	str	r1, [r3, #0]
 8027d5e:	e002      	b.n	8027d66 <_printf_i+0x1ca>
 8027d60:	0670      	lsls	r0, r6, #25
 8027d62:	d5fb      	bpl.n	8027d5c <_printf_i+0x1c0>
 8027d64:	8019      	strh	r1, [r3, #0]
 8027d66:	2300      	movs	r3, #0
 8027d68:	6123      	str	r3, [r4, #16]
 8027d6a:	4615      	mov	r5, r2
 8027d6c:	e7bc      	b.n	8027ce8 <_printf_i+0x14c>
 8027d6e:	682b      	ldr	r3, [r5, #0]
 8027d70:	1d1a      	adds	r2, r3, #4
 8027d72:	602a      	str	r2, [r5, #0]
 8027d74:	681d      	ldr	r5, [r3, #0]
 8027d76:	6862      	ldr	r2, [r4, #4]
 8027d78:	2100      	movs	r1, #0
 8027d7a:	4628      	mov	r0, r5
 8027d7c:	f7d8 fa38 	bl	80001f0 <memchr>
 8027d80:	b108      	cbz	r0, 8027d86 <_printf_i+0x1ea>
 8027d82:	1b40      	subs	r0, r0, r5
 8027d84:	6060      	str	r0, [r4, #4]
 8027d86:	6863      	ldr	r3, [r4, #4]
 8027d88:	6123      	str	r3, [r4, #16]
 8027d8a:	2300      	movs	r3, #0
 8027d8c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8027d90:	e7aa      	b.n	8027ce8 <_printf_i+0x14c>
 8027d92:	6923      	ldr	r3, [r4, #16]
 8027d94:	462a      	mov	r2, r5
 8027d96:	4649      	mov	r1, r9
 8027d98:	4640      	mov	r0, r8
 8027d9a:	47d0      	blx	sl
 8027d9c:	3001      	adds	r0, #1
 8027d9e:	d0ad      	beq.n	8027cfc <_printf_i+0x160>
 8027da0:	6823      	ldr	r3, [r4, #0]
 8027da2:	079b      	lsls	r3, r3, #30
 8027da4:	d413      	bmi.n	8027dce <_printf_i+0x232>
 8027da6:	68e0      	ldr	r0, [r4, #12]
 8027da8:	9b03      	ldr	r3, [sp, #12]
 8027daa:	4298      	cmp	r0, r3
 8027dac:	bfb8      	it	lt
 8027dae:	4618      	movlt	r0, r3
 8027db0:	e7a6      	b.n	8027d00 <_printf_i+0x164>
 8027db2:	2301      	movs	r3, #1
 8027db4:	4632      	mov	r2, r6
 8027db6:	4649      	mov	r1, r9
 8027db8:	4640      	mov	r0, r8
 8027dba:	47d0      	blx	sl
 8027dbc:	3001      	adds	r0, #1
 8027dbe:	d09d      	beq.n	8027cfc <_printf_i+0x160>
 8027dc0:	3501      	adds	r5, #1
 8027dc2:	68e3      	ldr	r3, [r4, #12]
 8027dc4:	9903      	ldr	r1, [sp, #12]
 8027dc6:	1a5b      	subs	r3, r3, r1
 8027dc8:	42ab      	cmp	r3, r5
 8027dca:	dcf2      	bgt.n	8027db2 <_printf_i+0x216>
 8027dcc:	e7eb      	b.n	8027da6 <_printf_i+0x20a>
 8027dce:	2500      	movs	r5, #0
 8027dd0:	f104 0619 	add.w	r6, r4, #25
 8027dd4:	e7f5      	b.n	8027dc2 <_printf_i+0x226>
 8027dd6:	bf00      	nop
 8027dd8:	0802bdb1 	.word	0x0802bdb1
 8027ddc:	0802bdc2 	.word	0x0802bdc2

08027de0 <__sflush_r>:
 8027de0:	898a      	ldrh	r2, [r1, #12]
 8027de2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8027de6:	4605      	mov	r5, r0
 8027de8:	0710      	lsls	r0, r2, #28
 8027dea:	460c      	mov	r4, r1
 8027dec:	d458      	bmi.n	8027ea0 <__sflush_r+0xc0>
 8027dee:	684b      	ldr	r3, [r1, #4]
 8027df0:	2b00      	cmp	r3, #0
 8027df2:	dc05      	bgt.n	8027e00 <__sflush_r+0x20>
 8027df4:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8027df6:	2b00      	cmp	r3, #0
 8027df8:	dc02      	bgt.n	8027e00 <__sflush_r+0x20>
 8027dfa:	2000      	movs	r0, #0
 8027dfc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8027e00:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8027e02:	2e00      	cmp	r6, #0
 8027e04:	d0f9      	beq.n	8027dfa <__sflush_r+0x1a>
 8027e06:	2300      	movs	r3, #0
 8027e08:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8027e0c:	682f      	ldr	r7, [r5, #0]
 8027e0e:	6a21      	ldr	r1, [r4, #32]
 8027e10:	602b      	str	r3, [r5, #0]
 8027e12:	d032      	beq.n	8027e7a <__sflush_r+0x9a>
 8027e14:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8027e16:	89a3      	ldrh	r3, [r4, #12]
 8027e18:	075a      	lsls	r2, r3, #29
 8027e1a:	d505      	bpl.n	8027e28 <__sflush_r+0x48>
 8027e1c:	6863      	ldr	r3, [r4, #4]
 8027e1e:	1ac0      	subs	r0, r0, r3
 8027e20:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8027e22:	b10b      	cbz	r3, 8027e28 <__sflush_r+0x48>
 8027e24:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8027e26:	1ac0      	subs	r0, r0, r3
 8027e28:	2300      	movs	r3, #0
 8027e2a:	4602      	mov	r2, r0
 8027e2c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8027e2e:	6a21      	ldr	r1, [r4, #32]
 8027e30:	4628      	mov	r0, r5
 8027e32:	47b0      	blx	r6
 8027e34:	1c43      	adds	r3, r0, #1
 8027e36:	89a3      	ldrh	r3, [r4, #12]
 8027e38:	d106      	bne.n	8027e48 <__sflush_r+0x68>
 8027e3a:	6829      	ldr	r1, [r5, #0]
 8027e3c:	291d      	cmp	r1, #29
 8027e3e:	d82b      	bhi.n	8027e98 <__sflush_r+0xb8>
 8027e40:	4a29      	ldr	r2, [pc, #164]	; (8027ee8 <__sflush_r+0x108>)
 8027e42:	410a      	asrs	r2, r1
 8027e44:	07d6      	lsls	r6, r2, #31
 8027e46:	d427      	bmi.n	8027e98 <__sflush_r+0xb8>
 8027e48:	2200      	movs	r2, #0
 8027e4a:	6062      	str	r2, [r4, #4]
 8027e4c:	04d9      	lsls	r1, r3, #19
 8027e4e:	6922      	ldr	r2, [r4, #16]
 8027e50:	6022      	str	r2, [r4, #0]
 8027e52:	d504      	bpl.n	8027e5e <__sflush_r+0x7e>
 8027e54:	1c42      	adds	r2, r0, #1
 8027e56:	d101      	bne.n	8027e5c <__sflush_r+0x7c>
 8027e58:	682b      	ldr	r3, [r5, #0]
 8027e5a:	b903      	cbnz	r3, 8027e5e <__sflush_r+0x7e>
 8027e5c:	6560      	str	r0, [r4, #84]	; 0x54
 8027e5e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8027e60:	602f      	str	r7, [r5, #0]
 8027e62:	2900      	cmp	r1, #0
 8027e64:	d0c9      	beq.n	8027dfa <__sflush_r+0x1a>
 8027e66:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8027e6a:	4299      	cmp	r1, r3
 8027e6c:	d002      	beq.n	8027e74 <__sflush_r+0x94>
 8027e6e:	4628      	mov	r0, r5
 8027e70:	f7ff fc96 	bl	80277a0 <_free_r>
 8027e74:	2000      	movs	r0, #0
 8027e76:	6360      	str	r0, [r4, #52]	; 0x34
 8027e78:	e7c0      	b.n	8027dfc <__sflush_r+0x1c>
 8027e7a:	2301      	movs	r3, #1
 8027e7c:	4628      	mov	r0, r5
 8027e7e:	47b0      	blx	r6
 8027e80:	1c41      	adds	r1, r0, #1
 8027e82:	d1c8      	bne.n	8027e16 <__sflush_r+0x36>
 8027e84:	682b      	ldr	r3, [r5, #0]
 8027e86:	2b00      	cmp	r3, #0
 8027e88:	d0c5      	beq.n	8027e16 <__sflush_r+0x36>
 8027e8a:	2b1d      	cmp	r3, #29
 8027e8c:	d001      	beq.n	8027e92 <__sflush_r+0xb2>
 8027e8e:	2b16      	cmp	r3, #22
 8027e90:	d101      	bne.n	8027e96 <__sflush_r+0xb6>
 8027e92:	602f      	str	r7, [r5, #0]
 8027e94:	e7b1      	b.n	8027dfa <__sflush_r+0x1a>
 8027e96:	89a3      	ldrh	r3, [r4, #12]
 8027e98:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8027e9c:	81a3      	strh	r3, [r4, #12]
 8027e9e:	e7ad      	b.n	8027dfc <__sflush_r+0x1c>
 8027ea0:	690f      	ldr	r7, [r1, #16]
 8027ea2:	2f00      	cmp	r7, #0
 8027ea4:	d0a9      	beq.n	8027dfa <__sflush_r+0x1a>
 8027ea6:	0793      	lsls	r3, r2, #30
 8027ea8:	680e      	ldr	r6, [r1, #0]
 8027eaa:	bf08      	it	eq
 8027eac:	694b      	ldreq	r3, [r1, #20]
 8027eae:	600f      	str	r7, [r1, #0]
 8027eb0:	bf18      	it	ne
 8027eb2:	2300      	movne	r3, #0
 8027eb4:	eba6 0807 	sub.w	r8, r6, r7
 8027eb8:	608b      	str	r3, [r1, #8]
 8027eba:	f1b8 0f00 	cmp.w	r8, #0
 8027ebe:	dd9c      	ble.n	8027dfa <__sflush_r+0x1a>
 8027ec0:	6a21      	ldr	r1, [r4, #32]
 8027ec2:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8027ec4:	4643      	mov	r3, r8
 8027ec6:	463a      	mov	r2, r7
 8027ec8:	4628      	mov	r0, r5
 8027eca:	47b0      	blx	r6
 8027ecc:	2800      	cmp	r0, #0
 8027ece:	dc06      	bgt.n	8027ede <__sflush_r+0xfe>
 8027ed0:	89a3      	ldrh	r3, [r4, #12]
 8027ed2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8027ed6:	81a3      	strh	r3, [r4, #12]
 8027ed8:	f04f 30ff 	mov.w	r0, #4294967295
 8027edc:	e78e      	b.n	8027dfc <__sflush_r+0x1c>
 8027ede:	4407      	add	r7, r0
 8027ee0:	eba8 0800 	sub.w	r8, r8, r0
 8027ee4:	e7e9      	b.n	8027eba <__sflush_r+0xda>
 8027ee6:	bf00      	nop
 8027ee8:	dfbffffe 	.word	0xdfbffffe

08027eec <_fflush_r>:
 8027eec:	b538      	push	{r3, r4, r5, lr}
 8027eee:	690b      	ldr	r3, [r1, #16]
 8027ef0:	4605      	mov	r5, r0
 8027ef2:	460c      	mov	r4, r1
 8027ef4:	b913      	cbnz	r3, 8027efc <_fflush_r+0x10>
 8027ef6:	2500      	movs	r5, #0
 8027ef8:	4628      	mov	r0, r5
 8027efa:	bd38      	pop	{r3, r4, r5, pc}
 8027efc:	b118      	cbz	r0, 8027f06 <_fflush_r+0x1a>
 8027efe:	6a03      	ldr	r3, [r0, #32]
 8027f00:	b90b      	cbnz	r3, 8027f06 <_fflush_r+0x1a>
 8027f02:	f7ff fa2f 	bl	8027364 <__sinit>
 8027f06:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8027f0a:	2b00      	cmp	r3, #0
 8027f0c:	d0f3      	beq.n	8027ef6 <_fflush_r+0xa>
 8027f0e:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8027f10:	07d0      	lsls	r0, r2, #31
 8027f12:	d404      	bmi.n	8027f1e <_fflush_r+0x32>
 8027f14:	0599      	lsls	r1, r3, #22
 8027f16:	d402      	bmi.n	8027f1e <_fflush_r+0x32>
 8027f18:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8027f1a:	f7ff fbd2 	bl	80276c2 <__retarget_lock_acquire_recursive>
 8027f1e:	4628      	mov	r0, r5
 8027f20:	4621      	mov	r1, r4
 8027f22:	f7ff ff5d 	bl	8027de0 <__sflush_r>
 8027f26:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8027f28:	07da      	lsls	r2, r3, #31
 8027f2a:	4605      	mov	r5, r0
 8027f2c:	d4e4      	bmi.n	8027ef8 <_fflush_r+0xc>
 8027f2e:	89a3      	ldrh	r3, [r4, #12]
 8027f30:	059b      	lsls	r3, r3, #22
 8027f32:	d4e1      	bmi.n	8027ef8 <_fflush_r+0xc>
 8027f34:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8027f36:	f7ff fbc5 	bl	80276c4 <__retarget_lock_release_recursive>
 8027f3a:	e7dd      	b.n	8027ef8 <_fflush_r+0xc>

08027f3c <__swbuf_r>:
 8027f3c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8027f3e:	460e      	mov	r6, r1
 8027f40:	4614      	mov	r4, r2
 8027f42:	4605      	mov	r5, r0
 8027f44:	b118      	cbz	r0, 8027f4e <__swbuf_r+0x12>
 8027f46:	6a03      	ldr	r3, [r0, #32]
 8027f48:	b90b      	cbnz	r3, 8027f4e <__swbuf_r+0x12>
 8027f4a:	f7ff fa0b 	bl	8027364 <__sinit>
 8027f4e:	69a3      	ldr	r3, [r4, #24]
 8027f50:	60a3      	str	r3, [r4, #8]
 8027f52:	89a3      	ldrh	r3, [r4, #12]
 8027f54:	071a      	lsls	r2, r3, #28
 8027f56:	d525      	bpl.n	8027fa4 <__swbuf_r+0x68>
 8027f58:	6923      	ldr	r3, [r4, #16]
 8027f5a:	b31b      	cbz	r3, 8027fa4 <__swbuf_r+0x68>
 8027f5c:	6823      	ldr	r3, [r4, #0]
 8027f5e:	6922      	ldr	r2, [r4, #16]
 8027f60:	1a98      	subs	r0, r3, r2
 8027f62:	6963      	ldr	r3, [r4, #20]
 8027f64:	b2f6      	uxtb	r6, r6
 8027f66:	4283      	cmp	r3, r0
 8027f68:	4637      	mov	r7, r6
 8027f6a:	dc04      	bgt.n	8027f76 <__swbuf_r+0x3a>
 8027f6c:	4621      	mov	r1, r4
 8027f6e:	4628      	mov	r0, r5
 8027f70:	f7ff ffbc 	bl	8027eec <_fflush_r>
 8027f74:	b9e0      	cbnz	r0, 8027fb0 <__swbuf_r+0x74>
 8027f76:	68a3      	ldr	r3, [r4, #8]
 8027f78:	3b01      	subs	r3, #1
 8027f7a:	60a3      	str	r3, [r4, #8]
 8027f7c:	6823      	ldr	r3, [r4, #0]
 8027f7e:	1c5a      	adds	r2, r3, #1
 8027f80:	6022      	str	r2, [r4, #0]
 8027f82:	701e      	strb	r6, [r3, #0]
 8027f84:	6962      	ldr	r2, [r4, #20]
 8027f86:	1c43      	adds	r3, r0, #1
 8027f88:	429a      	cmp	r2, r3
 8027f8a:	d004      	beq.n	8027f96 <__swbuf_r+0x5a>
 8027f8c:	89a3      	ldrh	r3, [r4, #12]
 8027f8e:	07db      	lsls	r3, r3, #31
 8027f90:	d506      	bpl.n	8027fa0 <__swbuf_r+0x64>
 8027f92:	2e0a      	cmp	r6, #10
 8027f94:	d104      	bne.n	8027fa0 <__swbuf_r+0x64>
 8027f96:	4621      	mov	r1, r4
 8027f98:	4628      	mov	r0, r5
 8027f9a:	f7ff ffa7 	bl	8027eec <_fflush_r>
 8027f9e:	b938      	cbnz	r0, 8027fb0 <__swbuf_r+0x74>
 8027fa0:	4638      	mov	r0, r7
 8027fa2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8027fa4:	4621      	mov	r1, r4
 8027fa6:	4628      	mov	r0, r5
 8027fa8:	f000 f806 	bl	8027fb8 <__swsetup_r>
 8027fac:	2800      	cmp	r0, #0
 8027fae:	d0d5      	beq.n	8027f5c <__swbuf_r+0x20>
 8027fb0:	f04f 37ff 	mov.w	r7, #4294967295
 8027fb4:	e7f4      	b.n	8027fa0 <__swbuf_r+0x64>
	...

08027fb8 <__swsetup_r>:
 8027fb8:	b538      	push	{r3, r4, r5, lr}
 8027fba:	4b2a      	ldr	r3, [pc, #168]	; (8028064 <__swsetup_r+0xac>)
 8027fbc:	4605      	mov	r5, r0
 8027fbe:	6818      	ldr	r0, [r3, #0]
 8027fc0:	460c      	mov	r4, r1
 8027fc2:	b118      	cbz	r0, 8027fcc <__swsetup_r+0x14>
 8027fc4:	6a03      	ldr	r3, [r0, #32]
 8027fc6:	b90b      	cbnz	r3, 8027fcc <__swsetup_r+0x14>
 8027fc8:	f7ff f9cc 	bl	8027364 <__sinit>
 8027fcc:	89a3      	ldrh	r3, [r4, #12]
 8027fce:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8027fd2:	0718      	lsls	r0, r3, #28
 8027fd4:	d422      	bmi.n	802801c <__swsetup_r+0x64>
 8027fd6:	06d9      	lsls	r1, r3, #27
 8027fd8:	d407      	bmi.n	8027fea <__swsetup_r+0x32>
 8027fda:	2309      	movs	r3, #9
 8027fdc:	602b      	str	r3, [r5, #0]
 8027fde:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8027fe2:	81a3      	strh	r3, [r4, #12]
 8027fe4:	f04f 30ff 	mov.w	r0, #4294967295
 8027fe8:	e034      	b.n	8028054 <__swsetup_r+0x9c>
 8027fea:	0758      	lsls	r0, r3, #29
 8027fec:	d512      	bpl.n	8028014 <__swsetup_r+0x5c>
 8027fee:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8027ff0:	b141      	cbz	r1, 8028004 <__swsetup_r+0x4c>
 8027ff2:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8027ff6:	4299      	cmp	r1, r3
 8027ff8:	d002      	beq.n	8028000 <__swsetup_r+0x48>
 8027ffa:	4628      	mov	r0, r5
 8027ffc:	f7ff fbd0 	bl	80277a0 <_free_r>
 8028000:	2300      	movs	r3, #0
 8028002:	6363      	str	r3, [r4, #52]	; 0x34
 8028004:	89a3      	ldrh	r3, [r4, #12]
 8028006:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 802800a:	81a3      	strh	r3, [r4, #12]
 802800c:	2300      	movs	r3, #0
 802800e:	6063      	str	r3, [r4, #4]
 8028010:	6923      	ldr	r3, [r4, #16]
 8028012:	6023      	str	r3, [r4, #0]
 8028014:	89a3      	ldrh	r3, [r4, #12]
 8028016:	f043 0308 	orr.w	r3, r3, #8
 802801a:	81a3      	strh	r3, [r4, #12]
 802801c:	6923      	ldr	r3, [r4, #16]
 802801e:	b94b      	cbnz	r3, 8028034 <__swsetup_r+0x7c>
 8028020:	89a3      	ldrh	r3, [r4, #12]
 8028022:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8028026:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 802802a:	d003      	beq.n	8028034 <__swsetup_r+0x7c>
 802802c:	4621      	mov	r1, r4
 802802e:	4628      	mov	r0, r5
 8028030:	f000 f840 	bl	80280b4 <__smakebuf_r>
 8028034:	89a0      	ldrh	r0, [r4, #12]
 8028036:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802803a:	f010 0301 	ands.w	r3, r0, #1
 802803e:	d00a      	beq.n	8028056 <__swsetup_r+0x9e>
 8028040:	2300      	movs	r3, #0
 8028042:	60a3      	str	r3, [r4, #8]
 8028044:	6963      	ldr	r3, [r4, #20]
 8028046:	425b      	negs	r3, r3
 8028048:	61a3      	str	r3, [r4, #24]
 802804a:	6923      	ldr	r3, [r4, #16]
 802804c:	b943      	cbnz	r3, 8028060 <__swsetup_r+0xa8>
 802804e:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8028052:	d1c4      	bne.n	8027fde <__swsetup_r+0x26>
 8028054:	bd38      	pop	{r3, r4, r5, pc}
 8028056:	0781      	lsls	r1, r0, #30
 8028058:	bf58      	it	pl
 802805a:	6963      	ldrpl	r3, [r4, #20]
 802805c:	60a3      	str	r3, [r4, #8]
 802805e:	e7f4      	b.n	802804a <__swsetup_r+0x92>
 8028060:	2000      	movs	r0, #0
 8028062:	e7f7      	b.n	8028054 <__swsetup_r+0x9c>
 8028064:	20000160 	.word	0x20000160

08028068 <__swhatbuf_r>:
 8028068:	b570      	push	{r4, r5, r6, lr}
 802806a:	460c      	mov	r4, r1
 802806c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8028070:	2900      	cmp	r1, #0
 8028072:	b096      	sub	sp, #88	; 0x58
 8028074:	4615      	mov	r5, r2
 8028076:	461e      	mov	r6, r3
 8028078:	da0d      	bge.n	8028096 <__swhatbuf_r+0x2e>
 802807a:	89a3      	ldrh	r3, [r4, #12]
 802807c:	f013 0f80 	tst.w	r3, #128	; 0x80
 8028080:	f04f 0100 	mov.w	r1, #0
 8028084:	bf0c      	ite	eq
 8028086:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 802808a:	2340      	movne	r3, #64	; 0x40
 802808c:	2000      	movs	r0, #0
 802808e:	6031      	str	r1, [r6, #0]
 8028090:	602b      	str	r3, [r5, #0]
 8028092:	b016      	add	sp, #88	; 0x58
 8028094:	bd70      	pop	{r4, r5, r6, pc}
 8028096:	466a      	mov	r2, sp
 8028098:	f000 f848 	bl	802812c <_fstat_r>
 802809c:	2800      	cmp	r0, #0
 802809e:	dbec      	blt.n	802807a <__swhatbuf_r+0x12>
 80280a0:	9901      	ldr	r1, [sp, #4]
 80280a2:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 80280a6:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 80280aa:	4259      	negs	r1, r3
 80280ac:	4159      	adcs	r1, r3
 80280ae:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80280b2:	e7eb      	b.n	802808c <__swhatbuf_r+0x24>

080280b4 <__smakebuf_r>:
 80280b4:	898b      	ldrh	r3, [r1, #12]
 80280b6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80280b8:	079d      	lsls	r5, r3, #30
 80280ba:	4606      	mov	r6, r0
 80280bc:	460c      	mov	r4, r1
 80280be:	d507      	bpl.n	80280d0 <__smakebuf_r+0x1c>
 80280c0:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80280c4:	6023      	str	r3, [r4, #0]
 80280c6:	6123      	str	r3, [r4, #16]
 80280c8:	2301      	movs	r3, #1
 80280ca:	6163      	str	r3, [r4, #20]
 80280cc:	b002      	add	sp, #8
 80280ce:	bd70      	pop	{r4, r5, r6, pc}
 80280d0:	ab01      	add	r3, sp, #4
 80280d2:	466a      	mov	r2, sp
 80280d4:	f7ff ffc8 	bl	8028068 <__swhatbuf_r>
 80280d8:	9900      	ldr	r1, [sp, #0]
 80280da:	4605      	mov	r5, r0
 80280dc:	4630      	mov	r0, r6
 80280de:	f7ff f81b 	bl	8027118 <_malloc_r>
 80280e2:	b948      	cbnz	r0, 80280f8 <__smakebuf_r+0x44>
 80280e4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80280e8:	059a      	lsls	r2, r3, #22
 80280ea:	d4ef      	bmi.n	80280cc <__smakebuf_r+0x18>
 80280ec:	f023 0303 	bic.w	r3, r3, #3
 80280f0:	f043 0302 	orr.w	r3, r3, #2
 80280f4:	81a3      	strh	r3, [r4, #12]
 80280f6:	e7e3      	b.n	80280c0 <__smakebuf_r+0xc>
 80280f8:	89a3      	ldrh	r3, [r4, #12]
 80280fa:	6020      	str	r0, [r4, #0]
 80280fc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8028100:	81a3      	strh	r3, [r4, #12]
 8028102:	9b00      	ldr	r3, [sp, #0]
 8028104:	6163      	str	r3, [r4, #20]
 8028106:	9b01      	ldr	r3, [sp, #4]
 8028108:	6120      	str	r0, [r4, #16]
 802810a:	b15b      	cbz	r3, 8028124 <__smakebuf_r+0x70>
 802810c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8028110:	4630      	mov	r0, r6
 8028112:	f000 f81d 	bl	8028150 <_isatty_r>
 8028116:	b128      	cbz	r0, 8028124 <__smakebuf_r+0x70>
 8028118:	89a3      	ldrh	r3, [r4, #12]
 802811a:	f023 0303 	bic.w	r3, r3, #3
 802811e:	f043 0301 	orr.w	r3, r3, #1
 8028122:	81a3      	strh	r3, [r4, #12]
 8028124:	89a3      	ldrh	r3, [r4, #12]
 8028126:	431d      	orrs	r5, r3
 8028128:	81a5      	strh	r5, [r4, #12]
 802812a:	e7cf      	b.n	80280cc <__smakebuf_r+0x18>

0802812c <_fstat_r>:
 802812c:	b538      	push	{r3, r4, r5, lr}
 802812e:	4d07      	ldr	r5, [pc, #28]	; (802814c <_fstat_r+0x20>)
 8028130:	2300      	movs	r3, #0
 8028132:	4604      	mov	r4, r0
 8028134:	4608      	mov	r0, r1
 8028136:	4611      	mov	r1, r2
 8028138:	602b      	str	r3, [r5, #0]
 802813a:	f7da f851 	bl	80021e0 <_fstat>
 802813e:	1c43      	adds	r3, r0, #1
 8028140:	d102      	bne.n	8028148 <_fstat_r+0x1c>
 8028142:	682b      	ldr	r3, [r5, #0]
 8028144:	b103      	cbz	r3, 8028148 <_fstat_r+0x1c>
 8028146:	6023      	str	r3, [r4, #0]
 8028148:	bd38      	pop	{r3, r4, r5, pc}
 802814a:	bf00      	nop
 802814c:	20014254 	.word	0x20014254

08028150 <_isatty_r>:
 8028150:	b538      	push	{r3, r4, r5, lr}
 8028152:	4d06      	ldr	r5, [pc, #24]	; (802816c <_isatty_r+0x1c>)
 8028154:	2300      	movs	r3, #0
 8028156:	4604      	mov	r4, r0
 8028158:	4608      	mov	r0, r1
 802815a:	602b      	str	r3, [r5, #0]
 802815c:	f7da f846 	bl	80021ec <_isatty>
 8028160:	1c43      	adds	r3, r0, #1
 8028162:	d102      	bne.n	802816a <_isatty_r+0x1a>
 8028164:	682b      	ldr	r3, [r5, #0]
 8028166:	b103      	cbz	r3, 802816a <_isatty_r+0x1a>
 8028168:	6023      	str	r3, [r4, #0]
 802816a:	bd38      	pop	{r3, r4, r5, pc}
 802816c:	20014254 	.word	0x20014254

08028170 <_init>:
 8028170:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8028172:	bf00      	nop
 8028174:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8028176:	bc08      	pop	{r3}
 8028178:	469e      	mov	lr, r3
 802817a:	4770      	bx	lr

0802817c <_fini>:
 802817c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802817e:	bf00      	nop
 8028180:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8028182:	bc08      	pop	{r3}
 8028184:	469e      	mov	lr, r3
 8028186:	4770      	bx	lr

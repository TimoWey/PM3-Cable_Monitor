
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000290c8  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00004154  08029278  08029278  00039278  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 0000226e  0802d3cc  0802d3cc  0003d3cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 000000f0  0802f63c  0802f63c  0003f63c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 00000608  0802f72c  0802f72c  0003f72c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 00119030  0802fd34  0802fd34  0003fd34  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  08148d64  08148d64  00160168  2**0
                  CONTENTS
  8 .ARM          00000008  08148d64  08148d64  00158d64  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  08148d6c  08148d6c  00160168  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  08148d6c  08148d6c  00158d6c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000008  08148d80  08148d80  00158d80  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         00000168  20000000  08148d88  00160000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          0001428c  20000168  08148ef0  00160168  2**3
                  ALLOC
 14 ._user_heap_stack 00001404  200143f4  08148ef0  001643f4  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  00160168  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 00070800  d0000000  d0000000  00170000  2**2
                  ALLOC
 17 .comment      000000c2  00000000  00000000  00160198  2**0
                  CONTENTS, READONLY
 18 .debug_line   00098227  00000000  00000000  0016025a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line_str 000000a1  00000000  00000000  001f8481  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_info   00292770  00000000  00000000  001f8522  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_abbrev 000322fa  00000000  00000000  0048ac92  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_aranges 00004630  00000000  00000000  004bcf90  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_str    0011f224  00000000  00000000  004c15c0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_rnglists 00007c26  00000000  00000000  005e07e4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_loclists 00031255  00000000  00000000  005e840a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_macro  0003ad36  00000000  00000000  0061965f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_frame  0000ce40  00000000  00000000  00654398  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000168 	.word	0x20000168
 80001cc:	00000000 	.word	0x00000000
 80001d0:	08029260 	.word	0x08029260

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	2000016c 	.word	0x2000016c
 80001ec:	08029260 	.word	0x08029260

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_uldivmod>:
 8000290:	b953      	cbnz	r3, 80002a8 <__aeabi_uldivmod+0x18>
 8000292:	b94a      	cbnz	r2, 80002a8 <__aeabi_uldivmod+0x18>
 8000294:	2900      	cmp	r1, #0
 8000296:	bf08      	it	eq
 8000298:	2800      	cmpeq	r0, #0
 800029a:	bf1c      	itt	ne
 800029c:	f04f 31ff 	movne.w	r1, #4294967295
 80002a0:	f04f 30ff 	movne.w	r0, #4294967295
 80002a4:	f000 b970 	b.w	8000588 <__aeabi_idiv0>
 80002a8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002ac:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002b0:	f000 f806 	bl	80002c0 <__udivmoddi4>
 80002b4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002b8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002bc:	b004      	add	sp, #16
 80002be:	4770      	bx	lr

080002c0 <__udivmoddi4>:
 80002c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002c4:	9e08      	ldr	r6, [sp, #32]
 80002c6:	460d      	mov	r5, r1
 80002c8:	4604      	mov	r4, r0
 80002ca:	460f      	mov	r7, r1
 80002cc:	2b00      	cmp	r3, #0
 80002ce:	d14a      	bne.n	8000366 <__udivmoddi4+0xa6>
 80002d0:	428a      	cmp	r2, r1
 80002d2:	4694      	mov	ip, r2
 80002d4:	d965      	bls.n	80003a2 <__udivmoddi4+0xe2>
 80002d6:	fab2 f382 	clz	r3, r2
 80002da:	b143      	cbz	r3, 80002ee <__udivmoddi4+0x2e>
 80002dc:	fa02 fc03 	lsl.w	ip, r2, r3
 80002e0:	f1c3 0220 	rsb	r2, r3, #32
 80002e4:	409f      	lsls	r7, r3
 80002e6:	fa20 f202 	lsr.w	r2, r0, r2
 80002ea:	4317      	orrs	r7, r2
 80002ec:	409c      	lsls	r4, r3
 80002ee:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 80002f2:	fa1f f58c 	uxth.w	r5, ip
 80002f6:	fbb7 f1fe 	udiv	r1, r7, lr
 80002fa:	0c22      	lsrs	r2, r4, #16
 80002fc:	fb0e 7711 	mls	r7, lr, r1, r7
 8000300:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 8000304:	fb01 f005 	mul.w	r0, r1, r5
 8000308:	4290      	cmp	r0, r2
 800030a:	d90a      	bls.n	8000322 <__udivmoddi4+0x62>
 800030c:	eb1c 0202 	adds.w	r2, ip, r2
 8000310:	f101 37ff 	add.w	r7, r1, #4294967295
 8000314:	f080 811c 	bcs.w	8000550 <__udivmoddi4+0x290>
 8000318:	4290      	cmp	r0, r2
 800031a:	f240 8119 	bls.w	8000550 <__udivmoddi4+0x290>
 800031e:	3902      	subs	r1, #2
 8000320:	4462      	add	r2, ip
 8000322:	1a12      	subs	r2, r2, r0
 8000324:	b2a4      	uxth	r4, r4
 8000326:	fbb2 f0fe 	udiv	r0, r2, lr
 800032a:	fb0e 2210 	mls	r2, lr, r0, r2
 800032e:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000332:	fb00 f505 	mul.w	r5, r0, r5
 8000336:	42a5      	cmp	r5, r4
 8000338:	d90a      	bls.n	8000350 <__udivmoddi4+0x90>
 800033a:	eb1c 0404 	adds.w	r4, ip, r4
 800033e:	f100 32ff 	add.w	r2, r0, #4294967295
 8000342:	f080 8107 	bcs.w	8000554 <__udivmoddi4+0x294>
 8000346:	42a5      	cmp	r5, r4
 8000348:	f240 8104 	bls.w	8000554 <__udivmoddi4+0x294>
 800034c:	4464      	add	r4, ip
 800034e:	3802      	subs	r0, #2
 8000350:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000354:	1b64      	subs	r4, r4, r5
 8000356:	2100      	movs	r1, #0
 8000358:	b11e      	cbz	r6, 8000362 <__udivmoddi4+0xa2>
 800035a:	40dc      	lsrs	r4, r3
 800035c:	2300      	movs	r3, #0
 800035e:	e9c6 4300 	strd	r4, r3, [r6]
 8000362:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000366:	428b      	cmp	r3, r1
 8000368:	d908      	bls.n	800037c <__udivmoddi4+0xbc>
 800036a:	2e00      	cmp	r6, #0
 800036c:	f000 80ed 	beq.w	800054a <__udivmoddi4+0x28a>
 8000370:	2100      	movs	r1, #0
 8000372:	e9c6 0500 	strd	r0, r5, [r6]
 8000376:	4608      	mov	r0, r1
 8000378:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800037c:	fab3 f183 	clz	r1, r3
 8000380:	2900      	cmp	r1, #0
 8000382:	d149      	bne.n	8000418 <__udivmoddi4+0x158>
 8000384:	42ab      	cmp	r3, r5
 8000386:	d302      	bcc.n	800038e <__udivmoddi4+0xce>
 8000388:	4282      	cmp	r2, r0
 800038a:	f200 80f8 	bhi.w	800057e <__udivmoddi4+0x2be>
 800038e:	1a84      	subs	r4, r0, r2
 8000390:	eb65 0203 	sbc.w	r2, r5, r3
 8000394:	2001      	movs	r0, #1
 8000396:	4617      	mov	r7, r2
 8000398:	2e00      	cmp	r6, #0
 800039a:	d0e2      	beq.n	8000362 <__udivmoddi4+0xa2>
 800039c:	e9c6 4700 	strd	r4, r7, [r6]
 80003a0:	e7df      	b.n	8000362 <__udivmoddi4+0xa2>
 80003a2:	b902      	cbnz	r2, 80003a6 <__udivmoddi4+0xe6>
 80003a4:	deff      	udf	#255	; 0xff
 80003a6:	fab2 f382 	clz	r3, r2
 80003aa:	2b00      	cmp	r3, #0
 80003ac:	f040 8090 	bne.w	80004d0 <__udivmoddi4+0x210>
 80003b0:	1a8a      	subs	r2, r1, r2
 80003b2:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80003b6:	fa1f fe8c 	uxth.w	lr, ip
 80003ba:	2101      	movs	r1, #1
 80003bc:	fbb2 f5f7 	udiv	r5, r2, r7
 80003c0:	fb07 2015 	mls	r0, r7, r5, r2
 80003c4:	0c22      	lsrs	r2, r4, #16
 80003c6:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80003ca:	fb0e f005 	mul.w	r0, lr, r5
 80003ce:	4290      	cmp	r0, r2
 80003d0:	d908      	bls.n	80003e4 <__udivmoddi4+0x124>
 80003d2:	eb1c 0202 	adds.w	r2, ip, r2
 80003d6:	f105 38ff 	add.w	r8, r5, #4294967295
 80003da:	d202      	bcs.n	80003e2 <__udivmoddi4+0x122>
 80003dc:	4290      	cmp	r0, r2
 80003de:	f200 80cb 	bhi.w	8000578 <__udivmoddi4+0x2b8>
 80003e2:	4645      	mov	r5, r8
 80003e4:	1a12      	subs	r2, r2, r0
 80003e6:	b2a4      	uxth	r4, r4
 80003e8:	fbb2 f0f7 	udiv	r0, r2, r7
 80003ec:	fb07 2210 	mls	r2, r7, r0, r2
 80003f0:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80003f4:	fb0e fe00 	mul.w	lr, lr, r0
 80003f8:	45a6      	cmp	lr, r4
 80003fa:	d908      	bls.n	800040e <__udivmoddi4+0x14e>
 80003fc:	eb1c 0404 	adds.w	r4, ip, r4
 8000400:	f100 32ff 	add.w	r2, r0, #4294967295
 8000404:	d202      	bcs.n	800040c <__udivmoddi4+0x14c>
 8000406:	45a6      	cmp	lr, r4
 8000408:	f200 80bb 	bhi.w	8000582 <__udivmoddi4+0x2c2>
 800040c:	4610      	mov	r0, r2
 800040e:	eba4 040e 	sub.w	r4, r4, lr
 8000412:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8000416:	e79f      	b.n	8000358 <__udivmoddi4+0x98>
 8000418:	f1c1 0720 	rsb	r7, r1, #32
 800041c:	408b      	lsls	r3, r1
 800041e:	fa22 fc07 	lsr.w	ip, r2, r7
 8000422:	ea4c 0c03 	orr.w	ip, ip, r3
 8000426:	fa05 f401 	lsl.w	r4, r5, r1
 800042a:	fa20 f307 	lsr.w	r3, r0, r7
 800042e:	40fd      	lsrs	r5, r7
 8000430:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000434:	4323      	orrs	r3, r4
 8000436:	fbb5 f8f9 	udiv	r8, r5, r9
 800043a:	fa1f fe8c 	uxth.w	lr, ip
 800043e:	fb09 5518 	mls	r5, r9, r8, r5
 8000442:	0c1c      	lsrs	r4, r3, #16
 8000444:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000448:	fb08 f50e 	mul.w	r5, r8, lr
 800044c:	42a5      	cmp	r5, r4
 800044e:	fa02 f201 	lsl.w	r2, r2, r1
 8000452:	fa00 f001 	lsl.w	r0, r0, r1
 8000456:	d90b      	bls.n	8000470 <__udivmoddi4+0x1b0>
 8000458:	eb1c 0404 	adds.w	r4, ip, r4
 800045c:	f108 3aff 	add.w	sl, r8, #4294967295
 8000460:	f080 8088 	bcs.w	8000574 <__udivmoddi4+0x2b4>
 8000464:	42a5      	cmp	r5, r4
 8000466:	f240 8085 	bls.w	8000574 <__udivmoddi4+0x2b4>
 800046a:	f1a8 0802 	sub.w	r8, r8, #2
 800046e:	4464      	add	r4, ip
 8000470:	1b64      	subs	r4, r4, r5
 8000472:	b29d      	uxth	r5, r3
 8000474:	fbb4 f3f9 	udiv	r3, r4, r9
 8000478:	fb09 4413 	mls	r4, r9, r3, r4
 800047c:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000480:	fb03 fe0e 	mul.w	lr, r3, lr
 8000484:	45a6      	cmp	lr, r4
 8000486:	d908      	bls.n	800049a <__udivmoddi4+0x1da>
 8000488:	eb1c 0404 	adds.w	r4, ip, r4
 800048c:	f103 35ff 	add.w	r5, r3, #4294967295
 8000490:	d26c      	bcs.n	800056c <__udivmoddi4+0x2ac>
 8000492:	45a6      	cmp	lr, r4
 8000494:	d96a      	bls.n	800056c <__udivmoddi4+0x2ac>
 8000496:	3b02      	subs	r3, #2
 8000498:	4464      	add	r4, ip
 800049a:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 800049e:	fba3 9502 	umull	r9, r5, r3, r2
 80004a2:	eba4 040e 	sub.w	r4, r4, lr
 80004a6:	42ac      	cmp	r4, r5
 80004a8:	46c8      	mov	r8, r9
 80004aa:	46ae      	mov	lr, r5
 80004ac:	d356      	bcc.n	800055c <__udivmoddi4+0x29c>
 80004ae:	d053      	beq.n	8000558 <__udivmoddi4+0x298>
 80004b0:	b156      	cbz	r6, 80004c8 <__udivmoddi4+0x208>
 80004b2:	ebb0 0208 	subs.w	r2, r0, r8
 80004b6:	eb64 040e 	sbc.w	r4, r4, lr
 80004ba:	fa04 f707 	lsl.w	r7, r4, r7
 80004be:	40ca      	lsrs	r2, r1
 80004c0:	40cc      	lsrs	r4, r1
 80004c2:	4317      	orrs	r7, r2
 80004c4:	e9c6 7400 	strd	r7, r4, [r6]
 80004c8:	4618      	mov	r0, r3
 80004ca:	2100      	movs	r1, #0
 80004cc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80004d0:	f1c3 0120 	rsb	r1, r3, #32
 80004d4:	fa02 fc03 	lsl.w	ip, r2, r3
 80004d8:	fa20 f201 	lsr.w	r2, r0, r1
 80004dc:	fa25 f101 	lsr.w	r1, r5, r1
 80004e0:	409d      	lsls	r5, r3
 80004e2:	432a      	orrs	r2, r5
 80004e4:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80004e8:	fa1f fe8c 	uxth.w	lr, ip
 80004ec:	fbb1 f0f7 	udiv	r0, r1, r7
 80004f0:	fb07 1510 	mls	r5, r7, r0, r1
 80004f4:	0c11      	lsrs	r1, r2, #16
 80004f6:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 80004fa:	fb00 f50e 	mul.w	r5, r0, lr
 80004fe:	428d      	cmp	r5, r1
 8000500:	fa04 f403 	lsl.w	r4, r4, r3
 8000504:	d908      	bls.n	8000518 <__udivmoddi4+0x258>
 8000506:	eb1c 0101 	adds.w	r1, ip, r1
 800050a:	f100 38ff 	add.w	r8, r0, #4294967295
 800050e:	d22f      	bcs.n	8000570 <__udivmoddi4+0x2b0>
 8000510:	428d      	cmp	r5, r1
 8000512:	d92d      	bls.n	8000570 <__udivmoddi4+0x2b0>
 8000514:	3802      	subs	r0, #2
 8000516:	4461      	add	r1, ip
 8000518:	1b49      	subs	r1, r1, r5
 800051a:	b292      	uxth	r2, r2
 800051c:	fbb1 f5f7 	udiv	r5, r1, r7
 8000520:	fb07 1115 	mls	r1, r7, r5, r1
 8000524:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000528:	fb05 f10e 	mul.w	r1, r5, lr
 800052c:	4291      	cmp	r1, r2
 800052e:	d908      	bls.n	8000542 <__udivmoddi4+0x282>
 8000530:	eb1c 0202 	adds.w	r2, ip, r2
 8000534:	f105 38ff 	add.w	r8, r5, #4294967295
 8000538:	d216      	bcs.n	8000568 <__udivmoddi4+0x2a8>
 800053a:	4291      	cmp	r1, r2
 800053c:	d914      	bls.n	8000568 <__udivmoddi4+0x2a8>
 800053e:	3d02      	subs	r5, #2
 8000540:	4462      	add	r2, ip
 8000542:	1a52      	subs	r2, r2, r1
 8000544:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000548:	e738      	b.n	80003bc <__udivmoddi4+0xfc>
 800054a:	4631      	mov	r1, r6
 800054c:	4630      	mov	r0, r6
 800054e:	e708      	b.n	8000362 <__udivmoddi4+0xa2>
 8000550:	4639      	mov	r1, r7
 8000552:	e6e6      	b.n	8000322 <__udivmoddi4+0x62>
 8000554:	4610      	mov	r0, r2
 8000556:	e6fb      	b.n	8000350 <__udivmoddi4+0x90>
 8000558:	4548      	cmp	r0, r9
 800055a:	d2a9      	bcs.n	80004b0 <__udivmoddi4+0x1f0>
 800055c:	ebb9 0802 	subs.w	r8, r9, r2
 8000560:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000564:	3b01      	subs	r3, #1
 8000566:	e7a3      	b.n	80004b0 <__udivmoddi4+0x1f0>
 8000568:	4645      	mov	r5, r8
 800056a:	e7ea      	b.n	8000542 <__udivmoddi4+0x282>
 800056c:	462b      	mov	r3, r5
 800056e:	e794      	b.n	800049a <__udivmoddi4+0x1da>
 8000570:	4640      	mov	r0, r8
 8000572:	e7d1      	b.n	8000518 <__udivmoddi4+0x258>
 8000574:	46d0      	mov	r8, sl
 8000576:	e77b      	b.n	8000470 <__udivmoddi4+0x1b0>
 8000578:	3d02      	subs	r5, #2
 800057a:	4462      	add	r2, ip
 800057c:	e732      	b.n	80003e4 <__udivmoddi4+0x124>
 800057e:	4608      	mov	r0, r1
 8000580:	e70a      	b.n	8000398 <__udivmoddi4+0xd8>
 8000582:	4464      	add	r4, ip
 8000584:	3802      	subs	r0, #2
 8000586:	e742      	b.n	800040e <__udivmoddi4+0x14e>

08000588 <__aeabi_idiv0>:
 8000588:	4770      	bx	lr
 800058a:	bf00      	nop

0800058c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 800058c:	f8df d034 	ldr.w	sp, [pc, #52]	; 80005c4 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000590:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000592:	e003      	b.n	800059c <LoopCopyDataInit>

08000594 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000594:	4b0c      	ldr	r3, [pc, #48]	; (80005c8 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000596:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000598:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 800059a:	3104      	adds	r1, #4

0800059c <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 800059c:	480b      	ldr	r0, [pc, #44]	; (80005cc <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 800059e:	4b0c      	ldr	r3, [pc, #48]	; (80005d0 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 80005a0:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 80005a2:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 80005a4:	d3f6      	bcc.n	8000594 <CopyDataInit>
  ldr  r2, =_sbss
 80005a6:	4a0b      	ldr	r2, [pc, #44]	; (80005d4 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 80005a8:	e002      	b.n	80005b0 <LoopFillZerobss>

080005aa <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 80005aa:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80005ac:	f842 3b04 	str.w	r3, [r2], #4

080005b0 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 80005b0:	4b09      	ldr	r3, [pc, #36]	; (80005d8 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 80005b2:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80005b4:	d3f9      	bcc.n	80005aa <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80005b6:	f008 f9d3 	bl	8008960 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80005ba:	f028 f8d5 	bl	8028768 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80005be:	f000 ff65 	bl	800148c <main>
  bx  lr    
 80005c2:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 80005c4:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 80005c8:	08148d88 	.word	0x08148d88
  ldr  r0, =_sdata
 80005cc:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80005d0:	20000168 	.word	0x20000168
  ldr  r2, =_sbss
 80005d4:	20000168 	.word	0x20000168
  ldr  r3, = _ebss
 80005d8:	200143f4 	.word	0x200143f4

080005dc <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80005dc:	e7fe      	b.n	80005dc <ADC_IRQHandler>
	...

080005e0 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 80005e0:	4770      	bx	lr
 80005e2:	bf00      	nop

080005e4 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 80005e4:	b508      	push	{r3, lr}
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
 80005e6:	f000 fd35 	bl	8001054 <touchgfx_components_init>
  touchgfx_init();
}
 80005ea:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  touchgfx_init();
 80005ee:	f000 bcbd 	b.w	8000f6c <touchgfx_init>
 80005f2:	bf00      	nop

080005f4 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 80005f4:	f000 bd30 	b.w	8001058 <touchgfx_taskEntry>

080005f8 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80005f8:	4770      	bx	lr

080005fa <_ZN20STM32TouchControllerD0Ev>:
 80005fa:	b510      	push	{r4, lr}
 80005fc:	2104      	movs	r1, #4
 80005fe:	4604      	mov	r4, r0
 8000600:	f026 ffbd 	bl	802757e <_ZdlPvj>
 8000604:	4620      	mov	r0, r4
 8000606:	bd10      	pop	{r4, pc}

08000608 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 8000608:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 800060a:	4b0c      	ldr	r3, [pc, #48]	; (800063c <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 800060c:	4c0c      	ldr	r4, [pc, #48]	; (8000640 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 800060e:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 8000610:	4b0c      	ldr	r3, [pc, #48]	; (8000644 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000612:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 8000614:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000616:	6863      	ldr	r3, [r4, #4]
 8000618:	4798      	blx	r3
 800061a:	f640 0311 	movw	r3, #2065	; 0x811
 800061e:	4298      	cmp	r0, r3
 8000620:	d10a      	bne.n	8000638 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 8000622:	4d09      	ldr	r5, [pc, #36]	; (8000648 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 8000624:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 8000626:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 8000628:	2082      	movs	r0, #130	; 0x82
 800062a:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 800062c:	682b      	ldr	r3, [r5, #0]
 800062e:	2082      	movs	r0, #130	; 0x82
 8000630:	68db      	ldr	r3, [r3, #12]
 8000632:	4798      	blx	r3
 8000634:	2000      	movs	r0, #0
    }

    return ret;
}
 8000636:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8000638:	2001      	movs	r0, #1
 800063a:	e7fc      	b.n	8000636 <_Z11BSP_TS_Inittt+0x2e>
 800063c:	20000184 	.word	0x20000184
 8000640:	20000050 	.word	0x20000050
 8000644:	20000186 	.word	0x20000186
 8000648:	20000188 	.word	0x20000188

0800064c <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 800064c:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8000650:	20f0      	movs	r0, #240	; 0xf0
 8000652:	f7ff bfd9 	b.w	8000608 <_Z11BSP_TS_Inittt>
	...

08000658 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8000658:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 800065a:	4d33      	ldr	r5, [pc, #204]	; (8000728 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd0>)
 800065c:	682b      	ldr	r3, [r5, #0]
{
 800065e:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000660:	691b      	ldr	r3, [r3, #16]
 8000662:	2082      	movs	r0, #130	; 0x82
 8000664:	4798      	blx	r3
 8000666:	b280      	uxth	r0, r0
 8000668:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 800066a:	2800      	cmp	r0, #0
 800066c:	d04a      	beq.n	8000704 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xac>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 800066e:	682b      	ldr	r3, [r5, #0]
 8000670:	f10d 0206 	add.w	r2, sp, #6
 8000674:	695b      	ldr	r3, [r3, #20]
 8000676:	a901      	add	r1, sp, #4
 8000678:	2082      	movs	r0, #130	; 0x82
 800067a:	4798      	blx	r3

        //Ensures the coordinates is within the screen
        if (y > 3700)
 800067c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8000680:	f640 6274 	movw	r2, #3700	; 0xe74
 8000684:	4293      	cmp	r3, r2
 8000686:	d93f      	bls.n	8000708 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb0>
        {
            y = 3700;
 8000688:	f8ad 2006 	strh.w	r2, [sp, #6]

        /* Y value first correction */
        y -= 180;

        /* Y value second correction */
        y = 3520 - y;
 800068c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8000690:	1ad2      	subs	r2, r2, r3
 8000692:	b292      	uxth	r2, r2

        /* Y value third correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 8000694:	2a0a      	cmp	r2, #10
 8000696:	d93d      	bls.n	8000714 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>
        yr = y / 11;
 8000698:	230b      	movs	r3, #11
 800069a:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 800069e:	4b23      	ldr	r3, [pc, #140]	; (800072c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd4>)
 80006a0:	881b      	ldrh	r3, [r3, #0]
 80006a2:	429a      	cmp	r2, r3
 80006a4:	d901      	bls.n	80006aa <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
        {
            yr = TsYBoundary - 1;
 80006a6:	3b01      	subs	r3, #1
 80006a8:	b29a      	uxth	r2, r3
        {
        }
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 80006aa:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80006ae:	f640 31b8 	movw	r1, #3000	; 0xbb8
 80006b2:	428b      	cmp	r3, r1
 80006b4:	d830      	bhi.n	8000718 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>
        {
            x = 3870 - x;
 80006b6:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 80006ba:	330e      	adds	r3, #14
 80006bc:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 80006be:	210f      	movs	r1, #15
 80006c0:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 80006c4:	491a      	ldr	r1, [pc, #104]	; (8000730 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd8>)
 80006c6:	8809      	ldrh	r1, [r1, #0]
 80006c8:	428b      	cmp	r3, r1
 80006ca:	d901      	bls.n	80006d0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
        {
            xr = TsXBoundary - 1;
 80006cc:	3901      	subs	r1, #1
 80006ce:	b28b      	uxth	r3, r1
        else
        {
        }

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006d0:	4e18      	ldr	r6, [pc, #96]	; (8000734 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xdc>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006d2:	4d19      	ldr	r5, [pc, #100]	; (8000738 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe0>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006d4:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006d6:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006d8:	4283      	cmp	r3, r0
 80006da:	b281      	uxth	r1, r0
 80006dc:	bf8c      	ite	hi
 80006de:	1a59      	subhi	r1, r3, r1
 80006e0:	1ac9      	subls	r1, r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006e2:	b2b8      	uxth	r0, r7
 80006e4:	42ba      	cmp	r2, r7
 80006e6:	bf8c      	ite	hi
 80006e8:	1a10      	subhi	r0, r2, r0
 80006ea:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006ec:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006ee:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 80006f0:	4401      	add	r1, r0
 80006f2:	2905      	cmp	r1, #5
        {
            _x = x;
 80006f4:	bfc8      	it	gt
 80006f6:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 80006f8:	6833      	ldr	r3, [r6, #0]
            _y = y;
 80006fa:	bfc8      	it	gt
 80006fc:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 80006fe:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 8000700:	682b      	ldr	r3, [r5, #0]
 8000702:	80a3      	strh	r3, [r4, #4]
    }
}
 8000704:	b003      	add	sp, #12
 8000706:	bdf0      	pop	{r4, r5, r6, r7, pc}
        else if (y < 180)
 8000708:	2bb3      	cmp	r3, #179	; 0xb3
            y = 180;
 800070a:	bf9c      	itt	ls
 800070c:	23b4      	movls	r3, #180	; 0xb4
 800070e:	f8ad 3006 	strhls.w	r3, [sp, #6]
 8000712:	e7bb      	b.n	800068c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x34>
            yr = 0;
 8000714:	2200      	movs	r2, #0
 8000716:	e7c8      	b.n	80006aa <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
            x = 3800 - x;
 8000718:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 800071c:	3308      	adds	r3, #8
 800071e:	b29b      	uxth	r3, r3
        if (xr <= 0)
 8000720:	2b0e      	cmp	r3, #14
 8000722:	d8cc      	bhi.n	80006be <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x66>
            xr = 0;
 8000724:	2300      	movs	r3, #0
 8000726:	e7d3      	b.n	80006d0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
 8000728:	20000188 	.word	0x20000188
 800072c:	20000186 	.word	0x20000186
 8000730:	20000184 	.word	0x20000184
 8000734:	2000018c 	.word	0x2000018c
 8000738:	20000190 	.word	0x20000190

0800073c <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 800073c:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 800073e:	4668      	mov	r0, sp
{
 8000740:	460d      	mov	r5, r1
 8000742:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8000744:	f7ff ff88 	bl	8000658 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8000748:	f8bd 0000 	ldrh.w	r0, [sp]
 800074c:	b148      	cbz	r0, 8000762 <_ZN20STM32TouchController11sampleTouchERlS0_+0x26>
        x = state.X;
 800074e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8000752:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8000754:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000758:	6023      	str	r3, [r4, #0]
        sleep_timeout_value = 60;
 800075a:	4b03      	ldr	r3, [pc, #12]	; (8000768 <_ZN20STM32TouchController11sampleTouchERlS0_+0x2c>)
 800075c:	223c      	movs	r2, #60	; 0x3c
 800075e:	601a      	str	r2, [r3, #0]
        return true;
 8000760:	2001      	movs	r0, #1
}
 8000762:	b003      	add	sp, #12
 8000764:	bd30      	pop	{r4, r5, pc}
 8000766:	bf00      	nop
 8000768:	20000014 	.word	0x20000014

0800076c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 800076c:	b110      	cbz	r0, 8000774 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x8>
 800076e:	2802      	cmp	r0, #2
 8000770:	d009      	beq.n	8000786 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
 8000772:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8000774:	4b07      	ldr	r3, [pc, #28]	; (8000794 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8000776:	681a      	ldr	r2, [r3, #0]
 8000778:	fab2 f282 	clz	r2, r2
 800077c:	0952      	lsrs	r2, r2, #5
 800077e:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 8000780:	4805      	ldr	r0, [pc, #20]	; (8000798 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
 8000782:	f008 bc21 	b.w	8008fc8 <HAL_GPIO_WritePin>
 8000786:	4b03      	ldr	r3, [pc, #12]	; (8000794 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8000788:	689a      	ldr	r2, [r3, #8]
 800078a:	fab2 f282 	clz	r2, r2
 800078e:	0952      	lsrs	r2, r2, #5
 8000790:	2110      	movs	r1, #16
 8000792:	e7f5      	b.n	8000780 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x14>
 8000794:	20000194 	.word	0x20000194
 8000798:	40021000 	.word	0x40021000

0800079c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 800079c:	b110      	cbz	r0, 80007a4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x8>
 800079e:	2802      	cmp	r0, #2
 80007a0:	d009      	beq.n	80007b6 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
 80007a2:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 80007a4:	4b07      	ldr	r3, [pc, #28]	; (80007c4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 80007a6:	681a      	ldr	r2, [r3, #0]
 80007a8:	3a00      	subs	r2, #0
 80007aa:	bf18      	it	ne
 80007ac:	2201      	movne	r2, #1
 80007ae:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 80007b0:	4805      	ldr	r0, [pc, #20]	; (80007c8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
 80007b2:	f008 bc09 	b.w	8008fc8 <HAL_GPIO_WritePin>
 80007b6:	4b03      	ldr	r3, [pc, #12]	; (80007c4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 80007b8:	689a      	ldr	r2, [r3, #8]
 80007ba:	3a00      	subs	r2, #0
 80007bc:	bf18      	it	ne
 80007be:	2201      	movne	r2, #1
 80007c0:	2110      	movs	r1, #16
 80007c2:	e7f5      	b.n	80007b0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x14>
 80007c4:	20000194 	.word	0x20000194
 80007c8:	40021000 	.word	0x40021000

080007cc <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 80007cc:	b110      	cbz	r0, 80007d4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x8>
 80007ce:	2802      	cmp	r0, #2
 80007d0:	d004      	beq.n	80007dc <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
 80007d2:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80007d4:	2104      	movs	r1, #4
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 80007d6:	4802      	ldr	r0, [pc, #8]	; (80007e0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x14>)
 80007d8:	f008 bbfa 	b.w	8008fd0 <HAL_GPIO_TogglePin>
 80007dc:	2110      	movs	r1, #16
 80007de:	e7fa      	b.n	80007d6 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xa>
 80007e0:	40021000 	.word	0x40021000

080007e4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 80007e4:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 80007e6:	b130      	cbz	r0, 80007f6 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
 80007e8:	2802      	cmp	r0, #2
 80007ea:	d009      	beq.n	8000800 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x1c>
 80007ec:	2000      	movs	r0, #0
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 80007ee:	1e43      	subs	r3, r0, #1
 80007f0:	4258      	negs	r0, r3
 80007f2:	4158      	adcs	r0, r3
 80007f4:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80007f6:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 80007f8:	4802      	ldr	r0, [pc, #8]	; (8000804 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x20>)
 80007fa:	f008 fbdf 	bl	8008fbc <HAL_GPIO_ReadPin>
        break;
 80007fe:	e7f6      	b.n	80007ee <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0xa>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8000800:	2110      	movs	r1, #16
 8000802:	e7f9      	b.n	80007f8 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x14>
 8000804:	40021000 	.word	0x40021000

08000808 <_ZN8touchgfx4GPIO4initEv>:
{
 8000808:	b570      	push	{r4, r5, r6, lr}
 800080a:	4d08      	ldr	r5, [pc, #32]	; (800082c <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 800080c:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 800080e:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8000810:	b2e0      	uxtb	r0, r4
 8000812:	f7ff ffe7 	bl	80007e4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 8000816:	b118      	cbz	r0, 8000820 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 8000818:	682b      	ldr	r3, [r5, #0]
 800081a:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 800081c:	bf18      	it	ne
 800081e:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 8000820:	3401      	adds	r4, #1
 8000822:	2c05      	cmp	r4, #5
 8000824:	f105 0504 	add.w	r5, r5, #4
 8000828:	d1f2      	bne.n	8000810 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 800082a:	bd70      	pop	{r4, r5, r6, pc}
 800082c:	20000194 	.word	0x20000194

08000830 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8000830:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8000832:	f880 1078 	strb.w	r1, [r0, #120]	; 0x78
        displayOrientationChangeRequested = true;
 8000836:	f880 3079 	strb.w	r3, [r0, #121]	; 0x79
    }
 800083a:	4770      	bx	lr

0800083c <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 800083c:	2000      	movs	r0, #0
 800083e:	4770      	bx	lr

08000840 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000840:	4b03      	ldr	r3, [pc, #12]	; (8000850 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8000842:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000844:	3900      	subs	r1, #0
 8000846:	bf18      	it	ne
 8000848:	2101      	movne	r1, #1
 800084a:	7019      	strb	r1, [r3, #0]
    }
 800084c:	4770      	bx	lr
 800084e:	bf00      	nop
 8000850:	200137bb 	.word	0x200137bb

08000854 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8000854:	2000      	movs	r0, #0
 8000856:	4770      	bx	lr

08000858 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8000858:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800085a:	b10b      	cbz	r3, 8000860 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 800085c:	4608      	mov	r0, r1
 800085e:	4718      	bx	r3
        }
    }
 8000860:	4770      	bx	lr

08000862 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8000862:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8000866:	4770      	bx	lr

08000868 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8000868:	6840      	ldr	r0, [r0, #4]
 800086a:	6803      	ldr	r3, [r0, #0]
 800086c:	699b      	ldr	r3, [r3, #24]
 800086e:	4718      	bx	r3

08000870 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8000870:	4770      	bx	lr

08000872 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 8000872:	4770      	bx	lr

08000874 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8000874:	4770      	bx	lr
	...

08000878 <_ZN11TouchGFXHAL10initializeEv>:
LOCATION_PRAGMA("TouchGFX_Framebuffer")
uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE("TouchGFX_Framebuffer");
}

void TouchGFXHAL::initialize()
{
 8000878:	b510      	push	{r4, lr}
 800087a:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 800087c:	f000 fcd8 	bl	8001230 <_ZN20TouchGFXGeneratedHAL10initializeEv>

    // Add animation storage
    setAnimationStorage((void*)animationStorage);
 8000880:	6823      	ldr	r3, [r4, #0]
 8000882:	4903      	ldr	r1, [pc, #12]	; (8000890 <_ZN11TouchGFXHAL10initializeEv+0x18>)
 8000884:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8000888:	4620      	mov	r0, r4
}
 800088a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    setAnimationStorage((void*)animationStorage);
 800088e:	4718      	bx	r3
 8000890:	d0000000 	.word	0xd0000000

08000894 <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 8000894:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8000896:	6803      	ldr	r3, [r0, #0]
{
 8000898:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 800089a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800089e:	4798      	blx	r3
    enableInterrupts();
 80008a0:	6823      	ldr	r3, [r4, #0]
 80008a2:	4620      	mov	r0, r4
 80008a4:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80008a6:	4798      	blx	r3

    OSWrappers::waitForVSync();
 80008a8:	f000 f8ec 	bl	8000a84 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 80008ac:	6823      	ldr	r3, [r4, #0]
 80008ae:	4620      	mov	r0, r4
 80008b0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80008b2:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 80008b4:	2029      	movs	r0, #41	; 0x29
 80008b6:	f001 f8eb 	bl	8001a90 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 80008ba:	f000 f8e3 	bl	8000a84 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 80008be:	6823      	ldr	r3, [r4, #0]
 80008c0:	4620      	mov	r0, r4
 80008c2:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80008c4:	4798      	blx	r3
    for (;;)
 80008c6:	e7f8      	b.n	80008ba <_ZN11TouchGFXHAL9taskEntryEv+0x26>

080008c8 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 80008c8:	b510      	push	{r4, lr}
 80008ca:	4604      	mov	r4, r0
        swapFrameBuffers();
 80008cc:	f00f fe8a 	bl	80105e4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 80008d0:	6823      	ldr	r3, [r4, #0]
 80008d2:	4620      	mov	r0, r4
 80008d4:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 80008d8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 80008dc:	4718      	bx	r3

080008de <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 80008de:	f000 bc99 	b.w	8001214 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

080008e2 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 80008e2:	f000 bc9d 	b.w	8001220 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

080008e6 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 80008e6:	f000 bcc1 	b.w	800126c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

080008ea <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 80008ea:	f000 bc6f 	b.w	80011cc <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

080008ee <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 80008ee:	f000 bcc9 	b.w	8001284 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

080008f2 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 80008f2:	f000 bcd1 	b.w	8001298 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

080008f6 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 80008f6:	f000 bc73 	b.w	80011e0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

080008fa <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 80008fa:	f00f b8df 	b.w	800fabc <_ZN8touchgfx3HAL16flushFrameBufferEv>

080008fe <_ZN11TouchGFXHALD0Ev>:
 80008fe:	b510      	push	{r4, lr}
 8000900:	217c      	movs	r1, #124	; 0x7c
 8000902:	4604      	mov	r4, r0
 8000904:	f026 fe3b 	bl	802757e <_ZdlPvj>
 8000908:	4620      	mov	r0, r4
 800090a:	bd10      	pop	{r4, pc}

0800090c <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 800090c:	f890 307a 	ldrb.w	r3, [r0, #122]	; 0x7a
 8000910:	b11b      	cbz	r3, 800091a <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 8000912:	6840      	ldr	r0, [r0, #4]
 8000914:	6803      	ldr	r3, [r0, #0]
 8000916:	681b      	ldr	r3, [r3, #0]
 8000918:	4718      	bx	r3
    }
 800091a:	4618      	mov	r0, r3
 800091c:	4770      	bx	lr
	...

08000920 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 8000920:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 8000922:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 8000926:	f890 4078 	ldrb.w	r4, [r0, #120]	; 0x78
            if (DISPLAY_ROTATION == rotate0)
 800092a:	4b0c      	ldr	r3, [pc, #48]	; (800095c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 800092c:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 800092e:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 8000930:	d009      	beq.n	8000946 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 8000932:	b93a      	cbnz	r2, 8000944 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000934:	4a0a      	ldr	r2, [pc, #40]	; (8000960 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000936:	490b      	ldr	r1, [pc, #44]	; (8000964 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000938:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 800093a:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 800093c:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800093e:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 8000940:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 8000942:	701a      	strb	r2, [r3, #0]
    }
 8000944:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8000946:	2a00      	cmp	r2, #0
 8000948:	d0fc      	beq.n	8000944 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800094a:	4a05      	ldr	r2, [pc, #20]	; (8000960 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 800094c:	4905      	ldr	r1, [pc, #20]	; (8000964 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800094e:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000950:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 8000952:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000954:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8000956:	2200      	movs	r2, #0
 8000958:	e7f3      	b.n	8000942 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 800095a:	bf00      	nop
 800095c:	200137b4 	.word	0x200137b4
 8000960:	200137b0 	.word	0x200137b0
 8000964:	200137b2 	.word	0x200137b2

08000968 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8000968:	b570      	push	{r4, r5, r6, lr}
 800096a:	460d      	mov	r5, r1
 800096c:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 800096e:	b935      	cbnz	r5, 800097e <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 8000970:	4b09      	ldr	r3, [pc, #36]	; (8000998 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 8000972:	4a0a      	ldr	r2, [pc, #40]	; (800099c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8000974:	480a      	ldr	r0, [pc, #40]	; (80009a0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8000976:	f240 21d2 	movw	r1, #722	; 0x2d2
 800097a:	f027 fbf1 	bl	8028160 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 800097e:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8000982:	4b08      	ldr	r3, [pc, #32]	; (80009a4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8000984:	3a00      	subs	r2, #0
 8000986:	bf18      	it	ne
 8000988:	2201      	movne	r2, #1
 800098a:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 800098c:	6803      	ldr	r3, [r0, #0]
    }
 800098e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 8000992:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8000996:	4718      	bx	r3
 8000998:	080292d0 	.word	0x080292d0
 800099c:	08029308 	.word	0x08029308
 80009a0:	08029356 	.word	0x08029356
 80009a4:	200137ba 	.word	0x200137ba

080009a8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 80009a8:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 80009aa:	4b09      	ldr	r3, [pc, #36]	; (80009d0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 80009ac:	881b      	ldrh	r3, [r3, #0]
 80009ae:	428b      	cmp	r3, r1
 80009b0:	d803      	bhi.n	80009ba <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 80009b2:	4b08      	ldr	r3, [pc, #32]	; (80009d4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 80009b4:	881b      	ldrh	r3, [r3, #0]
 80009b6:	4293      	cmp	r3, r2
 80009b8:	d905      	bls.n	80009c6 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 80009ba:	4b07      	ldr	r3, [pc, #28]	; (80009d8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 80009bc:	4a07      	ldr	r2, [pc, #28]	; (80009dc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 80009be:	4808      	ldr	r0, [pc, #32]	; (80009e0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 80009c0:	219e      	movs	r1, #158	; 0x9e
 80009c2:	f027 fbcd 	bl	8028160 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 80009c6:	4b07      	ldr	r3, [pc, #28]	; (80009e4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 80009c8:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 80009ca:	4b07      	ldr	r3, [pc, #28]	; (80009e8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 80009cc:	801a      	strh	r2, [r3, #0]
    }
 80009ce:	bd08      	pop	{r3, pc}
 80009d0:	200137b0 	.word	0x200137b0
 80009d4:	200137b2 	.word	0x200137b2
 80009d8:	0802939b 	.word	0x0802939b
 80009dc:	080293fe 	.word	0x080293fe
 80009e0:	08029356 	.word	0x08029356
 80009e4:	200137b6 	.word	0x200137b6
 80009e8:	200137b8 	.word	0x200137b8

080009ec <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80009ec:	2101      	movs	r1, #1
{
 80009ee:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80009f0:	2200      	movs	r2, #0
 80009f2:	4608      	mov	r0, r1
 80009f4:	f00b fe6c 	bl	800c6d0 <osSemaphoreNew>
 80009f8:	4b0a      	ldr	r3, [pc, #40]	; (8000a24 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 80009fa:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 80009fc:	b928      	cbnz	r0, 8000a0a <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 80009fe:	4b0a      	ldr	r3, [pc, #40]	; (8000a28 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8000a00:	4a0a      	ldr	r2, [pc, #40]	; (8000a2c <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000a02:	2128      	movs	r1, #40	; 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000a04:	480a      	ldr	r0, [pc, #40]	; (8000a30 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8000a06:	f027 fbab 	bl	8028160 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000a0a:	2200      	movs	r2, #0
 8000a0c:	2104      	movs	r1, #4
 8000a0e:	2001      	movs	r0, #1
 8000a10:	f00b ff12 	bl	800c838 <osMessageQueueNew>
 8000a14:	4b07      	ldr	r3, [pc, #28]	; (8000a34 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000a16:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000a18:	b918      	cbnz	r0, 8000a22 <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000a1a:	4b07      	ldr	r3, [pc, #28]	; (8000a38 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000a1c:	4a03      	ldr	r2, [pc, #12]	; (8000a2c <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000a1e:	212c      	movs	r1, #44	; 0x2c
 8000a20:	e7f0      	b.n	8000a04 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8000a22:	bd08      	pop	{r3, pc}
 8000a24:	200001a8 	.word	0x200001a8
 8000a28:	0802951c 	.word	0x0802951c
 8000a2c:	08029565 	.word	0x08029565
 8000a30:	08029594 	.word	0x08029594
 8000a34:	200001a4 	.word	0x200001a4
 8000a38:	0802961c 	.word	0x0802961c

08000a3c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000a3c:	4b02      	ldr	r3, [pc, #8]	; (8000a48 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8000a3e:	f04f 31ff 	mov.w	r1, #4294967295
 8000a42:	6818      	ldr	r0, [r3, #0]
 8000a44:	f00b be98 	b.w	800c778 <osSemaphoreAcquire>
 8000a48:	200001a8 	.word	0x200001a8

08000a4c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000a4c:	4b01      	ldr	r3, [pc, #4]	; (8000a54 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8000a4e:	6818      	ldr	r0, [r3, #0]
 8000a50:	f00b bec6 	b.w	800c7e0 <osSemaphoreRelease>
 8000a54:	200001a8 	.word	0x200001a8

08000a58 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000a58:	4b02      	ldr	r3, [pc, #8]	; (8000a64 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000a5a:	2100      	movs	r1, #0
 8000a5c:	6818      	ldr	r0, [r3, #0]
 8000a5e:	f00b be8b 	b.w	800c778 <osSemaphoreAcquire>
 8000a62:	bf00      	nop
 8000a64:	200001a8 	.word	0x200001a8

08000a68 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8000a68:	f7ff bff0 	b.w	8000a4c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000a6c <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000a6c:	4803      	ldr	r0, [pc, #12]	; (8000a7c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8000a6e:	4904      	ldr	r1, [pc, #16]	; (8000a80 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8000a70:	6800      	ldr	r0, [r0, #0]
 8000a72:	2300      	movs	r3, #0
 8000a74:	461a      	mov	r2, r3
 8000a76:	f00b bf19 	b.w	800c8ac <osMessageQueuePut>
 8000a7a:	bf00      	nop
 8000a7c:	200001a4 	.word	0x200001a4
 8000a80:	20000004 	.word	0x20000004

08000a84 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000a84:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000a86:	4c08      	ldr	r4, [pc, #32]	; (8000aa8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000a88:	2300      	movs	r3, #0
 8000a8a:	461a      	mov	r2, r3
 8000a8c:	a901      	add	r1, sp, #4
 8000a8e:	6820      	ldr	r0, [r4, #0]
 8000a90:	f00b ff42 	bl	800c918 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000a94:	6820      	ldr	r0, [r4, #0]
 8000a96:	f04f 33ff 	mov.w	r3, #4294967295
 8000a9a:	2200      	movs	r2, #0
 8000a9c:	a901      	add	r1, sp, #4
 8000a9e:	f00b ff3b 	bl	800c918 <osMessageQueueGet>
}
 8000aa2:	b002      	add	sp, #8
 8000aa4:	bd10      	pop	{r4, pc}
 8000aa6:	bf00      	nop
 8000aa8:	200001a4 	.word	0x200001a4

08000aac <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8000aac:	6803      	ldr	r3, [r0, #0]
 8000aae:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000ab0:	4718      	bx	r3

08000ab2 <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 8000ab2:	2001      	movs	r0, #1
 8000ab4:	4770      	bx	lr

08000ab6 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 8000ab6:	6803      	ldr	r3, [r0, #0]
 8000ab8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8000aba:	4718      	bx	r3

08000abc <_ZN8STM32DMA10initializeEv>:
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void STM32DMA::initialize()
{
 8000abc:	b082      	sub	sp, #8
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000abe:	2300      	movs	r3, #0
 8000ac0:	9301      	str	r3, [sp, #4]
 8000ac2:	4b0d      	ldr	r3, [pc, #52]	; (8000af8 <_ZN8STM32DMA10initializeEv+0x3c>)
 8000ac4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000ac6:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8000aca:	631a      	str	r2, [r3, #48]	; 0x30
 8000acc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000ace:	f402 0200 	and.w	r2, r2, #8388608	; 0x800000
 8000ad2:	9201      	str	r2, [sp, #4]
 8000ad4:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 8000ad6:	691a      	ldr	r2, [r3, #16]
 8000ad8:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8000adc:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 8000ade:	691a      	ldr	r2, [r3, #16]
 8000ae0:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 8000ae4:	611a      	str	r2, [r3, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 8000ae6:	4b05      	ldr	r3, [pc, #20]	; (8000afc <_ZN8STM32DMA10initializeEv+0x40>)
 8000ae8:	4a05      	ldr	r2, [pc, #20]	; (8000b00 <_ZN8STM32DMA10initializeEv+0x44>)
 8000aea:	611a      	str	r2, [r3, #16]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000aec:	4b05      	ldr	r3, [pc, #20]	; (8000b04 <_ZN8STM32DMA10initializeEv+0x48>)
 8000aee:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000af2:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 8000af4:	b002      	add	sp, #8
 8000af6:	4770      	bx	lr
 8000af8:	40023800 	.word	0x40023800
 8000afc:	20002634 	.word	0x20002634
 8000b00:	08000b49 	.word	0x08000b49
 8000b04:	e000e100 	.word	0xe000e100

08000b08 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8000b08:	f240 30ef 	movw	r0, #1007	; 0x3ef
 8000b0c:	4770      	bx	lr
	...

08000b10 <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 8000b10:	4b05      	ldr	r3, [pc, #20]	; (8000b28 <_ZN8STM32DMAD1Ev+0x18>)
 8000b12:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000b14:	4b05      	ldr	r3, [pc, #20]	; (8000b2c <_ZN8STM32DMAD1Ev+0x1c>)
 8000b16:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000b1a:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8000b1e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000b22:	f3bf 8f6f 	isb	sy
}
 8000b26:	4770      	bx	lr
 8000b28:	080297f4 	.word	0x080297f4
 8000b2c:	e000e100 	.word	0xe000e100

08000b30 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8000b30:	b510      	push	{r4, lr}
 8000b32:	4604      	mov	r4, r0
}
 8000b34:	f44f 615a 	mov.w	r1, #3488	; 0xda0
 8000b38:	f7ff ffea 	bl	8000b10 <_ZN8STM32DMAD1Ev>
 8000b3c:	4620      	mov	r0, r4
 8000b3e:	f026 fd1e 	bl	802757e <_ZdlPvj>
 8000b42:	4620      	mov	r0, r4
 8000b44:	bd10      	pop	{r4, pc}
	...

08000b48 <DMA2D_XferCpltCallback>:
        return instance;
 8000b48:	4b02      	ldr	r3, [pc, #8]	; (8000b54 <DMA2D_XferCpltCallback+0xc>)
 8000b4a:	681b      	ldr	r3, [r3, #0]
 8000b4c:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8000b4e:	6803      	ldr	r3, [r0, #0]
 8000b50:	695b      	ldr	r3, [r3, #20]
 8000b52:	4718      	bx	r3
 8000b54:	200137bc 	.word	0x200137bc

08000b58 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8000b58:	b570      	push	{r4, r5, r6, lr}
 8000b5a:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8000b5c:	4625      	mov	r5, r4
 8000b5e:	4b0a      	ldr	r3, [pc, #40]	; (8000b88 <_ZN8STM32DMAC1Ev+0x30>)
 8000b60:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8000b62:	2600      	movs	r6, #0
 8000b64:	6060      	str	r0, [r4, #4]
 8000b66:	7226      	strb	r6, [r4, #8]
 8000b68:	7266      	strb	r6, [r4, #9]
 8000b6a:	f845 3b20 	str.w	r3, [r5], #32
 8000b6e:	2260      	movs	r2, #96	; 0x60
 8000b70:	4629      	mov	r1, r5
 8000b72:	f00f fe8f 	bl	8010894 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8000b76:	f504 635a 	add.w	r3, r4, #3488	; 0xda0
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8000b7a:	60ee      	str	r6, [r5, #12]
 8000b7c:	3524      	adds	r5, #36	; 0x24
 8000b7e:	42ab      	cmp	r3, r5
 8000b80:	d1fb      	bne.n	8000b7a <_ZN8STM32DMAC1Ev+0x22>
}
 8000b82:	4620      	mov	r0, r4
 8000b84:	bd70      	pop	{r4, r5, r6, pc}
 8000b86:	bf00      	nop
 8000b88:	080297f4 	.word	0x080297f4

08000b8c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8000b8c:	b508      	push	{r3, lr}
    switch (format)
 8000b8e:	290b      	cmp	r1, #11
 8000b90:	d80b      	bhi.n	8000baa <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1e>
 8000b92:	e8df f001 	tbb	[pc, r1]
 8000b96:	0612      	.short	0x0612
 8000b98:	0a0a0a10 	.word	0x0a0a0a10
 8000b9c:	0808080a 	.word	0x0808080a
 8000ba0:	0808      	.short	0x0808
 8000ba2:	2001      	movs	r0, #1
}
 8000ba4:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8000ba6:	2005      	movs	r0, #5
        break;
 8000ba8:	e7fc      	b.n	8000ba4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        assert(0 && "Unsupported Format!");
 8000baa:	4b05      	ldr	r3, [pc, #20]	; (8000bc0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8000bac:	4a05      	ldr	r2, [pc, #20]	; (8000bc4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8000bae:	4806      	ldr	r0, [pc, #24]	; (8000bc8 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x3c>)
 8000bb0:	2165      	movs	r1, #101	; 0x65
 8000bb2:	f027 fad5 	bl	8028160 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8000bb6:	2000      	movs	r0, #0
 8000bb8:	e7f4      	b.n	8000ba4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000bba:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000bbc:	e7f2      	b.n	8000ba4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8000bbe:	bf00      	nop
 8000bc0:	0802965e 	.word	0x0802965e
 8000bc4:	08029679 	.word	0x08029679
 8000bc8:	080296c3 	.word	0x080296c3

08000bcc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8000bcc:	b508      	push	{r3, lr}
    switch (format)
 8000bce:	290a      	cmp	r1, #10
 8000bd0:	d809      	bhi.n	8000be6 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1a>
 8000bd2:	e8df f001 	tbb	[pc, r1]
 8000bd6:	0610      	.short	0x0610
 8000bd8:	0808080e 	.word	0x0808080e
 8000bdc:	06060608 	.word	0x06060608
 8000be0:	06          	.byte	0x06
 8000be1:	00          	.byte	0x00
 8000be2:	2001      	movs	r0, #1
}
 8000be4:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8000be6:	4b05      	ldr	r3, [pc, #20]	; (8000bfc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x30>)
 8000be8:	4a05      	ldr	r2, [pc, #20]	; (8000c00 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8000bea:	4806      	ldr	r0, [pc, #24]	; (8000c04 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8000bec:	2186      	movs	r1, #134	; 0x86
 8000bee:	f027 fab7 	bl	8028160 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000bf2:	2000      	movs	r0, #0
 8000bf4:	e7f6      	b.n	8000be4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8000bf6:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000bf8:	e7f4      	b.n	8000be4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8000bfa:	bf00      	nop
 8000bfc:	0802965e 	.word	0x0802965e
 8000c00:	08029749 	.word	0x08029749
 8000c04:	080296c3 	.word	0x080296c3

08000c08 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32DMA::setupDataCopy(const BlitOp& blitOp)
{
 8000c08:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000c0c:	f891 801d 	ldrb.w	r8, [r1, #29]
{
 8000c10:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000c12:	4641      	mov	r1, r8
{
 8000c14:	4607      	mov	r7, r0
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000c16:	f7ff ffb9 	bl	8000b8c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c1a:	f894 901e 	ldrb.w	r9, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000c1e:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c20:	4649      	mov	r1, r9
 8000c22:	4638      	mov	r0, r7
 8000c24:	f7ff ffb2 	bl	8000b8c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c28:	4649      	mov	r1, r9
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c2a:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c2c:	4638      	mov	r0, r7
 8000c2e:	f7ff ffcd 	bl	8000bcc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c32:	8aa1      	ldrh	r1, [r4, #20]
 8000c34:	8b62      	ldrh	r2, [r4, #26]
 8000c36:	4b43      	ldr	r3, [pc, #268]	; (8000d44 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000c38:	1a52      	subs	r2, r2, r1
 8000c3a:	641a      	str	r2, [r3, #64]	; 0x40

    /* DMA2D BGOR register configuration */
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c3c:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration */
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8000c3e:	8b22      	ldrh	r2, [r4, #24]
 8000c40:	1a52      	subs	r2, r2, r1
 8000c42:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c44:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000c46:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c48:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000c4c:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c4e:	6920      	ldr	r0, [r4, #16]

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000c50:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c52:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000c54:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 8000c56:	6827      	ldr	r7, [r4, #0]
 8000c58:	2f80      	cmp	r7, #128	; 0x80
 8000c5a:	d028      	beq.n	8000cae <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa6>
 8000c5c:	7f22      	ldrb	r2, [r4, #28]
 8000c5e:	d80f      	bhi.n	8000c80 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x78>
 8000c60:	2f20      	cmp	r7, #32
 8000c62:	d065      	beq.n	8000d30 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8000c64:	2f40      	cmp	r7, #64	; 0x40
 8000c66:	d063      	beq.n	8000d30 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8000c68:	2f04      	cmp	r7, #4
 8000c6a:	d01a      	beq.n	8000ca2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9a>
        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
        break;
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000c6c:	4b35      	ldr	r3, [pc, #212]	; (8000d44 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000c6e:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 8000c72:	f445 3500 	orr.w	r5, r5, #131072	; 0x20000

        /* Perform pixel-format-conversion (PFC) If Bitmap format is not same format as framebuffer format */
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000c76:	45c8      	cmp	r8, r9
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000c78:	61dd      	str	r5, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000c7a:	d05f      	beq.n	8000d3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x134>
        {
            /* Start DMA2D : PFC Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8000c7c:	4a32      	ldr	r2, [pc, #200]	; (8000d48 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 8000c7e:	e044      	b.n	8000d0a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x102>
    switch (blitOp.operation)
 8000c80:	f5b7 7f80 	cmp.w	r7, #256	; 0x100
 8000c84:	d004      	beq.n	8000c90 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x88>
 8000c86:	f5b7 7f00 	cmp.w	r7, #512	; 0x200
 8000c8a:	d1ef      	bne.n	8000c6c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x64>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000c8c:	492f      	ldr	r1, [pc, #188]	; (8000d4c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
 8000c8e:	e000      	b.n	8000c92 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x8a>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000c90:	492f      	ldr	r1, [pc, #188]	; (8000d50 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000c92:	ea41 6202 	orr.w	r2, r1, r2, lsl #24
 8000c96:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 8000c98:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000c9a:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000c9c:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c9e:	6158      	str	r0, [r3, #20]
 8000ca0:	e032      	b.n	8000d08 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ca2:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 8000ca6:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000caa:	61da      	str	r2, [r3, #28]
 8000cac:	e7f6      	b.n	8000c9c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x94>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8000cae:	68a7      	ldr	r7, [r4, #8]
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8000cb0:	1d3a      	adds	r2, r7, #4
 8000cb2:	62da      	str	r2, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000cb4:	7f21      	ldrb	r1, [r4, #28]
            switch ((Bitmap::ClutFormat)palette->format)
 8000cb6:	783a      	ldrb	r2, [r7, #0]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000cb8:	ea45 6501 	orr.w	r5, r5, r1, lsl #24
 8000cbc:	f445 3500 	orr.w	r5, r5, #131072	; 0x20000
 8000cc0:	61dd      	str	r5, [r3, #28]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000cc2:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000cc4:	6158      	str	r0, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8000cc6:	b142      	cbz	r2, 8000cda <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd2>
 8000cc8:	2a01      	cmp	r2, #1
 8000cca:	d021      	beq.n	8000d10 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x108>
                assert(0 && "Unsupported format");
 8000ccc:	4b21      	ldr	r3, [pc, #132]	; (8000d54 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
 8000cce:	4a22      	ldr	r2, [pc, #136]	; (8000d58 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x150>)
 8000cd0:	4822      	ldr	r0, [pc, #136]	; (8000d5c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x154>)
 8000cd2:	f44f 7188 	mov.w	r1, #272	; 0x110
 8000cd6:	f027 fa43 	bl	8028160 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000cda:	69da      	ldr	r2, [r3, #28]
 8000cdc:	8879      	ldrh	r1, [r7, #2]
 8000cde:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8000ce2:	3901      	subs	r1, #1
 8000ce4:	f022 0210 	bic.w	r2, r2, #16
 8000ce8:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8000cec:	61da      	str	r2, [r3, #28]
            bool blend = true;
 8000cee:	2101      	movs	r1, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8000cf0:	4b14      	ldr	r3, [pc, #80]	; (8000d44 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000cf2:	69da      	ldr	r2, [r3, #28]
 8000cf4:	f042 0220 	orr.w	r2, r2, #32
 8000cf8:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8000cfa:	69da      	ldr	r2, [r3, #28]
 8000cfc:	0692      	lsls	r2, r2, #26
 8000cfe:	d4fc      	bmi.n	8000cfa <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf2>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8000d00:	2210      	movs	r2, #16
 8000d02:	609a      	str	r2, [r3, #8]
            if (blend)
 8000d04:	2900      	cmp	r1, #0
 8000d06:	d0b9      	beq.n	8000c7c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x74>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000d08:	4a15      	ldr	r2, [pc, #84]	; (8000d60 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x158>)
        }
        else
        {
            /* Start DMA2D : M2M Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000d0a:	601a      	str	r2, [r3, #0]
        }
        break;
    }
}
 8000d0c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000d10:	69da      	ldr	r2, [r3, #28]
 8000d12:	8878      	ldrh	r0, [r7, #2]
 8000d14:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8000d18:	3801      	subs	r0, #1
 8000d1a:	f022 0210 	bic.w	r2, r2, #16
 8000d1e:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
                if (blitOp.alpha == 255)
 8000d22:	39ff      	subs	r1, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000d24:	f042 0210 	orr.w	r2, r2, #16
                if (blitOp.alpha == 255)
 8000d28:	bf18      	it	ne
 8000d2a:	2101      	movne	r1, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000d2c:	61da      	str	r2, [r3, #28]
                break;
 8000d2e:	e7df      	b.n	8000cf0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe8>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000d30:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 8000d34:	4b03      	ldr	r3, [pc, #12]	; (8000d44 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000d36:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000d3a:	e7b6      	b.n	8000caa <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa2>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000d3c:	f240 2201 	movw	r2, #513	; 0x201
 8000d40:	e7e3      	b.n	8000d0a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x102>
 8000d42:	bf00      	nop
 8000d44:	4002b000 	.word	0x4002b000
 8000d48:	00010201 	.word	0x00010201
 8000d4c:	00020009 	.word	0x00020009
 8000d50:	0002000a 	.word	0x0002000a
 8000d54:	08029794 	.word	0x08029794
 8000d58:	080297ae 	.word	0x080297ae
 8000d5c:	080296c3 	.word	0x080296c3
 8000d60:	00020201 	.word	0x00020201

08000d64 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 8000d64:	b538      	push	{r3, r4, r5, lr}
 8000d66:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000d68:	7f89      	ldrb	r1, [r1, #30]
 8000d6a:	f7ff ff2f 	bl	8000bcc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000d6e:	8aa5      	ldrh	r5, [r4, #20]
 8000d70:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000d72:	4b16      	ldr	r3, [pc, #88]	; (8000dcc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000d74:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000d76:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000d78:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
 8000d7c:	645a      	str	r2, [r3, #68]	; 0x44

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000d7e:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000d80:	63d9      	str	r1, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000d82:	1b52      	subs	r2, r2, r5
 8000d84:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8000d86:	6825      	ldr	r5, [r4, #0]
 8000d88:	2d08      	cmp	r5, #8
 8000d8a:	d10e      	bne.n	8000daa <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000d8c:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000d8e:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000d90:	6258      	str	r0, [r3, #36]	; 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000d92:	7f20      	ldrb	r0, [r4, #28]
 8000d94:	4a0e      	ldr	r2, [pc, #56]	; (8000dd0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8000d96:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8000d9a:	61da      	str	r2, [r3, #28]
 8000d9c:	68e2      	ldr	r2, [r4, #12]

        /* DMA2D FGCOLR register configuration */
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000d9e:	621a      	str	r2, [r3, #32]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000da0:	4a0c      	ldr	r2, [pc, #48]	; (8000dd4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000da2:	6159      	str	r1, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000da4:	60d9      	str	r1, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000da6:	601a      	str	r2, [r3, #0]
    }
}
 8000da8:	bd38      	pop	{r3, r4, r5, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8000daa:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000dac:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8000dae:	611a      	str	r2, [r3, #16]
 8000db0:	68e1      	ldr	r1, [r4, #12]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 8000db2:	0a0a      	lsrs	r2, r1, #8
 8000db4:	0948      	lsrs	r0, r1, #5
 8000db6:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8000dba:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8000dbe:	4302      	orrs	r2, r0
 8000dc0:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8000dc4:	430a      	orrs	r2, r1
 8000dc6:	639a      	str	r2, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000dc8:	4a03      	ldr	r2, [pc, #12]	; (8000dd8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 8000dca:	e7ec      	b.n	8000da6 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8000dcc:	4002b000 	.word	0x4002b000
 8000dd0:	00010009 	.word	0x00010009
 8000dd4:	00020201 	.word	0x00020201
 8000dd8:	00030201 	.word	0x00030201

08000ddc <_ZN8touchgfx5paint8tearDownEv>:
* @brief Waits until previous DMA drawing operation has finished
*/
void tearDown()
{
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000ddc:	4b03      	ldr	r3, [pc, #12]	; (8000dec <_ZN8touchgfx5paint8tearDownEv+0x10>)
 8000dde:	681a      	ldr	r2, [r3, #0]
 8000de0:	07d2      	lsls	r2, r2, #31
 8000de2:	d4fc      	bmi.n	8000dde <_ZN8touchgfx5paint8tearDownEv+0x2>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000de4:	2223      	movs	r2, #35	; 0x23
 8000de6:	609a      	str	r2, [r3, #8]
}
 8000de8:	4770      	bx	lr
 8000dea:	bf00      	nop
 8000dec:	4002b000 	.word	0x4002b000

08000df0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
*
* @brief Renders Canvas Widget chunks using DMA.
* This functions will not generate an interrupt, and will not affect the DMA queue.
*/
void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
 8000df0:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000df2:	4c0f      	ldr	r4, [pc, #60]	; (8000e30 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x40>)
 8000df4:	6825      	ldr	r5, [r4, #0]
 8000df6:	07ed      	lsls	r5, r5, #31
 8000df8:	d4fc      	bmi.n	8000df4 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000dfa:	2523      	movs	r5, #35	; 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000dfc:	0409      	lsls	r1, r1, #16
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000dfe:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000e00:	f041 0101 	orr.w	r1, r1, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000e04:	2502      	movs	r5, #2

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    if (alpha < 0xFF)
 8000e06:	2bff      	cmp	r3, #255	; 0xff
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000e08:	6365      	str	r5, [r4, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000e0a:	6461      	str	r1, [r4, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8000e0c:	63e0      	str	r0, [r4, #60]	; 0x3c
    if (alpha < 0xFF)
 8000e0e:	d00a      	beq.n	8000e26 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x36>
    {
        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000e10:	4908      	ldr	r1, [pc, #32]	; (8000e34 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x44>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000e12:	6265      	str	r5, [r4, #36]	; 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000e14:	ea41 6303 	orr.w	r3, r1, r3, lsl #24
 8000e18:	61e3      	str	r3, [r4, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000e1a:	4b07      	ldr	r3, [pc, #28]	; (8000e38 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
        WRITE_REG(DMA2D->FGCOLR, color);
 8000e1c:	6222      	str	r2, [r4, #32]
        WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
 8000e1e:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
 8000e20:	60e0      	str	r0, [r4, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, color565);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8000e22:	6023      	str	r3, [r4, #0]
    }
}
 8000e24:	bd30      	pop	{r4, r5, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000e26:	61e5      	str	r5, [r4, #28]
        WRITE_REG(DMA2D->OCOLR, color565);
 8000e28:	9b03      	ldr	r3, [sp, #12]
 8000e2a:	63a3      	str	r3, [r4, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8000e2c:	4b03      	ldr	r3, [pc, #12]	; (8000e3c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
 8000e2e:	e7f8      	b.n	8000e22 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x32>
 8000e30:	4002b000 	.word	0x4002b000
 8000e34:	00010009 	.word	0x00010009
 8000e38:	00020001 	.word	0x00020001
 8000e3c:	00030001 	.word	0x00030001

08000e40 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8000e40:	2001      	movs	r0, #1
 8000e42:	4770      	bx	lr

08000e44 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8000e44:	2038      	movs	r0, #56	; 0x38
 8000e46:	4770      	bx	lr

08000e48 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8000e48:	2338      	movs	r3, #56	; 0x38
 8000e4a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000e4e:	3008      	adds	r0, #8
 8000e50:	4770      	bx	lr

08000e52 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8000e52:	2338      	movs	r3, #56	; 0x38
 8000e54:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000e58:	3008      	adds	r0, #8
 8000e5a:	4770      	bx	lr

08000e5c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI34Measurement_Accurate_Display_2ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000e5c:	2001      	movs	r0, #1
 8000e5e:	4770      	bx	lr

08000e60 <_ZN8touchgfx9PartitionINS_4meta8TypeListI34Measurement_Accurate_Display_2ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000e60:	f241 30e4 	movw	r0, #5092	; 0x13e4
 8000e64:	4770      	bx	lr

08000e66 <_ZN8touchgfx9PartitionINS_4meta8TypeListI34Measurement_Accurate_Display_2ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000e66:	f241 33e4 	movw	r3, #5092	; 0x13e4
 8000e6a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000e6e:	3008      	adds	r0, #8
 8000e70:	4770      	bx	lr

08000e72 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI34Measurement_Accurate_Display_2ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000e72:	f241 33e4 	movw	r3, #5092	; 0x13e4
 8000e76:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000e7a:	3008      	adds	r0, #8
 8000e7c:	4770      	bx	lr

08000e7e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000e7e:	2001      	movs	r0, #1
 8000e80:	4770      	bx	lr

08000e82 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000e82:	2010      	movs	r0, #16
 8000e84:	4770      	bx	lr

08000e86 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000e86:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000e8a:	3008      	adds	r0, #8
 8000e8c:	4770      	bx	lr

08000e8e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000e8e:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000e92:	3008      	adds	r0, #8
 8000e94:	4770      	bx	lr

08000e96 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoMain_MenuScreenNoTransition();
 8000e96:	4608      	mov	r0, r1
 8000e98:	f002 bc00 	b.w	800369c <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>

08000e9c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8000e9c:	b510      	push	{r4, lr}
 8000e9e:	4b03      	ldr	r3, [pc, #12]	; (8000eac <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8000ea0:	6003      	str	r3, [r0, #0]
 8000ea2:	4604      	mov	r4, r0
 8000ea4:	f00e f993 	bl	800f1ce <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000ea8:	4620      	mov	r0, r4
 8000eaa:	bd10      	pop	{r4, pc}
 8000eac:	080298ac 	.word	0x080298ac

08000eb0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8000eb0:	b510      	push	{r4, lr}
 8000eb2:	4604      	mov	r4, r0
 8000eb4:	f7ff fff2 	bl	8000e9c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000eb8:	4620      	mov	r0, r4
 8000eba:	2140      	movs	r1, #64	; 0x40
 8000ebc:	f026 fb5f 	bl	802757e <_ZdlPvj>
 8000ec0:	4620      	mov	r0, r4
 8000ec2:	bd10      	pop	{r4, pc}

08000ec4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI34Measurement_Accurate_Display_2ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000ec4:	b510      	push	{r4, lr}
 8000ec6:	4b03      	ldr	r3, [pc, #12]	; (8000ed4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI34Measurement_Accurate_Display_2ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000ec8:	6003      	str	r3, [r0, #0]
 8000eca:	4604      	mov	r4, r0
 8000ecc:	f00e f97f 	bl	800f1ce <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000ed0:	4620      	mov	r0, r4
 8000ed2:	bd10      	pop	{r4, pc}
 8000ed4:	08029878 	.word	0x08029878

08000ed8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI34Measurement_Accurate_Display_2ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000ed8:	b510      	push	{r4, lr}
 8000eda:	4604      	mov	r4, r0
 8000edc:	f7ff fff2 	bl	8000ec4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI34Measurement_Accurate_Display_2ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000ee0:	4620      	mov	r0, r4
 8000ee2:	f241 31ec 	movw	r1, #5100	; 0x13ec
 8000ee6:	f026 fb4a 	bl	802757e <_ZdlPvj>
 8000eea:	4620      	mov	r0, r4
 8000eec:	bd10      	pop	{r4, pc}
	...

08000ef0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000ef0:	b510      	push	{r4, lr}
 8000ef2:	4b03      	ldr	r3, [pc, #12]	; (8000f00 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000ef4:	6003      	str	r3, [r0, #0]
 8000ef6:	4604      	mov	r4, r0
 8000ef8:	f00e f969 	bl	800f1ce <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000efc:	4620      	mov	r0, r4
 8000efe:	bd10      	pop	{r4, pc}
 8000f00:	08029844 	.word	0x08029844

08000f04 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000f04:	b510      	push	{r4, lr}
 8000f06:	4604      	mov	r4, r0
 8000f08:	f7ff fff2 	bl	8000ef0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000f0c:	4620      	mov	r0, r4
 8000f0e:	2118      	movs	r1, #24
 8000f10:	f026 fb35 	bl	802757e <_ZdlPvj>
 8000f14:	4620      	mov	r0, r4
 8000f16:	bd10      	pop	{r4, pc}

08000f18 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8000f18:	b510      	push	{r4, lr}
 8000f1a:	4b09      	ldr	r3, [pc, #36]	; (8000f40 <_ZN12FrontendHeapD1Ev+0x28>)
 8000f1c:	6003      	str	r3, [r0, #0]
 8000f1e:	4604      	mov	r4, r0
 8000f20:	f500 50a0 	add.w	r0, r0, #5120	; 0x1400
 8000f24:	3018      	adds	r0, #24
 8000f26:	f7ff ffb9 	bl	8000e9c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000f2a:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8000f2e:	f7ff ffc9 	bl	8000ec4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI34Measurement_Accurate_Display_2ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000f32:	f104 0014 	add.w	r0, r4, #20
 8000f36:	f7ff ffdb 	bl	8000ef0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000f3a:	4620      	mov	r0, r4
 8000f3c:	bd10      	pop	{r4, pc}
 8000f3e:	bf00      	nop
 8000f40:	080298e0 	.word	0x080298e0

08000f44 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8000f44:	b508      	push	{r3, lr}
 8000f46:	4802      	ldr	r0, [pc, #8]	; (8000f50 <__tcf_0+0xc>)
 8000f48:	f7ff ffe6 	bl	8000f18 <_ZN12FrontendHeapD1Ev>
 8000f4c:	bd08      	pop	{r3, pc}
 8000f4e:	bf00      	nop
 8000f50:	200001b0 	.word	0x200001b0

08000f54 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8000f54:	b510      	push	{r4, lr}
 8000f56:	4604      	mov	r4, r0
 8000f58:	f7ff ffde 	bl	8000f18 <_ZN12FrontendHeapD1Ev>
 8000f5c:	4620      	mov	r0, r4
 8000f5e:	f241 51bc 	movw	r1, #5564	; 0x15bc
 8000f62:	f026 fb0c 	bl	802757e <_ZdlPvj>
 8000f66:	4620      	mov	r0, r4
 8000f68:	bd10      	pop	{r4, pc}
	...

08000f6c <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8000f6c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8000f70:	f001 f986 	bl	8002280 <_ZN14BitmapDatabase11getInstanceEv>
 8000f74:	4605      	mov	r5, r0
 8000f76:	f001 f987 	bl	8002288 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8000f7a:	2400      	movs	r4, #0
 8000f7c:	4601      	mov	r1, r0
 8000f7e:	4623      	mov	r3, r4
 8000f80:	4628      	mov	r0, r5
 8000f82:	4622      	mov	r2, r4
 8000f84:	9400      	str	r4, [sp, #0]
 8000f86:	f016 ffa5 	bl	8017ed4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8000f8a:	4b26      	ldr	r3, [pc, #152]	; (8001024 <touchgfx_init+0xb8>)
 8000f8c:	4a26      	ldr	r2, [pc, #152]	; (8001028 <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 8000f8e:	4d27      	ldr	r5, [pc, #156]	; (800102c <touchgfx_init+0xc0>)
 8000f90:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8000f92:	4620      	mov	r0, r4
 8000f94:	f006 fd94 	bl	8007ac0 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8000f98:	4825      	ldr	r0, [pc, #148]	; (8001030 <touchgfx_init+0xc4>)
 8000f9a:	f016 ff03 	bl	8017da4 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8000f9e:	682b      	ldr	r3, [r5, #0]
 8000fa0:	f3bf 8f5b 	dmb	ish
 8000fa4:	07db      	lsls	r3, r3, #31
 8000fa6:	d436      	bmi.n	8001016 <touchgfx_init+0xaa>
 8000fa8:	4628      	mov	r0, r5
 8000faa:	f026 faea 	bl	8027582 <__cxa_guard_acquire>
 8000fae:	b390      	cbz	r0, 8001016 <touchgfx_init+0xaa>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 8000fb0:	4c20      	ldr	r4, [pc, #128]	; (8001034 <touchgfx_init+0xc8>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8000fb2:	4b21      	ldr	r3, [pc, #132]	; (8001038 <touchgfx_init+0xcc>)
          screenStorage(scr),
          transitionStorage(tra),
 8000fb4:	4f21      	ldr	r7, [pc, #132]	; (800103c <touchgfx_init+0xd0>)
 8000fb6:	6023      	str	r3, [r4, #0]
          frontendApplication(app)
 8000fb8:	f504 56a3 	add.w	r6, r4, #5216	; 0x1460
        : presenterStorage(pres),
 8000fbc:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 8000fc0:	f104 082c 	add.w	r8, r4, #44	; 0x2c
        : presenterStorage(pres),
 8000fc4:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 8000fc6:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 8000fca:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 8000fcc:	6126      	str	r6, [r4, #16]
 8000fce:	f00e f8ff 	bl	800f1d0 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000fd2:	4b1b      	ldr	r3, [pc, #108]	; (8001040 <touchgfx_init+0xd4>)
 8000fd4:	6163      	str	r3, [r4, #20]
 8000fd6:	4640      	mov	r0, r8
 8000fd8:	f00e f8fa 	bl	800f1d0 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000fdc:	4b19      	ldr	r3, [pc, #100]	; (8001044 <touchgfx_init+0xd8>)
 8000fde:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000fe0:	4638      	mov	r0, r7
 8000fe2:	f00e f8f5 	bl	800f1d0 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000fe6:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8000fea:	4a17      	ldr	r2, [pc, #92]	; (8001048 <touchgfx_init+0xdc>)
 8000fec:	f8c3 2418 	str.w	r2, [r3, #1048]	; 0x418
 8000ff0:	f503 608b 	add.w	r0, r3, #1112	; 0x458
 8000ff4:	f007 f974 	bl	80082e0 <_ZN5ModelC1Ev>
 8000ff8:	4622      	mov	r2, r4
 8000ffa:	f1a6 0108 	sub.w	r1, r6, #8
 8000ffe:	4630      	mov	r0, r6
 8001000:	f006 feb8 	bl	8007d74 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8001004:	4630      	mov	r0, r6
 8001006:	f002 fb49 	bl	800369c <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>
        static FrontendHeap instance;
 800100a:	4810      	ldr	r0, [pc, #64]	; (800104c <touchgfx_init+0xe0>)
 800100c:	f027 f8c6 	bl	802819c <atexit>
 8001010:	4628      	mov	r0, r5
 8001012:	f026 fac2 	bl	802759a <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8001016:	480e      	ldr	r0, [pc, #56]	; (8001050 <touchgfx_init+0xe4>)
}
 8001018:	b002      	add	sp, #8
 800101a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 800101e:	f7ff bc2b 	b.w	8000878 <_ZN11TouchGFXHAL10initializeEv>
 8001022:	bf00      	nop
 8001024:	20013820 	.word	0x20013820
 8001028:	2000258c 	.word	0x2000258c
 800102c:	200001ac 	.word	0x200001ac
 8001030:	20000008 	.word	0x20000008
 8001034:	200001b0 	.word	0x200001b0
 8001038:	080298e0 	.word	0x080298e0
 800103c:	200015c8 	.word	0x200015c8
 8001040:	08029844 	.word	0x08029844
 8001044:	08029878 	.word	0x08029878
 8001048:	080298ac 	.word	0x080298ac
 800104c:	08000f45 	.word	0x08000f45
 8001050:	20002510 	.word	0x20002510

08001054 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 8001054:	4770      	bx	lr
	...

08001058 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8001058:	4801      	ldr	r0, [pc, #4]	; (8001060 <touchgfx_taskEntry+0x8>)
 800105a:	f7ff bc1b 	b.w	8000894 <_ZN11TouchGFXHAL9taskEntryEv>
 800105e:	bf00      	nop
 8001060:	20002510 	.word	0x20002510

08001064 <_GLOBAL__sub_I_touchgfx_init>:
}
 8001064:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 8001066:	4e22      	ldr	r6, [pc, #136]	; (80010f0 <_GLOBAL__sub_I_touchgfx_init+0x8c>)
{
public:

    STM32TouchController() {}
 8001068:	4c22      	ldr	r4, [pc, #136]	; (80010f4 <_GLOBAL__sub_I_touchgfx_init+0x90>)
static LCD16bpp display;
 800106a:	4d23      	ldr	r5, [pc, #140]	; (80010f8 <_GLOBAL__sub_I_touchgfx_init+0x94>)
 800106c:	4b23      	ldr	r3, [pc, #140]	; (80010fc <_GLOBAL__sub_I_touchgfx_init+0x98>)
 800106e:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8001070:	4630      	mov	r0, r6
 8001072:	f7ff fd71 	bl	8000b58 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8001076:	4628      	mov	r0, r5
 8001078:	f01b f9f8 	bl	801c46c <_ZN8touchgfx8LCD16bppC1Ev>
        : dma(dmaInterface),
 800107c:	4b20      	ldr	r3, [pc, #128]	; (8001100 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 800107e:	4821      	ldr	r0, [pc, #132]	; (8001104 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
          touchController(touchCtrl),
 8001080:	60dc      	str	r4, [r3, #12]
          mcuInstrumentation(0),
 8001082:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 8001084:	f44f 7180 	mov.w	r1, #256	; 0x100
          auxiliaryLCD(0),
 8001088:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
          touchSampleRate(1),
 800108c:	491e      	ldr	r1, [pc, #120]	; (8001108 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 800108e:	861a      	strh	r2, [r3, #48]	; 0x30
          vSyncCompensationEnabled(false),
 8001090:	e9c3 121a 	strd	r1, r2, [r3, #104]	; 0x68
          requestedOrientation(ORIENTATION_LANDSCAPE),
 8001094:	491d      	ldr	r1, [pc, #116]	; (800110c <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 8001096:	6799      	str	r1, [r3, #120]	; 0x78
        instance = this;
 8001098:	491d      	ldr	r1, [pc, #116]	; (8001110 <_GLOBAL__sub_I_touchgfx_init+0xac>)
          useAuxiliaryLCD(false),
 800109a:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
        instance = this;
 800109e:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80010a0:	21f0      	movs	r1, #240	; 0xf0
 80010a2:	8001      	strh	r1, [r0, #0]
 80010a4:	481b      	ldr	r0, [pc, #108]	; (8001114 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          lastY(0),
 80010a6:	665a      	str	r2, [r3, #100]	; 0x64
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80010a8:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80010aa:	481b      	ldr	r0, [pc, #108]	; (8001118 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          updateMCULoad(0),
 80010ac:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80010b0:	f44f 71a0 	mov.w	r1, #320	; 0x140
          buttonController(0),
 80010b4:	e9c3 2204 	strd	r2, r2, [r3, #16]
 80010b8:	e9c3 2206 	strd	r2, r2, [r3, #24]
 80010bc:	e9c3 2208 	strd	r2, r2, [r3, #32]
 80010c0:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
          frameBuffer0(0),
 80010c4:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
          frameBuffer2(0),
 80010c8:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 80010cc:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
          lastX(0),
 80010d0:	e9c3 2217 	strd	r2, r2, [r3, #92]	; 0x5c
          cc_begin(0),
 80010d4:	675a      	str	r2, [r3, #116]	; 0x74
          lcdRef(display),
 80010d6:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80010da:	8001      	strh	r1, [r0, #0]
 80010dc:	480f      	ldr	r0, [pc, #60]	; (800111c <_GLOBAL__sub_I_touchgfx_init+0xb8>)
 80010de:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 80010e0:	490f      	ldr	r1, [pc, #60]	; (8001120 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 80010e2:	700a      	strb	r2, [r1, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 80010e4:	2201      	movs	r2, #1
 80010e6:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 80010ea:	4a0e      	ldr	r2, [pc, #56]	; (8001124 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 80010ec:	601a      	str	r2, [r3, #0]
}
 80010ee:	bd70      	pop	{r4, r5, r6, pc}
 80010f0:	20001770 	.word	0x20001770
 80010f4:	2000176c 	.word	0x2000176c
 80010f8:	20002590 	.word	0x20002590
 80010fc:	080292c0 	.word	0x080292c0
 8001100:	20002510 	.word	0x20002510
 8001104:	200137b0 	.word	0x200137b0
 8001108:	01000001 	.word	0x01000001
 800110c:	01010000 	.word	0x01010000
 8001110:	200137bc 	.word	0x200137bc
 8001114:	200137b6 	.word	0x200137b6
 8001118:	200137b2 	.word	0x200137b2
 800111c:	200137b8 	.word	0x200137b8
 8001120:	200137b4 	.word	0x200137b4
 8001124:	0802944c 	.word	0x0802944c

08001128 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 8001128:	4801      	ldr	r0, [pc, #4]	; (8001130 <_GLOBAL__sub_D_touchgfx_init+0x8>)
 800112a:	f7ff bcf1 	b.w	8000b10 <_ZN8STM32DMAD1Ev>
 800112e:	bf00      	nop
 8001130:	20001770 	.word	0x20001770

08001134 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8001134:	2000      	movs	r0, #0
 8001136:	4770      	bx	lr

08001138 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8001138:	8081      	strh	r1, [r0, #4]
    }
 800113a:	4770      	bx	lr

0800113c <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 800113c:	80c1      	strh	r1, [r0, #6]
    }
 800113e:	4770      	bx	lr

08001140 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8001140:	8101      	strh	r1, [r0, #8]
    }
 8001142:	4770      	bx	lr

08001144 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8001144:	8141      	strh	r1, [r0, #10]
    }
 8001146:	4770      	bx	lr

08001148 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8001148:	4770      	bx	lr

0800114a <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 800114a:	4770      	bx	lr

0800114c <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 800114c:	4770      	bx	lr

0800114e <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 800114e:	4770      	bx	lr

08001150 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8001150:	4770      	bx	lr

08001152 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8001152:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8001154:	88c4      	ldrh	r4, [r0, #6]
 8001156:	6803      	ldr	r3, [r0, #0]
 8001158:	1b12      	subs	r2, r2, r4
 800115a:	8884      	ldrh	r4, [r0, #4]
 800115c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800115e:	1b09      	subs	r1, r1, r4
 8001160:	b212      	sxth	r2, r2
    }
 8001162:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8001166:	b209      	sxth	r1, r1
 8001168:	4718      	bx	r3

0800116a <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 800116a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800116e:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8001170:	f04f 33ff 	mov.w	r3, #4294967295
 8001174:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8001176:	6813      	ldr	r3, [r2, #0]
 8001178:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 800117a:	6010      	str	r0, [r2, #0]
    }
 800117c:	4770      	bx	lr

0800117e <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 800117e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8001182:	b11a      	cbz	r2, 800118c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8001184:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8001188:	b102      	cbz	r2, 800118c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 800118a:	6018      	str	r0, [r3, #0]
        }
    }
 800118c:	4770      	bx	lr

0800118e <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 800118e:	2000      	movs	r0, #0
 8001190:	4770      	bx	lr

08001192 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 8001192:	888b      	ldrh	r3, [r1, #4]
 8001194:	8083      	strh	r3, [r0, #4]
        return true;
    }
 8001196:	2001      	movs	r0, #1
 8001198:	4770      	bx	lr

0800119a <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 800119a:	4770      	bx	lr

0800119c <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 800119c:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
 80011a0:	4770      	bx	lr

080011a2 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 80011a2:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 80011a6:	4770      	bx	lr

080011a8 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 80011a8:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80011aa:	2200      	movs	r2, #0
        return rect.width;
 80011ac:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 80011b0:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 80011b4:	8002      	strh	r2, [r0, #0]
 80011b6:	8042      	strh	r2, [r0, #2]
 80011b8:	8084      	strh	r4, [r0, #4]
 80011ba:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 80011bc:	bd10      	pop	{r4, pc}

080011be <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 80011be:	2200      	movs	r2, #0
 80011c0:	8002      	strh	r2, [r0, #0]
 80011c2:	8042      	strh	r2, [r0, #2]
 80011c4:	8082      	strh	r2, [r0, #4]
 80011c6:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 80011c8:	4770      	bx	lr
	...

080011cc <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80011cc:	4b03      	ldr	r3, [pc, #12]	; (80011dc <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 80011ce:	2290      	movs	r2, #144	; 0x90
 80011d0:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
 80011d4:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 80011d8:	4770      	bx	lr
 80011da:	bf00      	nop
 80011dc:	e000e100 	.word	0xe000e100

080011e0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 80011e0:	4a09      	ldr	r2, [pc, #36]	; (8001208 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 80011e2:	490a      	ldr	r1, [pc, #40]	; (800120c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 80011e4:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 80011e6:	480a      	ldr	r0, [pc, #40]	; (8001210 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 80011e8:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80011ec:	3b01      	subs	r3, #1
 80011ee:	b29b      	uxth	r3, r3
 80011f0:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 80011f2:	6911      	ldr	r1, [r2, #16]
 80011f4:	f3c1 010a 	ubfx	r1, r1, #0, #11
 80011f8:	3901      	subs	r1, #1
 80011fa:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 80011fc:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 80011fe:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8001200:	f043 0301 	orr.w	r3, r3, #1
 8001204:	6353      	str	r3, [r2, #52]	; 0x34
}
 8001206:	4770      	bx	lr
 8001208:	40016800 	.word	0x40016800
 800120c:	20002616 	.word	0x20002616
 8001210:	20002614 	.word	0x20002614

08001214 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8001214:	4b01      	ldr	r3, [pc, #4]	; (800121c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 8001216:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 800121a:	4770      	bx	lr
 800121c:	40016800 	.word	0x40016800

08001220 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001220:	4b02      	ldr	r3, [pc, #8]	; (800122c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001222:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001224:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001228:	625a      	str	r2, [r3, #36]	; 0x24
}
 800122a:	4770      	bx	lr
 800122c:	40016800 	.word	0x40016800

08001230 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8001230:	b570      	push	{r4, r5, r6, lr}
 8001232:	4604      	mov	r4, r0
    HAL::initialize();
 8001234:	f00e fc97 	bl	800fb66 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 8001238:	6823      	ldr	r3, [r4, #0]
 800123a:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 800123c:	f013 fc40 	bl	8014ac0 <_ZN8touchgfx11Application11getInstanceEv>
 8001240:	4601      	mov	r1, r0
 8001242:	4620      	mov	r0, r4
 8001244:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8001246:	6823      	ldr	r3, [r4, #0]
 8001248:	4a05      	ldr	r2, [pc, #20]	; (8001260 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 800124a:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 800124e:	4620      	mov	r0, r4
 8001250:	46ac      	mov	ip, r5
 8001252:	2300      	movs	r3, #0
}
 8001254:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8001258:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 800125c:	4760      	bx	ip
 800125e:	bf00      	nop
 8001260:	d004b000 	.word	0xd004b000

08001264 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 8001264:	f00e bc66 	b.w	800fb34 <_ZN8touchgfx3HAL10beginFrameEv>

08001268 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 8001268:	f00e bc70 	b.w	800fb4c <_ZN8touchgfx3HAL8endFrameEv>

0800126c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 800126c:	f00e bc2c 	b.w	800fac8 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08001270 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 8001270:	f00e bd8d 	b.w	800fd8e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

08001274 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 8001274:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8001278:	b112      	cbz	r2, 8001280 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 800127a:	6803      	ldr	r3, [r0, #0]
 800127c:	695b      	ldr	r3, [r3, #20]
 800127e:	4718      	bx	r3
    }
 8001280:	4770      	bx	lr
	...

08001284 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001284:	4b03      	ldr	r3, [pc, #12]	; (8001294 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 8001286:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800128a:	609a      	str	r2, [r3, #8]
 800128c:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8001290:	609a      	str	r2, [r3, #8]
}
 8001292:	4770      	bx	lr
 8001294:	e000e100 	.word	0xe000e100

08001298 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001298:	4b08      	ldr	r3, [pc, #32]	; (80012bc <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 800129a:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800129e:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80012a2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80012a6:	f3bf 8f6f 	isb	sy
 80012aa:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80012ae:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80012b2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80012b6:	f3bf 8f6f 	isb	sy
}
 80012ba:	4770      	bx	lr
 80012bc:	e000e100 	.word	0xe000e100

080012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 80012c0:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 80012c2:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80012c4:	4e12      	ldr	r6, [pc, #72]	; (8001310 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 80012c6:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 80012c8:	4b12      	ldr	r3, [pc, #72]	; (8001314 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 80012ca:	6003      	str	r3, [r0, #0]
 80012cc:	6833      	ldr	r3, [r6, #0]
 80012ce:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
    AbstractPainterRGB565()
 80012d2:	4605      	mov	r5, r0
 80012d4:	b10a      	cbz	r2, 80012da <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 80012d6:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80012d8:	b900      	cbnz	r0, 80012dc <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 80012da:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 80012dc:	6803      	ldr	r3, [r0, #0]
 80012de:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80012e0:	4798      	blx	r3
        return auxiliaryLCD;
 80012e2:	6833      	ldr	r3, [r6, #0]
 80012e4:	fab0 f480 	clz	r4, r0
 80012e8:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80012ea:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 80012ec:	b130      	cbz	r0, 80012fc <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 80012ee:	6803      	ldr	r3, [r0, #0]
 80012f0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80012f2:	4798      	blx	r3
 80012f4:	2800      	cmp	r0, #0
 80012f6:	bf08      	it	eq
 80012f8:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 80012fc:	b92c      	cbnz	r4, 800130a <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 80012fe:	4b06      	ldr	r3, [pc, #24]	; (8001318 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 8001300:	4a06      	ldr	r2, [pc, #24]	; (800131c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 8001302:	4807      	ldr	r0, [pc, #28]	; (8001320 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 8001304:	212c      	movs	r1, #44	; 0x2c
 8001306:	f026 ff2b 	bl	8028160 <__assert_func>
    }
 800130a:	4628      	mov	r0, r5
 800130c:	bd70      	pop	{r4, r5, r6, pc}
 800130e:	bf00      	nop
 8001310:	200137bc 	.word	0x200137bc
 8001314:	080299f0 	.word	0x080299f0
 8001318:	080298ec 	.word	0x080298ec
 800131c:	0802994a 	.word	0x0802994a
 8001320:	08029983 	.word	0x08029983

08001324 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8001324:	b510      	push	{r4, lr}
        return instance;
 8001326:	4c14      	ldr	r4, [pc, #80]	; (8001378 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 8001328:	6823      	ldr	r3, [r4, #0]
 800132a:	b323      	cbz	r3, 8001376 <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 800132c:	4b13      	ldr	r3, [pc, #76]	; (800137c <HAL_LTDC_LineEventCallback+0x58>)
 800132e:	4a14      	ldr	r2, [pc, #80]	; (8001380 <HAL_LTDC_LineEventCallback+0x5c>)
 8001330:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001332:	8811      	ldrh	r1, [r2, #0]
 8001334:	428b      	cmp	r3, r1
 8001336:	d113      	bne.n	8001360 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8001338:	4b12      	ldr	r3, [pc, #72]	; (8001384 <HAL_LTDC_LineEventCallback+0x60>)
 800133a:	8819      	ldrh	r1, [r3, #0]
 800133c:	f009 fc60 	bl	800ac00 <HAL_LTDC_ProgramLineEvent>
 8001340:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 8001342:	f892 306a 	ldrb.w	r3, [r2, #106]	; 0x6a
 8001346:	3301      	adds	r3, #1
 8001348:	f882 306a 	strb.w	r3, [r2, #106]	; 0x6a
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 800134c:	f7ff fb8e 	bl	8000a6c <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8001350:	6820      	ldr	r0, [r4, #0]
 8001352:	f00f f947 	bl	80105e4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8001356:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 800135a:	2000      	movs	r0, #0
 800135c:	f7ff ba06 	b.w	800076c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 8001360:	f009 fc4e 	bl	800ac00 <HAL_LTDC_ProgramLineEvent>
        return instance;
 8001364:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 8001366:	6803      	ldr	r3, [r0, #0]
 8001368:	6a1b      	ldr	r3, [r3, #32]
 800136a:	4798      	blx	r3
    }
 800136c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8001370:	2000      	movs	r0, #0
 8001372:	f7ff ba13 	b.w	800079c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 8001376:	bd10      	pop	{r4, pc}
 8001378:	200137bc 	.word	0x200137bc
 800137c:	40016800 	.word	0x40016800
 8001380:	20002616 	.word	0x20002616
 8001384:	20002614 	.word	0x20002614

08001388 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 8001388:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 800138a:	2064      	movs	r0, #100	; 0x64
 800138c:	f00b f992 	bl	800c6b4 <osDelay>
  for(;;)
 8001390:	e7fb      	b.n	800138a <StartDefaultTask+0x2>
 8001392:	bf00      	nop

08001394 <StartTimeoutTask>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartTimeoutTask */
void StartTimeoutTask(void *argument)
{
 8001394:	b580      	push	{r7, lr}
 8001396:	4c10      	ldr	r4, [pc, #64]	; (80013d8 <StartTimeoutTask+0x44>)
 8001398:	f8df 8048 	ldr.w	r8, [pc, #72]	; 80013e4 <StartTimeoutTask+0x50>
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);

	  if(sleep_timeout_value == 0)
	  {
		  sleep_timeout_value = 60;
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 800139c:	4f0f      	ldr	r7, [pc, #60]	; (80013dc <StartTimeoutTask+0x48>)
	  if(sleep_timeout_value > 60 && sleep_timeout_value < 0)
		  sleep_timeout_value = 60;


	  // Toggle onboard LED as heartbeat visual feedback
	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 800139e:	4e10      	ldr	r6, [pc, #64]	; (80013e0 <StartTimeoutTask+0x4c>)
	  sleep_timeout_value--;
 80013a0:	6820      	ldr	r0, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 80013a2:	2300      	movs	r3, #0
 80013a4:	461a      	mov	r2, r3
 80013a6:	4621      	mov	r1, r4
	  sleep_timeout_value--;
 80013a8:	1e45      	subs	r5, r0, #1
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 80013aa:	f8d8 0000 	ldr.w	r0, [r8]
	  sleep_timeout_value--;
 80013ae:	6025      	str	r5, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 80013b0:	f00b fa7c 	bl	800c8ac <osMessageQueuePut>
	  if(sleep_timeout_value == 0)
 80013b4:	6822      	ldr	r2, [r4, #0]
		  sleep_timeout_value = 60;
 80013b6:	233c      	movs	r3, #60	; 0x3c
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80013b8:	4638      	mov	r0, r7
 80013ba:	2120      	movs	r1, #32
	  if(sleep_timeout_value == 0)
 80013bc:	b912      	cbnz	r2, 80013c4 <StartTimeoutTask+0x30>
		  sleep_timeout_value = 60;
 80013be:	6023      	str	r3, [r4, #0]
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80013c0:	f007 fe02 	bl	8008fc8 <HAL_GPIO_WritePin>
	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 80013c4:	4630      	mov	r0, r6
 80013c6:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80013ca:	f007 fe01 	bl	8008fd0 <HAL_GPIO_TogglePin>

	  osDelay(1000);
 80013ce:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80013d2:	f00b f96f 	bl	800c6b4 <osDelay>
	  sleep_timeout_value--;
 80013d6:	e7e3      	b.n	80013a0 <StartTimeoutTask+0xc>
 80013d8:	20000014 	.word	0x20000014
 80013dc:	40021000 	.word	0x40021000
 80013e0:	40021800 	.word	0x40021800
 80013e4:	20002620 	.word	0x20002620

080013e8 <updateGUI_test>:
	return sleep_timeout_value;
 80013e8:	4b01      	ldr	r3, [pc, #4]	; (80013f0 <updateGUI_test+0x8>)
}
 80013ea:	6818      	ldr	r0, [r3, #0]
 80013ec:	4770      	bx	lr
 80013ee:	bf00      	nop
 80013f0:	20000014 	.word	0x20000014

080013f4 <SystemClock_Config>:
{
 80013f4:	b530      	push	{r4, r5, lr}
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80013f6:	2400      	movs	r4, #0
{
 80013f8:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80013fa:	e9cd 440a 	strd	r4, r4, [sp, #40]	; 0x28
 80013fe:	e9cd 440c 	strd	r4, r4, [sp, #48]	; 0x30
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001402:	e9cd 4403 	strd	r4, r4, [sp, #12]
 8001406:	e9cd 4405 	strd	r4, r4, [sp, #20]
  __HAL_RCC_PWR_CLK_ENABLE();
 800140a:	4a1e      	ldr	r2, [pc, #120]	; (8001484 <SystemClock_Config+0x90>)
 800140c:	9401      	str	r4, [sp, #4]
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800140e:	9407      	str	r4, [sp, #28]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001410:	6c11      	ldr	r1, [r2, #64]	; 0x40
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001412:	4b1d      	ldr	r3, [pc, #116]	; (8001488 <SystemClock_Config+0x94>)
  __HAL_RCC_PWR_CLK_ENABLE();
 8001414:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 8001418:	6411      	str	r1, [r2, #64]	; 0x40
 800141a:	6c12      	ldr	r2, [r2, #64]	; 0x40
 800141c:	f002 5280 	and.w	r2, r2, #268435456	; 0x10000000
 8001420:	9201      	str	r2, [sp, #4]
 8001422:	9a01      	ldr	r2, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001424:	9402      	str	r4, [sp, #8]
 8001426:	681a      	ldr	r2, [r3, #0]
 8001428:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 800142c:	601a      	str	r2, [r3, #0]
 800142e:	681b      	ldr	r3, [r3, #0]
 8001430:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8001434:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8001436:	2201      	movs	r2, #1
 8001438:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 800143c:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLM = 8;
 8001440:	2308      	movs	r3, #8
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8001442:	2502      	movs	r5, #2
  RCC_OscInitStruct.PLL.PLLM = 8;
 8001444:	9310      	str	r3, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001446:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  RCC_OscInitStruct.PLL.PLLN = 336;
 800144a:	f44f 73a8 	mov.w	r3, #336	; 0x150
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800144e:	e9cd 520e 	strd	r5, r2, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 8001452:	9311      	str	r3, [sp, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001454:	2202      	movs	r2, #2
 8001456:	2304      	movs	r3, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001458:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 800145a:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800145e:	9902      	ldr	r1, [sp, #8]
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001460:	f009 fbf0 	bl	800ac44 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001464:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001466:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 800146a:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 800146e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001472:	a803      	add	r0, sp, #12
 8001474:	2105      	movs	r1, #5
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8001476:	e9cd 4205 	strd	r4, r2, [sp, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 800147a:	9307      	str	r3, [sp, #28]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 800147c:	f009 fdfa 	bl	800b074 <HAL_RCC_ClockConfig>
}
 8001480:	b015      	add	sp, #84	; 0x54
 8001482:	bd30      	pop	{r4, r5, pc}
 8001484:	40023800 	.word	0x40023800
 8001488:	40007000 	.word	0x40007000

0800148c <main>:
{
 800148c:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001490:	2400      	movs	r4, #0
{
 8001492:	b09d      	sub	sp, #116	; 0x74
  HAL_Init();
 8001494:	f007 fa72 	bl	800897c <HAL_Init>
  SystemClock_Config();
 8001498:	f7ff ffac 	bl	80013f4 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800149c:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 80014a0:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014a4:	4bc1      	ldr	r3, [pc, #772]	; (80017ac <main+0x320>)
 80014a6:	9400      	str	r4, [sp, #0]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80014a8:	9413      	str	r4, [sp, #76]	; 0x4c
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014aa:	6b19      	ldr	r1, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 80014ac:	48c0      	ldr	r0, [pc, #768]	; (80017b0 <main+0x324>)
  hi2c3.Instance = I2C3;
 80014ae:	4dc1      	ldr	r5, [pc, #772]	; (80017b4 <main+0x328>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014b0:	f041 0110 	orr.w	r1, r1, #16
 80014b4:	6319      	str	r1, [r3, #48]	; 0x30
 80014b6:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014b8:	f001 0110 	and.w	r1, r1, #16
 80014bc:	9100      	str	r1, [sp, #0]
 80014be:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80014c0:	9401      	str	r4, [sp, #4]
 80014c2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014c4:	f041 0120 	orr.w	r1, r1, #32
 80014c8:	6319      	str	r1, [r3, #48]	; 0x30
 80014ca:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014cc:	f001 0120 	and.w	r1, r1, #32
 80014d0:	9101      	str	r1, [sp, #4]
 80014d2:	9901      	ldr	r1, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 80014d4:	9402      	str	r4, [sp, #8]
 80014d6:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014d8:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 80014dc:	6319      	str	r1, [r3, #48]	; 0x30
 80014de:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014e0:	f001 0180 	and.w	r1, r1, #128	; 0x80
 80014e4:	9102      	str	r1, [sp, #8]
 80014e6:	9902      	ldr	r1, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80014e8:	9403      	str	r4, [sp, #12]
 80014ea:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014ec:	f041 0104 	orr.w	r1, r1, #4
 80014f0:	6319      	str	r1, [r3, #48]	; 0x30
 80014f2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014f4:	f001 0104 	and.w	r1, r1, #4
 80014f8:	9103      	str	r1, [sp, #12]
 80014fa:	9903      	ldr	r1, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80014fc:	9404      	str	r4, [sp, #16]
 80014fe:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001500:	f041 0101 	orr.w	r1, r1, #1
 8001504:	6319      	str	r1, [r3, #48]	; 0x30
 8001506:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001508:	f001 0101 	and.w	r1, r1, #1
 800150c:	9104      	str	r1, [sp, #16]
 800150e:	9904      	ldr	r1, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001510:	9405      	str	r4, [sp, #20]
 8001512:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001514:	f041 0102 	orr.w	r1, r1, #2
 8001518:	6319      	str	r1, [r3, #48]	; 0x30
 800151a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800151c:	f001 0102 	and.w	r1, r1, #2
 8001520:	9105      	str	r1, [sp, #20]
 8001522:	9905      	ldr	r1, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8001524:	9406      	str	r4, [sp, #24]
 8001526:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001528:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800152c:	6319      	str	r1, [r3, #48]	; 0x30
 800152e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001530:	f001 0140 	and.w	r1, r1, #64	; 0x40
 8001534:	9106      	str	r1, [sp, #24]
 8001536:	9906      	ldr	r1, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001538:	9407      	str	r4, [sp, #28]
 800153a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800153c:	f041 0108 	orr.w	r1, r1, #8
 8001540:	6319      	str	r1, [r3, #48]	; 0x30
 8001542:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001544:	f003 0308 	and.w	r3, r3, #8
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8001548:	4622      	mov	r2, r4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800154a:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 800154c:	2114      	movs	r1, #20
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800154e:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8001550:	f007 fd3a 	bl	8008fc8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(POWER_ON_DEVICE_GPIO_Port, POWER_ON_DEVICE_Pin, GPIO_PIN_SET);
 8001554:	4896      	ldr	r0, [pc, #600]	; (80017b0 <main+0x324>)
 8001556:	2120      	movs	r1, #32
 8001558:	2201      	movs	r2, #1
 800155a:	f007 fd35 	bl	8008fc8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800155e:	4896      	ldr	r0, [pc, #600]	; (80017b8 <main+0x32c>)
 8001560:	4622      	mov	r2, r4
 8001562:	2104      	movs	r1, #4
 8001564:	f007 fd30 	bl	8008fc8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 8001568:	4894      	ldr	r0, [pc, #592]	; (80017bc <main+0x330>)
 800156a:	4622      	mov	r2, r4
 800156c:	f44f 5140 	mov.w	r1, #12288	; 0x3000
 8001570:	f007 fd2a 	bl	8008fc8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(DEVICE_ON_GPIO_Port, DEVICE_ON_Pin, GPIO_PIN_SET);
 8001574:	2201      	movs	r2, #1
 8001576:	4892      	ldr	r0, [pc, #584]	; (80017c0 <main+0x334>)
 8001578:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800157c:	f007 fd24 	bl	8008fc8 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001580:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001582:	f04f 0903 	mov.w	r9, #3
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin|FRAME_RATE_Pin;
 8001586:	2314      	movs	r3, #20
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001588:	4889      	ldr	r0, [pc, #548]	; (80017b0 <main+0x324>)
 800158a:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 800158c:	f04f 0808 	mov.w	r8, #8
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001590:	e9cd 360f 	strd	r3, r6, [sp, #60]	; 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001594:	e9cd 4911 	strd	r4, r9, [sp, #68]	; 0x44
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001598:	f007 fbd2 	bl	8008d40 <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 800159c:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 80015a0:	4883      	ldr	r0, [pc, #524]	; (80017b0 <main+0x324>)
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 80015a2:	f8cd 803c 	str.w	r8, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 80015a6:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 80015a8:	9310      	str	r3, [sp, #64]	; 0x40
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015aa:	9411      	str	r4, [sp, #68]	; 0x44
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 80015ac:	f007 fbc8 	bl	8008d40 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 80015b0:	2320      	movs	r3, #32
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 80015b2:	487f      	ldr	r0, [pc, #508]	; (80017b0 <main+0x324>)
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 80015b4:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 80015b6:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80015b8:	2702      	movs	r7, #2
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 80015ba:	f04f 0a04 	mov.w	sl, #4
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015be:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80015c2:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 80015c4:	f007 fbbc 	bl	8008d40 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80015c8:	487b      	ldr	r0, [pc, #492]	; (80017b8 <main+0x32c>)
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 80015ca:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80015ce:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015d0:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80015d4:	9712      	str	r7, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80015d6:	f007 fbb3 	bl	8008d40 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 80015da:	f44f 5340 	mov.w	r3, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80015de:	4877      	ldr	r0, [pc, #476]	; (80017bc <main+0x330>)
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 80015e0:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80015e2:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015e4:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80015e8:	9712      	str	r7, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80015ea:	f007 fba9 	bl	8008d40 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 80015ee:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80015f2:	4874      	ldr	r0, [pc, #464]	; (80017c4 <main+0x338>)
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 80015f4:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80015f6:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Alternate = GPIO_AF15_EVENTOUT;
 80015f8:	230f      	movs	r3, #15
 80015fa:	9313      	str	r3, [sp, #76]	; 0x4c
  GPIO_InitStruct.Pin = DEVICE_ON_Pin;
 80015fc:	f44f 5b00 	mov.w	fp, #8192	; 0x2000
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001600:	e9cd 7410 	strd	r7, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001604:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001606:	f007 fb9b 	bl	8008d40 <HAL_GPIO_Init>
  HAL_GPIO_Init(DEVICE_ON_GPIO_Port, &GPIO_InitStruct);
 800160a:	486d      	ldr	r0, [pc, #436]	; (80017c0 <main+0x334>)
  GPIO_InitStruct.Pin = DEVICE_ON_Pin;
 800160c:	f8cd b03c 	str.w	fp, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEVICE_ON_GPIO_Port, &GPIO_InitStruct);
 8001610:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001612:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001616:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(DEVICE_ON_GPIO_Port, &GPIO_InitStruct);
 8001618:	f007 fb92 	bl	8008d40 <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(EXTI3_IRQn, 5, 0);
 800161c:	4622      	mov	r2, r4
 800161e:	2105      	movs	r1, #5
 8001620:	2009      	movs	r0, #9
 8001622:	f007 f9fb 	bl	8008a1c <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI3_IRQn);
 8001626:	2009      	movs	r0, #9
 8001628:	f007 fa36 	bl	8008a98 <HAL_NVIC_EnableIRQ>
  hcrc.Instance = CRC;
 800162c:	4866      	ldr	r0, [pc, #408]	; (80017c8 <main+0x33c>)
 800162e:	4b67      	ldr	r3, [pc, #412]	; (80017cc <main+0x340>)
 8001630:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8001632:	f007 fa3f 	bl	8008ab4 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 8001636:	4966      	ldr	r1, [pc, #408]	; (80017d0 <main+0x344>)
 8001638:	4b66      	ldr	r3, [pc, #408]	; (80017d4 <main+0x348>)
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 800163a:	4628      	mov	r0, r5
  hi2c3.Init.ClockSpeed = 100000;
 800163c:	e9c5 1300 	strd	r1, r3, [r5]
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001640:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8001644:	612b      	str	r3, [r5, #16]
  hi2c3.Init.OwnAddress1 = 0;
 8001646:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c3.Init.OwnAddress2 = 0;
 800164a:	e9c5 4405 	strd	r4, r4, [r5, #20]
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 800164e:	e9c5 4407 	strd	r4, r4, [r5, #28]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001652:	f007 ff1f 	bl	8009494 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 8001656:	2110      	movs	r1, #16
 8001658:	4628      	mov	r0, r5
 800165a:	f009 f8e7 	bl	800a82c <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 800165e:	4621      	mov	r1, r4
 8001660:	4628      	mov	r0, r5
 8001662:	f009 f903 	bl	800a86c <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001666:	f8df c184 	ldr.w	ip, [pc, #388]	; 80017ec <main+0x360>
  hspi5.Instance = SPI5;
 800166a:	485b      	ldr	r0, [pc, #364]	; (80017d8 <main+0x34c>)
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 800166c:	4d5b      	ldr	r5, [pc, #364]	; (80017dc <main+0x350>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800166e:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001670:	f44f 7382 	mov.w	r3, #260	; 0x104
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8001674:	f44f 7e00 	mov.w	lr, #512	; 0x200
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001678:	e9c0 c300 	strd	ip, r3, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 800167c:	2318      	movs	r3, #24
 800167e:	e9c0 e306 	strd	lr, r3, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 8001682:	230a      	movs	r3, #10
 8001684:	62c3      	str	r3, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 8001686:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 800168a:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 800168e:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8001692:	f009 ffdd 	bl	800b650 <HAL_SPI_Init>
  SdramTiming.ExitSelfRefreshDelay = 7;
 8001696:	2307      	movs	r3, #7
 8001698:	9310      	str	r3, [sp, #64]	; 0x40
  SdramTiming.RowCycleDelay = 7;
 800169a:	9312      	str	r3, [sp, #72]	; 0x48
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 800169c:	4b50      	ldr	r3, [pc, #320]	; (80017e0 <main+0x354>)
 800169e:	602b      	str	r3, [r5, #0]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 80016a0:	2040      	movs	r0, #64	; 0x40
 80016a2:	f44f 73c0 	mov.w	r3, #384	; 0x180
 80016a6:	e9c5 0305 	strd	r0, r3, [r5, #20]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 80016aa:	f8c5 b028 	str.w	fp, [r5, #40]	; 0x28
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 80016ae:	f44f 6300 	mov.w	r3, #2048	; 0x800
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 80016b2:	f04f 0b10 	mov.w	fp, #16
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80016b6:	a90f      	add	r1, sp, #60	; 0x3c
 80016b8:	4628      	mov	r0, r5
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 80016ba:	622b      	str	r3, [r5, #32]
  hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 80016bc:	e9c5 6401 	strd	r6, r4, [r5, #4]
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 80016c0:	f8c5 a00c 	str.w	sl, [r5, #12]
  SdramTiming.RPDelay = 2;
 80016c4:	e9cd 9713 	strd	r9, r7, [sp, #76]	; 0x4c
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 80016c8:	61ec      	str	r4, [r5, #28]
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 80016ca:	626c      	str	r4, [r5, #36]	; 0x24
  SdramTiming.SelfRefreshTime = 4;
 80016cc:	f8cd a044 	str.w	sl, [sp, #68]	; 0x44
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 80016d0:	f8c5 b010 	str.w	fp, [r5, #16]
  SdramTiming.LoadToActiveDelay = 2;
 80016d4:	970f      	str	r7, [sp, #60]	; 0x3c
  SdramTiming.RCDDelay = 2;
 80016d6:	9715      	str	r7, [sp, #84]	; 0x54
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80016d8:	f009 fec8 	bl	800b46c <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016dc:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80016e0:	a90b      	add	r1, sp, #44	; 0x2c
 80016e2:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80016e4:	e9cd 680b 	strd	r6, r8, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 80016e8:	e9cd 640d 	strd	r6, r4, [sp, #52]	; 0x34
 __IO uint32_t tmpmrd =0;
 80016ec:	9408      	str	r4, [sp, #32]
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016ee:	f009 fedf 	bl	800b4b0 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 80016f2:	4630      	mov	r0, r6
 80016f4:	f007 f96e 	bl	80089d4 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016f8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80016fc:	a90b      	add	r1, sp, #44	; 0x2c
 80016fe:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001700:	e9cd 780b 	strd	r7, r8, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 8001704:	e9cd 640d 	strd	r6, r4, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001708:	f009 fed2 	bl	800b4b0 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800170c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001710:	a90b      	add	r1, sp, #44	; 0x2c
 8001712:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001714:	e9cd 980b 	strd	r9, r8, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 8001718:	e9cd a40d 	strd	sl, r4, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800171c:	f009 fec8 	bl	800b4b0 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 8001720:	f44f 730c 	mov.w	r3, #560	; 0x230
 8001724:	9308      	str	r3, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 8001726:	9b08      	ldr	r3, [sp, #32]
 8001728:	930e      	str	r3, [sp, #56]	; 0x38
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800172a:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800172e:	a90b      	add	r1, sp, #44	; 0x2c
 8001730:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001732:	e9cd a80b 	strd	sl, r8, [sp, #44]	; 0x2c
  Command->AutoRefreshNumber       = 1;
 8001736:	960d      	str	r6, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001738:	f009 feba 	bl	800b4b0 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 800173c:	4628      	mov	r0, r5
 800173e:	f240 516a 	movw	r1, #1386	; 0x56a
  hltdc.Instance = LTDC;
 8001742:	4d28      	ldr	r5, [pc, #160]	; (80017e4 <main+0x358>)
  htim1.Instance = TIM1;
 8001744:	f8df 80a8 	ldr.w	r8, [pc, #168]	; 80017f0 <main+0x364>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 8001748:	f009 fed0 	bl	800b4ec <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 800174c:	2234      	movs	r2, #52	; 0x34
 800174e:	4621      	mov	r1, r4
 8001750:	a80f      	add	r0, sp, #60	; 0x3c
 8001752:	f026 ff0a 	bl	802856a <memset>
  hltdc.Instance = LTDC;
 8001756:	4b24      	ldr	r3, [pc, #144]	; (80017e8 <main+0x35c>)
 8001758:	602b      	str	r3, [r5, #0]
  hltdc.Init.HorizontalSync = 9;
 800175a:	2309      	movs	r3, #9
 800175c:	616b      	str	r3, [r5, #20]
  hltdc.Init.AccumulatedHBP = 29;
 800175e:	231d      	movs	r3, #29
  hltdc.Init.AccumulatedVBP = 3;
 8001760:	f8c5 9020 	str.w	r9, [r5, #32]
  hltdc.Init.AccumulatedHBP = 29;
 8001764:	61eb      	str	r3, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 8001766:	f240 190d 	movw	r9, #269	; 0x10d
 800176a:	f240 1343 	movw	r3, #323	; 0x143
 800176e:	e9c5 9309 	strd	r9, r3, [r5, #36]	; 0x24
  hltdc.Init.Backcolor.Blue = 0;
 8001772:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.TotalHeigh = 327;
 8001774:	f240 1347 	movw	r3, #327	; 0x147
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001778:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 327;
 800177a:	f240 1a17 	movw	sl, #279	; 0x117
 800177e:	e9c5 a30b 	strd	sl, r3, [r5, #44]	; 0x2c
  hltdc.Init.VerticalSync = 1;
 8001782:	61ae      	str	r6, [r5, #24]
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 8001784:	e9c5 4401 	strd	r4, r4, [r5, #4]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 8001788:	e9c5 4403 	strd	r4, r4, [r5, #12]
  hltdc.Init.Backcolor.Red = 0;
 800178c:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001790:	f009 f890 	bl	800a8b4 <HAL_LTDC_Init>
  pLayerCfg.WindowX1 = 240;
 8001794:	23f0      	movs	r3, #240	; 0xf0
 8001796:	9310      	str	r3, [sp, #64]	; 0x40
  pLayerCfg.ImageWidth = 240;
 8001798:	9319      	str	r3, [sp, #100]	; 0x64
  pLayerCfg.WindowY1 = 320;
 800179a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800179e:	9312      	str	r3, [sp, #72]	; 0x48
  pLayerCfg.ImageHeight = 320;
 80017a0:	931a      	str	r3, [sp, #104]	; 0x68
  pLayerCfg.Alpha = 255;
 80017a2:	23ff      	movs	r3, #255	; 0xff
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 80017a4:	f44f 6c80 	mov.w	ip, #1024	; 0x400
 80017a8:	e024      	b.n	80017f4 <main+0x368>
 80017aa:	bf00      	nop
 80017ac:	40023800 	.word	0x40023800
 80017b0:	40021000 	.word	0x40021000
 80017b4:	20002674 	.word	0x20002674
 80017b8:	40020800 	.word	0x40020800
 80017bc:	40020c00 	.word	0x40020c00
 80017c0:	40021800 	.word	0x40021800
 80017c4:	40020000 	.word	0x40020000
 80017c8:	2000262c 	.word	0x2000262c
 80017cc:	40023000 	.word	0x40023000
 80017d0:	40005c00 	.word	0x40005c00
 80017d4:	000186a0 	.word	0x000186a0
 80017d8:	200027a4 	.word	0x200027a4
 80017dc:	20002770 	.word	0x20002770
 80017e0:	a0000140 	.word	0xa0000140
 80017e4:	200026c8 	.word	0x200026c8
 80017e8:	40016800 	.word	0x40016800
 80017ec:	40015000 	.word	0x40015000
 80017f0:	200027fc 	.word	0x200027fc
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80017f4:	4622      	mov	r2, r4
 80017f6:	a90f      	add	r1, sp, #60	; 0x3c
 80017f8:	4628      	mov	r0, r5
  pLayerCfg.Alpha = 255;
 80017fa:	9314      	str	r3, [sp, #80]	; 0x50
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 80017fc:	2305      	movs	r3, #5
 80017fe:	e9cd c316 	strd	ip, r3, [sp, #88]	; 0x58
  LcdDrv = &ili9341_drv;
 8001802:	4d4b      	ldr	r5, [pc, #300]	; (8001930 <main+0x4a4>)
  pLayerCfg.WindowX0 = 0;
 8001804:	940f      	str	r4, [sp, #60]	; 0x3c
  pLayerCfg.WindowY0 = 0;
 8001806:	9411      	str	r4, [sp, #68]	; 0x44
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8001808:	9713      	str	r7, [sp, #76]	; 0x4c
  pLayerCfg.Alpha0 = 0;
 800180a:	9415      	str	r4, [sp, #84]	; 0x54
  pLayerCfg.FBStartAdress = 0;
 800180c:	9418      	str	r4, [sp, #96]	; 0x60
  pLayerCfg.Backcolor.Blue = 0;
 800180e:	f8ad 406c 	strh.w	r4, [sp, #108]	; 0x6c
  pLayerCfg.Backcolor.Red = 0;
 8001812:	f88d 406e 	strb.w	r4, [sp, #110]	; 0x6e
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001816:	f009 f923 	bl	800aa60 <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 800181a:	4b46      	ldr	r3, [pc, #280]	; (8001934 <main+0x4a8>)
 800181c:	602b      	str	r3, [r5, #0]
  LcdDrv->Init();
 800181e:	681b      	ldr	r3, [r3, #0]
 8001820:	4798      	blx	r3
  LcdDrv->DisplayOff();
 8001822:	682b      	ldr	r3, [r5, #0]
  hdma2d.Instance = DMA2D;
 8001824:	4d44      	ldr	r5, [pc, #272]	; (8001938 <main+0x4ac>)
  LcdDrv->DisplayOff();
 8001826:	68db      	ldr	r3, [r3, #12]
 8001828:	4798      	blx	r3
  hdma2d.Instance = DMA2D;
 800182a:	4b44      	ldr	r3, [pc, #272]	; (800193c <main+0x4b0>)
 800182c:	602b      	str	r3, [r5, #0]
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 800182e:	e9c5 470a 	strd	r4, r7, [r5, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8001832:	e9c5 440c 	strd	r4, r4, [r5, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001836:	4628      	mov	r0, r5
  hdma2d.Init.ColorMode = DMA2D_OUTPUT_RGB565;
 8001838:	e9c5 4701 	strd	r4, r7, [r5, #4]
  hdma2d.Init.OutputOffset = 0;
 800183c:	60ec      	str	r4, [r5, #12]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 800183e:	f007 f963 	bl	8008b08 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8001842:	4631      	mov	r1, r6
 8001844:	4628      	mov	r0, r5
 8001846:	f007 fa25 	bl	8008c94 <HAL_DMA2D_ConfigLayer>
  htim1.Init.Period = 65535;
 800184a:	f64f 76ff 	movw	r6, #65535	; 0xffff
  htim1.Instance = TIM1;
 800184e:	4b3c      	ldr	r3, [pc, #240]	; (8001940 <main+0x4b4>)
  htim3.Instance = TIM3;
 8001850:	4d3c      	ldr	r5, [pc, #240]	; (8001944 <main+0x4b8>)
  htim1.Instance = TIM1;
 8001852:	f8c8 3000 	str.w	r3, [r8]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 8001856:	4640      	mov	r0, r8
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 8001858:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 800185c:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001860:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001864:	e9c8 4401 	strd	r4, r4, [r8, #4]
  htim1.Init.RepetitionCounter = 0;
 8001868:	e9c8 4404 	strd	r4, r4, [r8, #16]
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 800186c:	9413      	str	r4, [sp, #76]	; 0x4c
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800186e:	f8c8 4018 	str.w	r4, [r8, #24]
  htim1.Init.Period = 65535;
 8001872:	f8c8 600c 	str.w	r6, [r8, #12]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 8001876:	f00a fadb 	bl	800be30 <HAL_TIM_Base_Init>
  if (HAL_TIM_SlaveConfigSynchro(&htim1, &sSlaveConfig) != HAL_OK)
 800187a:	a90f      	add	r1, sp, #60	; 0x3c
 800187c:	4640      	mov	r0, r8
  sSlaveConfig.InputTrigger = TIM_TS_ITR0;
 800187e:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  if (HAL_TIM_SlaveConfigSynchro(&htim1, &sSlaveConfig) != HAL_OK)
 8001882:	f00a fc4f 	bl	800c124 <HAL_TIM_SlaveConfigSynchro>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8001886:	a90b      	add	r1, sp, #44	; 0x2c
 8001888:	4640      	mov	r0, r8
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800188a:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 800188e:	f00a fd87 	bl	800c3a0 <HAL_TIMEx_MasterConfigSynchronization>
  htim3.Instance = TIM3;
 8001892:	4b2d      	ldr	r3, [pc, #180]	; (8001948 <main+0x4bc>)
 8001894:	602b      	str	r3, [r5, #0]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8001896:	4628      	mov	r0, r5
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001898:	e9c5 4401 	strd	r4, r4, [r5, #4]
  htim3.Init.Period = 65535;
 800189c:	60ee      	str	r6, [r5, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800189e:	612c      	str	r4, [r5, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80018a0:	61ac      	str	r4, [r5, #24]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80018a2:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 80018a6:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 80018aa:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 80018ae:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
 80018b2:	9413      	str	r4, [sp, #76]	; 0x4c
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80018b4:	9409      	str	r4, [sp, #36]	; 0x24
 80018b6:	940a      	str	r4, [sp, #40]	; 0x28
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 80018b8:	f00a faba 	bl	800be30 <HAL_TIM_Base_Init>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80018bc:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 80018c0:	a90b      	add	r1, sp, #44	; 0x2c
 80018c2:	4628      	mov	r0, r5
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80018c4:	930b      	str	r3, [sp, #44]	; 0x2c
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 80018c6:	f00a fb7d 	bl	800bfc4 <HAL_TIM_ConfigClockSource>
  if (HAL_TIM_SlaveConfigSynchro(&htim3, &sSlaveConfig) != HAL_OK)
 80018ca:	a90f      	add	r1, sp, #60	; 0x3c
 80018cc:	4628      	mov	r0, r5
  sSlaveConfig.InputTrigger = TIM_TS_ITR0;
 80018ce:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  if (HAL_TIM_SlaveConfigSynchro(&htim3, &sSlaveConfig) != HAL_OK)
 80018d2:	f00a fc27 	bl	800c124 <HAL_TIM_SlaveConfigSynchro>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80018d6:	a909      	add	r1, sp, #36	; 0x24
 80018d8:	4628      	mov	r0, r5
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80018da:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80018de:	f00a fd5f 	bl	800c3a0 <HAL_TIMEx_MasterConfigSynchronization>
  MX_TouchGFX_Init();
 80018e2:	f7fe fe7f 	bl	80005e4 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 80018e6:	f7fe fe7b 	bl	80005e0 <MX_TouchGFX_PreOSInit>
  osKernelInitialize();
 80018ea:	f00a fe6b 	bl	800c5c4 <osKernelInitialize>
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 80018ee:	4a17      	ldr	r2, [pc, #92]	; (800194c <main+0x4c0>)
 80018f0:	4639      	mov	r1, r7
 80018f2:	4658      	mov	r0, fp
 80018f4:	f00a ffa0 	bl	800c838 <osMessageQueueNew>
 80018f8:	4b15      	ldr	r3, [pc, #84]	; (8001950 <main+0x4c4>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 80018fa:	4a16      	ldr	r2, [pc, #88]	; (8001954 <main+0x4c8>)
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 80018fc:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 80018fe:	4621      	mov	r1, r4
 8001900:	4815      	ldr	r0, [pc, #84]	; (8001958 <main+0x4cc>)
 8001902:	f00a fe8b 	bl	800c61c <osThreadNew>
 8001906:	4b15      	ldr	r3, [pc, #84]	; (800195c <main+0x4d0>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001908:	4a15      	ldr	r2, [pc, #84]	; (8001960 <main+0x4d4>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 800190a:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 800190c:	4621      	mov	r1, r4
 800190e:	4815      	ldr	r0, [pc, #84]	; (8001964 <main+0x4d8>)
 8001910:	f00a fe84 	bl	800c61c <osThreadNew>
 8001914:	4b14      	ldr	r3, [pc, #80]	; (8001968 <main+0x4dc>)
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8001916:	4a15      	ldr	r2, [pc, #84]	; (800196c <main+0x4e0>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001918:	4605      	mov	r5, r0
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 800191a:	4621      	mov	r1, r4
 800191c:	4814      	ldr	r0, [pc, #80]	; (8001970 <main+0x4e4>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 800191e:	601d      	str	r5, [r3, #0]
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8001920:	f00a fe7c 	bl	800c61c <osThreadNew>
 8001924:	4b13      	ldr	r3, [pc, #76]	; (8001974 <main+0x4e8>)
 8001926:	6018      	str	r0, [r3, #0]
  osKernelStart();
 8001928:	f00a fe5e 	bl	800c5e8 <osKernelStart>
  while (1)
 800192c:	e7fe      	b.n	800192c <main+0x4a0>
 800192e:	bf00      	nop
 8001930:	2000261c 	.word	0x2000261c
 8001934:	20000018 	.word	0x20000018
 8001938:	20002634 	.word	0x20002634
 800193c:	4002b000 	.word	0x4002b000
 8001940:	40010000 	.word	0x40010000
 8001944:	20002844 	.word	0x20002844
 8001948:	40000400 	.word	0x40000400
 800194c:	08029a60 	.word	0x08029a60
 8001950:	20002620 	.word	0x20002620
 8001954:	08029a9c 	.word	0x08029a9c
 8001958:	08001389 	.word	0x08001389
 800195c:	20002628 	.word	0x20002628
 8001960:	08029a3c 	.word	0x08029a3c
 8001964:	080005f5 	.word	0x080005f5
 8001968:	20002618 	.word	0x20002618
 800196c:	08029a78 	.word	0x08029a78
 8001970:	08001395 	.word	0x08001395
 8001974:	20002624 	.word	0x20002624

08001978 <IOE_Init>:
 8001978:	4770      	bx	lr
 800197a:	bf00      	nop

0800197c <IOE_ITConfig>:
 800197c:	4770      	bx	lr
 800197e:	bf00      	nop

08001980 <IOE_Write>:
{
 8001980:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8001982:	4c09      	ldr	r4, [pc, #36]	; (80019a8 <IOE_Write+0x28>)
{
 8001984:	b086      	sub	sp, #24
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8001986:	6824      	ldr	r4, [r4, #0]
 8001988:	9402      	str	r4, [sp, #8]
{
 800198a:	4614      	mov	r4, r2
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 800198c:	2301      	movs	r3, #1
 800198e:	f88d 4017 	strb.w	r4, [sp, #23]
 8001992:	f10d 0417 	add.w	r4, sp, #23
 8001996:	460a      	mov	r2, r1
 8001998:	9301      	str	r3, [sp, #4]
 800199a:	4601      	mov	r1, r0
 800199c:	9400      	str	r4, [sp, #0]
 800199e:	4803      	ldr	r0, [pc, #12]	; (80019ac <IOE_Write+0x2c>)
 80019a0:	f007 fe40 	bl	8009624 <HAL_I2C_Mem_Write>
}
 80019a4:	b006      	add	sp, #24
 80019a6:	bd10      	pop	{r4, pc}
 80019a8:	2000000c 	.word	0x2000000c
 80019ac:	20002674 	.word	0x20002674

080019b0 <IOE_Read>:
{
 80019b0:	b500      	push	{lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80019b2:	4b0b      	ldr	r3, [pc, #44]	; (80019e0 <IOE_Read+0x30>)
{
 80019b4:	b087      	sub	sp, #28
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80019b6:	681b      	ldr	r3, [r3, #0]
 80019b8:	9302      	str	r3, [sp, #8]
{
 80019ba:	4684      	mov	ip, r0
 80019bc:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80019be:	2301      	movs	r3, #1
 80019c0:	f10d 0117 	add.w	r1, sp, #23
  uint8_t value = 0;
 80019c4:	2000      	movs	r0, #0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80019c6:	e9cd 1300 	strd	r1, r3, [sp]
  uint8_t value = 0;
 80019ca:	f88d 0017 	strb.w	r0, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80019ce:	4661      	mov	r1, ip
 80019d0:	4804      	ldr	r0, [pc, #16]	; (80019e4 <IOE_Read+0x34>)
 80019d2:	f007 ff19 	bl	8009808 <HAL_I2C_Mem_Read>
}
 80019d6:	f89d 0017 	ldrb.w	r0, [sp, #23]
 80019da:	b007      	add	sp, #28
 80019dc:	f85d fb04 	ldr.w	pc, [sp], #4
 80019e0:	2000000c 	.word	0x2000000c
 80019e4:	20002674 	.word	0x20002674

080019e8 <IOE_ReadMultiple>:
{
 80019e8:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 80019ea:	4c09      	ldr	r4, [pc, #36]	; (8001a10 <IOE_ReadMultiple+0x28>)
{
 80019ec:	b084      	sub	sp, #16
 80019ee:	4684      	mov	ip, r0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 80019f0:	6820      	ldr	r0, [r4, #0]
 80019f2:	9002      	str	r0, [sp, #8]
 80019f4:	e9cd 2300 	strd	r2, r3, [sp]
 80019f8:	4806      	ldr	r0, [pc, #24]	; (8001a14 <IOE_ReadMultiple+0x2c>)
 80019fa:	460a      	mov	r2, r1
 80019fc:	2301      	movs	r3, #1
 80019fe:	4661      	mov	r1, ip
 8001a00:	f007 ff02 	bl	8009808 <HAL_I2C_Mem_Read>
}
 8001a04:	3800      	subs	r0, #0
 8001a06:	bf18      	it	ne
 8001a08:	2001      	movne	r0, #1
 8001a0a:	b004      	add	sp, #16
 8001a0c:	bd10      	pop	{r4, pc}
 8001a0e:	bf00      	nop
 8001a10:	2000000c 	.word	0x2000000c
 8001a14:	20002674 	.word	0x20002674

08001a18 <IOE_Delay>:
 8001a18:	f006 bfdc 	b.w	80089d4 <HAL_Delay>

08001a1c <LCD_IO_Init>:
{
 8001a1c:	b508      	push	{r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a1e:	4806      	ldr	r0, [pc, #24]	; (8001a38 <LCD_IO_Init+0x1c>)
 8001a20:	2200      	movs	r2, #0
 8001a22:	2104      	movs	r1, #4
 8001a24:	f007 fad0 	bl	8008fc8 <HAL_GPIO_WritePin>
}
 8001a28:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a2c:	4802      	ldr	r0, [pc, #8]	; (8001a38 <LCD_IO_Init+0x1c>)
 8001a2e:	2201      	movs	r2, #1
 8001a30:	2104      	movs	r1, #4
 8001a32:	f007 bac9 	b.w	8008fc8 <HAL_GPIO_WritePin>
 8001a36:	bf00      	nop
 8001a38:	40020800 	.word	0x40020800

08001a3c <LCD_IO_WriteData>:
{
 8001a3c:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a3e:	4d10      	ldr	r5, [pc, #64]	; (8001a80 <LCD_IO_WriteData+0x44>)
{
 8001a40:	b083      	sub	sp, #12
 8001a42:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001a44:	2201      	movs	r2, #1
 8001a46:	480f      	ldr	r0, [pc, #60]	; (8001a84 <LCD_IO_WriteData+0x48>)
 8001a48:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001a4c:	f007 fabc 	bl	8008fc8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a50:	4628      	mov	r0, r5
 8001a52:	2200      	movs	r2, #0
 8001a54:	2104      	movs	r1, #4
 8001a56:	f007 fab7 	bl	8008fc8 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001a5a:	4b0b      	ldr	r3, [pc, #44]	; (8001a88 <LCD_IO_WriteData+0x4c>)
 8001a5c:	480b      	ldr	r0, [pc, #44]	; (8001a8c <LCD_IO_WriteData+0x50>)
 8001a5e:	681b      	ldr	r3, [r3, #0]
 8001a60:	f8ad 4006 	strh.w	r4, [sp, #6]
 8001a64:	f10d 0106 	add.w	r1, sp, #6
 8001a68:	2201      	movs	r2, #1
 8001a6a:	f009 fe53 	bl	800b714 <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a6e:	2201      	movs	r2, #1
 8001a70:	2104      	movs	r1, #4
 8001a72:	4628      	mov	r0, r5
}
 8001a74:	b003      	add	sp, #12
 8001a76:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a7a:	f007 baa5 	b.w	8008fc8 <HAL_GPIO_WritePin>
 8001a7e:	bf00      	nop
 8001a80:	40020800 	.word	0x40020800
 8001a84:	40020c00 	.word	0x40020c00
 8001a88:	20000010 	.word	0x20000010
 8001a8c:	200027a4 	.word	0x200027a4

08001a90 <LCD_IO_WriteReg>:
{
 8001a90:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a92:	4d10      	ldr	r5, [pc, #64]	; (8001ad4 <LCD_IO_WriteReg+0x44>)
{
 8001a94:	b083      	sub	sp, #12
 8001a96:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001a98:	2200      	movs	r2, #0
 8001a9a:	480f      	ldr	r0, [pc, #60]	; (8001ad8 <LCD_IO_WriteReg+0x48>)
 8001a9c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001aa0:	f007 fa92 	bl	8008fc8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001aa4:	4628      	mov	r0, r5
 8001aa6:	2200      	movs	r2, #0
 8001aa8:	2104      	movs	r1, #4
 8001aaa:	f007 fa8d 	bl	8008fc8 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001aae:	4b0b      	ldr	r3, [pc, #44]	; (8001adc <LCD_IO_WriteReg+0x4c>)
 8001ab0:	480b      	ldr	r0, [pc, #44]	; (8001ae0 <LCD_IO_WriteReg+0x50>)
 8001ab2:	681b      	ldr	r3, [r3, #0]
  SPI5_Write(Reg);
 8001ab4:	f8ad 4006 	strh.w	r4, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001ab8:	f10d 0106 	add.w	r1, sp, #6
 8001abc:	2201      	movs	r2, #1
 8001abe:	f009 fe29 	bl	800b714 <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001ac2:	2201      	movs	r2, #1
 8001ac4:	2104      	movs	r1, #4
 8001ac6:	4628      	mov	r0, r5
}
 8001ac8:	b003      	add	sp, #12
 8001aca:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001ace:	f007 ba7b 	b.w	8008fc8 <HAL_GPIO_WritePin>
 8001ad2:	bf00      	nop
 8001ad4:	40020800 	.word	0x40020800
 8001ad8:	40020c00 	.word	0x40020c00
 8001adc:	20000010 	.word	0x20000010
 8001ae0:	200027a4 	.word	0x200027a4

08001ae4 <LCD_IO_ReadData>:
{
 8001ae4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001ae8:	4e19      	ldr	r6, [pc, #100]	; (8001b50 <LCD_IO_ReadData+0x6c>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001aea:	4f1a      	ldr	r7, [pc, #104]	; (8001b54 <LCD_IO_ReadData+0x70>)
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001aec:	f8df 9068 	ldr.w	r9, [pc, #104]	; 8001b58 <LCD_IO_ReadData+0x74>
 8001af0:	f8df 8068 	ldr.w	r8, [pc, #104]	; 8001b5c <LCD_IO_ReadData+0x78>
{
 8001af4:	b083      	sub	sp, #12
 8001af6:	460c      	mov	r4, r1
 8001af8:	4605      	mov	r5, r0
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001afa:	2200      	movs	r2, #0
 8001afc:	4630      	mov	r0, r6
 8001afe:	2104      	movs	r1, #4
 8001b00:	f007 fa62 	bl	8008fc8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001b04:	4638      	mov	r0, r7
 8001b06:	2200      	movs	r2, #0
 8001b08:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001b0c:	f007 fa5c 	bl	8008fc8 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001b10:	f8d9 3000 	ldr.w	r3, [r9]
 8001b14:	f8ad 5004 	strh.w	r5, [sp, #4]
 8001b18:	a901      	add	r1, sp, #4
 8001b1a:	2201      	movs	r2, #1
 8001b1c:	4640      	mov	r0, r8
 8001b1e:	f009 fdf9 	bl	800b714 <HAL_SPI_Transmit>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 8001b22:	f8d9 3000 	ldr.w	r3, [r9]
 8001b26:	4622      	mov	r2, r4
 8001b28:	a901      	add	r1, sp, #4
 8001b2a:	4640      	mov	r0, r8
 8001b2c:	f00a f89a 	bl	800bc64 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001b30:	4638      	mov	r0, r7
 8001b32:	2201      	movs	r2, #1
 8001b34:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 8001b38:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001b3a:	f007 fa45 	bl	8008fc8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001b3e:	4630      	mov	r0, r6
 8001b40:	2201      	movs	r2, #1
 8001b42:	2104      	movs	r1, #4
 8001b44:	f007 fa40 	bl	8008fc8 <HAL_GPIO_WritePin>
}
 8001b48:	4620      	mov	r0, r4
 8001b4a:	b003      	add	sp, #12
 8001b4c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001b50:	40020800 	.word	0x40020800
 8001b54:	40020c00 	.word	0x40020c00
 8001b58:	20000010 	.word	0x20000010
 8001b5c:	200027a4 	.word	0x200027a4

08001b60 <LCD_Delay>:
  HAL_Delay(Delay);
 8001b60:	f006 bf38 	b.w	80089d4 <HAL_Delay>

08001b64 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8001b64:	4b03      	ldr	r3, [pc, #12]	; (8001b74 <HAL_TIM_PeriodElapsedCallback+0x10>)
 8001b66:	6802      	ldr	r2, [r0, #0]
 8001b68:	429a      	cmp	r2, r3
 8001b6a:	d000      	beq.n	8001b6e <HAL_TIM_PeriodElapsedCallback+0xa>
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8001b6c:	4770      	bx	lr
    HAL_IncTick();
 8001b6e:	f006 bf1f 	b.w	80089b0 <HAL_IncTick>
 8001b72:	bf00      	nop
 8001b74:	40001000 	.word	0x40001000

08001b78 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8001b78:	4770      	bx	lr
 8001b7a:	bf00      	nop

08001b7c <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001b7c:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001b7e:	4b0e      	ldr	r3, [pc, #56]	; (8001bb8 <HAL_MspInit+0x3c>)
 8001b80:	2200      	movs	r2, #0
 8001b82:	9200      	str	r2, [sp, #0]
 8001b84:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001b86:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8001b8a:	6459      	str	r1, [r3, #68]	; 0x44
 8001b8c:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8001b8e:	f400 4080 	and.w	r0, r0, #16384	; 0x4000
 8001b92:	9000      	str	r0, [sp, #0]
 8001b94:	9800      	ldr	r0, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001b96:	9201      	str	r2, [sp, #4]
 8001b98:	6c18      	ldr	r0, [r3, #64]	; 0x40
 8001b9a:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 8001b9e:	6418      	str	r0, [r3, #64]	; 0x40
 8001ba0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001ba2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001ba6:	9301      	str	r3, [sp, #4]
 8001ba8:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001baa:	210f      	movs	r1, #15
 8001bac:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001bb0:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001bb2:	f006 bf33 	b.w	8008a1c <HAL_NVIC_SetPriority>
 8001bb6:	bf00      	nop
 8001bb8:	40023800 	.word	0x40023800

08001bbc <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8001bbc:	4b0b      	ldr	r3, [pc, #44]	; (8001bec <HAL_CRC_MspInit+0x30>)
 8001bbe:	6802      	ldr	r2, [r0, #0]
 8001bc0:	429a      	cmp	r2, r3
 8001bc2:	d000      	beq.n	8001bc6 <HAL_CRC_MspInit+0xa>
 8001bc4:	4770      	bx	lr
{
 8001bc6:	b082      	sub	sp, #8
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001bc8:	2200      	movs	r2, #0
 8001bca:	9201      	str	r2, [sp, #4]
 8001bcc:	f8d3 2830 	ldr.w	r2, [r3, #2096]	; 0x830
 8001bd0:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001bd4:	f8c3 2830 	str.w	r2, [r3, #2096]	; 0x830
 8001bd8:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8001bdc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001bde:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001be2:	9301      	str	r3, [sp, #4]
 8001be4:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8001be6:	b002      	add	sp, #8
 8001be8:	4770      	bx	lr
 8001bea:	bf00      	nop
 8001bec:	40023000 	.word	0x40023000

08001bf0 <HAL_DMA2D_MspInit>:
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
  if(hdma2d->Instance==DMA2D)
 8001bf0:	4b0e      	ldr	r3, [pc, #56]	; (8001c2c <HAL_DMA2D_MspInit+0x3c>)
 8001bf2:	6802      	ldr	r2, [r0, #0]
 8001bf4:	429a      	cmp	r2, r3
 8001bf6:	d000      	beq.n	8001bfa <HAL_DMA2D_MspInit+0xa>
 8001bf8:	4770      	bx	lr
{
 8001bfa:	b500      	push	{lr}
 8001bfc:	b083      	sub	sp, #12
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001bfe:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 8001c02:	2200      	movs	r2, #0
 8001c04:	9201      	str	r2, [sp, #4]
 8001c06:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001c08:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8001c0c:	6319      	str	r1, [r3, #48]	; 0x30
 8001c0e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c10:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001c14:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001c16:	205a      	movs	r0, #90	; 0x5a
 8001c18:	2105      	movs	r1, #5
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001c1a:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001c1c:	f006 fefe 	bl	8008a1c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001c20:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8001c22:	b003      	add	sp, #12
 8001c24:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001c28:	f006 bf36 	b.w	8008a98 <HAL_NVIC_EnableIRQ>
 8001c2c:	4002b000 	.word	0x4002b000

08001c30 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001c30:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hi2c->Instance==I2C3)
 8001c34:	4b2e      	ldr	r3, [pc, #184]	; (8001cf0 <HAL_I2C_MspInit+0xc0>)
 8001c36:	6802      	ldr	r2, [r0, #0]
{
 8001c38:	b08a      	sub	sp, #40	; 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001c3a:	2400      	movs	r4, #0
  if(hi2c->Instance==I2C3)
 8001c3c:	429a      	cmp	r2, r3
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001c3e:	e9cd 4404 	strd	r4, r4, [sp, #16]
 8001c42:	e9cd 4406 	strd	r4, r4, [sp, #24]
 8001c46:	9408      	str	r4, [sp, #32]
  if(hi2c->Instance==I2C3)
 8001c48:	d002      	beq.n	8001c50 <HAL_I2C_MspInit+0x20>
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 8001c4a:	b00a      	add	sp, #40	; 0x28
 8001c4c:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001c50:	4d28      	ldr	r5, [pc, #160]	; (8001cf4 <HAL_I2C_MspInit+0xc4>)
 8001c52:	9401      	str	r4, [sp, #4]
 8001c54:	6b2b      	ldr	r3, [r5, #48]	; 0x30
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001c56:	4828      	ldr	r0, [pc, #160]	; (8001cf8 <HAL_I2C_MspInit+0xc8>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001c58:	f043 0304 	orr.w	r3, r3, #4
 8001c5c:	632b      	str	r3, [r5, #48]	; 0x30
 8001c5e:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001c60:	f003 0304 	and.w	r3, r3, #4
 8001c64:	9301      	str	r3, [sp, #4]
 8001c66:	9b01      	ldr	r3, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001c68:	9402      	str	r4, [sp, #8]
 8001c6a:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001c6c:	f043 0301 	orr.w	r3, r3, #1
 8001c70:	632b      	str	r3, [r5, #48]	; 0x30
 8001c72:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001c74:	f003 0301 	and.w	r3, r3, #1
 8001c78:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8001c7a:	f44f 7200 	mov.w	r2, #512	; 0x200
 8001c7e:	f04f 0801 	mov.w	r8, #1
 8001c82:	f04f 0903 	mov.w	r9, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001c86:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001c88:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8001c8a:	2312      	movs	r3, #18
 8001c8c:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8001c90:	e9cd 8906 	strd	r8, r9, [sp, #24]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001c94:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001c96:	9608      	str	r6, [sp, #32]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001c98:	f007 f852 	bl	8008d40 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001c9c:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001c9e:	f44f 7280 	mov.w	r2, #256	; 0x100
 8001ca2:	2312      	movs	r3, #18
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001ca4:	4815      	ldr	r0, [pc, #84]	; (8001cfc <HAL_I2C_MspInit+0xcc>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001ca6:	9608      	str	r6, [sp, #32]
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001ca8:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8001cac:	e9cd 8906 	strd	r8, r9, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001cb0:	f007 f846 	bl	8008d40 <HAL_GPIO_Init>
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001cb4:	9403      	str	r4, [sp, #12]
 8001cb6:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8001cb8:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001cbc:	642b      	str	r3, [r5, #64]	; 0x40
 8001cbe:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8001cc0:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001cc4:	4622      	mov	r2, r4
 8001cc6:	2105      	movs	r1, #5
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001cc8:	9303      	str	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001cca:	2048      	movs	r0, #72	; 0x48
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001ccc:	9b03      	ldr	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001cce:	f006 fea5 	bl	8008a1c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(I2C3_EV_IRQn);
 8001cd2:	2048      	movs	r0, #72	; 0x48
 8001cd4:	f006 fee0 	bl	8008a98 <HAL_NVIC_EnableIRQ>
    __HAL_RCC_I2C3_FORCE_RESET();
 8001cd8:	6a2b      	ldr	r3, [r5, #32]
 8001cda:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001cde:	622b      	str	r3, [r5, #32]
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8001ce0:	6a2b      	ldr	r3, [r5, #32]
 8001ce2:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8001ce6:	622b      	str	r3, [r5, #32]
}
 8001ce8:	b00a      	add	sp, #40	; 0x28
 8001cea:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 8001cee:	bf00      	nop
 8001cf0:	40005c00 	.word	0x40005c00
 8001cf4:	40023800 	.word	0x40023800
 8001cf8:	40020800 	.word	0x40020800
 8001cfc:	40020000 	.word	0x40020000

08001d00 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001d00:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001d04:	4604      	mov	r4, r0
 8001d06:	b09a      	sub	sp, #104	; 0x68
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001d08:	2100      	movs	r1, #0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001d0a:	2230      	movs	r2, #48	; 0x30
 8001d0c:	a80e      	add	r0, sp, #56	; 0x38
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001d0e:	e9cd 1108 	strd	r1, r1, [sp, #32]
 8001d12:	e9cd 110a 	strd	r1, r1, [sp, #40]	; 0x28
 8001d16:	910c      	str	r1, [sp, #48]	; 0x30
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001d18:	f026 fc27 	bl	802856a <memset>
  if(hltdc->Instance==LTDC)
 8001d1c:	4b67      	ldr	r3, [pc, #412]	; (8001ebc <HAL_LTDC_MspInit+0x1bc>)
 8001d1e:	6822      	ldr	r2, [r4, #0]
 8001d20:	429a      	cmp	r2, r3
 8001d22:	d002      	beq.n	8001d2a <HAL_LTDC_MspInit+0x2a>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001d24:	b01a      	add	sp, #104	; 0x68
 8001d26:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8001d2a:	23c0      	movs	r3, #192	; 0xc0
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001d2c:	2108      	movs	r1, #8
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 8001d2e:	2204      	movs	r2, #4
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8001d30:	9312      	str	r3, [sp, #72]	; 0x48
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001d32:	a80e      	add	r0, sp, #56	; 0x38
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001d34:	f44f 3300 	mov.w	r3, #131072	; 0x20000
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001d38:	910e      	str	r1, [sp, #56]	; 0x38
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 8001d3a:	9214      	str	r2, [sp, #80]	; 0x50
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001d3c:	9317      	str	r3, [sp, #92]	; 0x5c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001d3e:	f009 fa69 	bl	800b214 <HAL_RCCEx_PeriphCLKConfig>
 8001d42:	2800      	cmp	r0, #0
 8001d44:	f040 80b7 	bne.w	8001eb6 <HAL_LTDC_MspInit+0x1b6>
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001d48:	4b5d      	ldr	r3, [pc, #372]	; (8001ec0 <HAL_LTDC_MspInit+0x1c0>)
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d4a:	485e      	ldr	r0, [pc, #376]	; (8001ec4 <HAL_LTDC_MspInit+0x1c4>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001d4c:	2400      	movs	r4, #0
 8001d4e:	9401      	str	r4, [sp, #4]
 8001d50:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001d52:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001d56:	645a      	str	r2, [r3, #68]	; 0x44
 8001d58:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001d5a:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 8001d5e:	9201      	str	r2, [sp, #4]
 8001d60:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001d62:	9402      	str	r4, [sp, #8]
 8001d64:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d66:	f042 0220 	orr.w	r2, r2, #32
 8001d6a:	631a      	str	r2, [r3, #48]	; 0x30
 8001d6c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d6e:	f002 0220 	and.w	r2, r2, #32
 8001d72:	9202      	str	r2, [sp, #8]
 8001d74:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001d76:	9403      	str	r4, [sp, #12]
 8001d78:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d7a:	f042 0201 	orr.w	r2, r2, #1
 8001d7e:	631a      	str	r2, [r3, #48]	; 0x30
 8001d80:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d82:	f002 0201 	and.w	r2, r2, #1
 8001d86:	9203      	str	r2, [sp, #12]
 8001d88:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001d8a:	9404      	str	r4, [sp, #16]
 8001d8c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d8e:	f042 0202 	orr.w	r2, r2, #2
 8001d92:	631a      	str	r2, [r3, #48]	; 0x30
 8001d94:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d96:	f002 0202 	and.w	r2, r2, #2
 8001d9a:	9204      	str	r2, [sp, #16]
 8001d9c:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8001d9e:	9405      	str	r4, [sp, #20]
 8001da0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001da2:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001da6:	631a      	str	r2, [r3, #48]	; 0x30
 8001da8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001daa:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001dae:	9205      	str	r2, [sp, #20]
 8001db0:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001db2:	9406      	str	r4, [sp, #24]
 8001db4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001db6:	f042 0204 	orr.w	r2, r2, #4
 8001dba:	631a      	str	r2, [r3, #48]	; 0x30
 8001dbc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001dbe:	f002 0204 	and.w	r2, r2, #4
 8001dc2:	9206      	str	r2, [sp, #24]
 8001dc4:	9a06      	ldr	r2, [sp, #24]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001dc6:	9407      	str	r4, [sp, #28]
 8001dc8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001dca:	f042 0208 	orr.w	r2, r2, #8
 8001dce:	631a      	str	r2, [r3, #48]	; 0x30
 8001dd0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001dd2:	f003 0308 	and.w	r3, r3, #8
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8001dd6:	2600      	movs	r6, #0
 8001dd8:	2702      	movs	r7, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001dda:	250e      	movs	r5, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001ddc:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001dde:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8001de0:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8001de4:	2302      	movs	r3, #2
 8001de6:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001dea:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001dee:	9b07      	ldr	r3, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001df0:	950c      	str	r5, [sp, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001df2:	f006 ffa5 	bl	8008d40 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001df6:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001df8:	f641 0258 	movw	r2, #6232	; 0x1858
 8001dfc:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001dfe:	4832      	ldr	r0, [pc, #200]	; (8001ec8 <HAL_LTDC_MspInit+0x1c8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001e00:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001e02:	e9cd 2308 	strd	r2, r3, [sp, #32]
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001e06:	f04f 0809 	mov.w	r8, #9
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001e0a:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001e0e:	f006 ff97 	bl	8008d40 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e12:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8001e14:	2203      	movs	r2, #3
 8001e16:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e18:	482c      	ldr	r0, [pc, #176]	; (8001ecc <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001e1a:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8001e1e:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001e22:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e26:	f006 ff8b 	bl	8008d40 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e2a:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8001e2c:	f44f 6270 	mov.w	r2, #3840	; 0xf00
 8001e30:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e32:	4826      	ldr	r0, [pc, #152]	; (8001ecc <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001e34:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8001e36:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001e3a:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e3e:	f006 ff7f 	bl	8008d40 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e42:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8001e44:	f44f 620c 	mov.w	r2, #2240	; 0x8c0
 8001e48:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e4a:	4821      	ldr	r0, [pc, #132]	; (8001ed0 <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001e4c:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8001e4e:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001e52:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e56:	f006 ff73 	bl	8008d40 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e5a:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001e5c:	22c0      	movs	r2, #192	; 0xc0
 8001e5e:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e60:	481c      	ldr	r0, [pc, #112]	; (8001ed4 <HAL_LTDC_MspInit+0x1d4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001e62:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001e64:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001e68:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e6c:	f006 ff68 	bl	8008d40 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001e70:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001e72:	2208      	movs	r2, #8
 8001e74:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001e76:	4818      	ldr	r0, [pc, #96]	; (8001ed8 <HAL_LTDC_MspInit+0x1d8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001e78:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001e7a:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001e7e:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001e82:	f006 ff5d 	bl	8008d40 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001e86:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e88:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001e8a:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e8e:	4810      	ldr	r0, [pc, #64]	; (8001ed0 <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001e90:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001e94:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001e98:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e9c:	f006 ff50 	bl	8008d40 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001ea0:	4622      	mov	r2, r4
 8001ea2:	2105      	movs	r1, #5
 8001ea4:	2058      	movs	r0, #88	; 0x58
 8001ea6:	f006 fdb9 	bl	8008a1c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001eaa:	2058      	movs	r0, #88	; 0x58
 8001eac:	f006 fdf4 	bl	8008a98 <HAL_NVIC_EnableIRQ>
}
 8001eb0:	b01a      	add	sp, #104	; 0x68
 8001eb2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      Error_Handler();
 8001eb6:	f7ff fe5f 	bl	8001b78 <Error_Handler>
 8001eba:	e745      	b.n	8001d48 <HAL_LTDC_MspInit+0x48>
 8001ebc:	40016800 	.word	0x40016800
 8001ec0:	40023800 	.word	0x40023800
 8001ec4:	40021400 	.word	0x40021400
 8001ec8:	40020000 	.word	0x40020000
 8001ecc:	40020400 	.word	0x40020400
 8001ed0:	40021800 	.word	0x40021800
 8001ed4:	40020800 	.word	0x40020800
 8001ed8:	40020c00 	.word	0x40020c00
 8001edc:	00000000 	.word	0x00000000

08001ee0 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8001ee0:	b510      	push	{r4, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hspi->Instance==SPI5)
 8001ee2:	4a1b      	ldr	r2, [pc, #108]	; (8001f50 <HAL_SPI_MspInit+0x70>)
 8001ee4:	6801      	ldr	r1, [r0, #0]
{
 8001ee6:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001ee8:	2300      	movs	r3, #0
  if(hspi->Instance==SPI5)
 8001eea:	4291      	cmp	r1, r2
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001eec:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8001ef0:	e9cd 3304 	strd	r3, r3, [sp, #16]
 8001ef4:	9306      	str	r3, [sp, #24]
  if(hspi->Instance==SPI5)
 8001ef6:	d001      	beq.n	8001efc <HAL_SPI_MspInit+0x1c>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8001ef8:	b008      	add	sp, #32
 8001efa:	bd10      	pop	{r4, pc}
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001efc:	f502 4268 	add.w	r2, r2, #59392	; 0xe800
 8001f00:	9300      	str	r3, [sp, #0]
 8001f02:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8001f04:	f440 1080 	orr.w	r0, r0, #1048576	; 0x100000
 8001f08:	6450      	str	r0, [r2, #68]	; 0x44
 8001f0a:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8001f0c:	f400 1080 	and.w	r0, r0, #1048576	; 0x100000
 8001f10:	9000      	str	r0, [sp, #0]
 8001f12:	9800      	ldr	r0, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001f14:	9301      	str	r3, [sp, #4]
 8001f16:	6b13      	ldr	r3, [r2, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001f18:	480e      	ldr	r0, [pc, #56]	; (8001f54 <HAL_SPI_MspInit+0x74>)
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001f1a:	f043 0320 	orr.w	r3, r3, #32
 8001f1e:	6313      	str	r3, [r2, #48]	; 0x30
 8001f20:	6b13      	ldr	r3, [r2, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 8001f22:	ed9f 7b09 	vldr	d7, [pc, #36]	; 8001f48 <HAL_SPI_MspInit+0x68>
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001f26:	f003 0320 	and.w	r3, r3, #32
 8001f2a:	9301      	str	r3, [sp, #4]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001f2c:	2203      	movs	r2, #3
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001f2e:	2305      	movs	r3, #5
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001f30:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 8001f32:	ed8d 7b02 	vstr	d7, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001f36:	e9cd 2305 	strd	r2, r3, [sp, #20]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001f3a:	9c01      	ldr	r4, [sp, #4]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001f3c:	f006 ff00 	bl	8008d40 <HAL_GPIO_Init>
}
 8001f40:	b008      	add	sp, #32
 8001f42:	bd10      	pop	{r4, pc}
 8001f44:	f3af 8000 	nop.w
 8001f48:	00000380 	.word	0x00000380
 8001f4c:	00000002 	.word	0x00000002
 8001f50:	40015000 	.word	0x40015000
 8001f54:	40021400 	.word	0x40021400

08001f58 <HAL_TIM_Base_MspInit>:
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
  if(htim_base->Instance==TIM1)
 8001f58:	4a12      	ldr	r2, [pc, #72]	; (8001fa4 <HAL_TIM_Base_MspInit+0x4c>)
 8001f5a:	6803      	ldr	r3, [r0, #0]
 8001f5c:	4293      	cmp	r3, r2
{
 8001f5e:	b082      	sub	sp, #8
  if(htim_base->Instance==TIM1)
 8001f60:	d012      	beq.n	8001f88 <HAL_TIM_Base_MspInit+0x30>
    __HAL_RCC_TIM1_CLK_ENABLE();
  /* USER CODE BEGIN TIM1_MspInit 1 */

  /* USER CODE END TIM1_MspInit 1 */
  }
  else if(htim_base->Instance==TIM3)
 8001f62:	4a11      	ldr	r2, [pc, #68]	; (8001fa8 <HAL_TIM_Base_MspInit+0x50>)
 8001f64:	4293      	cmp	r3, r2
 8001f66:	d001      	beq.n	8001f6c <HAL_TIM_Base_MspInit+0x14>
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }

}
 8001f68:	b002      	add	sp, #8
 8001f6a:	4770      	bx	lr
    __HAL_RCC_TIM3_CLK_ENABLE();
 8001f6c:	4b0f      	ldr	r3, [pc, #60]	; (8001fac <HAL_TIM_Base_MspInit+0x54>)
 8001f6e:	2200      	movs	r2, #0
 8001f70:	9201      	str	r2, [sp, #4]
 8001f72:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001f74:	f042 0202 	orr.w	r2, r2, #2
 8001f78:	641a      	str	r2, [r3, #64]	; 0x40
 8001f7a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001f7c:	f003 0302 	and.w	r3, r3, #2
 8001f80:	9301      	str	r3, [sp, #4]
 8001f82:	9b01      	ldr	r3, [sp, #4]
}
 8001f84:	b002      	add	sp, #8
 8001f86:	4770      	bx	lr
    __HAL_RCC_TIM1_CLK_ENABLE();
 8001f88:	4b08      	ldr	r3, [pc, #32]	; (8001fac <HAL_TIM_Base_MspInit+0x54>)
 8001f8a:	2200      	movs	r2, #0
 8001f8c:	9200      	str	r2, [sp, #0]
 8001f8e:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001f90:	f042 0201 	orr.w	r2, r2, #1
 8001f94:	645a      	str	r2, [r3, #68]	; 0x44
 8001f96:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001f98:	f003 0301 	and.w	r3, r3, #1
 8001f9c:	9300      	str	r3, [sp, #0]
 8001f9e:	9b00      	ldr	r3, [sp, #0]
}
 8001fa0:	b002      	add	sp, #8
 8001fa2:	4770      	bx	lr
 8001fa4:	40010000 	.word	0x40010000
 8001fa8:	40000400 	.word	0x40000400
 8001fac:	40023800 	.word	0x40023800

08001fb0 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001fb0:	b5f0      	push	{r4, r5, r6, r7, lr}
  if (FMC_Initialized) {
 8001fb2:	4b2b      	ldr	r3, [pc, #172]	; (8002060 <HAL_SDRAM_MspInit+0xb0>)
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001fb4:	b089      	sub	sp, #36	; 0x24
  if (FMC_Initialized) {
 8001fb6:	681c      	ldr	r4, [r3, #0]
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8001fb8:	2200      	movs	r2, #0
 8001fba:	9204      	str	r2, [sp, #16]
  if (FMC_Initialized) {
 8001fbc:	2c00      	cmp	r4, #0
 8001fbe:	d14c      	bne.n	800205a <HAL_SDRAM_MspInit+0xaa>
  FMC_Initialized = 1;
 8001fc0:	2701      	movs	r7, #1
  __HAL_RCC_FMC_CLK_ENABLE();
 8001fc2:	4a28      	ldr	r2, [pc, #160]	; (8002064 <HAL_SDRAM_MspInit+0xb4>)
 8001fc4:	9401      	str	r4, [sp, #4]
  FMC_Initialized = 1;
 8001fc6:	601f      	str	r7, [r3, #0]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001fc8:	6b93      	ldr	r3, [r2, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001fca:	4827      	ldr	r0, [pc, #156]	; (8002068 <HAL_SDRAM_MspInit+0xb8>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8001fcc:	433b      	orrs	r3, r7
 8001fce:	6393      	str	r3, [r2, #56]	; 0x38
 8001fd0:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8001fd2:	403b      	ands	r3, r7
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001fd4:	2603      	movs	r6, #3
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001fd6:	250c      	movs	r5, #12
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8001fd8:	f64f 023f 	movw	r2, #63551	; 0xf83f
  __HAL_RCC_FMC_CLK_ENABLE();
 8001fdc:	9301      	str	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001fde:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8001fe0:	2302      	movs	r3, #2
 8001fe2:	e9cd 2302 	strd	r2, r3, [sp, #8]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001fe6:	e9cd 6505 	strd	r6, r5, [sp, #20]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001fea:	9b01      	ldr	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001fec:	f006 fea8 	bl	8008d40 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001ff0:	481e      	ldr	r0, [pc, #120]	; (800206c <HAL_SDRAM_MspInit+0xbc>)
  GPIO_InitStruct.Pin = GPIO_PIN_0;
 8001ff2:	9702      	str	r7, [sp, #8]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001ff4:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ff6:	2702      	movs	r7, #2
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001ff8:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001ffc:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002000:	f006 fe9e 	bl	8008d40 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8002004:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002008:	4819      	ldr	r0, [pc, #100]	; (8002070 <HAL_SDRAM_MspInit+0xc0>)
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 800200a:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800200c:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800200e:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002012:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002016:	f006 fe93 	bl	8008d40 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 800201a:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800201e:	4815      	ldr	r0, [pc, #84]	; (8002074 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8002020:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002022:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002024:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002028:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800202c:	f006 fe88 	bl	8008d40 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8002030:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002034:	4810      	ldr	r0, [pc, #64]	; (8002078 <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8002036:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002038:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800203a:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800203e:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002042:	f006 fe7d 	bl	8008d40 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8002046:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002048:	480c      	ldr	r0, [pc, #48]	; (800207c <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800204a:	9703      	str	r7, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800204c:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800204e:	e9cd 4604 	strd	r4, r6, [sp, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002052:	9506      	str	r5, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8002054:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002056:	f006 fe73 	bl	8008d40 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 800205a:	b009      	add	sp, #36	; 0x24
 800205c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800205e:	bf00      	nop
 8002060:	2000288c 	.word	0x2000288c
 8002064:	40023800 	.word	0x40023800
 8002068:	40021400 	.word	0x40021400
 800206c:	40020800 	.word	0x40020800
 8002070:	40021800 	.word	0x40021800
 8002074:	40021000 	.word	0x40021000
 8002078:	40020c00 	.word	0x40020c00
 800207c:	40020400 	.word	0x40020400

08002080 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8002080:	b570      	push	{r4, r5, r6, lr}
 8002082:	b088      	sub	sp, #32
  uint32_t              uwPrescalerValue = 0U;
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8002084:	4b23      	ldr	r3, [pc, #140]	; (8002114 <HAL_InitTick+0x94>)
 8002086:	2200      	movs	r2, #0
 8002088:	9202      	str	r2, [sp, #8]
 800208a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800208c:	f042 0210 	orr.w	r2, r2, #16
 8002090:	641a      	str	r2, [r3, #64]	; 0x40
 8002092:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002094:	f003 0310 	and.w	r3, r3, #16
 8002098:	9302      	str	r3, [sp, #8]
{
 800209a:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 800209c:	a901      	add	r1, sp, #4
 800209e:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 80020a0:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80020a2:	f009 f895 	bl	800b1d0 <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 80020a6:	9b06      	ldr	r3, [sp, #24]
 80020a8:	b9d3      	cbnz	r3, 80020e0 <HAL_InitTick+0x60>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 80020aa:	f009 f881 	bl	800b1b0 <HAL_RCC_GetPCLK1Freq>
 80020ae:	4603      	mov	r3, r0
  {
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
  }

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 80020b0:	4a19      	ldr	r2, [pc, #100]	; (8002118 <HAL_InitTick+0x98>)

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 80020b2:	4c1a      	ldr	r4, [pc, #104]	; (800211c <HAL_InitTick+0x9c>)
 80020b4:	491a      	ldr	r1, [pc, #104]	; (8002120 <HAL_InitTick+0xa0>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 80020b6:	fba2 2303 	umull	r2, r3, r2, r3
 80020ba:	0c9b      	lsrs	r3, r3, #18
 80020bc:	3b01      	subs	r3, #1
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
  htim6.Init.Prescaler = uwPrescalerValue;
  htim6.Init.ClockDivision = 0;
 80020be:	2200      	movs	r2, #0
  htim6.Init.Prescaler = uwPrescalerValue;
 80020c0:	e9c4 1300 	strd	r1, r3, [r4]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 80020c4:	4620      	mov	r0, r4
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 80020c6:	f240 33e7 	movw	r3, #999	; 0x3e7
  htim6.Init.ClockDivision = 0;
 80020ca:	6122      	str	r2, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 80020cc:	60a2      	str	r2, [r4, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80020ce:	61a2      	str	r2, [r4, #24]
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 80020d0:	60e3      	str	r3, [r4, #12]
  status = HAL_TIM_Base_Init(&htim6);
 80020d2:	f009 fead 	bl	800be30 <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 80020d6:	4606      	mov	r6, r0
 80020d8:	b130      	cbz	r0, 80020e8 <HAL_InitTick+0x68>
    }
  }

 /* Return function status */
  return status;
}
 80020da:	4630      	mov	r0, r6
 80020dc:	b008      	add	sp, #32
 80020de:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 80020e0:	f009 f866 	bl	800b1b0 <HAL_RCC_GetPCLK1Freq>
 80020e4:	0043      	lsls	r3, r0, #1
 80020e6:	e7e3      	b.n	80020b0 <HAL_InitTick+0x30>
    status = HAL_TIM_Base_Start_IT(&htim6);
 80020e8:	4620      	mov	r0, r4
 80020ea:	f009 ff2f 	bl	800bf4c <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 80020ee:	4606      	mov	r6, r0
 80020f0:	2800      	cmp	r0, #0
 80020f2:	d1f2      	bne.n	80020da <HAL_InitTick+0x5a>
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 80020f4:	2036      	movs	r0, #54	; 0x36
 80020f6:	f006 fccf 	bl	8008a98 <HAL_NVIC_EnableIRQ>
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 80020fa:	2d0f      	cmp	r5, #15
 80020fc:	d901      	bls.n	8002102 <HAL_InitTick+0x82>
        status = HAL_ERROR;
 80020fe:	2601      	movs	r6, #1
 8002100:	e7eb      	b.n	80020da <HAL_InitTick+0x5a>
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 8002102:	4632      	mov	r2, r6
 8002104:	4629      	mov	r1, r5
 8002106:	2036      	movs	r0, #54	; 0x36
 8002108:	f006 fc88 	bl	8008a1c <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 800210c:	4b05      	ldr	r3, [pc, #20]	; (8002124 <HAL_InitTick+0xa4>)
 800210e:	601d      	str	r5, [r3, #0]
 8002110:	e7e3      	b.n	80020da <HAL_InitTick+0x5a>
 8002112:	bf00      	nop
 8002114:	40023800 	.word	0x40023800
 8002118:	431bde83 	.word	0x431bde83
 800211c:	20002890 	.word	0x20002890
 8002120:	40001000 	.word	0x40001000
 8002124:	20000080 	.word	0x20000080

08002128 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8002128:	4770      	bx	lr
 800212a:	bf00      	nop

0800212c <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800212c:	e7fe      	b.n	800212c <HardFault_Handler>
 800212e:	bf00      	nop

08002130 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002130:	e7fe      	b.n	8002130 <MemManage_Handler>
 8002132:	bf00      	nop

08002134 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8002134:	e7fe      	b.n	8002134 <BusFault_Handler>
 8002136:	bf00      	nop

08002138 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002138:	e7fe      	b.n	8002138 <UsageFault_Handler>
 800213a:	bf00      	nop

0800213c <DebugMon_Handler>:
 800213c:	4770      	bx	lr
 800213e:	bf00      	nop

08002140 <EXTI3_IRQHandler>:

/**
  * @brief This function handles EXTI line3 interrupt.
  */
void EXTI3_IRQHandler(void)
{
 8002140:	b508      	push	{r3, lr}
  /* USER CODE BEGIN EXTI3_IRQn 0 */

  HAL_Delay(200);
 8002142:	20c8      	movs	r0, #200	; 0xc8
 8002144:	f006 fc46 	bl	80089d4 <HAL_Delay>
  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 8002148:	4804      	ldr	r0, [pc, #16]	; (800215c <EXTI3_IRQHandler+0x1c>)
 800214a:	2200      	movs	r2, #0
 800214c:	2120      	movs	r1, #32
 800214e:	f006 ff3b 	bl	8008fc8 <HAL_GPIO_WritePin>
  /* USER CODE END EXTI3_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
  /* USER CODE BEGIN EXTI3_IRQn 1 */

  /* USER CODE END EXTI3_IRQn 1 */
}
 8002152:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
 8002156:	2008      	movs	r0, #8
 8002158:	f006 bf46 	b.w	8008fe8 <HAL_GPIO_EXTI_IRQHandler>
 800215c:	40021000 	.word	0x40021000

08002160 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8002160:	4801      	ldr	r0, [pc, #4]	; (8002168 <TIM6_DAC_IRQHandler+0x8>)
 8002162:	f00a b873 	b.w	800c24c <HAL_TIM_IRQHandler>
 8002166:	bf00      	nop
 8002168:	20002890 	.word	0x20002890

0800216c <I2C3_EV_IRQHandler>:
void I2C3_EV_IRQHandler(void)
{
  /* USER CODE BEGIN I2C3_EV_IRQn 0 */

  /* USER CODE END I2C3_EV_IRQn 0 */
  HAL_I2C_EV_IRQHandler(&hi2c3);
 800216c:	4801      	ldr	r0, [pc, #4]	; (8002174 <I2C3_EV_IRQHandler+0x8>)
 800216e:	f007 be9b 	b.w	8009ea8 <HAL_I2C_EV_IRQHandler>
 8002172:	bf00      	nop
 8002174:	20002674 	.word	0x20002674

08002178 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8002178:	4801      	ldr	r0, [pc, #4]	; (8002180 <LTDC_IRQHandler+0x8>)
 800217a:	f008 bc0f 	b.w	800a99c <HAL_LTDC_IRQHandler>
 800217e:	bf00      	nop
 8002180:	200026c8 	.word	0x200026c8

08002184 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8002184:	4801      	ldr	r0, [pc, #4]	; (800218c <DMA2D_IRQHandler+0x8>)
 8002186:	f006 bcf1 	b.w	8008b6c <HAL_DMA2D_IRQHandler>
 800218a:	bf00      	nop
 800218c:	20002634 	.word	0x20002634

08002190 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8002190:	2001      	movs	r0, #1
 8002192:	4770      	bx	lr

08002194 <_kill>:

int _kill(int pid, int sig)
{
 8002194:	b508      	push	{r3, lr}
	errno = EINVAL;
 8002196:	f026 fae1 	bl	802875c <__errno>
 800219a:	2316      	movs	r3, #22
 800219c:	6003      	str	r3, [r0, #0]
	return -1;
}
 800219e:	f04f 30ff 	mov.w	r0, #4294967295
 80021a2:	bd08      	pop	{r3, pc}

080021a4 <_exit>:

void _exit (int status)
{
 80021a4:	b508      	push	{r3, lr}
	errno = EINVAL;
 80021a6:	f026 fad9 	bl	802875c <__errno>
 80021aa:	2316      	movs	r3, #22
 80021ac:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 80021ae:	e7fe      	b.n	80021ae <_exit+0xa>

080021b0 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80021b0:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80021b2:	1e16      	subs	r6, r2, #0
 80021b4:	dd07      	ble.n	80021c6 <_read+0x16>
 80021b6:	460c      	mov	r4, r1
 80021b8:	198d      	adds	r5, r1, r6
	{
		*ptr++ = __io_getchar();
 80021ba:	f3af 8000 	nop.w
 80021be:	f804 0b01 	strb.w	r0, [r4], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80021c2:	42a5      	cmp	r5, r4
 80021c4:	d1f9      	bne.n	80021ba <_read+0xa>
	}

return len;
}
 80021c6:	4630      	mov	r0, r6
 80021c8:	bd70      	pop	{r4, r5, r6, pc}
 80021ca:	bf00      	nop

080021cc <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80021cc:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80021ce:	1e16      	subs	r6, r2, #0
 80021d0:	dd07      	ble.n	80021e2 <_write+0x16>
 80021d2:	460c      	mov	r4, r1
 80021d4:	198d      	adds	r5, r1, r6
	{
		__io_putchar(*ptr++);
 80021d6:	f814 0b01 	ldrb.w	r0, [r4], #1
 80021da:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80021de:	42ac      	cmp	r4, r5
 80021e0:	d1f9      	bne.n	80021d6 <_write+0xa>
	}
	return len;
}
 80021e2:	4630      	mov	r0, r6
 80021e4:	bd70      	pop	{r4, r5, r6, pc}
 80021e6:	bf00      	nop

080021e8 <_close>:

int _close(int file)
{
	return -1;
}
 80021e8:	f04f 30ff 	mov.w	r0, #4294967295
 80021ec:	4770      	bx	lr
 80021ee:	bf00      	nop

080021f0 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 80021f0:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80021f4:	604b      	str	r3, [r1, #4]
	return 0;
}
 80021f6:	2000      	movs	r0, #0
 80021f8:	4770      	bx	lr
 80021fa:	bf00      	nop

080021fc <_isatty>:

int _isatty(int file)
{
	return 1;
}
 80021fc:	2001      	movs	r0, #1
 80021fe:	4770      	bx	lr

08002200 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8002200:	2000      	movs	r0, #0
 8002202:	4770      	bx	lr

08002204 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8002204:	4a0b      	ldr	r2, [pc, #44]	; (8002234 <_sbrk+0x30>)
{
 8002206:	b508      	push	{r3, lr}
 8002208:	4603      	mov	r3, r0
	if (heap_end == 0)
 800220a:	6810      	ldr	r0, [r2, #0]
 800220c:	b128      	cbz	r0, 800221a <_sbrk+0x16>
		heap_end = &end;

	prev_heap_end = heap_end;
	if (heap_end + incr > stack_ptr)
 800220e:	4403      	add	r3, r0
 8002210:	4669      	mov	r1, sp
 8002212:	428b      	cmp	r3, r1
 8002214:	d807      	bhi.n	8002226 <_sbrk+0x22>
	{
		errno = ENOMEM;
		return (caddr_t) -1;
	}

	heap_end += incr;
 8002216:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
}
 8002218:	bd08      	pop	{r3, pc}
		heap_end = &end;
 800221a:	4807      	ldr	r0, [pc, #28]	; (8002238 <_sbrk+0x34>)
 800221c:	6010      	str	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 800221e:	4403      	add	r3, r0
 8002220:	4669      	mov	r1, sp
 8002222:	428b      	cmp	r3, r1
 8002224:	d9f7      	bls.n	8002216 <_sbrk+0x12>
		errno = ENOMEM;
 8002226:	f026 fa99 	bl	802875c <__errno>
 800222a:	230c      	movs	r3, #12
 800222c:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 800222e:	f04f 30ff 	mov.w	r0, #4294967295
}
 8002232:	bd08      	pop	{r3, pc}
 8002234:	200028d8 	.word	0x200028d8
 8002238:	200143f8 	.word	0x200143f8

0800223c <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId SMALL = 2;     // verdana_10_4bpp
    static const touchgfx::FontId NORMAL_12 = 3; // verdana_12_4bpp
    static const uint16_t NUMBER_OF_FONTS = 4;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 800223c:	4770      	bx	lr

0800223e <_ZN23ApplicationFontProviderD0Ev>:
 800223e:	b510      	push	{r4, lr}
 8002240:	2104      	movs	r1, #4
 8002242:	4604      	mov	r4, r0
 8002244:	f025 f99b 	bl	802757e <_ZdlPvj>
 8002248:	4620      	mov	r0, r4
 800224a:	bd10      	pop	{r4, pc}

0800224c <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 800224c:	b508      	push	{r3, lr}
    switch (typography)
 800224e:	2903      	cmp	r1, #3
 8002250:	d813      	bhi.n	800227a <_ZN23ApplicationFontProvider7getFontEt+0x2e>
 8002252:	e8df f001 	tbb	[pc, r1]
 8002256:	0602      	.short	0x0602
 8002258:	0e0a      	.short	0x0e0a
    {
    case Typography::DEFAULT:
        // verdana_19_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 800225a:	f005 fc7d 	bl	8007b58 <_ZN17TypedTextDatabase8getFontsEv>
 800225e:	6800      	ldr	r0, [r0, #0]
        // verdana_12_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
    default:
        return 0;
    }
}
 8002260:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8002262:	f005 fc79 	bl	8007b58 <_ZN17TypedTextDatabase8getFontsEv>
 8002266:	6840      	ldr	r0, [r0, #4]
 8002268:	e7fa      	b.n	8002260 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 800226a:	f005 fc75 	bl	8007b58 <_ZN17TypedTextDatabase8getFontsEv>
 800226e:	6880      	ldr	r0, [r0, #8]
 8002270:	e7f6      	b.n	8002260 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 8002272:	f005 fc71 	bl	8007b58 <_ZN17TypedTextDatabase8getFontsEv>
 8002276:	68c0      	ldr	r0, [r0, #12]
 8002278:	e7f2      	b.n	8002260 <_ZN23ApplicationFontProvider7getFontEt+0x14>
    switch (typography)
 800227a:	2000      	movs	r0, #0
 800227c:	e7f0      	b.n	8002260 <_ZN23ApplicationFontProvider7getFontEt+0x14>
	...

08002280 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002280:	4800      	ldr	r0, [pc, #0]	; (8002284 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8002282:	4770      	bx	lr
 8002284:	08029ad4 	.word	0x08029ad4

08002288 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002288:	200d      	movs	r0, #13
 800228a:	4770      	bx	lr

0800228c <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 800228c:	b513      	push	{r0, r1, r4, lr}
 800228e:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8002290:	b151      	cbz	r1, 80022a8 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002292:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8002294:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8002296:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800229a:	aa01      	add	r2, sp, #4
 800229c:	689c      	ldr	r4, [r3, #8]
 800229e:	f10d 0303 	add.w	r3, sp, #3
 80022a2:	47a0      	blx	r4
        return glyph;
    }
 80022a4:	b002      	add	sp, #8
 80022a6:	bd10      	pop	{r4, pc}
            return 0;
 80022a8:	4608      	mov	r0, r1
 80022aa:	e7fb      	b.n	80022a4 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

080022ac <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 80022ac:	89c0      	ldrh	r0, [r0, #14]
 80022ae:	4770      	bx	lr

080022b0 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 80022b0:	8a00      	ldrh	r0, [r0, #16]
 80022b2:	4770      	bx	lr

080022b4 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 80022b4:	88c0      	ldrh	r0, [r0, #6]
 80022b6:	4770      	bx	lr

080022b8 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 80022b8:	8880      	ldrh	r0, [r0, #4]
 80022ba:	4770      	bx	lr

080022bc <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 80022bc:	7a80      	ldrb	r0, [r0, #10]
    }
 80022be:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 80022c2:	4770      	bx	lr

080022c4 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 80022c4:	7a80      	ldrb	r0, [r0, #10]
    }
 80022c6:	09c0      	lsrs	r0, r0, #7
 80022c8:	4770      	bx	lr

080022ca <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 80022ca:	4770      	bx	lr

080022cc <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 80022cc:	4770      	bx	lr

080022ce <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 80022ce:	4770      	bx	lr

080022d0 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 80022d0:	4770      	bx	lr

080022d2 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 80022d2:	4770      	bx	lr

080022d4 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 80022d4:	4770      	bx	lr

080022d6 <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 80022d6:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 80022d8:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 80022da:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 80022dc:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 80022de:	466d      	mov	r5, sp
 80022e0:	4601      	mov	r1, r0
 80022e2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setWidth(int16_t width)
 80022e6:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 80022e8:	4628      	mov	r0, r5
 80022ea:	4798      	blx	r3
 80022ec:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80022f0:	343c      	adds	r4, #60	; 0x3c
 80022f2:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 80022f6:	b005      	add	sp, #20
 80022f8:	bd30      	pop	{r4, r5, pc}

080022fa <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 80022fa:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 80022fc:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 80022fe:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 8002300:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8002302:	466d      	mov	r5, sp
 8002304:	4601      	mov	r1, r0
 8002306:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setHeight(int16_t height)
 800230a:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 800230c:	4628      	mov	r0, r5
 800230e:	4798      	blx	r3
 8002310:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002314:	343c      	adds	r4, #60	; 0x3c
 8002316:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 800231a:	b005      	add	sp, #20
 800231c:	bd30      	pop	{r4, r5, pc}

0800231e <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 800231e:	2200      	movs	r2, #0
 8002320:	8002      	strh	r2, [r0, #0]
 8002322:	8042      	strh	r2, [r0, #2]
 8002324:	8082      	strh	r2, [r0, #4]
 8002326:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8002328:	4770      	bx	lr

0800232a <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 800232a:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 800232e:	4770      	bx	lr

08002330 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002330:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 8002332:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002334:	4604      	mov	r4, r0
        setX(x);
 8002336:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002338:	4615      	mov	r5, r2
        setX(x);
 800233a:	4798      	blx	r3
        setBaselineY(baselineY);
 800233c:	6823      	ldr	r3, [r4, #0]
 800233e:	4629      	mov	r1, r5
 8002340:	4620      	mov	r0, r4
 8002342:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 8002344:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 8002348:	4718      	bx	r3

0800234a <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 800234a:	2000      	movs	r0, #0
 800234c:	4770      	bx	lr

0800234e <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 800234e:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8002350:	4770      	bx	lr

08002352 <_ZN19CalibrationViewBase11setupScreenEv>:
}

void CalibrationViewBase::setupScreen()
{

}
 8002352:	4770      	bx	lr

08002354 <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type, typename T1>
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002354:	4770      	bx	lr

08002356 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 8002356:	4770      	bx	lr

08002358 <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
     *
     * @param  t1 This value will be passed as the first argument in the function call.
     *
     * @see isValid
     */
    virtual void execute(T1 t1)
 8002358:	b430      	push	{r4, r5}
    {
        (pobject->*pmemfun)(t1);
 800235a:	68c2      	ldr	r2, [r0, #12]
 800235c:	6844      	ldr	r4, [r0, #4]
 800235e:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002360:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002362:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002366:	07d2      	lsls	r2, r2, #31
 8002368:	bf48      	it	mi
 800236a:	5962      	ldrmi	r2, [r4, r5]
 800236c:	689b      	ldr	r3, [r3, #8]
    }
 800236e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002370:	bf48      	it	mi
 8002372:	58d3      	ldrmi	r3, [r2, r3]
 8002374:	4718      	bx	r3

08002376 <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
     *
     * @return true if valid, false if not.
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8002376:	6843      	ldr	r3, [r0, #4]
 8002378:	b12b      	cbz	r3, 8002386 <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800237a:	6883      	ldr	r3, [r0, #8]
 800237c:	b92b      	cbnz	r3, 800238a <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800237e:	68c0      	ldr	r0, [r0, #12]
 8002380:	f000 0001 	and.w	r0, r0, #1
 8002384:	4770      	bx	lr
 8002386:	4618      	mov	r0, r3
 8002388:	4770      	bx	lr
 800238a:	2001      	movs	r0, #1
    }
 800238c:	4770      	bx	lr

0800238e <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 800238e:	b510      	push	{r4, lr}
    }
 8002390:	2108      	movs	r1, #8
    virtual ~TypedText()
 8002392:	4604      	mov	r4, r0
    }
 8002394:	f025 f8f3 	bl	802757e <_ZdlPvj>
 8002398:	4620      	mov	r0, r4
 800239a:	bd10      	pop	{r4, pc}

0800239c <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 800239c:	b510      	push	{r4, lr}
 800239e:	214c      	movs	r1, #76	; 0x4c
 80023a0:	4604      	mov	r4, r0
 80023a2:	f025 f8ec 	bl	802757e <_ZdlPvj>
 80023a6:	4620      	mov	r0, r4
 80023a8:	bd10      	pop	{r4, pc}

080023aa <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80023aa:	b510      	push	{r4, lr}
 80023ac:	2110      	movs	r1, #16
 80023ae:	4604      	mov	r4, r0
 80023b0:	f025 f8e5 	bl	802757e <_ZdlPvj>
 80023b4:	4620      	mov	r0, r4
 80023b6:	bd10      	pop	{r4, pc}

080023b8 <_ZN19CalibrationViewBaseD1Ev>:
CalibrationViewBase::~CalibrationViewBase()
 80023b8:	b510      	push	{r4, lr}
 80023ba:	4b03      	ldr	r3, [pc, #12]	; (80023c8 <_ZN19CalibrationViewBaseD1Ev+0x10>)
 80023bc:	6003      	str	r3, [r0, #0]
 80023be:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80023c0:	f010 fe7c 	bl	80130bc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80023c4:	4620      	mov	r0, r4
 80023c6:	bd10      	pop	{r4, pc}
 80023c8:	08029e40 	.word	0x08029e40

080023cc <_ZN19CalibrationViewBaseD0Ev>:
CalibrationViewBase::~CalibrationViewBase()
 80023cc:	b507      	push	{r0, r1, r2, lr}
 80023ce:	4b07      	ldr	r3, [pc, #28]	; (80023ec <_ZN19CalibrationViewBaseD0Ev+0x20>)
 80023d0:	6003      	str	r3, [r0, #0]
 80023d2:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80023d4:	f010 fe72 	bl	80130bc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80023d8:	9801      	ldr	r0, [sp, #4]
 80023da:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80023de:	f025 f8ce 	bl	802757e <_ZdlPvj>
 80023e2:	9801      	ldr	r0, [sp, #4]
 80023e4:	b003      	add	sp, #12
 80023e6:	f85d fb04 	ldr.w	pc, [sp], #4
 80023ea:	bf00      	nop
 80023ec:	08029e40 	.word	0x08029e40

080023f0 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
    virtual void invalidateContent() const
 80023f0:	b508      	push	{r3, lr}
        Widget::invalidateContent();
 80023f2:	f7fe ff3f 	bl	8001274 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 80023f6:	bd08      	pop	{r3, pc}

080023f8 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80023f8:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 80023fa:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80023fc:	6b5e      	ldr	r6, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80023fe:	4b12      	ldr	r3, [pc, #72]	; (8002448 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 8002400:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 8002402:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002404:	b28d      	uxth	r5, r1
 8002406:	b92b      	cbnz	r3, 8002414 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 8002408:	4b10      	ldr	r3, [pc, #64]	; (800244c <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 800240a:	4a11      	ldr	r2, [pc, #68]	; (8002450 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 800240c:	216c      	movs	r1, #108	; 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800240e:	4811      	ldr	r0, [pc, #68]	; (8002454 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 8002410:	f025 fea6 	bl	8028160 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8002414:	4910      	ldr	r1, [pc, #64]	; (8002458 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 8002416:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002418:	8809      	ldrh	r1, [r1, #0]
 800241a:	4291      	cmp	r1, r2
 800241c:	d803      	bhi.n	8002426 <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 800241e:	4b0f      	ldr	r3, [pc, #60]	; (800245c <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 8002420:	4a0b      	ldr	r2, [pc, #44]	; (8002450 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8002422:	216d      	movs	r1, #109	; 0x6d
 8002424:	e7f3      	b.n	800240e <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002426:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800242a:	4b0d      	ldr	r3, [pc, #52]	; (8002460 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 800242c:	681b      	ldr	r3, [r3, #0]
 800242e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8002432:	6803      	ldr	r3, [r0, #0]
 8002434:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002436:	4798      	blx	r3
 8002438:	1a28      	subs	r0, r5, r0
 800243a:	b201      	sxth	r1, r0
 800243c:	4633      	mov	r3, r6
 800243e:	4620      	mov	r0, r4
    }
 8002440:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002444:	4718      	bx	r3
 8002446:	bf00      	nop
 8002448:	20013814 	.word	0x20013814
 800244c:	08029bd8 	.word	0x08029bd8
 8002450:	08029c1a 	.word	0x08029c1a
 8002454:	08029c55 	.word	0x08029c55
 8002458:	20013818 	.word	0x20013818
 800245c:	08029c9c 	.word	0x08029c9c
 8002460:	2001381c 	.word	0x2001381c

08002464 <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void CalibrationViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8002464:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8002466:	f500 7310 	add.w	r3, r0, #576	; 0x240
 800246a:	4299      	cmp	r1, r3
{
 800246c:	4604      	mov	r4, r0
 800246e:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8002470:	d103      	bne.n	800247a <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~CalibrationViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002472:	f012 fb25 	bl	8014ac0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
 8002476:	f001 f921 	bl	80036bc <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 800247a:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 800247e:	429d      	cmp	r5, r3
 8002480:	d103      	bne.n	800248a <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8002482:	f012 fb1d 	bl	8014ac0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Calibration_Pad
        //Go to Calibration_Pad with screen transition towards East
        application().gotoCalibration_PadScreenWipeTransitionEast();
 8002486:	f001 f9d9 	bl	800383c <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 800248a:	f504 7422 	add.w	r4, r4, #648	; 0x288
 800248e:	42a5      	cmp	r5, r4
 8002490:	d105      	bne.n	800249e <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8002492:	f012 fb15 	bl	8014ac0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Calibration_Hall
        //Go to Calibration_Hall with screen transition towards East
        application().gotoCalibration_HallScreenWipeTransitionEast();
    }
}
 8002496:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoCalibration_HallScreenWipeTransitionEast();
 800249a:	f001 b9df 	b.w	800385c <_ZN23FrontendApplicationBase44gotoCalibration_HallScreenWipeTransitionEastEv>
}
 800249e:	bd38      	pop	{r3, r4, r5, pc}

080024a0 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 80024a0:	2200      	movs	r2, #0
 80024a2:	f04f 31ff 	mov.w	r1, #4294967295
 80024a6:	e9c0 2100 	strd	r2, r1, [r0]
              text(0)
 80024aa:	6082      	str	r2, [r0, #8]
    }
 80024ac:	4770      	bx	lr

080024ae <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 80024ae:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 80024b0:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 80024b2:	4604      	mov	r4, r0
        setX(x);
 80024b4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 80024b6:	4615      	mov	r5, r2
        setX(x);
 80024b8:	4798      	blx	r3
        setY(y);
 80024ba:	6823      	ldr	r3, [r4, #0]
 80024bc:	4629      	mov	r1, r5
 80024be:	4620      	mov	r0, r4
 80024c0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 80024c2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 80024c6:	4718      	bx	r3

080024c8 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 80024c8:	b570      	push	{r4, r5, r6, lr}
 80024ca:	4604      	mov	r4, r0
 80024cc:	461d      	mov	r5, r3
 80024ce:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 80024d2:	f7ff ffec 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 80024d6:	6823      	ldr	r3, [r4, #0]
 80024d8:	4629      	mov	r1, r5
 80024da:	4620      	mov	r0, r4
 80024dc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80024de:	4798      	blx	r3
        setHeight(height);
 80024e0:	6823      	ldr	r3, [r4, #0]
 80024e2:	4631      	mov	r1, r6
 80024e4:	4620      	mov	r0, r4
 80024e6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 80024e8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 80024ec:	4718      	bx	r3
	...

080024f0 <_ZN8touchgfx6WidgetC1Ev>:
 80024f0:	2200      	movs	r2, #0
 80024f2:	e9c0 2201 	strd	r2, r2, [r0, #4]
 80024f6:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 80024fa:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 80024fe:	e9c0 2207 	strd	r2, r2, [r0, #28]
          touchable(false),
 8002502:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002506:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 8002508:	4a01      	ldr	r2, [pc, #4]	; (8002510 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 800250a:	6002      	str	r2, [r0, #0]
 800250c:	4770      	bx	lr
 800250e:	bf00      	nop
 8002510:	08029d20 	.word	0x08029d20

08002514 <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 8002514:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002516:	2226      	movs	r2, #38	; 0x26
    TextArea()
 8002518:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 800251a:	2100      	movs	r1, #0
 800251c:	f026 f825 	bl	802856a <memset>
 8002520:	4620      	mov	r0, r4
 8002522:	f7ff ffe5 	bl	80024f0 <_ZN8touchgfx6WidgetC1Ev>
 8002526:	4b0a      	ldr	r3, [pc, #40]	; (8002550 <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 8002528:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 800252a:	4b0a      	ldr	r3, [pc, #40]	; (8002554 <_ZN8touchgfx8TextAreaC1Ev+0x40>)
 800252c:	62a3      	str	r3, [r4, #40]	; 0x28
 800252e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002532:	85a3      	strh	r3, [r4, #44]	; 0x2c
 8002534:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 8002538:	2300      	movs	r3, #0
 800253a:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 800253e:	f04f 32ff 	mov.w	r2, #4294967295
              text(0)
 8002542:	e9c4 2310 	strd	r2, r3, [r4, #64]	; 0x40
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002546:	8723      	strh	r3, [r4, #56]	; 0x38
 8002548:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
 800254a:	4620      	mov	r0, r4
 800254c:	bd10      	pop	{r4, pc}
 800254e:	bf00      	nop
 8002550:	0802c640 	.word	0x0802c640
 8002554:	08029d88 	.word	0x08029d88

08002558 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId < numberOfTypedTexts;
 8002558:	4b1a      	ldr	r3, [pc, #104]	; (80025c4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x6c>)
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 800255a:	b573      	push	{r0, r1, r4, r5, r6, lr}
    {
        if (typedText.hasValidId())
 800255c:	881b      	ldrh	r3, [r3, #0]
 800255e:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8002560:	428b      	cmp	r3, r1
    void updateTextPosition()
 8002562:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 8002564:	d92b      	bls.n	80025be <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x66>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002566:	4b18      	ldr	r3, [pc, #96]	; (80025c8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
 8002568:	681b      	ldr	r3, [r3, #0]
 800256a:	b92b      	cbnz	r3, 8002578 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 800256c:	4b17      	ldr	r3, [pc, #92]	; (80025cc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 800256e:	4a18      	ldr	r2, [pc, #96]	; (80025d0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 8002570:	4818      	ldr	r0, [pc, #96]	; (80025d4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 8002572:	216c      	movs	r1, #108	; 0x6c
 8002574:	f025 fdf4 	bl	8028160 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002578:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800257c:	4b16      	ldr	r3, [pc, #88]	; (80025d8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 800257e:	681b      	ldr	r3, [r3, #0]
 8002580:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 8002584:	4b15      	ldr	r3, [pc, #84]	; (80025dc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 8002586:	6818      	ldr	r0, [r3, #0]
 8002588:	f005 fad6 	bl	8007b38 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 800258c:	682b      	ldr	r3, [r5, #0]
 800258e:	9001      	str	r0, [sp, #4]
 8002590:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002592:	4628      	mov	r0, r5
 8002594:	4798      	blx	r3
 8002596:	682b      	ldr	r3, [r5, #0]
 8002598:	9901      	ldr	r1, [sp, #4]
 800259a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800259c:	4604      	mov	r4, r0
 800259e:	4628      	mov	r0, r5
 80025a0:	4798      	blx	r3
 80025a2:	682b      	ldr	r3, [r5, #0]
 80025a4:	9901      	ldr	r1, [sp, #4]
 80025a6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80025a8:	fb14 f400 	smulbb	r4, r4, r0
 80025ac:	4628      	mov	r0, r5
 80025ae:	4798      	blx	r3
 80025b0:	b2a4      	uxth	r4, r4
 80025b2:	1823      	adds	r3, r4, r0
 80025b4:	b21b      	sxth	r3, r3
 80025b6:	f8a6 3046 	strh.w	r3, [r6, #70]	; 0x46
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 80025ba:	b002      	add	sp, #8
 80025bc:	bd70      	pop	{r4, r5, r6, pc}
 80025be:	2300      	movs	r3, #0
 80025c0:	e7f9      	b.n	80025b6 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x5e>
 80025c2:	bf00      	nop
 80025c4:	20013818 	.word	0x20013818
 80025c8:	20013814 	.word	0x20013814
 80025cc:	08029bd8 	.word	0x08029bd8
 80025d0:	08029c1a 	.word	0x08029c1a
 80025d4:	08029c55 	.word	0x08029c55
 80025d8:	2001381c 	.word	0x2001381c
 80025dc:	20013820 	.word	0x20013820

080025e0 <_ZN19CalibrationViewBaseC1Ev>:
CalibrationViewBase::CalibrationViewBase() :
 80025e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80025e4:	ed2d 8b06 	vpush	{d8-d10}
 80025e8:	4604      	mov	r4, r0
 80025ea:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &CalibrationViewBase::buttonCallbackHandler)
 80025ec:	46a3      	mov	fp, r4
template <class T>
class View : public Screen
{
public:
    View()
        : presenter(0)
 80025ee:	2500      	movs	r5, #0
 80025f0:	f013 fee6 	bl	80163c0 <_ZN8touchgfx6ScreenC1Ev>
 80025f4:	4b66      	ldr	r3, [pc, #408]	; (8002790 <_ZN19CalibrationViewBaseC1Ev+0x1b0>)
 80025f6:	63e5      	str	r5, [r4, #60]	; 0x3c
 80025f8:	f84b 3b40 	str.w	r3, [fp], #64
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 80025fc:	2226      	movs	r2, #38	; 0x26
 80025fe:	4629      	mov	r1, r5
 8002600:	4658      	mov	r0, fp
 8002602:	f025 ffb2 	bl	802856a <memset>
 8002606:	4658      	mov	r0, fp
 8002608:	f7ff ff72 	bl	80024f0 <_ZN8touchgfx6WidgetC1Ev>
 800260c:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8002610:	26ff      	movs	r6, #255	; 0xff
 8002612:	4b60      	ldr	r3, [pc, #384]	; (8002794 <_ZN19CalibrationViewBaseC1Ev+0x1b4>)
 8002614:	6423      	str	r3, [r4, #64]	; 0x40
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), bitmap(bmp), alpha(255)
 8002616:	2226      	movs	r2, #38	; 0x26
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8002618:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800261c:	4629      	mov	r1, r5
 800261e:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8002622:	4650      	mov	r0, sl
        : color(col)
 8002624:	66a5      	str	r5, [r4, #104]	; 0x68
 8002626:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800262a:	f025 ff9e 	bl	802856a <memset>
 800262e:	4650      	mov	r0, sl
 8002630:	f7ff ff5e 	bl	80024f0 <_ZN8touchgfx6WidgetC1Ev>
 8002634:	4b58      	ldr	r3, [pc, #352]	; (8002798 <_ZN19CalibrationViewBaseC1Ev+0x1b8>)
 8002636:	66e3      	str	r3, [r4, #108]	; 0x6c
 8002638:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 800263c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
    {
        Image::setBitmap(bmp);
 8002640:	a90a      	add	r1, sp, #40	; 0x28
 8002642:	4650      	mov	r0, sl
 8002644:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8002648:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 800264c:	f00f fd2f 	bl	80120ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8002650:	4648      	mov	r0, r9
 8002652:	f7ff ff5f 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 8002656:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 800265a:	4b50      	ldr	r3, [pc, #320]	; (800279c <_ZN19CalibrationViewBaseC1Ev+0x1bc>)
 800265c:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8002660:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8002664:	4638      	mov	r0, r7
 8002666:	f00e fbeb 	bl	8010e40 <_ZN8touchgfx4LineC1Ev>
 800266a:	f504 73aa 	add.w	r3, r4, #340	; 0x154
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800266e:	4618      	mov	r0, r3
 8002670:	9303      	str	r3, [sp, #12]
 8002672:	f7fe fe25 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8002676:	4b4a      	ldr	r3, [pc, #296]	; (80027a0 <_ZN19CalibrationViewBaseC1Ev+0x1c0>)
 8002678:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 800267c:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 8002680:	3324      	adds	r3, #36	; 0x24
 8002682:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 8002686:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 800268a:	4640      	mov	r0, r8
 800268c:	f7ff ff42 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 8002690:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 8002694:	4618      	mov	r0, r3
 8002696:	ee08 3a10 	vmov	s16, r3
 800269a:	f7ff ff3b 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 800269e:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 80026a2:	4618      	mov	r0, r3
 80026a4:	ee08 3a90 	vmov	s17, r3
 80026a8:	f7ff ff34 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 80026ac:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80026b0:	4618      	mov	r0, r3
 80026b2:	ee09 3a10 	vmov	s18, r3
 80026b6:	f00f fe3b 	bl	8012330 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80026ba:	f504 7322 	add.w	r3, r4, #648	; 0x288
 80026be:	4618      	mov	r0, r3
 80026c0:	ee09 3a90 	vmov	s19, r3
 80026c4:	f00f fe34 	bl	8012330 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80026c8:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80026cc:	4618      	mov	r0, r3
 80026ce:	ee0a 3a10 	vmov	s20, r3
 80026d2:	f00f fe2d 	bl	8012330 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80026d6:	4a33      	ldr	r2, [pc, #204]	; (80027a4 <_ZN19CalibrationViewBaseC1Ev+0x1c4>)
 80026d8:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80026dc:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 80026e0:	4a31      	ldr	r2, [pc, #196]	; (80027a8 <_ZN19CalibrationViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80026e2:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80026e6:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 80026ea:	f504 7048 	add.w	r0, r4, #800	; 0x320
 80026ee:	f010 fcdb 	bl	80130a8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80026f2:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80026f6:	462a      	mov	r2, r5
 80026f8:	4658      	mov	r0, fp
 80026fa:	9300      	str	r3, [sp, #0]
 80026fc:	4629      	mov	r1, r5
 80026fe:	23f0      	movs	r3, #240	; 0xf0
 8002700:	f7ff fee2 	bl	80024c8 <_ZN8touchgfx8Drawable11setPositionEssss>
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8002704:	1d26      	adds	r6, r4, #4
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 8002706:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800270a:	66a3      	str	r3, [r4, #104]	; 0x68
 800270c:	4659      	mov	r1, fp
 800270e:	4630      	mov	r0, r6
 8002710:	f00c ff3e 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8002714:	462a      	mov	r2, r5
 8002716:	4650      	mov	r0, sl
 8002718:	4629      	mov	r1, r5
 800271a:	f7ff fec8 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 800271e:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8002720:	4650      	mov	r0, sl
 8002722:	a90a      	add	r1, sp, #40	; 0x28
 8002724:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002728:	f00f fcc1 	bl	80120ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800272c:	4651      	mov	r1, sl
 800272e:	4630      	mov	r0, r6
 8002730:	f00c ff2e 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(89, 308);
 8002734:	f44f 729a 	mov.w	r2, #308	; 0x134
 8002738:	2159      	movs	r1, #89	; 0x59
 800273a:	4648      	mov	r0, r9
 800273c:	f7ff feb7 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8002740:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8002744:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8002748:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 800274c:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8002750:	4650      	mov	r0, sl
 8002752:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8002756:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 800275a:	4649      	mov	r1, r9
 800275c:	4798      	blx	r3
 800275e:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8002762:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8002766:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800276a:	4b10      	ldr	r3, [pc, #64]	; (80027ac <_ZN19CalibrationViewBaseC1Ev+0x1cc>)
 800276c:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_I8KB).getText());
 800276e:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8002772:	b92b      	cbnz	r3, 8002780 <_ZN19CalibrationViewBaseC1Ev+0x1a0>
 8002774:	4b0e      	ldr	r3, [pc, #56]	; (80027b0 <_ZN19CalibrationViewBaseC1Ev+0x1d0>)
 8002776:	4a0f      	ldr	r2, [pc, #60]	; (80027b4 <_ZN19CalibrationViewBaseC1Ev+0x1d4>)
 8002778:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800277a:	480f      	ldr	r0, [pc, #60]	; (80027b8 <_ZN19CalibrationViewBaseC1Ev+0x1d8>)
 800277c:	f025 fcf0 	bl	8028160 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8002780:	4b0e      	ldr	r3, [pc, #56]	; (80027bc <_ZN19CalibrationViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002782:	881b      	ldrh	r3, [r3, #0]
 8002784:	2b0b      	cmp	r3, #11
 8002786:	d81d      	bhi.n	80027c4 <_ZN19CalibrationViewBaseC1Ev+0x1e4>
 8002788:	4b0d      	ldr	r3, [pc, #52]	; (80027c0 <_ZN19CalibrationViewBaseC1Ev+0x1e0>)
 800278a:	4a0a      	ldr	r2, [pc, #40]	; (80027b4 <_ZN19CalibrationViewBaseC1Ev+0x1d4>)
 800278c:	2161      	movs	r1, #97	; 0x61
 800278e:	e7f4      	b.n	800277a <_ZN19CalibrationViewBaseC1Ev+0x19a>
 8002790:	08029e40 	.word	0x08029e40
 8002794:	0802c6d0 	.word	0x0802c6d0
 8002798:	0802c898 	.word	0x0802c898
 800279c:	08029d98 	.word	0x08029d98
 80027a0:	0802c404 	.word	0x0802c404
 80027a4:	08029e28 	.word	0x08029e28
 80027a8:	08002465 	.word	0x08002465
 80027ac:	20013814 	.word	0x20013814
 80027b0:	08029bd8 	.word	0x08029bd8
 80027b4:	08029cda 	.word	0x08029cda
 80027b8:	08029c55 	.word	0x08029c55
 80027bc:	20013818 	.word	0x20013818
 80027c0:	08029c9c 	.word	0x08029c9c
        return texts->getText(typedTextId);
 80027c4:	4b93      	ldr	r3, [pc, #588]	; (8002a14 <_ZN19CalibrationViewBaseC1Ev+0x434>)
 80027c6:	210b      	movs	r1, #11
 80027c8:	6818      	ldr	r0, [r3, #0]
 80027ca:	f005 f9b5 	bl	8007b38 <_ZNK8touchgfx5Texts7getTextEt>
 80027ce:	4a92      	ldr	r2, [pc, #584]	; (8002a18 <_ZN19CalibrationViewBaseC1Ev+0x438>)
 80027d0:	4603      	mov	r3, r0
 80027d2:	2104      	movs	r1, #4
 80027d4:	4650      	mov	r0, sl
 80027d6:	f015 fad7 	bl	8017d88 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 80027da:	4648      	mov	r0, r9
        wc1 = value;
 80027dc:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 80027e0:	f00f f86a 	bl	80118b8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80027e4:	4b8d      	ldr	r3, [pc, #564]	; (8002a1c <_ZN19CalibrationViewBaseC1Ev+0x43c>)
 80027e6:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RBVT));
 80027e8:	a90a      	add	r1, sp, #40	; 0x28
 80027ea:	230c      	movs	r3, #12
 80027ec:	4648      	mov	r0, r9
 80027ee:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80027f2:	f00f f881 	bl	80118f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80027f6:	4649      	mov	r1, r9
 80027f8:	4630      	mov	r0, r6
 80027fa:	f00c fec9 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80027fe:	230a      	movs	r3, #10
 8002800:	9300      	str	r3, [sp, #0]
 8002802:	2232      	movs	r2, #50	; 0x32
 8002804:	23f0      	movs	r3, #240	; 0xf0
 8002806:	4629      	mov	r1, r5
 8002808:	4638      	mov	r0, r7
 800280a:	f7ff fe5d 	bl	80024c8 <_ZN8touchgfx8Drawable11setPositionEssss>
        canvasPainter = &painter;
 800280e:	9b03      	ldr	r3, [sp, #12]
 8002810:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setStart(T x, T y)
    {
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8002814:	22a0      	movs	r2, #160	; 0xa0
 8002816:	4611      	mov	r1, r2
 8002818:	4638      	mov	r0, r7
 800281a:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 800281e:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8002822:	f00e fc23 	bl	801106c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setEnd(T x, T y)
    {
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8002826:	22a0      	movs	r2, #160	; 0xa0
 8002828:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800282c:	4638      	mov	r0, r7
 800282e:	f00e fc28 	bl	8011082 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
     *
     * @note The area containing the Line is not invalidated.
     */
    void setLineWidth(CWRUtil::Q5 widthQ5)
    {
        if (lineWidthQ5 == widthQ5)
 8002832:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8002836:	2b20      	cmp	r3, #32
 8002838:	d005      	beq.n	8002846 <_ZN19CalibrationViewBaseC1Ev+0x266>
        {
            return;
        }

        lineWidthQ5 = widthQ5;
 800283a:	2320      	movs	r3, #32
 800283c:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120

        updateCachedShape();
 8002840:	4638      	mov	r0, r7
 8002842:	f00e fb1d 	bl	8010e80 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8002846:	4638      	mov	r0, r7
 8002848:	2101      	movs	r1, #1
 800284a:	f00e fc25 	bl	8011098 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800284e:	4639      	mov	r1, r7
 8002850:	4630      	mov	r0, r6
 8002852:	ad04      	add	r5, sp, #16
        color = newColor;
 8002854:	f04f 37ff 	mov.w	r7, #4294967295
 8002858:	f00c fe9a 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 800285c:	f04f 0a00 	mov.w	sl, #0
    textArea3.setXY(70, 60);
 8002860:	223c      	movs	r2, #60	; 0x3c
 8002862:	4640      	mov	r0, r8
 8002864:	2146      	movs	r1, #70	; 0x46
 8002866:	f7ff fe22 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800286a:	4641      	mov	r1, r8
 800286c:	4628      	mov	r0, r5
        color = newColor;
 800286e:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 8002872:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 8002876:	f00e fda5 	bl	80113c4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800287a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800287e:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8002882:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002886:	f8df 9194 	ldr.w	r9, [pc, #404]	; 8002a1c <_ZN19CalibrationViewBaseC1Ev+0x43c>
 800288a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800288e:	2304      	movs	r3, #4
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_05WF));
 8002890:	a90a      	add	r1, sp, #40	; 0x28
 8002892:	4640      	mov	r0, r8
 8002894:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002898:	f00f f82e 	bl	80118f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800289c:	4641      	mov	r1, r8
 800289e:	4630      	mov	r0, r6
 80028a0:	f00c fe76 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 35);
 80028a4:	ee18 0a10 	vmov	r0, s16
 80028a8:	2223      	movs	r2, #35	; 0x23
 80028aa:	2145      	movs	r1, #69	; 0x45
 80028ac:	f7ff fdff 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 80028b0:	ee18 1a10 	vmov	r1, s16
 80028b4:	4628      	mov	r0, r5
        color = newColor;
 80028b6:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 80028ba:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 80028be:	f00e fd81 	bl	80113c4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80028c2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80028c6:	ee18 3a10 	vmov	r3, s16
 80028ca:	333c      	adds	r3, #60	; 0x3c
 80028cc:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80028d0:	2341      	movs	r3, #65	; 0x41
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y01G));
 80028d2:	ee18 0a10 	vmov	r0, s16
 80028d6:	a90a      	add	r1, sp, #40	; 0x28
 80028d8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80028dc:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80028e0:	f00f f80a 	bl	80118f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80028e4:	ee18 1a10 	vmov	r1, s16
 80028e8:	4630      	mov	r0, r6
 80028ea:	f00c fe51 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80028ee:	ee18 0a90 	vmov	r0, s17
 80028f2:	220c      	movs	r2, #12
 80028f4:	2136      	movs	r1, #54	; 0x36
 80028f6:	f7ff fdda 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 80028fa:	ee18 1a90 	vmov	r1, s17
 80028fe:	4628      	mov	r0, r5
        color = newColor;
 8002900:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8002904:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8002908:	f00e fd5c 	bl	80113c4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800290c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002910:	ee18 3a90 	vmov	r3, s17
 8002914:	333c      	adds	r3, #60	; 0x3c
 8002916:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800291a:	2340      	movs	r3, #64	; 0x40
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2ABZ));
 800291c:	ee18 0a90 	vmov	r0, s17
 8002920:	a90a      	add	r1, sp, #40	; 0x28
 8002922:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002926:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800292a:	f00e ffe5 	bl	80118f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800292e:	ee18 1a90 	vmov	r1, s17
 8002932:	4630      	mov	r0, r6
 8002934:	f00c fe2c 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8002938:	ee19 0a10 	vmov	r0, s18
 800293c:	22f0      	movs	r2, #240	; 0xf0
 800293e:	2121      	movs	r1, #33	; 0x21
 8002940:	f7ff fdb5 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8002944:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002948:	aa0a      	add	r2, sp, #40	; 0x28
 800294a:	f04f 0802 	mov.w	r8, #2
 800294e:	a909      	add	r1, sp, #36	; 0x24
 8002950:	ee19 0a10 	vmov	r0, s18
 8002954:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8002958:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 800295c:	f504 5589 	add.w	r5, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002960:	f00f f9af 	bl	8011cc2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8002964:	233f      	movs	r3, #63	; 0x3f
 8002966:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 800296a:	3510      	adds	r5, #16
        updateTextPosition();
 800296c:	ee19 0a10 	vmov	r0, s18
 8002970:	f7ff fdf2 	bl	8002558 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8002974:	ee19 1a10 	vmov	r1, s18
 8002978:	4630      	mov	r0, r6
        colorPressed = col;
 800297a:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 800297e:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 8002982:	f00c fe05 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8002986:	ee19 0a90 	vmov	r0, s19
 800298a:	22aa      	movs	r2, #170	; 0xaa
 800298c:	2121      	movs	r1, #33	; 0x21
 800298e:	f7ff fd8e 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002992:	aa0a      	add	r2, sp, #40	; 0x28
 8002994:	a909      	add	r1, sp, #36	; 0x24
 8002996:	ee19 0a90 	vmov	r0, s19
 800299a:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 800299e:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 80029a2:	f00f f98e 	bl	8011cc2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80029a6:	233e      	movs	r3, #62	; 0x3e
 80029a8:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 80029ac:	ee19 0a90 	vmov	r0, s19
 80029b0:	f7ff fdd2 	bl	8002558 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80029b4:	ee19 1a90 	vmov	r1, s19
 80029b8:	4630      	mov	r0, r6
        colorPressed = col;
 80029ba:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 80029be:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 80029c2:	f00c fde5 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 80029c6:	ee1a 0a10 	vmov	r0, s20
 80029ca:	2264      	movs	r2, #100	; 0x64
 80029cc:	2121      	movs	r1, #33	; 0x21
 80029ce:	f7ff fd6e 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80029d2:	aa0a      	add	r2, sp, #40	; 0x28
 80029d4:	a909      	add	r1, sp, #36	; 0x24
 80029d6:	ee1a 0a10 	vmov	r0, s20
 80029da:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 80029de:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 80029e2:	f00f f96e 	bl	8011cc2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80029e6:	233d      	movs	r3, #61	; 0x3d
        updateTextPosition();
 80029e8:	ee1a 0a10 	vmov	r0, s20
 80029ec:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 80029f0:	f7ff fdb2 	bl	8002558 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80029f4:	4630      	mov	r0, r6
        colorPressed = col;
 80029f6:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 80029fa:	ee1a 1a10 	vmov	r1, s20
 80029fe:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 8002a02:	f00c fdc5 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002a06:	4620      	mov	r0, r4
 8002a08:	b00d      	add	sp, #52	; 0x34
 8002a0a:	ecbd 8b06 	vpop	{d8-d10}
 8002a0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002a12:	bf00      	nop
 8002a14:	20013820 	.word	0x20013820
 8002a18:	08029d12 	.word	0x08029d12
 8002a1c:	08029d88 	.word	0x08029d88

08002a20 <_ZN24Calibration_HallViewBase11setupScreenEv>:
}

void Calibration_HallViewBase::setupScreen()
{

}
 8002a20:	4770      	bx	lr

08002a22 <_ZN8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002a22:	4770      	bx	lr

08002a24 <_ZN8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002a24:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002a26:	68c2      	ldr	r2, [r0, #12]
 8002a28:	6844      	ldr	r4, [r0, #4]
 8002a2a:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002a2c:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002a2e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002a32:	07d2      	lsls	r2, r2, #31
 8002a34:	bf48      	it	mi
 8002a36:	5962      	ldrmi	r2, [r4, r5]
 8002a38:	689b      	ldr	r3, [r3, #8]
    }
 8002a3a:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002a3c:	bf48      	it	mi
 8002a3e:	58d3      	ldrmi	r3, [r2, r3]
 8002a40:	4718      	bx	r3

08002a42 <_ZNK8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8002a42:	6843      	ldr	r3, [r0, #4]
 8002a44:	b12b      	cbz	r3, 8002a52 <_ZNK8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8002a46:	6883      	ldr	r3, [r0, #8]
 8002a48:	b92b      	cbnz	r3, 8002a56 <_ZNK8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002a4a:	68c0      	ldr	r0, [r0, #12]
 8002a4c:	f000 0001 	and.w	r0, r0, #1
 8002a50:	4770      	bx	lr
 8002a52:	4618      	mov	r0, r3
 8002a54:	4770      	bx	lr
 8002a56:	2001      	movs	r0, #1
    }
 8002a58:	4770      	bx	lr

08002a5a <_ZN8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002a5a:	b510      	push	{r4, lr}
 8002a5c:	2110      	movs	r1, #16
 8002a5e:	4604      	mov	r4, r0
 8002a60:	f024 fd8d 	bl	802757e <_ZdlPvj>
 8002a64:	4620      	mov	r0, r4
 8002a66:	bd10      	pop	{r4, pc}

08002a68 <_ZN24Calibration_HallViewBaseD1Ev>:
Calibration_HallViewBase::~Calibration_HallViewBase()
 8002a68:	b510      	push	{r4, lr}
 8002a6a:	4b03      	ldr	r3, [pc, #12]	; (8002a78 <_ZN24Calibration_HallViewBaseD1Ev+0x10>)
 8002a6c:	6003      	str	r3, [r0, #0]
 8002a6e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002a70:	f010 fb24 	bl	80130bc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002a74:	4620      	mov	r0, r4
 8002a76:	bd10      	pop	{r4, pc}
 8002a78:	08029e8c 	.word	0x08029e8c

08002a7c <_ZN24Calibration_HallViewBaseD0Ev>:
Calibration_HallViewBase::~Calibration_HallViewBase()
 8002a7c:	b507      	push	{r0, r1, r2, lr}
 8002a7e:	4b07      	ldr	r3, [pc, #28]	; (8002a9c <_ZN24Calibration_HallViewBaseD0Ev+0x20>)
 8002a80:	6003      	str	r3, [r0, #0]
 8002a82:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002a84:	f010 fb1a 	bl	80130bc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002a88:	9801      	ldr	r0, [sp, #4]
 8002a8a:	f241 015c 	movw	r1, #4188	; 0x105c
 8002a8e:	f024 fd76 	bl	802757e <_ZdlPvj>
 8002a92:	9801      	ldr	r0, [sp, #4]
 8002a94:	b003      	add	sp, #12
 8002a96:	f85d fb04 	ldr.w	pc, [sp], #4
 8002a9a:	bf00      	nop
 8002a9c:	08029e8c 	.word	0x08029e8c

08002aa0 <_ZN24Calibration_HallViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Calibration_HallViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8002aa0:	3098      	adds	r0, #152	; 0x98
 8002aa2:	4288      	cmp	r0, r1
{
 8002aa4:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8002aa6:	d105      	bne.n	8002ab4 <_ZN24Calibration_HallViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Calibration_HallViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002aa8:	f012 f80a 	bl	8014ac0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Calibration
        //Go to Calibration with screen transition towards West
        application().gotoCalibrationScreenWipeTransitionWest();
    }
}
 8002aac:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoCalibrationScreenWipeTransitionWest();
 8002ab0:	f000 beb4 	b.w	800381c <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv>
}
 8002ab4:	bd08      	pop	{r3, pc}
	...

08002ab8 <_ZN24Calibration_HallViewBaseC1Ev>:
Calibration_HallViewBase::Calibration_HallViewBase() :
 8002ab8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002abc:	ed2d 8b02 	vpush	{d8}
 8002ac0:	4604      	mov	r4, r0
 8002ac2:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Calibration_HallViewBase::buttonCallbackHandler)
 8002ac4:	46a1      	mov	r9, r4
 8002ac6:	2500      	movs	r5, #0
 8002ac8:	f013 fc7a 	bl	80163c0 <_ZN8touchgfx6ScreenC1Ev>
 8002acc:	4ba5      	ldr	r3, [pc, #660]	; (8002d64 <_ZN24Calibration_HallViewBaseC1Ev+0x2ac>)
 8002ace:	63e5      	str	r5, [r4, #60]	; 0x3c
 8002ad0:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8002ad4:	2226      	movs	r2, #38	; 0x26
 8002ad6:	4629      	mov	r1, r5
 8002ad8:	4648      	mov	r0, r9
 8002ada:	f025 fd46 	bl	802856a <memset>
 8002ade:	4648      	mov	r0, r9
 8002ae0:	f7ff fd06 	bl	80024f0 <_ZN8touchgfx6WidgetC1Ev>
 8002ae4:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8002ae8:	26ff      	movs	r6, #255	; 0xff
 8002aea:	4b9f      	ldr	r3, [pc, #636]	; (8002d68 <_ZN24Calibration_HallViewBaseC1Ev+0x2b0>)
 8002aec:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8002aee:	2226      	movs	r2, #38	; 0x26
 8002af0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002af4:	4629      	mov	r1, r5
 8002af6:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8002afa:	4640      	mov	r0, r8
 8002afc:	66a5      	str	r5, [r4, #104]	; 0x68
 8002afe:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002b02:	f025 fd32 	bl	802856a <memset>
 8002b06:	4640      	mov	r0, r8
 8002b08:	f7ff fcf2 	bl	80024f0 <_ZN8touchgfx6WidgetC1Ev>
 8002b0c:	4b97      	ldr	r3, [pc, #604]	; (8002d6c <_ZN24Calibration_HallViewBaseC1Ev+0x2b4>)
 8002b0e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8002b10:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8002b14:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8002b18:	a90a      	add	r1, sp, #40	; 0x28
 8002b1a:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8002b1e:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8002b20:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8002b24:	f00f fac3 	bl	80120ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002b28:	4658      	mov	r0, fp
 8002b2a:	f00f fc01 	bl	8012330 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002b2e:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8002b32:	f504 7794 	add.w	r7, r4, #296	; 0x128
 8002b36:	4618      	mov	r0, r3
 8002b38:	ee08 3a90 	vmov	s17, r3
 8002b3c:	f7ff fcea 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 8002b40:	4638      	mov	r0, r7
 8002b42:	f00e f97d 	bl	8010e40 <_ZN8touchgfx4LineC1Ev>
 8002b46:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8002b4a:	4618      	mov	r0, r3
 8002b4c:	9303      	str	r3, [sp, #12]
 8002b4e:	f7fe fbb7 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8002b52:	4b87      	ldr	r3, [pc, #540]	; (8002d70 <_ZN24Calibration_HallViewBaseC1Ev+0x2b8>)
 8002b54:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 8002b58:	3324      	adds	r3, #36	; 0x24
 8002b5a:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 8002b5e:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 8002b62:	4618      	mov	r0, r3
 8002b64:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 8002b68:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 8002b6c:	ee08 3a10 	vmov	s16, r3
 8002b70:	f7ff fcd0 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 8002b74:	4650      	mov	r0, sl
 8002b76:	f7ff fccd 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8002b7a:	4a7e      	ldr	r2, [pc, #504]	; (8002d74 <_ZN24Calibration_HallViewBaseC1Ev+0x2bc>)
 8002b7c:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8002b80:	e9c3 2413 	strd	r2, r4, [r3, #76]	; 0x4c
 8002b84:	4a7c      	ldr	r2, [pc, #496]	; (8002d78 <_ZN24Calibration_HallViewBaseC1Ev+0x2c0>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8002b86:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8002b8a:	e9c3 2515 	strd	r2, r5, [r3, #84]	; 0x54
 8002b8e:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8002b92:	f010 fa89 	bl	80130a8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8002b96:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8002b9a:	462a      	mov	r2, r5
 8002b9c:	4648      	mov	r0, r9
 8002b9e:	9300      	str	r3, [sp, #0]
 8002ba0:	4629      	mov	r1, r5
 8002ba2:	23f0      	movs	r3, #240	; 0xf0
 8002ba4:	f7ff fc90 	bl	80024c8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002ba8:	1d26      	adds	r6, r4, #4
        color = newColor;
 8002baa:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8002bae:	66a3      	str	r3, [r4, #104]	; 0x68
 8002bb0:	4649      	mov	r1, r9
 8002bb2:	4630      	mov	r0, r6
 8002bb4:	f00c fcec 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8002bb8:	462a      	mov	r2, r5
 8002bba:	4640      	mov	r0, r8
 8002bbc:	4629      	mov	r1, r5
 8002bbe:	f7ff fc76 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8002bc2:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8002bc4:	4640      	mov	r0, r8
 8002bc6:	a90a      	add	r1, sp, #40	; 0x28
 8002bc8:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002bcc:	f00f fa6f 	bl	80120ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002bd0:	4641      	mov	r1, r8
 8002bd2:	4630      	mov	r0, r6
 8002bd4:	f00c fcdc 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8002bd8:	4658      	mov	r0, fp
 8002bda:	f240 1201 	movw	r2, #257	; 0x101
 8002bde:	2121      	movs	r1, #33	; 0x21
 8002be0:	f7ff fc65 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8002be4:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002be6:	aa0a      	add	r2, sp, #40	; 0x28
 8002be8:	a909      	add	r1, sp, #36	; 0x24
 8002bea:	4658      	mov	r0, fp
 8002bec:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8002bf0:	2302      	movs	r3, #2
 8002bf2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002bf6:	f00f f864 	bl	8011cc2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        updateTextPosition();
 8002bfa:	4658      	mov	r0, fp
 8002bfc:	f8a4 50d0 	strh.w	r5, [r4, #208]	; 0xd0
 8002c00:	f7ff fcaa 	bl	8002558 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8002c04:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 8002c08:	330c      	adds	r3, #12
        color = col;
 8002c0a:	f04f 39ff 	mov.w	r9, #4294967295
 8002c0e:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8002c12:	4659      	mov	r1, fp
 8002c14:	4630      	mov	r0, r6
        colorPressed = col;
 8002c16:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 8002c1a:	f00c fcb9 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002c1e:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(32, 60);
 8002c22:	223c      	movs	r2, #60	; 0x3c
 8002c24:	ee18 0a90 	vmov	r0, s17
 8002c28:	2120      	movs	r1, #32
 8002c2a:	f7ff fc40 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8002c2e:	ee18 1a90 	vmov	r1, s17
 8002c32:	4640      	mov	r0, r8
        color = newColor;
 8002c34:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 8002c38:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8002c3c:	f00e fbc2 	bl	80113c4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002c40:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8002c44:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8002c48:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8002c4c:	f8df b12c 	ldr.w	fp, [pc, #300]	; 8002d7c <_ZN24Calibration_HallViewBaseC1Ev+0x2c4>
 8002c50:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8002c54:	2301      	movs	r3, #1
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_AQKY));
 8002c56:	ee18 0a90 	vmov	r0, s17
 8002c5a:	a90a      	add	r1, sp, #40	; 0x28
 8002c5c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002c60:	f00e fe4a 	bl	80118f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002c64:	ee18 1a90 	vmov	r1, s17
 8002c68:	4630      	mov	r0, r6
 8002c6a:	f00c fc91 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8002c6e:	230a      	movs	r3, #10
 8002c70:	9300      	str	r3, [sp, #0]
 8002c72:	2232      	movs	r2, #50	; 0x32
 8002c74:	23f0      	movs	r3, #240	; 0xf0
 8002c76:	4629      	mov	r1, r5
 8002c78:	4638      	mov	r0, r7
 8002c7a:	f7ff fc25 	bl	80024c8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002c7e:	9b03      	ldr	r3, [sp, #12]
 8002c80:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8002c84:	22a0      	movs	r2, #160	; 0xa0
 8002c86:	4611      	mov	r1, r2
 8002c88:	4638      	mov	r0, r7
 8002c8a:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 8002c8e:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 8002c92:	f00e f9eb 	bl	801106c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8002c96:	22a0      	movs	r2, #160	; 0xa0
 8002c98:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8002c9c:	4638      	mov	r0, r7
 8002c9e:	f00e f9f0 	bl	8011082 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8002ca2:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 8002ca6:	2b20      	cmp	r3, #32
 8002ca8:	d005      	beq.n	8002cb6 <_ZN24Calibration_HallViewBaseC1Ev+0x1fe>
        lineWidthQ5 = widthQ5;
 8002caa:	2320      	movs	r3, #32
 8002cac:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 8002cb0:	4638      	mov	r0, r7
 8002cb2:	f00e f8e5 	bl	8010e80 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8002cb6:	4638      	mov	r0, r7
 8002cb8:	2101      	movs	r1, #1
 8002cba:	f00e f9ed 	bl	8011098 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8002cbe:	4639      	mov	r1, r7
 8002cc0:	4630      	mov	r0, r6
 8002cc2:	f00c fc65 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8002cc6:	f04f 37ff 	mov.w	r7, #4294967295
    textArea2.setXY(69, 35);
 8002cca:	ee18 0a10 	vmov	r0, s16
 8002cce:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8002cd0:	2500      	movs	r5, #0
 8002cd2:	2145      	movs	r1, #69	; 0x45
 8002cd4:	f7ff fbeb 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8002cd8:	ee18 1a10 	vmov	r1, s16
 8002cdc:	4640      	mov	r0, r8
        color = newColor;
 8002cde:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 8002ce2:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8002ce6:	f00e fb6d 	bl	80113c4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002cea:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8002cee:	ee18 3a10 	vmov	r3, s16
 8002cf2:	333c      	adds	r3, #60	; 0x3c
 8002cf4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002cf8:	2302      	movs	r3, #2
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4V7Y));
 8002cfa:	ee18 0a10 	vmov	r0, s16
 8002cfe:	a90a      	add	r1, sp, #40	; 0x28
 8002d00:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002d04:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8002d08:	f00e fdf6 	bl	80118f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002d0c:	ee18 1a10 	vmov	r1, s16
 8002d10:	4630      	mov	r0, r6
 8002d12:	f00c fc3d 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8002d16:	220c      	movs	r2, #12
 8002d18:	4650      	mov	r0, sl
 8002d1a:	2136      	movs	r1, #54	; 0x36
 8002d1c:	f7ff fbc7 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8002d20:	4651      	mov	r1, sl
 8002d22:	4640      	mov	r0, r8
        color = newColor;
 8002d24:	f8c4 7224 	str.w	r7, [r4, #548]	; 0x224
        linespace = space;
 8002d28:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 8002d2c:	f00e fb4a 	bl	80113c4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002d30:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8002d34:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 8002d38:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002d3c:	2303      	movs	r3, #3
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TVZ0));
 8002d3e:	a90a      	add	r1, sp, #40	; 0x28
 8002d40:	4650      	mov	r0, sl
 8002d42:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002d46:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8002d4a:	f00e fdd5 	bl	80118f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002d4e:	4630      	mov	r0, r6
 8002d50:	4651      	mov	r1, sl
 8002d52:	f00c fc1d 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002d56:	4620      	mov	r0, r4
 8002d58:	b00d      	add	sp, #52	; 0x34
 8002d5a:	ecbd 8b02 	vpop	{d8}
 8002d5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002d62:	bf00      	nop
 8002d64:	08029e8c 	.word	0x08029e8c
 8002d68:	0802c6d0 	.word	0x0802c6d0
 8002d6c:	0802c898 	.word	0x0802c898
 8002d70:	0802c404 	.word	0x0802c404
 8002d74:	08029e74 	.word	0x08029e74
 8002d78:	08002aa1 	.word	0x08002aa1
 8002d7c:	08029d88 	.word	0x08029d88

08002d80 <_ZN23Calibration_PadViewBase11setupScreenEv>:
}

void Calibration_PadViewBase::setupScreen()
{

}
 8002d80:	4770      	bx	lr

08002d82 <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002d82:	4770      	bx	lr

08002d84 <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002d84:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002d86:	68c2      	ldr	r2, [r0, #12]
 8002d88:	6844      	ldr	r4, [r0, #4]
 8002d8a:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002d8c:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002d8e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002d92:	07d2      	lsls	r2, r2, #31
 8002d94:	bf48      	it	mi
 8002d96:	5962      	ldrmi	r2, [r4, r5]
 8002d98:	689b      	ldr	r3, [r3, #8]
    }
 8002d9a:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002d9c:	bf48      	it	mi
 8002d9e:	58d3      	ldrmi	r3, [r2, r3]
 8002da0:	4718      	bx	r3

08002da2 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8002da2:	6843      	ldr	r3, [r0, #4]
 8002da4:	b12b      	cbz	r3, 8002db2 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8002da6:	6883      	ldr	r3, [r0, #8]
 8002da8:	b92b      	cbnz	r3, 8002db6 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002daa:	68c0      	ldr	r0, [r0, #12]
 8002dac:	f000 0001 	and.w	r0, r0, #1
 8002db0:	4770      	bx	lr
 8002db2:	4618      	mov	r0, r3
 8002db4:	4770      	bx	lr
 8002db6:	2001      	movs	r0, #1
    }
 8002db8:	4770      	bx	lr

08002dba <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002dba:	b510      	push	{r4, lr}
 8002dbc:	2110      	movs	r1, #16
 8002dbe:	4604      	mov	r4, r0
 8002dc0:	f024 fbdd 	bl	802757e <_ZdlPvj>
 8002dc4:	4620      	mov	r0, r4
 8002dc6:	bd10      	pop	{r4, pc}

08002dc8 <_ZN23Calibration_PadViewBaseD1Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 8002dc8:	b510      	push	{r4, lr}
 8002dca:	4b03      	ldr	r3, [pc, #12]	; (8002dd8 <_ZN23Calibration_PadViewBaseD1Ev+0x10>)
 8002dcc:	6003      	str	r3, [r0, #0]
 8002dce:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002dd0:	f010 f974 	bl	80130bc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002dd4:	4620      	mov	r0, r4
 8002dd6:	bd10      	pop	{r4, pc}
 8002dd8:	08029ed8 	.word	0x08029ed8

08002ddc <_ZN23Calibration_PadViewBaseD0Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 8002ddc:	b507      	push	{r0, r1, r2, lr}
 8002dde:	4b07      	ldr	r3, [pc, #28]	; (8002dfc <_ZN23Calibration_PadViewBaseD0Ev+0x20>)
 8002de0:	6003      	str	r3, [r0, #0]
 8002de2:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002de4:	f010 f96a 	bl	80130bc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002de8:	9801      	ldr	r0, [sp, #4]
 8002dea:	f241 015c 	movw	r1, #4188	; 0x105c
 8002dee:	f024 fbc6 	bl	802757e <_ZdlPvj>
 8002df2:	9801      	ldr	r0, [sp, #4]
 8002df4:	b003      	add	sp, #12
 8002df6:	f85d fb04 	ldr.w	pc, [sp], #4
 8002dfa:	bf00      	nop
 8002dfc:	08029ed8 	.word	0x08029ed8

08002e00 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Calibration_PadViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8002e00:	3098      	adds	r0, #152	; 0x98
 8002e02:	4288      	cmp	r0, r1
{
 8002e04:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8002e06:	d105      	bne.n	8002e14 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Calibration_PadViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002e08:	f011 fe5a 	bl	8014ac0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Calibration
        //Go to Calibration with screen transition towards West
        application().gotoCalibrationScreenWipeTransitionWest();
    }
}
 8002e0c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoCalibrationScreenWipeTransitionWest();
 8002e10:	f000 bd04 	b.w	800381c <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv>
}
 8002e14:	bd08      	pop	{r3, pc}
	...

08002e18 <_ZN23Calibration_PadViewBaseC1Ev>:
Calibration_PadViewBase::Calibration_PadViewBase() :
 8002e18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002e1c:	ed2d 8b02 	vpush	{d8}
 8002e20:	4604      	mov	r4, r0
 8002e22:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Calibration_PadViewBase::buttonCallbackHandler)
 8002e24:	46a1      	mov	r9, r4
 8002e26:	2500      	movs	r5, #0
 8002e28:	f013 faca 	bl	80163c0 <_ZN8touchgfx6ScreenC1Ev>
 8002e2c:	4ba5      	ldr	r3, [pc, #660]	; (80030c4 <_ZN23Calibration_PadViewBaseC1Ev+0x2ac>)
 8002e2e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8002e30:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8002e34:	2226      	movs	r2, #38	; 0x26
 8002e36:	4629      	mov	r1, r5
 8002e38:	4648      	mov	r0, r9
 8002e3a:	f025 fb96 	bl	802856a <memset>
 8002e3e:	4648      	mov	r0, r9
 8002e40:	f7ff fb56 	bl	80024f0 <_ZN8touchgfx6WidgetC1Ev>
 8002e44:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8002e48:	26ff      	movs	r6, #255	; 0xff
 8002e4a:	4b9f      	ldr	r3, [pc, #636]	; (80030c8 <_ZN23Calibration_PadViewBaseC1Ev+0x2b0>)
 8002e4c:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8002e4e:	2226      	movs	r2, #38	; 0x26
 8002e50:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002e54:	4629      	mov	r1, r5
 8002e56:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8002e5a:	4640      	mov	r0, r8
 8002e5c:	66a5      	str	r5, [r4, #104]	; 0x68
 8002e5e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002e62:	f025 fb82 	bl	802856a <memset>
 8002e66:	4640      	mov	r0, r8
 8002e68:	f7ff fb42 	bl	80024f0 <_ZN8touchgfx6WidgetC1Ev>
 8002e6c:	4b97      	ldr	r3, [pc, #604]	; (80030cc <_ZN23Calibration_PadViewBaseC1Ev+0x2b4>)
 8002e6e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8002e70:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8002e74:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8002e78:	a90a      	add	r1, sp, #40	; 0x28
 8002e7a:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8002e7e:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8002e80:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8002e84:	f00f f913 	bl	80120ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002e88:	4658      	mov	r0, fp
 8002e8a:	f00f fa51 	bl	8012330 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002e8e:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8002e92:	f504 7794 	add.w	r7, r4, #296	; 0x128
 8002e96:	4618      	mov	r0, r3
 8002e98:	ee08 3a90 	vmov	s17, r3
 8002e9c:	f7ff fb3a 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 8002ea0:	4638      	mov	r0, r7
 8002ea2:	f00d ffcd 	bl	8010e40 <_ZN8touchgfx4LineC1Ev>
 8002ea6:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8002eaa:	4618      	mov	r0, r3
 8002eac:	9303      	str	r3, [sp, #12]
 8002eae:	f7fe fa07 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8002eb2:	4b87      	ldr	r3, [pc, #540]	; (80030d0 <_ZN23Calibration_PadViewBaseC1Ev+0x2b8>)
 8002eb4:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 8002eb8:	3324      	adds	r3, #36	; 0x24
 8002eba:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 8002ebe:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 8002ec2:	4618      	mov	r0, r3
 8002ec4:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 8002ec8:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 8002ecc:	ee08 3a10 	vmov	s16, r3
 8002ed0:	f7ff fb20 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 8002ed4:	4650      	mov	r0, sl
 8002ed6:	f7ff fb1d 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8002eda:	4a7e      	ldr	r2, [pc, #504]	; (80030d4 <_ZN23Calibration_PadViewBaseC1Ev+0x2bc>)
 8002edc:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8002ee0:	e9c3 2413 	strd	r2, r4, [r3, #76]	; 0x4c
 8002ee4:	4a7c      	ldr	r2, [pc, #496]	; (80030d8 <_ZN23Calibration_PadViewBaseC1Ev+0x2c0>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8002ee6:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8002eea:	e9c3 2515 	strd	r2, r5, [r3, #84]	; 0x54
 8002eee:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8002ef2:	f010 f8d9 	bl	80130a8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8002ef6:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8002efa:	462a      	mov	r2, r5
 8002efc:	4648      	mov	r0, r9
 8002efe:	9300      	str	r3, [sp, #0]
 8002f00:	4629      	mov	r1, r5
 8002f02:	23f0      	movs	r3, #240	; 0xf0
 8002f04:	f7ff fae0 	bl	80024c8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002f08:	1d26      	adds	r6, r4, #4
        color = newColor;
 8002f0a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8002f0e:	66a3      	str	r3, [r4, #104]	; 0x68
 8002f10:	4649      	mov	r1, r9
 8002f12:	4630      	mov	r0, r6
 8002f14:	f00c fb3c 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8002f18:	462a      	mov	r2, r5
 8002f1a:	4640      	mov	r0, r8
 8002f1c:	4629      	mov	r1, r5
 8002f1e:	f7ff fac6 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8002f22:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8002f24:	4640      	mov	r0, r8
 8002f26:	a90a      	add	r1, sp, #40	; 0x28
 8002f28:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002f2c:	f00f f8bf 	bl	80120ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002f30:	4641      	mov	r1, r8
 8002f32:	4630      	mov	r0, r6
 8002f34:	f00c fb2c 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8002f38:	4658      	mov	r0, fp
 8002f3a:	f240 1201 	movw	r2, #257	; 0x101
 8002f3e:	2121      	movs	r1, #33	; 0x21
 8002f40:	f7ff fab5 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8002f44:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002f46:	aa0a      	add	r2, sp, #40	; 0x28
 8002f48:	a909      	add	r1, sp, #36	; 0x24
 8002f4a:	4658      	mov	r0, fp
 8002f4c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8002f50:	2302      	movs	r3, #2
 8002f52:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002f56:	f00e feb4 	bl	8011cc2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8002f5a:	2306      	movs	r3, #6
        updateTextPosition();
 8002f5c:	4658      	mov	r0, fp
 8002f5e:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 8002f62:	f7ff faf9 	bl	8002558 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8002f66:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 8002f6a:	330c      	adds	r3, #12
        color = col;
 8002f6c:	f04f 39ff 	mov.w	r9, #4294967295
 8002f70:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8002f74:	4659      	mov	r1, fp
 8002f76:	4630      	mov	r0, r6
        colorPressed = col;
 8002f78:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 8002f7c:	f00c fb08 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002f80:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(58, 60);
 8002f84:	223c      	movs	r2, #60	; 0x3c
 8002f86:	ee18 0a90 	vmov	r0, s17
 8002f8a:	213a      	movs	r1, #58	; 0x3a
 8002f8c:	f7ff fa8f 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8002f90:	ee18 1a90 	vmov	r1, s17
 8002f94:	4640      	mov	r0, r8
        color = newColor;
 8002f96:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 8002f9a:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8002f9e:	f00e fa11 	bl	80113c4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002fa2:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8002fa6:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8002faa:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8002fae:	f8df b12c 	ldr.w	fp, [pc, #300]	; 80030dc <_ZN23Calibration_PadViewBaseC1Ev+0x2c4>
 8002fb2:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8002fb6:	2305      	movs	r3, #5
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_X786));
 8002fb8:	ee18 0a90 	vmov	r0, s17
 8002fbc:	a90a      	add	r1, sp, #40	; 0x28
 8002fbe:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002fc2:	f00e fc99 	bl	80118f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002fc6:	ee18 1a90 	vmov	r1, s17
 8002fca:	4630      	mov	r0, r6
 8002fcc:	f00c fae0 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8002fd0:	230a      	movs	r3, #10
 8002fd2:	9300      	str	r3, [sp, #0]
 8002fd4:	2232      	movs	r2, #50	; 0x32
 8002fd6:	23f0      	movs	r3, #240	; 0xf0
 8002fd8:	4629      	mov	r1, r5
 8002fda:	4638      	mov	r0, r7
 8002fdc:	f7ff fa74 	bl	80024c8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002fe0:	9b03      	ldr	r3, [sp, #12]
 8002fe2:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8002fe6:	22a0      	movs	r2, #160	; 0xa0
 8002fe8:	4611      	mov	r1, r2
 8002fea:	4638      	mov	r0, r7
 8002fec:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 8002ff0:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 8002ff4:	f00e f83a 	bl	801106c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8002ff8:	22a0      	movs	r2, #160	; 0xa0
 8002ffa:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8002ffe:	4638      	mov	r0, r7
 8003000:	f00e f83f 	bl	8011082 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8003004:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 8003008:	2b20      	cmp	r3, #32
 800300a:	d005      	beq.n	8003018 <_ZN23Calibration_PadViewBaseC1Ev+0x200>
        lineWidthQ5 = widthQ5;
 800300c:	2320      	movs	r3, #32
 800300e:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 8003012:	4638      	mov	r0, r7
 8003014:	f00d ff34 	bl	8010e80 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8003018:	4638      	mov	r0, r7
 800301a:	2101      	movs	r1, #1
 800301c:	f00e f83c 	bl	8011098 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8003020:	4639      	mov	r1, r7
 8003022:	4630      	mov	r0, r6
 8003024:	f00c fab4 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8003028:	f04f 37ff 	mov.w	r7, #4294967295
    textArea2.setXY(69, 35);
 800302c:	ee18 0a10 	vmov	r0, s16
 8003030:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8003032:	2500      	movs	r5, #0
 8003034:	2145      	movs	r1, #69	; 0x45
 8003036:	f7ff fa3a 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800303a:	ee18 1a10 	vmov	r1, s16
 800303e:	4640      	mov	r0, r8
        color = newColor;
 8003040:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 8003044:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8003048:	f00e f9bc 	bl	80113c4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800304c:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8003050:	ee18 3a10 	vmov	r3, s16
 8003054:	333c      	adds	r3, #60	; 0x3c
 8003056:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800305a:	2307      	movs	r3, #7
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FJID));
 800305c:	ee18 0a10 	vmov	r0, s16
 8003060:	a90a      	add	r1, sp, #40	; 0x28
 8003062:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003066:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 800306a:	f00e fc45 	bl	80118f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800306e:	ee18 1a10 	vmov	r1, s16
 8003072:	4630      	mov	r0, r6
 8003074:	f00c fa8c 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8003078:	220c      	movs	r2, #12
 800307a:	4650      	mov	r0, sl
 800307c:	2136      	movs	r1, #54	; 0x36
 800307e:	f7ff fa16 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8003082:	4651      	mov	r1, sl
 8003084:	4640      	mov	r0, r8
        color = newColor;
 8003086:	f8c4 7224 	str.w	r7, [r4, #548]	; 0x224
        linespace = space;
 800308a:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 800308e:	f00e f999 	bl	80113c4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003092:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8003096:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 800309a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800309e:	2308      	movs	r3, #8
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_EAAK));
 80030a0:	a90a      	add	r1, sp, #40	; 0x28
 80030a2:	4650      	mov	r0, sl
 80030a4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80030a8:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 80030ac:	f00e fc24 	bl	80118f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80030b0:	4630      	mov	r0, r6
 80030b2:	4651      	mov	r1, sl
 80030b4:	f00c fa6c 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80030b8:	4620      	mov	r0, r4
 80030ba:	b00d      	add	sp, #52	; 0x34
 80030bc:	ecbd 8b02 	vpop	{d8}
 80030c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80030c4:	08029ed8 	.word	0x08029ed8
 80030c8:	0802c6d0 	.word	0x0802c6d0
 80030cc:	0802c898 	.word	0x0802c898
 80030d0:	0802c404 	.word	0x0802c404
 80030d4:	08029ec0 	.word	0x08029ec0
 80030d8:	08002e01 	.word	0x08002e01
 80030dc:	08029d88 	.word	0x08029d88

080030e0 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 80030e0:	4770      	bx	lr

080030e2 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 80030e2:	4770      	bx	lr

080030e4 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 80030e4:	f500 7398 	add.w	r3, r0, #304	; 0x130
 80030e8:	6808      	ldr	r0, [r1, #0]
 80030ea:	6849      	ldr	r1, [r1, #4]
 80030ec:	c303      	stmia	r3!, {r0, r1}
    }
 80030ee:	4770      	bx	lr

080030f0 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 80030f0:	4770      	bx	lr

080030f2 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 80030f2:	4770      	bx	lr

080030f4 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 80030f4:	6041      	str	r1, [r0, #4]
    }
 80030f6:	4770      	bx	lr

080030f8 <_ZNK8touchgfx10Transition13FullSolidRect12getSolidRectEv>:
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
    {
    public:
        virtual Rect getSolidRect() const
 80030f8:	b510      	push	{r4, lr}
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80030fa:	2200      	movs	r2, #0
        {
            return Rect(0, 0, rect.width, rect.height);
 80030fc:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 8003100:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8003104:	8002      	strh	r2, [r0, #0]
 8003106:	8042      	strh	r2, [r0, #2]
 8003108:	8084      	strh	r4, [r0, #4]
 800310a:	80c1      	strh	r1, [r0, #6]
        }
 800310c:	bd10      	pop	{r4, pc}

0800310e <_ZNK8touchgfx10Transition13FullSolidRect4drawERKNS_4RectE>:

        virtual void draw(const Rect& area) const
        {
        }
 800310e:	4770      	bx	lr

08003110 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8003110:	4770      	bx	lr
	...

08003114 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8003114:	4b06      	ldr	r3, [pc, #24]	; (8003130 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 8003116:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800311a:	2300      	movs	r3, #0
 800311c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
// Main_Menu

void FrontendApplicationBase::gotoMain_MenuScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMain_MenuScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8003120:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003124:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003128:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140

    virtual void changeToStartScreen()
    {
        gotoMain_MenuScreenNoTransition();
    }
 800312c:	4770      	bx	lr
 800312e:	bf00      	nop
 8003130:	080034d1 	.word	0x080034d1

08003134 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8003134:	2301      	movs	r3, #1
 8003136:	7203      	strb	r3, [r0, #8]
    }
 8003138:	4770      	bx	lr

0800313a <_ZN8touchgfx10Transition13FullSolidRectD1Ev>:
    class FullSolidRect : public Widget
 800313a:	4770      	bx	lr

0800313c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED1Ev>:
 * the given direction.  This transition only draws the pixels in the
 * framebuffer once, and never moves any pixels. It is therefore very
 * useful on MCUs with limited performance.
 */
template <Direction templateDirection>
class WipeTransition : public Transition
 800313c:	4770      	bx	lr

0800313e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
 800313e:	4770      	bx	lr

08003140 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8003140:	4770      	bx	lr

08003142 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 8003142:	4770      	bx	lr

08003144 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE8tearDownEv>:
            // Synchronize framebuffers
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
        }
    }

    virtual void tearDown()
 8003144:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 8003146:	6840      	ldr	r0, [r0, #4]
 8003148:	6803      	ldr	r3, [r0, #0]
 800314a:	3110      	adds	r1, #16
 800314c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800314e:	4718      	bx	r3

08003150 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE4initEv>:
    }

    virtual void init()
 8003150:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 8003152:	6840      	ldr	r0, [r0, #4]
 8003154:	6803      	ldr	r3, [r0, #0]
 8003156:	3110      	adds	r1, #16
 8003158:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800315a:	4718      	bx	r3

0800315c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 800315c:	4770      	bx	lr

0800315e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
    virtual void tearDown()
 800315e:	4601      	mov	r1, r0
        screenContainer->remove(solid);
 8003160:	6840      	ldr	r0, [r0, #4]
 8003162:	6803      	ldr	r3, [r0, #0]
 8003164:	3110      	adds	r1, #16
 8003166:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8003168:	4718      	bx	r3

0800316a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    virtual void init()
 800316a:	4601      	mov	r1, r0
        screenContainer->add(solid);
 800316c:	6840      	ldr	r0, [r0, #4]
 800316e:	6803      	ldr	r3, [r0, #0]
 8003170:	3110      	adds	r1, #16
 8003172:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8003174:	4718      	bx	r3

08003176 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
    }
 8003176:	4770      	bx	lr

08003178 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8003178:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 800317a:	68c2      	ldr	r2, [r0, #12]
 800317c:	6841      	ldr	r1, [r0, #4]
 800317e:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8003180:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 8003182:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8003186:	07d2      	lsls	r2, r2, #31
 8003188:	bf48      	it	mi
 800318a:	590a      	ldrmi	r2, [r1, r4]
 800318c:	689b      	ldr	r3, [r3, #8]
    }
 800318e:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 8003192:	bf48      	it	mi
 8003194:	58d3      	ldrmi	r3, [r2, r3]
 8003196:	4718      	bx	r3

08003198 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8003198:	6843      	ldr	r3, [r0, #4]
 800319a:	b12b      	cbz	r3, 80031a8 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 800319c:	6883      	ldr	r3, [r0, #8]
 800319e:	b92b      	cbnz	r3, 80031ac <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 80031a0:	68c0      	ldr	r0, [r0, #12]
 80031a2:	f000 0001 	and.w	r0, r0, #1
 80031a6:	4770      	bx	lr
 80031a8:	4618      	mov	r0, r3
 80031aa:	4770      	bx	lr
 80031ac:	2001      	movs	r0, #1
    }
 80031ae:	4770      	bx	lr

080031b0 <_ZN8touchgfx12NoTransitionD0Ev>:
 80031b0:	b510      	push	{r4, lr}
 80031b2:	210c      	movs	r1, #12
 80031b4:	4604      	mov	r4, r0
 80031b6:	f024 f9e2 	bl	802757e <_ZdlPvj>
 80031ba:	4620      	mov	r0, r4
 80031bc:	bd10      	pop	{r4, pc}

080031be <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80031be:	b510      	push	{r4, lr}
 80031c0:	2110      	movs	r1, #16
 80031c2:	4604      	mov	r4, r0
 80031c4:	f024 f9db 	bl	802757e <_ZdlPvj>
 80031c8:	4620      	mov	r0, r4
 80031ca:	bd10      	pop	{r4, pc}

080031cc <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 80031cc:	b510      	push	{r4, lr}
 80031ce:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 80031d2:	4604      	mov	r4, r0
 80031d4:	f024 f9d3 	bl	802757e <_ZdlPvj>
 80031d8:	4620      	mov	r0, r4
 80031da:	bd10      	pop	{r4, pc}

080031dc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED0Ev>:
class WipeTransition : public Transition
 80031dc:	b510      	push	{r4, lr}
 80031de:	2138      	movs	r1, #56	; 0x38
 80031e0:	4604      	mov	r4, r0
 80031e2:	f024 f9cc 	bl	802757e <_ZdlPvj>
 80031e6:	4620      	mov	r0, r4
 80031e8:	bd10      	pop	{r4, pc}

080031ea <_ZN8touchgfx10Transition13FullSolidRectD0Ev>:
 80031ea:	b510      	push	{r4, lr}
 80031ec:	2128      	movs	r1, #40	; 0x28
 80031ee:	4604      	mov	r4, r0
 80031f0:	f024 f9c5 	bl	802757e <_ZdlPvj>
 80031f4:	4620      	mov	r0, r4
 80031f6:	bd10      	pop	{r4, pc}

080031f8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
 80031f8:	b510      	push	{r4, lr}
 80031fa:	2138      	movs	r1, #56	; 0x38
 80031fc:	4604      	mov	r4, r0
 80031fe:	f024 f9be 	bl	802757e <_ZdlPvj>
 8003202:	4620      	mov	r0, r4
 8003204:	bd10      	pop	{r4, pc}

08003206 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8003206:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 8003208:	f011 fc5a 	bl	8014ac0 <_ZN8touchgfx11Application11getInstanceEv>
 800320c:	6803      	ldr	r3, [r0, #0]
    }
 800320e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 8003212:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003214:	4718      	bx	r3
	...

08003218 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv>:
    virtual void handleTickEvent()
 8003218:	b513      	push	{r0, r1, r4, lr}
 800321a:	4604      	mov	r4, r0
        animationCounter++;
 800321c:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 800321e:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 8003220:	3001      	adds	r0, #1
 8003222:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 8003224:	4298      	cmp	r0, r3
        animationCounter++;
 8003226:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 8003228:	d905      	bls.n	8003236 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1e>
            done = true;
 800322a:	2301      	movs	r3, #1
 800322c:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 800322e:	2300      	movs	r3, #0
 8003230:	72a3      	strb	r3, [r4, #10]
    }
 8003232:	b002      	add	sp, #8
 8003234:	bd10      	pop	{r4, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8003236:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800323a:	2100      	movs	r1, #0
 800323c:	f013 fa72 	bl	8016724 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8003240:	f010 0201 	ands.w	r2, r0, #1
 8003244:	b283      	uxth	r3, r0
 8003246:	d12a      	bne.n	800329e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x86>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8003248:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800324a:	4a19      	ldr	r2, [pc, #100]	; (80032b0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x98>)
 800324c:	f9b4 000e 	ldrsh.w	r0, [r4, #14]
 8003250:	89e3      	ldrh	r3, [r4, #14]
 8003252:	8812      	ldrh	r2, [r2, #0]
        return rect.x;
 8003254:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
        rect.x = x;
 8003258:	82a0      	strh	r0, [r4, #20]
 800325a:	2000      	movs	r0, #0
 800325c:	1ad2      	subs	r2, r2, r3
 800325e:	f8ad 0002 	strh.w	r0, [sp, #2]
                screenContainer->invalidateRect(r);
 8003262:	6860      	ldr	r0, [r4, #4]
        rect.width = width;
 8003264:	8322      	strh	r2, [r4, #24]
                const uint16_t delta = calculatedValue - prevSolidPos;
 8003266:	1a5b      	subs	r3, r3, r1
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 8003268:	4a12      	ldr	r2, [pc, #72]	; (80032b4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x9c>)
 800326a:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 800326e:	6803      	ldr	r3, [r0, #0]
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 8003270:	f9b2 2000 	ldrsh.w	r2, [r2]
                screenContainer->invalidateRect(r);
 8003274:	691b      	ldr	r3, [r3, #16]
 8003276:	f8ad 1000 	strh.w	r1, [sp]
 800327a:	f8ad 2006 	strh.w	r2, [sp, #6]
 800327e:	4669      	mov	r1, sp
 8003280:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 8003282:	7aa3      	ldrb	r3, [r4, #10]
 8003284:	2b01      	cmp	r3, #1
 8003286:	d1d4      	bne.n	8003232 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
 8003288:	4b0b      	ldr	r3, [pc, #44]	; (80032b8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0xa0>)
 800328a:	781b      	ldrb	r3, [r3, #0]
 800328c:	2b00      	cmp	r3, #0
 800328e:	d0d0      	beq.n	8003232 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8003290:	f011 fc16 	bl	8014ac0 <_ZN8touchgfx11Application11getInstanceEv>
    }
 8003294:	b002      	add	sp, #8
 8003296:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 800329a:	f011 bc17 	b.w	8014acc <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 800329e:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80032a2:	2800      	cmp	r0, #0
 80032a4:	bfd8      	it	le
 80032a6:	460a      	movle	r2, r1
 80032a8:	4413      	add	r3, r2
 80032aa:	81e3      	strh	r3, [r4, #14]
 80032ac:	e7cd      	b.n	800324a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x32>
 80032ae:	bf00      	nop
 80032b0:	200137b0 	.word	0x200137b0
 80032b4:	200137b2 	.word	0x200137b2
 80032b8:	200137ba 	.word	0x200137ba

080032bc <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 80032bc:	b510      	push	{r4, lr}
 80032be:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 80032c0:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 80032c4:	b158      	cbz	r0, 80032de <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 80032c6:	6803      	ldr	r3, [r0, #0]
 80032c8:	68db      	ldr	r3, [r3, #12]
 80032ca:	4798      	blx	r3
 80032cc:	b138      	cbz	r0, 80032de <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 80032ce:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 80032d2:	6803      	ldr	r3, [r0, #0]
 80032d4:	689b      	ldr	r3, [r3, #8]
 80032d6:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 80032d8:	2300      	movs	r3, #0
 80032da:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
    }
 80032de:	bd10      	pop	{r4, pc}

080032e0 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl()
{
 80032e0:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Shutting_OffView, Shutting_OffPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80032e4:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 80032e8:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80032ea:	68a8      	ldr	r0, [r5, #8]
 80032ec:	6803      	ldr	r3, [r0, #0]
 80032ee:	6a1b      	ldr	r3, [r3, #32]
 80032f0:	4798      	blx	r3
 80032f2:	2897      	cmp	r0, #151	; 0x97
 80032f4:	d805      	bhi.n	8003302 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x22>
 80032f6:	4b46      	ldr	r3, [pc, #280]	; (8003410 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x130>)
 80032f8:	4a46      	ldr	r2, [pc, #280]	; (8003414 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 80032fa:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80032fc:	4846      	ldr	r0, [pc, #280]	; (8003418 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x138>)
 80032fe:	f024 ff2f 	bl	8028160 <__assert_func>
 8003302:	6868      	ldr	r0, [r5, #4]
 8003304:	6803      	ldr	r3, [r0, #0]
 8003306:	6a1b      	ldr	r3, [r3, #32]
 8003308:	4798      	blx	r3
 800330a:	280f      	cmp	r0, #15
 800330c:	d803      	bhi.n	8003316 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x36>
 800330e:	4b43      	ldr	r3, [pc, #268]	; (800341c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x13c>)
 8003310:	4a40      	ldr	r2, [pc, #256]	; (8003414 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 8003312:	21a4      	movs	r1, #164	; 0xa4
 8003314:	e7f2      	b.n	80032fc <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003316:	68e8      	ldr	r0, [r5, #12]
 8003318:	6803      	ldr	r3, [r0, #0]
 800331a:	6a1b      	ldr	r3, [r3, #32]
 800331c:	4798      	blx	r3
 800331e:	280b      	cmp	r0, #11
 8003320:	d803      	bhi.n	800332a <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x4a>
 8003322:	4b3f      	ldr	r3, [pc, #252]	; (8003420 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x140>)
 8003324:	4a3b      	ldr	r2, [pc, #236]	; (8003414 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 8003326:	21a5      	movs	r1, #165	; 0xa5
 8003328:	e7e8      	b.n	80032fc <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    Application::getInstance()->clearAllTimerWidgets();
 800332a:	f011 fbc9 	bl	8014ac0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800332e:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8003428 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x148>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 8003332:	3004      	adds	r0, #4
 8003334:	f011 fc2a 	bl	8014b8c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003338:	f8d9 0000 	ldr.w	r0, [r9]
 800333c:	b110      	cbz	r0, 8003344 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 800333e:	6803      	ldr	r3, [r0, #0]
 8003340:	68db      	ldr	r3, [r3, #12]
 8003342:	4798      	blx	r3
    if (*currentTrans)
 8003344:	f8d9 0000 	ldr.w	r0, [r9]
 8003348:	b110      	cbz	r0, 8003350 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 800334a:	6803      	ldr	r3, [r0, #0]
 800334c:	681b      	ldr	r3, [r3, #0]
 800334e:	4798      	blx	r3
    if (*currentScreen)
 8003350:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 800342c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x14c>
 8003354:	f8d8 0000 	ldr.w	r0, [r8]
 8003358:	b110      	cbz	r0, 8003360 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 800335a:	6803      	ldr	r3, [r0, #0]
 800335c:	695b      	ldr	r3, [r3, #20]
 800335e:	4798      	blx	r3
    if (*currentPresenter)
 8003360:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003364:	b110      	cbz	r0, 800336c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 8003366:	6803      	ldr	r3, [r0, #0]
 8003368:	685b      	ldr	r3, [r3, #4]
 800336a:	4798      	blx	r3
    if (*currentScreen)
 800336c:	f8d8 0000 	ldr.w	r0, [r8]
 8003370:	b110      	cbz	r0, 8003378 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 8003372:	6803      	ldr	r3, [r0, #0]
 8003374:	681b      	ldr	r3, [r3, #0]
 8003376:	4798      	blx	r3
    if (*currentPresenter)
 8003378:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800337c:	b110      	cbz	r0, 8003384 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 800337e:	6803      	ldr	r3, [r0, #0]
 8003380:	689b      	ldr	r3, [r3, #8]
 8003382:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003384:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8003386:	6803      	ldr	r3, [r0, #0]
 8003388:	2100      	movs	r1, #0
 800338a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800338c:	4798      	blx	r3
        : screenContainer(0), done(false)
 800338e:	f04f 0b00 	mov.w	fp, #0
 8003392:	4b24      	ldr	r3, [pc, #144]	; (8003424 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x144>)
 8003394:	6003      	str	r3, [r0, #0]
 8003396:	4604      	mov	r4, r0
 8003398:	f8c0 b004 	str.w	fp, [r0, #4]
 800339c:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80033a0:	68a8      	ldr	r0, [r5, #8]
 80033a2:	6803      	ldr	r3, [r0, #0]
 80033a4:	4659      	mov	r1, fp
 80033a6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80033a8:	4798      	blx	r3
 80033aa:	4606      	mov	r6, r0
 80033ac:	f005 f84a 	bl	8008444 <_ZN16Shutting_OffViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80033b0:	6868      	ldr	r0, [r5, #4]
 80033b2:	6803      	ldr	r3, [r0, #0]
 80033b4:	4659      	mov	r1, fp
 80033b6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80033b8:	4798      	blx	r3
 80033ba:	4631      	mov	r1, r6
 80033bc:	4605      	mov	r5, r0
 80033be:	f005 f81d 	bl	80083fc <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>
    *currentTrans = newTransition;
 80033c2:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 80033c6:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80033ca:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80033ce:	b1e5      	cbz	r5, 800340a <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x12a>
 80033d0:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 80033d2:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80033d6:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 80033d8:	f8c5 a008 	str.w	sl, [r5, #8]
 80033dc:	4630      	mov	r0, r6
 80033de:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 80033e0:	63f5      	str	r5, [r6, #60]	; 0x3c
 80033e2:	4798      	blx	r3
    newPresenter->activate();
 80033e4:	682b      	ldr	r3, [r5, #0]
 80033e6:	4628      	mov	r0, r5
 80033e8:	681b      	ldr	r3, [r3, #0]
 80033ea:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80033ec:	4621      	mov	r1, r4
 80033ee:	4630      	mov	r0, r6
 80033f0:	f013 f992 	bl	8016718 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80033f4:	6823      	ldr	r3, [r4, #0]
 80033f6:	4620      	mov	r0, r4
 80033f8:	691b      	ldr	r3, [r3, #16]
 80033fa:	4798      	blx	r3
    newTransition->invalidate();
 80033fc:	6823      	ldr	r3, [r4, #0]
 80033fe:	695b      	ldr	r3, [r3, #20]
 8003400:	4620      	mov	r0, r4
}
 8003402:	b001      	add	sp, #4
 8003404:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003408:	4718      	bx	r3
    model->bind(newPresenter);
 800340a:	462b      	mov	r3, r5
 800340c:	e7e1      	b.n	80033d2 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xf2>
 800340e:	bf00      	nop
 8003410:	08029f04 	.word	0x08029f04
 8003414:	08029f92 	.word	0x08029f92
 8003418:	0802a0a0 	.word	0x0802a0a0
 800341c:	0802a0e7 	.word	0x0802a0e7
 8003420:	0802a18a 	.word	0x0802a18a
 8003424:	0802b5a8 	.word	0x0802b5a8
 8003428:	20013804 	.word	0x20013804
 800342c:	20013800 	.word	0x20013800

08003430 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 8003430:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8003432:	4604      	mov	r4, r0
        animationCounter++;
 8003434:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 8003436:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 8003438:	3001      	adds	r0, #1
 800343a:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 800343c:	4298      	cmp	r0, r3
        animationCounter++;
 800343e:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 8003440:	d905      	bls.n	800344e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1e>
            done = true;
 8003442:	2301      	movs	r3, #1
 8003444:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 8003446:	2300      	movs	r3, #0
 8003448:	72a3      	strb	r3, [r4, #10]
    }
 800344a:	b003      	add	sp, #12
 800344c:	bd30      	pop	{r4, r5, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 800344e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8003452:	2100      	movs	r1, #0
 8003454:	f013 f966 	bl	8016724 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8003458:	f010 0201 	ands.w	r2, r0, #1
 800345c:	b283      	uxth	r3, r0
 800345e:	d128      	bne.n	80034b2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x82>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8003460:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8003462:	4b18      	ldr	r3, [pc, #96]	; (80034c4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>)
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8003464:	4818      	ldr	r0, [pc, #96]	; (80034c8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x98>)
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8003466:	8819      	ldrh	r1, [r3, #0]
                const uint16_t prevSolidWidth = solid.getWidth();
 8003468:	8b25      	ldrh	r5, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800346a:	89e3      	ldrh	r3, [r4, #14]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 800346c:	f9b0 0000 	ldrsh.w	r0, [r0]
 8003470:	f8ad 0006 	strh.w	r0, [sp, #6]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8003474:	1aca      	subs	r2, r1, r3
                screenContainer->invalidateRect(r);
 8003476:	6860      	ldr	r0, [r4, #4]
                const uint16_t delta = prevSolidWidth - solid.getWidth();
 8003478:	442b      	add	r3, r5
 800347a:	1a5b      	subs	r3, r3, r1
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800347c:	b212      	sxth	r2, r2
 800347e:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 8003482:	6803      	ldr	r3, [r0, #0]
 8003484:	8322      	strh	r2, [r4, #24]
 8003486:	f8ad 2000 	strh.w	r2, [sp]
 800348a:	2200      	movs	r2, #0
 800348c:	691b      	ldr	r3, [r3, #16]
 800348e:	f8ad 2002 	strh.w	r2, [sp, #2]
 8003492:	4669      	mov	r1, sp
 8003494:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 8003496:	7aa3      	ldrb	r3, [r4, #10]
 8003498:	2b01      	cmp	r3, #1
 800349a:	d1d6      	bne.n	800344a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
 800349c:	4b0b      	ldr	r3, [pc, #44]	; (80034cc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x9c>)
 800349e:	781b      	ldrb	r3, [r3, #0]
 80034a0:	2b00      	cmp	r3, #0
 80034a2:	d0d2      	beq.n	800344a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 80034a4:	f011 fb0c 	bl	8014ac0 <_ZN8touchgfx11Application11getInstanceEv>
    }
 80034a8:	b003      	add	sp, #12
 80034aa:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 80034ae:	f011 bb0d 	b.w	8014acc <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 80034b2:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80034b6:	2800      	cmp	r0, #0
 80034b8:	bfd8      	it	le
 80034ba:	460a      	movle	r2, r1
 80034bc:	4413      	add	r3, r2
 80034be:	81e3      	strh	r3, [r4, #14]
 80034c0:	e7cf      	b.n	8003462 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x32>
 80034c2:	bf00      	nop
 80034c4:	200137b0 	.word	0x200137b0
 80034c8:	200137b2 	.word	0x200137b2
 80034cc:	200137ba 	.word	0x200137ba

080034d0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv>:
{
 80034d0:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80034d4:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 80034d8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80034da:	68a8      	ldr	r0, [r5, #8]
 80034dc:	6803      	ldr	r3, [r0, #0]
 80034de:	6a1b      	ldr	r3, [r3, #32]
 80034e0:	4798      	blx	r3
 80034e2:	f241 137b 	movw	r3, #4475	; 0x117b
 80034e6:	4298      	cmp	r0, r3
 80034e8:	d805      	bhi.n	80034f6 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x26>
 80034ea:	4b46      	ldr	r3, [pc, #280]	; (8003604 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x134>)
 80034ec:	4a46      	ldr	r2, [pc, #280]	; (8003608 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 80034ee:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80034f0:	4846      	ldr	r0, [pc, #280]	; (800360c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x13c>)
 80034f2:	f024 fe35 	bl	8028160 <__assert_func>
 80034f6:	6868      	ldr	r0, [r5, #4]
 80034f8:	6803      	ldr	r3, [r0, #0]
 80034fa:	6a1b      	ldr	r3, [r3, #32]
 80034fc:	4798      	blx	r3
 80034fe:	280f      	cmp	r0, #15
 8003500:	d803      	bhi.n	800350a <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x3a>
 8003502:	4b43      	ldr	r3, [pc, #268]	; (8003610 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x140>)
 8003504:	4a40      	ldr	r2, [pc, #256]	; (8003608 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 8003506:	21a4      	movs	r1, #164	; 0xa4
 8003508:	e7f2      	b.n	80034f0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800350a:	68e8      	ldr	r0, [r5, #12]
 800350c:	6803      	ldr	r3, [r0, #0]
 800350e:	6a1b      	ldr	r3, [r3, #32]
 8003510:	4798      	blx	r3
 8003512:	280b      	cmp	r0, #11
 8003514:	d803      	bhi.n	800351e <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x4e>
 8003516:	4b3f      	ldr	r3, [pc, #252]	; (8003614 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x144>)
 8003518:	4a3b      	ldr	r2, [pc, #236]	; (8003608 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 800351a:	21a5      	movs	r1, #165	; 0xa5
 800351c:	e7e8      	b.n	80034f0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800351e:	f011 facf 	bl	8014ac0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003522:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 800361c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x14c>
 8003526:	3004      	adds	r0, #4
 8003528:	f011 fb30 	bl	8014b8c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800352c:	f8d9 0000 	ldr.w	r0, [r9]
 8003530:	b110      	cbz	r0, 8003538 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 8003532:	6803      	ldr	r3, [r0, #0]
 8003534:	68db      	ldr	r3, [r3, #12]
 8003536:	4798      	blx	r3
    if (*currentTrans)
 8003538:	f8d9 0000 	ldr.w	r0, [r9]
 800353c:	b110      	cbz	r0, 8003544 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 800353e:	6803      	ldr	r3, [r0, #0]
 8003540:	681b      	ldr	r3, [r3, #0]
 8003542:	4798      	blx	r3
    if (*currentScreen)
 8003544:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 8003620 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x150>
 8003548:	f8d8 0000 	ldr.w	r0, [r8]
 800354c:	b110      	cbz	r0, 8003554 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800354e:	6803      	ldr	r3, [r0, #0]
 8003550:	695b      	ldr	r3, [r3, #20]
 8003552:	4798      	blx	r3
    if (*currentPresenter)
 8003554:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003558:	b110      	cbz	r0, 8003560 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->deactivate();
 800355a:	6803      	ldr	r3, [r0, #0]
 800355c:	685b      	ldr	r3, [r3, #4]
 800355e:	4798      	blx	r3
    if (*currentScreen)
 8003560:	f8d8 0000 	ldr.w	r0, [r8]
 8003564:	b110      	cbz	r0, 800356c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x9c>
        (*currentScreen)->~Screen();
 8003566:	6803      	ldr	r3, [r0, #0]
 8003568:	681b      	ldr	r3, [r3, #0]
 800356a:	4798      	blx	r3
    if (*currentPresenter)
 800356c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003570:	b110      	cbz	r0, 8003578 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8003572:	6803      	ldr	r3, [r0, #0]
 8003574:	689b      	ldr	r3, [r3, #8]
 8003576:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003578:	68e8      	ldr	r0, [r5, #12]
 800357a:	6803      	ldr	r3, [r0, #0]
 800357c:	2100      	movs	r1, #0
 800357e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003580:	4798      	blx	r3
 8003582:	f04f 0b00 	mov.w	fp, #0
 8003586:	4b24      	ldr	r3, [pc, #144]	; (8003618 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x148>)
 8003588:	6003      	str	r3, [r0, #0]
 800358a:	4604      	mov	r4, r0
 800358c:	f8c0 b004 	str.w	fp, [r0, #4]
 8003590:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003594:	68a8      	ldr	r0, [r5, #8]
 8003596:	6803      	ldr	r3, [r0, #0]
 8003598:	4659      	mov	r1, fp
 800359a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800359c:	4798      	blx	r3
 800359e:	4606      	mov	r6, r0
 80035a0:	f004 fc50 	bl	8007e44 <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80035a4:	6868      	ldr	r0, [r5, #4]
 80035a6:	6803      	ldr	r3, [r0, #0]
 80035a8:	4659      	mov	r1, fp
 80035aa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80035ac:	4798      	blx	r3
 80035ae:	4631      	mov	r1, r6
 80035b0:	4605      	mov	r5, r0
 80035b2:	f004 fc21 	bl	8007df8 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 80035b6:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 80035ba:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80035be:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80035c2:	b1e5      	cbz	r5, 80035fe <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x12e>
 80035c4:	1d2b      	adds	r3, r5, #4
 80035c6:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80035ca:	6833      	ldr	r3, [r6, #0]
 80035cc:	f8c5 a008 	str.w	sl, [r5, #8]
 80035d0:	4630      	mov	r0, r6
 80035d2:	68db      	ldr	r3, [r3, #12]
 80035d4:	63f5      	str	r5, [r6, #60]	; 0x3c
 80035d6:	4798      	blx	r3
    newPresenter->activate();
 80035d8:	682b      	ldr	r3, [r5, #0]
 80035da:	4628      	mov	r0, r5
 80035dc:	681b      	ldr	r3, [r3, #0]
 80035de:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80035e0:	4621      	mov	r1, r4
 80035e2:	4630      	mov	r0, r6
 80035e4:	f013 f898 	bl	8016718 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80035e8:	6823      	ldr	r3, [r4, #0]
 80035ea:	4620      	mov	r0, r4
 80035ec:	691b      	ldr	r3, [r3, #16]
 80035ee:	4798      	blx	r3
    newTransition->invalidate();
 80035f0:	6823      	ldr	r3, [r4, #0]
 80035f2:	695b      	ldr	r3, [r3, #20]
 80035f4:	4620      	mov	r0, r4
}
 80035f6:	b001      	add	sp, #4
 80035f8:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80035fc:	4718      	bx	r3
    model->bind(newPresenter);
 80035fe:	462b      	mov	r3, r5
 8003600:	e7e1      	b.n	80035c6 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xf6>
 8003602:	bf00      	nop
 8003604:	08029f04 	.word	0x08029f04
 8003608:	0802a22d 	.word	0x0802a22d
 800360c:	0802a0a0 	.word	0x0802a0a0
 8003610:	0802a0e7 	.word	0x0802a0e7
 8003614:	0802a18a 	.word	0x0802a18a
 8003618:	0802b5a8 	.word	0x0802b5a8
 800361c:	20013804 	.word	0x20013804
 8003620:	20013800 	.word	0x20013800

08003624 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8003624:	4b04      	ldr	r3, [pc, #16]	; (8003638 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 8003626:	681b      	ldr	r3, [r3, #0]
 8003628:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 800362c:	b10a      	cbz	r2, 8003632 <_ZN8touchgfx3HAL3lcdEv+0xe>
 800362e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8003630:	b900      	cbnz	r0, 8003634 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 8003632:	6898      	ldr	r0, [r3, #8]
    }
 8003634:	4770      	bx	lr
 8003636:	bf00      	nop
 8003638:	200137bc 	.word	0x200137bc

0800363c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 800363c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800363e:	4604      	mov	r4, r0
 8003640:	4617      	mov	r7, r2
 8003642:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 8003644:	f011 fb70 	bl	8014d28 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8003648:	4b10      	ldr	r3, [pc, #64]	; (800368c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
 800364a:	601c      	str	r4, [r3, #0]
      model(m)
 800364c:	4b10      	ldr	r3, [pc, #64]	; (8003690 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 800364e:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 8003650:	4b10      	ldr	r3, [pc, #64]	; (8003694 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
        : currentPresenter(0),
 8003652:	2500      	movs	r5, #0
 8003654:	e9c4 3551 	strd	r3, r5, [r4, #324]	; 0x144
        return instance;
 8003658:	4b0f      	ldr	r3, [pc, #60]	; (8003698 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 800365a:	e9c4 5553 	strd	r5, r5, [r4, #332]	; 0x14c
 800365e:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8003660:	6803      	ldr	r3, [r0, #0]
 8003662:	2101      	movs	r1, #1
 8003664:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 8003666:	e9c4 554f 	strd	r5, r5, [r4, #316]	; 0x13c
      model(m)
 800366a:	e9c4 7655 	strd	r7, r6, [r4, #340]	; 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 800366e:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8003670:	4628      	mov	r0, r5
 8003672:	f004 fa25 	bl	8007ac0 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8003676:	f7ff ffd5 	bl	8003624 <_ZN8touchgfx3HAL3lcdEv>
 800367a:	f01a fd26 	bl	801e0ca <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 800367e:	f7ff ffd1 	bl	8003624 <_ZN8touchgfx3HAL3lcdEv>
 8003682:	f01a fd9d 	bl	801e1c0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 8003686:	4620      	mov	r0, r4
 8003688:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800368a:	bf00      	nop
 800368c:	20013810 	.word	0x20013810
 8003690:	0802b554 	.word	0x0802b554
 8003694:	0802b53c 	.word	0x0802b53c
 8003698:	200137bc 	.word	0x200137bc

0800369c <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800369c:	4b06      	ldr	r3, [pc, #24]	; (80036b8 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv+0x1c>)
 800369e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80036a2:	2300      	movs	r3, #0
 80036a4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80036a8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80036ac:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80036b0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80036b4:	4770      	bx	lr
 80036b6:	bf00      	nop
 80036b8:	080034d1 	.word	0x080034d1

080036bc <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>:
 80036bc:	4b06      	ldr	r3, [pc, #24]	; (80036d8 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv+0x1c>)
 80036be:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80036c2:	2300      	movs	r3, #0
 80036c4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80036c8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80036cc:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80036d0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80036d4:	4770      	bx	lr
 80036d6:	bf00      	nop
 80036d8:	08003ce1 	.word	0x08003ce1

080036dc <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>:
 80036dc:	4b06      	ldr	r3, [pc, #24]	; (80036f8 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv+0x1c>)
 80036de:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80036e2:	2300      	movs	r3, #0
 80036e4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80036e8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80036ec:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80036f0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80036f4:	4770      	bx	lr
 80036f6:	bf00      	nop
 80036f8:	08004b05 	.word	0x08004b05

080036fc <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>:
 80036fc:	4b06      	ldr	r3, [pc, #24]	; (8003718 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv+0x1c>)
 80036fe:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003702:	2300      	movs	r3, #0
 8003704:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003708:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800370c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003710:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003714:	4770      	bx	lr
 8003716:	bf00      	nop
 8003718:	08003ba1 	.word	0x08003ba1

0800371c <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>:
 800371c:	4b06      	ldr	r3, [pc, #24]	; (8003738 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv+0x1c>)
 800371e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003722:	2300      	movs	r3, #0
 8003724:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003728:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800372c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003730:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003734:	4770      	bx	lr
 8003736:	bf00      	nop
 8003738:	080049c5 	.word	0x080049c5

0800373c <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>:
 800373c:	4b06      	ldr	r3, [pc, #24]	; (8003758 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv+0x1c>)
 800373e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003742:	2300      	movs	r3, #0
 8003744:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003748:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800374c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003750:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003754:	4770      	bx	lr
 8003756:	bf00      	nop
 8003758:	08004885 	.word	0x08004885

0800375c <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>:
 800375c:	4b06      	ldr	r3, [pc, #24]	; (8003778 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv+0x1c>)
 800375e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003762:	2300      	movs	r3, #0
 8003764:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003768:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800376c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003770:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003774:	4770      	bx	lr
 8003776:	bf00      	nop
 8003778:	08004745 	.word	0x08004745

0800377c <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>:
 800377c:	4b06      	ldr	r3, [pc, #24]	; (8003798 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv+0x1c>)
 800377e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003782:	2300      	movs	r3, #0
 8003784:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003788:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800378c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003790:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003794:	4770      	bx	lr
 8003796:	bf00      	nop
 8003798:	08004605 	.word	0x08004605

0800379c <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>:
 800379c:	4b06      	ldr	r3, [pc, #24]	; (80037b8 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv+0x1c>)
 800379e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80037a2:	2300      	movs	r3, #0
 80037a4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80037a8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80037ac:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80037b0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80037b4:	4770      	bx	lr
 80037b6:	bf00      	nop
 80037b8:	08003a61 	.word	0x08003a61

080037bc <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>:
 80037bc:	4b06      	ldr	r3, [pc, #24]	; (80037d8 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv+0x1c>)
 80037be:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80037c2:	2300      	movs	r3, #0
 80037c4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80037c8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80037cc:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80037d0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80037d4:	4770      	bx	lr
 80037d6:	bf00      	nop
 80037d8:	080044c5 	.word	0x080044c5

080037dc <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>:
 80037dc:	4b06      	ldr	r3, [pc, #24]	; (80037f8 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv+0x1c>)
 80037de:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80037e2:	2300      	movs	r3, #0
 80037e4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80037e8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80037ec:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80037f0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80037f4:	4770      	bx	lr
 80037f6:	bf00      	nop
 80037f8:	08004385 	.word	0x08004385

080037fc <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv>:
 80037fc:	4b06      	ldr	r3, [pc, #24]	; (8003818 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv+0x1c>)
 80037fe:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003802:	2300      	movs	r3, #0
 8003804:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003808:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800380c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003810:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003814:	4770      	bx	lr
 8003816:	bf00      	nop
 8003818:	08004245 	.word	0x08004245

0800381c <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv>:
 800381c:	4b06      	ldr	r3, [pc, #24]	; (8003838 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv+0x1c>)
 800381e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003822:	2300      	movs	r3, #0
 8003824:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003828:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800382c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003830:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003834:	4770      	bx	lr
 8003836:	bf00      	nop
 8003838:	08003921 	.word	0x08003921

0800383c <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>:
 800383c:	4b06      	ldr	r3, [pc, #24]	; (8003858 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv+0x1c>)
 800383e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003842:	2300      	movs	r3, #0
 8003844:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003848:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800384c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003850:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003854:	4770      	bx	lr
 8003856:	bf00      	nop
 8003858:	08004105 	.word	0x08004105

0800385c <_ZN23FrontendApplicationBase44gotoCalibration_HallScreenWipeTransitionEastEv>:
 800385c:	4b06      	ldr	r3, [pc, #24]	; (8003878 <_ZN23FrontendApplicationBase44gotoCalibration_HallScreenWipeTransitionEastEv+0x1c>)
 800385e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003862:	2300      	movs	r3, #0
 8003864:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003868:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800386c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003870:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003874:	4770      	bx	lr
 8003876:	bf00      	nop
 8003878:	08003fc5 	.word	0x08003fc5

0800387c <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>:
 800387c:	4b06      	ldr	r3, [pc, #24]	; (8003898 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv+0x1c>)
 800387e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003882:	2300      	movs	r3, #0
 8003884:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003888:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800388c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003890:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003894:	4770      	bx	lr
 8003896:	bf00      	nop
 8003898:	08003e85 	.word	0x08003e85

0800389c <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>:
 800389c:	4b06      	ldr	r3, [pc, #24]	; (80038b8 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv+0x1c>)
 800389e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80038a2:	2300      	movs	r3, #0
 80038a4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80038a8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80038ac:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80038b0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80038b4:	4770      	bx	lr
 80038b6:	bf00      	nop
 80038b8:	080032e1 	.word	0x080032e1

080038bc <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>:
 80038bc:	6803      	ldr	r3, [r0, #0]
 80038be:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80038c0:	4718      	bx	r3
	...

080038c4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>:
          solid()
 80038c4:	4b12      	ldr	r3, [pc, #72]	; (8003910 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 80038c6:	b513      	push	{r0, r1, r4, lr}
          solid()
 80038c8:	6003      	str	r3, [r0, #0]
 80038ca:	f44f 7380 	mov.w	r3, #256	; 0x100
 80038ce:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 80038d0:	4b10      	ldr	r3, [pc, #64]	; (8003914 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 80038d2:	7241      	strb	r1, [r0, #9]
 80038d4:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 80038d6:	4910      	ldr	r1, [pc, #64]	; (8003918 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 80038d8:	4b10      	ldr	r3, [pc, #64]	; (800391c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 80038da:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 80038de:	f9b3 3000 	ldrsh.w	r3, [r3]
 80038e2:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 80038e4:	2200      	movs	r2, #0
 80038e6:	6042      	str	r2, [r0, #4]
 80038e8:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 80038ea:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 80038ec:	81c2      	strh	r2, [r0, #14]
          solid()
 80038ee:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80038f2:	e9c0 2207 	strd	r2, r2, [r0, #28]
 80038f6:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 80038fa:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 80038fe:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003900:	9100      	str	r1, [sp, #0]
 8003902:	3010      	adds	r0, #16
 8003904:	4611      	mov	r1, r2
 8003906:	f7fe fddf 	bl	80024c8 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 800390a:	4620      	mov	r0, r4
 800390c:	b002      	add	sp, #8
 800390e:	bd10      	pop	{r4, pc}
 8003910:	0802b5f0 	.word	0x0802b5f0
 8003914:	0802b4d4 	.word	0x0802b4d4
 8003918:	200137b2 	.word	0x200137b2
 800391c:	200137b0 	.word	0x200137b0

08003920 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv>:
{
 8003920:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<CalibrationView, CalibrationPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003924:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003928:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800392a:	68a0      	ldr	r0, [r4, #8]
 800392c:	6803      	ldr	r3, [r0, #0]
 800392e:	6a1b      	ldr	r3, [r3, #32]
 8003930:	4798      	blx	r3
 8003932:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8003936:	d205      	bcs.n	8003944 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x24>
 8003938:	4b42      	ldr	r3, [pc, #264]	; (8003a44 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x124>)
 800393a:	4a43      	ldr	r2, [pc, #268]	; (8003a48 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x128>)
 800393c:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800393e:	4843      	ldr	r0, [pc, #268]	; (8003a4c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x12c>)
 8003940:	f024 fc0e 	bl	8028160 <__assert_func>
 8003944:	6860      	ldr	r0, [r4, #4]
 8003946:	6803      	ldr	r3, [r0, #0]
 8003948:	6a1b      	ldr	r3, [r3, #32]
 800394a:	4798      	blx	r3
 800394c:	280f      	cmp	r0, #15
 800394e:	d803      	bhi.n	8003958 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x38>
 8003950:	4b3f      	ldr	r3, [pc, #252]	; (8003a50 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x130>)
 8003952:	4a3d      	ldr	r2, [pc, #244]	; (8003a48 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x128>)
 8003954:	21a4      	movs	r1, #164	; 0xa4
 8003956:	e7f2      	b.n	800393e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003958:	68e0      	ldr	r0, [r4, #12]
 800395a:	6803      	ldr	r3, [r0, #0]
 800395c:	6a1b      	ldr	r3, [r3, #32]
 800395e:	4798      	blx	r3
 8003960:	2837      	cmp	r0, #55	; 0x37
 8003962:	d803      	bhi.n	800396c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x4c>
 8003964:	4b3b      	ldr	r3, [pc, #236]	; (8003a54 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x134>)
 8003966:	4a38      	ldr	r2, [pc, #224]	; (8003a48 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x128>)
 8003968:	21a5      	movs	r1, #165	; 0xa5
 800396a:	e7e8      	b.n	800393e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 800396c:	f011 f8a8 	bl	8014ac0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003970:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003a58 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x138>
 8003974:	3004      	adds	r0, #4
 8003976:	f011 f909 	bl	8014b8c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800397a:	f8d9 0000 	ldr.w	r0, [r9]
 800397e:	b110      	cbz	r0, 8003986 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8003980:	6803      	ldr	r3, [r0, #0]
 8003982:	68db      	ldr	r3, [r3, #12]
 8003984:	4798      	blx	r3
    if (*currentTrans)
 8003986:	f8d9 0000 	ldr.w	r0, [r9]
 800398a:	b110      	cbz	r0, 8003992 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 800398c:	6803      	ldr	r3, [r0, #0]
 800398e:	681b      	ldr	r3, [r3, #0]
 8003990:	4798      	blx	r3
    if (*currentScreen)
 8003992:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8003a5c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x13c>
 8003996:	f8d8 0000 	ldr.w	r0, [r8]
 800399a:	b110      	cbz	r0, 80039a2 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 800399c:	6803      	ldr	r3, [r0, #0]
 800399e:	695b      	ldr	r3, [r3, #20]
 80039a0:	4798      	blx	r3
    if (*currentPresenter)
 80039a2:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80039a6:	b110      	cbz	r0, 80039ae <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 80039a8:	6803      	ldr	r3, [r0, #0]
 80039aa:	685b      	ldr	r3, [r3, #4]
 80039ac:	4798      	blx	r3
    if (*currentScreen)
 80039ae:	f8d8 0000 	ldr.w	r0, [r8]
 80039b2:	b110      	cbz	r0, 80039ba <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 80039b4:	6803      	ldr	r3, [r0, #0]
 80039b6:	681b      	ldr	r3, [r3, #0]
 80039b8:	4798      	blx	r3
    if (*currentPresenter)
 80039ba:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80039be:	b110      	cbz	r0, 80039c6 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80039c0:	6803      	ldr	r3, [r0, #0]
 80039c2:	689b      	ldr	r3, [r3, #8]
 80039c4:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80039c6:	68e0      	ldr	r0, [r4, #12]
 80039c8:	2100      	movs	r1, #0
 80039ca:	f7ff ff77 	bl	80038bc <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 80039ce:	2114      	movs	r1, #20
 80039d0:	4605      	mov	r5, r0
 80039d2:	f7ff ff77 	bl	80038c4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80039d6:	68a0      	ldr	r0, [r4, #8]
 80039d8:	6803      	ldr	r3, [r0, #0]
 80039da:	2100      	movs	r1, #0
 80039dc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80039de:	4798      	blx	r3
 80039e0:	4606      	mov	r6, r0
 80039e2:	f004 f90b 	bl	8007bfc <_ZN15CalibrationViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80039e6:	6860      	ldr	r0, [r4, #4]
 80039e8:	6803      	ldr	r3, [r0, #0]
 80039ea:	2100      	movs	r1, #0
 80039ec:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80039ee:	4798      	blx	r3
 80039f0:	4631      	mov	r1, r6
 80039f2:	4604      	mov	r4, r0
 80039f4:	f004 f8dc 	bl	8007bb0 <_ZN20CalibrationPresenterC1ER15CalibrationView>
    *currentTrans = newTransition;
 80039f8:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80039fc:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003a00:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003a04:	b1dc      	cbz	r4, 8003a3e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x11e>
 8003a06:	1d23      	adds	r3, r4, #4
 8003a08:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003a0c:	6833      	ldr	r3, [r6, #0]
 8003a0e:	f8c4 a008 	str.w	sl, [r4, #8]
 8003a12:	4630      	mov	r0, r6
 8003a14:	68db      	ldr	r3, [r3, #12]
 8003a16:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003a18:	4798      	blx	r3
    newPresenter->activate();
 8003a1a:	6823      	ldr	r3, [r4, #0]
 8003a1c:	4620      	mov	r0, r4
 8003a1e:	681b      	ldr	r3, [r3, #0]
 8003a20:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003a22:	4629      	mov	r1, r5
 8003a24:	4630      	mov	r0, r6
 8003a26:	f012 fe77 	bl	8016718 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003a2a:	682b      	ldr	r3, [r5, #0]
 8003a2c:	4628      	mov	r0, r5
 8003a2e:	691b      	ldr	r3, [r3, #16]
 8003a30:	4798      	blx	r3
    newTransition->invalidate();
 8003a32:	682b      	ldr	r3, [r5, #0]
 8003a34:	4628      	mov	r0, r5
 8003a36:	695b      	ldr	r3, [r3, #20]
}
 8003a38:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003a3c:	4718      	bx	r3
    model->bind(newPresenter);
 8003a3e:	4623      	mov	r3, r4
 8003a40:	e7e2      	b.n	8003a08 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0xe8>
 8003a42:	bf00      	nop
 8003a44:	08029f04 	.word	0x08029f04
 8003a48:	0802a335 	.word	0x0802a335
 8003a4c:	0802a0a0 	.word	0x0802a0a0
 8003a50:	0802a0e7 	.word	0x0802a0e7
 8003a54:	0802a18a 	.word	0x0802a18a
 8003a58:	20013804 	.word	0x20013804
 8003a5c:	20013800 	.word	0x20013800

08003a60 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv>:
{
 8003a60:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003a64:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003a68:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003a6a:	68a0      	ldr	r0, [r4, #8]
 8003a6c:	6803      	ldr	r3, [r0, #0]
 8003a6e:	6a1b      	ldr	r3, [r3, #32]
 8003a70:	4798      	blx	r3
 8003a72:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8003a76:	d205      	bcs.n	8003a84 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x24>
 8003a78:	4b42      	ldr	r3, [pc, #264]	; (8003b84 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x124>)
 8003a7a:	4a43      	ldr	r2, [pc, #268]	; (8003b88 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8003a7c:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003a7e:	4843      	ldr	r0, [pc, #268]	; (8003b8c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x12c>)
 8003a80:	f024 fb6e 	bl	8028160 <__assert_func>
 8003a84:	6860      	ldr	r0, [r4, #4]
 8003a86:	6803      	ldr	r3, [r0, #0]
 8003a88:	6a1b      	ldr	r3, [r3, #32]
 8003a8a:	4798      	blx	r3
 8003a8c:	280f      	cmp	r0, #15
 8003a8e:	d803      	bhi.n	8003a98 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x38>
 8003a90:	4b3f      	ldr	r3, [pc, #252]	; (8003b90 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x130>)
 8003a92:	4a3d      	ldr	r2, [pc, #244]	; (8003b88 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8003a94:	21a4      	movs	r1, #164	; 0xa4
 8003a96:	e7f2      	b.n	8003a7e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003a98:	68e0      	ldr	r0, [r4, #12]
 8003a9a:	6803      	ldr	r3, [r0, #0]
 8003a9c:	6a1b      	ldr	r3, [r3, #32]
 8003a9e:	4798      	blx	r3
 8003aa0:	2837      	cmp	r0, #55	; 0x37
 8003aa2:	d803      	bhi.n	8003aac <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x4c>
 8003aa4:	4b3b      	ldr	r3, [pc, #236]	; (8003b94 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x134>)
 8003aa6:	4a38      	ldr	r2, [pc, #224]	; (8003b88 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8003aa8:	21a5      	movs	r1, #165	; 0xa5
 8003aaa:	e7e8      	b.n	8003a7e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8003aac:	f011 f808 	bl	8014ac0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003ab0:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003b98 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x138>
 8003ab4:	3004      	adds	r0, #4
 8003ab6:	f011 f869 	bl	8014b8c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003aba:	f8d9 0000 	ldr.w	r0, [r9]
 8003abe:	b110      	cbz	r0, 8003ac6 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8003ac0:	6803      	ldr	r3, [r0, #0]
 8003ac2:	68db      	ldr	r3, [r3, #12]
 8003ac4:	4798      	blx	r3
    if (*currentTrans)
 8003ac6:	f8d9 0000 	ldr.w	r0, [r9]
 8003aca:	b110      	cbz	r0, 8003ad2 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8003acc:	6803      	ldr	r3, [r0, #0]
 8003ace:	681b      	ldr	r3, [r3, #0]
 8003ad0:	4798      	blx	r3
    if (*currentScreen)
 8003ad2:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8003b9c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x13c>
 8003ad6:	f8d8 0000 	ldr.w	r0, [r8]
 8003ada:	b110      	cbz	r0, 8003ae2 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8003adc:	6803      	ldr	r3, [r0, #0]
 8003ade:	695b      	ldr	r3, [r3, #20]
 8003ae0:	4798      	blx	r3
    if (*currentPresenter)
 8003ae2:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003ae6:	b110      	cbz	r0, 8003aee <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8003ae8:	6803      	ldr	r3, [r0, #0]
 8003aea:	685b      	ldr	r3, [r3, #4]
 8003aec:	4798      	blx	r3
    if (*currentScreen)
 8003aee:	f8d8 0000 	ldr.w	r0, [r8]
 8003af2:	b110      	cbz	r0, 8003afa <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8003af4:	6803      	ldr	r3, [r0, #0]
 8003af6:	681b      	ldr	r3, [r3, #0]
 8003af8:	4798      	blx	r3
    if (*currentPresenter)
 8003afa:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003afe:	b110      	cbz	r0, 8003b06 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8003b00:	6803      	ldr	r3, [r0, #0]
 8003b02:	689b      	ldr	r3, [r3, #8]
 8003b04:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003b06:	68e0      	ldr	r0, [r4, #12]
 8003b08:	2100      	movs	r1, #0
 8003b0a:	f7ff fed7 	bl	80038bc <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8003b0e:	2114      	movs	r1, #20
 8003b10:	4605      	mov	r5, r0
 8003b12:	f7ff fed7 	bl	80038c4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003b16:	68a0      	ldr	r0, [r4, #8]
 8003b18:	6803      	ldr	r3, [r0, #0]
 8003b1a:	2100      	movs	r1, #0
 8003b1c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003b1e:	4798      	blx	r3
 8003b20:	4606      	mov	r6, r0
 8003b22:	f004 fa4f 	bl	8007fc4 <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003b26:	6860      	ldr	r0, [r4, #4]
 8003b28:	6803      	ldr	r3, [r0, #0]
 8003b2a:	2100      	movs	r1, #0
 8003b2c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003b2e:	4798      	blx	r3
 8003b30:	4631      	mov	r1, r6
 8003b32:	4604      	mov	r4, r0
 8003b34:	f004 fa20 	bl	8007f78 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 8003b38:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003b3c:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003b40:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003b44:	b1dc      	cbz	r4, 8003b7e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x11e>
 8003b46:	1d23      	adds	r3, r4, #4
 8003b48:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003b4c:	6833      	ldr	r3, [r6, #0]
 8003b4e:	f8c4 a008 	str.w	sl, [r4, #8]
 8003b52:	4630      	mov	r0, r6
 8003b54:	68db      	ldr	r3, [r3, #12]
 8003b56:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003b58:	4798      	blx	r3
    newPresenter->activate();
 8003b5a:	6823      	ldr	r3, [r4, #0]
 8003b5c:	4620      	mov	r0, r4
 8003b5e:	681b      	ldr	r3, [r3, #0]
 8003b60:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003b62:	4629      	mov	r1, r5
 8003b64:	4630      	mov	r0, r6
 8003b66:	f012 fdd7 	bl	8016718 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003b6a:	682b      	ldr	r3, [r5, #0]
 8003b6c:	4628      	mov	r0, r5
 8003b6e:	691b      	ldr	r3, [r3, #16]
 8003b70:	4798      	blx	r3
    newTransition->invalidate();
 8003b72:	682b      	ldr	r3, [r5, #0]
 8003b74:	4628      	mov	r0, r5
 8003b76:	695b      	ldr	r3, [r3, #20]
}
 8003b78:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003b7c:	4718      	bx	r3
    model->bind(newPresenter);
 8003b7e:	4623      	mov	r3, r4
 8003b80:	e7e2      	b.n	8003b48 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xe8>
 8003b82:	bf00      	nop
 8003b84:	08029f04 	.word	0x08029f04
 8003b88:	0802a453 	.word	0x0802a453
 8003b8c:	0802a0a0 	.word	0x0802a0a0
 8003b90:	0802a0e7 	.word	0x0802a0e7
 8003b94:	0802a18a 	.word	0x0802a18a
 8003b98:	20013804 	.word	0x20013804
 8003b9c:	20013800 	.word	0x20013800

08003ba0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv>:
{
 8003ba0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003ba4:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003ba8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003baa:	68a0      	ldr	r0, [r4, #8]
 8003bac:	6803      	ldr	r3, [r0, #0]
 8003bae:	6a1b      	ldr	r3, [r3, #32]
 8003bb0:	4798      	blx	r3
 8003bb2:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8003bb6:	d205      	bcs.n	8003bc4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x24>
 8003bb8:	4b42      	ldr	r3, [pc, #264]	; (8003cc4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x124>)
 8003bba:	4a43      	ldr	r2, [pc, #268]	; (8003cc8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8003bbc:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003bbe:	4843      	ldr	r0, [pc, #268]	; (8003ccc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x12c>)
 8003bc0:	f024 face 	bl	8028160 <__assert_func>
 8003bc4:	6860      	ldr	r0, [r4, #4]
 8003bc6:	6803      	ldr	r3, [r0, #0]
 8003bc8:	6a1b      	ldr	r3, [r3, #32]
 8003bca:	4798      	blx	r3
 8003bcc:	280f      	cmp	r0, #15
 8003bce:	d803      	bhi.n	8003bd8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x38>
 8003bd0:	4b3f      	ldr	r3, [pc, #252]	; (8003cd0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x130>)
 8003bd2:	4a3d      	ldr	r2, [pc, #244]	; (8003cc8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8003bd4:	21a4      	movs	r1, #164	; 0xa4
 8003bd6:	e7f2      	b.n	8003bbe <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003bd8:	68e0      	ldr	r0, [r4, #12]
 8003bda:	6803      	ldr	r3, [r0, #0]
 8003bdc:	6a1b      	ldr	r3, [r3, #32]
 8003bde:	4798      	blx	r3
 8003be0:	2837      	cmp	r0, #55	; 0x37
 8003be2:	d803      	bhi.n	8003bec <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x4c>
 8003be4:	4b3b      	ldr	r3, [pc, #236]	; (8003cd4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x134>)
 8003be6:	4a38      	ldr	r2, [pc, #224]	; (8003cc8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8003be8:	21a5      	movs	r1, #165	; 0xa5
 8003bea:	e7e8      	b.n	8003bbe <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8003bec:	f010 ff68 	bl	8014ac0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003bf0:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003cd8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x138>
 8003bf4:	3004      	adds	r0, #4
 8003bf6:	f010 ffc9 	bl	8014b8c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003bfa:	f8d9 0000 	ldr.w	r0, [r9]
 8003bfe:	b110      	cbz	r0, 8003c06 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8003c00:	6803      	ldr	r3, [r0, #0]
 8003c02:	68db      	ldr	r3, [r3, #12]
 8003c04:	4798      	blx	r3
    if (*currentTrans)
 8003c06:	f8d9 0000 	ldr.w	r0, [r9]
 8003c0a:	b110      	cbz	r0, 8003c12 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8003c0c:	6803      	ldr	r3, [r0, #0]
 8003c0e:	681b      	ldr	r3, [r3, #0]
 8003c10:	4798      	blx	r3
    if (*currentScreen)
 8003c12:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8003cdc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x13c>
 8003c16:	f8d8 0000 	ldr.w	r0, [r8]
 8003c1a:	b110      	cbz	r0, 8003c22 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8003c1c:	6803      	ldr	r3, [r0, #0]
 8003c1e:	695b      	ldr	r3, [r3, #20]
 8003c20:	4798      	blx	r3
    if (*currentPresenter)
 8003c22:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003c26:	b110      	cbz	r0, 8003c2e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8003c28:	6803      	ldr	r3, [r0, #0]
 8003c2a:	685b      	ldr	r3, [r3, #4]
 8003c2c:	4798      	blx	r3
    if (*currentScreen)
 8003c2e:	f8d8 0000 	ldr.w	r0, [r8]
 8003c32:	b110      	cbz	r0, 8003c3a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8003c34:	6803      	ldr	r3, [r0, #0]
 8003c36:	681b      	ldr	r3, [r3, #0]
 8003c38:	4798      	blx	r3
    if (*currentPresenter)
 8003c3a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003c3e:	b110      	cbz	r0, 8003c46 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8003c40:	6803      	ldr	r3, [r0, #0]
 8003c42:	689b      	ldr	r3, [r3, #8]
 8003c44:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003c46:	68e0      	ldr	r0, [r4, #12]
 8003c48:	2100      	movs	r1, #0
 8003c4a:	f7ff fe37 	bl	80038bc <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8003c4e:	2114      	movs	r1, #20
 8003c50:	4605      	mov	r5, r0
 8003c52:	f7ff fe37 	bl	80038c4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003c56:	68a0      	ldr	r0, [r4, #8]
 8003c58:	6803      	ldr	r3, [r0, #0]
 8003c5a:	2100      	movs	r1, #0
 8003c5c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003c5e:	4798      	blx	r3
 8003c60:	4606      	mov	r6, r0
 8003c62:	f004 f94f 	bl	8007f04 <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003c66:	6860      	ldr	r0, [r4, #4]
 8003c68:	6803      	ldr	r3, [r0, #0]
 8003c6a:	2100      	movs	r1, #0
 8003c6c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003c6e:	4798      	blx	r3
 8003c70:	4631      	mov	r1, r6
 8003c72:	4604      	mov	r4, r0
 8003c74:	f004 f920 	bl	8007eb8 <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 8003c78:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003c7c:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003c80:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003c84:	b1dc      	cbz	r4, 8003cbe <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x11e>
 8003c86:	1d23      	adds	r3, r4, #4
 8003c88:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003c8c:	6833      	ldr	r3, [r6, #0]
 8003c8e:	f8c4 a008 	str.w	sl, [r4, #8]
 8003c92:	4630      	mov	r0, r6
 8003c94:	68db      	ldr	r3, [r3, #12]
 8003c96:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003c98:	4798      	blx	r3
    newPresenter->activate();
 8003c9a:	6823      	ldr	r3, [r4, #0]
 8003c9c:	4620      	mov	r0, r4
 8003c9e:	681b      	ldr	r3, [r3, #0]
 8003ca0:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003ca2:	4629      	mov	r1, r5
 8003ca4:	4630      	mov	r0, r6
 8003ca6:	f012 fd37 	bl	8016718 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003caa:	682b      	ldr	r3, [r5, #0]
 8003cac:	4628      	mov	r0, r5
 8003cae:	691b      	ldr	r3, [r3, #16]
 8003cb0:	4798      	blx	r3
    newTransition->invalidate();
 8003cb2:	682b      	ldr	r3, [r5, #0]
 8003cb4:	4628      	mov	r0, r5
 8003cb6:	695b      	ldr	r3, [r3, #20]
}
 8003cb8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003cbc:	4718      	bx	r3
    model->bind(newPresenter);
 8003cbe:	4623      	mov	r3, r4
 8003cc0:	e7e2      	b.n	8003c88 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xe8>
 8003cc2:	bf00      	nop
 8003cc4:	08029f04 	.word	0x08029f04
 8003cc8:	0802a583 	.word	0x0802a583
 8003ccc:	0802a0a0 	.word	0x0802a0a0
 8003cd0:	0802a0e7 	.word	0x0802a0e7
 8003cd4:	0802a18a 	.word	0x0802a18a
 8003cd8:	20013804 	.word	0x20013804
 8003cdc:	20013800 	.word	0x20013800

08003ce0 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv>:
{
 8003ce0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003ce4:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003ce8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003cea:	68a0      	ldr	r0, [r4, #8]
 8003cec:	6803      	ldr	r3, [r0, #0]
 8003cee:	6a1b      	ldr	r3, [r3, #32]
 8003cf0:	4798      	blx	r3
 8003cf2:	f241 137b 	movw	r3, #4475	; 0x117b
 8003cf6:	4298      	cmp	r0, r3
 8003cf8:	d805      	bhi.n	8003d06 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x26>
 8003cfa:	4b42      	ldr	r3, [pc, #264]	; (8003e04 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x124>)
 8003cfc:	4a42      	ldr	r2, [pc, #264]	; (8003e08 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8003cfe:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003d00:	4842      	ldr	r0, [pc, #264]	; (8003e0c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x12c>)
 8003d02:	f024 fa2d 	bl	8028160 <__assert_func>
 8003d06:	6860      	ldr	r0, [r4, #4]
 8003d08:	6803      	ldr	r3, [r0, #0]
 8003d0a:	6a1b      	ldr	r3, [r3, #32]
 8003d0c:	4798      	blx	r3
 8003d0e:	280f      	cmp	r0, #15
 8003d10:	d803      	bhi.n	8003d1a <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x3a>
 8003d12:	4b3f      	ldr	r3, [pc, #252]	; (8003e10 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x130>)
 8003d14:	4a3c      	ldr	r2, [pc, #240]	; (8003e08 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8003d16:	21a4      	movs	r1, #164	; 0xa4
 8003d18:	e7f2      	b.n	8003d00 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003d1a:	68e0      	ldr	r0, [r4, #12]
 8003d1c:	6803      	ldr	r3, [r0, #0]
 8003d1e:	6a1b      	ldr	r3, [r3, #32]
 8003d20:	4798      	blx	r3
 8003d22:	2837      	cmp	r0, #55	; 0x37
 8003d24:	d803      	bhi.n	8003d2e <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x4e>
 8003d26:	4b3b      	ldr	r3, [pc, #236]	; (8003e14 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x134>)
 8003d28:	4a37      	ldr	r2, [pc, #220]	; (8003e08 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8003d2a:	21a5      	movs	r1, #165	; 0xa5
 8003d2c:	e7e8      	b.n	8003d00 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8003d2e:	f010 fec7 	bl	8014ac0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003d32:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003e18 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x138>
 8003d36:	3004      	adds	r0, #4
 8003d38:	f010 ff28 	bl	8014b8c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003d3c:	f8d9 0000 	ldr.w	r0, [r9]
 8003d40:	b110      	cbz	r0, 8003d48 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x68>
        (*currentTrans)->tearDown();
 8003d42:	6803      	ldr	r3, [r0, #0]
 8003d44:	68db      	ldr	r3, [r3, #12]
 8003d46:	4798      	blx	r3
    if (*currentTrans)
 8003d48:	f8d9 0000 	ldr.w	r0, [r9]
 8003d4c:	b110      	cbz	r0, 8003d54 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x74>
        (*currentTrans)->~Transition();
 8003d4e:	6803      	ldr	r3, [r0, #0]
 8003d50:	681b      	ldr	r3, [r3, #0]
 8003d52:	4798      	blx	r3
    if (*currentScreen)
 8003d54:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8003e1c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x13c>
 8003d58:	f8d8 0000 	ldr.w	r0, [r8]
 8003d5c:	b110      	cbz	r0, 8003d64 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8003d5e:	6803      	ldr	r3, [r0, #0]
 8003d60:	695b      	ldr	r3, [r3, #20]
 8003d62:	4798      	blx	r3
    if (*currentPresenter)
 8003d64:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003d68:	b110      	cbz	r0, 8003d70 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x90>
        (*currentPresenter)->deactivate();
 8003d6a:	6803      	ldr	r3, [r0, #0]
 8003d6c:	685b      	ldr	r3, [r3, #4]
 8003d6e:	4798      	blx	r3
    if (*currentScreen)
 8003d70:	f8d8 0000 	ldr.w	r0, [r8]
 8003d74:	b110      	cbz	r0, 8003d7c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x9c>
        (*currentScreen)->~Screen();
 8003d76:	6803      	ldr	r3, [r0, #0]
 8003d78:	681b      	ldr	r3, [r3, #0]
 8003d7a:	4798      	blx	r3
    if (*currentPresenter)
 8003d7c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003d80:	b110      	cbz	r0, 8003d88 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8003d82:	6803      	ldr	r3, [r0, #0]
 8003d84:	689b      	ldr	r3, [r3, #8]
 8003d86:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003d88:	68e0      	ldr	r0, [r4, #12]
 8003d8a:	2100      	movs	r1, #0
 8003d8c:	f7ff fd96 	bl	80038bc <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8003d90:	2114      	movs	r1, #20
 8003d92:	4605      	mov	r5, r0
 8003d94:	f7ff fd96 	bl	80038c4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003d98:	68a0      	ldr	r0, [r4, #8]
 8003d9a:	6803      	ldr	r3, [r0, #0]
 8003d9c:	2100      	movs	r1, #0
 8003d9e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003da0:	4798      	blx	r3
 8003da2:	4606      	mov	r6, r0
 8003da4:	f004 f84e 	bl	8007e44 <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003da8:	6860      	ldr	r0, [r4, #4]
 8003daa:	6803      	ldr	r3, [r0, #0]
 8003dac:	2100      	movs	r1, #0
 8003dae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003db0:	4798      	blx	r3
 8003db2:	4631      	mov	r1, r6
 8003db4:	4604      	mov	r4, r0
 8003db6:	f004 f81f 	bl	8007df8 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 8003dba:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003dbe:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003dc2:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003dc6:	b1dc      	cbz	r4, 8003e00 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x120>
 8003dc8:	1d23      	adds	r3, r4, #4
 8003dca:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003dce:	6833      	ldr	r3, [r6, #0]
 8003dd0:	f8c4 a008 	str.w	sl, [r4, #8]
 8003dd4:	4630      	mov	r0, r6
 8003dd6:	68db      	ldr	r3, [r3, #12]
 8003dd8:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003dda:	4798      	blx	r3
    newPresenter->activate();
 8003ddc:	6823      	ldr	r3, [r4, #0]
 8003dde:	4620      	mov	r0, r4
 8003de0:	681b      	ldr	r3, [r3, #0]
 8003de2:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003de4:	4629      	mov	r1, r5
 8003de6:	4630      	mov	r0, r6
 8003de8:	f012 fc96 	bl	8016718 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003dec:	682b      	ldr	r3, [r5, #0]
 8003dee:	4628      	mov	r0, r5
 8003df0:	691b      	ldr	r3, [r3, #16]
 8003df2:	4798      	blx	r3
    newTransition->invalidate();
 8003df4:	682b      	ldr	r3, [r5, #0]
 8003df6:	4628      	mov	r0, r5
 8003df8:	695b      	ldr	r3, [r3, #20]
}
 8003dfa:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003dfe:	4718      	bx	r3
    model->bind(newPresenter);
 8003e00:	4623      	mov	r3, r4
 8003e02:	e7e2      	b.n	8003dca <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xea>
 8003e04:	08029f04 	.word	0x08029f04
 8003e08:	0802a6a1 	.word	0x0802a6a1
 8003e0c:	0802a0a0 	.word	0x0802a0a0
 8003e10:	0802a0e7 	.word	0x0802a0e7
 8003e14:	0802a18a 	.word	0x0802a18a
 8003e18:	20013804 	.word	0x20013804
 8003e1c:	20013800 	.word	0x20013800

08003e20 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>:
 8003e20:	6803      	ldr	r3, [r0, #0]
 8003e22:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003e24:	4718      	bx	r3
	...

08003e28 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>:
          solid()
 8003e28:	4b12      	ldr	r3, [pc, #72]	; (8003e74 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 8003e2a:	b513      	push	{r0, r1, r4, lr}
          solid()
 8003e2c:	6003      	str	r3, [r0, #0]
 8003e2e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8003e32:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 8003e34:	4b10      	ldr	r3, [pc, #64]	; (8003e78 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 8003e36:	7241      	strb	r1, [r0, #9]
 8003e38:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003e3a:	4910      	ldr	r1, [pc, #64]	; (8003e7c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 8003e3c:	4b10      	ldr	r3, [pc, #64]	; (8003e80 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003e3e:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 8003e42:	f9b3 3000 	ldrsh.w	r3, [r3]
 8003e46:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 8003e48:	2200      	movs	r2, #0
 8003e4a:	6042      	str	r2, [r0, #4]
 8003e4c:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 8003e4e:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 8003e50:	81c2      	strh	r2, [r0, #14]
          solid()
 8003e52:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8003e56:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8003e5a:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 8003e5e:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 8003e62:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003e64:	9100      	str	r1, [sp, #0]
 8003e66:	3010      	adds	r0, #16
 8003e68:	4611      	mov	r1, r2
 8003e6a:	f7fe fb2d 	bl	80024c8 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 8003e6e:	4620      	mov	r0, r4
 8003e70:	b002      	add	sp, #8
 8003e72:	bd10      	pop	{r4, pc}
 8003e74:	0802b5cc 	.word	0x0802b5cc
 8003e78:	0802b4d4 	.word	0x0802b4d4
 8003e7c:	200137b2 	.word	0x200137b2
 8003e80:	200137b0 	.word	0x200137b0

08003e84 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv>:
{
 8003e84:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Project_InfoView, Project_InfoPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003e88:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003e8c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003e8e:	68a0      	ldr	r0, [r4, #8]
 8003e90:	6803      	ldr	r3, [r0, #0]
 8003e92:	6a1b      	ldr	r3, [r3, #32]
 8003e94:	4798      	blx	r3
 8003e96:	f241 03af 	movw	r3, #4271	; 0x10af
 8003e9a:	4298      	cmp	r0, r3
 8003e9c:	d805      	bhi.n	8003eaa <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x26>
 8003e9e:	4b42      	ldr	r3, [pc, #264]	; (8003fa8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x124>)
 8003ea0:	4a42      	ldr	r2, [pc, #264]	; (8003fac <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8003ea2:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003ea4:	4842      	ldr	r0, [pc, #264]	; (8003fb0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x12c>)
 8003ea6:	f024 f95b 	bl	8028160 <__assert_func>
 8003eaa:	6860      	ldr	r0, [r4, #4]
 8003eac:	6803      	ldr	r3, [r0, #0]
 8003eae:	6a1b      	ldr	r3, [r3, #32]
 8003eb0:	4798      	blx	r3
 8003eb2:	280f      	cmp	r0, #15
 8003eb4:	d803      	bhi.n	8003ebe <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x3a>
 8003eb6:	4b3f      	ldr	r3, [pc, #252]	; (8003fb4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x130>)
 8003eb8:	4a3c      	ldr	r2, [pc, #240]	; (8003fac <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8003eba:	21a4      	movs	r1, #164	; 0xa4
 8003ebc:	e7f2      	b.n	8003ea4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003ebe:	68e0      	ldr	r0, [r4, #12]
 8003ec0:	6803      	ldr	r3, [r0, #0]
 8003ec2:	6a1b      	ldr	r3, [r3, #32]
 8003ec4:	4798      	blx	r3
 8003ec6:	2837      	cmp	r0, #55	; 0x37
 8003ec8:	d803      	bhi.n	8003ed2 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x4e>
 8003eca:	4b3b      	ldr	r3, [pc, #236]	; (8003fb8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x134>)
 8003ecc:	4a37      	ldr	r2, [pc, #220]	; (8003fac <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8003ece:	21a5      	movs	r1, #165	; 0xa5
 8003ed0:	e7e8      	b.n	8003ea4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8003ed2:	f010 fdf5 	bl	8014ac0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003ed6:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003fbc <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x138>
 8003eda:	3004      	adds	r0, #4
 8003edc:	f010 fe56 	bl	8014b8c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003ee0:	f8d9 0000 	ldr.w	r0, [r9]
 8003ee4:	b110      	cbz	r0, 8003eec <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8003ee6:	6803      	ldr	r3, [r0, #0]
 8003ee8:	68db      	ldr	r3, [r3, #12]
 8003eea:	4798      	blx	r3
    if (*currentTrans)
 8003eec:	f8d9 0000 	ldr.w	r0, [r9]
 8003ef0:	b110      	cbz	r0, 8003ef8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8003ef2:	6803      	ldr	r3, [r0, #0]
 8003ef4:	681b      	ldr	r3, [r3, #0]
 8003ef6:	4798      	blx	r3
    if (*currentScreen)
 8003ef8:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8003fc0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x13c>
 8003efc:	f8d8 0000 	ldr.w	r0, [r8]
 8003f00:	b110      	cbz	r0, 8003f08 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8003f02:	6803      	ldr	r3, [r0, #0]
 8003f04:	695b      	ldr	r3, [r3, #20]
 8003f06:	4798      	blx	r3
    if (*currentPresenter)
 8003f08:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003f0c:	b110      	cbz	r0, 8003f14 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8003f0e:	6803      	ldr	r3, [r0, #0]
 8003f10:	685b      	ldr	r3, [r3, #4]
 8003f12:	4798      	blx	r3
    if (*currentScreen)
 8003f14:	f8d8 0000 	ldr.w	r0, [r8]
 8003f18:	b110      	cbz	r0, 8003f20 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8003f1a:	6803      	ldr	r3, [r0, #0]
 8003f1c:	681b      	ldr	r3, [r3, #0]
 8003f1e:	4798      	blx	r3
    if (*currentPresenter)
 8003f20:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003f24:	b110      	cbz	r0, 8003f2c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8003f26:	6803      	ldr	r3, [r0, #0]
 8003f28:	689b      	ldr	r3, [r3, #8]
 8003f2a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003f2c:	68e0      	ldr	r0, [r4, #12]
 8003f2e:	2100      	movs	r1, #0
 8003f30:	f7ff ff76 	bl	8003e20 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8003f34:	2114      	movs	r1, #20
 8003f36:	4605      	mov	r5, r0
 8003f38:	f7ff ff76 	bl	8003e28 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003f3c:	68a0      	ldr	r0, [r4, #8]
 8003f3e:	6803      	ldr	r3, [r0, #0]
 8003f40:	2100      	movs	r1, #0
 8003f42:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003f44:	4798      	blx	r3
 8003f46:	4606      	mov	r6, r0
 8003f48:	f004 fa24 	bl	8008394 <_ZN16Project_InfoViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003f4c:	6860      	ldr	r0, [r4, #4]
 8003f4e:	6803      	ldr	r3, [r0, #0]
 8003f50:	2100      	movs	r1, #0
 8003f52:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003f54:	4798      	blx	r3
 8003f56:	4631      	mov	r1, r6
 8003f58:	4604      	mov	r4, r0
 8003f5a:	f004 f9f5 	bl	8008348 <_ZN21Project_InfoPresenterC1ER16Project_InfoView>
    *currentTrans = newTransition;
 8003f5e:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003f62:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003f66:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003f6a:	b1dc      	cbz	r4, 8003fa4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x120>
 8003f6c:	1d23      	adds	r3, r4, #4
 8003f6e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003f72:	6833      	ldr	r3, [r6, #0]
 8003f74:	f8c4 a008 	str.w	sl, [r4, #8]
 8003f78:	4630      	mov	r0, r6
 8003f7a:	68db      	ldr	r3, [r3, #12]
 8003f7c:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003f7e:	4798      	blx	r3
    newPresenter->activate();
 8003f80:	6823      	ldr	r3, [r4, #0]
 8003f82:	4620      	mov	r0, r4
 8003f84:	681b      	ldr	r3, [r3, #0]
 8003f86:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003f88:	4629      	mov	r1, r5
 8003f8a:	4630      	mov	r0, r6
 8003f8c:	f012 fbc4 	bl	8016718 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003f90:	682b      	ldr	r3, [r5, #0]
 8003f92:	4628      	mov	r0, r5
 8003f94:	691b      	ldr	r3, [r3, #16]
 8003f96:	4798      	blx	r3
    newTransition->invalidate();
 8003f98:	682b      	ldr	r3, [r5, #0]
 8003f9a:	4628      	mov	r0, r5
 8003f9c:	695b      	ldr	r3, [r3, #20]
}
 8003f9e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003fa2:	4718      	bx	r3
    model->bind(newPresenter);
 8003fa4:	4623      	mov	r3, r4
 8003fa6:	e7e2      	b.n	8003f6e <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xea>
 8003fa8:	08029f04 	.word	0x08029f04
 8003fac:	0802a7bb 	.word	0x0802a7bb
 8003fb0:	0802a0a0 	.word	0x0802a0a0
 8003fb4:	0802a0e7 	.word	0x0802a0e7
 8003fb8:	0802a18a 	.word	0x0802a18a
 8003fbc:	20013804 	.word	0x20013804
 8003fc0:	20013800 	.word	0x20013800

08003fc4 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv>:
{
 8003fc4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Calibration_HallView, Calibration_HallPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003fc8:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003fcc:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003fce:	68a0      	ldr	r0, [r4, #8]
 8003fd0:	6803      	ldr	r3, [r0, #0]
 8003fd2:	6a1b      	ldr	r3, [r3, #32]
 8003fd4:	4798      	blx	r3
 8003fd6:	f241 035b 	movw	r3, #4187	; 0x105b
 8003fda:	4298      	cmp	r0, r3
 8003fdc:	d805      	bhi.n	8003fea <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x26>
 8003fde:	4b42      	ldr	r3, [pc, #264]	; (80040e8 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x124>)
 8003fe0:	4a42      	ldr	r2, [pc, #264]	; (80040ec <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x128>)
 8003fe2:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003fe4:	4842      	ldr	r0, [pc, #264]	; (80040f0 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x12c>)
 8003fe6:	f024 f8bb 	bl	8028160 <__assert_func>
 8003fea:	6860      	ldr	r0, [r4, #4]
 8003fec:	6803      	ldr	r3, [r0, #0]
 8003fee:	6a1b      	ldr	r3, [r3, #32]
 8003ff0:	4798      	blx	r3
 8003ff2:	280f      	cmp	r0, #15
 8003ff4:	d803      	bhi.n	8003ffe <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x3a>
 8003ff6:	4b3f      	ldr	r3, [pc, #252]	; (80040f4 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x130>)
 8003ff8:	4a3c      	ldr	r2, [pc, #240]	; (80040ec <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x128>)
 8003ffa:	21a4      	movs	r1, #164	; 0xa4
 8003ffc:	e7f2      	b.n	8003fe4 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003ffe:	68e0      	ldr	r0, [r4, #12]
 8004000:	6803      	ldr	r3, [r0, #0]
 8004002:	6a1b      	ldr	r3, [r3, #32]
 8004004:	4798      	blx	r3
 8004006:	2837      	cmp	r0, #55	; 0x37
 8004008:	d803      	bhi.n	8004012 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x4e>
 800400a:	4b3b      	ldr	r3, [pc, #236]	; (80040f8 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x134>)
 800400c:	4a37      	ldr	r2, [pc, #220]	; (80040ec <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x128>)
 800400e:	21a5      	movs	r1, #165	; 0xa5
 8004010:	e7e8      	b.n	8003fe4 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004012:	f010 fd55 	bl	8014ac0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004016:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80040fc <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x138>
 800401a:	3004      	adds	r0, #4
 800401c:	f010 fdb6 	bl	8014b8c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004020:	f8d9 0000 	ldr.w	r0, [r9]
 8004024:	b110      	cbz	r0, 800402c <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004026:	6803      	ldr	r3, [r0, #0]
 8004028:	68db      	ldr	r3, [r3, #12]
 800402a:	4798      	blx	r3
    if (*currentTrans)
 800402c:	f8d9 0000 	ldr.w	r0, [r9]
 8004030:	b110      	cbz	r0, 8004038 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8004032:	6803      	ldr	r3, [r0, #0]
 8004034:	681b      	ldr	r3, [r3, #0]
 8004036:	4798      	blx	r3
    if (*currentScreen)
 8004038:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004100 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x13c>
 800403c:	f8d8 0000 	ldr.w	r0, [r8]
 8004040:	b110      	cbz	r0, 8004048 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004042:	6803      	ldr	r3, [r0, #0]
 8004044:	695b      	ldr	r3, [r3, #20]
 8004046:	4798      	blx	r3
    if (*currentPresenter)
 8004048:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800404c:	b110      	cbz	r0, 8004054 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800404e:	6803      	ldr	r3, [r0, #0]
 8004050:	685b      	ldr	r3, [r3, #4]
 8004052:	4798      	blx	r3
    if (*currentScreen)
 8004054:	f8d8 0000 	ldr.w	r0, [r8]
 8004058:	b110      	cbz	r0, 8004060 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 800405a:	6803      	ldr	r3, [r0, #0]
 800405c:	681b      	ldr	r3, [r3, #0]
 800405e:	4798      	blx	r3
    if (*currentPresenter)
 8004060:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004064:	b110      	cbz	r0, 800406c <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004066:	6803      	ldr	r3, [r0, #0]
 8004068:	689b      	ldr	r3, [r3, #8]
 800406a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800406c:	68e0      	ldr	r0, [r4, #12]
 800406e:	2100      	movs	r1, #0
 8004070:	f7ff fed6 	bl	8003e20 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004074:	2114      	movs	r1, #20
 8004076:	4605      	mov	r5, r0
 8004078:	f7ff fed6 	bl	8003e28 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800407c:	68a0      	ldr	r0, [r4, #8]
 800407e:	6803      	ldr	r3, [r0, #0]
 8004080:	2100      	movs	r1, #0
 8004082:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004084:	4798      	blx	r3
 8004086:	4606      	mov	r6, r0
 8004088:	f003 fe12 	bl	8007cb0 <_ZN20Calibration_HallViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800408c:	6860      	ldr	r0, [r4, #4]
 800408e:	6803      	ldr	r3, [r0, #0]
 8004090:	2100      	movs	r1, #0
 8004092:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004094:	4798      	blx	r3
 8004096:	4631      	mov	r1, r6
 8004098:	4604      	mov	r4, r0
 800409a:	f003 fde3 	bl	8007c64 <_ZN25Calibration_HallPresenterC1ER20Calibration_HallView>
    *currentTrans = newTransition;
 800409e:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80040a2:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80040a6:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80040aa:	b1dc      	cbz	r4, 80040e4 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x120>
 80040ac:	1d23      	adds	r3, r4, #4
 80040ae:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80040b2:	6833      	ldr	r3, [r6, #0]
 80040b4:	f8c4 a008 	str.w	sl, [r4, #8]
 80040b8:	4630      	mov	r0, r6
 80040ba:	68db      	ldr	r3, [r3, #12]
 80040bc:	63f4      	str	r4, [r6, #60]	; 0x3c
 80040be:	4798      	blx	r3
    newPresenter->activate();
 80040c0:	6823      	ldr	r3, [r4, #0]
 80040c2:	4620      	mov	r0, r4
 80040c4:	681b      	ldr	r3, [r3, #0]
 80040c6:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80040c8:	4629      	mov	r1, r5
 80040ca:	4630      	mov	r0, r6
 80040cc:	f012 fb24 	bl	8016718 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80040d0:	682b      	ldr	r3, [r5, #0]
 80040d2:	4628      	mov	r0, r5
 80040d4:	691b      	ldr	r3, [r3, #16]
 80040d6:	4798      	blx	r3
    newTransition->invalidate();
 80040d8:	682b      	ldr	r3, [r5, #0]
 80040da:	4628      	mov	r0, r5
 80040dc:	695b      	ldr	r3, [r3, #20]
}
 80040de:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80040e2:	4718      	bx	r3
    model->bind(newPresenter);
 80040e4:	4623      	mov	r3, r4
 80040e6:	e7e2      	b.n	80040ae <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0xea>
 80040e8:	08029f04 	.word	0x08029f04
 80040ec:	0802a8db 	.word	0x0802a8db
 80040f0:	0802a0a0 	.word	0x0802a0a0
 80040f4:	0802a0e7 	.word	0x0802a0e7
 80040f8:	0802a18a 	.word	0x0802a18a
 80040fc:	20013804 	.word	0x20013804
 8004100:	20013800 	.word	0x20013800

08004104 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv>:
{
 8004104:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Calibration_PadView, Calibration_PadPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004108:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 800410c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800410e:	68a0      	ldr	r0, [r4, #8]
 8004110:	6803      	ldr	r3, [r0, #0]
 8004112:	6a1b      	ldr	r3, [r3, #32]
 8004114:	4798      	blx	r3
 8004116:	f241 035b 	movw	r3, #4187	; 0x105b
 800411a:	4298      	cmp	r0, r3
 800411c:	d805      	bhi.n	800412a <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x26>
 800411e:	4b42      	ldr	r3, [pc, #264]	; (8004228 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x124>)
 8004120:	4a42      	ldr	r2, [pc, #264]	; (800422c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 8004122:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004124:	4842      	ldr	r0, [pc, #264]	; (8004230 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x12c>)
 8004126:	f024 f81b 	bl	8028160 <__assert_func>
 800412a:	6860      	ldr	r0, [r4, #4]
 800412c:	6803      	ldr	r3, [r0, #0]
 800412e:	6a1b      	ldr	r3, [r3, #32]
 8004130:	4798      	blx	r3
 8004132:	280f      	cmp	r0, #15
 8004134:	d803      	bhi.n	800413e <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x3a>
 8004136:	4b3f      	ldr	r3, [pc, #252]	; (8004234 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x130>)
 8004138:	4a3c      	ldr	r2, [pc, #240]	; (800422c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 800413a:	21a4      	movs	r1, #164	; 0xa4
 800413c:	e7f2      	b.n	8004124 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800413e:	68e0      	ldr	r0, [r4, #12]
 8004140:	6803      	ldr	r3, [r0, #0]
 8004142:	6a1b      	ldr	r3, [r3, #32]
 8004144:	4798      	blx	r3
 8004146:	2837      	cmp	r0, #55	; 0x37
 8004148:	d803      	bhi.n	8004152 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x4e>
 800414a:	4b3b      	ldr	r3, [pc, #236]	; (8004238 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x134>)
 800414c:	4a37      	ldr	r2, [pc, #220]	; (800422c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 800414e:	21a5      	movs	r1, #165	; 0xa5
 8004150:	e7e8      	b.n	8004124 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004152:	f010 fcb5 	bl	8014ac0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004156:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 800423c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x138>
 800415a:	3004      	adds	r0, #4
 800415c:	f010 fd16 	bl	8014b8c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004160:	f8d9 0000 	ldr.w	r0, [r9]
 8004164:	b110      	cbz	r0, 800416c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004166:	6803      	ldr	r3, [r0, #0]
 8004168:	68db      	ldr	r3, [r3, #12]
 800416a:	4798      	blx	r3
    if (*currentTrans)
 800416c:	f8d9 0000 	ldr.w	r0, [r9]
 8004170:	b110      	cbz	r0, 8004178 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8004172:	6803      	ldr	r3, [r0, #0]
 8004174:	681b      	ldr	r3, [r3, #0]
 8004176:	4798      	blx	r3
    if (*currentScreen)
 8004178:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004240 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x13c>
 800417c:	f8d8 0000 	ldr.w	r0, [r8]
 8004180:	b110      	cbz	r0, 8004188 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004182:	6803      	ldr	r3, [r0, #0]
 8004184:	695b      	ldr	r3, [r3, #20]
 8004186:	4798      	blx	r3
    if (*currentPresenter)
 8004188:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800418c:	b110      	cbz	r0, 8004194 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800418e:	6803      	ldr	r3, [r0, #0]
 8004190:	685b      	ldr	r3, [r3, #4]
 8004192:	4798      	blx	r3
    if (*currentScreen)
 8004194:	f8d8 0000 	ldr.w	r0, [r8]
 8004198:	b110      	cbz	r0, 80041a0 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 800419a:	6803      	ldr	r3, [r0, #0]
 800419c:	681b      	ldr	r3, [r3, #0]
 800419e:	4798      	blx	r3
    if (*currentPresenter)
 80041a0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80041a4:	b110      	cbz	r0, 80041ac <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80041a6:	6803      	ldr	r3, [r0, #0]
 80041a8:	689b      	ldr	r3, [r3, #8]
 80041aa:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80041ac:	68e0      	ldr	r0, [r4, #12]
 80041ae:	2100      	movs	r1, #0
 80041b0:	f7ff fe36 	bl	8003e20 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80041b4:	2114      	movs	r1, #20
 80041b6:	4605      	mov	r5, r0
 80041b8:	f7ff fe36 	bl	8003e28 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80041bc:	68a0      	ldr	r0, [r4, #8]
 80041be:	6803      	ldr	r3, [r0, #0]
 80041c0:	2100      	movs	r1, #0
 80041c2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80041c4:	4798      	blx	r3
 80041c6:	4606      	mov	r6, r0
 80041c8:	f003 fdb4 	bl	8007d34 <_ZN19Calibration_PadViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80041cc:	6860      	ldr	r0, [r4, #4]
 80041ce:	6803      	ldr	r3, [r0, #0]
 80041d0:	2100      	movs	r1, #0
 80041d2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80041d4:	4798      	blx	r3
 80041d6:	4631      	mov	r1, r6
 80041d8:	4604      	mov	r4, r0
 80041da:	f003 fd85 	bl	8007ce8 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>
    *currentTrans = newTransition;
 80041de:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80041e2:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80041e6:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80041ea:	b1dc      	cbz	r4, 8004224 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x120>
 80041ec:	1d23      	adds	r3, r4, #4
 80041ee:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80041f2:	6833      	ldr	r3, [r6, #0]
 80041f4:	f8c4 a008 	str.w	sl, [r4, #8]
 80041f8:	4630      	mov	r0, r6
 80041fa:	68db      	ldr	r3, [r3, #12]
 80041fc:	63f4      	str	r4, [r6, #60]	; 0x3c
 80041fe:	4798      	blx	r3
    newPresenter->activate();
 8004200:	6823      	ldr	r3, [r4, #0]
 8004202:	4620      	mov	r0, r4
 8004204:	681b      	ldr	r3, [r3, #0]
 8004206:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004208:	4629      	mov	r1, r5
 800420a:	4630      	mov	r0, r6
 800420c:	f012 fa84 	bl	8016718 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004210:	682b      	ldr	r3, [r5, #0]
 8004212:	4628      	mov	r0, r5
 8004214:	691b      	ldr	r3, [r3, #16]
 8004216:	4798      	blx	r3
    newTransition->invalidate();
 8004218:	682b      	ldr	r3, [r5, #0]
 800421a:	4628      	mov	r0, r5
 800421c:	695b      	ldr	r3, [r3, #20]
}
 800421e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004222:	4718      	bx	r3
    model->bind(newPresenter);
 8004224:	4623      	mov	r3, r4
 8004226:	e7e2      	b.n	80041ee <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xea>
 8004228:	08029f04 	.word	0x08029f04
 800422c:	0802aa03 	.word	0x0802aa03
 8004230:	0802a0a0 	.word	0x0802a0a0
 8004234:	0802a0e7 	.word	0x0802a0e7
 8004238:	0802a18a 	.word	0x0802a18a
 800423c:	20013804 	.word	0x20013804
 8004240:	20013800 	.word	0x20013800

08004244 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv>:
{
 8004244:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<CalibrationView, CalibrationPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004248:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 800424c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800424e:	68a0      	ldr	r0, [r4, #8]
 8004250:	6803      	ldr	r3, [r0, #0]
 8004252:	6a1b      	ldr	r3, [r3, #32]
 8004254:	4798      	blx	r3
 8004256:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 800425a:	d205      	bcs.n	8004268 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x24>
 800425c:	4b42      	ldr	r3, [pc, #264]	; (8004368 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x124>)
 800425e:	4a43      	ldr	r2, [pc, #268]	; (800436c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 8004260:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004262:	4843      	ldr	r0, [pc, #268]	; (8004370 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x12c>)
 8004264:	f023 ff7c 	bl	8028160 <__assert_func>
 8004268:	6860      	ldr	r0, [r4, #4]
 800426a:	6803      	ldr	r3, [r0, #0]
 800426c:	6a1b      	ldr	r3, [r3, #32]
 800426e:	4798      	blx	r3
 8004270:	280f      	cmp	r0, #15
 8004272:	d803      	bhi.n	800427c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x38>
 8004274:	4b3f      	ldr	r3, [pc, #252]	; (8004374 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x130>)
 8004276:	4a3d      	ldr	r2, [pc, #244]	; (800436c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 8004278:	21a4      	movs	r1, #164	; 0xa4
 800427a:	e7f2      	b.n	8004262 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800427c:	68e0      	ldr	r0, [r4, #12]
 800427e:	6803      	ldr	r3, [r0, #0]
 8004280:	6a1b      	ldr	r3, [r3, #32]
 8004282:	4798      	blx	r3
 8004284:	2837      	cmp	r0, #55	; 0x37
 8004286:	d803      	bhi.n	8004290 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x4c>
 8004288:	4b3b      	ldr	r3, [pc, #236]	; (8004378 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x134>)
 800428a:	4a38      	ldr	r2, [pc, #224]	; (800436c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 800428c:	21a5      	movs	r1, #165	; 0xa5
 800428e:	e7e8      	b.n	8004262 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004290:	f010 fc16 	bl	8014ac0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004294:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 800437c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x138>
 8004298:	3004      	adds	r0, #4
 800429a:	f010 fc77 	bl	8014b8c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800429e:	f8d9 0000 	ldr.w	r0, [r9]
 80042a2:	b110      	cbz	r0, 80042aa <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 80042a4:	6803      	ldr	r3, [r0, #0]
 80042a6:	68db      	ldr	r3, [r3, #12]
 80042a8:	4798      	blx	r3
    if (*currentTrans)
 80042aa:	f8d9 0000 	ldr.w	r0, [r9]
 80042ae:	b110      	cbz	r0, 80042b6 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 80042b0:	6803      	ldr	r3, [r0, #0]
 80042b2:	681b      	ldr	r3, [r3, #0]
 80042b4:	4798      	blx	r3
    if (*currentScreen)
 80042b6:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004380 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x13c>
 80042ba:	f8d8 0000 	ldr.w	r0, [r8]
 80042be:	b110      	cbz	r0, 80042c6 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 80042c0:	6803      	ldr	r3, [r0, #0]
 80042c2:	695b      	ldr	r3, [r3, #20]
 80042c4:	4798      	blx	r3
    if (*currentPresenter)
 80042c6:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80042ca:	b110      	cbz	r0, 80042d2 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 80042cc:	6803      	ldr	r3, [r0, #0]
 80042ce:	685b      	ldr	r3, [r3, #4]
 80042d0:	4798      	blx	r3
    if (*currentScreen)
 80042d2:	f8d8 0000 	ldr.w	r0, [r8]
 80042d6:	b110      	cbz	r0, 80042de <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 80042d8:	6803      	ldr	r3, [r0, #0]
 80042da:	681b      	ldr	r3, [r3, #0]
 80042dc:	4798      	blx	r3
    if (*currentPresenter)
 80042de:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80042e2:	b110      	cbz	r0, 80042ea <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80042e4:	6803      	ldr	r3, [r0, #0]
 80042e6:	689b      	ldr	r3, [r3, #8]
 80042e8:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80042ea:	68e0      	ldr	r0, [r4, #12]
 80042ec:	2100      	movs	r1, #0
 80042ee:	f7ff fd97 	bl	8003e20 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80042f2:	2114      	movs	r1, #20
 80042f4:	4605      	mov	r5, r0
 80042f6:	f7ff fd97 	bl	8003e28 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80042fa:	68a0      	ldr	r0, [r4, #8]
 80042fc:	6803      	ldr	r3, [r0, #0]
 80042fe:	2100      	movs	r1, #0
 8004300:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004302:	4798      	blx	r3
 8004304:	4606      	mov	r6, r0
 8004306:	f003 fc79 	bl	8007bfc <_ZN15CalibrationViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800430a:	6860      	ldr	r0, [r4, #4]
 800430c:	6803      	ldr	r3, [r0, #0]
 800430e:	2100      	movs	r1, #0
 8004310:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004312:	4798      	blx	r3
 8004314:	4631      	mov	r1, r6
 8004316:	4604      	mov	r4, r0
 8004318:	f003 fc4a 	bl	8007bb0 <_ZN20CalibrationPresenterC1ER15CalibrationView>
    *currentTrans = newTransition;
 800431c:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004320:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004324:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004328:	b1dc      	cbz	r4, 8004362 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x11e>
 800432a:	1d23      	adds	r3, r4, #4
 800432c:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004330:	6833      	ldr	r3, [r6, #0]
 8004332:	f8c4 a008 	str.w	sl, [r4, #8]
 8004336:	4630      	mov	r0, r6
 8004338:	68db      	ldr	r3, [r3, #12]
 800433a:	63f4      	str	r4, [r6, #60]	; 0x3c
 800433c:	4798      	blx	r3
    newPresenter->activate();
 800433e:	6823      	ldr	r3, [r4, #0]
 8004340:	4620      	mov	r0, r4
 8004342:	681b      	ldr	r3, [r3, #0]
 8004344:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004346:	4629      	mov	r1, r5
 8004348:	4630      	mov	r0, r6
 800434a:	f012 f9e5 	bl	8016718 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800434e:	682b      	ldr	r3, [r5, #0]
 8004350:	4628      	mov	r0, r5
 8004352:	691b      	ldr	r3, [r3, #16]
 8004354:	4798      	blx	r3
    newTransition->invalidate();
 8004356:	682b      	ldr	r3, [r5, #0]
 8004358:	4628      	mov	r0, r5
 800435a:	695b      	ldr	r3, [r3, #20]
}
 800435c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004360:	4718      	bx	r3
    model->bind(newPresenter);
 8004362:	4623      	mov	r3, r4
 8004364:	e7e2      	b.n	800432c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0xe8>
 8004366:	bf00      	nop
 8004368:	08029f04 	.word	0x08029f04
 800436c:	0802ab29 	.word	0x0802ab29
 8004370:	0802a0a0 	.word	0x0802a0a0
 8004374:	0802a0e7 	.word	0x0802a0e7
 8004378:	0802a18a 	.word	0x0802a18a
 800437c:	20013804 	.word	0x20013804
 8004380:	20013800 	.word	0x20013800

08004384 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv>:
{
 8004384:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_Display_2View, Measurement_Accurate_Display_2Presenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004388:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 800438c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800438e:	68a0      	ldr	r0, [r4, #8]
 8004390:	6803      	ldr	r3, [r0, #0]
 8004392:	6a1b      	ldr	r3, [r3, #32]
 8004394:	4798      	blx	r3
 8004396:	f241 33e3 	movw	r3, #5091	; 0x13e3
 800439a:	4298      	cmp	r0, r3
 800439c:	d805      	bhi.n	80043aa <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x26>
 800439e:	4b42      	ldr	r3, [pc, #264]	; (80044a8 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x124>)
 80043a0:	4a42      	ldr	r2, [pc, #264]	; (80044ac <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 80043a2:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80043a4:	4842      	ldr	r0, [pc, #264]	; (80044b0 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x12c>)
 80043a6:	f023 fedb 	bl	8028160 <__assert_func>
 80043aa:	6860      	ldr	r0, [r4, #4]
 80043ac:	6803      	ldr	r3, [r0, #0]
 80043ae:	6a1b      	ldr	r3, [r3, #32]
 80043b0:	4798      	blx	r3
 80043b2:	280f      	cmp	r0, #15
 80043b4:	d803      	bhi.n	80043be <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x3a>
 80043b6:	4b3f      	ldr	r3, [pc, #252]	; (80044b4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x130>)
 80043b8:	4a3c      	ldr	r2, [pc, #240]	; (80044ac <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 80043ba:	21a4      	movs	r1, #164	; 0xa4
 80043bc:	e7f2      	b.n	80043a4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80043be:	68e0      	ldr	r0, [r4, #12]
 80043c0:	6803      	ldr	r3, [r0, #0]
 80043c2:	6a1b      	ldr	r3, [r3, #32]
 80043c4:	4798      	blx	r3
 80043c6:	2837      	cmp	r0, #55	; 0x37
 80043c8:	d803      	bhi.n	80043d2 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x4e>
 80043ca:	4b3b      	ldr	r3, [pc, #236]	; (80044b8 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x134>)
 80043cc:	4a37      	ldr	r2, [pc, #220]	; (80044ac <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 80043ce:	21a5      	movs	r1, #165	; 0xa5
 80043d0:	e7e8      	b.n	80043a4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80043d2:	f010 fb75 	bl	8014ac0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80043d6:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80044bc <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x138>
 80043da:	3004      	adds	r0, #4
 80043dc:	f010 fbd6 	bl	8014b8c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80043e0:	f8d9 0000 	ldr.w	r0, [r9]
 80043e4:	b110      	cbz	r0, 80043ec <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80043e6:	6803      	ldr	r3, [r0, #0]
 80043e8:	68db      	ldr	r3, [r3, #12]
 80043ea:	4798      	blx	r3
    if (*currentTrans)
 80043ec:	f8d9 0000 	ldr.w	r0, [r9]
 80043f0:	b110      	cbz	r0, 80043f8 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80043f2:	6803      	ldr	r3, [r0, #0]
 80043f4:	681b      	ldr	r3, [r3, #0]
 80043f6:	4798      	blx	r3
    if (*currentScreen)
 80043f8:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80044c0 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x13c>
 80043fc:	f8d8 0000 	ldr.w	r0, [r8]
 8004400:	b110      	cbz	r0, 8004408 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004402:	6803      	ldr	r3, [r0, #0]
 8004404:	695b      	ldr	r3, [r3, #20]
 8004406:	4798      	blx	r3
    if (*currentPresenter)
 8004408:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800440c:	b110      	cbz	r0, 8004414 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800440e:	6803      	ldr	r3, [r0, #0]
 8004410:	685b      	ldr	r3, [r3, #4]
 8004412:	4798      	blx	r3
    if (*currentScreen)
 8004414:	f8d8 0000 	ldr.w	r0, [r8]
 8004418:	b110      	cbz	r0, 8004420 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 800441a:	6803      	ldr	r3, [r0, #0]
 800441c:	681b      	ldr	r3, [r3, #0]
 800441e:	4798      	blx	r3
    if (*currentPresenter)
 8004420:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004424:	b110      	cbz	r0, 800442c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004426:	6803      	ldr	r3, [r0, #0]
 8004428:	689b      	ldr	r3, [r3, #8]
 800442a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800442c:	68e0      	ldr	r0, [r4, #12]
 800442e:	2100      	movs	r1, #0
 8004430:	f7ff fcf6 	bl	8003e20 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004434:	2114      	movs	r1, #20
 8004436:	4605      	mov	r5, r0
 8004438:	f7ff fcf6 	bl	8003e28 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800443c:	68a0      	ldr	r0, [r4, #8]
 800443e:	6803      	ldr	r3, [r0, #0]
 8004440:	2100      	movs	r1, #0
 8004442:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004444:	4798      	blx	r3
 8004446:	4606      	mov	r6, r0
 8004448:	f003 fe58 	bl	80080fc <_ZN34Measurement_Accurate_Display_2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800444c:	6860      	ldr	r0, [r4, #4]
 800444e:	6803      	ldr	r3, [r0, #0]
 8004450:	2100      	movs	r1, #0
 8004452:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004454:	4798      	blx	r3
 8004456:	4631      	mov	r1, r6
 8004458:	4604      	mov	r4, r0
 800445a:	f003 fe29 	bl	80080b0 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>
    *currentTrans = newTransition;
 800445e:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004462:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004466:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800446a:	b1dc      	cbz	r4, 80044a4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x120>
 800446c:	1d23      	adds	r3, r4, #4
 800446e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004472:	6833      	ldr	r3, [r6, #0]
 8004474:	f8c4 a008 	str.w	sl, [r4, #8]
 8004478:	4630      	mov	r0, r6
 800447a:	68db      	ldr	r3, [r3, #12]
 800447c:	63f4      	str	r4, [r6, #60]	; 0x3c
 800447e:	4798      	blx	r3
    newPresenter->activate();
 8004480:	6823      	ldr	r3, [r4, #0]
 8004482:	4620      	mov	r0, r4
 8004484:	681b      	ldr	r3, [r3, #0]
 8004486:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004488:	4629      	mov	r1, r5
 800448a:	4630      	mov	r0, r6
 800448c:	f012 f944 	bl	8016718 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004490:	682b      	ldr	r3, [r5, #0]
 8004492:	4628      	mov	r0, r5
 8004494:	691b      	ldr	r3, [r3, #16]
 8004496:	4798      	blx	r3
    newTransition->invalidate();
 8004498:	682b      	ldr	r3, [r5, #0]
 800449a:	4628      	mov	r0, r5
 800449c:	695b      	ldr	r3, [r3, #20]
}
 800449e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80044a2:	4718      	bx	r3
    model->bind(newPresenter);
 80044a4:	4623      	mov	r3, r4
 80044a6:	e7e2      	b.n	800446e <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xea>
 80044a8:	08029f04 	.word	0x08029f04
 80044ac:	0802ac47 	.word	0x0802ac47
 80044b0:	0802a0a0 	.word	0x0802a0a0
 80044b4:	0802a0e7 	.word	0x0802a0e7
 80044b8:	0802a18a 	.word	0x0802a18a
 80044bc:	20013804 	.word	0x20013804
 80044c0:	20013800 	.word	0x20013800

080044c4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv>:
{
 80044c4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_DisplayView, Measurement_Accurate_DisplayPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80044c8:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80044cc:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80044ce:	68a0      	ldr	r0, [r4, #8]
 80044d0:	6803      	ldr	r3, [r0, #0]
 80044d2:	6a1b      	ldr	r3, [r3, #32]
 80044d4:	4798      	blx	r3
 80044d6:	f241 33e3 	movw	r3, #5091	; 0x13e3
 80044da:	4298      	cmp	r0, r3
 80044dc:	d805      	bhi.n	80044ea <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x26>
 80044de:	4b42      	ldr	r3, [pc, #264]	; (80045e8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x124>)
 80044e0:	4a42      	ldr	r2, [pc, #264]	; (80045ec <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 80044e2:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80044e4:	4842      	ldr	r0, [pc, #264]	; (80045f0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x12c>)
 80044e6:	f023 fe3b 	bl	8028160 <__assert_func>
 80044ea:	6860      	ldr	r0, [r4, #4]
 80044ec:	6803      	ldr	r3, [r0, #0]
 80044ee:	6a1b      	ldr	r3, [r3, #32]
 80044f0:	4798      	blx	r3
 80044f2:	280f      	cmp	r0, #15
 80044f4:	d803      	bhi.n	80044fe <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x3a>
 80044f6:	4b3f      	ldr	r3, [pc, #252]	; (80045f4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x130>)
 80044f8:	4a3c      	ldr	r2, [pc, #240]	; (80045ec <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 80044fa:	21a4      	movs	r1, #164	; 0xa4
 80044fc:	e7f2      	b.n	80044e4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80044fe:	68e0      	ldr	r0, [r4, #12]
 8004500:	6803      	ldr	r3, [r0, #0]
 8004502:	6a1b      	ldr	r3, [r3, #32]
 8004504:	4798      	blx	r3
 8004506:	2837      	cmp	r0, #55	; 0x37
 8004508:	d803      	bhi.n	8004512 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x4e>
 800450a:	4b3b      	ldr	r3, [pc, #236]	; (80045f8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x134>)
 800450c:	4a37      	ldr	r2, [pc, #220]	; (80045ec <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 800450e:	21a5      	movs	r1, #165	; 0xa5
 8004510:	e7e8      	b.n	80044e4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004512:	f010 fad5 	bl	8014ac0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004516:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80045fc <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x138>
 800451a:	3004      	adds	r0, #4
 800451c:	f010 fb36 	bl	8014b8c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004520:	f8d9 0000 	ldr.w	r0, [r9]
 8004524:	b110      	cbz	r0, 800452c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004526:	6803      	ldr	r3, [r0, #0]
 8004528:	68db      	ldr	r3, [r3, #12]
 800452a:	4798      	blx	r3
    if (*currentTrans)
 800452c:	f8d9 0000 	ldr.w	r0, [r9]
 8004530:	b110      	cbz	r0, 8004538 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8004532:	6803      	ldr	r3, [r0, #0]
 8004534:	681b      	ldr	r3, [r3, #0]
 8004536:	4798      	blx	r3
    if (*currentScreen)
 8004538:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004600 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x13c>
 800453c:	f8d8 0000 	ldr.w	r0, [r8]
 8004540:	b110      	cbz	r0, 8004548 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004542:	6803      	ldr	r3, [r0, #0]
 8004544:	695b      	ldr	r3, [r3, #20]
 8004546:	4798      	blx	r3
    if (*currentPresenter)
 8004548:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800454c:	b110      	cbz	r0, 8004554 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800454e:	6803      	ldr	r3, [r0, #0]
 8004550:	685b      	ldr	r3, [r3, #4]
 8004552:	4798      	blx	r3
    if (*currentScreen)
 8004554:	f8d8 0000 	ldr.w	r0, [r8]
 8004558:	b110      	cbz	r0, 8004560 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 800455a:	6803      	ldr	r3, [r0, #0]
 800455c:	681b      	ldr	r3, [r3, #0]
 800455e:	4798      	blx	r3
    if (*currentPresenter)
 8004560:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004564:	b110      	cbz	r0, 800456c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004566:	6803      	ldr	r3, [r0, #0]
 8004568:	689b      	ldr	r3, [r3, #8]
 800456a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800456c:	68e0      	ldr	r0, [r4, #12]
 800456e:	2100      	movs	r1, #0
 8004570:	f7ff fc56 	bl	8003e20 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004574:	2114      	movs	r1, #20
 8004576:	4605      	mov	r5, r0
 8004578:	f7ff fc56 	bl	8003e28 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800457c:	68a0      	ldr	r0, [r4, #8]
 800457e:	6803      	ldr	r3, [r0, #0]
 8004580:	2100      	movs	r1, #0
 8004582:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004584:	4798      	blx	r3
 8004586:	4606      	mov	r6, r0
 8004588:	f003 fd76 	bl	8008078 <_ZN32Measurement_Accurate_DisplayViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800458c:	6860      	ldr	r0, [r4, #4]
 800458e:	6803      	ldr	r3, [r0, #0]
 8004590:	2100      	movs	r1, #0
 8004592:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004594:	4798      	blx	r3
 8004596:	4631      	mov	r1, r6
 8004598:	4604      	mov	r4, r0
 800459a:	f003 fd47 	bl	800802c <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>
    *currentTrans = newTransition;
 800459e:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80045a2:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80045a6:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80045aa:	b1dc      	cbz	r4, 80045e4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x120>
 80045ac:	1d23      	adds	r3, r4, #4
 80045ae:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80045b2:	6833      	ldr	r3, [r6, #0]
 80045b4:	f8c4 a008 	str.w	sl, [r4, #8]
 80045b8:	4630      	mov	r0, r6
 80045ba:	68db      	ldr	r3, [r3, #12]
 80045bc:	63f4      	str	r4, [r6, #60]	; 0x3c
 80045be:	4798      	blx	r3
    newPresenter->activate();
 80045c0:	6823      	ldr	r3, [r4, #0]
 80045c2:	4620      	mov	r0, r4
 80045c4:	681b      	ldr	r3, [r3, #0]
 80045c6:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80045c8:	4629      	mov	r1, r5
 80045ca:	4630      	mov	r0, r6
 80045cc:	f012 f8a4 	bl	8016718 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80045d0:	682b      	ldr	r3, [r5, #0]
 80045d2:	4628      	mov	r0, r5
 80045d4:	691b      	ldr	r3, [r3, #16]
 80045d6:	4798      	blx	r3
    newTransition->invalidate();
 80045d8:	682b      	ldr	r3, [r5, #0]
 80045da:	4628      	mov	r0, r5
 80045dc:	695b      	ldr	r3, [r3, #20]
}
 80045de:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80045e2:	4718      	bx	r3
    model->bind(newPresenter);
 80045e4:	4623      	mov	r3, r4
 80045e6:	e7e2      	b.n	80045ae <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xea>
 80045e8:	08029f04 	.word	0x08029f04
 80045ec:	0802ad8b 	.word	0x0802ad8b
 80045f0:	0802a0a0 	.word	0x0802a0a0
 80045f4:	0802a0e7 	.word	0x0802a0e7
 80045f8:	0802a18a 	.word	0x0802a18a
 80045fc:	20013804 	.word	0x20013804
 8004600:	20013800 	.word	0x20013800

08004604 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv>:
{
 8004604:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004608:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 800460c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800460e:	68a0      	ldr	r0, [r4, #8]
 8004610:	6803      	ldr	r3, [r0, #0]
 8004612:	6a1b      	ldr	r3, [r3, #32]
 8004614:	4798      	blx	r3
 8004616:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 800461a:	d205      	bcs.n	8004628 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x24>
 800461c:	4b42      	ldr	r3, [pc, #264]	; (8004728 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x124>)
 800461e:	4a43      	ldr	r2, [pc, #268]	; (800472c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 8004620:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004622:	4843      	ldr	r0, [pc, #268]	; (8004730 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x12c>)
 8004624:	f023 fd9c 	bl	8028160 <__assert_func>
 8004628:	6860      	ldr	r0, [r4, #4]
 800462a:	6803      	ldr	r3, [r0, #0]
 800462c:	6a1b      	ldr	r3, [r3, #32]
 800462e:	4798      	blx	r3
 8004630:	280f      	cmp	r0, #15
 8004632:	d803      	bhi.n	800463c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x38>
 8004634:	4b3f      	ldr	r3, [pc, #252]	; (8004734 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x130>)
 8004636:	4a3d      	ldr	r2, [pc, #244]	; (800472c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 8004638:	21a4      	movs	r1, #164	; 0xa4
 800463a:	e7f2      	b.n	8004622 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800463c:	68e0      	ldr	r0, [r4, #12]
 800463e:	6803      	ldr	r3, [r0, #0]
 8004640:	6a1b      	ldr	r3, [r3, #32]
 8004642:	4798      	blx	r3
 8004644:	2837      	cmp	r0, #55	; 0x37
 8004646:	d803      	bhi.n	8004650 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x4c>
 8004648:	4b3b      	ldr	r3, [pc, #236]	; (8004738 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x134>)
 800464a:	4a38      	ldr	r2, [pc, #224]	; (800472c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 800464c:	21a5      	movs	r1, #165	; 0xa5
 800464e:	e7e8      	b.n	8004622 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004650:	f010 fa36 	bl	8014ac0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004654:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 800473c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x138>
 8004658:	3004      	adds	r0, #4
 800465a:	f010 fa97 	bl	8014b8c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800465e:	f8d9 0000 	ldr.w	r0, [r9]
 8004662:	b110      	cbz	r0, 800466a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8004664:	6803      	ldr	r3, [r0, #0]
 8004666:	68db      	ldr	r3, [r3, #12]
 8004668:	4798      	blx	r3
    if (*currentTrans)
 800466a:	f8d9 0000 	ldr.w	r0, [r9]
 800466e:	b110      	cbz	r0, 8004676 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8004670:	6803      	ldr	r3, [r0, #0]
 8004672:	681b      	ldr	r3, [r3, #0]
 8004674:	4798      	blx	r3
    if (*currentScreen)
 8004676:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004740 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x13c>
 800467a:	f8d8 0000 	ldr.w	r0, [r8]
 800467e:	b110      	cbz	r0, 8004686 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004680:	6803      	ldr	r3, [r0, #0]
 8004682:	695b      	ldr	r3, [r3, #20]
 8004684:	4798      	blx	r3
    if (*currentPresenter)
 8004686:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800468a:	b110      	cbz	r0, 8004692 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 800468c:	6803      	ldr	r3, [r0, #0]
 800468e:	685b      	ldr	r3, [r3, #4]
 8004690:	4798      	blx	r3
    if (*currentScreen)
 8004692:	f8d8 0000 	ldr.w	r0, [r8]
 8004696:	b110      	cbz	r0, 800469e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004698:	6803      	ldr	r3, [r0, #0]
 800469a:	681b      	ldr	r3, [r3, #0]
 800469c:	4798      	blx	r3
    if (*currentPresenter)
 800469e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80046a2:	b110      	cbz	r0, 80046aa <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80046a4:	6803      	ldr	r3, [r0, #0]
 80046a6:	689b      	ldr	r3, [r3, #8]
 80046a8:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80046aa:	68e0      	ldr	r0, [r4, #12]
 80046ac:	2100      	movs	r1, #0
 80046ae:	f7ff fbb7 	bl	8003e20 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80046b2:	2114      	movs	r1, #20
 80046b4:	4605      	mov	r5, r0
 80046b6:	f7ff fbb7 	bl	8003e28 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80046ba:	68a0      	ldr	r0, [r4, #8]
 80046bc:	6803      	ldr	r3, [r0, #0]
 80046be:	2100      	movs	r1, #0
 80046c0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80046c2:	4798      	blx	r3
 80046c4:	4606      	mov	r6, r0
 80046c6:	f003 fc7d 	bl	8007fc4 <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80046ca:	6860      	ldr	r0, [r4, #4]
 80046cc:	6803      	ldr	r3, [r0, #0]
 80046ce:	2100      	movs	r1, #0
 80046d0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80046d2:	4798      	blx	r3
 80046d4:	4631      	mov	r1, r6
 80046d6:	4604      	mov	r4, r0
 80046d8:	f003 fc4e 	bl	8007f78 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 80046dc:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80046e0:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80046e4:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80046e8:	b1dc      	cbz	r4, 8004722 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x11e>
 80046ea:	1d23      	adds	r3, r4, #4
 80046ec:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80046f0:	6833      	ldr	r3, [r6, #0]
 80046f2:	f8c4 a008 	str.w	sl, [r4, #8]
 80046f6:	4630      	mov	r0, r6
 80046f8:	68db      	ldr	r3, [r3, #12]
 80046fa:	63f4      	str	r4, [r6, #60]	; 0x3c
 80046fc:	4798      	blx	r3
    newPresenter->activate();
 80046fe:	6823      	ldr	r3, [r4, #0]
 8004700:	4620      	mov	r0, r4
 8004702:	681b      	ldr	r3, [r3, #0]
 8004704:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004706:	4629      	mov	r1, r5
 8004708:	4630      	mov	r0, r6
 800470a:	f012 f805 	bl	8016718 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800470e:	682b      	ldr	r3, [r5, #0]
 8004710:	4628      	mov	r0, r5
 8004712:	691b      	ldr	r3, [r3, #16]
 8004714:	4798      	blx	r3
    newTransition->invalidate();
 8004716:	682b      	ldr	r3, [r5, #0]
 8004718:	4628      	mov	r0, r5
 800471a:	695b      	ldr	r3, [r3, #20]
}
 800471c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004720:	4718      	bx	r3
    model->bind(newPresenter);
 8004722:	4623      	mov	r3, r4
 8004724:	e7e2      	b.n	80046ec <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xe8>
 8004726:	bf00      	nop
 8004728:	08029f04 	.word	0x08029f04
 800472c:	0802aecb 	.word	0x0802aecb
 8004730:	0802a0a0 	.word	0x0802a0a0
 8004734:	0802a0e7 	.word	0x0802a0e7
 8004738:	0802a18a 	.word	0x0802a18a
 800473c:	20013804 	.word	0x20013804
 8004740:	20013800 	.word	0x20013800

08004744 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv>:
{
 8004744:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_3PView, Measurement_Single_Display_3PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004748:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 800474c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800474e:	68a0      	ldr	r0, [r4, #8]
 8004750:	6803      	ldr	r3, [r0, #0]
 8004752:	6a1b      	ldr	r3, [r3, #32]
 8004754:	4798      	blx	r3
 8004756:	f241 33e3 	movw	r3, #5091	; 0x13e3
 800475a:	4298      	cmp	r0, r3
 800475c:	d805      	bhi.n	800476a <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x26>
 800475e:	4b42      	ldr	r3, [pc, #264]	; (8004868 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x124>)
 8004760:	4a42      	ldr	r2, [pc, #264]	; (800486c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 8004762:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004764:	4842      	ldr	r0, [pc, #264]	; (8004870 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x12c>)
 8004766:	f023 fcfb 	bl	8028160 <__assert_func>
 800476a:	6860      	ldr	r0, [r4, #4]
 800476c:	6803      	ldr	r3, [r0, #0]
 800476e:	6a1b      	ldr	r3, [r3, #32]
 8004770:	4798      	blx	r3
 8004772:	280f      	cmp	r0, #15
 8004774:	d803      	bhi.n	800477e <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x3a>
 8004776:	4b3f      	ldr	r3, [pc, #252]	; (8004874 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x130>)
 8004778:	4a3c      	ldr	r2, [pc, #240]	; (800486c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 800477a:	21a4      	movs	r1, #164	; 0xa4
 800477c:	e7f2      	b.n	8004764 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800477e:	68e0      	ldr	r0, [r4, #12]
 8004780:	6803      	ldr	r3, [r0, #0]
 8004782:	6a1b      	ldr	r3, [r3, #32]
 8004784:	4798      	blx	r3
 8004786:	2837      	cmp	r0, #55	; 0x37
 8004788:	d803      	bhi.n	8004792 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x4e>
 800478a:	4b3b      	ldr	r3, [pc, #236]	; (8004878 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x134>)
 800478c:	4a37      	ldr	r2, [pc, #220]	; (800486c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 800478e:	21a5      	movs	r1, #165	; 0xa5
 8004790:	e7e8      	b.n	8004764 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004792:	f010 f995 	bl	8014ac0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004796:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 800487c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x138>
 800479a:	3004      	adds	r0, #4
 800479c:	f010 f9f6 	bl	8014b8c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80047a0:	f8d9 0000 	ldr.w	r0, [r9]
 80047a4:	b110      	cbz	r0, 80047ac <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80047a6:	6803      	ldr	r3, [r0, #0]
 80047a8:	68db      	ldr	r3, [r3, #12]
 80047aa:	4798      	blx	r3
    if (*currentTrans)
 80047ac:	f8d9 0000 	ldr.w	r0, [r9]
 80047b0:	b110      	cbz	r0, 80047b8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80047b2:	6803      	ldr	r3, [r0, #0]
 80047b4:	681b      	ldr	r3, [r3, #0]
 80047b6:	4798      	blx	r3
    if (*currentScreen)
 80047b8:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004880 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x13c>
 80047bc:	f8d8 0000 	ldr.w	r0, [r8]
 80047c0:	b110      	cbz	r0, 80047c8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80047c2:	6803      	ldr	r3, [r0, #0]
 80047c4:	695b      	ldr	r3, [r3, #20]
 80047c6:	4798      	blx	r3
    if (*currentPresenter)
 80047c8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80047cc:	b110      	cbz	r0, 80047d4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80047ce:	6803      	ldr	r3, [r0, #0]
 80047d0:	685b      	ldr	r3, [r3, #4]
 80047d2:	4798      	blx	r3
    if (*currentScreen)
 80047d4:	f8d8 0000 	ldr.w	r0, [r8]
 80047d8:	b110      	cbz	r0, 80047e0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80047da:	6803      	ldr	r3, [r0, #0]
 80047dc:	681b      	ldr	r3, [r3, #0]
 80047de:	4798      	blx	r3
    if (*currentPresenter)
 80047e0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80047e4:	b110      	cbz	r0, 80047ec <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80047e6:	6803      	ldr	r3, [r0, #0]
 80047e8:	689b      	ldr	r3, [r3, #8]
 80047ea:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80047ec:	68e0      	ldr	r0, [r4, #12]
 80047ee:	2100      	movs	r1, #0
 80047f0:	f7ff fb16 	bl	8003e20 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80047f4:	2114      	movs	r1, #20
 80047f6:	4605      	mov	r5, r0
 80047f8:	f7ff fb16 	bl	8003e28 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80047fc:	68a0      	ldr	r0, [r4, #8]
 80047fe:	6803      	ldr	r3, [r0, #0]
 8004800:	2100      	movs	r1, #0
 8004802:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004804:	4798      	blx	r3
 8004806:	4606      	mov	r6, r0
 8004808:	f003 fd5e 	bl	80082c8 <_ZN33Measurement_Single_Display_3PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800480c:	6860      	ldr	r0, [r4, #4]
 800480e:	6803      	ldr	r3, [r0, #0]
 8004810:	2100      	movs	r1, #0
 8004812:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004814:	4798      	blx	r3
 8004816:	4631      	mov	r1, r6
 8004818:	4604      	mov	r4, r0
 800481a:	f003 fd2f 	bl	800827c <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>
    *currentTrans = newTransition;
 800481e:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004822:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004826:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800482a:	b1dc      	cbz	r4, 8004864 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x120>
 800482c:	1d23      	adds	r3, r4, #4
 800482e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004832:	6833      	ldr	r3, [r6, #0]
 8004834:	f8c4 a008 	str.w	sl, [r4, #8]
 8004838:	4630      	mov	r0, r6
 800483a:	68db      	ldr	r3, [r3, #12]
 800483c:	63f4      	str	r4, [r6, #60]	; 0x3c
 800483e:	4798      	blx	r3
    newPresenter->activate();
 8004840:	6823      	ldr	r3, [r4, #0]
 8004842:	4620      	mov	r0, r4
 8004844:	681b      	ldr	r3, [r3, #0]
 8004846:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004848:	4629      	mov	r1, r5
 800484a:	4630      	mov	r0, r6
 800484c:	f011 ff64 	bl	8016718 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004850:	682b      	ldr	r3, [r5, #0]
 8004852:	4628      	mov	r0, r5
 8004854:	691b      	ldr	r3, [r3, #16]
 8004856:	4798      	blx	r3
    newTransition->invalidate();
 8004858:	682b      	ldr	r3, [r5, #0]
 800485a:	4628      	mov	r0, r5
 800485c:	695b      	ldr	r3, [r3, #20]
}
 800485e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004862:	4718      	bx	r3
    model->bind(newPresenter);
 8004864:	4623      	mov	r3, r4
 8004866:	e7e2      	b.n	800482e <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xea>
 8004868:	08029f04 	.word	0x08029f04
 800486c:	0802affb 	.word	0x0802affb
 8004870:	0802a0a0 	.word	0x0802a0a0
 8004874:	0802a0e7 	.word	0x0802a0e7
 8004878:	0802a18a 	.word	0x0802a18a
 800487c:	20013804 	.word	0x20013804
 8004880:	20013800 	.word	0x20013800

08004884 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv>:
{
 8004884:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_1PView, Measurement_Single_Display_1PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004888:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 800488c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800488e:	68a0      	ldr	r0, [r4, #8]
 8004890:	6803      	ldr	r3, [r0, #0]
 8004892:	6a1b      	ldr	r3, [r3, #32]
 8004894:	4798      	blx	r3
 8004896:	f241 33e3 	movw	r3, #5091	; 0x13e3
 800489a:	4298      	cmp	r0, r3
 800489c:	d805      	bhi.n	80048aa <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x26>
 800489e:	4b42      	ldr	r3, [pc, #264]	; (80049a8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x124>)
 80048a0:	4a42      	ldr	r2, [pc, #264]	; (80049ac <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 80048a2:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80048a4:	4842      	ldr	r0, [pc, #264]	; (80049b0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x12c>)
 80048a6:	f023 fc5b 	bl	8028160 <__assert_func>
 80048aa:	6860      	ldr	r0, [r4, #4]
 80048ac:	6803      	ldr	r3, [r0, #0]
 80048ae:	6a1b      	ldr	r3, [r3, #32]
 80048b0:	4798      	blx	r3
 80048b2:	280f      	cmp	r0, #15
 80048b4:	d803      	bhi.n	80048be <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x3a>
 80048b6:	4b3f      	ldr	r3, [pc, #252]	; (80049b4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x130>)
 80048b8:	4a3c      	ldr	r2, [pc, #240]	; (80049ac <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 80048ba:	21a4      	movs	r1, #164	; 0xa4
 80048bc:	e7f2      	b.n	80048a4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80048be:	68e0      	ldr	r0, [r4, #12]
 80048c0:	6803      	ldr	r3, [r0, #0]
 80048c2:	6a1b      	ldr	r3, [r3, #32]
 80048c4:	4798      	blx	r3
 80048c6:	2837      	cmp	r0, #55	; 0x37
 80048c8:	d803      	bhi.n	80048d2 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x4e>
 80048ca:	4b3b      	ldr	r3, [pc, #236]	; (80049b8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x134>)
 80048cc:	4a37      	ldr	r2, [pc, #220]	; (80049ac <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 80048ce:	21a5      	movs	r1, #165	; 0xa5
 80048d0:	e7e8      	b.n	80048a4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80048d2:	f010 f8f5 	bl	8014ac0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80048d6:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80049bc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x138>
 80048da:	3004      	adds	r0, #4
 80048dc:	f010 f956 	bl	8014b8c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80048e0:	f8d9 0000 	ldr.w	r0, [r9]
 80048e4:	b110      	cbz	r0, 80048ec <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80048e6:	6803      	ldr	r3, [r0, #0]
 80048e8:	68db      	ldr	r3, [r3, #12]
 80048ea:	4798      	blx	r3
    if (*currentTrans)
 80048ec:	f8d9 0000 	ldr.w	r0, [r9]
 80048f0:	b110      	cbz	r0, 80048f8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80048f2:	6803      	ldr	r3, [r0, #0]
 80048f4:	681b      	ldr	r3, [r3, #0]
 80048f6:	4798      	blx	r3
    if (*currentScreen)
 80048f8:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80049c0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x13c>
 80048fc:	f8d8 0000 	ldr.w	r0, [r8]
 8004900:	b110      	cbz	r0, 8004908 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004902:	6803      	ldr	r3, [r0, #0]
 8004904:	695b      	ldr	r3, [r3, #20]
 8004906:	4798      	blx	r3
    if (*currentPresenter)
 8004908:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800490c:	b110      	cbz	r0, 8004914 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800490e:	6803      	ldr	r3, [r0, #0]
 8004910:	685b      	ldr	r3, [r3, #4]
 8004912:	4798      	blx	r3
    if (*currentScreen)
 8004914:	f8d8 0000 	ldr.w	r0, [r8]
 8004918:	b110      	cbz	r0, 8004920 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 800491a:	6803      	ldr	r3, [r0, #0]
 800491c:	681b      	ldr	r3, [r3, #0]
 800491e:	4798      	blx	r3
    if (*currentPresenter)
 8004920:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004924:	b110      	cbz	r0, 800492c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004926:	6803      	ldr	r3, [r0, #0]
 8004928:	689b      	ldr	r3, [r3, #8]
 800492a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800492c:	68e0      	ldr	r0, [r4, #12]
 800492e:	2100      	movs	r1, #0
 8004930:	f7ff fa76 	bl	8003e20 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004934:	2114      	movs	r1, #20
 8004936:	4605      	mov	r5, r0
 8004938:	f7ff fa76 	bl	8003e28 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800493c:	68a0      	ldr	r0, [r4, #8]
 800493e:	6803      	ldr	r3, [r0, #0]
 8004940:	2100      	movs	r1, #0
 8004942:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004944:	4798      	blx	r3
 8004946:	4606      	mov	r6, r0
 8004948:	f003 fc7c 	bl	8008244 <_ZN33Measurement_Single_Display_1PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800494c:	6860      	ldr	r0, [r4, #4]
 800494e:	6803      	ldr	r3, [r0, #0]
 8004950:	2100      	movs	r1, #0
 8004952:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004954:	4798      	blx	r3
 8004956:	4631      	mov	r1, r6
 8004958:	4604      	mov	r4, r0
 800495a:	f003 fc4b 	bl	80081f4 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>
    *currentTrans = newTransition;
 800495e:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004962:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004966:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800496a:	b1dc      	cbz	r4, 80049a4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x120>
 800496c:	1d23      	adds	r3, r4, #4
 800496e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004972:	6833      	ldr	r3, [r6, #0]
 8004974:	f8c4 a008 	str.w	sl, [r4, #8]
 8004978:	4630      	mov	r0, r6
 800497a:	68db      	ldr	r3, [r3, #12]
 800497c:	63f4      	str	r4, [r6, #60]	; 0x3c
 800497e:	4798      	blx	r3
    newPresenter->activate();
 8004980:	6823      	ldr	r3, [r4, #0]
 8004982:	4620      	mov	r0, r4
 8004984:	681b      	ldr	r3, [r3, #0]
 8004986:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004988:	4629      	mov	r1, r5
 800498a:	4630      	mov	r0, r6
 800498c:	f011 fec4 	bl	8016718 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004990:	682b      	ldr	r3, [r5, #0]
 8004992:	4628      	mov	r0, r5
 8004994:	691b      	ldr	r3, [r3, #16]
 8004996:	4798      	blx	r3
    newTransition->invalidate();
 8004998:	682b      	ldr	r3, [r5, #0]
 800499a:	4628      	mov	r0, r5
 800499c:	695b      	ldr	r3, [r3, #20]
}
 800499e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80049a2:	4718      	bx	r3
    model->bind(newPresenter);
 80049a4:	4623      	mov	r3, r4
 80049a6:	e7e2      	b.n	800496e <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xea>
 80049a8:	08029f04 	.word	0x08029f04
 80049ac:	0802b13d 	.word	0x0802b13d
 80049b0:	0802a0a0 	.word	0x0802a0a0
 80049b4:	0802a0e7 	.word	0x0802a0e7
 80049b8:	0802a18a 	.word	0x0802a18a
 80049bc:	20013804 	.word	0x20013804
 80049c0:	20013800 	.word	0x20013800

080049c4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv>:
{
 80049c4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_SingleView, Measurement_SinglePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80049c8:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80049cc:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80049ce:	68a0      	ldr	r0, [r4, #8]
 80049d0:	6803      	ldr	r3, [r0, #0]
 80049d2:	6a1b      	ldr	r3, [r3, #32]
 80049d4:	4798      	blx	r3
 80049d6:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 80049da:	d205      	bcs.n	80049e8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x24>
 80049dc:	4b42      	ldr	r3, [pc, #264]	; (8004ae8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x124>)
 80049de:	4a43      	ldr	r2, [pc, #268]	; (8004aec <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 80049e0:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80049e2:	4843      	ldr	r0, [pc, #268]	; (8004af0 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x12c>)
 80049e4:	f023 fbbc 	bl	8028160 <__assert_func>
 80049e8:	6860      	ldr	r0, [r4, #4]
 80049ea:	6803      	ldr	r3, [r0, #0]
 80049ec:	6a1b      	ldr	r3, [r3, #32]
 80049ee:	4798      	blx	r3
 80049f0:	280f      	cmp	r0, #15
 80049f2:	d803      	bhi.n	80049fc <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x38>
 80049f4:	4b3f      	ldr	r3, [pc, #252]	; (8004af4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x130>)
 80049f6:	4a3d      	ldr	r2, [pc, #244]	; (8004aec <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 80049f8:	21a4      	movs	r1, #164	; 0xa4
 80049fa:	e7f2      	b.n	80049e2 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80049fc:	68e0      	ldr	r0, [r4, #12]
 80049fe:	6803      	ldr	r3, [r0, #0]
 8004a00:	6a1b      	ldr	r3, [r3, #32]
 8004a02:	4798      	blx	r3
 8004a04:	2837      	cmp	r0, #55	; 0x37
 8004a06:	d803      	bhi.n	8004a10 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x4c>
 8004a08:	4b3b      	ldr	r3, [pc, #236]	; (8004af8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x134>)
 8004a0a:	4a38      	ldr	r2, [pc, #224]	; (8004aec <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8004a0c:	21a5      	movs	r1, #165	; 0xa5
 8004a0e:	e7e8      	b.n	80049e2 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004a10:	f010 f856 	bl	8014ac0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004a14:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004afc <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x138>
 8004a18:	3004      	adds	r0, #4
 8004a1a:	f010 f8b7 	bl	8014b8c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004a1e:	f8d9 0000 	ldr.w	r0, [r9]
 8004a22:	b110      	cbz	r0, 8004a2a <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8004a24:	6803      	ldr	r3, [r0, #0]
 8004a26:	68db      	ldr	r3, [r3, #12]
 8004a28:	4798      	blx	r3
    if (*currentTrans)
 8004a2a:	f8d9 0000 	ldr.w	r0, [r9]
 8004a2e:	b110      	cbz	r0, 8004a36 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8004a30:	6803      	ldr	r3, [r0, #0]
 8004a32:	681b      	ldr	r3, [r3, #0]
 8004a34:	4798      	blx	r3
    if (*currentScreen)
 8004a36:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004b00 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x13c>
 8004a3a:	f8d8 0000 	ldr.w	r0, [r8]
 8004a3e:	b110      	cbz	r0, 8004a46 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004a40:	6803      	ldr	r3, [r0, #0]
 8004a42:	695b      	ldr	r3, [r3, #20]
 8004a44:	4798      	blx	r3
    if (*currentPresenter)
 8004a46:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004a4a:	b110      	cbz	r0, 8004a52 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004a4c:	6803      	ldr	r3, [r0, #0]
 8004a4e:	685b      	ldr	r3, [r3, #4]
 8004a50:	4798      	blx	r3
    if (*currentScreen)
 8004a52:	f8d8 0000 	ldr.w	r0, [r8]
 8004a56:	b110      	cbz	r0, 8004a5e <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004a58:	6803      	ldr	r3, [r0, #0]
 8004a5a:	681b      	ldr	r3, [r3, #0]
 8004a5c:	4798      	blx	r3
    if (*currentPresenter)
 8004a5e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004a62:	b110      	cbz	r0, 8004a6a <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004a64:	6803      	ldr	r3, [r0, #0]
 8004a66:	689b      	ldr	r3, [r3, #8]
 8004a68:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004a6a:	68e0      	ldr	r0, [r4, #12]
 8004a6c:	2100      	movs	r1, #0
 8004a6e:	f7ff f9d7 	bl	8003e20 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004a72:	2114      	movs	r1, #20
 8004a74:	4605      	mov	r5, r0
 8004a76:	f7ff f9d7 	bl	8003e28 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004a7a:	68a0      	ldr	r0, [r4, #8]
 8004a7c:	6803      	ldr	r3, [r0, #0]
 8004a7e:	2100      	movs	r1, #0
 8004a80:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004a82:	4798      	blx	r3
 8004a84:	4606      	mov	r6, r0
 8004a86:	f003 fb81 	bl	800818c <_ZN22Measurement_SingleViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004a8a:	6860      	ldr	r0, [r4, #4]
 8004a8c:	6803      	ldr	r3, [r0, #0]
 8004a8e:	2100      	movs	r1, #0
 8004a90:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004a92:	4798      	blx	r3
 8004a94:	4631      	mov	r1, r6
 8004a96:	4604      	mov	r4, r0
 8004a98:	f003 fb52 	bl	8008140 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>
    *currentTrans = newTransition;
 8004a9c:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004aa0:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004aa4:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004aa8:	b1dc      	cbz	r4, 8004ae2 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x11e>
 8004aaa:	1d23      	adds	r3, r4, #4
 8004aac:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004ab0:	6833      	ldr	r3, [r6, #0]
 8004ab2:	f8c4 a008 	str.w	sl, [r4, #8]
 8004ab6:	4630      	mov	r0, r6
 8004ab8:	68db      	ldr	r3, [r3, #12]
 8004aba:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004abc:	4798      	blx	r3
    newPresenter->activate();
 8004abe:	6823      	ldr	r3, [r4, #0]
 8004ac0:	4620      	mov	r0, r4
 8004ac2:	681b      	ldr	r3, [r3, #0]
 8004ac4:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004ac6:	4629      	mov	r1, r5
 8004ac8:	4630      	mov	r0, r6
 8004aca:	f011 fe25 	bl	8016718 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004ace:	682b      	ldr	r3, [r5, #0]
 8004ad0:	4628      	mov	r0, r5
 8004ad2:	691b      	ldr	r3, [r3, #16]
 8004ad4:	4798      	blx	r3
    newTransition->invalidate();
 8004ad6:	682b      	ldr	r3, [r5, #0]
 8004ad8:	4628      	mov	r0, r5
 8004ada:	695b      	ldr	r3, [r3, #20]
}
 8004adc:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004ae0:	4718      	bx	r3
    model->bind(newPresenter);
 8004ae2:	4623      	mov	r3, r4
 8004ae4:	e7e2      	b.n	8004aac <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xe8>
 8004ae6:	bf00      	nop
 8004ae8:	08029f04 	.word	0x08029f04
 8004aec:	0802b27f 	.word	0x0802b27f
 8004af0:	0802a0a0 	.word	0x0802a0a0
 8004af4:	0802a0e7 	.word	0x0802a0e7
 8004af8:	0802a18a 	.word	0x0802a18a
 8004afc:	20013804 	.word	0x20013804
 8004b00:	20013800 	.word	0x20013800

08004b04 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv>:
{
 8004b04:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004b08:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004b0c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004b0e:	68a0      	ldr	r0, [r4, #8]
 8004b10:	6803      	ldr	r3, [r0, #0]
 8004b12:	6a1b      	ldr	r3, [r3, #32]
 8004b14:	4798      	blx	r3
 8004b16:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8004b1a:	d205      	bcs.n	8004b28 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x24>
 8004b1c:	4b42      	ldr	r3, [pc, #264]	; (8004c28 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x124>)
 8004b1e:	4a43      	ldr	r2, [pc, #268]	; (8004c2c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8004b20:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004b22:	4843      	ldr	r0, [pc, #268]	; (8004c30 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x12c>)
 8004b24:	f023 fb1c 	bl	8028160 <__assert_func>
 8004b28:	6860      	ldr	r0, [r4, #4]
 8004b2a:	6803      	ldr	r3, [r0, #0]
 8004b2c:	6a1b      	ldr	r3, [r3, #32]
 8004b2e:	4798      	blx	r3
 8004b30:	280f      	cmp	r0, #15
 8004b32:	d803      	bhi.n	8004b3c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x38>
 8004b34:	4b3f      	ldr	r3, [pc, #252]	; (8004c34 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x130>)
 8004b36:	4a3d      	ldr	r2, [pc, #244]	; (8004c2c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8004b38:	21a4      	movs	r1, #164	; 0xa4
 8004b3a:	e7f2      	b.n	8004b22 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004b3c:	68e0      	ldr	r0, [r4, #12]
 8004b3e:	6803      	ldr	r3, [r0, #0]
 8004b40:	6a1b      	ldr	r3, [r3, #32]
 8004b42:	4798      	blx	r3
 8004b44:	2837      	cmp	r0, #55	; 0x37
 8004b46:	d803      	bhi.n	8004b50 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x4c>
 8004b48:	4b3b      	ldr	r3, [pc, #236]	; (8004c38 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x134>)
 8004b4a:	4a38      	ldr	r2, [pc, #224]	; (8004c2c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8004b4c:	21a5      	movs	r1, #165	; 0xa5
 8004b4e:	e7e8      	b.n	8004b22 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004b50:	f00f ffb6 	bl	8014ac0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004b54:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004c3c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x138>
 8004b58:	3004      	adds	r0, #4
 8004b5a:	f010 f817 	bl	8014b8c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004b5e:	f8d9 0000 	ldr.w	r0, [r9]
 8004b62:	b110      	cbz	r0, 8004b6a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8004b64:	6803      	ldr	r3, [r0, #0]
 8004b66:	68db      	ldr	r3, [r3, #12]
 8004b68:	4798      	blx	r3
    if (*currentTrans)
 8004b6a:	f8d9 0000 	ldr.w	r0, [r9]
 8004b6e:	b110      	cbz	r0, 8004b76 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8004b70:	6803      	ldr	r3, [r0, #0]
 8004b72:	681b      	ldr	r3, [r3, #0]
 8004b74:	4798      	blx	r3
    if (*currentScreen)
 8004b76:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004c40 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x13c>
 8004b7a:	f8d8 0000 	ldr.w	r0, [r8]
 8004b7e:	b110      	cbz	r0, 8004b86 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004b80:	6803      	ldr	r3, [r0, #0]
 8004b82:	695b      	ldr	r3, [r3, #20]
 8004b84:	4798      	blx	r3
    if (*currentPresenter)
 8004b86:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004b8a:	b110      	cbz	r0, 8004b92 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004b8c:	6803      	ldr	r3, [r0, #0]
 8004b8e:	685b      	ldr	r3, [r3, #4]
 8004b90:	4798      	blx	r3
    if (*currentScreen)
 8004b92:	f8d8 0000 	ldr.w	r0, [r8]
 8004b96:	b110      	cbz	r0, 8004b9e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004b98:	6803      	ldr	r3, [r0, #0]
 8004b9a:	681b      	ldr	r3, [r3, #0]
 8004b9c:	4798      	blx	r3
    if (*currentPresenter)
 8004b9e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004ba2:	b110      	cbz	r0, 8004baa <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004ba4:	6803      	ldr	r3, [r0, #0]
 8004ba6:	689b      	ldr	r3, [r3, #8]
 8004ba8:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004baa:	68e0      	ldr	r0, [r4, #12]
 8004bac:	2100      	movs	r1, #0
 8004bae:	f7ff f937 	bl	8003e20 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004bb2:	2114      	movs	r1, #20
 8004bb4:	4605      	mov	r5, r0
 8004bb6:	f7ff f937 	bl	8003e28 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004bba:	68a0      	ldr	r0, [r4, #8]
 8004bbc:	6803      	ldr	r3, [r0, #0]
 8004bbe:	2100      	movs	r1, #0
 8004bc0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004bc2:	4798      	blx	r3
 8004bc4:	4606      	mov	r6, r0
 8004bc6:	f003 f99d 	bl	8007f04 <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004bca:	6860      	ldr	r0, [r4, #4]
 8004bcc:	6803      	ldr	r3, [r0, #0]
 8004bce:	2100      	movs	r1, #0
 8004bd0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004bd2:	4798      	blx	r3
 8004bd4:	4631      	mov	r1, r6
 8004bd6:	4604      	mov	r4, r0
 8004bd8:	f003 f96e 	bl	8007eb8 <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 8004bdc:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004be0:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004be4:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004be8:	b1dc      	cbz	r4, 8004c22 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x11e>
 8004bea:	1d23      	adds	r3, r4, #4
 8004bec:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004bf0:	6833      	ldr	r3, [r6, #0]
 8004bf2:	f8c4 a008 	str.w	sl, [r4, #8]
 8004bf6:	4630      	mov	r0, r6
 8004bf8:	68db      	ldr	r3, [r3, #12]
 8004bfa:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004bfc:	4798      	blx	r3
    newPresenter->activate();
 8004bfe:	6823      	ldr	r3, [r4, #0]
 8004c00:	4620      	mov	r0, r4
 8004c02:	681b      	ldr	r3, [r3, #0]
 8004c04:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004c06:	4629      	mov	r1, r5
 8004c08:	4630      	mov	r0, r6
 8004c0a:	f011 fd85 	bl	8016718 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004c0e:	682b      	ldr	r3, [r5, #0]
 8004c10:	4628      	mov	r0, r5
 8004c12:	691b      	ldr	r3, [r3, #16]
 8004c14:	4798      	blx	r3
    newTransition->invalidate();
 8004c16:	682b      	ldr	r3, [r5, #0]
 8004c18:	4628      	mov	r0, r5
 8004c1a:	695b      	ldr	r3, [r3, #20]
}
 8004c1c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004c20:	4718      	bx	r3
    model->bind(newPresenter);
 8004c22:	4623      	mov	r3, r4
 8004c24:	e7e2      	b.n	8004bec <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xe8>
 8004c26:	bf00      	nop
 8004c28:	08029f04 	.word	0x08029f04
 8004c2c:	0802b3ab 	.word	0x0802b3ab
 8004c30:	0802a0a0 	.word	0x0802a0a0
 8004c34:	0802a0e7 	.word	0x0802a0e7
 8004c38:	0802a18a 	.word	0x0802a18a
 8004c3c:	20013804 	.word	0x20013804
 8004c40:	20013800 	.word	0x20013800

08004c44 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 8004c44:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8004c46:	4770      	bx	lr

08004c48 <_ZN21Gauge_with_ValuesBaseD1Ev>:
}

Gauge_with_ValuesBase::~Gauge_with_ValuesBase()
{

}
 8004c48:	4770      	bx	lr

08004c4a <_ZN21Gauge_with_ValuesBase10initializeEv>:

void Gauge_with_ValuesBase::initialize()
{

}
 8004c4a:	4770      	bx	lr

08004c4c <_ZN21Gauge_with_ValuesBaseD0Ev>:
Gauge_with_ValuesBase::~Gauge_with_ValuesBase()
 8004c4c:	b510      	push	{r4, lr}
}
 8004c4e:	f44f 7162 	mov.w	r1, #904	; 0x388
Gauge_with_ValuesBase::~Gauge_with_ValuesBase()
 8004c52:	4604      	mov	r4, r0
}
 8004c54:	f022 fc93 	bl	802757e <_ZdlPvj>
 8004c58:	4620      	mov	r0, r4
 8004c5a:	bd10      	pop	{r4, pc}

08004c5c <_ZN21Gauge_with_ValuesBaseC1Ev>:
Gauge_with_ValuesBase::Gauge_with_ValuesBase()
 8004c5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
          touchable(false),
 8004c60:	f44f 7380 	mov.w	r3, #256	; 0x100
 8004c64:	4680      	mov	r8, r0
        : x(0), y(0), width(0), height(0)
 8004c66:	2600      	movs	r6, #0
 8004c68:	ed2d 8b02 	vpush	{d8}
 8004c6c:	8483      	strh	r3, [r0, #36]	; 0x24
 8004c6e:	4bb2      	ldr	r3, [pc, #712]	; (8004f38 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2dc>)
          firstChild(0)
 8004c70:	6286      	str	r6, [r0, #40]	; 0x28
 8004c72:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8004c76:	e9c0 6603 	strd	r6, r6, [r0, #12]
          nextSibling(0),
 8004c7a:	e9c0 6605 	strd	r6, r6, [r0, #20]
          cachedAbsX(0),
 8004c7e:	e9c0 6607 	strd	r6, r6, [r0, #28]
 8004c82:	f848 3b2c 	str.w	r3, [r8], #44
 8004c86:	b08b      	sub	sp, #44	; 0x2c
 8004c88:	4604      	mov	r4, r0
 8004c8a:	4640      	mov	r0, r8
 8004c8c:	f7fd fc42 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 8004c90:	f104 0374 	add.w	r3, r4, #116	; 0x74
 8004c94:	f104 0bbc 	add.w	fp, r4, #188	; 0xbc
 8004c98:	4618      	mov	r0, r3
 8004c9a:	9303      	str	r3, [sp, #12]
 8004c9c:	f504 7a82 	add.w	sl, r4, #260	; 0x104
 8004ca0:	f7fd fc38 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 8004ca4:	4658      	mov	r0, fp
 8004ca6:	f7fd fc35 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 8004caa:	f504 79a8 	add.w	r9, r4, #336	; 0x150
        : TextAreaWithWildcardBase(), wc1(0)
 8004cae:	4da3      	ldr	r5, [pc, #652]	; (8004f3c <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e0>)
        : TextArea()
 8004cb0:	4650      	mov	r0, sl
 8004cb2:	f7fd fc2f 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8004cb6:	f8c4 5104 	str.w	r5, [r4, #260]	; 0x104
 8004cba:	f8c4 614c 	str.w	r6, [r4, #332]	; 0x14c
        : TextArea()
 8004cbe:	4648      	mov	r0, r9
 8004cc0:	f7fd fc28 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 8004cc4:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
 8004cc8:	f504 77f4 	add.w	r7, r4, #488	; 0x1e8
 8004ccc:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8004cce:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
 8004cd2:	f8c4 6198 	str.w	r6, [r4, #408]	; 0x198
 8004cd6:	ee08 3a10 	vmov	s16, r3
        : TextArea()
 8004cda:	f7fd fc1b 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8004cde:	f8c4 519c 	str.w	r5, [r4, #412]	; 0x19c
 8004ce2:	f8c4 61e4 	str.w	r6, [r4, #484]	; 0x1e4
 8004ce6:	4638      	mov	r0, r7
 8004ce8:	f00c fea4 	bl	8011a34 <_ZN8touchgfx5GaugeC1Ev>
        rect.width = width;
 8004cec:	4a94      	ldr	r2, [pc, #592]	; (8004f40 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e4>)
 8004cee:	60a2      	str	r2, [r4, #8]
    textArea4_2.setXY(217, 109);
 8004cf0:	4640      	mov	r0, r8
 8004cf2:	226d      	movs	r2, #109	; 0x6d
 8004cf4:	21d9      	movs	r1, #217	; 0xd9
 8004cf6:	ad04      	add	r5, sp, #16
 8004cf8:	f7fd fbd9 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004cfc:	f04f 33ff 	mov.w	r3, #4294967295
 8004d00:	65e3      	str	r3, [r4, #92]	; 0x5c
        boundingArea = calculateBoundingArea();
 8004d02:	4641      	mov	r1, r8
 8004d04:	4628      	mov	r0, r5
        linespace = space;
 8004d06:	f8a4 6060 	strh.w	r6, [r4, #96]	; 0x60
        boundingArea = calculateBoundingArea();
 8004d0a:	f00c fb5b 	bl	80113c4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004d0e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004d12:	f104 0c68 	add.w	ip, r4, #104	; 0x68
 8004d16:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 8004d1a:	4b8a      	ldr	r3, [pc, #552]	; (8004f44 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8004d1c:	9308      	str	r3, [sp, #32]
 8004d1e:	2226      	movs	r2, #38	; 0x26
    textArea4_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D6CM));
 8004d20:	a908      	add	r1, sp, #32
 8004d22:	4640      	mov	r0, r8
 8004d24:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 8004d28:	f00c fde6 	bl	80118f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea4_2);
 8004d2c:	4641      	mov	r1, r8
 8004d2e:	4620      	mov	r0, r4
 8004d30:	f00a fc2e 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_1.setXY(0, 109);
 8004d34:	9b03      	ldr	r3, [sp, #12]
 8004d36:	4631      	mov	r1, r6
 8004d38:	4618      	mov	r0, r3
 8004d3a:	226d      	movs	r2, #109	; 0x6d
 8004d3c:	f7fd fbb7 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8004d40:	9b03      	ldr	r3, [sp, #12]
        linespace = space;
 8004d42:	f8a4 60a8 	strh.w	r6, [r4, #168]	; 0xa8
        color = newColor;
 8004d46:	f04f 32ff 	mov.w	r2, #4294967295
 8004d4a:	f8c4 20a4 	str.w	r2, [r4, #164]	; 0xa4
        boundingArea = calculateBoundingArea();
 8004d4e:	4619      	mov	r1, r3
 8004d50:	4628      	mov	r0, r5
 8004d52:	f00c fb37 	bl	80113c4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004d56:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004d5a:	4b7a      	ldr	r3, [pc, #488]	; (8004f44 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8004d5c:	9308      	str	r3, [sp, #32]
    textArea4_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YENI));
 8004d5e:	9b03      	ldr	r3, [sp, #12]
 8004d60:	f104 0cb0 	add.w	ip, r4, #176	; 0xb0
 8004d64:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 8004d68:	2227      	movs	r2, #39	; 0x27
 8004d6a:	a908      	add	r1, sp, #32
 8004d6c:	4618      	mov	r0, r3
 8004d6e:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 8004d72:	f00c fdc1 	bl	80118f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea4_1);
 8004d76:	9b03      	ldr	r3, [sp, #12]
 8004d78:	4620      	mov	r0, r4
 8004d7a:	4619      	mov	r1, r3
 8004d7c:	f00a fc08 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4.setXY(113, 0);
 8004d80:	4632      	mov	r2, r6
 8004d82:	4658      	mov	r0, fp
 8004d84:	2171      	movs	r1, #113	; 0x71
 8004d86:	f7fd fb92 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004d8a:	f04f 32ff 	mov.w	r2, #4294967295
 8004d8e:	f8c4 20ec 	str.w	r2, [r4, #236]	; 0xec
        boundingArea = calculateBoundingArea();
 8004d92:	4659      	mov	r1, fp
 8004d94:	4628      	mov	r0, r5
        linespace = space;
 8004d96:	f8a4 60f0 	strh.w	r6, [r4, #240]	; 0xf0
        boundingArea = calculateBoundingArea();
 8004d9a:	f00c fb13 	bl	80113c4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004d9e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004da2:	f104 03f8 	add.w	r3, r4, #248	; 0xf8
 8004da6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004daa:	4b66      	ldr	r3, [pc, #408]	; (8004f44 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8004dac:	9308      	str	r3, [sp, #32]
    textArea4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Z8XU));
 8004dae:	a908      	add	r1, sp, #32
 8004db0:	2328      	movs	r3, #40	; 0x28
 8004db2:	4658      	mov	r0, fp
 8004db4:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8004db8:	f00c fd9e 	bl	80118f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea4);
 8004dbc:	4659      	mov	r1, fp
 8004dbe:	4620      	mov	r0, r4
 8004dc0:	f00a fbe6 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5.setXY(76, 124);
 8004dc4:	4650      	mov	r0, sl
 8004dc6:	227c      	movs	r2, #124	; 0x7c
 8004dc8:	214c      	movs	r1, #76	; 0x4c
 8004dca:	f7fd fb70 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8004dce:	f8d4 3104 	ldr.w	r3, [r4, #260]	; 0x104
        linespace = space;
 8004dd2:	f8a4 6138 	strh.w	r6, [r4, #312]	; 0x138
        color = newColor;
 8004dd6:	f04f 32ff 	mov.w	r2, #4294967295
 8004dda:	f8c4 2134 	str.w	r2, [r4, #308]	; 0x134
        boundingArea = calculateBoundingArea();
 8004dde:	4651      	mov	r1, sl
 8004de0:	4628      	mov	r0, r5
 8004de2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8004de6:	4798      	blx	r3
 8004de8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004dec:	f504 73a0 	add.w	r3, r4, #320	; 0x140
 8004df0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004df4:	4b53      	ldr	r3, [pc, #332]	; (8004f44 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8004df6:	9308      	str	r3, [sp, #32]
    textArea5.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RQ3J));
 8004df8:	a908      	add	r1, sp, #32
 8004dfa:	2325      	movs	r3, #37	; 0x25
 8004dfc:	4650      	mov	r0, sl
 8004dfe:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8004e02:	f00c fd79 	bl	80118f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea5);
 8004e06:	4651      	mov	r1, sl
 8004e08:	4620      	mov	r0, r4
 8004e0a:	f00a fbc1 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5_1.setXY(86, 139);
 8004e0e:	4648      	mov	r0, r9
 8004e10:	228b      	movs	r2, #139	; 0x8b
 8004e12:	2156      	movs	r1, #86	; 0x56
 8004e14:	f7fd fb4b 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8004e18:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
        linespace = space;
 8004e1c:	f8a4 6184 	strh.w	r6, [r4, #388]	; 0x184
        color = newColor;
 8004e20:	f04f 32ff 	mov.w	r2, #4294967295
 8004e24:	f8c4 2180 	str.w	r2, [r4, #384]	; 0x180
        boundingArea = calculateBoundingArea();
 8004e28:	4649      	mov	r1, r9
 8004e2a:	4628      	mov	r0, r5
 8004e2c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8004e30:	4798      	blx	r3
 8004e32:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004e36:	f504 73c6 	add.w	r3, r4, #396	; 0x18c
 8004e3a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004e3e:	4b41      	ldr	r3, [pc, #260]	; (8004f44 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8004e40:	9308      	str	r3, [sp, #32]
    textArea5_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_54VS));
 8004e42:	a908      	add	r1, sp, #32
 8004e44:	2324      	movs	r3, #36	; 0x24
 8004e46:	4648      	mov	r0, r9
 8004e48:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8004e4c:	f00c fd54 	bl	80118f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea5_1);
 8004e50:	4649      	mov	r1, r9
 8004e52:	4620      	mov	r0, r4
 8004e54:	f00a fb9c 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5_2.setXY(86, 154);
 8004e58:	ee18 0a10 	vmov	r0, s16
 8004e5c:	229a      	movs	r2, #154	; 0x9a
 8004e5e:	2156      	movs	r1, #86	; 0x56
 8004e60:	f7fd fb25 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8004e64:	f8d4 319c 	ldr.w	r3, [r4, #412]	; 0x19c
        linespace = space;
 8004e68:	f8a4 61d0 	strh.w	r6, [r4, #464]	; 0x1d0
        color = newColor;
 8004e6c:	f04f 32ff 	mov.w	r2, #4294967295
        boundingArea = calculateBoundingArea();
 8004e70:	ee18 1a10 	vmov	r1, s16
        color = newColor;
 8004e74:	f8c4 21cc 	str.w	r2, [r4, #460]	; 0x1cc
        boundingArea = calculateBoundingArea();
 8004e78:	4628      	mov	r0, r5
 8004e7a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8004e7e:	4798      	blx	r3
 8004e80:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004e84:	f504 73ec 	add.w	r3, r4, #472	; 0x1d8
 8004e88:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004e8c:	4b2d      	ldr	r3, [pc, #180]	; (8004f44 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8004e8e:	9308      	str	r3, [sp, #32]
    textArea5_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UKDF));
 8004e90:	ee18 0a10 	vmov	r0, s16
 8004e94:	2323      	movs	r3, #35	; 0x23
 8004e96:	a908      	add	r1, sp, #32
 8004e98:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8004e9c:	f00c fd2c 	bl	80118f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea5_2);
 8004ea0:	ee18 1a10 	vmov	r1, s16
 8004ea4:	4620      	mov	r0, r4
 8004ea6:	f00a fb73 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004eaa:	2304      	movs	r3, #4
    gauge1.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 8004eac:	a908      	add	r1, sp, #32
 8004eae:	4638      	mov	r0, r7
 8004eb0:	f8ad 3020 	strh.w	r3, [sp, #32]
 8004eb4:	f00a fafe 	bl	800f4b4 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
        setXY(x, y);
 8004eb8:	2212      	movs	r2, #18
 8004eba:	4638      	mov	r0, r7
 8004ebc:	211c      	movs	r1, #28
 8004ebe:	f7fd faf6 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8004ec2:	f8d4 31e8 	ldr.w	r3, [r4, #488]	; 0x1e8
 8004ec6:	4638      	mov	r0, r7
 8004ec8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004eca:	21b8      	movs	r1, #184	; 0xb8
 8004ecc:	4798      	blx	r3
        setHeight(height);
 8004ece:	f8d4 31e8 	ldr.w	r3, [r4, #488]	; 0x1e8
 8004ed2:	4638      	mov	r0, r7
 8004ed4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004ed6:	216a      	movs	r1, #106	; 0x6a
 8004ed8:	4798      	blx	r3
    gauge1.setCenter(92, 92);
 8004eda:	225c      	movs	r2, #92	; 0x5c
 8004edc:	4611      	mov	r1, r2
 8004ede:	4638      	mov	r0, r7
 8004ee0:	f00c fe53 	bl	8011b8a <_ZN8touchgfx5Gauge9setCenterEii>
    gauge1.setStartEndAngle(-90, 90);
 8004ee4:	4638      	mov	r0, r7
 8004ee6:	225a      	movs	r2, #90	; 0x5a
 8004ee8:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8004eec:	f00c fed2 	bl	8011c94 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    gauge1.setRange(-90, 90);
 8004ef0:	4633      	mov	r3, r6
 8004ef2:	225a      	movs	r2, #90	; 0x5a
 8004ef4:	4638      	mov	r0, r7
 8004ef6:	9600      	str	r6, [sp, #0]
 8004ef8:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8004efc:	f00a f987 	bl	800f20e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    gauge1.setValue(0);
 8004f00:	4631      	mov	r1, r6
 8004f02:	4638      	mov	r0, r7
 8004f04:	f00c fe70 	bl	8011be8 <_ZN8touchgfx5Gauge8setValueEi>
    gauge1.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 8004f08:	2335      	movs	r3, #53	; 0x35
 8004f0a:	2208      	movs	r2, #8
 8004f0c:	4638      	mov	r0, r7
 8004f0e:	2105      	movs	r1, #5
 8004f10:	f00c fe26 	bl	8011b60 <_ZN8touchgfx5Gauge9setNeedleEtss>
    gauge1.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8004f14:	4638      	mov	r0, r7
 8004f16:	2101      	movs	r1, #1
 8004f18:	f00c fdc4 	bl	8011aa4 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    gauge1.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8004f1c:	4638      	mov	r0, r7
 8004f1e:	2101      	movs	r1, #1
 8004f20:	f00c fdc3 	bl	8011aaa <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    add(gauge1);
 8004f24:	4620      	mov	r0, r4
 8004f26:	4639      	mov	r1, r7
 8004f28:	f00a fb32 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8004f2c:	4620      	mov	r0, r4
 8004f2e:	b00b      	add	sp, #44	; 0x2c
 8004f30:	ecbd 8b02 	vpop	{d8}
 8004f34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004f38:	0802b614 	.word	0x0802b614
 8004f3c:	08029d98 	.word	0x08029d98
 8004f40:	00a900f0 	.word	0x00a900f0
 8004f44:	08029d88 	.word	0x08029d88

08004f48 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8004f48:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8004f4a:	4770      	bx	lr

08004f4c <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8004f4c:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8004f4e:	4770      	bx	lr

08004f50 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8004f50:	4770      	bx	lr

08004f52 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8004f52:	888b      	ldrh	r3, [r1, #4]
 8004f54:	69c0      	ldr	r0, [r0, #28]
 8004f56:	680a      	ldr	r2, [r1, #0]
 8004f58:	0adb      	lsrs	r3, r3, #11
 8004f5a:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8004f5e:	4410      	add	r0, r2
 8004f60:	4770      	bx	lr

08004f62 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8004f62:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 8004f64:	b1c2      	cbz	r2, 8004f98 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8004f66:	7b13      	ldrb	r3, [r2, #12]
 8004f68:	b1b3      	cbz	r3, 8004f98 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8004f6a:	7b54      	ldrb	r4, [r2, #13]
 8004f6c:	7ad2      	ldrb	r2, [r2, #11]
 8004f6e:	0224      	lsls	r4, r4, #8
 8004f70:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8004f74:	4314      	orrs	r4, r2
 8004f76:	6a02      	ldr	r2, [r0, #32]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8004f78:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8004f7a:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 8004f7e:	8813      	ldrh	r3, [r2, #0]
 8004f80:	428b      	cmp	r3, r1
 8004f82:	d102      	bne.n	8004f8a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8004f84:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 8004f88:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8004f8a:	d805      	bhi.n	8004f98 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8004f8c:	3801      	subs	r0, #1
 8004f8e:	b280      	uxth	r0, r0
 8004f90:	3204      	adds	r2, #4
 8004f92:	2800      	cmp	r0, #0
 8004f94:	d1f3      	bne.n	8004f7e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8004f96:	e7f7      	b.n	8004f88 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8004f98:	2000      	movs	r0, #0
 8004f9a:	e7f5      	b.n	8004f88 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08004f9c <_ZN8touchgfx13GeneratedFontD0Ev>:
 8004f9c:	b510      	push	{r4, lr}
 8004f9e:	212c      	movs	r1, #44	; 0x2c
 8004fa0:	4604      	mov	r4, r0
 8004fa2:	f022 faec 	bl	802757e <_ZdlPvj>
 8004fa6:	4620      	mov	r0, r4
 8004fa8:	bd10      	pop	{r4, pc}
	...

08004fac <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8004fac:	b530      	push	{r4, r5, lr}
 8004fae:	b08b      	sub	sp, #44	; 0x2c
 8004fb0:	4604      	mov	r4, r0
      arabicTable(formsTable)
 8004fb2:	f8bd 5060 	ldrh.w	r5, [sp, #96]	; 0x60
 8004fb6:	9508      	str	r5, [sp, #32]
 8004fb8:	f8bd 505c 	ldrh.w	r5, [sp, #92]	; 0x5c
 8004fbc:	9507      	str	r5, [sp, #28]
 8004fbe:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8004fc2:	9506      	str	r5, [sp, #24]
 8004fc4:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
 8004fc8:	9505      	str	r5, [sp, #20]
 8004fca:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 8004fce:	9504      	str	r5, [sp, #16]
 8004fd0:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8004fd4:	9503      	str	r5, [sp, #12]
 8004fd6:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8004fda:	9502      	str	r5, [sp, #8]
 8004fdc:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 8004fe0:	9501      	str	r5, [sp, #4]
 8004fe2:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 8004fe6:	9500      	str	r5, [sp, #0]
 8004fe8:	f010 ff00 	bl	8015dec <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 8004fec:	4b06      	ldr	r3, [pc, #24]	; (8005008 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 8004fee:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 8004ff0:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8004ff2:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 8004ff4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8004ff6:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 8004ff8:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8004ffa:	6263      	str	r3, [r4, #36]	; 0x24
      arabicTable(formsTable)
 8004ffc:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8004ffe:	62a3      	str	r3, [r4, #40]	; 0x28
}
 8005000:	4620      	mov	r0, r4
 8005002:	b00b      	add	sp, #44	; 0x2c
 8005004:	bd30      	pop	{r4, r5, pc}
 8005006:	bf00      	nop
 8005008:	0802b6a8 	.word	0x0802b6a8

0800500c <_ZN17Main_MenuViewBase11setupScreenEv>:
}

void Main_MenuViewBase::setupScreen()
{

}
 800500c:	4770      	bx	lr

0800500e <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800500e:	4770      	bx	lr

08005010 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8005010:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005012:	68c2      	ldr	r2, [r0, #12]
 8005014:	6844      	ldr	r4, [r0, #4]
 8005016:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8005018:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800501a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800501e:	07d2      	lsls	r2, r2, #31
 8005020:	bf48      	it	mi
 8005022:	5962      	ldrmi	r2, [r4, r5]
 8005024:	689b      	ldr	r3, [r3, #8]
    }
 8005026:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005028:	bf48      	it	mi
 800502a:	58d3      	ldrmi	r3, [r2, r3]
 800502c:	4718      	bx	r3

0800502e <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800502e:	6843      	ldr	r3, [r0, #4]
 8005030:	b12b      	cbz	r3, 800503e <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8005032:	6883      	ldr	r3, [r0, #8]
 8005034:	b92b      	cbnz	r3, 8005042 <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8005036:	68c0      	ldr	r0, [r0, #12]
 8005038:	f000 0001 	and.w	r0, r0, #1
 800503c:	4770      	bx	lr
 800503e:	4618      	mov	r0, r3
 8005040:	4770      	bx	lr
 8005042:	2001      	movs	r0, #1
    }
 8005044:	4770      	bx	lr

08005046 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005046:	b510      	push	{r4, lr}
 8005048:	2110      	movs	r1, #16
 800504a:	4604      	mov	r4, r0
 800504c:	f022 fa97 	bl	802757e <_ZdlPvj>
 8005050:	4620      	mov	r0, r4
 8005052:	bd10      	pop	{r4, pc}

08005054 <_ZN17Main_MenuViewBaseD1Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 8005054:	b510      	push	{r4, lr}
 8005056:	4b03      	ldr	r3, [pc, #12]	; (8005064 <_ZN17Main_MenuViewBaseD1Ev+0x10>)
 8005058:	6003      	str	r3, [r0, #0]
 800505a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800505c:	f00e f82e 	bl	80130bc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005060:	4620      	mov	r0, r4
 8005062:	bd10      	pop	{r4, pc}
 8005064:	0802b720 	.word	0x0802b720

08005068 <_ZN17Main_MenuViewBaseD0Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 8005068:	b507      	push	{r0, r1, r2, lr}
 800506a:	4b07      	ldr	r3, [pc, #28]	; (8005088 <_ZN17Main_MenuViewBaseD0Ev+0x20>)
 800506c:	6003      	str	r3, [r0, #0]
 800506e:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005070:	f00e f824 	bl	80130bc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005074:	9801      	ldr	r0, [sp, #4]
 8005076:	f241 117c 	movw	r1, #4476	; 0x117c
 800507a:	f022 fa80 	bl	802757e <_ZdlPvj>
 800507e:	9801      	ldr	r0, [sp, #4]
 8005080:	b003      	add	sp, #12
 8005082:	f85d fb04 	ldr.w	pc, [sp], #4
 8005086:	bf00      	nop
 8005088:	0802b720 	.word	0x0802b720

0800508c <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Main_MenuViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 800508c:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel1)
 800508e:	f500 7334 	add.w	r3, r0, #720	; 0x2d0
 8005092:	4299      	cmp	r1, r3
{
 8005094:	4604      	mov	r4, r0
 8005096:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel1)
 8005098:	d103      	bne.n	80050a2 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Main_MenuViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800509a:	f00f fd11 	bl	8014ac0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel1 clicked change screen to Measurement
        //Go to Measurement with screen transition towards East
        application().gotoMeasurementScreenWipeTransitionEast();
 800509e:	f7fe fb1d 	bl	80036dc <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 80050a2:	f504 7322 	add.w	r3, r4, #648	; 0x288
 80050a6:	429d      	cmp	r5, r3
 80050a8:	d103      	bne.n	80050b2 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 80050aa:	f00f fd09 	bl	8014ac0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel2 clicked change screen to Calibration
        //Go to Calibration with screen transition towards East
        application().gotoCalibrationScreenWipeTransitionEast();
 80050ae:	f7fe fba5 	bl	80037fc <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel3)
 80050b2:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80050b6:	429d      	cmp	r5, r3
 80050b8:	d103      	bne.n	80050c2 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x36>
 80050ba:	f00f fd01 	bl	8014ac0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction3
        //When buttonWithLabel3 clicked change screen to Project_Info
        //Go to Project_Info with screen transition towards East
        application().gotoProject_InfoScreenWipeTransitionEast();
 80050be:	f7fe fbdd 	bl	800387c <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithIcon1)
 80050c2:	f504 7446 	add.w	r4, r4, #792	; 0x318
 80050c6:	42a5      	cmp	r5, r4
 80050c8:	d10a      	bne.n	80050e0 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x54>
    {
        //Interaction4
        //When buttonWithIcon1 clicked execute C++ code
        //Execute C++ code
        #ifndef SIMULATOR
        HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 80050ca:	4806      	ldr	r0, [pc, #24]	; (80050e4 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x58>)
 80050cc:	2200      	movs	r2, #0
 80050ce:	2120      	movs	r1, #32
 80050d0:	f003 ff7a 	bl	8008fc8 <HAL_GPIO_WritePin>
 80050d4:	f00f fcf4 	bl	8014ac0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction5
        //When buttonWithIcon1 clicked change screen to Shutting_Off
        //Go to Shutting_Off with no screen transition
        application().gotoShutting_OffScreenNoTransition();
    }
}
 80050d8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoShutting_OffScreenNoTransition();
 80050dc:	f7fe bbde 	b.w	800389c <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 80050e0:	bd38      	pop	{r3, r4, r5, pc}
 80050e2:	bf00      	nop
 80050e4:	40021000 	.word	0x40021000

080050e8 <_ZN17Main_MenuViewBaseC1Ev>:
Main_MenuViewBase::Main_MenuViewBase() :
 80050e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80050ec:	ed2d 8b06 	vpush	{d8-d10}
 80050f0:	4604      	mov	r4, r0
 80050f2:	b08f      	sub	sp, #60	; 0x3c
    buttonCallback(this, &Main_MenuViewBase::buttonCallbackHandler)
 80050f4:	46a3      	mov	fp, r4
        : presenter(0)
 80050f6:	2500      	movs	r5, #0
 80050f8:	f011 f962 	bl	80163c0 <_ZN8touchgfx6ScreenC1Ev>
 80050fc:	4b6a      	ldr	r3, [pc, #424]	; (80052a8 <_ZN17Main_MenuViewBaseC1Ev+0x1c0>)
 80050fe:	63e5      	str	r5, [r4, #60]	; 0x3c
 8005100:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8005104:	2226      	movs	r2, #38	; 0x26
 8005106:	4629      	mov	r1, r5
 8005108:	4658      	mov	r0, fp
 800510a:	f023 fa2e 	bl	802856a <memset>
 800510e:	4658      	mov	r0, fp
 8005110:	f7fd f9ee 	bl	80024f0 <_ZN8touchgfx6WidgetC1Ev>
 8005114:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8005118:	26ff      	movs	r6, #255	; 0xff
 800511a:	4b64      	ldr	r3, [pc, #400]	; (80052ac <_ZN17Main_MenuViewBaseC1Ev+0x1c4>)
 800511c:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800511e:	2226      	movs	r2, #38	; 0x26
 8005120:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8005124:	4629      	mov	r1, r5
 8005126:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800512a:	4650      	mov	r0, sl
        : color(col)
 800512c:	66a5      	str	r5, [r4, #104]	; 0x68
 800512e:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8005132:	f023 fa1a 	bl	802856a <memset>
 8005136:	4650      	mov	r0, sl
 8005138:	f7fd f9da 	bl	80024f0 <_ZN8touchgfx6WidgetC1Ev>
 800513c:	4b5c      	ldr	r3, [pc, #368]	; (80052b0 <_ZN17Main_MenuViewBaseC1Ev+0x1c8>)
 800513e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8005140:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 8005144:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8005148:	a90c      	add	r1, sp, #48	; 0x30
 800514a:	4650      	mov	r0, sl
 800514c:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8005150:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8005154:	f00c ffab 	bl	80120ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8005158:	4648      	mov	r0, r9
 800515a:	f7fd f9db 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 800515e:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 8005162:	4b54      	ldr	r3, [pc, #336]	; (80052b4 <_ZN17Main_MenuViewBaseC1Ev+0x1cc>)
 8005164:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8005168:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 800516c:	4638      	mov	r0, r7
 800516e:	f00b fe67 	bl	8010e40 <_ZN8touchgfx4LineC1Ev>
 8005172:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8005176:	4618      	mov	r0, r3
 8005178:	9303      	str	r3, [sp, #12]
 800517a:	f7fc f8a1 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800517e:	4b4e      	ldr	r3, [pc, #312]	; (80052b8 <_ZN17Main_MenuViewBaseC1Ev+0x1d0>)
 8005180:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8005184:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 8005188:	3324      	adds	r3, #36	; 0x24
 800518a:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 800518e:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8005192:	4640      	mov	r0, r8
 8005194:	f7fd f9be 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 8005198:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 800519c:	4618      	mov	r0, r3
 800519e:	ee08 3a10 	vmov	s16, r3
 80051a2:	f7fd f9b7 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 80051a6:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 80051aa:	4618      	mov	r0, r3
 80051ac:	ee08 3a90 	vmov	s17, r3
 80051b0:	f7fd f9b0 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 80051b4:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80051b8:	4618      	mov	r0, r3
 80051ba:	ee09 3a10 	vmov	s18, r3
 80051be:	f00d f8b7 	bl	8012330 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80051c2:	f504 7322 	add.w	r3, r4, #648	; 0x288
 80051c6:	4618      	mov	r0, r3
 80051c8:	ee09 3a90 	vmov	s19, r3
 80051cc:	f00d f8b0 	bl	8012330 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80051d0:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80051d4:	4618      	mov	r0, r3
 80051d6:	ee0a 3a10 	vmov	s20, r3
 80051da:	f00d f8a9 	bl	8012330 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80051de:	f504 7346 	add.w	r3, r4, #792	; 0x318
 80051e2:	4618      	mov	r0, r3
 80051e4:	ee0a 3a90 	vmov	s21, r3
 80051e8:	f00c ff3a 	bl	8012060 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80051ec:	4a33      	ldr	r2, [pc, #204]	; (80052bc <_ZN17Main_MenuViewBaseC1Ev+0x1d4>)
 80051ee:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80051f2:	e9c3 245b 	strd	r2, r4, [r3, #364]	; 0x16c
 80051f6:	4a32      	ldr	r2, [pc, #200]	; (80052c0 <_ZN17Main_MenuViewBaseC1Ev+0x1d8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80051f8:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80051fc:	e9c3 255d 	strd	r2, r5, [r3, #372]	; 0x174
 8005200:	f504 7057 	add.w	r0, r4, #860	; 0x35c
 8005204:	f00d ff50 	bl	80130a8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8005208:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800520c:	462a      	mov	r2, r5
 800520e:	4658      	mov	r0, fp
 8005210:	9300      	str	r3, [sp, #0]
 8005212:	4629      	mov	r1, r5
 8005214:	23f0      	movs	r3, #240	; 0xf0
 8005216:	f7fd f957 	bl	80024c8 <_ZN8touchgfx8Drawable11setPositionEssss>
 800521a:	1d26      	adds	r6, r4, #4
        color = newColor;
 800521c:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8005220:	66a3      	str	r3, [r4, #104]	; 0x68
 8005222:	4659      	mov	r1, fp
 8005224:	4630      	mov	r0, r6
 8005226:	f00a f9b3 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 800522a:	462a      	mov	r2, r5
 800522c:	4650      	mov	r0, sl
 800522e:	4629      	mov	r1, r5
 8005230:	f7fd f93d 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8005234:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8005236:	4650      	mov	r0, sl
 8005238:	a90c      	add	r1, sp, #48	; 0x30
 800523a:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 800523e:	f00c ff36 	bl	80120ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8005242:	4651      	mov	r1, sl
 8005244:	4630      	mov	r0, r6
 8005246:	f00a f9a3 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(86, 308);
 800524a:	f44f 729a 	mov.w	r2, #308	; 0x134
 800524e:	2156      	movs	r1, #86	; 0x56
 8005250:	4648      	mov	r0, r9
 8005252:	f7fd f92c 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8005256:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 800525a:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 800525e:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8005262:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8005266:	4650      	mov	r0, sl
 8005268:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 800526c:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8005270:	4649      	mov	r1, r9
 8005272:	4798      	blx	r3
 8005274:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8005278:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 800527c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005280:	4b10      	ldr	r3, [pc, #64]	; (80052c4 <_ZN17Main_MenuViewBaseC1Ev+0x1dc>)
 8005282:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_UQO1).getText());
 8005284:	f504 7a55 	add.w	sl, r4, #852	; 0x354
 8005288:	b92b      	cbnz	r3, 8005296 <_ZN17Main_MenuViewBaseC1Ev+0x1ae>
 800528a:	4b0f      	ldr	r3, [pc, #60]	; (80052c8 <_ZN17Main_MenuViewBaseC1Ev+0x1e0>)
 800528c:	4a0f      	ldr	r2, [pc, #60]	; (80052cc <_ZN17Main_MenuViewBaseC1Ev+0x1e4>)
 800528e:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005290:	480f      	ldr	r0, [pc, #60]	; (80052d0 <_ZN17Main_MenuViewBaseC1Ev+0x1e8>)
 8005292:	f022 ff65 	bl	8028160 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8005296:	4b0f      	ldr	r3, [pc, #60]	; (80052d4 <_ZN17Main_MenuViewBaseC1Ev+0x1ec>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005298:	881b      	ldrh	r3, [r3, #0]
 800529a:	2b21      	cmp	r3, #33	; 0x21
 800529c:	d81e      	bhi.n	80052dc <_ZN17Main_MenuViewBaseC1Ev+0x1f4>
 800529e:	4b0e      	ldr	r3, [pc, #56]	; (80052d8 <_ZN17Main_MenuViewBaseC1Ev+0x1f0>)
 80052a0:	4a0a      	ldr	r2, [pc, #40]	; (80052cc <_ZN17Main_MenuViewBaseC1Ev+0x1e4>)
 80052a2:	2161      	movs	r1, #97	; 0x61
 80052a4:	e7f4      	b.n	8005290 <_ZN17Main_MenuViewBaseC1Ev+0x1a8>
 80052a6:	bf00      	nop
 80052a8:	0802b720 	.word	0x0802b720
 80052ac:	0802c6d0 	.word	0x0802c6d0
 80052b0:	0802c898 	.word	0x0802c898
 80052b4:	08029d98 	.word	0x08029d98
 80052b8:	0802c404 	.word	0x0802c404
 80052bc:	0802b708 	.word	0x0802b708
 80052c0:	0800508d 	.word	0x0800508d
 80052c4:	20013814 	.word	0x20013814
 80052c8:	08029bd8 	.word	0x08029bd8
 80052cc:	08029cda 	.word	0x08029cda
 80052d0:	08029c55 	.word	0x08029c55
 80052d4:	20013818 	.word	0x20013818
 80052d8:	08029c9c 	.word	0x08029c9c
        return texts->getText(typedTextId);
 80052dc:	4ba5      	ldr	r3, [pc, #660]	; (8005574 <_ZN17Main_MenuViewBaseC1Ev+0x48c>)
 80052de:	2121      	movs	r1, #33	; 0x21
 80052e0:	6818      	ldr	r0, [r3, #0]
 80052e2:	f002 fc29 	bl	8007b38 <_ZNK8touchgfx5Texts7getTextEt>
 80052e6:	4aa4      	ldr	r2, [pc, #656]	; (8005578 <_ZN17Main_MenuViewBaseC1Ev+0x490>)
 80052e8:	4603      	mov	r3, r0
 80052ea:	2104      	movs	r1, #4
 80052ec:	4650      	mov	r0, sl
 80052ee:	f012 fd4b 	bl	8017d88 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3.resizeToCurrentText();
 80052f2:	4648      	mov	r0, r9
        wc1 = value;
 80052f4:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 80052f8:	f00c fade 	bl	80118b8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80052fc:	4b9f      	ldr	r3, [pc, #636]	; (800557c <_ZN17Main_MenuViewBaseC1Ev+0x494>)
 80052fe:	930c      	str	r3, [sp, #48]	; 0x30
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2SIJ));
 8005300:	a90c      	add	r1, sp, #48	; 0x30
 8005302:	2322      	movs	r3, #34	; 0x22
 8005304:	4648      	mov	r0, r9
 8005306:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800530a:	f00c faf5 	bl	80118f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800530e:	4649      	mov	r1, r9
 8005310:	4630      	mov	r0, r6
 8005312:	f00a f93d 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8005316:	230a      	movs	r3, #10
 8005318:	9300      	str	r3, [sp, #0]
 800531a:	2232      	movs	r2, #50	; 0x32
 800531c:	23f0      	movs	r3, #240	; 0xf0
 800531e:	4629      	mov	r1, r5
 8005320:	4638      	mov	r0, r7
 8005322:	f7fd f8d1 	bl	80024c8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005326:	9b03      	ldr	r3, [sp, #12]
 8005328:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800532c:	22a0      	movs	r2, #160	; 0xa0
 800532e:	4611      	mov	r1, r2
 8005330:	4638      	mov	r0, r7
 8005332:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 8005336:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 800533a:	f00b fe97 	bl	801106c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800533e:	22a0      	movs	r2, #160	; 0xa0
 8005340:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8005344:	4638      	mov	r0, r7
 8005346:	f00b fe9c 	bl	8011082 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800534a:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 800534e:	2b20      	cmp	r3, #32
 8005350:	d005      	beq.n	800535e <_ZN17Main_MenuViewBaseC1Ev+0x276>
        lineWidthQ5 = widthQ5;
 8005352:	2320      	movs	r3, #32
 8005354:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8005358:	4638      	mov	r0, r7
 800535a:	f00b fd91 	bl	8010e80 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800535e:	4638      	mov	r0, r7
 8005360:	2101      	movs	r1, #1
 8005362:	f00b fe99 	bl	8011098 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8005366:	4639      	mov	r1, r7
 8005368:	4630      	mov	r0, r6
 800536a:	ad04      	add	r5, sp, #16
        color = newColor;
 800536c:	f04f 37ff 	mov.w	r7, #4294967295
 8005370:	f00a f90e 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8005374:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 8005378:	2223      	movs	r2, #35	; 0x23
 800537a:	4640      	mov	r0, r8
 800537c:	2145      	movs	r1, #69	; 0x45
 800537e:	f7fd f896 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8005382:	4641      	mov	r1, r8
 8005384:	4628      	mov	r0, r5
        color = newColor;
 8005386:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 800538a:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 800538e:	f00c f819 	bl	80113c4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005392:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6D7Z));
 8005396:	f10d 0930 	add.w	r9, sp, #48	; 0x30
 800539a:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 800539e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80053a2:	f8df b1d8 	ldr.w	fp, [pc, #472]	; 800557c <_ZN17Main_MenuViewBaseC1Ev+0x494>
 80053a6:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 80053aa:	2347      	movs	r3, #71	; 0x47
 80053ac:	4649      	mov	r1, r9
 80053ae:	4640      	mov	r0, r8
 80053b0:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80053b4:	f00c faa0 	bl	80118f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80053b8:	4641      	mov	r1, r8
 80053ba:	4630      	mov	r0, r6
 80053bc:	f00a f8e8 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80053c0:	ee18 0a10 	vmov	r0, s16
 80053c4:	220c      	movs	r2, #12
 80053c6:	2136      	movs	r1, #54	; 0x36
 80053c8:	f7fd f871 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 80053cc:	ee18 1a10 	vmov	r1, s16
 80053d0:	4628      	mov	r0, r5
        color = newColor;
 80053d2:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 80053d6:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 80053da:	f00b fff3 	bl	80113c4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80053de:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80053e2:	ee18 3a10 	vmov	r3, s16
 80053e6:	333c      	adds	r3, #60	; 0x3c
 80053e8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80053ec:	2348      	movs	r3, #72	; 0x48
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9K1W));
 80053ee:	ee18 0a10 	vmov	r0, s16
 80053f2:	4649      	mov	r1, r9
 80053f4:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80053f8:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 80053fc:	f00c fa7c 	bl	80118f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005400:	ee18 1a10 	vmov	r1, s16
 8005404:	4630      	mov	r0, r6
 8005406:	f00a f8c3 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(88, 60);
 800540a:	ee18 0a90 	vmov	r0, s17
 800540e:	223c      	movs	r2, #60	; 0x3c
 8005410:	2158      	movs	r1, #88	; 0x58
 8005412:	f7fd f84c 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8005416:	ee18 1a90 	vmov	r1, s17
 800541a:	4628      	mov	r0, r5
        color = newColor;
 800541c:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8005420:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8005424:	f00b ffce 	bl	80113c4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005428:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800542c:	ee18 3a90 	vmov	r3, s17
 8005430:	333c      	adds	r3, #60	; 0x3c
 8005432:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005436:	2311      	movs	r3, #17
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L4HV));
 8005438:	ee18 0a90 	vmov	r0, s17
 800543c:	4649      	mov	r1, r9
 800543e:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8005442:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 8005446:	f00c fa57 	bl	80118f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800544a:	ee18 1a90 	vmov	r1, s17
 800544e:	4630      	mov	r0, r6
 8005450:	f00a f89e 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8005454:	ee19 0a10 	vmov	r0, s18
 8005458:	22f0      	movs	r2, #240	; 0xf0
 800545a:	2121      	movs	r1, #33	; 0x21
 800545c:	f7fd f827 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8005460:	f04f 0b03 	mov.w	fp, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005464:	464a      	mov	r2, r9
 8005466:	f04f 0802 	mov.w	r8, #2
 800546a:	a90b      	add	r1, sp, #44	; 0x2c
 800546c:	ee19 0a10 	vmov	r0, s18
 8005470:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8005474:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
    buttonWithLabel3.setAction(buttonCallback);
 8005478:	f504 558b 	add.w	r5, r4, #4448	; 0x1160
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800547c:	f00c fc21 	bl	8011cc2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8005480:	2349      	movs	r3, #73	; 0x49
 8005482:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8005486:	350c      	adds	r5, #12
        updateTextPosition();
 8005488:	ee19 0a10 	vmov	r0, s18
 800548c:	f7fd f864 	bl	8002558 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005490:	ee19 1a10 	vmov	r1, s18
 8005494:	4630      	mov	r0, r6
        colorPressed = col;
 8005496:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
 800549a:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 800549e:	f00a f877 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 80054a2:	ee19 0a90 	vmov	r0, s19
 80054a6:	22aa      	movs	r2, #170	; 0xaa
 80054a8:	2121      	movs	r1, #33	; 0x21
 80054aa:	f7fd f800 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80054ae:	464a      	mov	r2, r9
 80054b0:	a90b      	add	r1, sp, #44	; 0x2c
 80054b2:	ee19 0a90 	vmov	r0, s19
 80054b6:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 80054ba:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 80054be:	f00c fc00 	bl	8011cc2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80054c2:	234a      	movs	r3, #74	; 0x4a
 80054c4:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 80054c8:	ee19 0a90 	vmov	r0, s19
 80054cc:	f7fd f844 	bl	8002558 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80054d0:	ee19 1a90 	vmov	r1, s19
 80054d4:	4630      	mov	r0, r6
        colorPressed = col;
 80054d6:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 80054da:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 80054de:	f00a f857 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 80054e2:	ee1a 0a10 	vmov	r0, s20
 80054e6:	2264      	movs	r2, #100	; 0x64
 80054e8:	2121      	movs	r1, #33	; 0x21
 80054ea:	f7fc ffe0 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80054ee:	464a      	mov	r2, r9
 80054f0:	a90b      	add	r1, sp, #44	; 0x2c
 80054f2:	ee1a 0a10 	vmov	r0, s20
 80054f6:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 80054fa:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 80054fe:	f00c fbe0 	bl	8011cc2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005502:	234b      	movs	r3, #75	; 0x4b
 8005504:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
        updateTextPosition();
 8005508:	ee1a 0a10 	vmov	r0, s20
 800550c:	f7fd f824 	bl	8002558 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005510:	ee1a 1a10 	vmov	r1, s20
 8005514:	4630      	mov	r0, r6
        colorPressed = col;
 8005516:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 800551a:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 800551e:	f00a f837 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon1.setXY(198, 5);
 8005522:	ee1a 0a90 	vmov	r0, s21
 8005526:	2205      	movs	r2, #5
 8005528:	21c6      	movs	r1, #198	; 0xc6
 800552a:	f7fc ffc0 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 800552e:	2301      	movs	r3, #1
 8005530:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005534:	230a      	movs	r3, #10
    buttonWithIcon1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID));
 8005536:	ee1a 0a90 	vmov	r0, s21
 800553a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800553e:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8005542:	aa0a      	add	r2, sp, #40	; 0x28
 8005544:	ab0b      	add	r3, sp, #44	; 0x2c
 8005546:	a909      	add	r1, sp, #36	; 0x24
 8005548:	f8cd 9000 	str.w	r9, [sp]
 800554c:	f8ad a024 	strh.w	sl, [sp, #36]	; 0x24
 8005550:	f00c fcf1 	bl	8011f36 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8005554:	4630      	mov	r0, r6
 8005556:	ee1a 1a90 	vmov	r1, s21
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
    {
        iconX = x;
 800555a:	f8c4 a350 	str.w	sl, [r4, #848]	; 0x350
 800555e:	f8c4 5340 	str.w	r5, [r4, #832]	; 0x340
 8005562:	f00a f815 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8005566:	4620      	mov	r0, r4
 8005568:	b00f      	add	sp, #60	; 0x3c
 800556a:	ecbd 8b06 	vpop	{d8-d10}
 800556e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005572:	bf00      	nop
 8005574:	20013820 	.word	0x20013820
 8005578:	08029d12 	.word	0x08029d12
 800557c:	08029d88 	.word	0x08029d88

08005580 <_ZN19MeasurementViewBase11setupScreenEv>:
}

void MeasurementViewBase::setupScreen()
{

}
 8005580:	4770      	bx	lr

08005582 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005582:	4770      	bx	lr

08005584 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8005584:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005586:	68c2      	ldr	r2, [r0, #12]
 8005588:	6844      	ldr	r4, [r0, #4]
 800558a:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800558c:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800558e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8005592:	07d2      	lsls	r2, r2, #31
 8005594:	bf48      	it	mi
 8005596:	5962      	ldrmi	r2, [r4, r5]
 8005598:	689b      	ldr	r3, [r3, #8]
    }
 800559a:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800559c:	bf48      	it	mi
 800559e:	58d3      	ldrmi	r3, [r2, r3]
 80055a0:	4718      	bx	r3

080055a2 <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80055a2:	6843      	ldr	r3, [r0, #4]
 80055a4:	b12b      	cbz	r3, 80055b2 <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80055a6:	6883      	ldr	r3, [r0, #8]
 80055a8:	b92b      	cbnz	r3, 80055b6 <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80055aa:	68c0      	ldr	r0, [r0, #12]
 80055ac:	f000 0001 	and.w	r0, r0, #1
 80055b0:	4770      	bx	lr
 80055b2:	4618      	mov	r0, r3
 80055b4:	4770      	bx	lr
 80055b6:	2001      	movs	r0, #1
    }
 80055b8:	4770      	bx	lr

080055ba <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80055ba:	b510      	push	{r4, lr}
 80055bc:	2110      	movs	r1, #16
 80055be:	4604      	mov	r4, r0
 80055c0:	f021 ffdd 	bl	802757e <_ZdlPvj>
 80055c4:	4620      	mov	r0, r4
 80055c6:	bd10      	pop	{r4, pc}

080055c8 <_ZN19MeasurementViewBaseD1Ev>:
MeasurementViewBase::~MeasurementViewBase()
 80055c8:	b510      	push	{r4, lr}
 80055ca:	4b03      	ldr	r3, [pc, #12]	; (80055d8 <_ZN19MeasurementViewBaseD1Ev+0x10>)
 80055cc:	6003      	str	r3, [r0, #0]
 80055ce:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80055d0:	f00d fd74 	bl	80130bc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80055d4:	4620      	mov	r0, r4
 80055d6:	bd10      	pop	{r4, pc}
 80055d8:	0802b76c 	.word	0x0802b76c

080055dc <_ZN19MeasurementViewBaseD0Ev>:
MeasurementViewBase::~MeasurementViewBase()
 80055dc:	b507      	push	{r0, r1, r2, lr}
 80055de:	4b07      	ldr	r3, [pc, #28]	; (80055fc <_ZN19MeasurementViewBaseD0Ev+0x20>)
 80055e0:	6003      	str	r3, [r0, #0]
 80055e2:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80055e4:	f00d fd6a 	bl	80130bc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80055e8:	9801      	ldr	r0, [sp, #4]
 80055ea:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80055ee:	f021 ffc6 	bl	802757e <_ZdlPvj>
 80055f2:	9801      	ldr	r0, [sp, #4]
 80055f4:	b003      	add	sp, #12
 80055f6:	f85d fb04 	ldr.w	pc, [sp], #4
 80055fa:	bf00      	nop
 80055fc:	0802b76c 	.word	0x0802b76c

08005600 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void MeasurementViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8005600:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8005602:	f500 7310 	add.w	r3, r0, #576	; 0x240
 8005606:	4299      	cmp	r1, r3
{
 8005608:	4604      	mov	r4, r0
 800560a:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 800560c:	d103      	bne.n	8005616 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~MeasurementViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800560e:	f00f fa57 	bl	8014ac0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
 8005612:	f7fe f853 	bl	80036bc <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 8005616:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 800561a:	429d      	cmp	r5, r3
 800561c:	d103      	bne.n	8005626 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 800561e:	f00f fa4f 	bl	8014ac0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8005622:	f7fe f87b 	bl	800371c <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 8005626:	f504 7422 	add.w	r4, r4, #648	; 0x288
 800562a:	42a5      	cmp	r5, r4
 800562c:	d105      	bne.n	800563a <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 800562e:	f00f fa47 	bl	8014ac0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards East
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
    }
}
 8005632:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
 8005636:	f7fe b8a1 	b.w	800377c <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>
}
 800563a:	bd38      	pop	{r3, r4, r5, pc}

0800563c <_ZN19MeasurementViewBaseC1Ev>:
MeasurementViewBase::MeasurementViewBase() :
 800563c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005640:	ed2d 8b06 	vpush	{d8-d10}
 8005644:	4604      	mov	r4, r0
 8005646:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &MeasurementViewBase::buttonCallbackHandler)
 8005648:	46a3      	mov	fp, r4
 800564a:	2500      	movs	r5, #0
 800564c:	f010 feb8 	bl	80163c0 <_ZN8touchgfx6ScreenC1Ev>
 8005650:	4b66      	ldr	r3, [pc, #408]	; (80057ec <_ZN19MeasurementViewBaseC1Ev+0x1b0>)
 8005652:	63e5      	str	r5, [r4, #60]	; 0x3c
 8005654:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8005658:	2226      	movs	r2, #38	; 0x26
 800565a:	4629      	mov	r1, r5
 800565c:	4658      	mov	r0, fp
 800565e:	f022 ff84 	bl	802856a <memset>
 8005662:	4658      	mov	r0, fp
 8005664:	f7fc ff44 	bl	80024f0 <_ZN8touchgfx6WidgetC1Ev>
 8005668:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 800566c:	26ff      	movs	r6, #255	; 0xff
 800566e:	4b60      	ldr	r3, [pc, #384]	; (80057f0 <_ZN19MeasurementViewBaseC1Ev+0x1b4>)
 8005670:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8005672:	2226      	movs	r2, #38	; 0x26
 8005674:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8005678:	4629      	mov	r1, r5
 800567a:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800567e:	4650      	mov	r0, sl
 8005680:	66a5      	str	r5, [r4, #104]	; 0x68
 8005682:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005686:	f022 ff70 	bl	802856a <memset>
 800568a:	4650      	mov	r0, sl
 800568c:	f7fc ff30 	bl	80024f0 <_ZN8touchgfx6WidgetC1Ev>
 8005690:	4b58      	ldr	r3, [pc, #352]	; (80057f4 <_ZN19MeasurementViewBaseC1Ev+0x1b8>)
 8005692:	66e3      	str	r3, [r4, #108]	; 0x6c
 8005694:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8005698:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 800569c:	a90a      	add	r1, sp, #40	; 0x28
 800569e:	4650      	mov	r0, sl
 80056a0:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 80056a4:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80056a8:	f00c fd01 	bl	80120ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 80056ac:	4648      	mov	r0, r9
 80056ae:	f7fc ff31 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 80056b2:	4b51      	ldr	r3, [pc, #324]	; (80057f8 <_ZN19MeasurementViewBaseC1Ev+0x1bc>)
 80056b4:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 80056b8:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 80056bc:	4618      	mov	r0, r3
 80056be:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 80056c2:	f504 7796 	add.w	r7, r4, #300	; 0x12c
 80056c6:	ee08 3a90 	vmov	s17, r3
 80056ca:	f7fc ff23 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 80056ce:	4638      	mov	r0, r7
 80056d0:	f00b fbb6 	bl	8010e40 <_ZN8touchgfx4LineC1Ev>
 80056d4:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80056d8:	4618      	mov	r0, r3
 80056da:	9303      	str	r3, [sp, #12]
 80056dc:	f7fb fdf0 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80056e0:	4b46      	ldr	r3, [pc, #280]	; (80057fc <_ZN19MeasurementViewBaseC1Ev+0x1c0>)
 80056e2:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 80056e6:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 80056ea:	3324      	adds	r3, #36	; 0x24
 80056ec:	f8c4 31a4 	str.w	r3, [r4, #420]	; 0x1a4
 80056f0:	f8c4 51a8 	str.w	r5, [r4, #424]	; 0x1a8
 80056f4:	4640      	mov	r0, r8
 80056f6:	f7fc ff0d 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 80056fa:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 80056fe:	4618      	mov	r0, r3
 8005700:	ee08 3a10 	vmov	s16, r3
 8005704:	f7fc ff06 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 8005708:	f504 7310 	add.w	r3, r4, #576	; 0x240
 800570c:	4618      	mov	r0, r3
 800570e:	ee09 3a10 	vmov	s18, r3
 8005712:	f00c fe0d 	bl	8012330 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005716:	f504 7322 	add.w	r3, r4, #648	; 0x288
 800571a:	4618      	mov	r0, r3
 800571c:	ee09 3a90 	vmov	s19, r3
 8005720:	f00c fe06 	bl	8012330 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005724:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8005728:	4618      	mov	r0, r3
 800572a:	ee0a 3a10 	vmov	s20, r3
 800572e:	f00c fdff 	bl	8012330 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8005732:	4a33      	ldr	r2, [pc, #204]	; (8005800 <_ZN19MeasurementViewBaseC1Ev+0x1c4>)
 8005734:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8005738:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 800573c:	4a31      	ldr	r2, [pc, #196]	; (8005804 <_ZN19MeasurementViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800573e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8005742:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8005746:	f504 7048 	add.w	r0, r4, #800	; 0x320
 800574a:	f00d fcad 	bl	80130a8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800574e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8005752:	462a      	mov	r2, r5
 8005754:	4658      	mov	r0, fp
 8005756:	9300      	str	r3, [sp, #0]
 8005758:	4629      	mov	r1, r5
 800575a:	23f0      	movs	r3, #240	; 0xf0
 800575c:	f7fc feb4 	bl	80024c8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005760:	1d26      	adds	r6, r4, #4
        color = newColor;
 8005762:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8005766:	66a3      	str	r3, [r4, #104]	; 0x68
 8005768:	4659      	mov	r1, fp
 800576a:	4630      	mov	r0, r6
 800576c:	f009 ff10 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8005770:	462a      	mov	r2, r5
 8005772:	4650      	mov	r0, sl
 8005774:	4629      	mov	r1, r5
 8005776:	f7fc fe9a 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 800577a:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800577c:	4650      	mov	r0, sl
 800577e:	a90a      	add	r1, sp, #40	; 0x28
 8005780:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005784:	f00c fc93 	bl	80120ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8005788:	4651      	mov	r1, sl
 800578a:	4630      	mov	r0, r6
 800578c:	f009 ff00 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8005790:	f44f 729a 	mov.w	r2, #308	; 0x134
 8005794:	2156      	movs	r1, #86	; 0x56
 8005796:	4648      	mov	r0, r9
 8005798:	f7fc fe89 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800579c:	f04f 33ff 	mov.w	r3, #4294967295
 80057a0:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 80057a4:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 80057a8:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 80057ac:	f10d 0b10 	add.w	fp, sp, #16
 80057b0:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80057b4:	4649      	mov	r1, r9
 80057b6:	4658      	mov	r0, fp
 80057b8:	4798      	blx	r3
 80057ba:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 80057be:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 80057c2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80057c6:	4b10      	ldr	r3, [pc, #64]	; (8005808 <_ZN19MeasurementViewBaseC1Ev+0x1cc>)
 80057c8:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_0CQH).getText());
 80057ca:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 80057ce:	b92b      	cbnz	r3, 80057dc <_ZN19MeasurementViewBaseC1Ev+0x1a0>
 80057d0:	4b0e      	ldr	r3, [pc, #56]	; (800580c <_ZN19MeasurementViewBaseC1Ev+0x1d0>)
 80057d2:	4a0f      	ldr	r2, [pc, #60]	; (8005810 <_ZN19MeasurementViewBaseC1Ev+0x1d4>)
 80057d4:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80057d6:	480f      	ldr	r0, [pc, #60]	; (8005814 <_ZN19MeasurementViewBaseC1Ev+0x1d8>)
 80057d8:	f022 fcc2 	bl	8028160 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80057dc:	4b0e      	ldr	r3, [pc, #56]	; (8005818 <_ZN19MeasurementViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80057de:	881b      	ldrh	r3, [r3, #0]
 80057e0:	2b12      	cmp	r3, #18
 80057e2:	d81d      	bhi.n	8005820 <_ZN19MeasurementViewBaseC1Ev+0x1e4>
 80057e4:	4b0d      	ldr	r3, [pc, #52]	; (800581c <_ZN19MeasurementViewBaseC1Ev+0x1e0>)
 80057e6:	4a0a      	ldr	r2, [pc, #40]	; (8005810 <_ZN19MeasurementViewBaseC1Ev+0x1d4>)
 80057e8:	2161      	movs	r1, #97	; 0x61
 80057ea:	e7f4      	b.n	80057d6 <_ZN19MeasurementViewBaseC1Ev+0x19a>
 80057ec:	0802b76c 	.word	0x0802b76c
 80057f0:	0802c6d0 	.word	0x0802c6d0
 80057f4:	0802c898 	.word	0x0802c898
 80057f8:	08029d98 	.word	0x08029d98
 80057fc:	0802c404 	.word	0x0802c404
 8005800:	0802b754 	.word	0x0802b754
 8005804:	08005601 	.word	0x08005601
 8005808:	20013814 	.word	0x20013814
 800580c:	08029bd8 	.word	0x08029bd8
 8005810:	08029cda 	.word	0x08029cda
 8005814:	08029c55 	.word	0x08029c55
 8005818:	20013818 	.word	0x20013818
 800581c:	08029c9c 	.word	0x08029c9c
        return texts->getText(typedTextId);
 8005820:	4b95      	ldr	r3, [pc, #596]	; (8005a78 <_ZN19MeasurementViewBaseC1Ev+0x43c>)
 8005822:	2112      	movs	r1, #18
 8005824:	6818      	ldr	r0, [r3, #0]
 8005826:	f002 f987 	bl	8007b38 <_ZNK8touchgfx5Texts7getTextEt>
 800582a:	4a94      	ldr	r2, [pc, #592]	; (8005a7c <_ZN19MeasurementViewBaseC1Ev+0x440>)
 800582c:	4603      	mov	r3, r0
 800582e:	2104      	movs	r1, #4
 8005830:	4650      	mov	r0, sl
 8005832:	f012 faa9 	bl	8017d88 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 8005836:	4648      	mov	r0, r9
        wc1 = value;
 8005838:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 800583c:	f00c f83c 	bl	80118b8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8005840:	f8df a23c 	ldr.w	sl, [pc, #572]	; 8005a80 <_ZN19MeasurementViewBaseC1Ev+0x444>
 8005844:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8005848:	2313      	movs	r3, #19
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TOET));
 800584a:	4648      	mov	r0, r9
 800584c:	a90a      	add	r1, sp, #40	; 0x28
 800584e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005852:	f00c f851 	bl	80118f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005856:	4649      	mov	r1, r9
 8005858:	4630      	mov	r0, r6
 800585a:	f009 fe99 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(61, 60);
 800585e:	223c      	movs	r2, #60	; 0x3c
 8005860:	ee18 0a90 	vmov	r0, s17
 8005864:	213d      	movs	r1, #61	; 0x3d
 8005866:	f7fc fe22 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800586a:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 800586e:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 8005872:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8005876:	4658      	mov	r0, fp
        linespace = space;
 8005878:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 800587c:	f00b fda2 	bl	80113c4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005880:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8005884:	f504 7390 	add.w	r3, r4, #288	; 0x120
 8005888:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800588c:	f04f 0920 	mov.w	r9, #32
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q8CP));
 8005890:	ee18 0a90 	vmov	r0, s17
 8005894:	a90a      	add	r1, sp, #40	; 0x28
 8005896:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 800589a:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 800589e:	f00c f82b 	bl	80118f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80058a2:	ee18 1a90 	vmov	r1, s17
 80058a6:	4630      	mov	r0, r6
 80058a8:	f009 fe72 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80058ac:	230a      	movs	r3, #10
 80058ae:	9300      	str	r3, [sp, #0]
 80058b0:	2232      	movs	r2, #50	; 0x32
 80058b2:	23f0      	movs	r3, #240	; 0xf0
 80058b4:	4629      	mov	r1, r5
 80058b6:	4638      	mov	r0, r7
 80058b8:	f7fc fe06 	bl	80024c8 <_ZN8touchgfx8Drawable11setPositionEssss>
 80058bc:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80058c0:	22a0      	movs	r2, #160	; 0xa0
 80058c2:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
        color565 = LCD16bpp::getNativeColor(painterColor);
 80058c6:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 80058ca:	9b03      	ldr	r3, [sp, #12]
 80058cc:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 80058d0:	4611      	mov	r1, r2
 80058d2:	4638      	mov	r0, r7
 80058d4:	f00b fbca 	bl	801106c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80058d8:	22a0      	movs	r2, #160	; 0xa0
 80058da:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80058de:	4638      	mov	r0, r7
 80058e0:	f00b fbcf 	bl	8011082 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80058e4:	f8d4 3168 	ldr.w	r3, [r4, #360]	; 0x168
 80058e8:	454b      	cmp	r3, r9
 80058ea:	d004      	beq.n	80058f6 <_ZN19MeasurementViewBaseC1Ev+0x2ba>
        lineWidthQ5 = widthQ5;
 80058ec:	f8c4 9168 	str.w	r9, [r4, #360]	; 0x168
        updateCachedShape();
 80058f0:	4638      	mov	r0, r7
 80058f2:	f00b fac5 	bl	8010e80 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80058f6:	4638      	mov	r0, r7
 80058f8:	2101      	movs	r1, #1
 80058fa:	f00b fbcd 	bl	8011098 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80058fe:	4639      	mov	r1, r7
 8005900:	4630      	mov	r0, r6
 8005902:	f009 fe45 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8005906:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 800590a:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 35);
 800590c:	2223      	movs	r2, #35	; 0x23
 800590e:	4640      	mov	r0, r8
        linespace = space;
 8005910:	f04f 0a00 	mov.w	sl, #0
 8005914:	2145      	movs	r1, #69	; 0x45
 8005916:	f7fc fdca 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800591a:	4641      	mov	r1, r8
 800591c:	4638      	mov	r0, r7
        color = newColor;
 800591e:	f8c4 51e0 	str.w	r5, [r4, #480]	; 0x1e0
        linespace = space;
 8005922:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8005926:	f00b fd4d 	bl	80113c4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800592a:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 800592e:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8005932:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005936:	f8df 9148 	ldr.w	r9, [pc, #328]	; 8005a80 <_ZN19MeasurementViewBaseC1Ev+0x444>
 800593a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800593e:	2345      	movs	r3, #69	; 0x45
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_V2L5));
 8005940:	a90a      	add	r1, sp, #40	; 0x28
 8005942:	4640      	mov	r0, r8
 8005944:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005948:	f00b ffd6 	bl	80118f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800594c:	4641      	mov	r1, r8
 800594e:	4630      	mov	r0, r6
 8005950:	f009 fe1e 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8005954:	ee18 0a10 	vmov	r0, s16
 8005958:	220c      	movs	r2, #12
 800595a:	2136      	movs	r1, #54	; 0x36
 800595c:	f7fc fda7 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8005960:	ee18 1a10 	vmov	r1, s16
 8005964:	4638      	mov	r0, r7
        color = newColor;
 8005966:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
        linespace = space;
 800596a:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 800596e:	f00b fd29 	bl	80113c4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005972:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8005976:	ee18 3a10 	vmov	r3, s16
 800597a:	333c      	adds	r3, #60	; 0x3c
 800597c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005980:	2346      	movs	r3, #70	; 0x46
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FIV6));
 8005982:	ee18 0a10 	vmov	r0, s16
 8005986:	a90a      	add	r1, sp, #40	; 0x28
 8005988:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800598c:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8005990:	f00b ffb2 	bl	80118f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005994:	ee18 1a10 	vmov	r1, s16
 8005998:	4630      	mov	r0, r6
 800599a:	f009 fdf9 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 800599e:	ee19 0a10 	vmov	r0, s18
 80059a2:	22f0      	movs	r2, #240	; 0xf0
 80059a4:	2121      	movs	r1, #33	; 0x21
 80059a6:	f7fc fd82 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 80059aa:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80059ae:	aa0a      	add	r2, sp, #40	; 0x28
 80059b0:	f04f 0802 	mov.w	r8, #2
 80059b4:	a909      	add	r1, sp, #36	; 0x24
 80059b6:	ee19 0a10 	vmov	r0, s18
 80059ba:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 80059be:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 80059c2:	f504 5789 	add.w	r7, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80059c6:	f00c f97c 	bl	8011cc2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80059ca:	2344      	movs	r3, #68	; 0x44
 80059cc:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 80059d0:	3710      	adds	r7, #16
        updateTextPosition();
 80059d2:	ee19 0a10 	vmov	r0, s18
 80059d6:	f7fc fdbf 	bl	8002558 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80059da:	ee19 1a10 	vmov	r1, s18
 80059de:	4630      	mov	r0, r6
        colorPressed = col;
 80059e0:	e9c4 559f 	strd	r5, r5, [r4, #636]	; 0x27c
 80059e4:	f8c4 7268 	str.w	r7, [r4, #616]	; 0x268
 80059e8:	f009 fdd2 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 80059ec:	ee19 0a90 	vmov	r0, s19
 80059f0:	22aa      	movs	r2, #170	; 0xaa
 80059f2:	2121      	movs	r1, #33	; 0x21
 80059f4:	f7fc fd5b 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80059f8:	aa0a      	add	r2, sp, #40	; 0x28
 80059fa:	a909      	add	r1, sp, #36	; 0x24
 80059fc:	ee19 0a90 	vmov	r0, s19
 8005a00:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005a04:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8005a08:	f00c f95b 	bl	8011cc2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005a0c:	2343      	movs	r3, #67	; 0x43
 8005a0e:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8005a12:	ee19 0a90 	vmov	r0, s19
 8005a16:	f7fc fd9f 	bl	8002558 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005a1a:	ee19 1a90 	vmov	r1, s19
 8005a1e:	4630      	mov	r0, r6
        colorPressed = col;
 8005a20:	e9c4 55b1 	strd	r5, r5, [r4, #708]	; 0x2c4
 8005a24:	f8c4 72b0 	str.w	r7, [r4, #688]	; 0x2b0
 8005a28:	f009 fdb2 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8005a2c:	ee1a 0a10 	vmov	r0, s20
 8005a30:	2264      	movs	r2, #100	; 0x64
 8005a32:	2121      	movs	r1, #33	; 0x21
 8005a34:	f7fc fd3b 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005a38:	aa0a      	add	r2, sp, #40	; 0x28
 8005a3a:	a909      	add	r1, sp, #36	; 0x24
 8005a3c:	ee1a 0a10 	vmov	r0, s20
 8005a40:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005a44:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8005a48:	f00c f93b 	bl	8011cc2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005a4c:	2342      	movs	r3, #66	; 0x42
        updateTextPosition();
 8005a4e:	ee1a 0a10 	vmov	r0, s20
 8005a52:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8005a56:	f7fc fd7f 	bl	8002558 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005a5a:	4630      	mov	r0, r6
        colorPressed = col;
 8005a5c:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
 8005a60:	ee1a 1a10 	vmov	r1, s20
 8005a64:	f8c4 72f8 	str.w	r7, [r4, #760]	; 0x2f8
 8005a68:	f009 fd92 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8005a6c:	4620      	mov	r0, r4
 8005a6e:	b00d      	add	sp, #52	; 0x34
 8005a70:	ecbd 8b06 	vpop	{d8-d10}
 8005a74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005a78:	20013820 	.word	0x20013820
 8005a7c:	08029d12 	.word	0x08029d12
 8005a80:	08029d88 	.word	0x08029d88

08005a84 <_ZN28Measurement_AccurateViewBase11setupScreenEv>:
}

void Measurement_AccurateViewBase::setupScreen()
{

}
 8005a84:	4770      	bx	lr

08005a86 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005a86:	4770      	bx	lr

08005a88 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8005a88:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005a8a:	68c2      	ldr	r2, [r0, #12]
 8005a8c:	6844      	ldr	r4, [r0, #4]
 8005a8e:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8005a90:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8005a92:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8005a96:	07d2      	lsls	r2, r2, #31
 8005a98:	bf48      	it	mi
 8005a9a:	5962      	ldrmi	r2, [r4, r5]
 8005a9c:	689b      	ldr	r3, [r3, #8]
    }
 8005a9e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005aa0:	bf48      	it	mi
 8005aa2:	58d3      	ldrmi	r3, [r2, r3]
 8005aa4:	4718      	bx	r3

08005aa6 <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8005aa6:	6843      	ldr	r3, [r0, #4]
 8005aa8:	b12b      	cbz	r3, 8005ab6 <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8005aaa:	6883      	ldr	r3, [r0, #8]
 8005aac:	b92b      	cbnz	r3, 8005aba <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8005aae:	68c0      	ldr	r0, [r0, #12]
 8005ab0:	f000 0001 	and.w	r0, r0, #1
 8005ab4:	4770      	bx	lr
 8005ab6:	4618      	mov	r0, r3
 8005ab8:	4770      	bx	lr
 8005aba:	2001      	movs	r0, #1
    }
 8005abc:	4770      	bx	lr

08005abe <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005abe:	b510      	push	{r4, lr}
 8005ac0:	2110      	movs	r1, #16
 8005ac2:	4604      	mov	r4, r0
 8005ac4:	f021 fd5b 	bl	802757e <_ZdlPvj>
 8005ac8:	4620      	mov	r0, r4
 8005aca:	bd10      	pop	{r4, pc}

08005acc <_ZN28Measurement_AccurateViewBaseD1Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 8005acc:	b510      	push	{r4, lr}
 8005ace:	4b03      	ldr	r3, [pc, #12]	; (8005adc <_ZN28Measurement_AccurateViewBaseD1Ev+0x10>)
 8005ad0:	6003      	str	r3, [r0, #0]
 8005ad2:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005ad4:	f00d faf2 	bl	80130bc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005ad8:	4620      	mov	r0, r4
 8005ada:	bd10      	pop	{r4, pc}
 8005adc:	0802b7b8 	.word	0x0802b7b8

08005ae0 <_ZN28Measurement_AccurateViewBaseD0Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 8005ae0:	b507      	push	{r0, r1, r2, lr}
 8005ae2:	4b07      	ldr	r3, [pc, #28]	; (8005b00 <_ZN28Measurement_AccurateViewBaseD0Ev+0x20>)
 8005ae4:	6003      	str	r3, [r0, #0]
 8005ae6:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005ae8:	f00d fae8 	bl	80130bc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005aec:	9801      	ldr	r0, [sp, #4]
 8005aee:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8005af2:	f021 fd44 	bl	802757e <_ZdlPvj>
 8005af6:	9801      	ldr	r0, [sp, #4]
 8005af8:	b003      	add	sp, #12
 8005afa:	f85d fb04 	ldr.w	pc, [sp], #4
 8005afe:	bf00      	nop
 8005b00:	0802b7b8 	.word	0x0802b7b8

08005b04 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_AccurateViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8005b04:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8005b06:	f500 7310 	add.w	r3, r0, #576	; 0x240
 8005b0a:	4299      	cmp	r1, r3
{
 8005b0c:	4604      	mov	r4, r0
 8005b0e:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8005b10:	d103      	bne.n	8005b1a <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_AccurateViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8005b12:	f00e ffd5 	bl	8014ac0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 8005b16:	f7fd fdf1 	bl	80036fc <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel2)
 8005b1a:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8005b1e:	429d      	cmp	r5, r3
 8005b20:	d103      	bne.n	8005b2a <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8005b22:	f00e ffcd 	bl	8014ac0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel2 clicked change screen to Measurement_Accurate_Display_2
        //Go to Measurement_Accurate_Display_2 with screen transition towards East
        application().gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEast();
 8005b26:	f7fd fe59 	bl	80037dc <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel1)
 8005b2a:	f504 7434 	add.w	r4, r4, #720	; 0x2d0
 8005b2e:	42a5      	cmp	r5, r4
 8005b30:	d105      	bne.n	8005b3e <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8005b32:	f00e ffc5 	bl	8014ac0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel1 clicked change screen to Measurement_Accurate_Display
        //Go to Measurement_Accurate_Display with screen transition towards East
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
    }
}
 8005b36:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
 8005b3a:	f7fd be3f 	b.w	80037bc <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>
}
 8005b3e:	bd38      	pop	{r3, r4, r5, pc}

08005b40 <_ZN28Measurement_AccurateViewBaseC1Ev>:
Measurement_AccurateViewBase::Measurement_AccurateViewBase() :
 8005b40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005b44:	ed2d 8b06 	vpush	{d8-d10}
 8005b48:	4604      	mov	r4, r0
 8005b4a:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_AccurateViewBase::buttonCallbackHandler)
 8005b4c:	46a3      	mov	fp, r4
 8005b4e:	2500      	movs	r5, #0
 8005b50:	f010 fc36 	bl	80163c0 <_ZN8touchgfx6ScreenC1Ev>
 8005b54:	4b66      	ldr	r3, [pc, #408]	; (8005cf0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b0>)
 8005b56:	63e5      	str	r5, [r4, #60]	; 0x3c
 8005b58:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8005b5c:	2226      	movs	r2, #38	; 0x26
 8005b5e:	4629      	mov	r1, r5
 8005b60:	4658      	mov	r0, fp
 8005b62:	f022 fd02 	bl	802856a <memset>
 8005b66:	4658      	mov	r0, fp
 8005b68:	f7fc fcc2 	bl	80024f0 <_ZN8touchgfx6WidgetC1Ev>
 8005b6c:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8005b70:	26ff      	movs	r6, #255	; 0xff
 8005b72:	4b60      	ldr	r3, [pc, #384]	; (8005cf4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b4>)
 8005b74:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8005b76:	2226      	movs	r2, #38	; 0x26
 8005b78:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8005b7c:	4629      	mov	r1, r5
 8005b7e:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8005b82:	4650      	mov	r0, sl
 8005b84:	66a5      	str	r5, [r4, #104]	; 0x68
 8005b86:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005b8a:	f022 fcee 	bl	802856a <memset>
 8005b8e:	4650      	mov	r0, sl
 8005b90:	f7fc fcae 	bl	80024f0 <_ZN8touchgfx6WidgetC1Ev>
 8005b94:	4b58      	ldr	r3, [pc, #352]	; (8005cf8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b8>)
 8005b96:	66e3      	str	r3, [r4, #108]	; 0x6c
 8005b98:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8005b9c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8005ba0:	a90a      	add	r1, sp, #40	; 0x28
 8005ba2:	4650      	mov	r0, sl
 8005ba4:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8005ba8:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8005bac:	f00c fa7f 	bl	80120ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8005bb0:	4648      	mov	r0, r9
 8005bb2:	f7fc fcaf 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 8005bb6:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 8005bba:	4b50      	ldr	r3, [pc, #320]	; (8005cfc <_ZN28Measurement_AccurateViewBaseC1Ev+0x1bc>)
 8005bbc:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8005bc0:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8005bc4:	4638      	mov	r0, r7
 8005bc6:	f00b f93b 	bl	8010e40 <_ZN8touchgfx4LineC1Ev>
 8005bca:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8005bce:	4618      	mov	r0, r3
 8005bd0:	9303      	str	r3, [sp, #12]
 8005bd2:	f7fb fb75 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8005bd6:	4b4a      	ldr	r3, [pc, #296]	; (8005d00 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c0>)
 8005bd8:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8005bdc:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 8005be0:	3324      	adds	r3, #36	; 0x24
 8005be2:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 8005be6:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8005bea:	4640      	mov	r0, r8
 8005bec:	f7fc fc92 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 8005bf0:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 8005bf4:	4618      	mov	r0, r3
 8005bf6:	ee08 3a10 	vmov	s16, r3
 8005bfa:	f7fc fc8b 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 8005bfe:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8005c02:	4618      	mov	r0, r3
 8005c04:	ee08 3a90 	vmov	s17, r3
 8005c08:	f7fc fc84 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 8005c0c:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8005c10:	4618      	mov	r0, r3
 8005c12:	ee09 3a10 	vmov	s18, r3
 8005c16:	f00c fb8b 	bl	8012330 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005c1a:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8005c1e:	4618      	mov	r0, r3
 8005c20:	ee09 3a90 	vmov	s19, r3
 8005c24:	f00c fb84 	bl	8012330 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005c28:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8005c2c:	4618      	mov	r0, r3
 8005c2e:	ee0a 3a10 	vmov	s20, r3
 8005c32:	f00c fb7d 	bl	8012330 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8005c36:	4a33      	ldr	r2, [pc, #204]	; (8005d04 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c4>)
 8005c38:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8005c3c:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8005c40:	4a31      	ldr	r2, [pc, #196]	; (8005d08 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8005c42:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8005c46:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8005c4a:	f504 7048 	add.w	r0, r4, #800	; 0x320
 8005c4e:	f00d fa2b 	bl	80130a8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8005c52:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8005c56:	462a      	mov	r2, r5
 8005c58:	4658      	mov	r0, fp
 8005c5a:	9300      	str	r3, [sp, #0]
 8005c5c:	4629      	mov	r1, r5
 8005c5e:	23f0      	movs	r3, #240	; 0xf0
 8005c60:	f7fc fc32 	bl	80024c8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005c64:	1d26      	adds	r6, r4, #4
        color = newColor;
 8005c66:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8005c6a:	66a3      	str	r3, [r4, #104]	; 0x68
 8005c6c:	4659      	mov	r1, fp
 8005c6e:	4630      	mov	r0, r6
 8005c70:	f009 fc8e 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8005c74:	462a      	mov	r2, r5
 8005c76:	4650      	mov	r0, sl
 8005c78:	4629      	mov	r1, r5
 8005c7a:	f7fc fc18 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8005c7e:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8005c80:	4650      	mov	r0, sl
 8005c82:	a90a      	add	r1, sp, #40	; 0x28
 8005c84:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005c88:	f00c fa11 	bl	80120ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8005c8c:	4651      	mov	r1, sl
 8005c8e:	4630      	mov	r0, r6
 8005c90:	f009 fc7e 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8005c94:	f44f 729a 	mov.w	r2, #308	; 0x134
 8005c98:	2156      	movs	r1, #86	; 0x56
 8005c9a:	4648      	mov	r0, r9
 8005c9c:	f7fc fc07 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8005ca0:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8005ca4:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8005ca8:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8005cac:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8005cb0:	4650      	mov	r0, sl
 8005cb2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8005cb6:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8005cba:	4649      	mov	r1, r9
 8005cbc:	4798      	blx	r3
 8005cbe:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8005cc2:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8005cc6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005cca:	4b10      	ldr	r3, [pc, #64]	; (8005d0c <_ZN28Measurement_AccurateViewBaseC1Ev+0x1cc>)
 8005ccc:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_CUW4).getText());
 8005cce:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8005cd2:	b92b      	cbnz	r3, 8005ce0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1a0>
 8005cd4:	4b0e      	ldr	r3, [pc, #56]	; (8005d10 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d0>)
 8005cd6:	4a0f      	ldr	r2, [pc, #60]	; (8005d14 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d4>)
 8005cd8:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005cda:	480f      	ldr	r0, [pc, #60]	; (8005d18 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d8>)
 8005cdc:	f022 fa40 	bl	8028160 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8005ce0:	4b0e      	ldr	r3, [pc, #56]	; (8005d1c <_ZN28Measurement_AccurateViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005ce2:	881b      	ldrh	r3, [r3, #0]
 8005ce4:	2b0d      	cmp	r3, #13
 8005ce6:	d81d      	bhi.n	8005d24 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e4>
 8005ce8:	4b0d      	ldr	r3, [pc, #52]	; (8005d20 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e0>)
 8005cea:	4a0a      	ldr	r2, [pc, #40]	; (8005d14 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d4>)
 8005cec:	2161      	movs	r1, #97	; 0x61
 8005cee:	e7f4      	b.n	8005cda <_ZN28Measurement_AccurateViewBaseC1Ev+0x19a>
 8005cf0:	0802b7b8 	.word	0x0802b7b8
 8005cf4:	0802c6d0 	.word	0x0802c6d0
 8005cf8:	0802c898 	.word	0x0802c898
 8005cfc:	08029d98 	.word	0x08029d98
 8005d00:	0802c404 	.word	0x0802c404
 8005d04:	0802b7a0 	.word	0x0802b7a0
 8005d08:	08005b05 	.word	0x08005b05
 8005d0c:	20013814 	.word	0x20013814
 8005d10:	08029bd8 	.word	0x08029bd8
 8005d14:	08029cda 	.word	0x08029cda
 8005d18:	08029c55 	.word	0x08029c55
 8005d1c:	20013818 	.word	0x20013818
 8005d20:	08029c9c 	.word	0x08029c9c
        return texts->getText(typedTextId);
 8005d24:	4b93      	ldr	r3, [pc, #588]	; (8005f74 <_ZN28Measurement_AccurateViewBaseC1Ev+0x434>)
 8005d26:	210d      	movs	r1, #13
 8005d28:	6818      	ldr	r0, [r3, #0]
 8005d2a:	f001 ff05 	bl	8007b38 <_ZNK8touchgfx5Texts7getTextEt>
 8005d2e:	4a92      	ldr	r2, [pc, #584]	; (8005f78 <_ZN28Measurement_AccurateViewBaseC1Ev+0x438>)
 8005d30:	4603      	mov	r3, r0
 8005d32:	2104      	movs	r1, #4
 8005d34:	4650      	mov	r0, sl
 8005d36:	f012 f827 	bl	8017d88 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 8005d3a:	4648      	mov	r0, r9
        wc1 = value;
 8005d3c:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8005d40:	f00b fdba 	bl	80118b8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8005d44:	4b8d      	ldr	r3, [pc, #564]	; (8005f7c <_ZN28Measurement_AccurateViewBaseC1Ev+0x43c>)
 8005d46:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SQC7));
 8005d48:	a90a      	add	r1, sp, #40	; 0x28
 8005d4a:	230e      	movs	r3, #14
 8005d4c:	4648      	mov	r0, r9
 8005d4e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005d52:	f00b fdd1 	bl	80118f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005d56:	4649      	mov	r1, r9
 8005d58:	4630      	mov	r0, r6
 8005d5a:	f009 fc19 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8005d5e:	230a      	movs	r3, #10
 8005d60:	9300      	str	r3, [sp, #0]
 8005d62:	2232      	movs	r2, #50	; 0x32
 8005d64:	23f0      	movs	r3, #240	; 0xf0
 8005d66:	4629      	mov	r1, r5
 8005d68:	4638      	mov	r0, r7
 8005d6a:	f7fc fbad 	bl	80024c8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005d6e:	9b03      	ldr	r3, [sp, #12]
 8005d70:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005d74:	22a0      	movs	r2, #160	; 0xa0
 8005d76:	4611      	mov	r1, r2
 8005d78:	4638      	mov	r0, r7
 8005d7a:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 8005d7e:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8005d82:	f00b f973 	bl	801106c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005d86:	22a0      	movs	r2, #160	; 0xa0
 8005d88:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8005d8c:	4638      	mov	r0, r7
 8005d8e:	f00b f978 	bl	8011082 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8005d92:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8005d96:	2b20      	cmp	r3, #32
 8005d98:	d005      	beq.n	8005da6 <_ZN28Measurement_AccurateViewBaseC1Ev+0x266>
        lineWidthQ5 = widthQ5;
 8005d9a:	2320      	movs	r3, #32
 8005d9c:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8005da0:	4638      	mov	r0, r7
 8005da2:	f00b f86d 	bl	8010e80 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8005da6:	4638      	mov	r0, r7
 8005da8:	2101      	movs	r1, #1
 8005daa:	f00b f975 	bl	8011098 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8005dae:	4639      	mov	r1, r7
 8005db0:	4630      	mov	r0, r6
 8005db2:	ad04      	add	r5, sp, #16
        color = newColor;
 8005db4:	f04f 37ff 	mov.w	r7, #4294967295
 8005db8:	f009 fbea 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8005dbc:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 8005dc0:	2223      	movs	r2, #35	; 0x23
 8005dc2:	4640      	mov	r0, r8
 8005dc4:	2145      	movs	r1, #69	; 0x45
 8005dc6:	f7fc fb72 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8005dca:	4641      	mov	r1, r8
 8005dcc:	4628      	mov	r0, r5
        color = newColor;
 8005dce:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 8005dd2:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 8005dd6:	f00b faf5 	bl	80113c4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005dda:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005dde:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8005de2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005de6:	f8df 9194 	ldr.w	r9, [pc, #404]	; 8005f7c <_ZN28Measurement_AccurateViewBaseC1Ev+0x43c>
 8005dea:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8005dee:	2333      	movs	r3, #51	; 0x33
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UWMX));
 8005df0:	a90a      	add	r1, sp, #40	; 0x28
 8005df2:	4640      	mov	r0, r8
 8005df4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005df8:	f00b fd7e 	bl	80118f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005dfc:	4641      	mov	r1, r8
 8005dfe:	4630      	mov	r0, r6
 8005e00:	f009 fbc6 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8005e04:	ee18 0a10 	vmov	r0, s16
 8005e08:	220c      	movs	r2, #12
 8005e0a:	2136      	movs	r1, #54	; 0x36
 8005e0c:	f7fc fb4f 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8005e10:	ee18 1a10 	vmov	r1, s16
 8005e14:	4628      	mov	r0, r5
        color = newColor;
 8005e16:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 8005e1a:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8005e1e:	f00b fad1 	bl	80113c4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005e22:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005e26:	ee18 3a10 	vmov	r3, s16
 8005e2a:	333c      	adds	r3, #60	; 0x3c
 8005e2c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005e30:	2332      	movs	r3, #50	; 0x32
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1X41));
 8005e32:	ee18 0a10 	vmov	r0, s16
 8005e36:	a90a      	add	r1, sp, #40	; 0x28
 8005e38:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005e3c:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8005e40:	f00b fd5a 	bl	80118f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005e44:	ee18 1a10 	vmov	r1, s16
 8005e48:	4630      	mov	r0, r6
 8005e4a:	f009 fba1 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(33, 60);
 8005e4e:	ee18 0a90 	vmov	r0, s17
 8005e52:	223c      	movs	r2, #60	; 0x3c
 8005e54:	2121      	movs	r1, #33	; 0x21
 8005e56:	f7fc fb2a 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8005e5a:	ee18 1a90 	vmov	r1, s17
 8005e5e:	4628      	mov	r0, r5
        color = newColor;
 8005e60:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8005e64:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8005e68:	f00b faac 	bl	80113c4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005e6c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005e70:	ee18 3a90 	vmov	r3, s17
 8005e74:	333c      	adds	r3, #60	; 0x3c
 8005e76:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005e7a:	231c      	movs	r3, #28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D7H9));
 8005e7c:	ee18 0a90 	vmov	r0, s17
 8005e80:	a90a      	add	r1, sp, #40	; 0x28
 8005e82:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005e86:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8005e8a:	f00b fd35 	bl	80118f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005e8e:	ee18 1a90 	vmov	r1, s17
 8005e92:	4630      	mov	r0, r6
 8005e94:	f009 fb7c 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8005e98:	ee19 0a10 	vmov	r0, s18
 8005e9c:	22f0      	movs	r2, #240	; 0xf0
 8005e9e:	2121      	movs	r1, #33	; 0x21
 8005ea0:	f7fc fb05 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8005ea4:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005ea8:	aa0a      	add	r2, sp, #40	; 0x28
 8005eaa:	f04f 0802 	mov.w	r8, #2
 8005eae:	a909      	add	r1, sp, #36	; 0x24
 8005eb0:	ee19 0a10 	vmov	r0, s18
 8005eb4:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005eb8:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8005ebc:	f504 5589 	add.w	r5, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005ec0:	f00b feff 	bl	8011cc2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8005ec4:	2331      	movs	r3, #49	; 0x31
 8005ec6:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8005eca:	3510      	adds	r5, #16
        updateTextPosition();
 8005ecc:	ee19 0a10 	vmov	r0, s18
 8005ed0:	f7fc fb42 	bl	8002558 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005ed4:	ee19 1a10 	vmov	r1, s18
 8005ed8:	4630      	mov	r0, r6
        colorPressed = col;
 8005eda:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
 8005ede:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 8005ee2:	f009 fb55 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8005ee6:	ee19 0a90 	vmov	r0, s19
 8005eea:	22aa      	movs	r2, #170	; 0xaa
 8005eec:	2121      	movs	r1, #33	; 0x21
 8005eee:	f7fc fade 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005ef2:	aa0a      	add	r2, sp, #40	; 0x28
 8005ef4:	a909      	add	r1, sp, #36	; 0x24
 8005ef6:	ee19 0a90 	vmov	r0, s19
 8005efa:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005efe:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8005f02:	f00b fede 	bl	8011cc2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005f06:	2330      	movs	r3, #48	; 0x30
 8005f08:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8005f0c:	ee19 0a90 	vmov	r0, s19
 8005f10:	f7fc fb22 	bl	8002558 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005f14:	ee19 1a90 	vmov	r1, s19
 8005f18:	4630      	mov	r0, r6
        colorPressed = col;
 8005f1a:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 8005f1e:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 8005f22:	f009 fb35 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8005f26:	ee1a 0a10 	vmov	r0, s20
 8005f2a:	2264      	movs	r2, #100	; 0x64
 8005f2c:	2121      	movs	r1, #33	; 0x21
 8005f2e:	f7fc fabe 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005f32:	aa0a      	add	r2, sp, #40	; 0x28
 8005f34:	a909      	add	r1, sp, #36	; 0x24
 8005f36:	ee1a 0a10 	vmov	r0, s20
 8005f3a:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005f3e:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8005f42:	f00b febe 	bl	8011cc2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005f46:	232f      	movs	r3, #47	; 0x2f
        updateTextPosition();
 8005f48:	ee1a 0a10 	vmov	r0, s20
 8005f4c:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8005f50:	f7fc fb02 	bl	8002558 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005f54:	4630      	mov	r0, r6
        colorPressed = col;
 8005f56:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 8005f5a:	ee1a 1a10 	vmov	r1, s20
 8005f5e:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 8005f62:	f009 fb15 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8005f66:	4620      	mov	r0, r4
 8005f68:	b00d      	add	sp, #52	; 0x34
 8005f6a:	ecbd 8b06 	vpop	{d8-d10}
 8005f6e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005f72:	bf00      	nop
 8005f74:	20013820 	.word	0x20013820
 8005f78:	08029d12 	.word	0x08029d12
 8005f7c:	08029d88 	.word	0x08029d88

08005f80 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005f80:	4770      	bx	lr

08005f82 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8005f82:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005f84:	68c2      	ldr	r2, [r0, #12]
 8005f86:	6844      	ldr	r4, [r0, #4]
 8005f88:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8005f8a:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8005f8c:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8005f90:	07d2      	lsls	r2, r2, #31
 8005f92:	bf48      	it	mi
 8005f94:	5962      	ldrmi	r2, [r4, r5]
 8005f96:	689b      	ldr	r3, [r3, #8]
    }
 8005f98:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005f9a:	bf48      	it	mi
 8005f9c:	58d3      	ldrmi	r3, [r2, r3]
 8005f9e:	4718      	bx	r3

08005fa0 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8005fa0:	6843      	ldr	r3, [r0, #4]
 8005fa2:	b12b      	cbz	r3, 8005fb0 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8005fa4:	6883      	ldr	r3, [r0, #8]
 8005fa6:	b92b      	cbnz	r3, 8005fb4 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8005fa8:	68c0      	ldr	r0, [r0, #12]
 8005faa:	f000 0001 	and.w	r0, r0, #1
 8005fae:	4770      	bx	lr
 8005fb0:	4618      	mov	r0, r3
 8005fb2:	4770      	bx	lr
 8005fb4:	2001      	movs	r0, #1
    }
 8005fb6:	4770      	bx	lr

08005fb8 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005fb8:	b510      	push	{r4, lr}
 8005fba:	2110      	movs	r1, #16
 8005fbc:	4604      	mov	r4, r0
 8005fbe:	f021 fade 	bl	802757e <_ZdlPvj>
 8005fc2:	4620      	mov	r0, r4
 8005fc4:	bd10      	pop	{r4, pc}

08005fc6 <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Measurement_Accurate_DisplayViewBase::setupScreen()
{
    gauge_with_Values1.initialize();
 8005fc6:	f500 700f 	add.w	r0, r0, #572	; 0x23c
 8005fca:	f001 befd 	b.w	8007dc8 <_ZN17Gauge_with_Values10initializeEv>

08005fce <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
}

void Measurement_Accurate_DisplayViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8005fce:	3098      	adds	r0, #152	; 0x98
 8005fd0:	4288      	cmp	r0, r1
{
 8005fd2:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8005fd4:	d105      	bne.n	8005fe2 <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_DisplayViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8005fd6:	f00e fd73 	bl	8014ac0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 8005fda:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 8005fde:	f7fd bbdd 	b.w	800379c <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 8005fe2:	bd08      	pop	{r3, pc}

08005fe4 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 8005fe4:	b510      	push	{r4, lr}
 8005fe6:	4b07      	ldr	r3, [pc, #28]	; (8006004 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev+0x20>)
 8005fe8:	6003      	str	r3, [r0, #0]
 8005fea:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005fec:	f00d f866 	bl	80130bc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>

class Gauge_with_Values : public Gauge_with_ValuesBase
{
public:
    Gauge_with_Values();
    virtual ~Gauge_with_Values() {}
 8005ff0:	4b05      	ldr	r3, [pc, #20]	; (8006008 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev+0x24>)
 8005ff2:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
 8005ff6:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8005ffa:	f7fe fe25 	bl	8004c48 <_ZN21Gauge_with_ValuesBaseD1Ev>
}
 8005ffe:	4620      	mov	r0, r4
 8006000:	bd10      	pop	{r4, pc}
 8006002:	bf00      	nop
 8006004:	0802b804 	.word	0x0802b804
 8006008:	0802bd5c 	.word	0x0802bd5c

0800600c <_ZN36Measurement_Accurate_DisplayViewBaseD0Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 800600c:	b510      	push	{r4, lr}
 800600e:	4604      	mov	r4, r0
}
 8006010:	f7ff ffe8 	bl	8005fe4 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>
 8006014:	4620      	mov	r0, r4
 8006016:	f241 31e4 	movw	r1, #5092	; 0x13e4
 800601a:	f021 fab0 	bl	802757e <_ZdlPvj>
 800601e:	4620      	mov	r0, r4
 8006020:	bd10      	pop	{r4, pc}
	...

08006024 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>:
Measurement_Accurate_DisplayViewBase::Measurement_Accurate_DisplayViewBase() :
 8006024:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006028:	ed2d 8b04 	vpush	{d8-d9}
 800602c:	4604      	mov	r4, r0
 800602e:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_DisplayViewBase::buttonCallbackHandler)
 8006030:	46a1      	mov	r9, r4
 8006032:	2500      	movs	r5, #0
 8006034:	f010 f9c4 	bl	80163c0 <_ZN8touchgfx6ScreenC1Ev>
 8006038:	4bac      	ldr	r3, [pc, #688]	; (80062ec <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2c8>)
 800603a:	63e5      	str	r5, [r4, #60]	; 0x3c
 800603c:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8006040:	2226      	movs	r2, #38	; 0x26
 8006042:	4629      	mov	r1, r5
 8006044:	4648      	mov	r0, r9
 8006046:	f022 fa90 	bl	802856a <memset>
 800604a:	4648      	mov	r0, r9
 800604c:	f7fc fa50 	bl	80024f0 <_ZN8touchgfx6WidgetC1Ev>
 8006050:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8006054:	26ff      	movs	r6, #255	; 0xff
 8006056:	4ba6      	ldr	r3, [pc, #664]	; (80062f0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2cc>)
 8006058:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800605a:	2226      	movs	r2, #38	; 0x26
 800605c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006060:	4629      	mov	r1, r5
 8006062:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006066:	4640      	mov	r0, r8
 8006068:	66a5      	str	r5, [r4, #104]	; 0x68
 800606a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800606e:	f022 fa7c 	bl	802856a <memset>
 8006072:	4640      	mov	r0, r8
 8006074:	f7fc fa3c 	bl	80024f0 <_ZN8touchgfx6WidgetC1Ev>
 8006078:	4b9e      	ldr	r3, [pc, #632]	; (80062f4 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2d0>)
 800607a:	66e3      	str	r3, [r4, #108]	; 0x6c
 800607c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006080:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006084:	a90a      	add	r1, sp, #40	; 0x28
 8006086:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8006088:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 800608c:	f00c f80f 	bl	80120ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006090:	f104 0398 	add.w	r3, r4, #152	; 0x98
 8006094:	4618      	mov	r0, r3
 8006096:	ee08 3a10 	vmov	s16, r3
 800609a:	f00c f949 	bl	8012330 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800609e:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 80060a2:	f504 7794 	add.w	r7, r4, #296	; 0x128
 80060a6:	4618      	mov	r0, r3
 80060a8:	ee08 3a90 	vmov	s17, r3
 80060ac:	f7fc fa32 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 80060b0:	4638      	mov	r0, r7
 80060b2:	f00a fec5 	bl	8010e40 <_ZN8touchgfx4LineC1Ev>
 80060b6:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80060ba:	4618      	mov	r0, r3
 80060bc:	9303      	str	r3, [sp, #12]
 80060be:	f7fb f8ff 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80060c2:	4b8d      	ldr	r3, [pc, #564]	; (80062f8 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2d4>)
 80060c4:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 80060c8:	f504 7bd6 	add.w	fp, r4, #428	; 0x1ac
 80060cc:	3324      	adds	r3, #36	; 0x24
 80060ce:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 80060d2:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 80060d6:	4658      	mov	r0, fp
 80060d8:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 80060dc:	f7fc fa1a 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 80060e0:	4650      	mov	r0, sl
 80060e2:	f7fc fa17 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 80060e6:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 80060ea:	4618      	mov	r0, r3
 80060ec:	ee09 3a10 	vmov	s18, r3
 80060f0:	f001 fe60 	bl	8007db4 <_ZN17Gauge_with_ValuesC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80060f4:	4a81      	ldr	r2, [pc, #516]	; (80062fc <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2d8>)
 80060f6:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80060fa:	e9c3 24f5 	strd	r2, r4, [r3, #980]	; 0x3d4
 80060fe:	4a80      	ldr	r2, [pc, #512]	; (8006300 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2dc>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006100:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006104:	e9c3 25f7 	strd	r2, r5, [r3, #988]	; 0x3dc
 8006108:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 800610c:	f00c ffcc 	bl	80130a8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006110:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006114:	462a      	mov	r2, r5
 8006116:	4648      	mov	r0, r9
 8006118:	9300      	str	r3, [sp, #0]
 800611a:	4629      	mov	r1, r5
 800611c:	23f0      	movs	r3, #240	; 0xf0
 800611e:	f7fc f9d3 	bl	80024c8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006122:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006124:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006128:	66a3      	str	r3, [r4, #104]	; 0x68
 800612a:	4649      	mov	r1, r9
 800612c:	4630      	mov	r0, r6
 800612e:	f009 fa2f 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006132:	462a      	mov	r2, r5
 8006134:	4640      	mov	r0, r8
 8006136:	4629      	mov	r1, r5
 8006138:	f7fc f9b9 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 800613c:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800613e:	4640      	mov	r0, r8
 8006140:	a90a      	add	r1, sp, #40	; 0x28
 8006142:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006146:	f00b ffb2 	bl	80120ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800614a:	4641      	mov	r1, r8
 800614c:	4630      	mov	r0, r6
 800614e:	f009 fa1f 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8006152:	ee18 0a10 	vmov	r0, s16
 8006156:	f240 1201 	movw	r2, #257	; 0x101
 800615a:	2121      	movs	r1, #33	; 0x21
 800615c:	f7fc f9a7 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8006160:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006162:	aa0a      	add	r2, sp, #40	; 0x28
 8006164:	a909      	add	r1, sp, #36	; 0x24
 8006166:	ee18 0a10 	vmov	r0, s16
 800616a:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800616e:	2302      	movs	r3, #2
 8006170:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006174:	f00b fda5 	bl	8011cc2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006178:	2318      	movs	r3, #24
        updateTextPosition();
 800617a:	ee18 0a10 	vmov	r0, s16
 800617e:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 8006182:	f7fc f9e9 	bl	8002558 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8006186:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 800618a:	3314      	adds	r3, #20
        color = col;
 800618c:	f04f 39ff 	mov.w	r9, #4294967295
 8006190:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8006194:	ee18 1a10 	vmov	r1, s16
 8006198:	4630      	mov	r0, r6
        colorPressed = col;
 800619a:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 800619e:	f009 f9f7 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80061a2:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(23, 60);
 80061a6:	223c      	movs	r2, #60	; 0x3c
 80061a8:	ee18 0a90 	vmov	r0, s17
 80061ac:	2117      	movs	r1, #23
 80061ae:	f7fc f97e 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 80061b2:	ee18 1a90 	vmov	r1, s17
 80061b6:	4640      	mov	r0, r8
        color = newColor;
 80061b8:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 80061bc:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 80061c0:	f00b f900 	bl	80113c4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80061c4:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80061c8:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 80061cc:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80061d0:	4b4c      	ldr	r3, [pc, #304]	; (8006304 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2e0>)
 80061d2:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZR32));
 80061d4:	ee18 0a90 	vmov	r0, s17
 80061d8:	2319      	movs	r3, #25
 80061da:	a90a      	add	r1, sp, #40	; 0x28
 80061dc:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80061e0:	f00b fb8a 	bl	80118f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80061e4:	ee18 1a90 	vmov	r1, s17
 80061e8:	4630      	mov	r0, r6
 80061ea:	f009 f9d1 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80061ee:	230a      	movs	r3, #10
 80061f0:	9300      	str	r3, [sp, #0]
 80061f2:	2232      	movs	r2, #50	; 0x32
 80061f4:	23f0      	movs	r3, #240	; 0xf0
 80061f6:	4629      	mov	r1, r5
 80061f8:	4638      	mov	r0, r7
 80061fa:	f7fc f965 	bl	80024c8 <_ZN8touchgfx8Drawable11setPositionEssss>
 80061fe:	9b03      	ldr	r3, [sp, #12]
 8006200:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006204:	22a0      	movs	r2, #160	; 0xa0
 8006206:	4611      	mov	r1, r2
 8006208:	4638      	mov	r0, r7
 800620a:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 800620e:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 8006212:	f00a ff2b 	bl	801106c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006216:	22a0      	movs	r2, #160	; 0xa0
 8006218:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800621c:	4638      	mov	r0, r7
 800621e:	f00a ff30 	bl	8011082 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8006222:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 8006226:	2b20      	cmp	r3, #32
 8006228:	d005      	beq.n	8006236 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x212>
        lineWidthQ5 = widthQ5;
 800622a:	2320      	movs	r3, #32
 800622c:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 8006230:	4638      	mov	r0, r7
 8006232:	f00a fe25 	bl	8010e80 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006236:	4638      	mov	r0, r7
 8006238:	2101      	movs	r1, #1
 800623a:	f00a ff2d 	bl	8011098 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800623e:	4639      	mov	r1, r7
 8006240:	4630      	mov	r0, r6
 8006242:	f009 f9a5 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8006246:	2500      	movs	r5, #0
    textArea2.setXY(69, 35);
 8006248:	2223      	movs	r2, #35	; 0x23
 800624a:	4658      	mov	r0, fp
        color = newColor;
 800624c:	f04f 39ff 	mov.w	r9, #4294967295
 8006250:	2145      	movs	r1, #69	; 0x45
 8006252:	f7fc f92c 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006256:	4659      	mov	r1, fp
 8006258:	4640      	mov	r0, r8
        color = newColor;
 800625a:	f8c4 91dc 	str.w	r9, [r4, #476]	; 0x1dc
        linespace = space;
 800625e:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8006262:	f00b f8af 	bl	80113c4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006266:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800626a:	f10b 033c 	add.w	r3, fp, #60	; 0x3c
 800626e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006272:	4f24      	ldr	r7, [pc, #144]	; (8006304 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2e0>)
 8006274:	970a      	str	r7, [sp, #40]	; 0x28
 8006276:	231a      	movs	r3, #26
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_K7UP));
 8006278:	a90a      	add	r1, sp, #40	; 0x28
 800627a:	4658      	mov	r0, fp
 800627c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006280:	f00b fb3a 	bl	80118f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006284:	4659      	mov	r1, fp
 8006286:	4630      	mov	r0, r6
 8006288:	f009 f982 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 800628c:	220c      	movs	r2, #12
 800628e:	4650      	mov	r0, sl
 8006290:	2136      	movs	r1, #54	; 0x36
 8006292:	f7fc f90c 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8006296:	4651      	mov	r1, sl
 8006298:	4640      	mov	r0, r8
        color = newColor;
 800629a:	f8c4 9224 	str.w	r9, [r4, #548]	; 0x224
        linespace = space;
 800629e:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 80062a2:	f00b f88f 	bl	80113c4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80062a6:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80062aa:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 80062ae:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80062b2:	231b      	movs	r3, #27
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0GAY));
 80062b4:	a90a      	add	r1, sp, #40	; 0x28
 80062b6:	4650      	mov	r0, sl
 80062b8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80062bc:	970a      	str	r7, [sp, #40]	; 0x28
 80062be:	f00b fb1b 	bl	80118f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80062c2:	4651      	mov	r1, sl
 80062c4:	4630      	mov	r0, r6
 80062c6:	f009 f963 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge_with_Values1.setXY(0, 78);
 80062ca:	ee19 0a10 	vmov	r0, s18
 80062ce:	224e      	movs	r2, #78	; 0x4e
 80062d0:	4629      	mov	r1, r5
 80062d2:	f7fc f8ec 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 80062d6:	4630      	mov	r0, r6
 80062d8:	ee19 1a10 	vmov	r1, s18
 80062dc:	f009 f958 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80062e0:	4620      	mov	r0, r4
 80062e2:	b00d      	add	sp, #52	; 0x34
 80062e4:	ecbd 8b04 	vpop	{d8-d9}
 80062e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80062ec:	0802b804 	.word	0x0802b804
 80062f0:	0802c6d0 	.word	0x0802c6d0
 80062f4:	0802c898 	.word	0x0802c898
 80062f8:	0802c404 	.word	0x0802c404
 80062fc:	0802b7ec 	.word	0x0802b7ec
 8006300:	08005fcf 	.word	0x08005fcf
 8006304:	08029d88 	.word	0x08029d88

08006308 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006308:	4770      	bx	lr

0800630a <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800630a:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800630c:	68c2      	ldr	r2, [r0, #12]
 800630e:	6844      	ldr	r4, [r0, #4]
 8006310:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006312:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006314:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006318:	07d2      	lsls	r2, r2, #31
 800631a:	bf48      	it	mi
 800631c:	5962      	ldrmi	r2, [r4, r5]
 800631e:	689b      	ldr	r3, [r3, #8]
    }
 8006320:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006322:	bf48      	it	mi
 8006324:	58d3      	ldrmi	r3, [r2, r3]
 8006326:	4718      	bx	r3

08006328 <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006328:	6843      	ldr	r3, [r0, #4]
 800632a:	b12b      	cbz	r3, 8006338 <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800632c:	6883      	ldr	r3, [r0, #8]
 800632e:	b92b      	cbnz	r3, 800633c <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006330:	68c0      	ldr	r0, [r0, #12]
 8006332:	f000 0001 	and.w	r0, r0, #1
 8006336:	4770      	bx	lr
 8006338:	4618      	mov	r0, r3
 800633a:	4770      	bx	lr
 800633c:	2001      	movs	r0, #1
    }
 800633e:	4770      	bx	lr

08006340 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006340:	b510      	push	{r4, lr}
 8006342:	2110      	movs	r1, #16
 8006344:	4604      	mov	r4, r0
 8006346:	f021 f91a 	bl	802757e <_ZdlPvj>
 800634a:	4620      	mov	r0, r4
 800634c:	bd10      	pop	{r4, pc}

0800634e <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Measurement_Accurate_Display_2ViewBase::setupScreen()
{
    gauge_with_Values1.initialize();
 800634e:	f500 700f 	add.w	r0, r0, #572	; 0x23c
 8006352:	f001 bd39 	b.w	8007dc8 <_ZN17Gauge_with_Values10initializeEv>

08006356 <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
}

void Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8006356:	3098      	adds	r0, #152	; 0x98
 8006358:	4288      	cmp	r0, r1
{
 800635a:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 800635c:	d105      	bne.n	800636a <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_Display_2ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800635e:	f00e fbaf 	bl	8014ac0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 8006362:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 8006366:	f7fd ba19 	b.w	800379c <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 800636a:	bd08      	pop	{r3, pc}

0800636c <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 800636c:	b510      	push	{r4, lr}
 800636e:	4b07      	ldr	r3, [pc, #28]	; (800638c <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev+0x20>)
 8006370:	6003      	str	r3, [r0, #0]
 8006372:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006374:	f00c fea2 	bl	80130bc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
 8006378:	4b05      	ldr	r3, [pc, #20]	; (8006390 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev+0x24>)
 800637a:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
 800637e:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8006382:	f7fe fc61 	bl	8004c48 <_ZN21Gauge_with_ValuesBaseD1Ev>
}
 8006386:	4620      	mov	r0, r4
 8006388:	bd10      	pop	{r4, pc}
 800638a:	bf00      	nop
 800638c:	0802b850 	.word	0x0802b850
 8006390:	0802bd5c 	.word	0x0802bd5c

08006394 <_ZN38Measurement_Accurate_Display_2ViewBaseD0Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 8006394:	b510      	push	{r4, lr}
 8006396:	4604      	mov	r4, r0
}
 8006398:	f7ff ffe8 	bl	800636c <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>
 800639c:	4620      	mov	r0, r4
 800639e:	f241 31e4 	movw	r1, #5092	; 0x13e4
 80063a2:	f021 f8ec 	bl	802757e <_ZdlPvj>
 80063a6:	4620      	mov	r0, r4
 80063a8:	bd10      	pop	{r4, pc}
	...

080063ac <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>:
Measurement_Accurate_Display_2ViewBase::Measurement_Accurate_Display_2ViewBase() :
 80063ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80063b0:	ed2d 8b04 	vpush	{d8-d9}
 80063b4:	4604      	mov	r4, r0
 80063b6:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler)
 80063b8:	46a1      	mov	r9, r4
 80063ba:	2500      	movs	r5, #0
 80063bc:	f010 f800 	bl	80163c0 <_ZN8touchgfx6ScreenC1Ev>
 80063c0:	4bac      	ldr	r3, [pc, #688]	; (8006674 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2c8>)
 80063c2:	63e5      	str	r5, [r4, #60]	; 0x3c
 80063c4:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 80063c8:	2226      	movs	r2, #38	; 0x26
 80063ca:	4629      	mov	r1, r5
 80063cc:	4648      	mov	r0, r9
 80063ce:	f022 f8cc 	bl	802856a <memset>
 80063d2:	4648      	mov	r0, r9
 80063d4:	f7fc f88c 	bl	80024f0 <_ZN8touchgfx6WidgetC1Ev>
 80063d8:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 80063dc:	26ff      	movs	r6, #255	; 0xff
 80063de:	4ba6      	ldr	r3, [pc, #664]	; (8006678 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2cc>)
 80063e0:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80063e2:	2226      	movs	r2, #38	; 0x26
 80063e4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80063e8:	4629      	mov	r1, r5
 80063ea:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80063ee:	4640      	mov	r0, r8
 80063f0:	66a5      	str	r5, [r4, #104]	; 0x68
 80063f2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80063f6:	f022 f8b8 	bl	802856a <memset>
 80063fa:	4640      	mov	r0, r8
 80063fc:	f7fc f878 	bl	80024f0 <_ZN8touchgfx6WidgetC1Ev>
 8006400:	4b9e      	ldr	r3, [pc, #632]	; (800667c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2d0>)
 8006402:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006404:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006408:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 800640c:	a90a      	add	r1, sp, #40	; 0x28
 800640e:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8006410:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006414:	f00b fe4b 	bl	80120ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006418:	f104 0398 	add.w	r3, r4, #152	; 0x98
 800641c:	4618      	mov	r0, r3
 800641e:	ee08 3a10 	vmov	s16, r3
 8006422:	f00b ff85 	bl	8012330 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006426:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 800642a:	f504 7794 	add.w	r7, r4, #296	; 0x128
 800642e:	4618      	mov	r0, r3
 8006430:	ee08 3a90 	vmov	s17, r3
 8006434:	f7fc f86e 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 8006438:	4638      	mov	r0, r7
 800643a:	f00a fd01 	bl	8010e40 <_ZN8touchgfx4LineC1Ev>
 800643e:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006442:	4618      	mov	r0, r3
 8006444:	9303      	str	r3, [sp, #12]
 8006446:	f7fa ff3b 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800644a:	4b8d      	ldr	r3, [pc, #564]	; (8006680 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2d4>)
 800644c:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 8006450:	f504 7bd6 	add.w	fp, r4, #428	; 0x1ac
 8006454:	3324      	adds	r3, #36	; 0x24
 8006456:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 800645a:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 800645e:	4658      	mov	r0, fp
 8006460:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 8006464:	f7fc f856 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 8006468:	4650      	mov	r0, sl
 800646a:	f7fc f853 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 800646e:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 8006472:	4618      	mov	r0, r3
 8006474:	ee09 3a10 	vmov	s18, r3
 8006478:	f001 fc9c 	bl	8007db4 <_ZN17Gauge_with_ValuesC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800647c:	4a81      	ldr	r2, [pc, #516]	; (8006684 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2d8>)
 800647e:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006482:	e9c3 24f5 	strd	r2, r4, [r3, #980]	; 0x3d4
 8006486:	4a80      	ldr	r2, [pc, #512]	; (8006688 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2dc>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006488:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800648c:	e9c3 25f7 	strd	r2, r5, [r3, #988]	; 0x3dc
 8006490:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 8006494:	f00c fe08 	bl	80130a8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006498:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800649c:	462a      	mov	r2, r5
 800649e:	4648      	mov	r0, r9
 80064a0:	9300      	str	r3, [sp, #0]
 80064a2:	4629      	mov	r1, r5
 80064a4:	23f0      	movs	r3, #240	; 0xf0
 80064a6:	f7fc f80f 	bl	80024c8 <_ZN8touchgfx8Drawable11setPositionEssss>
 80064aa:	1d26      	adds	r6, r4, #4
        color = newColor;
 80064ac:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80064b0:	66a3      	str	r3, [r4, #104]	; 0x68
 80064b2:	4649      	mov	r1, r9
 80064b4:	4630      	mov	r0, r6
 80064b6:	f009 f86b 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80064ba:	462a      	mov	r2, r5
 80064bc:	4640      	mov	r0, r8
 80064be:	4629      	mov	r1, r5
 80064c0:	f7fb fff5 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 80064c4:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80064c6:	4640      	mov	r0, r8
 80064c8:	a90a      	add	r1, sp, #40	; 0x28
 80064ca:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80064ce:	f00b fdee 	bl	80120ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80064d2:	4641      	mov	r1, r8
 80064d4:	4630      	mov	r0, r6
 80064d6:	f009 f85b 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 80064da:	ee18 0a10 	vmov	r0, s16
 80064de:	f240 1201 	movw	r2, #257	; 0x101
 80064e2:	2121      	movs	r1, #33	; 0x21
 80064e4:	f7fb ffe3 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 80064e8:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80064ea:	aa0a      	add	r2, sp, #40	; 0x28
 80064ec:	a909      	add	r1, sp, #36	; 0x24
 80064ee:	ee18 0a10 	vmov	r0, s16
 80064f2:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80064f6:	2302      	movs	r3, #2
 80064f8:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80064fc:	f00b fbe1 	bl	8011cc2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006500:	2314      	movs	r3, #20
        updateTextPosition();
 8006502:	ee18 0a10 	vmov	r0, s16
 8006506:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 800650a:	f7fc f825 	bl	8002558 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 800650e:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 8006512:	3314      	adds	r3, #20
        color = col;
 8006514:	f04f 39ff 	mov.w	r9, #4294967295
 8006518:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 800651c:	ee18 1a10 	vmov	r1, s16
 8006520:	4630      	mov	r0, r6
        colorPressed = col;
 8006522:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 8006526:	f009 f833 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800652a:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(23, 60);
 800652e:	223c      	movs	r2, #60	; 0x3c
 8006530:	ee18 0a90 	vmov	r0, s17
 8006534:	2117      	movs	r1, #23
 8006536:	f7fb ffba 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 800653a:	ee18 1a90 	vmov	r1, s17
 800653e:	4640      	mov	r0, r8
        color = newColor;
 8006540:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 8006544:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8006548:	f00a ff3c 	bl	80113c4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800654c:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006550:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8006554:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8006558:	4b4c      	ldr	r3, [pc, #304]	; (800668c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2e0>)
 800655a:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TF2A));
 800655c:	ee18 0a90 	vmov	r0, s17
 8006560:	2315      	movs	r3, #21
 8006562:	a90a      	add	r1, sp, #40	; 0x28
 8006564:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006568:	f00b f9c6 	bl	80118f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800656c:	ee18 1a90 	vmov	r1, s17
 8006570:	4630      	mov	r0, r6
 8006572:	f009 f80d 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006576:	230a      	movs	r3, #10
 8006578:	9300      	str	r3, [sp, #0]
 800657a:	2232      	movs	r2, #50	; 0x32
 800657c:	23f0      	movs	r3, #240	; 0xf0
 800657e:	4629      	mov	r1, r5
 8006580:	4638      	mov	r0, r7
 8006582:	f7fb ffa1 	bl	80024c8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006586:	9b03      	ldr	r3, [sp, #12]
 8006588:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800658c:	22a0      	movs	r2, #160	; 0xa0
 800658e:	4611      	mov	r1, r2
 8006590:	4638      	mov	r0, r7
 8006592:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006596:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 800659a:	f00a fd67 	bl	801106c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800659e:	22a0      	movs	r2, #160	; 0xa0
 80065a0:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80065a4:	4638      	mov	r0, r7
 80065a6:	f00a fd6c 	bl	8011082 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80065aa:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 80065ae:	2b20      	cmp	r3, #32
 80065b0:	d005      	beq.n	80065be <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x212>
        lineWidthQ5 = widthQ5;
 80065b2:	2320      	movs	r3, #32
 80065b4:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 80065b8:	4638      	mov	r0, r7
 80065ba:	f00a fc61 	bl	8010e80 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80065be:	4638      	mov	r0, r7
 80065c0:	2101      	movs	r1, #1
 80065c2:	f00a fd69 	bl	8011098 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80065c6:	4639      	mov	r1, r7
 80065c8:	4630      	mov	r0, r6
 80065ca:	f008 ffe1 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 80065ce:	2500      	movs	r5, #0
    textArea2.setXY(69, 35);
 80065d0:	2223      	movs	r2, #35	; 0x23
 80065d2:	4658      	mov	r0, fp
        color = newColor;
 80065d4:	f04f 39ff 	mov.w	r9, #4294967295
 80065d8:	2145      	movs	r1, #69	; 0x45
 80065da:	f7fb ff68 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80065de:	4659      	mov	r1, fp
 80065e0:	4640      	mov	r0, r8
        color = newColor;
 80065e2:	f8c4 91dc 	str.w	r9, [r4, #476]	; 0x1dc
        linespace = space;
 80065e6:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 80065ea:	f00a feeb 	bl	80113c4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80065ee:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80065f2:	f10b 033c 	add.w	r3, fp, #60	; 0x3c
 80065f6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80065fa:	4f24      	ldr	r7, [pc, #144]	; (800668c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2e0>)
 80065fc:	970a      	str	r7, [sp, #40]	; 0x28
 80065fe:	2316      	movs	r3, #22
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_A08K));
 8006600:	a90a      	add	r1, sp, #40	; 0x28
 8006602:	4658      	mov	r0, fp
 8006604:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006608:	f00b f976 	bl	80118f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800660c:	4659      	mov	r1, fp
 800660e:	4630      	mov	r0, r6
 8006610:	f008 ffbe 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8006614:	220c      	movs	r2, #12
 8006616:	4650      	mov	r0, sl
 8006618:	2136      	movs	r1, #54	; 0x36
 800661a:	f7fb ff48 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 800661e:	4651      	mov	r1, sl
 8006620:	4640      	mov	r0, r8
        color = newColor;
 8006622:	f8c4 9224 	str.w	r9, [r4, #548]	; 0x224
        linespace = space;
 8006626:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 800662a:	f00a fecb 	bl	80113c4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800662e:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006632:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 8006636:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800663a:	2317      	movs	r3, #23
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IJWA));
 800663c:	a90a      	add	r1, sp, #40	; 0x28
 800663e:	4650      	mov	r0, sl
 8006640:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006644:	970a      	str	r7, [sp, #40]	; 0x28
 8006646:	f00b f957 	bl	80118f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800664a:	4651      	mov	r1, sl
 800664c:	4630      	mov	r0, r6
 800664e:	f008 ff9f 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge_with_Values1.setXY(0, 78);
 8006652:	ee19 0a10 	vmov	r0, s18
 8006656:	224e      	movs	r2, #78	; 0x4e
 8006658:	4629      	mov	r1, r5
 800665a:	f7fb ff28 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 800665e:	4630      	mov	r0, r6
 8006660:	ee19 1a10 	vmov	r1, s18
 8006664:	f008 ff94 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006668:	4620      	mov	r0, r4
 800666a:	b00d      	add	sp, #52	; 0x34
 800666c:	ecbd 8b04 	vpop	{d8-d9}
 8006670:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006674:	0802b850 	.word	0x0802b850
 8006678:	0802c6d0 	.word	0x0802c6d0
 800667c:	0802c898 	.word	0x0802c898
 8006680:	0802c404 	.word	0x0802c404
 8006684:	0802b838 	.word	0x0802b838
 8006688:	08006357 	.word	0x08006357
 800668c:	08029d88 	.word	0x08029d88

08006690 <_ZN26Measurement_SingleViewBase11setupScreenEv>:
}

void Measurement_SingleViewBase::setupScreen()
{

}
 8006690:	4770      	bx	lr

08006692 <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006692:	4770      	bx	lr

08006694 <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006694:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006696:	68c2      	ldr	r2, [r0, #12]
 8006698:	6844      	ldr	r4, [r0, #4]
 800669a:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800669c:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800669e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80066a2:	07d2      	lsls	r2, r2, #31
 80066a4:	bf48      	it	mi
 80066a6:	5962      	ldrmi	r2, [r4, r5]
 80066a8:	689b      	ldr	r3, [r3, #8]
    }
 80066aa:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80066ac:	bf48      	it	mi
 80066ae:	58d3      	ldrmi	r3, [r2, r3]
 80066b0:	4718      	bx	r3

080066b2 <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80066b2:	6843      	ldr	r3, [r0, #4]
 80066b4:	b12b      	cbz	r3, 80066c2 <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80066b6:	6883      	ldr	r3, [r0, #8]
 80066b8:	b92b      	cbnz	r3, 80066c6 <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80066ba:	68c0      	ldr	r0, [r0, #12]
 80066bc:	f000 0001 	and.w	r0, r0, #1
 80066c0:	4770      	bx	lr
 80066c2:	4618      	mov	r0, r3
 80066c4:	4770      	bx	lr
 80066c6:	2001      	movs	r0, #1
    }
 80066c8:	4770      	bx	lr

080066ca <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80066ca:	b510      	push	{r4, lr}
 80066cc:	2110      	movs	r1, #16
 80066ce:	4604      	mov	r4, r0
 80066d0:	f020 ff55 	bl	802757e <_ZdlPvj>
 80066d4:	4620      	mov	r0, r4
 80066d6:	bd10      	pop	{r4, pc}

080066d8 <_ZN26Measurement_SingleViewBaseD1Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 80066d8:	b510      	push	{r4, lr}
 80066da:	4b03      	ldr	r3, [pc, #12]	; (80066e8 <_ZN26Measurement_SingleViewBaseD1Ev+0x10>)
 80066dc:	6003      	str	r3, [r0, #0]
 80066de:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80066e0:	f00c fcec 	bl	80130bc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80066e4:	4620      	mov	r0, r4
 80066e6:	bd10      	pop	{r4, pc}
 80066e8:	0802b89c 	.word	0x0802b89c

080066ec <_ZN26Measurement_SingleViewBaseD0Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 80066ec:	b507      	push	{r0, r1, r2, lr}
 80066ee:	4b07      	ldr	r3, [pc, #28]	; (800670c <_ZN26Measurement_SingleViewBaseD0Ev+0x20>)
 80066f0:	6003      	str	r3, [r0, #0]
 80066f2:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80066f4:	f00c fce2 	bl	80130bc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80066f8:	9801      	ldr	r0, [sp, #4]
 80066fa:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80066fe:	f020 ff3e 	bl	802757e <_ZdlPvj>
 8006702:	9801      	ldr	r0, [sp, #4]
 8006704:	b003      	add	sp, #12
 8006706:	f85d fb04 	ldr.w	pc, [sp], #4
 800670a:	bf00      	nop
 800670c:	0802b89c 	.word	0x0802b89c

08006710 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_SingleViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8006710:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8006712:	f500 7310 	add.w	r3, r0, #576	; 0x240
 8006716:	4299      	cmp	r1, r3
{
 8006718:	4604      	mov	r4, r0
 800671a:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 800671c:	d103      	bne.n	8006726 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_SingleViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800671e:	f00e f9cf 	bl	8014ac0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 8006722:	f7fc ffeb 	bl	80036fc <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 8006726:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 800672a:	429d      	cmp	r5, r3
 800672c:	d103      	bne.n	8006736 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 800672e:	f00e f9c7 	bl	8014ac0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Measurement_Single_Display_1P
        //Go to Measurement_Single_Display_1P with screen transition towards East
        application().gotoMeasurement_Single_Display_1PScreenWipeTransitionEast();
 8006732:	f7fd f803 	bl	800373c <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 8006736:	f504 7422 	add.w	r4, r4, #648	; 0x288
 800673a:	42a5      	cmp	r5, r4
 800673c:	d105      	bne.n	800674a <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 800673e:	f00e f9bf 	bl	8014ac0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Measurement_Single_Display_3P
        //Go to Measurement_Single_Display_3P with screen transition towards East
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
    }
}
 8006742:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
 8006746:	f7fd b809 	b.w	800375c <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>
}
 800674a:	bd38      	pop	{r3, r4, r5, pc}

0800674c <_ZN26Measurement_SingleViewBaseC1Ev>:
Measurement_SingleViewBase::Measurement_SingleViewBase() :
 800674c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006750:	ed2d 8b06 	vpush	{d8-d10}
 8006754:	4604      	mov	r4, r0
 8006756:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_SingleViewBase::buttonCallbackHandler)
 8006758:	46a3      	mov	fp, r4
 800675a:	2500      	movs	r5, #0
 800675c:	f00f fe30 	bl	80163c0 <_ZN8touchgfx6ScreenC1Ev>
 8006760:	4b66      	ldr	r3, [pc, #408]	; (80068fc <_ZN26Measurement_SingleViewBaseC1Ev+0x1b0>)
 8006762:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006764:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8006768:	2226      	movs	r2, #38	; 0x26
 800676a:	4629      	mov	r1, r5
 800676c:	4658      	mov	r0, fp
 800676e:	f021 fefc 	bl	802856a <memset>
 8006772:	4658      	mov	r0, fp
 8006774:	f7fb febc 	bl	80024f0 <_ZN8touchgfx6WidgetC1Ev>
 8006778:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 800677c:	26ff      	movs	r6, #255	; 0xff
 800677e:	4b60      	ldr	r3, [pc, #384]	; (8006900 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b4>)
 8006780:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006782:	2226      	movs	r2, #38	; 0x26
 8006784:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006788:	4629      	mov	r1, r5
 800678a:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800678e:	4650      	mov	r0, sl
 8006790:	66a5      	str	r5, [r4, #104]	; 0x68
 8006792:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006796:	f021 fee8 	bl	802856a <memset>
 800679a:	4650      	mov	r0, sl
 800679c:	f7fb fea8 	bl	80024f0 <_ZN8touchgfx6WidgetC1Ev>
 80067a0:	4b58      	ldr	r3, [pc, #352]	; (8006904 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b8>)
 80067a2:	66e3      	str	r3, [r4, #108]	; 0x6c
 80067a4:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80067a8:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80067ac:	a90a      	add	r1, sp, #40	; 0x28
 80067ae:	4650      	mov	r0, sl
 80067b0:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 80067b4:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80067b8:	f00b fc79 	bl	80120ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 80067bc:	4648      	mov	r0, r9
 80067be:	f7fb fea9 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 80067c2:	4b51      	ldr	r3, [pc, #324]	; (8006908 <_ZN26Measurement_SingleViewBaseC1Ev+0x1bc>)
 80067c4:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 80067c8:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 80067cc:	4618      	mov	r0, r3
 80067ce:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 80067d2:	f504 7796 	add.w	r7, r4, #300	; 0x12c
 80067d6:	ee08 3a90 	vmov	s17, r3
 80067da:	f7fb fe9b 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 80067de:	4638      	mov	r0, r7
 80067e0:	f00a fb2e 	bl	8010e40 <_ZN8touchgfx4LineC1Ev>
 80067e4:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80067e8:	4618      	mov	r0, r3
 80067ea:	9303      	str	r3, [sp, #12]
 80067ec:	f7fa fd68 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80067f0:	4b46      	ldr	r3, [pc, #280]	; (800690c <_ZN26Measurement_SingleViewBaseC1Ev+0x1c0>)
 80067f2:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 80067f6:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 80067fa:	3324      	adds	r3, #36	; 0x24
 80067fc:	f8c4 31a4 	str.w	r3, [r4, #420]	; 0x1a4
 8006800:	f8c4 51a8 	str.w	r5, [r4, #424]	; 0x1a8
 8006804:	4640      	mov	r0, r8
 8006806:	f7fb fe85 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 800680a:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 800680e:	4618      	mov	r0, r3
 8006810:	ee08 3a10 	vmov	s16, r3
 8006814:	f7fb fe7e 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 8006818:	f504 7310 	add.w	r3, r4, #576	; 0x240
 800681c:	4618      	mov	r0, r3
 800681e:	ee09 3a10 	vmov	s18, r3
 8006822:	f00b fd85 	bl	8012330 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006826:	f504 7322 	add.w	r3, r4, #648	; 0x288
 800682a:	4618      	mov	r0, r3
 800682c:	ee09 3a90 	vmov	s19, r3
 8006830:	f00b fd7e 	bl	8012330 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006834:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8006838:	4618      	mov	r0, r3
 800683a:	ee0a 3a10 	vmov	s20, r3
 800683e:	f00b fd77 	bl	8012330 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006842:	4a33      	ldr	r2, [pc, #204]	; (8006910 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c4>)
 8006844:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006848:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 800684c:	4a31      	ldr	r2, [pc, #196]	; (8006914 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800684e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006852:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8006856:	f504 7048 	add.w	r0, r4, #800	; 0x320
 800685a:	f00c fc25 	bl	80130a8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800685e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006862:	462a      	mov	r2, r5
 8006864:	4658      	mov	r0, fp
 8006866:	9300      	str	r3, [sp, #0]
 8006868:	4629      	mov	r1, r5
 800686a:	23f0      	movs	r3, #240	; 0xf0
 800686c:	f7fb fe2c 	bl	80024c8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006870:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006872:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006876:	66a3      	str	r3, [r4, #104]	; 0x68
 8006878:	4659      	mov	r1, fp
 800687a:	4630      	mov	r0, r6
 800687c:	f008 fe88 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006880:	462a      	mov	r2, r5
 8006882:	4650      	mov	r0, sl
 8006884:	4629      	mov	r1, r5
 8006886:	f7fb fe12 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 800688a:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800688c:	4650      	mov	r0, sl
 800688e:	a90a      	add	r1, sp, #40	; 0x28
 8006890:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006894:	f00b fc0b 	bl	80120ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006898:	4651      	mov	r1, sl
 800689a:	4630      	mov	r0, r6
 800689c:	f008 fe78 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 80068a0:	f44f 729a 	mov.w	r2, #308	; 0x134
 80068a4:	2156      	movs	r1, #86	; 0x56
 80068a6:	4648      	mov	r0, r9
 80068a8:	f7fb fe01 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80068ac:	f04f 33ff 	mov.w	r3, #4294967295
 80068b0:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 80068b4:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 80068b8:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 80068bc:	f10d 0b10 	add.w	fp, sp, #16
 80068c0:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80068c4:	4649      	mov	r1, r9
 80068c6:	4658      	mov	r0, fp
 80068c8:	4798      	blx	r3
 80068ca:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 80068ce:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 80068d2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80068d6:	4b10      	ldr	r3, [pc, #64]	; (8006918 <_ZN26Measurement_SingleViewBaseC1Ev+0x1cc>)
 80068d8:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_DTDC).getText());
 80068da:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 80068de:	b92b      	cbnz	r3, 80068ec <_ZN26Measurement_SingleViewBaseC1Ev+0x1a0>
 80068e0:	4b0e      	ldr	r3, [pc, #56]	; (800691c <_ZN26Measurement_SingleViewBaseC1Ev+0x1d0>)
 80068e2:	4a0f      	ldr	r2, [pc, #60]	; (8006920 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d4>)
 80068e4:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80068e6:	480f      	ldr	r0, [pc, #60]	; (8006924 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d8>)
 80068e8:	f021 fc3a 	bl	8028160 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80068ec:	4b0e      	ldr	r3, [pc, #56]	; (8006928 <_ZN26Measurement_SingleViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80068ee:	881b      	ldrh	r3, [r3, #0]
 80068f0:	2b0f      	cmp	r3, #15
 80068f2:	d81d      	bhi.n	8006930 <_ZN26Measurement_SingleViewBaseC1Ev+0x1e4>
 80068f4:	4b0d      	ldr	r3, [pc, #52]	; (800692c <_ZN26Measurement_SingleViewBaseC1Ev+0x1e0>)
 80068f6:	4a0a      	ldr	r2, [pc, #40]	; (8006920 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d4>)
 80068f8:	2161      	movs	r1, #97	; 0x61
 80068fa:	e7f4      	b.n	80068e6 <_ZN26Measurement_SingleViewBaseC1Ev+0x19a>
 80068fc:	0802b89c 	.word	0x0802b89c
 8006900:	0802c6d0 	.word	0x0802c6d0
 8006904:	0802c898 	.word	0x0802c898
 8006908:	08029d98 	.word	0x08029d98
 800690c:	0802c404 	.word	0x0802c404
 8006910:	0802b884 	.word	0x0802b884
 8006914:	08006711 	.word	0x08006711
 8006918:	20013814 	.word	0x20013814
 800691c:	08029bd8 	.word	0x08029bd8
 8006920:	08029cda 	.word	0x08029cda
 8006924:	08029c55 	.word	0x08029c55
 8006928:	20013818 	.word	0x20013818
 800692c:	08029c9c 	.word	0x08029c9c
        return texts->getText(typedTextId);
 8006930:	4b95      	ldr	r3, [pc, #596]	; (8006b88 <_ZN26Measurement_SingleViewBaseC1Ev+0x43c>)
 8006932:	210f      	movs	r1, #15
 8006934:	6818      	ldr	r0, [r3, #0]
 8006936:	f001 f8ff 	bl	8007b38 <_ZNK8touchgfx5Texts7getTextEt>
 800693a:	4a94      	ldr	r2, [pc, #592]	; (8006b8c <_ZN26Measurement_SingleViewBaseC1Ev+0x440>)
 800693c:	4603      	mov	r3, r0
 800693e:	2104      	movs	r1, #4
 8006940:	4650      	mov	r0, sl
 8006942:	f011 fa21 	bl	8017d88 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8006946:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea3_1.resizeToCurrentText();
 800694a:	4648      	mov	r0, r9
 800694c:	f00a ffb4 	bl	80118b8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8006950:	f8df a23c 	ldr.w	sl, [pc, #572]	; 8006b90 <_ZN26Measurement_SingleViewBaseC1Ev+0x444>
 8006954:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8006958:	2310      	movs	r3, #16
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VDD5));
 800695a:	a90a      	add	r1, sp, #40	; 0x28
 800695c:	4648      	mov	r0, r9
 800695e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006962:	f00a ffc9 	bl	80118f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006966:	4649      	mov	r1, r9
 8006968:	4630      	mov	r0, r6
 800696a:	f008 fe11 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(41, 60);
 800696e:	223c      	movs	r2, #60	; 0x3c
 8006970:	ee18 0a90 	vmov	r0, s17
 8006974:	2129      	movs	r1, #41	; 0x29
 8006976:	f7fb fd9a 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800697a:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 800697e:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 8006982:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8006986:	4658      	mov	r0, fp
        linespace = space;
 8006988:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 800698c:	f00a fd1a 	bl	80113c4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006990:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8006994:	f504 7390 	add.w	r3, r4, #288	; 0x120
 8006998:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800699c:	231f      	movs	r3, #31
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1QNY));
 800699e:	ee18 0a90 	vmov	r0, s17
 80069a2:	a90a      	add	r1, sp, #40	; 0x28
 80069a4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80069a8:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 80069ac:	f00a ffa4 	bl	80118f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80069b0:	ee18 1a90 	vmov	r1, s17
 80069b4:	4630      	mov	r0, r6
 80069b6:	f008 fdeb 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80069ba:	230a      	movs	r3, #10
 80069bc:	9300      	str	r3, [sp, #0]
 80069be:	2232      	movs	r2, #50	; 0x32
 80069c0:	23f0      	movs	r3, #240	; 0xf0
 80069c2:	4629      	mov	r1, r5
 80069c4:	4638      	mov	r0, r7
 80069c6:	f7fb fd7f 	bl	80024c8 <_ZN8touchgfx8Drawable11setPositionEssss>
 80069ca:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80069ce:	22a0      	movs	r2, #160	; 0xa0
 80069d0:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
        color565 = LCD16bpp::getNativeColor(painterColor);
 80069d4:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 80069d8:	9b03      	ldr	r3, [sp, #12]
 80069da:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 80069de:	4611      	mov	r1, r2
 80069e0:	4638      	mov	r0, r7
 80069e2:	f00a fb43 	bl	801106c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80069e6:	22a0      	movs	r2, #160	; 0xa0
 80069e8:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80069ec:	4638      	mov	r0, r7
 80069ee:	f00a fb48 	bl	8011082 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80069f2:	f8d4 3168 	ldr.w	r3, [r4, #360]	; 0x168
 80069f6:	2b20      	cmp	r3, #32
 80069f8:	d005      	beq.n	8006a06 <_ZN26Measurement_SingleViewBaseC1Ev+0x2ba>
        lineWidthQ5 = widthQ5;
 80069fa:	2320      	movs	r3, #32
 80069fc:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
        updateCachedShape();
 8006a00:	4638      	mov	r0, r7
 8006a02:	f00a fa3d 	bl	8010e80 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006a06:	4638      	mov	r0, r7
 8006a08:	2101      	movs	r1, #1
 8006a0a:	f00a fb45 	bl	8011098 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006a0e:	4639      	mov	r1, r7
 8006a10:	4630      	mov	r0, r6
 8006a12:	f008 fdbd 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8006a16:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 8006a1a:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 35);
 8006a1c:	2223      	movs	r2, #35	; 0x23
 8006a1e:	4640      	mov	r0, r8
        linespace = space;
 8006a20:	f04f 0a00 	mov.w	sl, #0
 8006a24:	2145      	movs	r1, #69	; 0x45
 8006a26:	f7fb fd42 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006a2a:	4641      	mov	r1, r8
 8006a2c:	4638      	mov	r0, r7
        color = newColor;
 8006a2e:	f8c4 51e0 	str.w	r5, [r4, #480]	; 0x1e0
        linespace = space;
 8006a32:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8006a36:	f00a fcc5 	bl	80113c4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006a3a:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8006a3e:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8006a42:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006a46:	f8df 9148 	ldr.w	r9, [pc, #328]	; 8006b90 <_ZN26Measurement_SingleViewBaseC1Ev+0x444>
 8006a4a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006a4e:	2338      	movs	r3, #56	; 0x38
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T0FJ));
 8006a50:	a90a      	add	r1, sp, #40	; 0x28
 8006a52:	4640      	mov	r0, r8
 8006a54:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006a58:	f00a ff4e 	bl	80118f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006a5c:	4641      	mov	r1, r8
 8006a5e:	4630      	mov	r0, r6
 8006a60:	f008 fd96 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8006a64:	ee18 0a10 	vmov	r0, s16
 8006a68:	220c      	movs	r2, #12
 8006a6a:	2136      	movs	r1, #54	; 0x36
 8006a6c:	f7fb fd1f 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8006a70:	ee18 1a10 	vmov	r1, s16
 8006a74:	4638      	mov	r0, r7
        color = newColor;
 8006a76:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
        linespace = space;
 8006a7a:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8006a7e:	f00a fca1 	bl	80113c4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006a82:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8006a86:	ee18 3a10 	vmov	r3, s16
 8006a8a:	333c      	adds	r3, #60	; 0x3c
 8006a8c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006a90:	2337      	movs	r3, #55	; 0x37
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3BUV));
 8006a92:	ee18 0a10 	vmov	r0, s16
 8006a96:	a90a      	add	r1, sp, #40	; 0x28
 8006a98:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006a9c:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006aa0:	f00a ff2a 	bl	80118f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006aa4:	ee18 1a10 	vmov	r1, s16
 8006aa8:	4630      	mov	r0, r6
 8006aaa:	f008 fd71 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8006aae:	ee19 0a10 	vmov	r0, s18
 8006ab2:	22f0      	movs	r2, #240	; 0xf0
 8006ab4:	2121      	movs	r1, #33	; 0x21
 8006ab6:	f7fb fcfa 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8006aba:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006abe:	aa0a      	add	r2, sp, #40	; 0x28
 8006ac0:	f04f 0802 	mov.w	r8, #2
 8006ac4:	a909      	add	r1, sp, #36	; 0x24
 8006ac6:	ee19 0a10 	vmov	r0, s18
 8006aca:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006ace:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8006ad2:	f504 5789 	add.w	r7, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006ad6:	f00b f8f4 	bl	8011cc2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006ada:	2336      	movs	r3, #54	; 0x36
 8006adc:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8006ae0:	3710      	adds	r7, #16
        updateTextPosition();
 8006ae2:	ee19 0a10 	vmov	r0, s18
 8006ae6:	f7fb fd37 	bl	8002558 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006aea:	ee19 1a10 	vmov	r1, s18
 8006aee:	4630      	mov	r0, r6
        colorPressed = col;
 8006af0:	e9c4 559f 	strd	r5, r5, [r4, #636]	; 0x27c
 8006af4:	f8c4 7268 	str.w	r7, [r4, #616]	; 0x268
 8006af8:	f008 fd4a 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8006afc:	ee19 0a90 	vmov	r0, s19
 8006b00:	22aa      	movs	r2, #170	; 0xaa
 8006b02:	2121      	movs	r1, #33	; 0x21
 8006b04:	f7fb fcd3 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006b08:	aa0a      	add	r2, sp, #40	; 0x28
 8006b0a:	a909      	add	r1, sp, #36	; 0x24
 8006b0c:	ee19 0a90 	vmov	r0, s19
 8006b10:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006b14:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8006b18:	f00b f8d3 	bl	8011cc2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006b1c:	2335      	movs	r3, #53	; 0x35
 8006b1e:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8006b22:	ee19 0a90 	vmov	r0, s19
 8006b26:	f7fb fd17 	bl	8002558 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006b2a:	ee19 1a90 	vmov	r1, s19
 8006b2e:	4630      	mov	r0, r6
        colorPressed = col;
 8006b30:	e9c4 55b1 	strd	r5, r5, [r4, #708]	; 0x2c4
 8006b34:	f8c4 72b0 	str.w	r7, [r4, #688]	; 0x2b0
 8006b38:	f008 fd2a 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8006b3c:	ee1a 0a10 	vmov	r0, s20
 8006b40:	2264      	movs	r2, #100	; 0x64
 8006b42:	2121      	movs	r1, #33	; 0x21
 8006b44:	f7fb fcb3 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006b48:	aa0a      	add	r2, sp, #40	; 0x28
 8006b4a:	a909      	add	r1, sp, #36	; 0x24
 8006b4c:	ee1a 0a10 	vmov	r0, s20
 8006b50:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006b54:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8006b58:	f00b f8b3 	bl	8011cc2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006b5c:	2334      	movs	r3, #52	; 0x34
        updateTextPosition();
 8006b5e:	ee1a 0a10 	vmov	r0, s20
 8006b62:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8006b66:	f7fb fcf7 	bl	8002558 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006b6a:	4630      	mov	r0, r6
        colorPressed = col;
 8006b6c:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
 8006b70:	ee1a 1a10 	vmov	r1, s20
 8006b74:	f8c4 72f8 	str.w	r7, [r4, #760]	; 0x2f8
 8006b78:	f008 fd0a 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006b7c:	4620      	mov	r0, r4
 8006b7e:	b00d      	add	sp, #52	; 0x34
 8006b80:	ecbd 8b06 	vpop	{d8-d10}
 8006b84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006b88:	20013820 	.word	0x20013820
 8006b8c:	08029d12 	.word	0x08029d12
 8006b90:	08029d88 	.word	0x08029d88

08006b94 <_ZN37Measurement_Single_Display_1PViewBase7testGuiEv>:
     * Virtual Action Handlers
     */
    virtual void testGui()
    {
        // Override and implement this function in Measurement_Single_Display_1P
    }
 8006b94:	4770      	bx	lr

08006b96 <_ZN37Measurement_Single_Display_1PViewBase15handleTickEventEv>:
void Measurement_Single_Display_1PViewBase::handleTickEvent()
{
    //Interaction2
    //When every N tick call virtual function
    //Call testGui
    testGui();
 8006b96:	6803      	ldr	r3, [r0, #0]
 8006b98:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006b9a:	4718      	bx	r3

08006b9c <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006b9c:	4770      	bx	lr

08006b9e <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006b9e:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006ba0:	68c2      	ldr	r2, [r0, #12]
 8006ba2:	6844      	ldr	r4, [r0, #4]
 8006ba4:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006ba6:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006ba8:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006bac:	07d2      	lsls	r2, r2, #31
 8006bae:	bf48      	it	mi
 8006bb0:	5962      	ldrmi	r2, [r4, r5]
 8006bb2:	689b      	ldr	r3, [r3, #8]
    }
 8006bb4:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006bb6:	bf48      	it	mi
 8006bb8:	58d3      	ldrmi	r3, [r2, r3]
 8006bba:	4718      	bx	r3

08006bbc <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006bbc:	6843      	ldr	r3, [r0, #4]
 8006bbe:	b12b      	cbz	r3, 8006bcc <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006bc0:	6883      	ldr	r3, [r0, #8]
 8006bc2:	b92b      	cbnz	r3, 8006bd0 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006bc4:	68c0      	ldr	r0, [r0, #12]
 8006bc6:	f000 0001 	and.w	r0, r0, #1
 8006bca:	4770      	bx	lr
 8006bcc:	4618      	mov	r0, r3
 8006bce:	4770      	bx	lr
 8006bd0:	2001      	movs	r0, #1
    }
 8006bd2:	4770      	bx	lr

08006bd4 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006bd4:	b510      	push	{r4, lr}
 8006bd6:	2110      	movs	r1, #16
 8006bd8:	4604      	mov	r4, r0
 8006bda:	f020 fcd0 	bl	802757e <_ZdlPvj>
 8006bde:	4620      	mov	r0, r4
 8006be0:	bd10      	pop	{r4, pc}

08006be2 <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>:
    gauge_with_Values1.initialize();
 8006be2:	f500 700f 	add.w	r0, r0, #572	; 0x23c
 8006be6:	f001 b8ef 	b.w	8007dc8 <_ZN17Gauge_with_Values10initializeEv>

08006bea <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &buttonWithLabel3)
 8006bea:	f500 70fa 	add.w	r0, r0, #500	; 0x1f4
 8006bee:	4288      	cmp	r0, r1
{
 8006bf0:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8006bf2:	d105      	bne.n	8006c00 <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006bf4:	f00d ff64 	bl	8014ac0 <_ZN8touchgfx11Application11getInstanceEv>
}
 8006bf8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8006bfc:	f7fc bd8e 	b.w	800371c <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 8006c00:	bd08      	pop	{r3, pc}
	...

08006c04 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 8006c04:	b510      	push	{r4, lr}
 8006c06:	4b07      	ldr	r3, [pc, #28]	; (8006c24 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev+0x20>)
 8006c08:	6003      	str	r3, [r0, #0]
 8006c0a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006c0c:	f00c fa56 	bl	80130bc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
 8006c10:	4b05      	ldr	r3, [pc, #20]	; (8006c28 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev+0x24>)
 8006c12:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
 8006c16:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8006c1a:	f7fe f815 	bl	8004c48 <_ZN21Gauge_with_ValuesBaseD1Ev>
}
 8006c1e:	4620      	mov	r0, r4
 8006c20:	bd10      	pop	{r4, pc}
 8006c22:	bf00      	nop
 8006c24:	0802b8e8 	.word	0x0802b8e8
 8006c28:	0802bd5c 	.word	0x0802bd5c

08006c2c <_ZN37Measurement_Single_Display_1PViewBaseD0Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 8006c2c:	b510      	push	{r4, lr}
 8006c2e:	4604      	mov	r4, r0
}
 8006c30:	f7ff ffe8 	bl	8006c04 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>
 8006c34:	4620      	mov	r0, r4
 8006c36:	f241 31e4 	movw	r1, #5092	; 0x13e4
 8006c3a:	f020 fca0 	bl	802757e <_ZdlPvj>
 8006c3e:	4620      	mov	r0, r4
 8006c40:	bd10      	pop	{r4, pc}
	...

08006c44 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>:
Measurement_Single_Display_1PViewBase::Measurement_Single_Display_1PViewBase() :
 8006c44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006c48:	ed2d 8b04 	vpush	{d8-d9}
 8006c4c:	4604      	mov	r4, r0
 8006c4e:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Single_Display_1PViewBase::buttonCallbackHandler)
 8006c50:	46a2      	mov	sl, r4
 8006c52:	2500      	movs	r5, #0
 8006c54:	f00f fbb4 	bl	80163c0 <_ZN8touchgfx6ScreenC1Ev>
 8006c58:	4baf      	ldr	r3, [pc, #700]	; (8006f18 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d4>)
 8006c5a:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006c5c:	f84a 3b40 	str.w	r3, [sl], #64
        : Widget(), alpha(255), color(0)
 8006c60:	2226      	movs	r2, #38	; 0x26
 8006c62:	4629      	mov	r1, r5
 8006c64:	4650      	mov	r0, sl
 8006c66:	f021 fc80 	bl	802856a <memset>
 8006c6a:	4650      	mov	r0, sl
 8006c6c:	f7fb fc40 	bl	80024f0 <_ZN8touchgfx6WidgetC1Ev>
 8006c70:	f104 096c 	add.w	r9, r4, #108	; 0x6c
 8006c74:	26ff      	movs	r6, #255	; 0xff
 8006c76:	4ba9      	ldr	r3, [pc, #676]	; (8006f1c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d8>)
 8006c78:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006c7a:	2226      	movs	r2, #38	; 0x26
 8006c7c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006c80:	4629      	mov	r1, r5
 8006c82:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006c86:	4648      	mov	r0, r9
 8006c88:	66a5      	str	r5, [r4, #104]	; 0x68
 8006c8a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006c8e:	f021 fc6c 	bl	802856a <memset>
 8006c92:	4648      	mov	r0, r9
 8006c94:	f7fb fc2c 	bl	80024f0 <_ZN8touchgfx6WidgetC1Ev>
 8006c98:	4ba1      	ldr	r3, [pc, #644]	; (8006f20 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2dc>)
 8006c9a:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006c9c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006ca0:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006ca4:	a90a      	add	r1, sp, #40	; 0x28
 8006ca6:	4648      	mov	r0, r9
        : Widget(), bitmap(bmp), alpha(255)
 8006ca8:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006cac:	f00b f9ff 	bl	80120ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006cb0:	f104 0398 	add.w	r3, r4, #152	; 0x98
 8006cb4:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8006cb8:	4618      	mov	r0, r3
 8006cba:	ee08 3a10 	vmov	s16, r3
 8006cbe:	f7fb fc29 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 8006cc2:	4638      	mov	r0, r7
 8006cc4:	f00a f8bc 	bl	8010e40 <_ZN8touchgfx4LineC1Ev>
 8006cc8:	f504 73a8 	add.w	r3, r4, #336	; 0x150
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006ccc:	4618      	mov	r0, r3
 8006cce:	9303      	str	r3, [sp, #12]
 8006cd0:	f7fa faf6 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006cd4:	4b93      	ldr	r3, [pc, #588]	; (8006f24 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e0>)
 8006cd6:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
 8006cda:	f504 78b2 	add.w	r8, r4, #356	; 0x164
 8006cde:	3324      	adds	r3, #36	; 0x24
 8006ce0:	f8c4 3158 	str.w	r3, [r4, #344]	; 0x158
 8006ce4:	f8c4 515c 	str.w	r5, [r4, #348]	; 0x15c
 8006ce8:	4640      	mov	r0, r8
 8006cea:	f504 7bd6 	add.w	fp, r4, #428	; 0x1ac
 8006cee:	f7fb fc11 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 8006cf2:	4658      	mov	r0, fp
 8006cf4:	f7fb fc0e 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 8006cf8:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 8006cfc:	4618      	mov	r0, r3
 8006cfe:	ee08 3a90 	vmov	s17, r3
 8006d02:	f00b fb15 	bl	8012330 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006d06:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 8006d0a:	4618      	mov	r0, r3
 8006d0c:	ee09 3a10 	vmov	s18, r3
 8006d10:	f001 f850 	bl	8007db4 <_ZN17Gauge_with_ValuesC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006d14:	4a84      	ldr	r2, [pc, #528]	; (8006f28 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e4>)
 8006d16:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006d1a:	e9c3 24f5 	strd	r2, r4, [r3, #980]	; 0x3d4
 8006d1e:	4a83      	ldr	r2, [pc, #524]	; (8006f2c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006d20:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006d24:	e9c3 25f7 	strd	r2, r5, [r3, #988]	; 0x3dc
 8006d28:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 8006d2c:	f00c f9bc 	bl	80130a8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006d30:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006d34:	462a      	mov	r2, r5
 8006d36:	4650      	mov	r0, sl
 8006d38:	9300      	str	r3, [sp, #0]
 8006d3a:	4629      	mov	r1, r5
 8006d3c:	23f0      	movs	r3, #240	; 0xf0
 8006d3e:	f7fb fbc3 	bl	80024c8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006d42:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006d44:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006d48:	66a3      	str	r3, [r4, #104]	; 0x68
 8006d4a:	4651      	mov	r1, sl
 8006d4c:	4630      	mov	r0, r6
 8006d4e:	f008 fc1f 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006d52:	462a      	mov	r2, r5
 8006d54:	4648      	mov	r0, r9
 8006d56:	4629      	mov	r1, r5
 8006d58:	f7fb fba9 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8006d5c:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006d5e:	4648      	mov	r0, r9
 8006d60:	a90a      	add	r1, sp, #40	; 0x28
 8006d62:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006d66:	f00b f9a2 	bl	80120ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006d6a:	4649      	mov	r1, r9
 8006d6c:	4630      	mov	r0, r6
 8006d6e:	f008 fc0f 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8006d72:	f04f 39ff 	mov.w	r9, #4294967295
    textArea3.setXY(31, 60);
 8006d76:	223c      	movs	r2, #60	; 0x3c
 8006d78:	ee18 0a10 	vmov	r0, s16
 8006d7c:	211f      	movs	r1, #31
        boundingArea = calculateBoundingArea();
 8006d7e:	f10d 0a10 	add.w	sl, sp, #16
 8006d82:	f7fb fb94 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8006d86:	ee18 1a10 	vmov	r1, s16
 8006d8a:	4650      	mov	r0, sl
        color = newColor;
 8006d8c:	f8c4 90c8 	str.w	r9, [r4, #200]	; 0xc8
        linespace = space;
 8006d90:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8006d94:	f00a fb16 	bl	80113c4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006d98:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8006d9c:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8006da0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8006da4:	4b62      	ldr	r3, [pc, #392]	; (8006f30 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2ec>)
 8006da6:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_M3QF));
 8006da8:	ee18 0a10 	vmov	r0, s16
 8006dac:	231e      	movs	r3, #30
 8006dae:	a90a      	add	r1, sp, #40	; 0x28
 8006db0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006db4:	f00a fda0 	bl	80118f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006db8:	ee18 1a10 	vmov	r1, s16
 8006dbc:	4630      	mov	r0, r6
 8006dbe:	f008 fbe7 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006dc2:	230a      	movs	r3, #10
 8006dc4:	9300      	str	r3, [sp, #0]
 8006dc6:	2232      	movs	r2, #50	; 0x32
 8006dc8:	23f0      	movs	r3, #240	; 0xf0
 8006dca:	4629      	mov	r1, r5
 8006dcc:	4638      	mov	r0, r7
 8006dce:	f7fb fb7b 	bl	80024c8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006dd2:	9b03      	ldr	r3, [sp, #12]
 8006dd4:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006dd8:	22a0      	movs	r2, #160	; 0xa0
 8006dda:	4611      	mov	r1, r2
 8006ddc:	4638      	mov	r0, r7
 8006dde:	f8c4 915c 	str.w	r9, [r4, #348]	; 0x15c
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006de2:	f8a4 9160 	strh.w	r9, [r4, #352]	; 0x160
 8006de6:	f00a f941 	bl	801106c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006dea:	22a0      	movs	r2, #160	; 0xa0
 8006dec:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006df0:	4638      	mov	r0, r7
 8006df2:	f00a f946 	bl	8011082 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8006df6:	f8d4 311c 	ldr.w	r3, [r4, #284]	; 0x11c
 8006dfa:	2b20      	cmp	r3, #32
 8006dfc:	d005      	beq.n	8006e0a <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x1c6>
        lineWidthQ5 = widthQ5;
 8006dfe:	2320      	movs	r3, #32
 8006e00:	f8c4 311c 	str.w	r3, [r4, #284]	; 0x11c
        updateCachedShape();
 8006e04:	4638      	mov	r0, r7
 8006e06:	f00a f83b 	bl	8010e80 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006e0a:	4638      	mov	r0, r7
 8006e0c:	2101      	movs	r1, #1
 8006e0e:	f00a f943 	bl	8011098 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006e12:	4639      	mov	r1, r7
 8006e14:	4630      	mov	r0, r6
 8006e16:	f008 fbbb 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006e1a:	ad04      	add	r5, sp, #16
        color = newColor;
 8006e1c:	f04f 37ff 	mov.w	r7, #4294967295
        linespace = space;
 8006e20:	f04f 0900 	mov.w	r9, #0
    textArea2.setXY(69, 35);
 8006e24:	2223      	movs	r2, #35	; 0x23
 8006e26:	4640      	mov	r0, r8
 8006e28:	2145      	movs	r1, #69	; 0x45
 8006e2a:	f7fb fb40 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006e2e:	4641      	mov	r1, r8
 8006e30:	4628      	mov	r0, r5
        color = newColor;
 8006e32:	f8c4 7194 	str.w	r7, [r4, #404]	; 0x194
        linespace = space;
 8006e36:	f8a4 9198 	strh.w	r9, [r4, #408]	; 0x198
        boundingArea = calculateBoundingArea();
 8006e3a:	f00a fac3 	bl	80113c4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006e3e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006e42:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8006e46:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006e4a:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8006f30 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2ec>
 8006e4e:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8006e52:	232b      	movs	r3, #43	; 0x2b
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9O3K));
 8006e54:	a90a      	add	r1, sp, #40	; 0x28
 8006e56:	4640      	mov	r0, r8
 8006e58:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006e5c:	f00a fd4c 	bl	80118f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006e60:	4641      	mov	r1, r8
 8006e62:	4630      	mov	r0, r6
 8006e64:	f008 fb94 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8006e68:	220c      	movs	r2, #12
 8006e6a:	4658      	mov	r0, fp
 8006e6c:	2136      	movs	r1, #54	; 0x36
 8006e6e:	f7fb fb1e 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8006e72:	4659      	mov	r1, fp
 8006e74:	4628      	mov	r0, r5
        color = newColor;
 8006e76:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 8006e7a:	f8a4 91e0 	strh.w	r9, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8006e7e:	f00a faa1 	bl	80113c4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006e82:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006e86:	f10b 033c 	add.w	r3, fp, #60	; 0x3c
 8006e8a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006e8e:	232a      	movs	r3, #42	; 0x2a
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T27V));
 8006e90:	a90a      	add	r1, sp, #40	; 0x28
 8006e92:	4658      	mov	r0, fp
 8006e94:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006e98:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8006e9c:	f00a fd2c 	bl	80118f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006ea0:	4659      	mov	r1, fp
 8006ea2:	4630      	mov	r0, r6
 8006ea4:	f008 fb74 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 256);
 8006ea8:	ee18 0a90 	vmov	r0, s17
 8006eac:	f44f 7280 	mov.w	r2, #256	; 0x100
 8006eb0:	2121      	movs	r1, #33	; 0x21
 8006eb2:	f7fb fafc 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8006eb6:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006eb8:	aa0a      	add	r2, sp, #40	; 0x28
 8006eba:	a909      	add	r1, sp, #36	; 0x24
 8006ebc:	ee18 0a90 	vmov	r0, s17
 8006ec0:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8006ec4:	2302      	movs	r3, #2
 8006ec6:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006eca:	f00a fefa 	bl	8011cc2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006ece:	2329      	movs	r3, #41	; 0x29
        updateTextPosition();
 8006ed0:	ee18 0a90 	vmov	r0, s17
 8006ed4:	f8a4 322c 	strh.w	r3, [r4, #556]	; 0x22c
 8006ed8:	f7fb fb3e 	bl	8002558 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8006edc:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 8006ee0:	3314      	adds	r3, #20
 8006ee2:	f8c4 321c 	str.w	r3, [r4, #540]	; 0x21c
 8006ee6:	ee18 1a90 	vmov	r1, s17
 8006eea:	4630      	mov	r0, r6
        colorPressed = col;
 8006eec:	e9c4 778c 	strd	r7, r7, [r4, #560]	; 0x230
 8006ef0:	f008 fb4e 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge_with_Values1.setXY(0, 78);
 8006ef4:	ee19 0a10 	vmov	r0, s18
 8006ef8:	224e      	movs	r2, #78	; 0x4e
 8006efa:	4649      	mov	r1, r9
 8006efc:	f7fb fad7 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8006f00:	4630      	mov	r0, r6
 8006f02:	ee19 1a10 	vmov	r1, s18
 8006f06:	f008 fb43 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006f0a:	4620      	mov	r0, r4
 8006f0c:	b00d      	add	sp, #52	; 0x34
 8006f0e:	ecbd 8b04 	vpop	{d8-d9}
 8006f12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006f16:	bf00      	nop
 8006f18:	0802b8e8 	.word	0x0802b8e8
 8006f1c:	0802c6d0 	.word	0x0802c6d0
 8006f20:	0802c898 	.word	0x0802c898
 8006f24:	0802c404 	.word	0x0802c404
 8006f28:	0802b8d0 	.word	0x0802b8d0
 8006f2c:	08006beb 	.word	0x08006beb
 8006f30:	08029d88 	.word	0x08029d88

08006f34 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006f34:	4770      	bx	lr

08006f36 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006f36:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006f38:	68c2      	ldr	r2, [r0, #12]
 8006f3a:	6844      	ldr	r4, [r0, #4]
 8006f3c:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006f3e:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006f40:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006f44:	07d2      	lsls	r2, r2, #31
 8006f46:	bf48      	it	mi
 8006f48:	5962      	ldrmi	r2, [r4, r5]
 8006f4a:	689b      	ldr	r3, [r3, #8]
    }
 8006f4c:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006f4e:	bf48      	it	mi
 8006f50:	58d3      	ldrmi	r3, [r2, r3]
 8006f52:	4718      	bx	r3

08006f54 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006f54:	6843      	ldr	r3, [r0, #4]
 8006f56:	b12b      	cbz	r3, 8006f64 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006f58:	6883      	ldr	r3, [r0, #8]
 8006f5a:	b92b      	cbnz	r3, 8006f68 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006f5c:	68c0      	ldr	r0, [r0, #12]
 8006f5e:	f000 0001 	and.w	r0, r0, #1
 8006f62:	4770      	bx	lr
 8006f64:	4618      	mov	r0, r3
 8006f66:	4770      	bx	lr
 8006f68:	2001      	movs	r0, #1
    }
 8006f6a:	4770      	bx	lr

08006f6c <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006f6c:	b510      	push	{r4, lr}
 8006f6e:	2110      	movs	r1, #16
 8006f70:	4604      	mov	r4, r0
 8006f72:	f020 fb04 	bl	802757e <_ZdlPvj>
 8006f76:	4620      	mov	r0, r4
 8006f78:	bd10      	pop	{r4, pc}

08006f7a <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Measurement_Single_Display_3PViewBase::setupScreen()
{
    gauge_with_Values1.initialize();
 8006f7a:	f500 700f 	add.w	r0, r0, #572	; 0x23c
 8006f7e:	f000 bf23 	b.w	8007dc8 <_ZN17Gauge_with_Values10initializeEv>

08006f82 <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
}

void Measurement_Single_Display_3PViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8006f82:	f500 70fa 	add.w	r0, r0, #500	; 0x1f4
 8006f86:	4288      	cmp	r0, r1
{
 8006f88:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8006f8a:	d105      	bne.n	8006f98 <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_Single_Display_3PViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006f8c:	f00d fd98 	bl	8014ac0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}
 8006f90:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8006f94:	f7fc bbc2 	b.w	800371c <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 8006f98:	bd08      	pop	{r3, pc}
	...

08006f9c <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 8006f9c:	b510      	push	{r4, lr}
 8006f9e:	4b07      	ldr	r3, [pc, #28]	; (8006fbc <_ZN37Measurement_Single_Display_3PViewBaseD1Ev+0x20>)
 8006fa0:	6003      	str	r3, [r0, #0]
 8006fa2:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006fa4:	f00c f88a 	bl	80130bc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
 8006fa8:	4b05      	ldr	r3, [pc, #20]	; (8006fc0 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev+0x24>)
 8006faa:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
 8006fae:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8006fb2:	f7fd fe49 	bl	8004c48 <_ZN21Gauge_with_ValuesBaseD1Ev>
}
 8006fb6:	4620      	mov	r0, r4
 8006fb8:	bd10      	pop	{r4, pc}
 8006fba:	bf00      	nop
 8006fbc:	0802b938 	.word	0x0802b938
 8006fc0:	0802bd5c 	.word	0x0802bd5c

08006fc4 <_ZN37Measurement_Single_Display_3PViewBaseD0Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 8006fc4:	b510      	push	{r4, lr}
 8006fc6:	4604      	mov	r4, r0
}
 8006fc8:	f7ff ffe8 	bl	8006f9c <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>
 8006fcc:	4620      	mov	r0, r4
 8006fce:	f241 31e4 	movw	r1, #5092	; 0x13e4
 8006fd2:	f020 fad4 	bl	802757e <_ZdlPvj>
 8006fd6:	4620      	mov	r0, r4
 8006fd8:	bd10      	pop	{r4, pc}
	...

08006fdc <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>:
Measurement_Single_Display_3PViewBase::Measurement_Single_Display_3PViewBase() :
 8006fdc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006fe0:	ed2d 8b04 	vpush	{d8-d9}
 8006fe4:	4604      	mov	r4, r0
 8006fe6:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Single_Display_3PViewBase::buttonCallbackHandler)
 8006fe8:	46a3      	mov	fp, r4
 8006fea:	2500      	movs	r5, #0
 8006fec:	f00f f9e8 	bl	80163c0 <_ZN8touchgfx6ScreenC1Ev>
 8006ff0:	4bae      	ldr	r3, [pc, #696]	; (80072ac <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2d0>)
 8006ff2:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006ff4:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8006ff8:	2226      	movs	r2, #38	; 0x26
 8006ffa:	4629      	mov	r1, r5
 8006ffc:	4658      	mov	r0, fp
 8006ffe:	f021 fab4 	bl	802856a <memset>
 8007002:	4658      	mov	r0, fp
 8007004:	f7fb fa74 	bl	80024f0 <_ZN8touchgfx6WidgetC1Ev>
 8007008:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 800700c:	26ff      	movs	r6, #255	; 0xff
 800700e:	4ba8      	ldr	r3, [pc, #672]	; (80072b0 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2d4>)
 8007010:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8007012:	2226      	movs	r2, #38	; 0x26
 8007014:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007018:	4629      	mov	r1, r5
 800701a:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800701e:	66a5      	str	r5, [r4, #104]	; 0x68
 8007020:	4650      	mov	r0, sl
 8007022:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007026:	f021 faa0 	bl	802856a <memset>
 800702a:	4650      	mov	r0, sl
 800702c:	f7fb fa60 	bl	80024f0 <_ZN8touchgfx6WidgetC1Ev>
 8007030:	4ba0      	ldr	r3, [pc, #640]	; (80072b4 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2d8>)
 8007032:	66e3      	str	r3, [r4, #108]	; 0x6c
 8007034:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8007038:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 800703c:	a90a      	add	r1, sp, #40	; 0x28
 800703e:	f104 0798 	add.w	r7, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8007042:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8007046:	4650      	mov	r0, sl
 8007048:	f00b f831 	bl	80120ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800704c:	4638      	mov	r0, r7
 800704e:	f009 fef7 	bl	8010e40 <_ZN8touchgfx4LineC1Ev>
 8007052:	f504 7384 	add.w	r3, r4, #264	; 0x108
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8007056:	4618      	mov	r0, r3
 8007058:	9303      	str	r3, [sp, #12]
 800705a:	f7fa f931 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800705e:	4b96      	ldr	r3, [pc, #600]	; (80072b8 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2dc>)
 8007060:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 8007064:	f504 798e 	add.w	r9, r4, #284	; 0x11c
 8007068:	3324      	adds	r3, #36	; 0x24
 800706a:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 800706e:	f8c4 5114 	str.w	r5, [r4, #276]	; 0x114
 8007072:	4648      	mov	r0, r9
 8007074:	f504 78b2 	add.w	r8, r4, #356	; 0x164
 8007078:	f7fb fa4c 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 800707c:	4640      	mov	r0, r8
 800707e:	f7fb fa49 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 8007082:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 8007086:	4618      	mov	r0, r3
 8007088:	ee08 3a10 	vmov	s16, r3
 800708c:	f7fb fa42 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 8007090:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 8007094:	4618      	mov	r0, r3
 8007096:	ee08 3a90 	vmov	s17, r3
 800709a:	f00b f949 	bl	8012330 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800709e:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 80070a2:	4618      	mov	r0, r3
 80070a4:	ee09 3a10 	vmov	s18, r3
 80070a8:	f000 fe84 	bl	8007db4 <_ZN17Gauge_with_ValuesC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80070ac:	4a83      	ldr	r2, [pc, #524]	; (80072bc <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2e0>)
 80070ae:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80070b2:	e9c3 24f5 	strd	r2, r4, [r3, #980]	; 0x3d4
 80070b6:	4a82      	ldr	r2, [pc, #520]	; (80072c0 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2e4>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80070b8:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80070bc:	e9c3 25f7 	strd	r2, r5, [r3, #988]	; 0x3dc
 80070c0:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 80070c4:	f00b fff0 	bl	80130a8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80070c8:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80070cc:	462a      	mov	r2, r5
 80070ce:	9300      	str	r3, [sp, #0]
 80070d0:	4629      	mov	r1, r5
 80070d2:	23f0      	movs	r3, #240	; 0xf0
 80070d4:	4658      	mov	r0, fp
 80070d6:	f7fb f9f7 	bl	80024c8 <_ZN8touchgfx8Drawable11setPositionEssss>
 80070da:	1d26      	adds	r6, r4, #4
        color = newColor;
 80070dc:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80070e0:	66a3      	str	r3, [r4, #104]	; 0x68
 80070e2:	4659      	mov	r1, fp
 80070e4:	4630      	mov	r0, r6
 80070e6:	f008 fa53 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80070ea:	462a      	mov	r2, r5
 80070ec:	4629      	mov	r1, r5
 80070ee:	4650      	mov	r0, sl
 80070f0:	f7fb f9dd 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 80070f4:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80070f6:	a90a      	add	r1, sp, #40	; 0x28
 80070f8:	4650      	mov	r0, sl
 80070fa:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80070fe:	f00a ffd6 	bl	80120ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007102:	4651      	mov	r1, sl
 8007104:	4630      	mov	r0, r6
 8007106:	f008 fa43 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 800710a:	230a      	movs	r3, #10
 800710c:	9300      	str	r3, [sp, #0]
 800710e:	2232      	movs	r2, #50	; 0x32
 8007110:	23f0      	movs	r3, #240	; 0xf0
 8007112:	4629      	mov	r1, r5
 8007114:	4638      	mov	r0, r7
 8007116:	f7fb f9d7 	bl	80024c8 <_ZN8touchgfx8Drawable11setPositionEssss>
 800711a:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800711e:	22a0      	movs	r2, #160	; 0xa0
 8007120:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007124:	f8a4 3118 	strh.w	r3, [r4, #280]	; 0x118
 8007128:	9b03      	ldr	r3, [sp, #12]
 800712a:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 800712e:	4611      	mov	r1, r2
 8007130:	4638      	mov	r0, r7
 8007132:	f009 ff9b 	bl	801106c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007136:	22a0      	movs	r2, #160	; 0xa0
 8007138:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800713c:	4638      	mov	r0, r7
 800713e:	f009 ffa0 	bl	8011082 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007142:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
 8007146:	2b20      	cmp	r3, #32
 8007148:	d005      	beq.n	8007156 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x17a>
        lineWidthQ5 = widthQ5;
 800714a:	2320      	movs	r3, #32
 800714c:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
        updateCachedShape();
 8007150:	4638      	mov	r0, r7
 8007152:	f009 fe95 	bl	8010e80 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007156:	4638      	mov	r0, r7
 8007158:	2101      	movs	r1, #1
 800715a:	f009 ff9d 	bl	8011098 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800715e:	4639      	mov	r1, r7
 8007160:	4630      	mov	r0, r6
 8007162:	ad04      	add	r5, sp, #16
 8007164:	f008 fa14 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8007168:	f04f 37ff 	mov.w	r7, #4294967295
        linespace = space;
 800716c:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 8007170:	2223      	movs	r2, #35	; 0x23
 8007172:	4648      	mov	r0, r9
 8007174:	2145      	movs	r1, #69	; 0x45
 8007176:	f7fb f99a 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800717a:	4649      	mov	r1, r9
 800717c:	4628      	mov	r0, r5
        color = newColor;
 800717e:	f8c4 714c 	str.w	r7, [r4, #332]	; 0x14c
        linespace = space;
 8007182:	f8a4 a150 	strh.w	sl, [r4, #336]	; 0x150
        boundingArea = calculateBoundingArea();
 8007186:	f00a f91d 	bl	80113c4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800718a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800718e:	f109 033c 	add.w	r3, r9, #60	; 0x3c
 8007192:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8007196:	f8df b12c 	ldr.w	fp, [pc, #300]	; 80072c4 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2e8>
 800719a:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 800719e:	232e      	movs	r3, #46	; 0x2e
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DCTT));
 80071a0:	a90a      	add	r1, sp, #40	; 0x28
 80071a2:	4648      	mov	r0, r9
 80071a4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80071a8:	f00a fba6 	bl	80118f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80071ac:	4649      	mov	r1, r9
 80071ae:	4630      	mov	r0, r6
 80071b0:	f008 f9ee 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(31, 60);
 80071b4:	223c      	movs	r2, #60	; 0x3c
 80071b6:	4640      	mov	r0, r8
 80071b8:	211f      	movs	r1, #31
 80071ba:	f7fb f978 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 80071be:	4641      	mov	r1, r8
 80071c0:	4628      	mov	r0, r5
        color = newColor;
 80071c2:	f8c4 7194 	str.w	r7, [r4, #404]	; 0x194
        linespace = space;
 80071c6:	f8a4 a198 	strh.w	sl, [r4, #408]	; 0x198
        boundingArea = calculateBoundingArea();
 80071ca:	f00a f8fb 	bl	80113c4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80071ce:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80071d2:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 80071d6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80071da:	231d      	movs	r3, #29
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0LJ7));
 80071dc:	a90a      	add	r1, sp, #40	; 0x28
 80071de:	4640      	mov	r0, r8
 80071e0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80071e4:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 80071e8:	f00a fb86 	bl	80118f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80071ec:	4641      	mov	r1, r8
 80071ee:	4630      	mov	r0, r6
 80071f0:	f008 f9ce 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80071f4:	ee18 0a10 	vmov	r0, s16
 80071f8:	220c      	movs	r2, #12
 80071fa:	2136      	movs	r1, #54	; 0x36
 80071fc:	f7fb f957 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8007200:	ee18 1a10 	vmov	r1, s16
 8007204:	4628      	mov	r0, r5
        color = newColor;
 8007206:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 800720a:	f8a4 a1e0 	strh.w	sl, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 800720e:	f00a f8d9 	bl	80113c4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007212:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007216:	ee18 3a10 	vmov	r3, s16
 800721a:	333c      	adds	r3, #60	; 0x3c
 800721c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007220:	232d      	movs	r3, #45	; 0x2d
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SPOY));
 8007222:	ee18 0a10 	vmov	r0, s16
 8007226:	a90a      	add	r1, sp, #40	; 0x28
 8007228:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800722c:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8007230:	f00a fb62 	bl	80118f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007234:	ee18 1a10 	vmov	r1, s16
 8007238:	4630      	mov	r0, r6
 800723a:	f008 f9a9 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 800723e:	ee18 0a90 	vmov	r0, s17
 8007242:	f240 1201 	movw	r2, #257	; 0x101
 8007246:	2121      	movs	r1, #33	; 0x21
 8007248:	f7fb f931 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 800724c:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800724e:	aa0a      	add	r2, sp, #40	; 0x28
 8007250:	a909      	add	r1, sp, #36	; 0x24
 8007252:	ee18 0a90 	vmov	r0, s17
 8007256:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800725a:	2302      	movs	r3, #2
 800725c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007260:	f00a fd2f 	bl	8011cc2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8007264:	232c      	movs	r3, #44	; 0x2c
        updateTextPosition();
 8007266:	ee18 0a90 	vmov	r0, s17
 800726a:	f8a4 322c 	strh.w	r3, [r4, #556]	; 0x22c
 800726e:	f7fb f973 	bl	8002558 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8007272:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 8007276:	3314      	adds	r3, #20
 8007278:	f8c4 321c 	str.w	r3, [r4, #540]	; 0x21c
 800727c:	ee18 1a90 	vmov	r1, s17
 8007280:	4630      	mov	r0, r6
        colorPressed = col;
 8007282:	e9c4 778c 	strd	r7, r7, [r4, #560]	; 0x230
 8007286:	f008 f983 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge_with_Values1.setXY(0, 78);
 800728a:	ee19 0a10 	vmov	r0, s18
 800728e:	224e      	movs	r2, #78	; 0x4e
 8007290:	4651      	mov	r1, sl
 8007292:	f7fb f90c 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8007296:	4630      	mov	r0, r6
 8007298:	ee19 1a10 	vmov	r1, s18
 800729c:	f008 f978 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80072a0:	4620      	mov	r0, r4
 80072a2:	b00d      	add	sp, #52	; 0x34
 80072a4:	ecbd 8b04 	vpop	{d8-d9}
 80072a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80072ac:	0802b938 	.word	0x0802b938
 80072b0:	0802c6d0 	.word	0x0802c6d0
 80072b4:	0802c898 	.word	0x0802c898
 80072b8:	0802c404 	.word	0x0802c404
 80072bc:	0802b920 	.word	0x0802b920
 80072c0:	08006f83 	.word	0x08006f83
 80072c4:	08029d88 	.word	0x08029d88

080072c8 <_ZN20Project_InfoViewBase11setupScreenEv>:
}

void Project_InfoViewBase::setupScreen()
{

}
 80072c8:	4770      	bx	lr

080072ca <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80072ca:	4770      	bx	lr

080072cc <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80072cc:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80072ce:	68c2      	ldr	r2, [r0, #12]
 80072d0:	6844      	ldr	r4, [r0, #4]
 80072d2:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80072d4:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80072d6:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80072da:	07d2      	lsls	r2, r2, #31
 80072dc:	bf48      	it	mi
 80072de:	5962      	ldrmi	r2, [r4, r5]
 80072e0:	689b      	ldr	r3, [r3, #8]
    }
 80072e2:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80072e4:	bf48      	it	mi
 80072e6:	58d3      	ldrmi	r3, [r2, r3]
 80072e8:	4718      	bx	r3

080072ea <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80072ea:	6843      	ldr	r3, [r0, #4]
 80072ec:	b12b      	cbz	r3, 80072fa <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80072ee:	6883      	ldr	r3, [r0, #8]
 80072f0:	b92b      	cbnz	r3, 80072fe <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80072f2:	68c0      	ldr	r0, [r0, #12]
 80072f4:	f000 0001 	and.w	r0, r0, #1
 80072f8:	4770      	bx	lr
 80072fa:	4618      	mov	r0, r3
 80072fc:	4770      	bx	lr
 80072fe:	2001      	movs	r0, #1
    }
 8007300:	4770      	bx	lr

08007302 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007302:	b510      	push	{r4, lr}
 8007304:	2110      	movs	r1, #16
 8007306:	4604      	mov	r4, r0
 8007308:	f020 f939 	bl	802757e <_ZdlPvj>
 800730c:	4620      	mov	r0, r4
 800730e:	bd10      	pop	{r4, pc}

08007310 <_ZN20Project_InfoViewBaseD1Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 8007310:	b510      	push	{r4, lr}
 8007312:	4b03      	ldr	r3, [pc, #12]	; (8007320 <_ZN20Project_InfoViewBaseD1Ev+0x10>)
 8007314:	6003      	str	r3, [r0, #0]
 8007316:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007318:	f00b fed0 	bl	80130bc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800731c:	4620      	mov	r0, r4
 800731e:	bd10      	pop	{r4, pc}
 8007320:	0802b984 	.word	0x0802b984

08007324 <_ZN20Project_InfoViewBaseD0Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 8007324:	b507      	push	{r0, r1, r2, lr}
 8007326:	4b07      	ldr	r3, [pc, #28]	; (8007344 <_ZN20Project_InfoViewBaseD0Ev+0x20>)
 8007328:	6003      	str	r3, [r0, #0]
 800732a:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800732c:	f00b fec6 	bl	80130bc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007330:	9801      	ldr	r0, [sp, #4]
 8007332:	f241 01b0 	movw	r1, #4272	; 0x10b0
 8007336:	f020 f922 	bl	802757e <_ZdlPvj>
 800733a:	9801      	ldr	r0, [sp, #4]
 800733c:	b003      	add	sp, #12
 800733e:	f85d fb04 	ldr.w	pc, [sp], #4
 8007342:	bf00      	nop
 8007344:	0802b984 	.word	0x0802b984

08007348 <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Project_InfoViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8007348:	f500 70b4 	add.w	r0, r0, #360	; 0x168
 800734c:	4288      	cmp	r0, r1
{
 800734e:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8007350:	d105      	bne.n	800735e <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Project_InfoViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8007352:	f00d fbb5 	bl	8014ac0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
    }
}
 8007356:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMain_MenuScreenWipeTransitionWest();
 800735a:	f7fc b9af 	b.w	80036bc <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
}
 800735e:	bd08      	pop	{r3, pc}

08007360 <_ZN20Project_InfoViewBaseC1Ev>:
Project_InfoViewBase::Project_InfoViewBase() :
 8007360:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007364:	ed2d 8b04 	vpush	{d8-d9}
 8007368:	4604      	mov	r4, r0
 800736a:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Project_InfoViewBase::buttonCallbackHandler)
 800736c:	46a3      	mov	fp, r4
 800736e:	2500      	movs	r5, #0
 8007370:	f00f f826 	bl	80163c0 <_ZN8touchgfx6ScreenC1Ev>
 8007374:	4bd2      	ldr	r3, [pc, #840]	; (80076c0 <_ZN20Project_InfoViewBaseC1Ev+0x360>)
 8007376:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007378:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 800737c:	2226      	movs	r2, #38	; 0x26
 800737e:	4629      	mov	r1, r5
 8007380:	4658      	mov	r0, fp
 8007382:	f021 f8f2 	bl	802856a <memset>
 8007386:	4658      	mov	r0, fp
 8007388:	f7fb f8b2 	bl	80024f0 <_ZN8touchgfx6WidgetC1Ev>
 800738c:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8007390:	26ff      	movs	r6, #255	; 0xff
 8007392:	4bcc      	ldr	r3, [pc, #816]	; (80076c4 <_ZN20Project_InfoViewBaseC1Ev+0x364>)
 8007394:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8007396:	2226      	movs	r2, #38	; 0x26
 8007398:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800739c:	4629      	mov	r1, r5
 800739e:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80073a2:	4650      	mov	r0, sl
 80073a4:	66a5      	str	r5, [r4, #104]	; 0x68
 80073a6:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80073aa:	f021 f8de 	bl	802856a <memset>
 80073ae:	4650      	mov	r0, sl
 80073b0:	f7fb f89e 	bl	80024f0 <_ZN8touchgfx6WidgetC1Ev>
 80073b4:	4bc4      	ldr	r3, [pc, #784]	; (80076c8 <_ZN20Project_InfoViewBaseC1Ev+0x368>)
 80073b6:	66e3      	str	r3, [r4, #108]	; 0x6c
 80073b8:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80073bc:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80073c0:	a90a      	add	r1, sp, #40	; 0x28
 80073c2:	4650      	mov	r0, sl
 80073c4:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 80073c8:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80073cc:	f00a fe6f 	bl	80120ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 80073d0:	4648      	mov	r0, r9
 80073d2:	f7fb f89f 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 80073d6:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 80073da:	4bbc      	ldr	r3, [pc, #752]	; (80076cc <_ZN20Project_InfoViewBaseC1Ev+0x36c>)
 80073dc:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 80073e0:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 80073e4:	4638      	mov	r0, r7
 80073e6:	f009 fd2b 	bl	8010e40 <_ZN8touchgfx4LineC1Ev>
 80073ea:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80073ee:	4618      	mov	r0, r3
 80073f0:	9303      	str	r3, [sp, #12]
 80073f2:	f7f9 ff65 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80073f6:	4bb6      	ldr	r3, [pc, #728]	; (80076d0 <_ZN20Project_InfoViewBaseC1Ev+0x370>)
 80073f8:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 80073fc:	3324      	adds	r3, #36	; 0x24
 80073fe:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 8007402:	f504 73b4 	add.w	r3, r4, #360	; 0x168
 8007406:	4618      	mov	r0, r3
 8007408:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 800740c:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 8007410:	ee09 3a10 	vmov	s18, r3
 8007414:	f00a ff8c 	bl	8012330 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8007418:	4640      	mov	r0, r8
 800741a:	f7fb f87b 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 800741e:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8007422:	4618      	mov	r0, r3
 8007424:	ee08 3a10 	vmov	s16, r3
 8007428:	f7fb f874 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 800742c:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8007430:	4618      	mov	r0, r3
 8007432:	ee08 3a90 	vmov	s17, r3
 8007436:	f7fb f86d 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800743a:	4aa6      	ldr	r2, [pc, #664]	; (80076d4 <_ZN20Project_InfoViewBaseC1Ev+0x374>)
 800743c:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8007440:	e9c3 2428 	strd	r2, r4, [r3, #160]	; 0xa0
 8007444:	4aa4      	ldr	r2, [pc, #656]	; (80076d8 <_ZN20Project_InfoViewBaseC1Ev+0x378>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8007446:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800744a:	e9c3 252a 	strd	r2, r5, [r3, #168]	; 0xa8
 800744e:	f504 7024 	add.w	r0, r4, #656	; 0x290
 8007452:	f00b fe29 	bl	80130a8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8007456:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800745a:	462a      	mov	r2, r5
 800745c:	4658      	mov	r0, fp
 800745e:	9300      	str	r3, [sp, #0]
 8007460:	4629      	mov	r1, r5
 8007462:	23f0      	movs	r3, #240	; 0xf0
 8007464:	f7fb f830 	bl	80024c8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007468:	1d26      	adds	r6, r4, #4
        color = newColor;
 800746a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800746e:	66a3      	str	r3, [r4, #104]	; 0x68
 8007470:	4659      	mov	r1, fp
 8007472:	4630      	mov	r0, r6
 8007474:	f008 f88c 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8007478:	462a      	mov	r2, r5
 800747a:	4650      	mov	r0, sl
 800747c:	4629      	mov	r1, r5
 800747e:	f7fb f816 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8007482:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8007484:	4650      	mov	r0, sl
 8007486:	a90a      	add	r1, sp, #40	; 0x28
 8007488:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800748c:	f00a fe0f 	bl	80120ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007490:	4651      	mov	r1, sl
 8007492:	4630      	mov	r0, r6
 8007494:	f008 f87c 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8007498:	f44f 729a 	mov.w	r2, #308	; 0x134
 800749c:	2156      	movs	r1, #86	; 0x56
 800749e:	4648      	mov	r0, r9
 80074a0:	f7fb f805 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 80074a4:	f8d4 2098 	ldr.w	r2, [r4, #152]	; 0x98
        linespace = space;
 80074a8:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 80074ac:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 80074b0:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 80074b4:	4650      	mov	r0, sl
 80074b6:	f8d2 2084 	ldr.w	r2, [r2, #132]	; 0x84
        color = newColor;
 80074ba:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 80074be:	4649      	mov	r1, r9
 80074c0:	4790      	blx	r2
 80074c2:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 80074c6:	f104 0cd4 	add.w	ip, r4, #212	; 0xd4
 80074ca:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80074ce:	4a83      	ldr	r2, [pc, #524]	; (80076dc <_ZN20Project_InfoViewBaseC1Ev+0x37c>)
 80074d0:	6812      	ldr	r2, [r2, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_5C9S).getText());
 80074d2:	f504 7a22 	add.w	sl, r4, #648	; 0x288
 80074d6:	2309      	movs	r3, #9
 80074d8:	b92a      	cbnz	r2, 80074e6 <_ZN20Project_InfoViewBaseC1Ev+0x186>
 80074da:	4b81      	ldr	r3, [pc, #516]	; (80076e0 <_ZN20Project_InfoViewBaseC1Ev+0x380>)
 80074dc:	4a81      	ldr	r2, [pc, #516]	; (80076e4 <_ZN20Project_InfoViewBaseC1Ev+0x384>)
 80074de:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80074e0:	4881      	ldr	r0, [pc, #516]	; (80076e8 <_ZN20Project_InfoViewBaseC1Ev+0x388>)
 80074e2:	f020 fe3d 	bl	8028160 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80074e6:	4a81      	ldr	r2, [pc, #516]	; (80076ec <_ZN20Project_InfoViewBaseC1Ev+0x38c>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80074e8:	8812      	ldrh	r2, [r2, #0]
 80074ea:	2a09      	cmp	r2, #9
 80074ec:	d803      	bhi.n	80074f6 <_ZN20Project_InfoViewBaseC1Ev+0x196>
 80074ee:	4b80      	ldr	r3, [pc, #512]	; (80076f0 <_ZN20Project_InfoViewBaseC1Ev+0x390>)
 80074f0:	4a7c      	ldr	r2, [pc, #496]	; (80076e4 <_ZN20Project_InfoViewBaseC1Ev+0x384>)
 80074f2:	2161      	movs	r1, #97	; 0x61
 80074f4:	e7f4      	b.n	80074e0 <_ZN20Project_InfoViewBaseC1Ev+0x180>
        return texts->getText(typedTextId);
 80074f6:	4619      	mov	r1, r3
 80074f8:	4b7e      	ldr	r3, [pc, #504]	; (80076f4 <_ZN20Project_InfoViewBaseC1Ev+0x394>)
 80074fa:	6818      	ldr	r0, [r3, #0]
 80074fc:	f000 fb1c 	bl	8007b38 <_ZNK8touchgfx5Texts7getTextEt>
 8007500:	4a7d      	ldr	r2, [pc, #500]	; (80076f8 <_ZN20Project_InfoViewBaseC1Ev+0x398>)
 8007502:	4603      	mov	r3, r0
 8007504:	2104      	movs	r1, #4
 8007506:	4650      	mov	r0, sl
 8007508:	f010 fc3e 	bl	8017d88 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 800750c:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea3_1.resizeToCurrentText();
 8007510:	4648      	mov	r0, r9
 8007512:	f00a f9d1 	bl	80118b8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8007516:	f04f 0a0a 	mov.w	sl, #10
 800751a:	4b78      	ldr	r3, [pc, #480]	; (80076fc <_ZN20Project_InfoViewBaseC1Ev+0x39c>)
 800751c:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KYIO));
 800751e:	a90a      	add	r1, sp, #40	; 0x28
 8007520:	4648      	mov	r0, r9
 8007522:	f8ad a02c 	strh.w	sl, [sp, #44]	; 0x2c
 8007526:	f00a f9e7 	bl	80118f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800752a:	4649      	mov	r1, r9
 800752c:	4630      	mov	r0, r6
 800752e:	f008 f82f 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007532:	23f0      	movs	r3, #240	; 0xf0
 8007534:	2232      	movs	r2, #50	; 0x32
 8007536:	4629      	mov	r1, r5
 8007538:	4638      	mov	r0, r7
 800753a:	f8cd a000 	str.w	sl, [sp]
 800753e:	f7fa ffc3 	bl	80024c8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007542:	9b03      	ldr	r3, [sp, #12]
 8007544:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007548:	22a0      	movs	r2, #160	; 0xa0
 800754a:	4611      	mov	r1, r2
 800754c:	4638      	mov	r0, r7
 800754e:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007552:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8007556:	f009 fd89 	bl	801106c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800755a:	22a0      	movs	r2, #160	; 0xa0
 800755c:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007560:	4638      	mov	r0, r7
 8007562:	f009 fd8e 	bl	8011082 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007566:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 800756a:	2b20      	cmp	r3, #32
 800756c:	d005      	beq.n	800757a <_ZN20Project_InfoViewBaseC1Ev+0x21a>
        lineWidthQ5 = widthQ5;
 800756e:	2320      	movs	r3, #32
 8007570:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8007574:	4638      	mov	r0, r7
 8007576:	f009 fc83 	bl	8010e80 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800757a:	4638      	mov	r0, r7
 800757c:	2101      	movs	r1, #1
 800757e:	f009 fd8b 	bl	8011098 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007582:	4639      	mov	r1, r7
 8007584:	4630      	mov	r0, r6
 8007586:	f008 f803 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 800758a:	ee19 0a10 	vmov	r0, s18
 800758e:	22f0      	movs	r2, #240	; 0xf0
 8007590:	2121      	movs	r1, #33	; 0x21
 8007592:	f7fa ff8c 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8007596:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007598:	aa0a      	add	r2, sp, #40	; 0x28
 800759a:	a909      	add	r1, sp, #36	; 0x24
 800759c:	ee19 0a10 	vmov	r0, s18
 80075a0:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80075a4:	2302      	movs	r3, #2
 80075a6:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80075aa:	f00a fb8a 	bl	8011cc2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80075ae:	2339      	movs	r3, #57	; 0x39
        updateTextPosition();
 80075b0:	ee19 0a10 	vmov	r0, s18
 80075b4:	f8a4 31a0 	strh.w	r3, [r4, #416]	; 0x1a0
 80075b8:	f7fa ffce 	bl	8002558 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 80075bc:	f04f 37ff 	mov.w	r7, #4294967295
    buttonWithLabel3.setAction(buttonCallback);
 80075c0:	f504 5385 	add.w	r3, r4, #4256	; 0x10a0
 80075c4:	f8c4 3190 	str.w	r3, [r4, #400]	; 0x190
 80075c8:	ee19 1a10 	vmov	r1, s18
 80075cc:	4630      	mov	r0, r6
        colorPressed = col;
 80075ce:	e9c4 7769 	strd	r7, r7, [r4, #420]	; 0x1a4
 80075d2:	ad04      	add	r5, sp, #16
 80075d4:	f007 ffdc 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 80075d8:	f04f 0a00 	mov.w	sl, #0
    textArea3.setXY(5, 91);
 80075dc:	225b      	movs	r2, #91	; 0x5b
 80075de:	4640      	mov	r0, r8
 80075e0:	2105      	movs	r1, #5
 80075e2:	f7fa ff64 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80075e6:	4641      	mov	r1, r8
 80075e8:	4628      	mov	r0, r5
        color = newColor;
 80075ea:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 80075ee:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 80075f2:	f009 fee7 	bl	80113c4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80075f6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80075fa:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 80075fe:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8007602:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 80076fc <_ZN20Project_InfoViewBaseC1Ev+0x39c>
 8007606:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800760a:	233a      	movs	r3, #58	; 0x3a
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9J9T));
 800760c:	a90a      	add	r1, sp, #40	; 0x28
 800760e:	4640      	mov	r0, r8
 8007610:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007614:	f00a f970 	bl	80118f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007618:	4641      	mov	r1, r8
 800761a:	4630      	mov	r0, r6
 800761c:	f007 ffb8 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 35);
 8007620:	ee18 0a10 	vmov	r0, s16
 8007624:	2223      	movs	r2, #35	; 0x23
 8007626:	2145      	movs	r1, #69	; 0x45
 8007628:	f7fa ff41 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 800762c:	ee18 1a10 	vmov	r1, s16
 8007630:	4628      	mov	r0, r5
        color = newColor;
 8007632:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8007636:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 800763a:	f009 fec3 	bl	80113c4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800763e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007642:	ee18 3a10 	vmov	r3, s16
 8007646:	333c      	adds	r3, #60	; 0x3c
 8007648:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800764c:	233c      	movs	r3, #60	; 0x3c
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8N0V));
 800764e:	ee18 0a10 	vmov	r0, s16
 8007652:	a90a      	add	r1, sp, #40	; 0x28
 8007654:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007658:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800765c:	f00a f94c 	bl	80118f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007660:	ee18 1a10 	vmov	r1, s16
 8007664:	4630      	mov	r0, r6
 8007666:	f007 ff93 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 800766a:	ee18 0a90 	vmov	r0, s17
 800766e:	220c      	movs	r2, #12
 8007670:	2136      	movs	r1, #54	; 0x36
 8007672:	f7fa ff1c 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8007676:	ee18 1a90 	vmov	r1, s17
 800767a:	4628      	mov	r0, r5
        color = newColor;
 800767c:	f8c4 7270 	str.w	r7, [r4, #624]	; 0x270
        linespace = space;
 8007680:	f8a4 a274 	strh.w	sl, [r4, #628]	; 0x274
        boundingArea = calculateBoundingArea();
 8007684:	f009 fe9e 	bl	80113c4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007688:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800768c:	ee18 3a90 	vmov	r3, s17
 8007690:	333c      	adds	r3, #60	; 0x3c
 8007692:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007696:	233b      	movs	r3, #59	; 0x3b
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SSFQ));
 8007698:	ee18 0a90 	vmov	r0, s17
 800769c:	a90a      	add	r1, sp, #40	; 0x28
 800769e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80076a2:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80076a6:	f00a f927 	bl	80118f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80076aa:	4630      	mov	r0, r6
 80076ac:	ee18 1a90 	vmov	r1, s17
 80076b0:	f007 ff6e 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80076b4:	4620      	mov	r0, r4
 80076b6:	b00d      	add	sp, #52	; 0x34
 80076b8:	ecbd 8b04 	vpop	{d8-d9}
 80076bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80076c0:	0802b984 	.word	0x0802b984
 80076c4:	0802c6d0 	.word	0x0802c6d0
 80076c8:	0802c898 	.word	0x0802c898
 80076cc:	08029d98 	.word	0x08029d98
 80076d0:	0802c404 	.word	0x0802c404
 80076d4:	0802b96c 	.word	0x0802b96c
 80076d8:	08007349 	.word	0x08007349
 80076dc:	20013814 	.word	0x20013814
 80076e0:	08029bd8 	.word	0x08029bd8
 80076e4:	08029cda 	.word	0x08029cda
 80076e8:	08029c55 	.word	0x08029c55
 80076ec:	20013818 	.word	0x20013818
 80076f0:	08029c9c 	.word	0x08029c9c
 80076f4:	20013820 	.word	0x20013820
 80076f8:	08029d12 	.word	0x08029d12
 80076fc:	08029d88 	.word	0x08029d88

08007700 <_ZN20Shutting_OffViewBaseD1Ev>:
}

Shutting_OffViewBase::~Shutting_OffViewBase()
{

}
 8007700:	4770      	bx	lr

08007702 <_ZN20Shutting_OffViewBase11setupScreenEv>:

void Shutting_OffViewBase::setupScreen()
{

}
 8007702:	4770      	bx	lr

08007704 <_ZN20Shutting_OffViewBaseD0Ev>:
Shutting_OffViewBase::~Shutting_OffViewBase()
 8007704:	b510      	push	{r4, lr}
}
 8007706:	2198      	movs	r1, #152	; 0x98
Shutting_OffViewBase::~Shutting_OffViewBase()
 8007708:	4604      	mov	r4, r0
}
 800770a:	f01f ff38 	bl	802757e <_ZdlPvj>
 800770e:	4620      	mov	r0, r4
 8007710:	bd10      	pop	{r4, pc}
	...

08007714 <_ZN20Shutting_OffViewBaseC1Ev>:
Shutting_OffViewBase::Shutting_OffViewBase()
 8007714:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8007718:	4604      	mov	r4, r0
 800771a:	4626      	mov	r6, r4
 800771c:	f00e fe50 	bl	80163c0 <_ZN8touchgfx6ScreenC1Ev>
 8007720:	2500      	movs	r5, #0
 8007722:	4b2e      	ldr	r3, [pc, #184]	; (80077dc <_ZN20Shutting_OffViewBaseC1Ev+0xc8>)
 8007724:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007726:	f846 3b40 	str.w	r3, [r6], #64
        : Widget(), alpha(255), color(0)
 800772a:	4b2d      	ldr	r3, [pc, #180]	; (80077e0 <_ZN20Shutting_OffViewBaseC1Ev+0xcc>)
          cachedAbsX(0),
 800772c:	6625      	str	r5, [r4, #96]	; 0x60
        : x(0), y(0), width(0), height(0)
 800772e:	e9c4 3510 	strd	r3, r5, [r4, #64]	; 0x40
          touchable(false),
 8007732:	f44f 7280 	mov.w	r2, #256	; 0x100
 8007736:	23ff      	movs	r3, #255	; 0xff
 8007738:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 800773c:	f8a4 2064 	strh.w	r2, [r4, #100]	; 0x64
 8007740:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
 8007744:	f8a4 2090 	strh.w	r2, [r4, #144]	; 0x90
 8007748:	f64f 73ff 	movw	r3, #65535	; 0xffff
        : Widget(), bitmap(bmp), alpha(255)
 800774c:	4a25      	ldr	r2, [pc, #148]	; (80077e4 <_ZN20Shutting_OffViewBaseC1Ev+0xd0>)
 800774e:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 8007752:	f884 3094 	strb.w	r3, [r4, #148]	; 0x94
 8007756:	66e2      	str	r2, [r4, #108]	; 0x6c
        Image::setBitmap(bmp);
 8007758:	a901      	add	r1, sp, #4
 800775a:	4638      	mov	r0, r7
 800775c:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
          parent(0),
 8007760:	e9c4 5514 	strd	r5, r5, [r4, #80]	; 0x50
          nextDrawChainElement(0),
 8007764:	e9c4 5516 	strd	r5, r5, [r4, #88]	; 0x58
 8007768:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
 800776c:	e9c4 551e 	strd	r5, r5, [r4, #120]	; 0x78
          nextSibling(0),
 8007770:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
          cachedAbsX(0),
 8007774:	e9c4 5522 	strd	r5, r5, [r4, #136]	; 0x88
        : color(col)
 8007778:	66a5      	str	r5, [r4, #104]	; 0x68
 800777a:	f8ad 3004 	strh.w	r3, [sp, #4]
 800777e:	f00a fc96 	bl	80120ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        setXY(x, y);
 8007782:	462a      	mov	r2, r5
 8007784:	4629      	mov	r1, r5
 8007786:	4630      	mov	r0, r6
 8007788:	f7fa fe91 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 800778c:	4630      	mov	r0, r6
 800778e:	21f0      	movs	r1, #240	; 0xf0
 8007790:	f7f9 fcd6 	bl	8001140 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8007794:	4630      	mov	r0, r6
 8007796:	f44f 71a0 	mov.w	r1, #320	; 0x140
 800779a:	f7f9 fcd3 	bl	8001144 <_ZN8touchgfx8Drawable9setHeightEs>
 800779e:	f104 0804 	add.w	r8, r4, #4
        color = newColor;
 80077a2:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80077a6:	66a3      	str	r3, [r4, #104]	; 0x68
 80077a8:	4631      	mov	r1, r6
 80077aa:	4640      	mov	r0, r8
 80077ac:	f007 fef0 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(-3, 0);
 80077b0:	462a      	mov	r2, r5
 80077b2:	4638      	mov	r0, r7
 80077b4:	f06f 0102 	mvn.w	r1, #2
 80077b8:	f7fa fe79 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 80077bc:	230b      	movs	r3, #11
    image1.setBitmap(touchgfx::Bitmap(BITMAP_SHUTDOWN_ID));
 80077be:	a901      	add	r1, sp, #4
 80077c0:	4638      	mov	r0, r7
 80077c2:	f8ad 3004 	strh.w	r3, [sp, #4]
 80077c6:	f00a fc72 	bl	80120ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80077ca:	4640      	mov	r0, r8
 80077cc:	4639      	mov	r1, r7
 80077ce:	f007 fedf 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80077d2:	4620      	mov	r0, r4
 80077d4:	b002      	add	sp, #8
 80077d6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80077da:	bf00      	nop
 80077dc:	0802b9b8 	.word	0x0802b9b8
 80077e0:	0802c6d0 	.word	0x0802c6d0
 80077e4:	0802c898 	.word	0x0802c898

080077e8 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80077e8:	4770      	bx	lr
	...

080077ec <_Z23getFont_verdana_10_4bppv>:
{
 80077ec:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80077ee:	4d17      	ldr	r5, [pc, #92]	; (800784c <_Z23getFont_verdana_10_4bppv+0x60>)
 80077f0:	682c      	ldr	r4, [r5, #0]
 80077f2:	f3bf 8f5b 	dmb	ish
 80077f6:	f014 0401 	ands.w	r4, r4, #1
{
 80077fa:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80077fc:	d122      	bne.n	8007844 <_Z23getFont_verdana_10_4bppv+0x58>
 80077fe:	4628      	mov	r0, r5
 8007800:	f01f febf 	bl	8027582 <__cxa_guard_acquire>
 8007804:	b1f0      	cbz	r0, 8007844 <_Z23getFont_verdana_10_4bppv+0x58>
 8007806:	233f      	movs	r3, #63	; 0x3f
 8007808:	9309      	str	r3, [sp, #36]	; 0x24
 800780a:	4b11      	ldr	r3, [pc, #68]	; (8007850 <_Z23getFont_verdana_10_4bppv+0x64>)
 800780c:	9308      	str	r3, [sp, #32]
 800780e:	4b11      	ldr	r3, [pc, #68]	; (8007854 <_Z23getFont_verdana_10_4bppv+0x68>)
 8007810:	9307      	str	r3, [sp, #28]
 8007812:	2301      	movs	r3, #1
 8007814:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8007818:	9304      	str	r3, [sp, #16]
 800781a:	2304      	movs	r3, #4
 800781c:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8007820:	230a      	movs	r3, #10
 8007822:	490d      	ldr	r1, [pc, #52]	; (8007858 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8007824:	9300      	str	r3, [sp, #0]
 8007826:	225f      	movs	r2, #95	; 0x5f
 8007828:	230c      	movs	r3, #12
 800782a:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 800782e:	480b      	ldr	r0, [pc, #44]	; (800785c <_Z23getFont_verdana_10_4bppv+0x70>)
 8007830:	940a      	str	r4, [sp, #40]	; 0x28
 8007832:	9401      	str	r4, [sp, #4]
 8007834:	f7fd fbba 	bl	8004fac <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007838:	4809      	ldr	r0, [pc, #36]	; (8007860 <_Z23getFont_verdana_10_4bppv+0x74>)
 800783a:	f020 fcaf 	bl	802819c <atexit>
 800783e:	4628      	mov	r0, r5
 8007840:	f01f feab 	bl	802759a <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8007844:	4805      	ldr	r0, [pc, #20]	; (800785c <_Z23getFont_verdana_10_4bppv+0x70>)
 8007846:	b00f      	add	sp, #60	; 0x3c
 8007848:	bd30      	pop	{r4, r5, pc}
 800784a:	bf00      	nop
 800784c:	200028dc 	.word	0x200028dc
 8007850:	0802f63c 	.word	0x0802f63c
 8007854:	0802f71c 	.word	0x0802f71c
 8007858:	0802ec94 	.word	0x0802ec94
 800785c:	200028e0 	.word	0x200028e0
 8007860:	080077e9 	.word	0x080077e9

08007864 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_12_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_12_4bpp();

touchgfx::GeneratedFont& getFont_verdana_12_4bpp()
{
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 33, 15, 12, 0, 0, 4, 1, 0, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8007864:	4770      	bx	lr
	...

08007868 <_Z23getFont_verdana_12_4bppv>:
{
 8007868:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 33, 15, 12, 0, 0, 4, 1, 0, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 800786a:	4d17      	ldr	r5, [pc, #92]	; (80078c8 <_Z23getFont_verdana_12_4bppv+0x60>)
 800786c:	682c      	ldr	r4, [r5, #0]
 800786e:	f3bf 8f5b 	dmb	ish
 8007872:	f014 0401 	ands.w	r4, r4, #1
{
 8007876:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 33, 15, 12, 0, 0, 4, 1, 0, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8007878:	d122      	bne.n	80078c0 <_Z23getFont_verdana_12_4bppv+0x58>
 800787a:	4628      	mov	r0, r5
 800787c:	f01f fe81 	bl	8027582 <__cxa_guard_acquire>
 8007880:	b1f0      	cbz	r0, 80078c0 <_Z23getFont_verdana_12_4bppv+0x58>
 8007882:	233f      	movs	r3, #63	; 0x3f
 8007884:	9309      	str	r3, [sp, #36]	; 0x24
 8007886:	4b11      	ldr	r3, [pc, #68]	; (80078cc <_Z23getFont_verdana_12_4bppv+0x64>)
 8007888:	9308      	str	r3, [sp, #32]
 800788a:	4b11      	ldr	r3, [pc, #68]	; (80078d0 <_Z23getFont_verdana_12_4bppv+0x68>)
 800788c:	9307      	str	r3, [sp, #28]
 800788e:	2301      	movs	r3, #1
 8007890:	e9cd 4305 	strd	r4, r3, [sp, #20]
 8007894:	9304      	str	r3, [sp, #16]
 8007896:	2304      	movs	r3, #4
 8007898:	e9cd 4302 	strd	r4, r3, [sp, #8]
 800789c:	230c      	movs	r3, #12
 800789e:	490d      	ldr	r1, [pc, #52]	; (80078d4 <_Z23getFont_verdana_12_4bppv+0x6c>)
 80078a0:	9300      	str	r3, [sp, #0]
 80078a2:	2221      	movs	r2, #33	; 0x21
 80078a4:	230f      	movs	r3, #15
 80078a6:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 80078aa:	480b      	ldr	r0, [pc, #44]	; (80078d8 <_Z23getFont_verdana_12_4bppv+0x70>)
 80078ac:	940a      	str	r4, [sp, #40]	; 0x28
 80078ae:	9401      	str	r4, [sp, #4]
 80078b0:	f7fd fb7c 	bl	8004fac <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80078b4:	4809      	ldr	r0, [pc, #36]	; (80078dc <_Z23getFont_verdana_12_4bppv+0x74>)
 80078b6:	f020 fc71 	bl	802819c <atexit>
 80078ba:	4628      	mov	r0, r5
 80078bc:	f01f fe6d 	bl	802759a <__cxa_guard_release>
    return verdana_12_4bpp;
}
 80078c0:	4805      	ldr	r0, [pc, #20]	; (80078d8 <_Z23getFont_verdana_12_4bppv+0x70>)
 80078c2:	b00f      	add	sp, #60	; 0x3c
 80078c4:	bd30      	pop	{r4, r5, pc}
 80078c6:	bf00      	nop
 80078c8:	2000290c 	.word	0x2000290c
 80078cc:	0802f670 	.word	0x0802f670
 80078d0:	0802f720 	.word	0x0802f720
 80078d4:	0802f1c8 	.word	0x0802f1c8
 80078d8:	20002910 	.word	0x20002910
 80078dc:	08007865 	.word	0x08007865

080078e0 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_19_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_19_4bpp();

touchgfx::GeneratedFont& getFont_verdana_19_4bpp()
{
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 47, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 80078e0:	4770      	bx	lr
	...

080078e4 <_Z23getFont_verdana_19_4bppv>:
{
 80078e4:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 47, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 80078e6:	4d17      	ldr	r5, [pc, #92]	; (8007944 <_Z23getFont_verdana_19_4bppv+0x60>)
 80078e8:	682c      	ldr	r4, [r5, #0]
 80078ea:	f3bf 8f5b 	dmb	ish
 80078ee:	f014 0401 	ands.w	r4, r4, #1
{
 80078f2:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 47, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 80078f4:	d122      	bne.n	800793c <_Z23getFont_verdana_19_4bppv+0x58>
 80078f6:	4628      	mov	r0, r5
 80078f8:	f01f fe43 	bl	8027582 <__cxa_guard_acquire>
 80078fc:	b1f0      	cbz	r0, 800793c <_Z23getFont_verdana_19_4bppv+0x58>
 80078fe:	233f      	movs	r3, #63	; 0x3f
 8007900:	9309      	str	r3, [sp, #36]	; 0x24
 8007902:	4b11      	ldr	r3, [pc, #68]	; (8007948 <_Z23getFont_verdana_19_4bppv+0x64>)
 8007904:	9308      	str	r3, [sp, #32]
 8007906:	4b11      	ldr	r3, [pc, #68]	; (800794c <_Z23getFont_verdana_19_4bppv+0x68>)
 8007908:	9307      	str	r3, [sp, #28]
 800790a:	2301      	movs	r3, #1
 800790c:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8007910:	9304      	str	r3, [sp, #16]
 8007912:	2304      	movs	r3, #4
 8007914:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8007918:	2313      	movs	r3, #19
 800791a:	490d      	ldr	r1, [pc, #52]	; (8007950 <_Z23getFont_verdana_19_4bppv+0x6c>)
 800791c:	9300      	str	r3, [sp, #0]
 800791e:	222f      	movs	r2, #47	; 0x2f
 8007920:	2317      	movs	r3, #23
 8007922:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8007926:	480b      	ldr	r0, [pc, #44]	; (8007954 <_Z23getFont_verdana_19_4bppv+0x70>)
 8007928:	940a      	str	r4, [sp, #40]	; 0x28
 800792a:	9401      	str	r4, [sp, #4]
 800792c:	f7fd fb3e 	bl	8004fac <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007930:	4809      	ldr	r0, [pc, #36]	; (8007958 <_Z23getFont_verdana_19_4bppv+0x74>)
 8007932:	f020 fc33 	bl	802819c <atexit>
 8007936:	4628      	mov	r0, r5
 8007938:	f01f fe2f 	bl	802759a <__cxa_guard_release>
    return verdana_19_4bpp;
}
 800793c:	4805      	ldr	r0, [pc, #20]	; (8007954 <_Z23getFont_verdana_19_4bppv+0x70>)
 800793e:	b00f      	add	sp, #60	; 0x3c
 8007940:	bd30      	pop	{r4, r5, pc}
 8007942:	bf00      	nop
 8007944:	2000293c 	.word	0x2000293c
 8007948:	0802f674 	.word	0x0802f674
 800794c:	0802f724 	.word	0x0802f724
 8007950:	0802f398 	.word	0x0802f398
 8007954:	20002940 	.word	0x20002940
 8007958:	080078e1 	.word	0x080078e1

0800795c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800795c:	4770      	bx	lr
	...

08007960 <_Z23getFont_verdana_40_4bppv>:
{
 8007960:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8007962:	4d16      	ldr	r5, [pc, #88]	; (80079bc <_Z23getFont_verdana_40_4bppv+0x5c>)
 8007964:	682c      	ldr	r4, [r5, #0]
 8007966:	f3bf 8f5b 	dmb	ish
 800796a:	f014 0401 	ands.w	r4, r4, #1
{
 800796e:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8007970:	d120      	bne.n	80079b4 <_Z23getFont_verdana_40_4bppv+0x54>
 8007972:	4628      	mov	r0, r5
 8007974:	f01f fe05 	bl	8027582 <__cxa_guard_acquire>
 8007978:	b1e0      	cbz	r0, 80079b4 <_Z23getFont_verdana_40_4bppv+0x54>
 800797a:	233f      	movs	r3, #63	; 0x3f
 800797c:	9309      	str	r3, [sp, #36]	; 0x24
 800797e:	4b10      	ldr	r3, [pc, #64]	; (80079c0 <_Z23getFont_verdana_40_4bppv+0x60>)
 8007980:	9308      	str	r3, [sp, #32]
 8007982:	4b10      	ldr	r3, [pc, #64]	; (80079c4 <_Z23getFont_verdana_40_4bppv+0x64>)
 8007984:	4910      	ldr	r1, [pc, #64]	; (80079c8 <_Z23getFont_verdana_40_4bppv+0x68>)
 8007986:	4811      	ldr	r0, [pc, #68]	; (80079cc <_Z23getFont_verdana_40_4bppv+0x6c>)
 8007988:	940a      	str	r4, [sp, #40]	; 0x28
 800798a:	2201      	movs	r2, #1
 800798c:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8007990:	2304      	movs	r3, #4
 8007992:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8007996:	2328      	movs	r3, #40	; 0x28
 8007998:	9300      	str	r3, [sp, #0]
 800799a:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 800799e:	e9cd 4401 	strd	r4, r4, [sp, #4]
 80079a2:	9405      	str	r4, [sp, #20]
 80079a4:	f7fd fb02 	bl	8004fac <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80079a8:	4809      	ldr	r0, [pc, #36]	; (80079d0 <_Z23getFont_verdana_40_4bppv+0x70>)
 80079aa:	f020 fbf7 	bl	802819c <atexit>
 80079ae:	4628      	mov	r0, r5
 80079b0:	f01f fdf3 	bl	802759a <__cxa_guard_release>
    return verdana_40_4bpp;
}
 80079b4:	4805      	ldr	r0, [pc, #20]	; (80079cc <_Z23getFont_verdana_40_4bppv+0x6c>)
 80079b6:	b00f      	add	sp, #60	; 0x3c
 80079b8:	bd30      	pop	{r4, r5, pc}
 80079ba:	bf00      	nop
 80079bc:	2000296c 	.word	0x2000296c
 80079c0:	0802f718 	.word	0x0802f718
 80079c4:	0802f728 	.word	0x0802f728
 80079c8:	0802f62c 	.word	0x0802f62c
 80079cc:	20002970 	.word	0x20002970
 80079d0:	0800795d 	.word	0x0800795d

080079d4 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 80079d4:	2000      	movs	r0, #0
 80079d6:	4770      	bx	lr

080079d8 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 80079d8:	2000      	movs	r0, #0
 80079da:	4770      	bx	lr

080079dc <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 80079dc:	b40e      	push	{r1, r2, r3}
 80079de:	b503      	push	{r0, r1, lr}
 80079e0:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 80079e2:	2100      	movs	r1, #0
{
 80079e4:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 80079e8:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 80079ea:	f00e f827 	bl	8015a3c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 80079ee:	b002      	add	sp, #8
 80079f0:	f85d eb04 	ldr.w	lr, [sp], #4
 80079f4:	b003      	add	sp, #12
 80079f6:	4770      	bx	lr

080079f8 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 80079f8:	b40c      	push	{r2, r3}
 80079fa:	b507      	push	{r0, r1, r2, lr}
 80079fc:	ab04      	add	r3, sp, #16
 80079fe:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8007a02:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8007a04:	f00e f81a 	bl	8015a3c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8007a08:	b003      	add	sp, #12
 8007a0a:	f85d eb04 	ldr.w	lr, [sp], #4
 8007a0e:	b002      	add	sp, #8
 8007a10:	4770      	bx	lr
	...

08007a14 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8007a14:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 8007a16:	b510      	push	{r4, lr}
 8007a18:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8007a1a:	b373      	cbz	r3, 8007a7a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8007a1c:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 8007a1e:	b92b      	cbnz	r3, 8007a2c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8007a20:	4b18      	ldr	r3, [pc, #96]	; (8007a84 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8007a22:	4a19      	ldr	r2, [pc, #100]	; (8007a88 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8007a24:	21c5      	movs	r1, #197	; 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8007a26:	4819      	ldr	r0, [pc, #100]	; (8007a8c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8007a28:	f020 fb9a 	bl	8028160 <__assert_func>
            return buffer[pos];
 8007a2c:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8007a2e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8007a32:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 8007a34:	b30b      	cbz	r3, 8007a7a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8007a36:	f00f fbfe 	bl	8017236 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8007a3a:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8007a3c:	2b01      	cmp	r3, #1
 8007a3e:	d803      	bhi.n	8007a48 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8007a40:	4b13      	ldr	r3, [pc, #76]	; (8007a90 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8007a42:	4a14      	ldr	r2, [pc, #80]	; (8007a94 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8007a44:	21cb      	movs	r1, #203	; 0xcb
 8007a46:	e7ee      	b.n	8007a26 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8007a48:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8007a4a:	1c53      	adds	r3, r2, #1
 8007a4c:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8007a4e:	2b09      	cmp	r3, #9
 8007a50:	4619      	mov	r1, r3
 8007a52:	bf88      	it	hi
 8007a54:	f1a3 010a 	subhi.w	r1, r3, #10
 8007a58:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8007a5c:	f640 103f 	movw	r0, #2367	; 0x93f
 8007a60:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 8007a62:	4281      	cmp	r1, r0
 8007a64:	d109      	bne.n	8007a7a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 8007a66:	2b0a      	cmp	r3, #10
 8007a68:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8007a6c:	bf28      	it	cs
 8007a6e:	2300      	movcs	r3, #0

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8007a70:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8007a74:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 8007a76:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 8007a78:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8007a7a:	4620      	mov	r0, r4
}
 8007a7c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8007a80:	f00f badc 	b.w	801703c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8007a84:	0802b9e4 	.word	0x0802b9e4
 8007a88:	0802b9ed 	.word	0x0802b9ed
 8007a8c:	0802ba98 	.word	0x0802ba98
 8007a90:	0802bae2 	.word	0x0802bae2
 8007a94:	0802baf0 	.word	0x0802baf0

08007a98 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8007a98:	f00f ba97 	b.w	8016fca <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08007a9c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8007a9c:	b510      	push	{r4, lr}
 8007a9e:	b086      	sub	sp, #24
 8007aa0:	ac02      	add	r4, sp, #8
 8007aa2:	e884 0006 	stmia.w	r4, {r1, r2}
 8007aa6:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8007aa8:	ab0a      	add	r3, sp, #40	; 0x28
 8007aaa:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8007aac:	9301      	str	r3, [sp, #4]
 8007aae:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8007ab0:	9300      	str	r3, [sp, #0]
 8007ab2:	4621      	mov	r1, r4
 8007ab4:	9b08      	ldr	r3, [sp, #32]
 8007ab6:	f00c fb85 	bl	80141c4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 8007aba:	b006      	add	sp, #24
 8007abc:	bd10      	pop	{r4, pc}
	...

08007ac0 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8007ac0:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8007ac2:	bb18      	cbnz	r0, 8007b0c <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8007ac4:	4b12      	ldr	r3, [pc, #72]	; (8007b10 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8007ac6:	4813      	ldr	r0, [pc, #76]	; (8007b14 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8007ac8:	681c      	ldr	r4, [r3, #0]
 8007aca:	4913      	ldr	r1, [pc, #76]	; (8007b18 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8007acc:	b1b4      	cbz	r4, 8007afc <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8007ace:	6822      	ldr	r2, [r4, #0]
 8007ad0:	4422      	add	r2, r4
 8007ad2:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8007ad4:	6862      	ldr	r2, [r4, #4]
 8007ad6:	4422      	add	r2, r4
 8007ad8:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8007ada:	68a2      	ldr	r2, [r4, #8]
 8007adc:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8007ade:	4b0f      	ldr	r3, [pc, #60]	; (8007b1c <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8007ae0:	2200      	movs	r2, #0
 8007ae2:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8007ae4:	f000 f838 	bl	8007b58 <_ZN17TypedTextDatabase8getFontsEv>
 8007ae8:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8007aea:	f000 f833 	bl	8007b54 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8007aee:	4b0c      	ldr	r3, [pc, #48]	; (8007b20 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8007af0:	601c      	str	r4, [r3, #0]
        fonts = f;
 8007af2:	4b0c      	ldr	r3, [pc, #48]	; (8007b24 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8007af4:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8007af6:	4b0c      	ldr	r3, [pc, #48]	; (8007b28 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8007af8:	8018      	strh	r0, [r3, #0]
    }
}
 8007afa:	e007      	b.n	8007b0c <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8007afc:	4b0b      	ldr	r3, [pc, #44]	; (8007b2c <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8007afe:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8007b00:	4b0b      	ldr	r3, [pc, #44]	; (8007b30 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8007b02:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8007b04:	4b0b      	ldr	r3, [pc, #44]	; (8007b34 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8007b06:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8007b08:	2c00      	cmp	r4, #0
 8007b0a:	d1e8      	bne.n	8007ade <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8007b0c:	bd38      	pop	{r3, r4, r5, pc}
 8007b0e:	bf00      	nop
 8007b10:	2000299c 	.word	0x2000299c
 8007b14:	200029a0 	.word	0x200029a0
 8007b18:	200029a4 	.word	0x200029a4
 8007b1c:	200029a8 	.word	0x200029a8
 8007b20:	20013814 	.word	0x20013814
 8007b24:	2001381c 	.word	0x2001381c
 8007b28:	20013818 	.word	0x20013818
 8007b2c:	0802f85c 	.word	0x0802f85c
 8007b30:	0802f72c 	.word	0x0802f72c
 8007b34:	0802fd30 	.word	0x0802fd30

08007b38 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8007b38:	4b04      	ldr	r3, [pc, #16]	; (8007b4c <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8007b3a:	681b      	ldr	r3, [r3, #0]
 8007b3c:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8007b40:	4b03      	ldr	r3, [pc, #12]	; (8007b50 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 8007b42:	681b      	ldr	r3, [r3, #0]
}
 8007b44:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8007b48:	4770      	bx	lr
 8007b4a:	bf00      	nop
 8007b4c:	200029a4 	.word	0x200029a4
 8007b50:	200029a0 	.word	0x200029a0

08007b54 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8007b54:	204c      	movs	r0, #76	; 0x4c
 8007b56:	4770      	bx	lr

08007b58 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8007b58:	4800      	ldr	r0, [pc, #0]	; (8007b5c <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8007b5a:	4770      	bx	lr
 8007b5c:	200029ac 	.word	0x200029ac

08007b60 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 3:
        touchgfx_fonts[3] = &(getFont_verdana_12_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8007b60:	b510      	push	{r4, lr}
    &(getFont_verdana_19_4bpp()),
 8007b62:	f7ff febf 	bl	80078e4 <_Z23getFont_verdana_19_4bppv>
};
 8007b66:	4c06      	ldr	r4, [pc, #24]	; (8007b80 <_GLOBAL__sub_I_touchgfx_fonts+0x20>)
 8007b68:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 8007b6a:	f7ff fef9 	bl	8007960 <_Z23getFont_verdana_40_4bppv>
};
 8007b6e:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp()),
 8007b70:	f7ff fe3c 	bl	80077ec <_Z23getFont_verdana_10_4bppv>
};
 8007b74:	60a0      	str	r0, [r4, #8]
    &(getFont_verdana_12_4bpp())
 8007b76:	f7ff fe77 	bl	8007868 <_Z23getFont_verdana_12_4bppv>
};
 8007b7a:	60e0      	str	r0, [r4, #12]
} // namespace TypedTextDatabase
 8007b7c:	bd10      	pop	{r4, pc}
 8007b7e:	bf00      	nop
 8007b80:	200029ac 	.word	0x200029ac

08007b84 <_ZN20CalibrationPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~CalibrationPresenter() {}
 8007b84:	4770      	bx	lr

08007b86 <_ZThn4_N20CalibrationPresenterD1Ev>:
 8007b86:	3804      	subs	r0, #4
 8007b88:	4770      	bx	lr

08007b8a <_ZN20CalibrationPresenter10deactivateEv>:
}

void CalibrationPresenter::activate()
{

}
 8007b8a:	4770      	bx	lr

08007b8c <_ZN20CalibrationPresenter15setTimeoutValueEi>:

}

void CalibrationPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8007b8c:	68c0      	ldr	r0, [r0, #12]
 8007b8e:	6803      	ldr	r3, [r0, #0]
 8007b90:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007b92:	4718      	bx	r3

08007b94 <_ZThn4_N20CalibrationPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8007b94:	f1a0 0004 	sub.w	r0, r0, #4
 8007b98:	f7ff bff8 	b.w	8007b8c <_ZN20CalibrationPresenter15setTimeoutValueEi>

08007b9c <_ZN20CalibrationPresenterD0Ev>:
    virtual ~CalibrationPresenter() {}
 8007b9c:	b510      	push	{r4, lr}
 8007b9e:	2110      	movs	r1, #16
 8007ba0:	4604      	mov	r4, r0
 8007ba2:	f01f fcec 	bl	802757e <_ZdlPvj>
 8007ba6:	4620      	mov	r0, r4
 8007ba8:	bd10      	pop	{r4, pc}

08007baa <_ZThn4_N20CalibrationPresenterD0Ev>:
 8007baa:	f1a0 0004 	sub.w	r0, r0, #4
 8007bae:	e7f5      	b.n	8007b9c <_ZN20CalibrationPresenterD0Ev>

08007bb0 <_ZN20CalibrationPresenterC1ER15CalibrationView>:
CalibrationPresenter::CalibrationPresenter(CalibrationView& v)
 8007bb0:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 8007bb2:	2200      	movs	r2, #0
 8007bb4:	6082      	str	r2, [r0, #8]
    : view(v)
 8007bb6:	4a04      	ldr	r2, [pc, #16]	; (8007bc8 <_ZN20CalibrationPresenterC1ER15CalibrationView+0x18>)
 8007bb8:	60c1      	str	r1, [r0, #12]
 8007bba:	f102 0408 	add.w	r4, r2, #8
 8007bbe:	3224      	adds	r2, #36	; 0x24
 8007bc0:	6004      	str	r4, [r0, #0]
 8007bc2:	6042      	str	r2, [r0, #4]
}
 8007bc4:	bd10      	pop	{r4, pc}
 8007bc6:	bf00      	nop
 8007bc8:	0802bbc4 	.word	0x0802bbc4

08007bcc <_ZN15CalibrationView14tearDownScreenEv>:
}

void CalibrationView::tearDownScreen()
{
    CalibrationViewBase::tearDownScreen();
}
 8007bcc:	4770      	bx	lr
	...

08007bd0 <_ZN15CalibrationViewD1Ev>:

class CalibrationView : public CalibrationViewBase
{
public:
    CalibrationView();
    virtual ~CalibrationView() {}
 8007bd0:	b510      	push	{r4, lr}
 8007bd2:	4b03      	ldr	r3, [pc, #12]	; (8007be0 <_ZN15CalibrationViewD1Ev+0x10>)
 8007bd4:	6003      	str	r3, [r0, #0]
 8007bd6:	4604      	mov	r4, r0
 8007bd8:	f7fa fbee 	bl	80023b8 <_ZN19CalibrationViewBaseD1Ev>
 8007bdc:	4620      	mov	r0, r4
 8007bde:	bd10      	pop	{r4, pc}
 8007be0:	0802bc00 	.word	0x0802bc00

08007be4 <_ZN15CalibrationViewD0Ev>:
 8007be4:	b510      	push	{r4, lr}
 8007be6:	4604      	mov	r4, r0
 8007be8:	f7ff fff2 	bl	8007bd0 <_ZN15CalibrationViewD1Ev>
 8007bec:	4620      	mov	r0, r4
 8007bee:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8007bf2:	f01f fcc4 	bl	802757e <_ZdlPvj>
 8007bf6:	4620      	mov	r0, r4
 8007bf8:	bd10      	pop	{r4, pc}
	...

08007bfc <_ZN15CalibrationViewC1Ev>:
CalibrationView::CalibrationView()
 8007bfc:	b510      	push	{r4, lr}
 8007bfe:	4604      	mov	r4, r0
 8007c00:	f7fa fcee 	bl	80025e0 <_ZN19CalibrationViewBaseC1Ev>
 8007c04:	4b01      	ldr	r3, [pc, #4]	; (8007c0c <_ZN15CalibrationViewC1Ev+0x10>)
 8007c06:	6023      	str	r3, [r4, #0]
}
 8007c08:	4620      	mov	r0, r4
 8007c0a:	bd10      	pop	{r4, pc}
 8007c0c:	0802bc00 	.word	0x0802bc00

08007c10 <_ZN15CalibrationView11setupScreenEv>:
    CalibrationViewBase::setupScreen();
 8007c10:	f7fa bb9f 	b.w	8002352 <_ZN19CalibrationViewBase11setupScreenEv>

08007c14 <_ZN15CalibrationView15setTimeoutValueEi>:

void CalibrationView::setTimeoutValue(int value)
{
 8007c14:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8007c16:	4a0a      	ldr	r2, [pc, #40]	; (8007c40 <_ZN15CalibrationView15setTimeoutValueEi+0x2c>)
{
 8007c18:	4605      	mov	r5, r0
 8007c1a:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8007c1c:	460b      	mov	r3, r1
 8007c1e:	f500 7046 	add.w	r0, r0, #792	; 0x318
 8007c22:	2104      	movs	r1, #4
 8007c24:	f010 f8b0 	bl	8017d88 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8007c28:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8007c2c:	f00e f830 	bl	8015c90 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8007c30:	b92c      	cbnz	r4, 8007c3e <_ZN15CalibrationView15setTimeoutValueEi+0x2a>
 8007c32:	f00c ff45 	bl	8014ac0 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8007c36:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8007c3a:	f7fb be2f 	b.w	800389c <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8007c3e:	bd38      	pop	{r3, r4, r5, pc}
 8007c40:	0802bbf4 	.word	0x0802bbf4

08007c44 <_ZN25Calibration_HallPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Calibration_HallPresenter() {}
 8007c44:	4770      	bx	lr

08007c46 <_ZThn4_N25Calibration_HallPresenterD1Ev>:
 8007c46:	3804      	subs	r0, #4
 8007c48:	4770      	bx	lr

08007c4a <_ZN25Calibration_HallPresenter10deactivateEv>:
}

void Calibration_HallPresenter::activate()
{

}
 8007c4a:	4770      	bx	lr

08007c4c <_ZN25Calibration_HallPresenter15setTimeoutValueEi>:
}

void Calibration_HallPresenter::setTimeoutValue(int value)
{

}
 8007c4c:	4770      	bx	lr

08007c4e <_ZN25Calibration_HallPresenterD0Ev>:
 8007c4e:	b510      	push	{r4, lr}
 8007c50:	2110      	movs	r1, #16
 8007c52:	4604      	mov	r4, r0
 8007c54:	f01f fc93 	bl	802757e <_ZdlPvj>
 8007c58:	4620      	mov	r0, r4
 8007c5a:	bd10      	pop	{r4, pc}

08007c5c <_ZThn4_N25Calibration_HallPresenterD0Ev>:
 8007c5c:	f1a0 0004 	sub.w	r0, r0, #4
 8007c60:	e7f5      	b.n	8007c4e <_ZN25Calibration_HallPresenterD0Ev>

08007c62 <_ZThn4_N25Calibration_HallPresenter15setTimeoutValueEi>:
 8007c62:	4770      	bx	lr

08007c64 <_ZN25Calibration_HallPresenterC1ER20Calibration_HallView>:
Calibration_HallPresenter::Calibration_HallPresenter(Calibration_HallView& v)
 8007c64:	b510      	push	{r4, lr}
 8007c66:	2200      	movs	r2, #0
 8007c68:	6082      	str	r2, [r0, #8]
    : view(v)
 8007c6a:	4a04      	ldr	r2, [pc, #16]	; (8007c7c <_ZN25Calibration_HallPresenterC1ER20Calibration_HallView+0x18>)
 8007c6c:	60c1      	str	r1, [r0, #12]
 8007c6e:	f102 0408 	add.w	r4, r2, #8
 8007c72:	3224      	adds	r2, #36	; 0x24
 8007c74:	6004      	str	r4, [r0, #0]
 8007c76:	6042      	str	r2, [r0, #4]
}
 8007c78:	bd10      	pop	{r4, pc}
 8007c7a:	bf00      	nop
 8007c7c:	0802bc30 	.word	0x0802bc30

08007c80 <_ZN20Calibration_HallView14tearDownScreenEv>:
}

void Calibration_HallView::tearDownScreen()
{
    Calibration_HallViewBase::tearDownScreen();
}
 8007c80:	4770      	bx	lr

08007c82 <_ZN20Calibration_HallView15setTimeoutValueEi>:

void Calibration_HallView::setTimeoutValue(int value)
{

}
 8007c82:	4770      	bx	lr

08007c84 <_ZN20Calibration_HallViewD1Ev>:

class Calibration_HallView : public Calibration_HallViewBase
{
public:
    Calibration_HallView();
    virtual ~Calibration_HallView() {}
 8007c84:	b510      	push	{r4, lr}
 8007c86:	4b03      	ldr	r3, [pc, #12]	; (8007c94 <_ZN20Calibration_HallViewD1Ev+0x10>)
 8007c88:	6003      	str	r3, [r0, #0]
 8007c8a:	4604      	mov	r4, r0
 8007c8c:	f7fa feec 	bl	8002a68 <_ZN24Calibration_HallViewBaseD1Ev>
 8007c90:	4620      	mov	r0, r4
 8007c92:	bd10      	pop	{r4, pc}
 8007c94:	0802bc68 	.word	0x0802bc68

08007c98 <_ZN20Calibration_HallViewD0Ev>:
 8007c98:	b510      	push	{r4, lr}
 8007c9a:	4604      	mov	r4, r0
 8007c9c:	f7ff fff2 	bl	8007c84 <_ZN20Calibration_HallViewD1Ev>
 8007ca0:	4620      	mov	r0, r4
 8007ca2:	f241 015c 	movw	r1, #4188	; 0x105c
 8007ca6:	f01f fc6a 	bl	802757e <_ZdlPvj>
 8007caa:	4620      	mov	r0, r4
 8007cac:	bd10      	pop	{r4, pc}
	...

08007cb0 <_ZN20Calibration_HallViewC1Ev>:
Calibration_HallView::Calibration_HallView()
 8007cb0:	b510      	push	{r4, lr}
 8007cb2:	4604      	mov	r4, r0
 8007cb4:	f7fa ff00 	bl	8002ab8 <_ZN24Calibration_HallViewBaseC1Ev>
 8007cb8:	4b01      	ldr	r3, [pc, #4]	; (8007cc0 <_ZN20Calibration_HallViewC1Ev+0x10>)
 8007cba:	6023      	str	r3, [r4, #0]
}
 8007cbc:	4620      	mov	r0, r4
 8007cbe:	bd10      	pop	{r4, pc}
 8007cc0:	0802bc68 	.word	0x0802bc68

08007cc4 <_ZN20Calibration_HallView11setupScreenEv>:
    Calibration_HallViewBase::setupScreen();
 8007cc4:	f7fa beac 	b.w	8002a20 <_ZN24Calibration_HallViewBase11setupScreenEv>

08007cc8 <_ZN24Calibration_PadPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Calibration_PadPresenter() {}
 8007cc8:	4770      	bx	lr

08007cca <_ZThn4_N24Calibration_PadPresenterD1Ev>:
 8007cca:	3804      	subs	r0, #4
 8007ccc:	4770      	bx	lr

08007cce <_ZN24Calibration_PadPresenter10deactivateEv>:
}

void Calibration_PadPresenter::activate()
{

}
 8007cce:	4770      	bx	lr

08007cd0 <_ZN24Calibration_PadPresenter15setTimeoutValueEi>:
}

void Calibration_PadPresenter::setTimeoutValue(int value)
{

}
 8007cd0:	4770      	bx	lr

08007cd2 <_ZN24Calibration_PadPresenterD0Ev>:
 8007cd2:	b510      	push	{r4, lr}
 8007cd4:	2110      	movs	r1, #16
 8007cd6:	4604      	mov	r4, r0
 8007cd8:	f01f fc51 	bl	802757e <_ZdlPvj>
 8007cdc:	4620      	mov	r0, r4
 8007cde:	bd10      	pop	{r4, pc}

08007ce0 <_ZThn4_N24Calibration_PadPresenterD0Ev>:
 8007ce0:	f1a0 0004 	sub.w	r0, r0, #4
 8007ce4:	e7f5      	b.n	8007cd2 <_ZN24Calibration_PadPresenterD0Ev>

08007ce6 <_ZThn4_N24Calibration_PadPresenter15setTimeoutValueEi>:
 8007ce6:	4770      	bx	lr

08007ce8 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>:
Calibration_PadPresenter::Calibration_PadPresenter(Calibration_PadView& v)
 8007ce8:	b510      	push	{r4, lr}
 8007cea:	2200      	movs	r2, #0
 8007cec:	6082      	str	r2, [r0, #8]
    : view(v)
 8007cee:	4a04      	ldr	r2, [pc, #16]	; (8007d00 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView+0x18>)
 8007cf0:	60c1      	str	r1, [r0, #12]
 8007cf2:	f102 0408 	add.w	r4, r2, #8
 8007cf6:	3224      	adds	r2, #36	; 0x24
 8007cf8:	6004      	str	r4, [r0, #0]
 8007cfa:	6042      	str	r2, [r0, #4]
}
 8007cfc:	bd10      	pop	{r4, pc}
 8007cfe:	bf00      	nop
 8007d00:	0802bc98 	.word	0x0802bc98

08007d04 <_ZN19Calibration_PadView14tearDownScreenEv>:
}

void Calibration_PadView::tearDownScreen()
{
    Calibration_PadViewBase::tearDownScreen();
}
 8007d04:	4770      	bx	lr

08007d06 <_ZN19Calibration_PadView15setTimeoutValueEi>:

void Calibration_PadView::setTimeoutValue(int value)
{

}
 8007d06:	4770      	bx	lr

08007d08 <_ZN19Calibration_PadViewD1Ev>:

class Calibration_PadView : public Calibration_PadViewBase
{
public:
    Calibration_PadView();
    virtual ~Calibration_PadView() {}
 8007d08:	b510      	push	{r4, lr}
 8007d0a:	4b03      	ldr	r3, [pc, #12]	; (8007d18 <_ZN19Calibration_PadViewD1Ev+0x10>)
 8007d0c:	6003      	str	r3, [r0, #0]
 8007d0e:	4604      	mov	r4, r0
 8007d10:	f7fb f85a 	bl	8002dc8 <_ZN23Calibration_PadViewBaseD1Ev>
 8007d14:	4620      	mov	r0, r4
 8007d16:	bd10      	pop	{r4, pc}
 8007d18:	0802bcd0 	.word	0x0802bcd0

08007d1c <_ZN19Calibration_PadViewD0Ev>:
 8007d1c:	b510      	push	{r4, lr}
 8007d1e:	4604      	mov	r4, r0
 8007d20:	f7ff fff2 	bl	8007d08 <_ZN19Calibration_PadViewD1Ev>
 8007d24:	4620      	mov	r0, r4
 8007d26:	f241 015c 	movw	r1, #4188	; 0x105c
 8007d2a:	f01f fc28 	bl	802757e <_ZdlPvj>
 8007d2e:	4620      	mov	r0, r4
 8007d30:	bd10      	pop	{r4, pc}
	...

08007d34 <_ZN19Calibration_PadViewC1Ev>:
Calibration_PadView::Calibration_PadView()
 8007d34:	b510      	push	{r4, lr}
 8007d36:	4604      	mov	r4, r0
 8007d38:	f7fb f86e 	bl	8002e18 <_ZN23Calibration_PadViewBaseC1Ev>
 8007d3c:	4b01      	ldr	r3, [pc, #4]	; (8007d44 <_ZN19Calibration_PadViewC1Ev+0x10>)
 8007d3e:	6023      	str	r3, [r4, #0]
}
 8007d40:	4620      	mov	r0, r4
 8007d42:	bd10      	pop	{r4, pc}
 8007d44:	0802bcd0 	.word	0x0802bcd0

08007d48 <_ZN19Calibration_PadView11setupScreenEv>:
    Calibration_PadViewBase::setupScreen();
 8007d48:	f7fb b81a 	b.w	8002d80 <_ZN23Calibration_PadViewBase11setupScreenEv>

08007d4c <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8007d4c:	4770      	bx	lr

08007d4e <_ZN19FrontendApplicationD0Ev>:
 8007d4e:	b510      	push	{r4, lr}
 8007d50:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 8007d54:	4604      	mov	r4, r0
 8007d56:	f01f fc12 	bl	802757e <_ZdlPvj>
 8007d5a:	4620      	mov	r0, r4
 8007d5c:	bd10      	pop	{r4, pc}

08007d5e <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8007d5e:	b510      	push	{r4, lr}
 8007d60:	4604      	mov	r4, r0
    {
        model.tick();
 8007d62:	f8d0 0158 	ldr.w	r0, [r0, #344]	; 0x158
 8007d66:	f000 fac1 	bl	80082ec <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8007d6a:	4620      	mov	r0, r4
    }
 8007d6c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8007d70:	f00c bf6a 	b.w	8014c48 <_ZN8touchgfx11Application15handleTickEventEv>

08007d74 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8007d74:	b510      	push	{r4, lr}
 8007d76:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8007d78:	f7fb fc60 	bl	800363c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8007d7c:	4b01      	ldr	r3, [pc, #4]	; (8007d84 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 8007d7e:	6023      	str	r3, [r4, #0]
{

}
 8007d80:	4620      	mov	r0, r4
 8007d82:	bd10      	pop	{r4, pc}
 8007d84:	0802bd08 	.word	0x0802bd08

08007d88 <_ZN17Gauge_with_ValuesD1Ev>:
 8007d88:	b510      	push	{r4, lr}
 8007d8a:	4b03      	ldr	r3, [pc, #12]	; (8007d98 <_ZN17Gauge_with_ValuesD1Ev+0x10>)
 8007d8c:	6003      	str	r3, [r0, #0]
 8007d8e:	4604      	mov	r4, r0
 8007d90:	f7fc ff5a 	bl	8004c48 <_ZN21Gauge_with_ValuesBaseD1Ev>
 8007d94:	4620      	mov	r0, r4
 8007d96:	bd10      	pop	{r4, pc}
 8007d98:	0802bd5c 	.word	0x0802bd5c

08007d9c <_ZN17Gauge_with_ValuesD0Ev>:
 8007d9c:	b510      	push	{r4, lr}
 8007d9e:	4604      	mov	r4, r0
 8007da0:	f7ff fff2 	bl	8007d88 <_ZN17Gauge_with_ValuesD1Ev>
 8007da4:	4620      	mov	r0, r4
 8007da6:	f44f 7162 	mov.w	r1, #904	; 0x388
 8007daa:	f01f fbe8 	bl	802757e <_ZdlPvj>
 8007dae:	4620      	mov	r0, r4
 8007db0:	bd10      	pop	{r4, pc}
	...

08007db4 <_ZN17Gauge_with_ValuesC1Ev>:
#include <gui/containers/Gauge_with_Values.hpp>

Gauge_with_Values::Gauge_with_Values()
 8007db4:	b510      	push	{r4, lr}
 8007db6:	4604      	mov	r4, r0
 8007db8:	f7fc ff50 	bl	8004c5c <_ZN21Gauge_with_ValuesBaseC1Ev>
 8007dbc:	4b01      	ldr	r3, [pc, #4]	; (8007dc4 <_ZN17Gauge_with_ValuesC1Ev+0x10>)
 8007dbe:	6023      	str	r3, [r4, #0]
{

}
 8007dc0:	4620      	mov	r0, r4
 8007dc2:	bd10      	pop	{r4, pc}
 8007dc4:	0802bd5c 	.word	0x0802bd5c

08007dc8 <_ZN17Gauge_with_Values10initializeEv>:

void Gauge_with_Values::initialize()
{
    Gauge_with_ValuesBase::initialize();
 8007dc8:	f7fc bf3f 	b.w	8004c4a <_ZN21Gauge_with_ValuesBase10initializeEv>

08007dcc <_ZN18Main_MenuPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Main_MenuPresenter() {}
 8007dcc:	4770      	bx	lr

08007dce <_ZThn4_N18Main_MenuPresenterD1Ev>:
 8007dce:	3804      	subs	r0, #4
 8007dd0:	4770      	bx	lr

08007dd2 <_ZN18Main_MenuPresenter10deactivateEv>:
}

void Main_MenuPresenter::activate()
{

}
 8007dd2:	4770      	bx	lr

08007dd4 <_ZN18Main_MenuPresenter15setTimeoutValueEi>:

}

void Main_MenuPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8007dd4:	68c0      	ldr	r0, [r0, #12]
 8007dd6:	6803      	ldr	r3, [r0, #0]
 8007dd8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007dda:	4718      	bx	r3

08007ddc <_ZThn4_N18Main_MenuPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8007ddc:	f1a0 0004 	sub.w	r0, r0, #4
 8007de0:	f7ff bff8 	b.w	8007dd4 <_ZN18Main_MenuPresenter15setTimeoutValueEi>

08007de4 <_ZN18Main_MenuPresenterD0Ev>:
    virtual ~Main_MenuPresenter() {}
 8007de4:	b510      	push	{r4, lr}
 8007de6:	2110      	movs	r1, #16
 8007de8:	4604      	mov	r4, r0
 8007dea:	f01f fbc8 	bl	802757e <_ZdlPvj>
 8007dee:	4620      	mov	r0, r4
 8007df0:	bd10      	pop	{r4, pc}

08007df2 <_ZThn4_N18Main_MenuPresenterD0Ev>:
 8007df2:	f1a0 0004 	sub.w	r0, r0, #4
 8007df6:	e7f5      	b.n	8007de4 <_ZN18Main_MenuPresenterD0Ev>

08007df8 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>:
Main_MenuPresenter::Main_MenuPresenter(Main_MenuView& v)
 8007df8:	b510      	push	{r4, lr}
 8007dfa:	2200      	movs	r2, #0
 8007dfc:	6082      	str	r2, [r0, #8]
    : view(v)
 8007dfe:	4a04      	ldr	r2, [pc, #16]	; (8007e10 <_ZN18Main_MenuPresenterC1ER13Main_MenuView+0x18>)
 8007e00:	60c1      	str	r1, [r0, #12]
 8007e02:	f102 0408 	add.w	r4, r2, #8
 8007e06:	3224      	adds	r2, #36	; 0x24
 8007e08:	6004      	str	r4, [r0, #0]
 8007e0a:	6042      	str	r2, [r0, #4]
}
 8007e0c:	bd10      	pop	{r4, pc}
 8007e0e:	bf00      	nop
 8007e10:	0802bde8 	.word	0x0802bde8

08007e14 <_ZN13Main_MenuView14tearDownScreenEv>:
}

void Main_MenuView::tearDownScreen()
{
    Main_MenuViewBase::tearDownScreen();
}
 8007e14:	4770      	bx	lr
	...

08007e18 <_ZN13Main_MenuViewD1Ev>:

class Main_MenuView : public Main_MenuViewBase
{
public:
    Main_MenuView();
    virtual ~Main_MenuView() {}
 8007e18:	b510      	push	{r4, lr}
 8007e1a:	4b03      	ldr	r3, [pc, #12]	; (8007e28 <_ZN13Main_MenuViewD1Ev+0x10>)
 8007e1c:	6003      	str	r3, [r0, #0]
 8007e1e:	4604      	mov	r4, r0
 8007e20:	f7fd f918 	bl	8005054 <_ZN17Main_MenuViewBaseD1Ev>
 8007e24:	4620      	mov	r0, r4
 8007e26:	bd10      	pop	{r4, pc}
 8007e28:	0802be20 	.word	0x0802be20

08007e2c <_ZN13Main_MenuViewD0Ev>:
 8007e2c:	b510      	push	{r4, lr}
 8007e2e:	4604      	mov	r4, r0
 8007e30:	f7ff fff2 	bl	8007e18 <_ZN13Main_MenuViewD1Ev>
 8007e34:	4620      	mov	r0, r4
 8007e36:	f241 117c 	movw	r1, #4476	; 0x117c
 8007e3a:	f01f fba0 	bl	802757e <_ZdlPvj>
 8007e3e:	4620      	mov	r0, r4
 8007e40:	bd10      	pop	{r4, pc}
	...

08007e44 <_ZN13Main_MenuViewC1Ev>:
Main_MenuView::Main_MenuView()
 8007e44:	b510      	push	{r4, lr}
 8007e46:	4604      	mov	r4, r0
 8007e48:	f7fd f94e 	bl	80050e8 <_ZN17Main_MenuViewBaseC1Ev>
 8007e4c:	4b01      	ldr	r3, [pc, #4]	; (8007e54 <_ZN13Main_MenuViewC1Ev+0x10>)
 8007e4e:	6023      	str	r3, [r4, #0]
}
 8007e50:	4620      	mov	r0, r4
 8007e52:	bd10      	pop	{r4, pc}
 8007e54:	0802be20 	.word	0x0802be20

08007e58 <_ZN13Main_MenuView11setupScreenEv>:
    Main_MenuViewBase::setupScreen();
 8007e58:	f7fd b8d8 	b.w	800500c <_ZN17Main_MenuViewBase11setupScreenEv>

08007e5c <_ZN13Main_MenuView15setTimeoutValueEi>:

void Main_MenuView::setTimeoutValue(int value)
{
 8007e5c:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%d", value);
 8007e5e:	4a0a      	ldr	r2, [pc, #40]	; (8007e88 <_ZN13Main_MenuView15setTimeoutValueEi+0x2c>)
{
 8007e60:	4605      	mov	r5, r0
 8007e62:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%d", value);
 8007e64:	460b      	mov	r3, r1
 8007e66:	f500 7055 	add.w	r0, r0, #852	; 0x354
 8007e6a:	2104      	movs	r1, #4
 8007e6c:	f00f ff8c 	bl	8017d88 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3.invalidate();
 8007e70:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8007e74:	f00d ff0c 	bl	8015c90 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8007e78:	b92c      	cbnz	r4, 8007e86 <_ZN13Main_MenuView15setTimeoutValueEi+0x2a>
 8007e7a:	f00c fe21 	bl	8014ac0 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8007e7e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8007e82:	f7fb bd0b 	b.w	800389c <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8007e86:	bd38      	pop	{r3, r4, r5, pc}
 8007e88:	0802bbf4 	.word	0x0802bbf4

08007e8c <_ZN20MeasurementPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MeasurementPresenter() {}
 8007e8c:	4770      	bx	lr

08007e8e <_ZThn4_N20MeasurementPresenterD1Ev>:
 8007e8e:	3804      	subs	r0, #4
 8007e90:	4770      	bx	lr

08007e92 <_ZN20MeasurementPresenter10deactivateEv>:
}

void MeasurementPresenter::activate()
{

}
 8007e92:	4770      	bx	lr

08007e94 <_ZN20MeasurementPresenter15setTimeoutValueEi>:

}

void MeasurementPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8007e94:	68c0      	ldr	r0, [r0, #12]
 8007e96:	6803      	ldr	r3, [r0, #0]
 8007e98:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007e9a:	4718      	bx	r3

08007e9c <_ZThn4_N20MeasurementPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8007e9c:	f1a0 0004 	sub.w	r0, r0, #4
 8007ea0:	f7ff bff8 	b.w	8007e94 <_ZN20MeasurementPresenter15setTimeoutValueEi>

08007ea4 <_ZN20MeasurementPresenterD0Ev>:
    virtual ~MeasurementPresenter() {}
 8007ea4:	b510      	push	{r4, lr}
 8007ea6:	2110      	movs	r1, #16
 8007ea8:	4604      	mov	r4, r0
 8007eaa:	f01f fb68 	bl	802757e <_ZdlPvj>
 8007eae:	4620      	mov	r0, r4
 8007eb0:	bd10      	pop	{r4, pc}

08007eb2 <_ZThn4_N20MeasurementPresenterD0Ev>:
 8007eb2:	f1a0 0004 	sub.w	r0, r0, #4
 8007eb6:	e7f5      	b.n	8007ea4 <_ZN20MeasurementPresenterD0Ev>

08007eb8 <_ZN20MeasurementPresenterC1ER15MeasurementView>:
MeasurementPresenter::MeasurementPresenter(MeasurementView& v)
 8007eb8:	b510      	push	{r4, lr}
 8007eba:	2200      	movs	r2, #0
 8007ebc:	6082      	str	r2, [r0, #8]
    : view(v)
 8007ebe:	4a04      	ldr	r2, [pc, #16]	; (8007ed0 <_ZN20MeasurementPresenterC1ER15MeasurementView+0x18>)
 8007ec0:	60c1      	str	r1, [r0, #12]
 8007ec2:	f102 0408 	add.w	r4, r2, #8
 8007ec6:	3224      	adds	r2, #36	; 0x24
 8007ec8:	6004      	str	r4, [r0, #0]
 8007eca:	6042      	str	r2, [r0, #4]
}
 8007ecc:	bd10      	pop	{r4, pc}
 8007ece:	bf00      	nop
 8007ed0:	0802be50 	.word	0x0802be50

08007ed4 <_ZN15MeasurementView14tearDownScreenEv>:
}

void MeasurementView::tearDownScreen()
{
    MeasurementViewBase::tearDownScreen();
}
 8007ed4:	4770      	bx	lr
	...

08007ed8 <_ZN15MeasurementViewD1Ev>:

class MeasurementView : public MeasurementViewBase
{
public:
    MeasurementView();
    virtual ~MeasurementView() {}
 8007ed8:	b510      	push	{r4, lr}
 8007eda:	4b03      	ldr	r3, [pc, #12]	; (8007ee8 <_ZN15MeasurementViewD1Ev+0x10>)
 8007edc:	6003      	str	r3, [r0, #0]
 8007ede:	4604      	mov	r4, r0
 8007ee0:	f7fd fb72 	bl	80055c8 <_ZN19MeasurementViewBaseD1Ev>
 8007ee4:	4620      	mov	r0, r4
 8007ee6:	bd10      	pop	{r4, pc}
 8007ee8:	0802be88 	.word	0x0802be88

08007eec <_ZN15MeasurementViewD0Ev>:
 8007eec:	b510      	push	{r4, lr}
 8007eee:	4604      	mov	r4, r0
 8007ef0:	f7ff fff2 	bl	8007ed8 <_ZN15MeasurementViewD1Ev>
 8007ef4:	4620      	mov	r0, r4
 8007ef6:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8007efa:	f01f fb40 	bl	802757e <_ZdlPvj>
 8007efe:	4620      	mov	r0, r4
 8007f00:	bd10      	pop	{r4, pc}
	...

08007f04 <_ZN15MeasurementViewC1Ev>:
MeasurementView::MeasurementView()
 8007f04:	b510      	push	{r4, lr}
 8007f06:	4604      	mov	r4, r0
 8007f08:	f7fd fb98 	bl	800563c <_ZN19MeasurementViewBaseC1Ev>
 8007f0c:	4b01      	ldr	r3, [pc, #4]	; (8007f14 <_ZN15MeasurementViewC1Ev+0x10>)
 8007f0e:	6023      	str	r3, [r4, #0]
}
 8007f10:	4620      	mov	r0, r4
 8007f12:	bd10      	pop	{r4, pc}
 8007f14:	0802be88 	.word	0x0802be88

08007f18 <_ZN15MeasurementView11setupScreenEv>:
    MeasurementViewBase::setupScreen();
 8007f18:	f7fd bb32 	b.w	8005580 <_ZN19MeasurementViewBase11setupScreenEv>

08007f1c <_ZN15MeasurementView15setTimeoutValueEi>:

void MeasurementView::setTimeoutValue(int value)
{
 8007f1c:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8007f1e:	4a0a      	ldr	r2, [pc, #40]	; (8007f48 <_ZN15MeasurementView15setTimeoutValueEi+0x2c>)
{
 8007f20:	4605      	mov	r5, r0
 8007f22:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8007f24:	460b      	mov	r3, r1
 8007f26:	f500 7046 	add.w	r0, r0, #792	; 0x318
 8007f2a:	2104      	movs	r1, #4
 8007f2c:	f00f ff2c 	bl	8017d88 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8007f30:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8007f34:	f00d feac 	bl	8015c90 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8007f38:	b92c      	cbnz	r4, 8007f46 <_ZN15MeasurementView15setTimeoutValueEi+0x2a>
 8007f3a:	f00c fdc1 	bl	8014ac0 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8007f3e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8007f42:	f7fb bcab 	b.w	800389c <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8007f46:	bd38      	pop	{r3, r4, r5, pc}
 8007f48:	0802bbf4 	.word	0x0802bbf4

08007f4c <_ZN29Measurement_AccuratePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_AccuratePresenter() {}
 8007f4c:	4770      	bx	lr

08007f4e <_ZThn4_N29Measurement_AccuratePresenterD1Ev>:
 8007f4e:	3804      	subs	r0, #4
 8007f50:	4770      	bx	lr

08007f52 <_ZN29Measurement_AccuratePresenter10deactivateEv>:
}

void Measurement_AccuratePresenter::activate()
{

}
 8007f52:	4770      	bx	lr

08007f54 <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>:

}

void Measurement_AccuratePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8007f54:	68c0      	ldr	r0, [r0, #12]
 8007f56:	6803      	ldr	r3, [r0, #0]
 8007f58:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007f5a:	4718      	bx	r3

08007f5c <_ZThn4_N29Measurement_AccuratePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8007f5c:	f1a0 0004 	sub.w	r0, r0, #4
 8007f60:	f7ff bff8 	b.w	8007f54 <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>

08007f64 <_ZN29Measurement_AccuratePresenterD0Ev>:
    virtual ~Measurement_AccuratePresenter() {}
 8007f64:	b510      	push	{r4, lr}
 8007f66:	2110      	movs	r1, #16
 8007f68:	4604      	mov	r4, r0
 8007f6a:	f01f fb08 	bl	802757e <_ZdlPvj>
 8007f6e:	4620      	mov	r0, r4
 8007f70:	bd10      	pop	{r4, pc}

08007f72 <_ZThn4_N29Measurement_AccuratePresenterD0Ev>:
 8007f72:	f1a0 0004 	sub.w	r0, r0, #4
 8007f76:	e7f5      	b.n	8007f64 <_ZN29Measurement_AccuratePresenterD0Ev>

08007f78 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>:
Measurement_AccuratePresenter::Measurement_AccuratePresenter(Measurement_AccurateView& v)
 8007f78:	b510      	push	{r4, lr}
 8007f7a:	2200      	movs	r2, #0
 8007f7c:	6082      	str	r2, [r0, #8]
    : view(v)
 8007f7e:	4a04      	ldr	r2, [pc, #16]	; (8007f90 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView+0x18>)
 8007f80:	60c1      	str	r1, [r0, #12]
 8007f82:	f102 0408 	add.w	r4, r2, #8
 8007f86:	3224      	adds	r2, #36	; 0x24
 8007f88:	6004      	str	r4, [r0, #0]
 8007f8a:	6042      	str	r2, [r0, #4]
}
 8007f8c:	bd10      	pop	{r4, pc}
 8007f8e:	bf00      	nop
 8007f90:	0802beb8 	.word	0x0802beb8

08007f94 <_ZN24Measurement_AccurateView14tearDownScreenEv>:
}

void Measurement_AccurateView::tearDownScreen()
{
    Measurement_AccurateViewBase::tearDownScreen();
}
 8007f94:	4770      	bx	lr
	...

08007f98 <_ZN24Measurement_AccurateViewD1Ev>:

class Measurement_AccurateView : public Measurement_AccurateViewBase
{
public:
    Measurement_AccurateView();
    virtual ~Measurement_AccurateView() {}
 8007f98:	b510      	push	{r4, lr}
 8007f9a:	4b03      	ldr	r3, [pc, #12]	; (8007fa8 <_ZN24Measurement_AccurateViewD1Ev+0x10>)
 8007f9c:	6003      	str	r3, [r0, #0]
 8007f9e:	4604      	mov	r4, r0
 8007fa0:	f7fd fd94 	bl	8005acc <_ZN28Measurement_AccurateViewBaseD1Ev>
 8007fa4:	4620      	mov	r0, r4
 8007fa6:	bd10      	pop	{r4, pc}
 8007fa8:	0802bef0 	.word	0x0802bef0

08007fac <_ZN24Measurement_AccurateViewD0Ev>:
 8007fac:	b510      	push	{r4, lr}
 8007fae:	4604      	mov	r4, r0
 8007fb0:	f7ff fff2 	bl	8007f98 <_ZN24Measurement_AccurateViewD1Ev>
 8007fb4:	4620      	mov	r0, r4
 8007fb6:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8007fba:	f01f fae0 	bl	802757e <_ZdlPvj>
 8007fbe:	4620      	mov	r0, r4
 8007fc0:	bd10      	pop	{r4, pc}
	...

08007fc4 <_ZN24Measurement_AccurateViewC1Ev>:
Measurement_AccurateView::Measurement_AccurateView()
 8007fc4:	b510      	push	{r4, lr}
 8007fc6:	4604      	mov	r4, r0
 8007fc8:	f7fd fdba 	bl	8005b40 <_ZN28Measurement_AccurateViewBaseC1Ev>
 8007fcc:	4b01      	ldr	r3, [pc, #4]	; (8007fd4 <_ZN24Measurement_AccurateViewC1Ev+0x10>)
 8007fce:	6023      	str	r3, [r4, #0]
}
 8007fd0:	4620      	mov	r0, r4
 8007fd2:	bd10      	pop	{r4, pc}
 8007fd4:	0802bef0 	.word	0x0802bef0

08007fd8 <_ZN24Measurement_AccurateView11setupScreenEv>:
    Measurement_AccurateViewBase::setupScreen();
 8007fd8:	f7fd bd54 	b.w	8005a84 <_ZN28Measurement_AccurateViewBase11setupScreenEv>

08007fdc <_ZN24Measurement_AccurateView15setTimeoutValueEi>:

void Measurement_AccurateView::setTimeoutValue(int value)
{
 8007fdc:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8007fde:	4a0a      	ldr	r2, [pc, #40]	; (8008008 <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2c>)
{
 8007fe0:	4605      	mov	r5, r0
 8007fe2:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8007fe4:	460b      	mov	r3, r1
 8007fe6:	f500 7046 	add.w	r0, r0, #792	; 0x318
 8007fea:	2104      	movs	r1, #4
 8007fec:	f00f fecc 	bl	8017d88 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8007ff0:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8007ff4:	f00d fe4c 	bl	8015c90 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8007ff8:	b92c      	cbnz	r4, 8008006 <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2a>
 8007ffa:	f00c fd61 	bl	8014ac0 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8007ffe:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8008002:	f7fb bc4b 	b.w	800389c <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8008006:	bd38      	pop	{r3, r4, r5, pc}
 8008008:	0802bbf4 	.word	0x0802bbf4

0800800c <_ZN37Measurement_Accurate_DisplayPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_DisplayPresenter() {}
 800800c:	4770      	bx	lr

0800800e <_ZThn4_N37Measurement_Accurate_DisplayPresenterD1Ev>:
 800800e:	3804      	subs	r0, #4
 8008010:	4770      	bx	lr

08008012 <_ZN37Measurement_Accurate_DisplayPresenter10deactivateEv>:
}

void Measurement_Accurate_DisplayPresenter::activate()
{

}
 8008012:	4770      	bx	lr

08008014 <_ZN37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
}

void Measurement_Accurate_DisplayPresenter::setTimeoutValue(int value)
{

}
 8008014:	4770      	bx	lr

08008016 <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>:
 8008016:	b510      	push	{r4, lr}
 8008018:	2110      	movs	r1, #16
 800801a:	4604      	mov	r4, r0
 800801c:	f01f faaf 	bl	802757e <_ZdlPvj>
 8008020:	4620      	mov	r0, r4
 8008022:	bd10      	pop	{r4, pc}

08008024 <_ZThn4_N37Measurement_Accurate_DisplayPresenterD0Ev>:
 8008024:	f1a0 0004 	sub.w	r0, r0, #4
 8008028:	e7f5      	b.n	8008016 <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>

0800802a <_ZThn4_N37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
 800802a:	4770      	bx	lr

0800802c <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>:
Measurement_Accurate_DisplayPresenter::Measurement_Accurate_DisplayPresenter(Measurement_Accurate_DisplayView& v)
 800802c:	b510      	push	{r4, lr}
 800802e:	2200      	movs	r2, #0
 8008030:	6082      	str	r2, [r0, #8]
    : view(v)
 8008032:	4a04      	ldr	r2, [pc, #16]	; (8008044 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView+0x18>)
 8008034:	60c1      	str	r1, [r0, #12]
 8008036:	f102 0408 	add.w	r4, r2, #8
 800803a:	3224      	adds	r2, #36	; 0x24
 800803c:	6004      	str	r4, [r0, #0]
 800803e:	6042      	str	r2, [r0, #4]
}
 8008040:	bd10      	pop	{r4, pc}
 8008042:	bf00      	nop
 8008044:	0802bf20 	.word	0x0802bf20

08008048 <_ZN32Measurement_Accurate_DisplayView14tearDownScreenEv>:
}

void Measurement_Accurate_DisplayView::tearDownScreen()
{
    Measurement_Accurate_DisplayViewBase::tearDownScreen();
}
 8008048:	4770      	bx	lr
	...

0800804c <_ZN32Measurement_Accurate_DisplayViewD1Ev>:

class Measurement_Accurate_DisplayView : public Measurement_Accurate_DisplayViewBase
{
public:
    Measurement_Accurate_DisplayView();
    virtual ~Measurement_Accurate_DisplayView() {}
 800804c:	b510      	push	{r4, lr}
 800804e:	4b03      	ldr	r3, [pc, #12]	; (800805c <_ZN32Measurement_Accurate_DisplayViewD1Ev+0x10>)
 8008050:	6003      	str	r3, [r0, #0]
 8008052:	4604      	mov	r4, r0
 8008054:	f7fd ffc6 	bl	8005fe4 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>
 8008058:	4620      	mov	r0, r4
 800805a:	bd10      	pop	{r4, pc}
 800805c:	0802bf58 	.word	0x0802bf58

08008060 <_ZN32Measurement_Accurate_DisplayViewD0Ev>:
 8008060:	b510      	push	{r4, lr}
 8008062:	4604      	mov	r4, r0
 8008064:	f7ff fff2 	bl	800804c <_ZN32Measurement_Accurate_DisplayViewD1Ev>
 8008068:	4620      	mov	r0, r4
 800806a:	f241 31e4 	movw	r1, #5092	; 0x13e4
 800806e:	f01f fa86 	bl	802757e <_ZdlPvj>
 8008072:	4620      	mov	r0, r4
 8008074:	bd10      	pop	{r4, pc}
	...

08008078 <_ZN32Measurement_Accurate_DisplayViewC1Ev>:
Measurement_Accurate_DisplayView::Measurement_Accurate_DisplayView()
 8008078:	b510      	push	{r4, lr}
 800807a:	4604      	mov	r4, r0
 800807c:	f7fd ffd2 	bl	8006024 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>
 8008080:	4b01      	ldr	r3, [pc, #4]	; (8008088 <_ZN32Measurement_Accurate_DisplayViewC1Ev+0x10>)
 8008082:	6023      	str	r3, [r4, #0]
}
 8008084:	4620      	mov	r0, r4
 8008086:	bd10      	pop	{r4, pc}
 8008088:	0802bf58 	.word	0x0802bf58

0800808c <_ZN32Measurement_Accurate_DisplayView11setupScreenEv>:
    Measurement_Accurate_DisplayViewBase::setupScreen();
 800808c:	f7fd bf9b 	b.w	8005fc6 <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>

08008090 <_ZN39Measurement_Accurate_Display_2PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_Display_2Presenter() {}
 8008090:	4770      	bx	lr

08008092 <_ZThn4_N39Measurement_Accurate_Display_2PresenterD1Ev>:
 8008092:	3804      	subs	r0, #4
 8008094:	4770      	bx	lr

08008096 <_ZN39Measurement_Accurate_Display_2Presenter10deactivateEv>:
}

void Measurement_Accurate_Display_2Presenter::activate()
{

}
 8008096:	4770      	bx	lr

08008098 <_ZN39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
}

void Measurement_Accurate_Display_2Presenter::setTimeoutValue(int value)
{

}
 8008098:	4770      	bx	lr

0800809a <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>:
 800809a:	b510      	push	{r4, lr}
 800809c:	2110      	movs	r1, #16
 800809e:	4604      	mov	r4, r0
 80080a0:	f01f fa6d 	bl	802757e <_ZdlPvj>
 80080a4:	4620      	mov	r0, r4
 80080a6:	bd10      	pop	{r4, pc}

080080a8 <_ZThn4_N39Measurement_Accurate_Display_2PresenterD0Ev>:
 80080a8:	f1a0 0004 	sub.w	r0, r0, #4
 80080ac:	e7f5      	b.n	800809a <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>

080080ae <_ZThn4_N39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
 80080ae:	4770      	bx	lr

080080b0 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>:
Measurement_Accurate_Display_2Presenter::Measurement_Accurate_Display_2Presenter(Measurement_Accurate_Display_2View& v)
 80080b0:	b510      	push	{r4, lr}
 80080b2:	2200      	movs	r2, #0
 80080b4:	6082      	str	r2, [r0, #8]
    : view(v)
 80080b6:	4a04      	ldr	r2, [pc, #16]	; (80080c8 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View+0x18>)
 80080b8:	60c1      	str	r1, [r0, #12]
 80080ba:	f102 0408 	add.w	r4, r2, #8
 80080be:	3224      	adds	r2, #36	; 0x24
 80080c0:	6004      	str	r4, [r0, #0]
 80080c2:	6042      	str	r2, [r0, #4]
}
 80080c4:	bd10      	pop	{r4, pc}
 80080c6:	bf00      	nop
 80080c8:	0802bf84 	.word	0x0802bf84

080080cc <_ZN34Measurement_Accurate_Display_2View14tearDownScreenEv>:
}

void Measurement_Accurate_Display_2View::tearDownScreen()
{
    Measurement_Accurate_Display_2ViewBase::tearDownScreen();
}
 80080cc:	4770      	bx	lr
	...

080080d0 <_ZN34Measurement_Accurate_Display_2ViewD1Ev>:

class Measurement_Accurate_Display_2View : public Measurement_Accurate_Display_2ViewBase
{
public:
    Measurement_Accurate_Display_2View();
    virtual ~Measurement_Accurate_Display_2View() {}
 80080d0:	b510      	push	{r4, lr}
 80080d2:	4b03      	ldr	r3, [pc, #12]	; (80080e0 <_ZN34Measurement_Accurate_Display_2ViewD1Ev+0x10>)
 80080d4:	6003      	str	r3, [r0, #0]
 80080d6:	4604      	mov	r4, r0
 80080d8:	f7fe f948 	bl	800636c <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>
 80080dc:	4620      	mov	r0, r4
 80080de:	bd10      	pop	{r4, pc}
 80080e0:	0802bfbc 	.word	0x0802bfbc

080080e4 <_ZN34Measurement_Accurate_Display_2ViewD0Ev>:
 80080e4:	b510      	push	{r4, lr}
 80080e6:	4604      	mov	r4, r0
 80080e8:	f7ff fff2 	bl	80080d0 <_ZN34Measurement_Accurate_Display_2ViewD1Ev>
 80080ec:	4620      	mov	r0, r4
 80080ee:	f241 31e4 	movw	r1, #5092	; 0x13e4
 80080f2:	f01f fa44 	bl	802757e <_ZdlPvj>
 80080f6:	4620      	mov	r0, r4
 80080f8:	bd10      	pop	{r4, pc}
	...

080080fc <_ZN34Measurement_Accurate_Display_2ViewC1Ev>:
Measurement_Accurate_Display_2View::Measurement_Accurate_Display_2View()
 80080fc:	b510      	push	{r4, lr}
 80080fe:	4604      	mov	r4, r0
 8008100:	f7fe f954 	bl	80063ac <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>
 8008104:	4b01      	ldr	r3, [pc, #4]	; (800810c <_ZN34Measurement_Accurate_Display_2ViewC1Ev+0x10>)
 8008106:	6023      	str	r3, [r4, #0]
}
 8008108:	4620      	mov	r0, r4
 800810a:	bd10      	pop	{r4, pc}
 800810c:	0802bfbc 	.word	0x0802bfbc

08008110 <_ZN34Measurement_Accurate_Display_2View11setupScreenEv>:
    Measurement_Accurate_Display_2ViewBase::setupScreen();
 8008110:	f7fe b91d 	b.w	800634e <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>

08008114 <_ZN27Measurement_SinglePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_SinglePresenter() {}
 8008114:	4770      	bx	lr

08008116 <_ZThn4_N27Measurement_SinglePresenterD1Ev>:
 8008116:	3804      	subs	r0, #4
 8008118:	4770      	bx	lr

0800811a <_ZN27Measurement_SinglePresenter10deactivateEv>:
}

void Measurement_SinglePresenter::activate()
{

}
 800811a:	4770      	bx	lr

0800811c <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>:

}

void Measurement_SinglePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 800811c:	68c0      	ldr	r0, [r0, #12]
 800811e:	6803      	ldr	r3, [r0, #0]
 8008120:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008122:	4718      	bx	r3

08008124 <_ZThn4_N27Measurement_SinglePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008124:	f1a0 0004 	sub.w	r0, r0, #4
 8008128:	f7ff bff8 	b.w	800811c <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>

0800812c <_ZN27Measurement_SinglePresenterD0Ev>:
    virtual ~Measurement_SinglePresenter() {}
 800812c:	b510      	push	{r4, lr}
 800812e:	2110      	movs	r1, #16
 8008130:	4604      	mov	r4, r0
 8008132:	f01f fa24 	bl	802757e <_ZdlPvj>
 8008136:	4620      	mov	r0, r4
 8008138:	bd10      	pop	{r4, pc}

0800813a <_ZThn4_N27Measurement_SinglePresenterD0Ev>:
 800813a:	f1a0 0004 	sub.w	r0, r0, #4
 800813e:	e7f5      	b.n	800812c <_ZN27Measurement_SinglePresenterD0Ev>

08008140 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>:
Measurement_SinglePresenter::Measurement_SinglePresenter(Measurement_SingleView& v)
 8008140:	b510      	push	{r4, lr}
 8008142:	2200      	movs	r2, #0
 8008144:	6082      	str	r2, [r0, #8]
    : view(v)
 8008146:	4a04      	ldr	r2, [pc, #16]	; (8008158 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView+0x18>)
 8008148:	60c1      	str	r1, [r0, #12]
 800814a:	f102 0408 	add.w	r4, r2, #8
 800814e:	3224      	adds	r2, #36	; 0x24
 8008150:	6004      	str	r4, [r0, #0]
 8008152:	6042      	str	r2, [r0, #4]
}
 8008154:	bd10      	pop	{r4, pc}
 8008156:	bf00      	nop
 8008158:	0802bfe8 	.word	0x0802bfe8

0800815c <_ZN22Measurement_SingleView14tearDownScreenEv>:
}

void Measurement_SingleView::tearDownScreen()
{
    Measurement_SingleViewBase::tearDownScreen();
}
 800815c:	4770      	bx	lr
	...

08008160 <_ZN22Measurement_SingleViewD1Ev>:

class Measurement_SingleView : public Measurement_SingleViewBase
{
public:
    Measurement_SingleView();
    virtual ~Measurement_SingleView() {}
 8008160:	b510      	push	{r4, lr}
 8008162:	4b03      	ldr	r3, [pc, #12]	; (8008170 <_ZN22Measurement_SingleViewD1Ev+0x10>)
 8008164:	6003      	str	r3, [r0, #0]
 8008166:	4604      	mov	r4, r0
 8008168:	f7fe fab6 	bl	80066d8 <_ZN26Measurement_SingleViewBaseD1Ev>
 800816c:	4620      	mov	r0, r4
 800816e:	bd10      	pop	{r4, pc}
 8008170:	0802c020 	.word	0x0802c020

08008174 <_ZN22Measurement_SingleViewD0Ev>:
 8008174:	b510      	push	{r4, lr}
 8008176:	4604      	mov	r4, r0
 8008178:	f7ff fff2 	bl	8008160 <_ZN22Measurement_SingleViewD1Ev>
 800817c:	4620      	mov	r0, r4
 800817e:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8008182:	f01f f9fc 	bl	802757e <_ZdlPvj>
 8008186:	4620      	mov	r0, r4
 8008188:	bd10      	pop	{r4, pc}
	...

0800818c <_ZN22Measurement_SingleViewC1Ev>:
Measurement_SingleView::Measurement_SingleView()
 800818c:	b510      	push	{r4, lr}
 800818e:	4604      	mov	r4, r0
 8008190:	f7fe fadc 	bl	800674c <_ZN26Measurement_SingleViewBaseC1Ev>
 8008194:	4b01      	ldr	r3, [pc, #4]	; (800819c <_ZN22Measurement_SingleViewC1Ev+0x10>)
 8008196:	6023      	str	r3, [r4, #0]
}
 8008198:	4620      	mov	r0, r4
 800819a:	bd10      	pop	{r4, pc}
 800819c:	0802c020 	.word	0x0802c020

080081a0 <_ZN22Measurement_SingleView11setupScreenEv>:
    Measurement_SingleViewBase::setupScreen();
 80081a0:	f7fe ba76 	b.w	8006690 <_ZN26Measurement_SingleViewBase11setupScreenEv>

080081a4 <_ZN22Measurement_SingleView15setTimeoutValueEi>:

void Measurement_SingleView::setTimeoutValue(int value)
{
 80081a4:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 80081a6:	4a0a      	ldr	r2, [pc, #40]	; (80081d0 <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2c>)
{
 80081a8:	4605      	mov	r5, r0
 80081aa:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 80081ac:	460b      	mov	r3, r1
 80081ae:	f500 7046 	add.w	r0, r0, #792	; 0x318
 80081b2:	2104      	movs	r1, #4
 80081b4:	f00f fde8 	bl	8017d88 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 80081b8:	f105 0098 	add.w	r0, r5, #152	; 0x98
 80081bc:	f00d fd68 	bl	8015c90 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 80081c0:	b92c      	cbnz	r4, 80081ce <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2a>
 80081c2:	f00c fc7d 	bl	8014ac0 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 80081c6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 80081ca:	f7fb bb67 	b.w	800389c <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 80081ce:	bd38      	pop	{r3, r4, r5, pc}
 80081d0:	0802bbf4 	.word	0x0802bbf4

080081d4 <_ZN38Measurement_Single_Display_1PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_1PPresenter() {}
 80081d4:	4770      	bx	lr

080081d6 <_ZThn4_N38Measurement_Single_Display_1PPresenterD1Ev>:
 80081d6:	3804      	subs	r0, #4
 80081d8:	4770      	bx	lr

080081da <_ZN38Measurement_Single_Display_1PPresenter10deactivateEv>:
}

void Measurement_Single_Display_1PPresenter::activate()
{

}
 80081da:	4770      	bx	lr

080081dc <_ZN38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_1PPresenter::setTimeoutValue(int value)
{

}
 80081dc:	4770      	bx	lr

080081de <_ZN38Measurement_Single_Display_1PPresenterD0Ev>:
 80081de:	b510      	push	{r4, lr}
 80081e0:	2110      	movs	r1, #16
 80081e2:	4604      	mov	r4, r0
 80081e4:	f01f f9cb 	bl	802757e <_ZdlPvj>
 80081e8:	4620      	mov	r0, r4
 80081ea:	bd10      	pop	{r4, pc}

080081ec <_ZThn4_N38Measurement_Single_Display_1PPresenterD0Ev>:
 80081ec:	f1a0 0004 	sub.w	r0, r0, #4
 80081f0:	e7f5      	b.n	80081de <_ZN38Measurement_Single_Display_1PPresenterD0Ev>

080081f2 <_ZThn4_N38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
 80081f2:	4770      	bx	lr

080081f4 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>:
Measurement_Single_Display_1PPresenter::Measurement_Single_Display_1PPresenter(Measurement_Single_Display_1PView& v)
 80081f4:	b510      	push	{r4, lr}
 80081f6:	2200      	movs	r2, #0
 80081f8:	6082      	str	r2, [r0, #8]
    : view(v)
 80081fa:	4a04      	ldr	r2, [pc, #16]	; (800820c <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView+0x18>)
 80081fc:	60c1      	str	r1, [r0, #12]
 80081fe:	f102 0408 	add.w	r4, r2, #8
 8008202:	3224      	adds	r2, #36	; 0x24
 8008204:	6004      	str	r4, [r0, #0]
 8008206:	6042      	str	r2, [r0, #4]
}
 8008208:	bd10      	pop	{r4, pc}
 800820a:	bf00      	nop
 800820c:	0802c050 	.word	0x0802c050

08008210 <_ZN33Measurement_Single_Display_1PView14tearDownScreenEv>:
}

void Measurement_Single_Display_1PView::tearDownScreen()
{
    Measurement_Single_Display_1PViewBase::tearDownScreen();
}
 8008210:	4770      	bx	lr

08008212 <_ZN33Measurement_Single_Display_1PView7testGuiEv>:

void Measurement_Single_Display_1PView::testGui()
{
	int test = 	0;

	test = updateGUI_test();
 8008212:	f7f9 b8e9 	b.w	80013e8 <updateGUI_test>
	...

08008218 <_ZN33Measurement_Single_Display_1PViewD1Ev>:

class Measurement_Single_Display_1PView : public Measurement_Single_Display_1PViewBase
{
public:
    Measurement_Single_Display_1PView();
    virtual ~Measurement_Single_Display_1PView() {}
 8008218:	b510      	push	{r4, lr}
 800821a:	4b03      	ldr	r3, [pc, #12]	; (8008228 <_ZN33Measurement_Single_Display_1PViewD1Ev+0x10>)
 800821c:	6003      	str	r3, [r0, #0]
 800821e:	4604      	mov	r4, r0
 8008220:	f7fe fcf0 	bl	8006c04 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>
 8008224:	4620      	mov	r0, r4
 8008226:	bd10      	pop	{r4, pc}
 8008228:	0802c088 	.word	0x0802c088

0800822c <_ZN33Measurement_Single_Display_1PViewD0Ev>:
 800822c:	b510      	push	{r4, lr}
 800822e:	4604      	mov	r4, r0
 8008230:	f7ff fff2 	bl	8008218 <_ZN33Measurement_Single_Display_1PViewD1Ev>
 8008234:	4620      	mov	r0, r4
 8008236:	f241 31e4 	movw	r1, #5092	; 0x13e4
 800823a:	f01f f9a0 	bl	802757e <_ZdlPvj>
 800823e:	4620      	mov	r0, r4
 8008240:	bd10      	pop	{r4, pc}
	...

08008244 <_ZN33Measurement_Single_Display_1PViewC1Ev>:
Measurement_Single_Display_1PView::Measurement_Single_Display_1PView()
 8008244:	b510      	push	{r4, lr}
 8008246:	4604      	mov	r4, r0
 8008248:	f7fe fcfc 	bl	8006c44 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>
 800824c:	4b01      	ldr	r3, [pc, #4]	; (8008254 <_ZN33Measurement_Single_Display_1PViewC1Ev+0x10>)
 800824e:	6023      	str	r3, [r4, #0]
}
 8008250:	4620      	mov	r0, r4
 8008252:	bd10      	pop	{r4, pc}
 8008254:	0802c088 	.word	0x0802c088

08008258 <_ZN33Measurement_Single_Display_1PView11setupScreenEv>:
    Measurement_Single_Display_1PViewBase::setupScreen();
 8008258:	f7fe bcc3 	b.w	8006be2 <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>

0800825c <_ZN38Measurement_Single_Display_3PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_3PPresenter() {}
 800825c:	4770      	bx	lr

0800825e <_ZThn4_N38Measurement_Single_Display_3PPresenterD1Ev>:
 800825e:	3804      	subs	r0, #4
 8008260:	4770      	bx	lr

08008262 <_ZN38Measurement_Single_Display_3PPresenter10deactivateEv>:
}

void Measurement_Single_Display_3PPresenter::activate()
{

}
 8008262:	4770      	bx	lr

08008264 <_ZN38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_3PPresenter::setTimeoutValue(int value)
{

}
 8008264:	4770      	bx	lr

08008266 <_ZN38Measurement_Single_Display_3PPresenterD0Ev>:
 8008266:	b510      	push	{r4, lr}
 8008268:	2110      	movs	r1, #16
 800826a:	4604      	mov	r4, r0
 800826c:	f01f f987 	bl	802757e <_ZdlPvj>
 8008270:	4620      	mov	r0, r4
 8008272:	bd10      	pop	{r4, pc}

08008274 <_ZThn4_N38Measurement_Single_Display_3PPresenterD0Ev>:
 8008274:	f1a0 0004 	sub.w	r0, r0, #4
 8008278:	e7f5      	b.n	8008266 <_ZN38Measurement_Single_Display_3PPresenterD0Ev>

0800827a <_ZThn4_N38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
 800827a:	4770      	bx	lr

0800827c <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>:
Measurement_Single_Display_3PPresenter::Measurement_Single_Display_3PPresenter(Measurement_Single_Display_3PView& v)
 800827c:	b510      	push	{r4, lr}
 800827e:	2200      	movs	r2, #0
 8008280:	6082      	str	r2, [r0, #8]
    : view(v)
 8008282:	4a04      	ldr	r2, [pc, #16]	; (8008294 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView+0x18>)
 8008284:	60c1      	str	r1, [r0, #12]
 8008286:	f102 0408 	add.w	r4, r2, #8
 800828a:	3224      	adds	r2, #36	; 0x24
 800828c:	6004      	str	r4, [r0, #0]
 800828e:	6042      	str	r2, [r0, #4]
}
 8008290:	bd10      	pop	{r4, pc}
 8008292:	bf00      	nop
 8008294:	0802c0b8 	.word	0x0802c0b8

08008298 <_ZN33Measurement_Single_Display_3PView14tearDownScreenEv>:
}

void Measurement_Single_Display_3PView::tearDownScreen()
{
    Measurement_Single_Display_3PViewBase::tearDownScreen();
}
 8008298:	4770      	bx	lr
	...

0800829c <_ZN33Measurement_Single_Display_3PViewD1Ev>:

class Measurement_Single_Display_3PView : public Measurement_Single_Display_3PViewBase
{
public:
    Measurement_Single_Display_3PView();
    virtual ~Measurement_Single_Display_3PView() {}
 800829c:	b510      	push	{r4, lr}
 800829e:	4b03      	ldr	r3, [pc, #12]	; (80082ac <_ZN33Measurement_Single_Display_3PViewD1Ev+0x10>)
 80082a0:	6003      	str	r3, [r0, #0]
 80082a2:	4604      	mov	r4, r0
 80082a4:	f7fe fe7a 	bl	8006f9c <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>
 80082a8:	4620      	mov	r0, r4
 80082aa:	bd10      	pop	{r4, pc}
 80082ac:	0802c0f0 	.word	0x0802c0f0

080082b0 <_ZN33Measurement_Single_Display_3PViewD0Ev>:
 80082b0:	b510      	push	{r4, lr}
 80082b2:	4604      	mov	r4, r0
 80082b4:	f7ff fff2 	bl	800829c <_ZN33Measurement_Single_Display_3PViewD1Ev>
 80082b8:	4620      	mov	r0, r4
 80082ba:	f241 31e4 	movw	r1, #5092	; 0x13e4
 80082be:	f01f f95e 	bl	802757e <_ZdlPvj>
 80082c2:	4620      	mov	r0, r4
 80082c4:	bd10      	pop	{r4, pc}
	...

080082c8 <_ZN33Measurement_Single_Display_3PViewC1Ev>:
Measurement_Single_Display_3PView::Measurement_Single_Display_3PView()
 80082c8:	b510      	push	{r4, lr}
 80082ca:	4604      	mov	r4, r0
 80082cc:	f7fe fe86 	bl	8006fdc <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>
 80082d0:	4b01      	ldr	r3, [pc, #4]	; (80082d8 <_ZN33Measurement_Single_Display_3PViewC1Ev+0x10>)
 80082d2:	6023      	str	r3, [r4, #0]
}
 80082d4:	4620      	mov	r0, r4
 80082d6:	bd10      	pop	{r4, pc}
 80082d8:	0802c0f0 	.word	0x0802c0f0

080082dc <_ZN33Measurement_Single_Display_3PView11setupScreenEv>:
    Measurement_Single_Display_3PViewBase::setupScreen();
 80082dc:	f7fe be4d 	b.w	8006f7a <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>

080082e0 <_ZN5ModelC1Ev>:
}
#endif



Model::Model() : modelListener(0), Timeout_Value(60)
 80082e0:	2100      	movs	r1, #0
 80082e2:	223c      	movs	r2, #60	; 0x3c
 80082e4:	e9c0 1200 	strd	r1, r2, [r0]
{

}
 80082e8:	4770      	bx	lr
	...

080082ec <_ZN5Model4tickEv>:

void Model::tick()
{
 80082ec:	b570      	push	{r4, r5, r6, lr}
#ifndef SIMULATOR

	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 80082ee:	4d0a      	ldr	r5, [pc, #40]	; (8008318 <_ZN5Model4tickEv+0x2c>)
{
 80082f0:	4604      	mov	r4, r0
	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 80082f2:	6828      	ldr	r0, [r5, #0]
 80082f4:	f004 fb44 	bl	800c980 <osMessageQueueGetCount>
 80082f8:	b168      	cbz	r0, 8008316 <_ZN5Model4tickEv+0x2a>
	{
		if(osMessageQueueGet(TimeoutQueueHandle, &Timeout_Value, 0, 0) == osOK)
 80082fa:	2300      	movs	r3, #0
 80082fc:	6828      	ldr	r0, [r5, #0]
 80082fe:	461a      	mov	r2, r3
 8008300:	1d21      	adds	r1, r4, #4
 8008302:	f004 fb09 	bl	800c918 <osMessageQueueGet>
 8008306:	b930      	cbnz	r0, 8008316 <_ZN5Model4tickEv+0x2a>
		{
			modelListener->setTimeoutValue(Timeout_Value);
 8008308:	6820      	ldr	r0, [r4, #0]
 800830a:	6861      	ldr	r1, [r4, #4]
 800830c:	6803      	ldr	r3, [r0, #0]
		}
	}
#endif
}
 800830e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			modelListener->setTimeoutValue(Timeout_Value);
 8008312:	689b      	ldr	r3, [r3, #8]
 8008314:	4718      	bx	r3
}
 8008316:	bd70      	pop	{r4, r5, r6, pc}
 8008318:	20002620 	.word	0x20002620

0800831c <_ZN21Project_InfoPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Project_InfoPresenter() {}
 800831c:	4770      	bx	lr

0800831e <_ZThn4_N21Project_InfoPresenterD1Ev>:
 800831e:	3804      	subs	r0, #4
 8008320:	4770      	bx	lr

08008322 <_ZN21Project_InfoPresenter10deactivateEv>:
}

void Project_InfoPresenter::activate()
{

}
 8008322:	4770      	bx	lr

08008324 <_ZN21Project_InfoPresenter15setTimeoutValueEi>:

}

void Project_InfoPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008324:	68c0      	ldr	r0, [r0, #12]
 8008326:	6803      	ldr	r3, [r0, #0]
 8008328:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800832a:	4718      	bx	r3

0800832c <_ZThn4_N21Project_InfoPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 800832c:	f1a0 0004 	sub.w	r0, r0, #4
 8008330:	f7ff bff8 	b.w	8008324 <_ZN21Project_InfoPresenter15setTimeoutValueEi>

08008334 <_ZN21Project_InfoPresenterD0Ev>:
    virtual ~Project_InfoPresenter() {}
 8008334:	b510      	push	{r4, lr}
 8008336:	2110      	movs	r1, #16
 8008338:	4604      	mov	r4, r0
 800833a:	f01f f920 	bl	802757e <_ZdlPvj>
 800833e:	4620      	mov	r0, r4
 8008340:	bd10      	pop	{r4, pc}

08008342 <_ZThn4_N21Project_InfoPresenterD0Ev>:
 8008342:	f1a0 0004 	sub.w	r0, r0, #4
 8008346:	e7f5      	b.n	8008334 <_ZN21Project_InfoPresenterD0Ev>

08008348 <_ZN21Project_InfoPresenterC1ER16Project_InfoView>:
Project_InfoPresenter::Project_InfoPresenter(Project_InfoView& v)
 8008348:	b510      	push	{r4, lr}
 800834a:	2200      	movs	r2, #0
 800834c:	6082      	str	r2, [r0, #8]
    : view(v)
 800834e:	4a04      	ldr	r2, [pc, #16]	; (8008360 <_ZN21Project_InfoPresenterC1ER16Project_InfoView+0x18>)
 8008350:	60c1      	str	r1, [r0, #12]
 8008352:	f102 0408 	add.w	r4, r2, #8
 8008356:	3224      	adds	r2, #36	; 0x24
 8008358:	6004      	str	r4, [r0, #0]
 800835a:	6042      	str	r2, [r0, #4]
}
 800835c:	bd10      	pop	{r4, pc}
 800835e:	bf00      	nop
 8008360:	0802c11c 	.word	0x0802c11c

08008364 <_ZN16Project_InfoView14tearDownScreenEv>:
}

void Project_InfoView::tearDownScreen()
{
    Project_InfoViewBase::tearDownScreen();
}
 8008364:	4770      	bx	lr
	...

08008368 <_ZN16Project_InfoViewD1Ev>:

class Project_InfoView : public Project_InfoViewBase
{
public:
    Project_InfoView();
    virtual ~Project_InfoView() {}
 8008368:	b510      	push	{r4, lr}
 800836a:	4b03      	ldr	r3, [pc, #12]	; (8008378 <_ZN16Project_InfoViewD1Ev+0x10>)
 800836c:	6003      	str	r3, [r0, #0]
 800836e:	4604      	mov	r4, r0
 8008370:	f7fe ffce 	bl	8007310 <_ZN20Project_InfoViewBaseD1Ev>
 8008374:	4620      	mov	r0, r4
 8008376:	bd10      	pop	{r4, pc}
 8008378:	0802c154 	.word	0x0802c154

0800837c <_ZN16Project_InfoViewD0Ev>:
 800837c:	b510      	push	{r4, lr}
 800837e:	4604      	mov	r4, r0
 8008380:	f7ff fff2 	bl	8008368 <_ZN16Project_InfoViewD1Ev>
 8008384:	4620      	mov	r0, r4
 8008386:	f241 01b0 	movw	r1, #4272	; 0x10b0
 800838a:	f01f f8f8 	bl	802757e <_ZdlPvj>
 800838e:	4620      	mov	r0, r4
 8008390:	bd10      	pop	{r4, pc}
	...

08008394 <_ZN16Project_InfoViewC1Ev>:
Project_InfoView::Project_InfoView()
 8008394:	b510      	push	{r4, lr}
 8008396:	4604      	mov	r4, r0
 8008398:	f7fe ffe2 	bl	8007360 <_ZN20Project_InfoViewBaseC1Ev>
 800839c:	4b01      	ldr	r3, [pc, #4]	; (80083a4 <_ZN16Project_InfoViewC1Ev+0x10>)
 800839e:	6023      	str	r3, [r4, #0]
}
 80083a0:	4620      	mov	r0, r4
 80083a2:	bd10      	pop	{r4, pc}
 80083a4:	0802c154 	.word	0x0802c154

080083a8 <_ZN16Project_InfoView11setupScreenEv>:
    Project_InfoViewBase::setupScreen();
 80083a8:	f7fe bf8e 	b.w	80072c8 <_ZN20Project_InfoViewBase11setupScreenEv>

080083ac <_ZN16Project_InfoView15setTimeoutValueEi>:

void Project_InfoView::setTimeoutValue(int value)
{
 80083ac:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 80083ae:	4a0a      	ldr	r2, [pc, #40]	; (80083d8 <_ZN16Project_InfoView15setTimeoutValueEi+0x2c>)
{
 80083b0:	4605      	mov	r5, r0
 80083b2:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 80083b4:	460b      	mov	r3, r1
 80083b6:	f500 7022 	add.w	r0, r0, #648	; 0x288
 80083ba:	2104      	movs	r1, #4
 80083bc:	f00f fce4 	bl	8017d88 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 80083c0:	f105 0098 	add.w	r0, r5, #152	; 0x98
 80083c4:	f00d fc64 	bl	8015c90 <_ZNK8touchgfx8Drawable10invalidateEv>

	if (value == 0) {
 80083c8:	b92c      	cbnz	r4, 80083d6 <_ZN16Project_InfoView15setTimeoutValueEi+0x2a>
 80083ca:	f00c fb79 	bl	8014ac0 <_ZN8touchgfx11Application11getInstanceEv>
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 80083ce:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 80083d2:	f7fb ba63 	b.w	800389c <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 80083d6:	bd38      	pop	{r3, r4, r5, pc}
 80083d8:	0802bbf4 	.word	0x0802bbf4

080083dc <_ZN21Shutting_OffPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Shutting_OffPresenter() {}
 80083dc:	4770      	bx	lr

080083de <_ZThn4_N21Shutting_OffPresenterD1Ev>:
 80083de:	3804      	subs	r0, #4
 80083e0:	4770      	bx	lr

080083e2 <_ZN21Shutting_OffPresenter10deactivateEv>:
}

void Shutting_OffPresenter::activate()
{

}
 80083e2:	4770      	bx	lr

080083e4 <_ZN21Shutting_OffPresenter15setTimeoutValueEi>:
}

void Shutting_OffPresenter::setTimeoutValue(int value)
{

}
 80083e4:	4770      	bx	lr

080083e6 <_ZN21Shutting_OffPresenterD0Ev>:
 80083e6:	b510      	push	{r4, lr}
 80083e8:	2110      	movs	r1, #16
 80083ea:	4604      	mov	r4, r0
 80083ec:	f01f f8c7 	bl	802757e <_ZdlPvj>
 80083f0:	4620      	mov	r0, r4
 80083f2:	bd10      	pop	{r4, pc}

080083f4 <_ZThn4_N21Shutting_OffPresenterD0Ev>:
 80083f4:	f1a0 0004 	sub.w	r0, r0, #4
 80083f8:	e7f5      	b.n	80083e6 <_ZN21Shutting_OffPresenterD0Ev>

080083fa <_ZThn4_N21Shutting_OffPresenter15setTimeoutValueEi>:
 80083fa:	4770      	bx	lr

080083fc <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>:
Shutting_OffPresenter::Shutting_OffPresenter(Shutting_OffView& v)
 80083fc:	b510      	push	{r4, lr}
 80083fe:	2200      	movs	r2, #0
 8008400:	6082      	str	r2, [r0, #8]
    : view(v)
 8008402:	4a04      	ldr	r2, [pc, #16]	; (8008414 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView+0x18>)
 8008404:	60c1      	str	r1, [r0, #12]
 8008406:	f102 0408 	add.w	r4, r2, #8
 800840a:	3224      	adds	r2, #36	; 0x24
 800840c:	6004      	str	r4, [r0, #0]
 800840e:	6042      	str	r2, [r0, #4]
}
 8008410:	bd10      	pop	{r4, pc}
 8008412:	bf00      	nop
 8008414:	0802c184 	.word	0x0802c184

08008418 <_ZN16Shutting_OffView14tearDownScreenEv>:
}

void Shutting_OffView::tearDownScreen()
{
    Shutting_OffViewBase::tearDownScreen();
}
 8008418:	4770      	bx	lr
	...

0800841c <_ZN16Shutting_OffViewD1Ev>:

class Shutting_OffView : public Shutting_OffViewBase
{
public:
    Shutting_OffView();
    virtual ~Shutting_OffView() {}
 800841c:	b510      	push	{r4, lr}
 800841e:	4b03      	ldr	r3, [pc, #12]	; (800842c <_ZN16Shutting_OffViewD1Ev+0x10>)
 8008420:	6003      	str	r3, [r0, #0]
 8008422:	4604      	mov	r4, r0
 8008424:	f7ff f96c 	bl	8007700 <_ZN20Shutting_OffViewBaseD1Ev>
 8008428:	4620      	mov	r0, r4
 800842a:	bd10      	pop	{r4, pc}
 800842c:	0802c1bc 	.word	0x0802c1bc

08008430 <_ZN16Shutting_OffViewD0Ev>:
 8008430:	b510      	push	{r4, lr}
 8008432:	4604      	mov	r4, r0
 8008434:	f7ff fff2 	bl	800841c <_ZN16Shutting_OffViewD1Ev>
 8008438:	4620      	mov	r0, r4
 800843a:	2198      	movs	r1, #152	; 0x98
 800843c:	f01f f89f 	bl	802757e <_ZdlPvj>
 8008440:	4620      	mov	r0, r4
 8008442:	bd10      	pop	{r4, pc}

08008444 <_ZN16Shutting_OffViewC1Ev>:
Shutting_OffView::Shutting_OffView()
 8008444:	b510      	push	{r4, lr}
 8008446:	4604      	mov	r4, r0
 8008448:	f7ff f964 	bl	8007714 <_ZN20Shutting_OffViewBaseC1Ev>
 800844c:	4b01      	ldr	r3, [pc, #4]	; (8008454 <_ZN16Shutting_OffViewC1Ev+0x10>)
 800844e:	6023      	str	r3, [r4, #0]
}
 8008450:	4620      	mov	r0, r4
 8008452:	bd10      	pop	{r4, pc}
 8008454:	0802c1bc 	.word	0x0802c1bc

08008458 <_ZN16Shutting_OffView11setupScreenEv>:
    Shutting_OffViewBase::setupScreen();
 8008458:	f7ff b953 	b.w	8007702 <_ZN20Shutting_OffViewBase11setupScreenEv>

0800845c <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 800845c:	20f0      	movs	r0, #240	; 0xf0
 800845e:	4770      	bx	lr

08008460 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 8008460:	f44f 70a0 	mov.w	r0, #320	; 0x140
 8008464:	4770      	bx	lr
 8008466:	bf00      	nop

08008468 <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 8008468:	2029      	movs	r0, #41	; 0x29
 800846a:	f7f9 bb11 	b.w	8001a90 <LCD_IO_WriteReg>
 800846e:	bf00      	nop

08008470 <ili9341_DisplayOff>:
 8008470:	2028      	movs	r0, #40	; 0x28
 8008472:	f7f9 bb0d 	b.w	8001a90 <LCD_IO_WriteReg>
 8008476:	bf00      	nop

08008478 <ili9341_Init>:
{
 8008478:	b508      	push	{r3, lr}
  LCD_IO_Init();
 800847a:	f7f9 facf 	bl	8001a1c <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 800847e:	20ca      	movs	r0, #202	; 0xca
 8008480:	f7f9 fb06 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008484:	20c3      	movs	r0, #195	; 0xc3
 8008486:	f7f9 fad9 	bl	8001a3c <LCD_IO_WriteData>
 800848a:	2008      	movs	r0, #8
 800848c:	f7f9 fad6 	bl	8001a3c <LCD_IO_WriteData>
 8008490:	2050      	movs	r0, #80	; 0x50
 8008492:	f7f9 fad3 	bl	8001a3c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008496:	20cf      	movs	r0, #207	; 0xcf
 8008498:	f7f9 fafa 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800849c:	2000      	movs	r0, #0
 800849e:	f7f9 facd 	bl	8001a3c <LCD_IO_WriteData>
 80084a2:	20c1      	movs	r0, #193	; 0xc1
 80084a4:	f7f9 faca 	bl	8001a3c <LCD_IO_WriteData>
 80084a8:	2030      	movs	r0, #48	; 0x30
 80084aa:	f7f9 fac7 	bl	8001a3c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80084ae:	20ed      	movs	r0, #237	; 0xed
 80084b0:	f7f9 faee 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80084b4:	2064      	movs	r0, #100	; 0x64
 80084b6:	f7f9 fac1 	bl	8001a3c <LCD_IO_WriteData>
 80084ba:	2003      	movs	r0, #3
 80084bc:	f7f9 fabe 	bl	8001a3c <LCD_IO_WriteData>
 80084c0:	2012      	movs	r0, #18
 80084c2:	f7f9 fabb 	bl	8001a3c <LCD_IO_WriteData>
 80084c6:	2081      	movs	r0, #129	; 0x81
 80084c8:	f7f9 fab8 	bl	8001a3c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80084cc:	20e8      	movs	r0, #232	; 0xe8
 80084ce:	f7f9 fadf 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80084d2:	2085      	movs	r0, #133	; 0x85
 80084d4:	f7f9 fab2 	bl	8001a3c <LCD_IO_WriteData>
 80084d8:	2000      	movs	r0, #0
 80084da:	f7f9 faaf 	bl	8001a3c <LCD_IO_WriteData>
 80084de:	2078      	movs	r0, #120	; 0x78
 80084e0:	f7f9 faac 	bl	8001a3c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80084e4:	20cb      	movs	r0, #203	; 0xcb
 80084e6:	f7f9 fad3 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80084ea:	2039      	movs	r0, #57	; 0x39
 80084ec:	f7f9 faa6 	bl	8001a3c <LCD_IO_WriteData>
 80084f0:	202c      	movs	r0, #44	; 0x2c
 80084f2:	f7f9 faa3 	bl	8001a3c <LCD_IO_WriteData>
 80084f6:	2000      	movs	r0, #0
 80084f8:	f7f9 faa0 	bl	8001a3c <LCD_IO_WriteData>
 80084fc:	2034      	movs	r0, #52	; 0x34
 80084fe:	f7f9 fa9d 	bl	8001a3c <LCD_IO_WriteData>
 8008502:	2002      	movs	r0, #2
 8008504:	f7f9 fa9a 	bl	8001a3c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008508:	20f7      	movs	r0, #247	; 0xf7
 800850a:	f7f9 fac1 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800850e:	2020      	movs	r0, #32
 8008510:	f7f9 fa94 	bl	8001a3c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008514:	20ea      	movs	r0, #234	; 0xea
 8008516:	f7f9 fabb 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800851a:	2000      	movs	r0, #0
 800851c:	f7f9 fa8e 	bl	8001a3c <LCD_IO_WriteData>
 8008520:	2000      	movs	r0, #0
 8008522:	f7f9 fa8b 	bl	8001a3c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008526:	20b1      	movs	r0, #177	; 0xb1
 8008528:	f7f9 fab2 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800852c:	2000      	movs	r0, #0
 800852e:	f7f9 fa85 	bl	8001a3c <LCD_IO_WriteData>
 8008532:	201b      	movs	r0, #27
 8008534:	f7f9 fa82 	bl	8001a3c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008538:	20b6      	movs	r0, #182	; 0xb6
 800853a:	f7f9 faa9 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800853e:	200a      	movs	r0, #10
 8008540:	f7f9 fa7c 	bl	8001a3c <LCD_IO_WriteData>
 8008544:	20a2      	movs	r0, #162	; 0xa2
 8008546:	f7f9 fa79 	bl	8001a3c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800854a:	20c0      	movs	r0, #192	; 0xc0
 800854c:	f7f9 faa0 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008550:	2010      	movs	r0, #16
 8008552:	f7f9 fa73 	bl	8001a3c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008556:	20c1      	movs	r0, #193	; 0xc1
 8008558:	f7f9 fa9a 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800855c:	2010      	movs	r0, #16
 800855e:	f7f9 fa6d 	bl	8001a3c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008562:	20c5      	movs	r0, #197	; 0xc5
 8008564:	f7f9 fa94 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008568:	2045      	movs	r0, #69	; 0x45
 800856a:	f7f9 fa67 	bl	8001a3c <LCD_IO_WriteData>
 800856e:	2015      	movs	r0, #21
 8008570:	f7f9 fa64 	bl	8001a3c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008574:	20c7      	movs	r0, #199	; 0xc7
 8008576:	f7f9 fa8b 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800857a:	2090      	movs	r0, #144	; 0x90
 800857c:	f7f9 fa5e 	bl	8001a3c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008580:	2036      	movs	r0, #54	; 0x36
 8008582:	f7f9 fa85 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008586:	20c8      	movs	r0, #200	; 0xc8
 8008588:	f7f9 fa58 	bl	8001a3c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800858c:	20f2      	movs	r0, #242	; 0xf2
 800858e:	f7f9 fa7f 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008592:	2000      	movs	r0, #0
 8008594:	f7f9 fa52 	bl	8001a3c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008598:	20b0      	movs	r0, #176	; 0xb0
 800859a:	f7f9 fa79 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800859e:	20c2      	movs	r0, #194	; 0xc2
 80085a0:	f7f9 fa4c 	bl	8001a3c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80085a4:	20b6      	movs	r0, #182	; 0xb6
 80085a6:	f7f9 fa73 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80085aa:	200a      	movs	r0, #10
 80085ac:	f7f9 fa46 	bl	8001a3c <LCD_IO_WriteData>
 80085b0:	20a7      	movs	r0, #167	; 0xa7
 80085b2:	f7f9 fa43 	bl	8001a3c <LCD_IO_WriteData>
 80085b6:	2027      	movs	r0, #39	; 0x27
 80085b8:	f7f9 fa40 	bl	8001a3c <LCD_IO_WriteData>
 80085bc:	2004      	movs	r0, #4
 80085be:	f7f9 fa3d 	bl	8001a3c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80085c2:	202a      	movs	r0, #42	; 0x2a
 80085c4:	f7f9 fa64 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80085c8:	2000      	movs	r0, #0
 80085ca:	f7f9 fa37 	bl	8001a3c <LCD_IO_WriteData>
 80085ce:	2000      	movs	r0, #0
 80085d0:	f7f9 fa34 	bl	8001a3c <LCD_IO_WriteData>
 80085d4:	2000      	movs	r0, #0
 80085d6:	f7f9 fa31 	bl	8001a3c <LCD_IO_WriteData>
 80085da:	20ef      	movs	r0, #239	; 0xef
 80085dc:	f7f9 fa2e 	bl	8001a3c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80085e0:	202b      	movs	r0, #43	; 0x2b
 80085e2:	f7f9 fa55 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80085e6:	2000      	movs	r0, #0
 80085e8:	f7f9 fa28 	bl	8001a3c <LCD_IO_WriteData>
 80085ec:	2000      	movs	r0, #0
 80085ee:	f7f9 fa25 	bl	8001a3c <LCD_IO_WriteData>
 80085f2:	2001      	movs	r0, #1
 80085f4:	f7f9 fa22 	bl	8001a3c <LCD_IO_WriteData>
 80085f8:	203f      	movs	r0, #63	; 0x3f
 80085fa:	f7f9 fa1f 	bl	8001a3c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80085fe:	20f6      	movs	r0, #246	; 0xf6
 8008600:	f7f9 fa46 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008604:	2001      	movs	r0, #1
 8008606:	f7f9 fa19 	bl	8001a3c <LCD_IO_WriteData>
 800860a:	2000      	movs	r0, #0
 800860c:	f7f9 fa16 	bl	8001a3c <LCD_IO_WriteData>
 8008610:	2006      	movs	r0, #6
 8008612:	f7f9 fa13 	bl	8001a3c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008616:	202c      	movs	r0, #44	; 0x2c
 8008618:	f7f9 fa3a 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_Delay(200);
 800861c:	20c8      	movs	r0, #200	; 0xc8
 800861e:	f7f9 fa9f 	bl	8001b60 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8008622:	2026      	movs	r0, #38	; 0x26
 8008624:	f7f9 fa34 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008628:	2001      	movs	r0, #1
 800862a:	f7f9 fa07 	bl	8001a3c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800862e:	20e0      	movs	r0, #224	; 0xe0
 8008630:	f7f9 fa2e 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008634:	200f      	movs	r0, #15
 8008636:	f7f9 fa01 	bl	8001a3c <LCD_IO_WriteData>
 800863a:	2029      	movs	r0, #41	; 0x29
 800863c:	f7f9 f9fe 	bl	8001a3c <LCD_IO_WriteData>
 8008640:	2024      	movs	r0, #36	; 0x24
 8008642:	f7f9 f9fb 	bl	8001a3c <LCD_IO_WriteData>
 8008646:	200c      	movs	r0, #12
 8008648:	f7f9 f9f8 	bl	8001a3c <LCD_IO_WriteData>
 800864c:	200e      	movs	r0, #14
 800864e:	f7f9 f9f5 	bl	8001a3c <LCD_IO_WriteData>
 8008652:	2009      	movs	r0, #9
 8008654:	f7f9 f9f2 	bl	8001a3c <LCD_IO_WriteData>
 8008658:	204e      	movs	r0, #78	; 0x4e
 800865a:	f7f9 f9ef 	bl	8001a3c <LCD_IO_WriteData>
 800865e:	2078      	movs	r0, #120	; 0x78
 8008660:	f7f9 f9ec 	bl	8001a3c <LCD_IO_WriteData>
 8008664:	203c      	movs	r0, #60	; 0x3c
 8008666:	f7f9 f9e9 	bl	8001a3c <LCD_IO_WriteData>
 800866a:	2009      	movs	r0, #9
 800866c:	f7f9 f9e6 	bl	8001a3c <LCD_IO_WriteData>
 8008670:	2013      	movs	r0, #19
 8008672:	f7f9 f9e3 	bl	8001a3c <LCD_IO_WriteData>
 8008676:	2005      	movs	r0, #5
 8008678:	f7f9 f9e0 	bl	8001a3c <LCD_IO_WriteData>
 800867c:	2017      	movs	r0, #23
 800867e:	f7f9 f9dd 	bl	8001a3c <LCD_IO_WriteData>
 8008682:	2011      	movs	r0, #17
 8008684:	f7f9 f9da 	bl	8001a3c <LCD_IO_WriteData>
 8008688:	2000      	movs	r0, #0
 800868a:	f7f9 f9d7 	bl	8001a3c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800868e:	20e1      	movs	r0, #225	; 0xe1
 8008690:	f7f9 f9fe 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008694:	2000      	movs	r0, #0
 8008696:	f7f9 f9d1 	bl	8001a3c <LCD_IO_WriteData>
 800869a:	2016      	movs	r0, #22
 800869c:	f7f9 f9ce 	bl	8001a3c <LCD_IO_WriteData>
 80086a0:	201b      	movs	r0, #27
 80086a2:	f7f9 f9cb 	bl	8001a3c <LCD_IO_WriteData>
 80086a6:	2004      	movs	r0, #4
 80086a8:	f7f9 f9c8 	bl	8001a3c <LCD_IO_WriteData>
 80086ac:	2011      	movs	r0, #17
 80086ae:	f7f9 f9c5 	bl	8001a3c <LCD_IO_WriteData>
 80086b2:	2007      	movs	r0, #7
 80086b4:	f7f9 f9c2 	bl	8001a3c <LCD_IO_WriteData>
 80086b8:	2031      	movs	r0, #49	; 0x31
 80086ba:	f7f9 f9bf 	bl	8001a3c <LCD_IO_WriteData>
 80086be:	2033      	movs	r0, #51	; 0x33
 80086c0:	f7f9 f9bc 	bl	8001a3c <LCD_IO_WriteData>
 80086c4:	2042      	movs	r0, #66	; 0x42
 80086c6:	f7f9 f9b9 	bl	8001a3c <LCD_IO_WriteData>
 80086ca:	2005      	movs	r0, #5
 80086cc:	f7f9 f9b6 	bl	8001a3c <LCD_IO_WriteData>
 80086d0:	200c      	movs	r0, #12
 80086d2:	f7f9 f9b3 	bl	8001a3c <LCD_IO_WriteData>
 80086d6:	200a      	movs	r0, #10
 80086d8:	f7f9 f9b0 	bl	8001a3c <LCD_IO_WriteData>
 80086dc:	2028      	movs	r0, #40	; 0x28
 80086de:	f7f9 f9ad 	bl	8001a3c <LCD_IO_WriteData>
 80086e2:	202f      	movs	r0, #47	; 0x2f
 80086e4:	f7f9 f9aa 	bl	8001a3c <LCD_IO_WriteData>
 80086e8:	200f      	movs	r0, #15
 80086ea:	f7f9 f9a7 	bl	8001a3c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80086ee:	2011      	movs	r0, #17
 80086f0:	f7f9 f9ce 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_Delay(200);
 80086f4:	20c8      	movs	r0, #200	; 0xc8
 80086f6:	f7f9 fa33 	bl	8001b60 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 80086fa:	2029      	movs	r0, #41	; 0x29
 80086fc:	f7f9 f9c8 	bl	8001a90 <LCD_IO_WriteReg>
}
 8008700:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 8008704:	202c      	movs	r0, #44	; 0x2c
 8008706:	f7f9 b9c3 	b.w	8001a90 <LCD_IO_WriteReg>
 800870a:	bf00      	nop

0800870c <ili9341_ReadID>:
{
 800870c:	b508      	push	{r3, lr}
  LCD_IO_Init();
 800870e:	f7f9 f985 	bl	8001a1c <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 8008712:	2103      	movs	r1, #3
 8008714:	20d3      	movs	r0, #211	; 0xd3
 8008716:	f7f9 f9e5 	bl	8001ae4 <LCD_IO_ReadData>
}
 800871a:	b280      	uxth	r0, r0
 800871c:	bd08      	pop	{r3, pc}
 800871e:	bf00      	nop

08008720 <stmpe811_TS_ClearIT>:
  * @retval None
  */
void stmpe811_ClearGlobalIT(uint16_t DeviceAddr, uint8_t Source)
{
  /* Write 1 to the bits that have to be cleared */
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 8008720:	221f      	movs	r2, #31
 8008722:	210b      	movs	r1, #11
 8008724:	b2c0      	uxtb	r0, r0
 8008726:	f7f9 b92b 	b.w	8001980 <IOE_Write>
 800872a:	bf00      	nop

0800872c <stmpe811_Reset>:
{
 800872c:	b510      	push	{r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 800872e:	b2c4      	uxtb	r4, r0
 8008730:	2202      	movs	r2, #2
 8008732:	2103      	movs	r1, #3
 8008734:	4620      	mov	r0, r4
 8008736:	f7f9 f923 	bl	8001980 <IOE_Write>
  IOE_Delay(10); 
 800873a:	200a      	movs	r0, #10
 800873c:	f7f9 f96c 	bl	8001a18 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8008740:	4620      	mov	r0, r4
 8008742:	2200      	movs	r2, #0
 8008744:	2103      	movs	r1, #3
 8008746:	f7f9 f91b 	bl	8001980 <IOE_Write>
}
 800874a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 800874e:	2002      	movs	r0, #2
 8008750:	f7f9 b962 	b.w	8001a18 <IOE_Delay>

08008754 <stmpe811_ReadID>:
{
 8008754:	b510      	push	{r4, lr}
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8008756:	b2c4      	uxtb	r4, r0
  IOE_Init(); 
 8008758:	f7f9 f90e 	bl	8001978 <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800875c:	2100      	movs	r1, #0
 800875e:	4620      	mov	r0, r4
 8008760:	f7f9 f926 	bl	80019b0 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8008764:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8008766:	4603      	mov	r3, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8008768:	4620      	mov	r0, r4
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800876a:	461c      	mov	r4, r3
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 800876c:	f7f9 f920 	bl	80019b0 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8008770:	ea40 2004 	orr.w	r0, r0, r4, lsl #8
}
 8008774:	b280      	uxth	r0, r0
 8008776:	bd10      	pop	{r4, pc}

08008778 <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 8008778:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 800877a:	b2c4      	uxtb	r4, r0
 800877c:	2140      	movs	r1, #64	; 0x40
 800877e:	4620      	mov	r0, r4
 8008780:	f7f9 f916 	bl	80019b0 <IOE_Read>
  
  if(state > 0)
 8008784:	0603      	lsls	r3, r0, #24
 8008786:	d40b      	bmi.n	80087a0 <stmpe811_TS_DetectTouch+0x28>
    }
  }
  else
  {
    /* Reset FIFO */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8008788:	4620      	mov	r0, r4
 800878a:	2201      	movs	r2, #1
 800878c:	214b      	movs	r1, #75	; 0x4b
 800878e:	f7f9 f8f7 	bl	8001980 <IOE_Write>
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8008792:	4620      	mov	r0, r4
 8008794:	2200      	movs	r2, #0
 8008796:	214b      	movs	r1, #75	; 0x4b
 8008798:	f7f9 f8f2 	bl	8001980 <IOE_Write>
  uint8_t ret = 0;
 800879c:	2000      	movs	r0, #0
  }
  
  return ret;
}
 800879e:	bd10      	pop	{r4, pc}
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 80087a0:	214c      	movs	r1, #76	; 0x4c
 80087a2:	4620      	mov	r0, r4
 80087a4:	f7f9 f904 	bl	80019b0 <IOE_Read>
      ret = 1;
 80087a8:	3800      	subs	r0, #0
 80087aa:	bf18      	it	ne
 80087ac:	2001      	movne	r0, #1
}
 80087ae:	bd10      	pop	{r4, pc}

080087b0 <stmpe811_TS_ITStatus>:
  * @brief  Configure the selected source to generate a global interrupt or not
  * @param  DeviceAddr: Device address on communication Bus.    
  * @retval TS interrupts status
  */
uint8_t stmpe811_TS_ITStatus(uint16_t DeviceAddr)
{
 80087b0:	b508      	push	{r3, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 80087b2:	210b      	movs	r1, #11
 80087b4:	b2c0      	uxtb	r0, r0
 80087b6:	f7f9 f8fb 	bl	80019b0 <IOE_Read>
  /* Return TS interrupts status */
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
}
 80087ba:	f000 001f 	and.w	r0, r0, #31
 80087be:	bd08      	pop	{r3, pc}

080087c0 <stmpe811_TS_GetXY>:
{
 80087c0:	b570      	push	{r4, r5, r6, lr}
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 80087c2:	2304      	movs	r3, #4
{
 80087c4:	b082      	sub	sp, #8
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 80087c6:	b2c4      	uxtb	r4, r0
{
 80087c8:	4615      	mov	r5, r2
 80087ca:	460e      	mov	r6, r1
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 80087cc:	eb0d 0203 	add.w	r2, sp, r3
 80087d0:	21d7      	movs	r1, #215	; 0xd7
 80087d2:	4620      	mov	r0, r4
 80087d4:	f7f9 f908 	bl	80019e8 <IOE_ReadMultiple>
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 80087d8:	9b01      	ldr	r3, [sp, #4]
 80087da:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 80087dc:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 80087de:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 80087e2:	8032      	strh	r2, [r6, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 80087e4:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 80087e6:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 80087e8:	2201      	movs	r2, #1
 80087ea:	214b      	movs	r1, #75	; 0x4b
 80087ec:	f7f9 f8c8 	bl	8001980 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 80087f0:	2200      	movs	r2, #0
 80087f2:	214b      	movs	r1, #75	; 0x4b
 80087f4:	4620      	mov	r0, r4
 80087f6:	f7f9 f8c3 	bl	8001980 <IOE_Write>
}
 80087fa:	b002      	add	sp, #8
 80087fc:	bd70      	pop	{r4, r5, r6, pc}
 80087fe:	bf00      	nop

08008800 <stmpe811_TS_Start>:
{
 8008800:	b538      	push	{r3, r4, r5, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8008802:	b2c4      	uxtb	r4, r0
 8008804:	2104      	movs	r1, #4
 8008806:	4620      	mov	r0, r4
 8008808:	f7f9 f8d2 	bl	80019b0 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 800880c:	2104      	movs	r1, #4
 800880e:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8008812:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8008814:	4620      	mov	r0, r4
 8008816:	f7f9 f8b3 	bl	8001980 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 800881a:	2117      	movs	r1, #23
 800881c:	4620      	mov	r0, r4
 800881e:	f7f9 f8c7 	bl	80019b0 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8008822:	2117      	movs	r1, #23
 8008824:	f000 020f 	and.w	r2, r0, #15
 8008828:	4620      	mov	r0, r4
 800882a:	f7f9 f8a9 	bl	8001980 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 800882e:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 8008832:	4620      	mov	r0, r4
 8008834:	2104      	movs	r1, #4
 8008836:	f7f9 f8a3 	bl	8001980 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 800883a:	2249      	movs	r2, #73	; 0x49
 800883c:	2120      	movs	r1, #32
 800883e:	4620      	mov	r0, r4
 8008840:	f7f9 f89e 	bl	8001980 <IOE_Write>
  IOE_Delay(2); 
 8008844:	2002      	movs	r0, #2
 8008846:	f7f9 f8e7 	bl	8001a18 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 800884a:	4620      	mov	r0, r4
 800884c:	2201      	movs	r2, #1
 800884e:	2121      	movs	r1, #33	; 0x21
 8008850:	f7f9 f896 	bl	8001980 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 8008854:	4620      	mov	r0, r4
 8008856:	229a      	movs	r2, #154	; 0x9a
 8008858:	2141      	movs	r1, #65	; 0x41
 800885a:	f7f9 f891 	bl	8001980 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 800885e:	4620      	mov	r0, r4
 8008860:	2201      	movs	r2, #1
 8008862:	214a      	movs	r1, #74	; 0x4a
 8008864:	f7f9 f88c 	bl	8001980 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8008868:	4620      	mov	r0, r4
 800886a:	2201      	movs	r2, #1
 800886c:	214b      	movs	r1, #75	; 0x4b
 800886e:	f7f9 f887 	bl	8001980 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8008872:	4620      	mov	r0, r4
 8008874:	2200      	movs	r2, #0
 8008876:	214b      	movs	r1, #75	; 0x4b
 8008878:	f7f9 f882 	bl	8001980 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 800887c:	4620      	mov	r0, r4
 800887e:	2201      	movs	r2, #1
 8008880:	2156      	movs	r1, #86	; 0x56
 8008882:	f7f9 f87d 	bl	8001980 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 8008886:	4620      	mov	r0, r4
 8008888:	2201      	movs	r2, #1
 800888a:	2158      	movs	r1, #88	; 0x58
 800888c:	f7f9 f878 	bl	8001980 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 8008890:	4620      	mov	r0, r4
 8008892:	2201      	movs	r2, #1
 8008894:	2140      	movs	r1, #64	; 0x40
 8008896:	f7f9 f873 	bl	8001980 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 800889a:	4620      	mov	r0, r4
 800889c:	22ff      	movs	r2, #255	; 0xff
 800889e:	210b      	movs	r1, #11
 80088a0:	f7f9 f86e 	bl	8001980 <IOE_Write>
}
 80088a4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Delay(2); 
 80088a8:	2002      	movs	r0, #2
 80088aa:	f7f9 b8b5 	b.w	8001a18 <IOE_Delay>
 80088ae:	bf00      	nop

080088b0 <stmpe811_TS_DisableIT>:
{
 80088b0:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 80088b2:	b2c4      	uxtb	r4, r0
 80088b4:	2109      	movs	r1, #9
 80088b6:	4620      	mov	r0, r4
 80088b8:	f7f9 f87a 	bl	80019b0 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 80088bc:	2109      	movs	r1, #9
 80088be:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 80088c2:	4620      	mov	r0, r4
 80088c4:	f7f9 f85c 	bl	8001980 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80088c8:	210a      	movs	r1, #10
 80088ca:	4620      	mov	r0, r4
 80088cc:	f7f9 f870 	bl	80019b0 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80088d0:	210a      	movs	r1, #10
 80088d2:	f000 02e0 	and.w	r2, r0, #224	; 0xe0
 80088d6:	4620      	mov	r0, r4
}
 80088d8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80088dc:	f7f9 b850 	b.w	8001980 <IOE_Write>

080088e0 <stmpe811_TS_EnableIT>:
{
 80088e0:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80088e2:	b2c4      	uxtb	r4, r0
  IOE_ITConfig();
 80088e4:	f7f9 f84a 	bl	800197c <IOE_ITConfig>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80088e8:	210a      	movs	r1, #10
 80088ea:	4620      	mov	r0, r4
 80088ec:	f7f9 f860 	bl	80019b0 <IOE_Read>
  tmp |= Source; 
 80088f0:	f040 001f 	orr.w	r0, r0, #31
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80088f4:	b2c2      	uxtb	r2, r0
 80088f6:	210a      	movs	r1, #10
 80088f8:	4620      	mov	r0, r4
 80088fa:	f7f9 f841 	bl	8001980 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 80088fe:	2109      	movs	r1, #9
 8008900:	4620      	mov	r0, r4
 8008902:	f7f9 f855 	bl	80019b0 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 8008906:	f040 0001 	orr.w	r0, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 800890a:	b2c2      	uxtb	r2, r0
 800890c:	2109      	movs	r1, #9
 800890e:	4620      	mov	r0, r4
}
 8008910:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8008914:	f7f9 b834 	b.w	8001980 <IOE_Write>

08008918 <stmpe811_Init>:
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 8008918:	4a10      	ldr	r2, [pc, #64]	; (800895c <stmpe811_Init+0x44>)
 800891a:	7813      	ldrb	r3, [r2, #0]
 800891c:	4298      	cmp	r0, r3
 800891e:	d004      	beq.n	800892a <stmpe811_Init+0x12>
 8008920:	7851      	ldrb	r1, [r2, #1]
 8008922:	4288      	cmp	r0, r1
 8008924:	d001      	beq.n	800892a <stmpe811_Init+0x12>
 8008926:	b113      	cbz	r3, 800892e <stmpe811_Init+0x16>
 8008928:	b101      	cbz	r1, 800892c <stmpe811_Init+0x14>
 800892a:	4770      	bx	lr
 800892c:	2301      	movs	r3, #1
{
 800892e:	b510      	push	{r4, lr}
      stmpe811[empty] = DeviceAddr;
 8008930:	b2c4      	uxtb	r4, r0
 8008932:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 8008934:	f7f9 f820 	bl	8001978 <IOE_Init>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8008938:	2202      	movs	r2, #2
 800893a:	2103      	movs	r1, #3
 800893c:	4620      	mov	r0, r4
 800893e:	f7f9 f81f 	bl	8001980 <IOE_Write>
  IOE_Delay(10); 
 8008942:	200a      	movs	r0, #10
 8008944:	f7f9 f868 	bl	8001a18 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8008948:	4620      	mov	r0, r4
 800894a:	2200      	movs	r2, #0
 800894c:	2103      	movs	r1, #3
 800894e:	f7f9 f817 	bl	8001980 <IOE_Write>
}
 8008952:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8008956:	2002      	movs	r0, #2
 8008958:	f7f9 b85e 	b.w	8001a18 <IOE_Delay>
 800895c:	200029bc 	.word	0x200029bc

08008960 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8008960:	4b05      	ldr	r3, [pc, #20]	; (8008978 <SystemInit+0x18>)
 8008962:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8008966:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800896a:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 800896e:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8008972:	6099      	str	r1, [r3, #8]
#endif
}
 8008974:	4770      	bx	lr
 8008976:	bf00      	nop
 8008978:	e000ed00 	.word	0xe000ed00

0800897c <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 800897c:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 800897e:	4b0b      	ldr	r3, [pc, #44]	; (80089ac <HAL_Init+0x30>)
 8008980:	681a      	ldr	r2, [r3, #0]
 8008982:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8008986:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8008988:	681a      	ldr	r2, [r3, #0]
 800898a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800898e:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8008990:	681a      	ldr	r2, [r3, #0]
 8008992:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8008996:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8008998:	2003      	movs	r0, #3
 800899a:	f000 f82d 	bl	80089f8 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 800899e:	2000      	movs	r0, #0
 80089a0:	f7f9 fb6e 	bl	8002080 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 80089a4:	f7f9 f8ea 	bl	8001b7c <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 80089a8:	2000      	movs	r0, #0
 80089aa:	bd08      	pop	{r3, pc}
 80089ac:	40023c00 	.word	0x40023c00

080089b0 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 80089b0:	4a03      	ldr	r2, [pc, #12]	; (80089c0 <HAL_IncTick+0x10>)
 80089b2:	4b04      	ldr	r3, [pc, #16]	; (80089c4 <HAL_IncTick+0x14>)
 80089b4:	6811      	ldr	r1, [r2, #0]
 80089b6:	781b      	ldrb	r3, [r3, #0]
 80089b8:	440b      	add	r3, r1
 80089ba:	6013      	str	r3, [r2, #0]
}
 80089bc:	4770      	bx	lr
 80089be:	bf00      	nop
 80089c0:	200029c0 	.word	0x200029c0
 80089c4:	2000007c 	.word	0x2000007c

080089c8 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 80089c8:	4b01      	ldr	r3, [pc, #4]	; (80089d0 <HAL_GetTick+0x8>)
 80089ca:	6818      	ldr	r0, [r3, #0]
}
 80089cc:	4770      	bx	lr
 80089ce:	bf00      	nop
 80089d0:	200029c0 	.word	0x200029c0

080089d4 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 80089d4:	b538      	push	{r3, r4, r5, lr}
 80089d6:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 80089d8:	f7ff fff6 	bl	80089c8 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 80089dc:	1c63      	adds	r3, r4, #1
  uint32_t tickstart = HAL_GetTick();
 80089de:	4605      	mov	r5, r0
  if (wait < HAL_MAX_DELAY)
 80089e0:	d002      	beq.n	80089e8 <HAL_Delay+0x14>
  {
    wait += (uint32_t)(uwTickFreq);
 80089e2:	4b04      	ldr	r3, [pc, #16]	; (80089f4 <HAL_Delay+0x20>)
 80089e4:	781b      	ldrb	r3, [r3, #0]
 80089e6:	441c      	add	r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 80089e8:	f7ff ffee 	bl	80089c8 <HAL_GetTick>
 80089ec:	1b43      	subs	r3, r0, r5
 80089ee:	42a3      	cmp	r3, r4
 80089f0:	d3fa      	bcc.n	80089e8 <HAL_Delay+0x14>
  {
  }
}
 80089f2:	bd38      	pop	{r3, r4, r5, pc}
 80089f4:	2000007c 	.word	0x2000007c

080089f8 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80089f8:	4907      	ldr	r1, [pc, #28]	; (8008a18 <HAL_NVIC_SetPriorityGrouping+0x20>)
 80089fa:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80089fc:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80089fe:	f64f 00ff 	movw	r0, #63743	; 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8008a02:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8008a06:	4002      	ands	r2, r0
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8008a08:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8008a0a:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8008a0e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 8008a12:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8008a14:	4770      	bx	lr
 8008a16:	bf00      	nop
 8008a18:	e000ed00 	.word	0xe000ed00

08008a1c <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8008a1c:	4b1c      	ldr	r3, [pc, #112]	; (8008a90 <HAL_NVIC_SetPriority+0x74>)
 8008a1e:	68db      	ldr	r3, [r3, #12]
 8008a20:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8008a24:	b500      	push	{lr}
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8008a26:	f1c3 0e07 	rsb	lr, r3, #7
 8008a2a:	f1be 0f04 	cmp.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8008a2e:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8008a32:	bf28      	it	cs
 8008a34:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8008a38:	f1bc 0f06 	cmp.w	ip, #6
 8008a3c:	d91b      	bls.n	8008a76 <HAL_NVIC_SetPriority+0x5a>
 8008a3e:	3b03      	subs	r3, #3

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8008a40:	f04f 3cff 	mov.w	ip, #4294967295
 8008a44:	fa0c fc03 	lsl.w	ip, ip, r3
 8008a48:	ea22 020c 	bic.w	r2, r2, ip
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8008a4c:	f04f 3cff 	mov.w	ip, #4294967295
 8008a50:	fa0c fc0e 	lsl.w	ip, ip, lr
 8008a54:	ea21 010c 	bic.w	r1, r1, ip
 8008a58:	4099      	lsls	r1, r3
  if ((int32_t)(IRQn) >= 0)
 8008a5a:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8008a5c:	ea41 0102 	orr.w	r1, r1, r2
  if ((int32_t)(IRQn) >= 0)
 8008a60:	db0c      	blt.n	8008a7c <HAL_NVIC_SetPriority+0x60>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8008a62:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 8008a66:	0109      	lsls	r1, r1, #4
 8008a68:	f500 4061 	add.w	r0, r0, #57600	; 0xe100
 8008a6c:	b2c9      	uxtb	r1, r1
 8008a6e:	f880 1300 	strb.w	r1, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8008a72:	f85d fb04 	ldr.w	pc, [sp], #4
 8008a76:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8008a78:	4613      	mov	r3, r2
 8008a7a:	e7e7      	b.n	8008a4c <HAL_NVIC_SetPriority+0x30>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8008a7c:	4b05      	ldr	r3, [pc, #20]	; (8008a94 <HAL_NVIC_SetPriority+0x78>)
 8008a7e:	f000 000f 	and.w	r0, r0, #15
 8008a82:	0109      	lsls	r1, r1, #4
 8008a84:	4403      	add	r3, r0
 8008a86:	b2c9      	uxtb	r1, r1
 8008a88:	7619      	strb	r1, [r3, #24]
 8008a8a:	f85d fb04 	ldr.w	pc, [sp], #4
 8008a8e:	bf00      	nop
 8008a90:	e000ed00 	.word	0xe000ed00
 8008a94:	e000ecfc 	.word	0xe000ecfc

08008a98 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8008a98:	2800      	cmp	r0, #0
 8008a9a:	db07      	blt.n	8008aac <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8008a9c:	0941      	lsrs	r1, r0, #5
 8008a9e:	4a04      	ldr	r2, [pc, #16]	; (8008ab0 <HAL_NVIC_EnableIRQ+0x18>)
 8008aa0:	f000 001f 	and.w	r0, r0, #31
 8008aa4:	2301      	movs	r3, #1
 8008aa6:	4083      	lsls	r3, r0
 8008aa8:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8008aac:	4770      	bx	lr
 8008aae:	bf00      	nop
 8008ab0:	e000e100 	.word	0xe000e100

08008ab4 <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8008ab4:	b180      	cbz	r0, 8008ad8 <HAL_CRC_Init+0x24>
{
 8008ab6:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8008ab8:	7943      	ldrb	r3, [r0, #5]
 8008aba:	4604      	mov	r4, r0
 8008abc:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8008ac0:	b11b      	cbz	r3, 8008aca <HAL_CRC_Init+0x16>
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8008ac2:	2301      	movs	r3, #1
 8008ac4:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 8008ac6:	2000      	movs	r0, #0
}
 8008ac8:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
 8008aca:	7102      	strb	r2, [r0, #4]
    HAL_CRC_MspInit(hcrc);
 8008acc:	f7f9 f876 	bl	8001bbc <HAL_CRC_MspInit>
  hcrc->State = HAL_CRC_STATE_READY;
 8008ad0:	2301      	movs	r3, #1
 8008ad2:	7163      	strb	r3, [r4, #5]
  return HAL_OK;
 8008ad4:	2000      	movs	r0, #0
}
 8008ad6:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8008ad8:	2001      	movs	r0, #1
}
 8008ada:	4770      	bx	lr

08008adc <HAL_DMA_Abort_IT>:
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8008adc:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 8008ae0:	2b02      	cmp	r3, #2
 8008ae2:	d003      	beq.n	8008aec <HAL_DMA_Abort_IT+0x10>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8008ae4:	2380      	movs	r3, #128	; 0x80
 8008ae6:	6543      	str	r3, [r0, #84]	; 0x54
    return HAL_ERROR;
 8008ae8:	2001      	movs	r0, #1
 8008aea:	4770      	bx	lr
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 8008aec:	6802      	ldr	r2, [r0, #0]
    hdma->State = HAL_DMA_STATE_ABORT;
 8008aee:	2305      	movs	r3, #5
 8008af0:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
    __HAL_DMA_DISABLE(hdma);
 8008af4:	6813      	ldr	r3, [r2, #0]
 8008af6:	f023 0301 	bic.w	r3, r3, #1
  }

  return HAL_OK;
 8008afa:	2000      	movs	r0, #0
    __HAL_DMA_DISABLE(hdma);
 8008afc:	6013      	str	r3, [r2, #0]
}
 8008afe:	4770      	bx	lr

08008b00 <HAL_DMA_GetState>:
  *               the configuration information for the specified DMA Stream.
  * @retval HAL state
  */
HAL_DMA_StateTypeDef HAL_DMA_GetState(DMA_HandleTypeDef *hdma)
{
  return hdma->State;
 8008b00:	f890 0035 	ldrb.w	r0, [r0, #53]	; 0x35
}
 8008b04:	4770      	bx	lr
 8008b06:	bf00      	nop

08008b08 <HAL_DMA2D_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 8008b08:	b348      	cbz	r0, 8008b5e <HAL_DMA2D_Init+0x56>
{
 8008b0a:	b510      	push	{r4, lr}

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 8008b0c:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8008b10:	4604      	mov	r4, r0
 8008b12:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8008b16:	b1eb      	cbz	r3, 8008b54 <HAL_DMA2D_Init+0x4c>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8008b18:	6822      	ldr	r2, [r4, #0]
 8008b1a:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8008b1c:	2302      	movs	r3, #2
 8008b1e:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8008b22:	6813      	ldr	r3, [r2, #0]
 8008b24:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8008b28:	430b      	orrs	r3, r1
 8008b2a:	6013      	str	r3, [r2, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8008b2c:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8008b2e:	68a1      	ldr	r1, [r4, #8]
 8008b30:	f023 0307 	bic.w	r3, r3, #7
 8008b34:	430b      	orrs	r3, r1
 8008b36:	6353      	str	r3, [r2, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8008b38:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8008b3a:	68e1      	ldr	r1, [r4, #12]
 8008b3c:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8008b40:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8008b44:	430b      	orrs	r3, r1
 8008b46:	6413      	str	r3, [r2, #64]	; 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8008b48:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8008b4a:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8008b4c:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8008b4e:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

  return HAL_OK;
}
 8008b52:	bd10      	pop	{r4, pc}
    hdma2d->Lock = HAL_UNLOCKED;
 8008b54:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    HAL_DMA2D_MspInit(hdma2d);
 8008b58:	f7f9 f84a 	bl	8001bf0 <HAL_DMA2D_MspInit>
 8008b5c:	e7dc      	b.n	8008b18 <HAL_DMA2D_Init+0x10>
    return HAL_ERROR;
 8008b5e:	2001      	movs	r0, #1
}
 8008b60:	4770      	bx	lr
 8008b62:	bf00      	nop

08008b64 <HAL_DMA2D_LineEventCallback>:
 8008b64:	4770      	bx	lr
 8008b66:	bf00      	nop

08008b68 <HAL_DMA2D_CLUTLoadingCpltCallback>:
 8008b68:	4770      	bx	lr
 8008b6a:	bf00      	nop

08008b6c <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8008b6c:	6803      	ldr	r3, [r0, #0]
{
 8008b6e:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8008b70:	685d      	ldr	r5, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 8008b72:	681e      	ldr	r6, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8008b74:	07ea      	lsls	r2, r5, #31
{
 8008b76:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8008b78:	d501      	bpl.n	8008b7e <HAL_DMA2D_IRQHandler+0x12>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 8008b7a:	05f1      	lsls	r1, r6, #23
 8008b7c:	d457      	bmi.n	8008c2e <HAL_DMA2D_IRQHandler+0xc2>
        hdma2d->XferErrorCallback(hdma2d);
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 8008b7e:	06aa      	lsls	r2, r5, #26
 8008b80:	d501      	bpl.n	8008b86 <HAL_DMA2D_IRQHandler+0x1a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 8008b82:	04b3      	lsls	r3, r6, #18
 8008b84:	d43c      	bmi.n	8008c00 <HAL_DMA2D_IRQHandler+0x94>
        hdma2d->XferErrorCallback(hdma2d);
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8008b86:	0728      	lsls	r0, r5, #28
 8008b88:	d501      	bpl.n	8008b8e <HAL_DMA2D_IRQHandler+0x22>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8008b8a:	0531      	lsls	r1, r6, #20
 8008b8c:	d421      	bmi.n	8008bd2 <HAL_DMA2D_IRQHandler+0x66>
        hdma2d->XferErrorCallback(hdma2d);
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8008b8e:	076a      	lsls	r2, r5, #29
 8008b90:	d501      	bpl.n	8008b96 <HAL_DMA2D_IRQHandler+0x2a>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 8008b92:	0573      	lsls	r3, r6, #21
 8008b94:	d473      	bmi.n	8008c7e <HAL_DMA2D_IRQHandler+0x112>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8008b96:	07a8      	lsls	r0, r5, #30
 8008b98:	d501      	bpl.n	8008b9e <HAL_DMA2D_IRQHandler+0x32>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 8008b9a:	05b1      	lsls	r1, r6, #22
 8008b9c:	d404      	bmi.n	8008ba8 <HAL_DMA2D_IRQHandler+0x3c>
        hdma2d->XferCpltCallback(hdma2d);
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 8008b9e:	06ea      	lsls	r2, r5, #27
 8008ba0:	d501      	bpl.n	8008ba6 <HAL_DMA2D_IRQHandler+0x3a>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8008ba2:	04f3      	lsls	r3, r6, #19
 8008ba4:	d458      	bmi.n	8008c58 <HAL_DMA2D_IRQHandler+0xec>
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 8008ba6:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 8008ba8:	6823      	ldr	r3, [r4, #0]
 8008baa:	681a      	ldr	r2, [r3, #0]
 8008bac:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8008bb0:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8008bb2:	2202      	movs	r2, #2
 8008bb4:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8008bb6:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8008bb8:	63e2      	str	r2, [r4, #60]	; 0x3c
      if (hdma2d->XferCpltCallback != NULL)
 8008bba:	6923      	ldr	r3, [r4, #16]
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8008bbc:	2201      	movs	r2, #1
 8008bbe:	f884 2039 	strb.w	r2, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8008bc2:	2200      	movs	r2, #0
 8008bc4:	f884 2038 	strb.w	r2, [r4, #56]	; 0x38
      if (hdma2d->XferCpltCallback != NULL)
 8008bc8:	2b00      	cmp	r3, #0
 8008bca:	d0e8      	beq.n	8008b9e <HAL_DMA2D_IRQHandler+0x32>
        hdma2d->XferCpltCallback(hdma2d);
 8008bcc:	4620      	mov	r0, r4
 8008bce:	4798      	blx	r3
 8008bd0:	e7e5      	b.n	8008b9e <HAL_DMA2D_IRQHandler+0x32>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 8008bd2:	6823      	ldr	r3, [r4, #0]
 8008bd4:	681a      	ldr	r2, [r3, #0]
 8008bd6:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8008bda:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8008bdc:	2208      	movs	r2, #8
 8008bde:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8008be0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
      if (hdma2d->XferErrorCallback != NULL)
 8008be2:	6962      	ldr	r2, [r4, #20]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8008be4:	f043 0304 	orr.w	r3, r3, #4
 8008be8:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8008bea:	2104      	movs	r1, #4
      __HAL_UNLOCK(hdma2d);
 8008bec:	2300      	movs	r3, #0
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8008bee:	f884 1039 	strb.w	r1, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8008bf2:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      if (hdma2d->XferErrorCallback != NULL)
 8008bf6:	2a00      	cmp	r2, #0
 8008bf8:	d0c9      	beq.n	8008b8e <HAL_DMA2D_IRQHandler+0x22>
        hdma2d->XferErrorCallback(hdma2d);
 8008bfa:	4620      	mov	r0, r4
 8008bfc:	4790      	blx	r2
 8008bfe:	e7c6      	b.n	8008b8e <HAL_DMA2D_IRQHandler+0x22>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 8008c00:	6823      	ldr	r3, [r4, #0]
 8008c02:	681a      	ldr	r2, [r3, #0]
 8008c04:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8008c08:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 8008c0a:	2220      	movs	r2, #32
 8008c0c:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8008c0e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
      if (hdma2d->XferErrorCallback != NULL)
 8008c10:	6962      	ldr	r2, [r4, #20]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8008c12:	f043 0302 	orr.w	r3, r3, #2
 8008c16:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8008c18:	2104      	movs	r1, #4
      __HAL_UNLOCK(hdma2d);
 8008c1a:	2300      	movs	r3, #0
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8008c1c:	f884 1039 	strb.w	r1, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8008c20:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      if (hdma2d->XferErrorCallback != NULL)
 8008c24:	2a00      	cmp	r2, #0
 8008c26:	d0ae      	beq.n	8008b86 <HAL_DMA2D_IRQHandler+0x1a>
        hdma2d->XferErrorCallback(hdma2d);
 8008c28:	4620      	mov	r0, r4
 8008c2a:	4790      	blx	r2
 8008c2c:	e7ab      	b.n	8008b86 <HAL_DMA2D_IRQHandler+0x1a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 8008c2e:	681a      	ldr	r2, [r3, #0]
 8008c30:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8008c34:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 8008c36:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 8008c38:	2101      	movs	r1, #1
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 8008c3a:	f042 0201 	orr.w	r2, r2, #1
 8008c3e:	63c2      	str	r2, [r0, #60]	; 0x3c
      if (hdma2d->XferErrorCallback != NULL)
 8008c40:	6942      	ldr	r2, [r0, #20]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 8008c42:	6099      	str	r1, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8008c44:	2304      	movs	r3, #4
 8008c46:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8008c4a:	2300      	movs	r3, #0
 8008c4c:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
      if (hdma2d->XferErrorCallback != NULL)
 8008c50:	2a00      	cmp	r2, #0
 8008c52:	d094      	beq.n	8008b7e <HAL_DMA2D_IRQHandler+0x12>
        hdma2d->XferErrorCallback(hdma2d);
 8008c54:	4790      	blx	r2
 8008c56:	e792      	b.n	8008b7e <HAL_DMA2D_IRQHandler+0x12>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8008c58:	6823      	ldr	r3, [r4, #0]
 8008c5a:	681a      	ldr	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8008c5c:	2010      	movs	r0, #16
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8008c5e:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8008c62:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8008c64:	6098      	str	r0, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8008c66:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8008c68:	63e2      	str	r2, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8008c6a:	2101      	movs	r1, #1
      __HAL_UNLOCK(hdma2d);
 8008c6c:	2300      	movs	r3, #0
 8008c6e:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8008c72:	f884 1039 	strb.w	r1, [r4, #57]	; 0x39
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8008c76:	4620      	mov	r0, r4
 8008c78:	f7ff ff76 	bl	8008b68 <HAL_DMA2D_CLUTLoadingCpltCallback>
}
 8008c7c:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8008c7e:	6823      	ldr	r3, [r4, #0]
 8008c80:	681a      	ldr	r2, [r3, #0]
 8008c82:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8008c86:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8008c88:	2204      	movs	r2, #4
 8008c8a:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
 8008c8c:	4620      	mov	r0, r4
 8008c8e:	f7ff ff69 	bl	8008b64 <HAL_DMA2D_LineEventCallback>
 8008c92:	e780      	b.n	8008b96 <HAL_DMA2D_IRQHandler+0x2a>

08008c94 <HAL_DMA2D_ConfigLayer>:
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 8008c94:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 8008c98:	2b01      	cmp	r3, #1
 8008c9a:	d04d      	beq.n	8008d38 <HAL_DMA2D_ConfigLayer+0xa4>
 8008c9c:	2201      	movs	r2, #1

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8008c9e:	2302      	movs	r3, #2
{
 8008ca0:	b470      	push	{r4, r5, r6}

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8008ca2:	eb00 1c01 	add.w	ip, r0, r1, lsl #4
  __HAL_LOCK(hdma2d);
 8008ca6:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8008caa:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8008cae:	e9dc 2307 	ldrd	r2, r3, [ip, #28]
 8008cb2:	ea42 4303 	orr.w	r3, r2, r3, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8008cb6:	3a09      	subs	r2, #9
 8008cb8:	2a01      	cmp	r2, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 8008cba:	f8dc 2024 	ldr.w	r2, [ip, #36]	; 0x24
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8008cbe:	d91d      	bls.n	8008cfc <HAL_DMA2D_ConfigLayer+0x68>
  }
  else
  {
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 8008cc0:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
  }

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 8008cc4:	b189      	cbz	r1, 8008cea <HAL_DMA2D_ConfigLayer+0x56>
  else
  {


    /* Write DMA2D FGPFCCR register */
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8008cc6:	6801      	ldr	r1, [r0, #0]
 8008cc8:	4a1c      	ldr	r2, [pc, #112]	; (8008d3c <HAL_DMA2D_ConfigLayer+0xa8>)
 8008cca:	69cd      	ldr	r5, [r1, #28]

    /* DMA2D FGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8008ccc:	f8dc 4018 	ldr.w	r4, [ip, #24]
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8008cd0:	402a      	ands	r2, r5
 8008cd2:	431a      	orrs	r2, r3
 8008cd4:	61ca      	str	r2, [r1, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8008cd6:	610c      	str	r4, [r1, #16]
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 8008cd8:	2300      	movs	r3, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8008cda:	2201      	movs	r2, #1
 8008cdc:	f880 2039 	strb.w	r2, [r0, #57]	; 0x39
  __HAL_UNLOCK(hdma2d);
 8008ce0:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38

  return HAL_OK;
}
 8008ce4:	bc70      	pop	{r4, r5, r6}
  return HAL_OK;
 8008ce6:	4618      	mov	r0, r3
}
 8008ce8:	4770      	bx	lr
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8008cea:	6801      	ldr	r1, [r0, #0]
 8008cec:	4a13      	ldr	r2, [pc, #76]	; (8008d3c <HAL_DMA2D_ConfigLayer+0xa8>)
 8008cee:	6a4c      	ldr	r4, [r1, #36]	; 0x24
 8008cf0:	4022      	ands	r2, r4
 8008cf2:	431a      	orrs	r2, r3
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8008cf4:	6984      	ldr	r4, [r0, #24]
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8008cf6:	624a      	str	r2, [r1, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8008cf8:	618c      	str	r4, [r1, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8008cfa:	e7ed      	b.n	8008cd8 <HAL_DMA2D_ConfigLayer+0x44>
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 8008cfc:	f002 447f 	and.w	r4, r2, #4278190080	; 0xff000000
 8008d00:	4323      	orrs	r3, r4
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 8008d02:	b961      	cbnz	r1, 8008d1e <HAL_DMA2D_ConfigLayer+0x8a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8008d04:	6801      	ldr	r1, [r0, #0]
 8008d06:	4a0d      	ldr	r2, [pc, #52]	; (8008d3c <HAL_DMA2D_ConfigLayer+0xa8>)
 8008d08:	6a4c      	ldr	r4, [r1, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8008d0a:	6985      	ldr	r5, [r0, #24]
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8008d0c:	4022      	ands	r2, r4
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 8008d0e:	6a44      	ldr	r4, [r0, #36]	; 0x24
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8008d10:	431a      	orrs	r2, r3
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 8008d12:	f024 447f 	bic.w	r4, r4, #4278190080	; 0xff000000
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8008d16:	624a      	str	r2, [r1, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8008d18:	618d      	str	r5, [r1, #24]
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 8008d1a:	628c      	str	r4, [r1, #40]	; 0x28
 8008d1c:	e7dc      	b.n	8008cd8 <HAL_DMA2D_ConfigLayer+0x44>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8008d1e:	6804      	ldr	r4, [r0, #0]
 8008d20:	4906      	ldr	r1, [pc, #24]	; (8008d3c <HAL_DMA2D_ConfigLayer+0xa8>)
 8008d22:	69e6      	ldr	r6, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8008d24:	f8dc 5018 	ldr.w	r5, [ip, #24]
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8008d28:	4031      	ands	r1, r6
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 8008d2a:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8008d2e:	4319      	orrs	r1, r3
 8008d30:	61e1      	str	r1, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8008d32:	6125      	str	r5, [r4, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 8008d34:	6222      	str	r2, [r4, #32]
 8008d36:	e7cf      	b.n	8008cd8 <HAL_DMA2D_ConfigLayer+0x44>
  __HAL_LOCK(hdma2d);
 8008d38:	2002      	movs	r0, #2
}
 8008d3a:	4770      	bx	lr
 8008d3c:	00fcfff0 	.word	0x00fcfff0

08008d40 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8008d40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  for(position = 0U; position < GPIO_NUMBER; position++)
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8008d44:	2200      	movs	r2, #0
 8008d46:	680c      	ldr	r4, [r1, #0]
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8008d48:	f8df a260 	ldr.w	sl, [pc, #608]	; 8008fac <HAL_GPIO_Init+0x26c>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8008d4c:	4e90      	ldr	r6, [pc, #576]	; (8008f90 <HAL_GPIO_Init+0x250>)
{
 8008d4e:	b085      	sub	sp, #20
  for(position = 0U; position < GPIO_NUMBER; position++)
 8008d50:	4613      	mov	r3, r2
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8008d52:	4689      	mov	r9, r1
 8008d54:	e005      	b.n	8008d62 <HAL_GPIO_Init+0x22>
  for(position = 0U; position < GPIO_NUMBER; position++)
 8008d56:	3301      	adds	r3, #1
 8008d58:	2b10      	cmp	r3, #16
 8008d5a:	f102 0202 	add.w	r2, r2, #2
 8008d5e:	f000 8095 	beq.w	8008e8c <HAL_GPIO_Init+0x14c>
    ioposition = 0x01U << position;
 8008d62:	2101      	movs	r1, #1
 8008d64:	4099      	lsls	r1, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8008d66:	ea01 0b04 	and.w	fp, r1, r4
    if(iocurrent == ioposition)
 8008d6a:	43a1      	bics	r1, r4
 8008d6c:	d1f3      	bne.n	8008d56 <HAL_GPIO_Init+0x16>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8008d6e:	f8d9 c004 	ldr.w	ip, [r9, #4]
 8008d72:	f00c 0103 	and.w	r1, ip, #3
 8008d76:	1e4d      	subs	r5, r1, #1
 8008d78:	2d01      	cmp	r5, #1
 8008d7a:	f240 808a 	bls.w	8008e92 <HAL_GPIO_Init+0x152>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8008d7e:	2903      	cmp	r1, #3
 8008d80:	f040 80ca 	bne.w	8008f18 <HAL_GPIO_Init+0x1d8>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8008d84:	4091      	lsls	r1, r2
 8008d86:	43cd      	mvns	r5, r1
      temp = GPIOx->MODER;
 8008d88:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8008d8a:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8008d8c:	4329      	orrs	r1, r5
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8008d8e:	f41c 3f40 	tst.w	ip, #196608	; 0x30000
      GPIOx->MODER = temp;
 8008d92:	6001      	str	r1, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8008d94:	d0df      	beq.n	8008d56 <HAL_GPIO_Init+0x16>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8008d96:	2100      	movs	r1, #0
 8008d98:	9103      	str	r1, [sp, #12]
 8008d9a:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 8008d9e:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8008da2:	f8ca 1044 	str.w	r1, [sl, #68]	; 0x44
 8008da6:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 8008daa:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 8008dae:	9103      	str	r1, [sp, #12]
 8008db0:	9903      	ldr	r1, [sp, #12]
        temp = SYSCFG->EXTICR[position >> 2U];
 8008db2:	f023 0103 	bic.w	r1, r3, #3
 8008db6:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 8008dba:	f501 319c 	add.w	r1, r1, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8008dbe:	f003 0703 	and.w	r7, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 8008dc2:	688d      	ldr	r5, [r1, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8008dc4:	00bf      	lsls	r7, r7, #2
 8008dc6:	f04f 0e0f 	mov.w	lr, #15
 8008dca:	fa0e fe07 	lsl.w	lr, lr, r7
 8008dce:	ea25 080e 	bic.w	r8, r5, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8008dd2:	4d70      	ldr	r5, [pc, #448]	; (8008f94 <HAL_GPIO_Init+0x254>)
 8008dd4:	42a8      	cmp	r0, r5
 8008dd6:	d02e      	beq.n	8008e36 <HAL_GPIO_Init+0xf6>
 8008dd8:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8008ddc:	42a8      	cmp	r0, r5
 8008dde:	f000 809f 	beq.w	8008f20 <HAL_GPIO_Init+0x1e0>
 8008de2:	4d6d      	ldr	r5, [pc, #436]	; (8008f98 <HAL_GPIO_Init+0x258>)
 8008de4:	42a8      	cmp	r0, r5
 8008de6:	f000 80a2 	beq.w	8008f2e <HAL_GPIO_Init+0x1ee>
 8008dea:	4d6c      	ldr	r5, [pc, #432]	; (8008f9c <HAL_GPIO_Init+0x25c>)
 8008dec:	42a8      	cmp	r0, r5
 8008dee:	f000 80a5 	beq.w	8008f3c <HAL_GPIO_Init+0x1fc>
 8008df2:	4d6b      	ldr	r5, [pc, #428]	; (8008fa0 <HAL_GPIO_Init+0x260>)
 8008df4:	42a8      	cmp	r0, r5
 8008df6:	f000 80a8 	beq.w	8008f4a <HAL_GPIO_Init+0x20a>
 8008dfa:	4d6a      	ldr	r5, [pc, #424]	; (8008fa4 <HAL_GPIO_Init+0x264>)
 8008dfc:	42a8      	cmp	r0, r5
 8008dfe:	f000 80b2 	beq.w	8008f66 <HAL_GPIO_Init+0x226>
 8008e02:	4d69      	ldr	r5, [pc, #420]	; (8008fa8 <HAL_GPIO_Init+0x268>)
 8008e04:	42a8      	cmp	r0, r5
 8008e06:	f000 80b5 	beq.w	8008f74 <HAL_GPIO_Init+0x234>
 8008e0a:	f8df e1a4 	ldr.w	lr, [pc, #420]	; 8008fb0 <HAL_GPIO_Init+0x270>
 8008e0e:	4570      	cmp	r0, lr
 8008e10:	f000 80a2 	beq.w	8008f58 <HAL_GPIO_Init+0x218>
 8008e14:	f8df e19c 	ldr.w	lr, [pc, #412]	; 8008fb4 <HAL_GPIO_Init+0x274>
 8008e18:	4570      	cmp	r0, lr
 8008e1a:	f000 80b2 	beq.w	8008f82 <HAL_GPIO_Init+0x242>
 8008e1e:	f8df e198 	ldr.w	lr, [pc, #408]	; 8008fb8 <HAL_GPIO_Init+0x278>
 8008e22:	4570      	cmp	r0, lr
 8008e24:	bf0c      	ite	eq
 8008e26:	f04f 0e09 	moveq.w	lr, #9
 8008e2a:	f04f 0e0a 	movne.w	lr, #10
 8008e2e:	fa0e f707 	lsl.w	r7, lr, r7
 8008e32:	ea48 0807 	orr.w	r8, r8, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 8008e36:	f8c1 8008 	str.w	r8, [r1, #8]
        temp = EXTI->RTSR;
 8008e3a:	68b1      	ldr	r1, [r6, #8]
        temp &= ~((uint32_t)iocurrent);
 8008e3c:	ea6f 050b 	mvn.w	r5, fp
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 8008e40:	f41c 1f80 	tst.w	ip, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 8008e44:	bf0c      	ite	eq
 8008e46:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 8008e48:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->RTSR = temp;
 8008e4c:	60b1      	str	r1, [r6, #8]

        temp = EXTI->FTSR;
 8008e4e:	68f1      	ldr	r1, [r6, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 8008e50:	f41c 1f00 	tst.w	ip, #2097152	; 0x200000
        temp &= ~((uint32_t)iocurrent);
 8008e54:	bf0c      	ite	eq
 8008e56:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 8008e58:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->FTSR = temp;
 8008e5c:	60f1      	str	r1, [r6, #12]

        temp = EXTI->EMR;
 8008e5e:	6871      	ldr	r1, [r6, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8008e60:	f41c 3f00 	tst.w	ip, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 8008e64:	bf0c      	ite	eq
 8008e66:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 8008e68:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->EMR = temp;
 8008e6c:	6071      	str	r1, [r6, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8008e6e:	6831      	ldr	r1, [r6, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8008e70:	f41c 3f80 	tst.w	ip, #65536	; 0x10000
  for(position = 0U; position < GPIO_NUMBER; position++)
 8008e74:	f103 0301 	add.w	r3, r3, #1
        temp &= ~((uint32_t)iocurrent);
 8008e78:	bf0c      	ite	eq
 8008e7a:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 8008e7c:	ea4b 0101 	orrne.w	r1, fp, r1
  for(position = 0U; position < GPIO_NUMBER; position++)
 8008e80:	2b10      	cmp	r3, #16
        }
        EXTI->IMR = temp;
 8008e82:	6031      	str	r1, [r6, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8008e84:	f102 0202 	add.w	r2, r2, #2
 8008e88:	f47f af6b 	bne.w	8008d62 <HAL_GPIO_Init+0x22>
      }
    }
  }
}
 8008e8c:	b005      	add	sp, #20
 8008e8e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= (GPIO_Init->Speed << (position * 2U));
 8008e92:	f8d9 500c 	ldr.w	r5, [r9, #12]
        temp = GPIOx->OSPEEDR; 
 8008e96:	f8d0 e008 	ldr.w	lr, [r0, #8]
        temp |= (GPIO_Init->Speed << (position * 2U));
 8008e9a:	fa05 f702 	lsl.w	r7, r5, r2
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8008e9e:	2503      	movs	r5, #3
 8008ea0:	fa05 f802 	lsl.w	r8, r5, r2
 8008ea4:	ea2e 0e08 	bic.w	lr, lr, r8
        temp |= (GPIO_Init->Speed << (position * 2U));
 8008ea8:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 8008eac:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 8008eae:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8008eb0:	ea27 0e0b 	bic.w	lr, r7, fp
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8008eb4:	f3cc 1700 	ubfx	r7, ip, #4, #1
 8008eb8:	409f      	lsls	r7, r3
 8008eba:	ea47 070e 	orr.w	r7, r7, lr
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8008ebe:	ea6f 0508 	mvn.w	r5, r8
        GPIOx->OTYPER = temp;
 8008ec2:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 8008ec4:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8008ec6:	ea07 0e05 	and.w	lr, r7, r5
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8008eca:	f8d9 7008 	ldr.w	r7, [r9, #8]
 8008ece:	4097      	lsls	r7, r2
 8008ed0:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8008ed4:	2902      	cmp	r1, #2
        GPIOx->PUPDR = temp;
 8008ed6:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8008ed8:	fa01 f102 	lsl.w	r1, r1, r2
 8008edc:	f47f af54 	bne.w	8008d88 <HAL_GPIO_Init+0x48>
        temp = GPIOx->AFR[position >> 3U];
 8008ee0:	ea4f 0ed3 	mov.w	lr, r3, lsr #3
 8008ee4:	eb00 0e8e 	add.w	lr, r0, lr, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8008ee8:	f003 0807 	and.w	r8, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 8008eec:	f8de 7020 	ldr.w	r7, [lr, #32]
 8008ef0:	9700      	str	r7, [sp, #0]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8008ef2:	f8d9 7010 	ldr.w	r7, [r9, #16]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8008ef6:	ea4f 0888 	mov.w	r8, r8, lsl #2
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8008efa:	fa07 f708 	lsl.w	r7, r7, r8
 8008efe:	9701      	str	r7, [sp, #4]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8008f00:	270f      	movs	r7, #15
 8008f02:	fa07 f808 	lsl.w	r8, r7, r8
 8008f06:	9f00      	ldr	r7, [sp, #0]
 8008f08:	ea27 0808 	bic.w	r8, r7, r8
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8008f0c:	9f01      	ldr	r7, [sp, #4]
 8008f0e:	ea47 0708 	orr.w	r7, r7, r8
        GPIOx->AFR[position >> 3U] = temp;
 8008f12:	f8ce 7020 	str.w	r7, [lr, #32]
 8008f16:	e737      	b.n	8008d88 <HAL_GPIO_Init+0x48>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8008f18:	2503      	movs	r5, #3
 8008f1a:	4095      	lsls	r5, r2
 8008f1c:	43ed      	mvns	r5, r5
 8008f1e:	e7d1      	b.n	8008ec4 <HAL_GPIO_Init+0x184>
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8008f20:	f04f 0e01 	mov.w	lr, #1
 8008f24:	fa0e f707 	lsl.w	r7, lr, r7
 8008f28:	ea48 0807 	orr.w	r8, r8, r7
 8008f2c:	e783      	b.n	8008e36 <HAL_GPIO_Init+0xf6>
 8008f2e:	f04f 0e02 	mov.w	lr, #2
 8008f32:	fa0e f707 	lsl.w	r7, lr, r7
 8008f36:	ea48 0807 	orr.w	r8, r8, r7
 8008f3a:	e77c      	b.n	8008e36 <HAL_GPIO_Init+0xf6>
 8008f3c:	f04f 0e03 	mov.w	lr, #3
 8008f40:	fa0e f707 	lsl.w	r7, lr, r7
 8008f44:	ea48 0807 	orr.w	r8, r8, r7
 8008f48:	e775      	b.n	8008e36 <HAL_GPIO_Init+0xf6>
 8008f4a:	f04f 0e04 	mov.w	lr, #4
 8008f4e:	fa0e f707 	lsl.w	r7, lr, r7
 8008f52:	ea48 0807 	orr.w	r8, r8, r7
 8008f56:	e76e      	b.n	8008e36 <HAL_GPIO_Init+0xf6>
 8008f58:	f04f 0e07 	mov.w	lr, #7
 8008f5c:	fa0e f707 	lsl.w	r7, lr, r7
 8008f60:	ea48 0807 	orr.w	r8, r8, r7
 8008f64:	e767      	b.n	8008e36 <HAL_GPIO_Init+0xf6>
 8008f66:	f04f 0e05 	mov.w	lr, #5
 8008f6a:	fa0e f707 	lsl.w	r7, lr, r7
 8008f6e:	ea48 0807 	orr.w	r8, r8, r7
 8008f72:	e760      	b.n	8008e36 <HAL_GPIO_Init+0xf6>
 8008f74:	f04f 0e06 	mov.w	lr, #6
 8008f78:	fa0e f707 	lsl.w	r7, lr, r7
 8008f7c:	ea48 0807 	orr.w	r8, r8, r7
 8008f80:	e759      	b.n	8008e36 <HAL_GPIO_Init+0xf6>
 8008f82:	f04f 0e08 	mov.w	lr, #8
 8008f86:	fa0e f707 	lsl.w	r7, lr, r7
 8008f8a:	ea48 0807 	orr.w	r8, r8, r7
 8008f8e:	e752      	b.n	8008e36 <HAL_GPIO_Init+0xf6>
 8008f90:	40013c00 	.word	0x40013c00
 8008f94:	40020000 	.word	0x40020000
 8008f98:	40020800 	.word	0x40020800
 8008f9c:	40020c00 	.word	0x40020c00
 8008fa0:	40021000 	.word	0x40021000
 8008fa4:	40021400 	.word	0x40021400
 8008fa8:	40021800 	.word	0x40021800
 8008fac:	40023800 	.word	0x40023800
 8008fb0:	40021c00 	.word	0x40021c00
 8008fb4:	40022000 	.word	0x40022000
 8008fb8:	40022400 	.word	0x40022400

08008fbc <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 8008fbc:	6903      	ldr	r3, [r0, #16]
 8008fbe:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 8008fc0:	bf14      	ite	ne
 8008fc2:	2001      	movne	r0, #1
 8008fc4:	2000      	moveq	r0, #0
 8008fc6:	4770      	bx	lr

08008fc8 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8008fc8:	b902      	cbnz	r2, 8008fcc <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8008fca:	0409      	lsls	r1, r1, #16
 8008fcc:	6181      	str	r1, [r0, #24]
  }
}
 8008fce:	4770      	bx	lr

08008fd0 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 8008fd0:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 8008fd2:	ea01 0203 	and.w	r2, r1, r3
 8008fd6:	ea21 0103 	bic.w	r1, r1, r3
 8008fda:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8008fde:	6181      	str	r1, [r0, #24]
}
 8008fe0:	4770      	bx	lr
 8008fe2:	bf00      	nop

08008fe4 <HAL_GPIO_EXTI_Callback>:
  /* Prevent unused argument(s) compilation warning */
  UNUSED(GPIO_Pin);
  /* NOTE: This function Should not be modified, when the callback is needed,
           the HAL_GPIO_EXTI_Callback could be implemented in the user file
   */
}
 8008fe4:	4770      	bx	lr
 8008fe6:	bf00      	nop

08008fe8 <HAL_GPIO_EXTI_IRQHandler>:
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 8008fe8:	4a04      	ldr	r2, [pc, #16]	; (8008ffc <HAL_GPIO_EXTI_IRQHandler+0x14>)
 8008fea:	6951      	ldr	r1, [r2, #20]
 8008fec:	4201      	tst	r1, r0
 8008fee:	d100      	bne.n	8008ff2 <HAL_GPIO_EXTI_IRQHandler+0xa>
 8008ff0:	4770      	bx	lr
{
 8008ff2:	b508      	push	{r3, lr}
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 8008ff4:	6150      	str	r0, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 8008ff6:	f7ff fff5 	bl	8008fe4 <HAL_GPIO_EXTI_Callback>
}
 8008ffa:	bd08      	pop	{r3, pc}
 8008ffc:	40013c00 	.word	0x40013c00

08009000 <I2C_RequestMemoryWrite>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint32_t Timeout, uint32_t Tickstart)
{
 8009000:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  /* Generate Start */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8009004:	6804      	ldr	r4, [r0, #0]
{
 8009006:	b083      	sub	sp, #12
 8009008:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800900a:	6823      	ldr	r3, [r4, #0]
{
 800900c:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 8009010:	f8dd b034 	ldr.w	fp, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8009014:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 8009018:	4606      	mov	r6, r0
 800901a:	468a      	mov	sl, r1
 800901c:	4617      	mov	r7, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800901e:	6023      	str	r3, [r4, #0]
  * @param  Status The new Flag status (SET or RESET).
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 8009020:	f1b9 3fff 	cmp.w	r9, #4294967295
 8009024:	d136      	bne.n	8009094 <I2C_RequestMemoryWrite+0x94>
{
  /* Wait until flag is set */
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009026:	6965      	ldr	r5, [r4, #20]
 8009028:	07e8      	lsls	r0, r5, #31
 800902a:	d5fc      	bpl.n	8009026 <I2C_RequestMemoryWrite+0x26>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800902c:	f00a 03fe 	and.w	r3, sl, #254	; 0xfe
 8009030:	6123      	str	r3, [r4, #16]
  * @param  Flag specifies the I2C flag to check.
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 8009032:	f1b9 3fff 	cmp.w	r9, #4294967295
 8009036:	d003      	beq.n	8009040 <I2C_RequestMemoryWrite+0x40>
 8009038:	e04f      	b.n	80090da <I2C_RequestMemoryWrite+0xda>
{
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
  {
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800903a:	6961      	ldr	r1, [r4, #20]
 800903c:	054d      	lsls	r5, r1, #21
 800903e:	d45d      	bmi.n	80090fc <I2C_RequestMemoryWrite+0xfc>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009040:	6961      	ldr	r1, [r4, #20]
 8009042:	078b      	lsls	r3, r1, #30
 8009044:	d5f9      	bpl.n	800903a <I2C_RequestMemoryWrite+0x3a>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009046:	2300      	movs	r3, #0
 8009048:	9301      	str	r3, [sp, #4]
 800904a:	6963      	ldr	r3, [r4, #20]
 800904c:	9301      	str	r3, [sp, #4]
 800904e:	69a3      	ldr	r3, [r4, #24]
 8009050:	9301      	str	r3, [sp, #4]
 8009052:	9b01      	ldr	r3, [sp, #4]
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009054:	f1b9 3fff 	cmp.w	r9, #4294967295
 8009058:	f040 8088 	bne.w	800916c <I2C_RequestMemoryWrite+0x16c>
 800905c:	6963      	ldr	r3, [r4, #20]
 800905e:	061a      	lsls	r2, r3, #24
 8009060:	d464      	bmi.n	800912c <I2C_RequestMemoryWrite+0x12c>
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009062:	6963      	ldr	r3, [r4, #20]
 8009064:	055b      	lsls	r3, r3, #21
 8009066:	d5f9      	bpl.n	800905c <I2C_RequestMemoryWrite+0x5c>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);

    hi2c->PreviousState       = I2C_STATE_NONE;
 8009068:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800906a:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800906e:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009070:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 8009072:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8009074:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009078:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800907c:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800907e:	f043 0304 	orr.w	r3, r3, #4
 8009082:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009084:	6c33      	ldr	r3, [r6, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8009086:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009088:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800908a:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800908e:	d066      	beq.n	800915e <I2C_RequestMemoryWrite+0x15e>
    return HAL_ERROR;
 8009090:	2001      	movs	r0, #1
 8009092:	e01f      	b.n	80090d4 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009094:	6963      	ldr	r3, [r4, #20]
 8009096:	07d9      	lsls	r1, r3, #31
 8009098:	d4c8      	bmi.n	800902c <I2C_RequestMemoryWrite+0x2c>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800909a:	f7ff fc95 	bl	80089c8 <HAL_GetTick>
 800909e:	eba0 000b 	sub.w	r0, r0, fp
 80090a2:	4581      	cmp	r9, r0
 80090a4:	d304      	bcc.n	80090b0 <I2C_RequestMemoryWrite+0xb0>
 80090a6:	f1b9 0f00 	cmp.w	r9, #0
 80090aa:	d001      	beq.n	80090b0 <I2C_RequestMemoryWrite+0xb0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80090ac:	6834      	ldr	r4, [r6, #0]
 80090ae:	e7b7      	b.n	8009020 <I2C_RequestMemoryWrite+0x20>
        hi2c->PreviousState     = I2C_STATE_NONE;
 80090b0:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 80090b2:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 80090b4:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 80090b6:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 80090ba:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80090be:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80090c0:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 80090c2:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80090c6:	f042 0220 	orr.w	r2, r2, #32
 80090ca:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80090cc:	680b      	ldr	r3, [r1, #0]
 80090ce:	05dc      	lsls	r4, r3, #23
 80090d0:	d435      	bmi.n	800913e <I2C_RequestMemoryWrite+0x13e>
    return HAL_TIMEOUT;
 80090d2:	2003      	movs	r0, #3
}
 80090d4:	b003      	add	sp, #12
 80090d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80090da:	6963      	ldr	r3, [r4, #20]
 80090dc:	0798      	lsls	r0, r3, #30
 80090de:	d4b2      	bmi.n	8009046 <I2C_RequestMemoryWrite+0x46>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80090e0:	6963      	ldr	r3, [r4, #20]
 80090e2:	055a      	lsls	r2, r3, #21
 80090e4:	d40a      	bmi.n	80090fc <I2C_RequestMemoryWrite+0xfc>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80090e6:	f7ff fc6f 	bl	80089c8 <HAL_GetTick>
 80090ea:	eba0 000b 	sub.w	r0, r0, fp
 80090ee:	4581      	cmp	r9, r0
 80090f0:	d34e      	bcc.n	8009190 <I2C_RequestMemoryWrite+0x190>
 80090f2:	f1b9 0f00 	cmp.w	r9, #0
 80090f6:	d04b      	beq.n	8009190 <I2C_RequestMemoryWrite+0x190>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80090f8:	6834      	ldr	r4, [r6, #0]
 80090fa:	e79a      	b.n	8009032 <I2C_RequestMemoryWrite+0x32>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80090fc:	6823      	ldr	r3, [r4, #0]
 80090fe:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8009102:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 8009104:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009106:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 800910a:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800910c:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800910e:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8009110:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009114:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009118:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800911a:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800911e:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 8009122:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009124:	6433      	str	r3, [r6, #64]	; 0x40
}
 8009126:	b003      	add	sp, #12
 8009128:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800912c:	f1b8 0f01 	cmp.w	r8, #1
 8009130:	d109      	bne.n	8009146 <I2C_RequestMemoryWrite+0x146>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8009132:	b2ff      	uxtb	r7, r7
  return HAL_OK;
 8009134:	2000      	movs	r0, #0
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8009136:	6127      	str	r7, [r4, #16]
}
 8009138:	b003      	add	sp, #12
 800913a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800913e:	f44f 7300 	mov.w	r3, #512	; 0x200
 8009142:	6433      	str	r3, [r6, #64]	; 0x40
 8009144:	e7c5      	b.n	80090d2 <I2C_RequestMemoryWrite+0xd2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8009146:	0a3b      	lsrs	r3, r7, #8
 8009148:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800914a:	f1b9 3fff 	cmp.w	r9, #4294967295
 800914e:	d12e      	bne.n	80091ae <I2C_RequestMemoryWrite+0x1ae>
 8009150:	6963      	ldr	r3, [r4, #20]
 8009152:	0619      	lsls	r1, r3, #24
 8009154:	d4ed      	bmi.n	8009132 <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009156:	6963      	ldr	r3, [r4, #20]
 8009158:	055a      	lsls	r2, r3, #21
 800915a:	d5f9      	bpl.n	8009150 <I2C_RequestMemoryWrite+0x150>
 800915c:	e784      	b.n	8009068 <I2C_RequestMemoryWrite+0x68>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800915e:	6832      	ldr	r2, [r6, #0]
 8009160:	6813      	ldr	r3, [r2, #0]
 8009162:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 8009166:	2001      	movs	r0, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009168:	6013      	str	r3, [r2, #0]
 800916a:	e7b3      	b.n	80090d4 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800916c:	6963      	ldr	r3, [r4, #20]
 800916e:	061d      	lsls	r5, r3, #24
 8009170:	d4dc      	bmi.n	800912c <I2C_RequestMemoryWrite+0x12c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009172:	6963      	ldr	r3, [r4, #20]
 8009174:	0559      	lsls	r1, r3, #21
 8009176:	f53f af77 	bmi.w	8009068 <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800917a:	f7ff fc25 	bl	80089c8 <HAL_GetTick>
 800917e:	eba0 000b 	sub.w	r0, r0, fp
 8009182:	4581      	cmp	r9, r0
 8009184:	d325      	bcc.n	80091d2 <I2C_RequestMemoryWrite+0x1d2>
 8009186:	f1b9 0f00 	cmp.w	r9, #0
 800918a:	d022      	beq.n	80091d2 <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800918c:	6834      	ldr	r4, [r6, #0]
 800918e:	e761      	b.n	8009054 <I2C_RequestMemoryWrite+0x54>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8009190:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8009192:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8009194:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8009196:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800919a:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800919e:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 80091a0:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80091a4:	f043 0320 	orr.w	r3, r3, #32
 80091a8:	6433      	str	r3, [r6, #64]	; 0x40
    return HAL_ERROR;
 80091aa:	2001      	movs	r0, #1
 80091ac:	e792      	b.n	80090d4 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80091ae:	6963      	ldr	r3, [r4, #20]
 80091b0:	061b      	lsls	r3, r3, #24
 80091b2:	d4be      	bmi.n	8009132 <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80091b4:	6963      	ldr	r3, [r4, #20]
 80091b6:	0558      	lsls	r0, r3, #21
 80091b8:	f53f af56 	bmi.w	8009068 <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80091bc:	f7ff fc04 	bl	80089c8 <HAL_GetTick>
 80091c0:	eba0 000b 	sub.w	r0, r0, fp
 80091c4:	4581      	cmp	r9, r0
 80091c6:	d304      	bcc.n	80091d2 <I2C_RequestMemoryWrite+0x1d2>
 80091c8:	f1b9 0f00 	cmp.w	r9, #0
 80091cc:	d001      	beq.n	80091d2 <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80091ce:	6834      	ldr	r4, [r6, #0]
 80091d0:	e7bb      	b.n	800914a <I2C_RequestMemoryWrite+0x14a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 80091d2:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 80091d4:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 80091d6:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 80091d8:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 80091dc:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80091e0:	6c33      	ldr	r3, [r6, #64]	; 0x40
 80091e2:	4313      	orrs	r3, r2
 80091e4:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 80091e6:	e74d      	b.n	8009084 <I2C_RequestMemoryWrite+0x84>

080091e8 <I2C_RequestMemoryRead>:
{
 80091e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80091ec:	6804      	ldr	r4, [r0, #0]
{
 80091ee:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80091f0:	6823      	ldr	r3, [r4, #0]
 80091f2:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80091f6:	6023      	str	r3, [r4, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80091f8:	6823      	ldr	r3, [r4, #0]
{
 80091fa:	b083      	sub	sp, #12
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80091fc:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 8009200:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 8009204:	f8dd 9034 	ldr.w	r9, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8009208:	6023      	str	r3, [r4, #0]
{
 800920a:	4606      	mov	r6, r0
 800920c:	468b      	mov	fp, r1
 800920e:	4617      	mov	r7, r2
 8009210:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009214:	d13a      	bne.n	800928c <I2C_RequestMemoryRead+0xa4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009216:	6965      	ldr	r5, [r4, #20]
 8009218:	07eb      	lsls	r3, r5, #31
 800921a:	d5fc      	bpl.n	8009216 <I2C_RequestMemoryRead+0x2e>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800921c:	f00b 03fe 	and.w	r3, fp, #254	; 0xfe
 8009220:	6123      	str	r3, [r4, #16]
 8009222:	fa5f fb8b 	uxtb.w	fp, fp
 8009226:	f1ba 3fff 	cmp.w	sl, #4294967295
 800922a:	d003      	beq.n	8009234 <I2C_RequestMemoryRead+0x4c>
 800922c:	e069      	b.n	8009302 <I2C_RequestMemoryRead+0x11a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800922e:	6965      	ldr	r5, [r4, #20]
 8009230:	056a      	lsls	r2, r5, #21
 8009232:	d44e      	bmi.n	80092d2 <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009234:	6965      	ldr	r5, [r4, #20]
 8009236:	07a9      	lsls	r1, r5, #30
 8009238:	d5f9      	bpl.n	800922e <I2C_RequestMemoryRead+0x46>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800923a:	2300      	movs	r3, #0
 800923c:	9301      	str	r3, [sp, #4]
 800923e:	6963      	ldr	r3, [r4, #20]
 8009240:	9301      	str	r3, [sp, #4]
 8009242:	69a3      	ldr	r3, [r4, #24]
 8009244:	9301      	str	r3, [sp, #4]
 8009246:	9b01      	ldr	r3, [sp, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009248:	f1ba 3fff 	cmp.w	sl, #4294967295
 800924c:	f040 80bd 	bne.w	80093ca <I2C_RequestMemoryRead+0x1e2>
 8009250:	6963      	ldr	r3, [r4, #20]
 8009252:	0618      	lsls	r0, r3, #24
 8009254:	d468      	bmi.n	8009328 <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009256:	6963      	ldr	r3, [r4, #20]
 8009258:	0559      	lsls	r1, r3, #21
 800925a:	d5f9      	bpl.n	8009250 <I2C_RequestMemoryRead+0x68>
    hi2c->PreviousState       = I2C_STATE_NONE;
 800925c:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800925e:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 8009262:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009264:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 8009266:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8009268:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800926c:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009270:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8009272:	f043 0304 	orr.w	r3, r3, #4
 8009276:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009278:	6c33      	ldr	r3, [r6, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 800927a:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800927c:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800927e:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009282:	d070      	beq.n	8009366 <I2C_RequestMemoryRead+0x17e>
    return HAL_ERROR;
 8009284:	2001      	movs	r0, #1
}
 8009286:	b003      	add	sp, #12
 8009288:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800928c:	6963      	ldr	r3, [r4, #20]
 800928e:	07dd      	lsls	r5, r3, #31
 8009290:	d4c4      	bmi.n	800921c <I2C_RequestMemoryRead+0x34>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009292:	f7ff fb99 	bl	80089c8 <HAL_GetTick>
 8009296:	eba0 0009 	sub.w	r0, r0, r9
 800929a:	4582      	cmp	sl, r0
 800929c:	d304      	bcc.n	80092a8 <I2C_RequestMemoryRead+0xc0>
 800929e:	f1ba 0f00 	cmp.w	sl, #0
 80092a2:	d001      	beq.n	80092a8 <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80092a4:	6834      	ldr	r4, [r6, #0]
 80092a6:	e7b3      	b.n	8009210 <I2C_RequestMemoryRead+0x28>
        hi2c->PreviousState     = I2C_STATE_NONE;
 80092a8:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 80092aa:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 80092ac:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 80092ae:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 80092b2:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80092b6:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80092b8:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 80092ba:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80092be:	f042 0220 	orr.w	r2, r2, #32
 80092c2:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80092c4:	680b      	ldr	r3, [r1, #0]
 80092c6:	05dc      	lsls	r4, r3, #23
 80092c8:	d43d      	bmi.n	8009346 <I2C_RequestMemoryRead+0x15e>
    return HAL_TIMEOUT;
 80092ca:	2003      	movs	r0, #3
}
 80092cc:	b003      	add	sp, #12
 80092ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80092d2:	6823      	ldr	r3, [r4, #0]
 80092d4:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80092d8:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 80092da:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80092dc:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 80092e0:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80092e2:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 80092e4:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 80092e6:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 80092ea:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80092ee:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 80092f0:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80092f4:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 80092f8:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80092fa:	6433      	str	r3, [r6, #64]	; 0x40
}
 80092fc:	b003      	add	sp, #12
 80092fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009302:	6963      	ldr	r3, [r4, #20]
 8009304:	079b      	lsls	r3, r3, #30
 8009306:	d498      	bmi.n	800923a <I2C_RequestMemoryRead+0x52>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009308:	6963      	ldr	r3, [r4, #20]
 800930a:	0558      	lsls	r0, r3, #21
 800930c:	d4e1      	bmi.n	80092d2 <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800930e:	f7ff fb5b 	bl	80089c8 <HAL_GetTick>
 8009312:	eba0 0009 	sub.w	r0, r0, r9
 8009316:	4582      	cmp	sl, r0
 8009318:	f0c0 808f 	bcc.w	800943a <I2C_RequestMemoryRead+0x252>
 800931c:	f1ba 0f00 	cmp.w	sl, #0
 8009320:	f000 808b 	beq.w	800943a <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009324:	6834      	ldr	r4, [r6, #0]
 8009326:	e77e      	b.n	8009226 <I2C_RequestMemoryRead+0x3e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8009328:	f1b8 0f01 	cmp.w	r8, #1
 800932c:	d10f      	bne.n	800934e <I2C_RequestMemoryRead+0x166>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800932e:	b2ff      	uxtb	r7, r7
 8009330:	6127      	str	r7, [r4, #16]
 8009332:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009336:	d16e      	bne.n	8009416 <I2C_RequestMemoryRead+0x22e>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009338:	6963      	ldr	r3, [r4, #20]
 800933a:	061b      	lsls	r3, r3, #24
 800933c:	d41a      	bmi.n	8009374 <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800933e:	6963      	ldr	r3, [r4, #20]
 8009340:	055f      	lsls	r7, r3, #21
 8009342:	d5f9      	bpl.n	8009338 <I2C_RequestMemoryRead+0x150>
 8009344:	e78a      	b.n	800925c <I2C_RequestMemoryRead+0x74>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8009346:	f44f 7300 	mov.w	r3, #512	; 0x200
 800934a:	6433      	str	r3, [r6, #64]	; 0x40
 800934c:	e7bd      	b.n	80092ca <I2C_RequestMemoryRead+0xe2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800934e:	0a3b      	lsrs	r3, r7, #8
 8009350:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009352:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009356:	d17e      	bne.n	8009456 <I2C_RequestMemoryRead+0x26e>
 8009358:	6963      	ldr	r3, [r4, #20]
 800935a:	061d      	lsls	r5, r3, #24
 800935c:	d4e7      	bmi.n	800932e <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800935e:	6963      	ldr	r3, [r4, #20]
 8009360:	0558      	lsls	r0, r3, #21
 8009362:	d5f9      	bpl.n	8009358 <I2C_RequestMemoryRead+0x170>
 8009364:	e77a      	b.n	800925c <I2C_RequestMemoryRead+0x74>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009366:	6832      	ldr	r2, [r6, #0]
 8009368:	6813      	ldr	r3, [r2, #0]
 800936a:	f443 7300 	orr.w	r3, r3, #512	; 0x200
    return HAL_ERROR;
 800936e:	2001      	movs	r0, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009370:	6013      	str	r3, [r2, #0]
 8009372:	e7ab      	b.n	80092cc <I2C_RequestMemoryRead+0xe4>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8009374:	6823      	ldr	r3, [r4, #0]
 8009376:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800937a:	6023      	str	r3, [r4, #0]
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800937c:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009380:	d113      	bne.n	80093aa <I2C_RequestMemoryRead+0x1c2>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009382:	6963      	ldr	r3, [r4, #20]
 8009384:	07d8      	lsls	r0, r3, #31
 8009386:	d5fc      	bpl.n	8009382 <I2C_RequestMemoryRead+0x19a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8009388:	f04b 0301 	orr.w	r3, fp, #1
 800938c:	6123      	str	r3, [r4, #16]
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 800938e:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009392:	d003      	beq.n	800939c <I2C_RequestMemoryRead+0x1b4>
 8009394:	e02b      	b.n	80093ee <I2C_RequestMemoryRead+0x206>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009396:	6963      	ldr	r3, [r4, #20]
 8009398:	055b      	lsls	r3, r3, #21
 800939a:	d49a      	bmi.n	80092d2 <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800939c:	6963      	ldr	r3, [r4, #20]
 800939e:	43db      	mvns	r3, r3
 80093a0:	f013 0302 	ands.w	r3, r3, #2
 80093a4:	d1f7      	bne.n	8009396 <I2C_RequestMemoryRead+0x1ae>
  return HAL_OK;
 80093a6:	4618      	mov	r0, r3
 80093a8:	e790      	b.n	80092cc <I2C_RequestMemoryRead+0xe4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80093aa:	6963      	ldr	r3, [r4, #20]
 80093ac:	07d9      	lsls	r1, r3, #31
 80093ae:	d4eb      	bmi.n	8009388 <I2C_RequestMemoryRead+0x1a0>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80093b0:	f7ff fb0a 	bl	80089c8 <HAL_GetTick>
 80093b4:	eba0 0009 	sub.w	r0, r0, r9
 80093b8:	4582      	cmp	sl, r0
 80093ba:	f4ff af75 	bcc.w	80092a8 <I2C_RequestMemoryRead+0xc0>
 80093be:	f1ba 0f00 	cmp.w	sl, #0
 80093c2:	f43f af71 	beq.w	80092a8 <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80093c6:	6834      	ldr	r4, [r6, #0]
 80093c8:	e7d8      	b.n	800937c <I2C_RequestMemoryRead+0x194>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80093ca:	6963      	ldr	r3, [r4, #20]
 80093cc:	061a      	lsls	r2, r3, #24
 80093ce:	d4ab      	bmi.n	8009328 <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80093d0:	6963      	ldr	r3, [r4, #20]
 80093d2:	055d      	lsls	r5, r3, #21
 80093d4:	f53f af42 	bmi.w	800925c <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80093d8:	f7ff faf6 	bl	80089c8 <HAL_GetTick>
 80093dc:	eba0 0009 	sub.w	r0, r0, r9
 80093e0:	4582      	cmp	sl, r0
 80093e2:	d34b      	bcc.n	800947c <I2C_RequestMemoryRead+0x294>
 80093e4:	f1ba 0f00 	cmp.w	sl, #0
 80093e8:	d048      	beq.n	800947c <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80093ea:	6834      	ldr	r4, [r6, #0]
 80093ec:	e72c      	b.n	8009248 <I2C_RequestMemoryRead+0x60>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80093ee:	6963      	ldr	r3, [r4, #20]
 80093f0:	43db      	mvns	r3, r3
 80093f2:	f013 0302 	ands.w	r3, r3, #2
 80093f6:	d0d6      	beq.n	80093a6 <I2C_RequestMemoryRead+0x1be>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80093f8:	6963      	ldr	r3, [r4, #20]
 80093fa:	055a      	lsls	r2, r3, #21
 80093fc:	f53f af69 	bmi.w	80092d2 <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009400:	f7ff fae2 	bl	80089c8 <HAL_GetTick>
 8009404:	eba0 0009 	sub.w	r0, r0, r9
 8009408:	4582      	cmp	sl, r0
 800940a:	d316      	bcc.n	800943a <I2C_RequestMemoryRead+0x252>
 800940c:	f1ba 0f00 	cmp.w	sl, #0
 8009410:	d013      	beq.n	800943a <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009412:	6834      	ldr	r4, [r6, #0]
 8009414:	e7bb      	b.n	800938e <I2C_RequestMemoryRead+0x1a6>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009416:	6963      	ldr	r3, [r4, #20]
 8009418:	061d      	lsls	r5, r3, #24
 800941a:	d4ab      	bmi.n	8009374 <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800941c:	6963      	ldr	r3, [r4, #20]
 800941e:	055a      	lsls	r2, r3, #21
 8009420:	f53f af1c 	bmi.w	800925c <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009424:	f7ff fad0 	bl	80089c8 <HAL_GetTick>
 8009428:	eba0 0009 	sub.w	r0, r0, r9
 800942c:	4582      	cmp	sl, r0
 800942e:	d325      	bcc.n	800947c <I2C_RequestMemoryRead+0x294>
 8009430:	f1ba 0f00 	cmp.w	sl, #0
 8009434:	d022      	beq.n	800947c <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009436:	6834      	ldr	r4, [r6, #0]
 8009438:	e77b      	b.n	8009332 <I2C_RequestMemoryRead+0x14a>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800943a:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800943c:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800943e:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8009440:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009444:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8009448:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800944a:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800944e:	f043 0320 	orr.w	r3, r3, #32
 8009452:	6433      	str	r3, [r6, #64]	; 0x40
 8009454:	e716      	b.n	8009284 <I2C_RequestMemoryRead+0x9c>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009456:	6963      	ldr	r3, [r4, #20]
 8009458:	0619      	lsls	r1, r3, #24
 800945a:	f53f af68 	bmi.w	800932e <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800945e:	6963      	ldr	r3, [r4, #20]
 8009460:	055b      	lsls	r3, r3, #21
 8009462:	f53f aefb 	bmi.w	800925c <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009466:	f7ff faaf 	bl	80089c8 <HAL_GetTick>
 800946a:	eba0 0009 	sub.w	r0, r0, r9
 800946e:	4582      	cmp	sl, r0
 8009470:	d304      	bcc.n	800947c <I2C_RequestMemoryRead+0x294>
 8009472:	f1ba 0f00 	cmp.w	sl, #0
 8009476:	d001      	beq.n	800947c <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009478:	6834      	ldr	r4, [r6, #0]
 800947a:	e76a      	b.n	8009352 <I2C_RequestMemoryRead+0x16a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800947c:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800947e:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009480:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009482:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009486:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800948a:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800948c:	4313      	orrs	r3, r2
 800948e:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 8009490:	e6f2      	b.n	8009278 <I2C_RequestMemoryRead+0x90>
 8009492:	bf00      	nop

08009494 <HAL_I2C_Init>:
  if (hi2c == NULL)
 8009494:	2800      	cmp	r0, #0
 8009496:	f000 80b9 	beq.w	800960c <HAL_I2C_Init+0x178>
{
 800949a:	b570      	push	{r4, r5, r6, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 800949c:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 80094a0:	4604      	mov	r4, r0
 80094a2:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80094a6:	2b00      	cmp	r3, #0
 80094a8:	f000 8098 	beq.w	80095dc <HAL_I2C_Init+0x148>
  __HAL_I2C_DISABLE(hi2c);
 80094ac:	6823      	ldr	r3, [r4, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 80094ae:	2224      	movs	r2, #36	; 0x24
 80094b0:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 80094b4:	681a      	ldr	r2, [r3, #0]
 80094b6:	f022 0201 	bic.w	r2, r2, #1
 80094ba:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 80094bc:	681a      	ldr	r2, [r3, #0]
 80094be:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80094c2:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 80094c4:	681a      	ldr	r2, [r3, #0]
 80094c6:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 80094ca:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 80094cc:	f001 fe70 	bl	800b1b0 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 80094d0:	6865      	ldr	r5, [r4, #4]
 80094d2:	4b4f      	ldr	r3, [pc, #316]	; (8009610 <HAL_I2C_Init+0x17c>)
 80094d4:	429d      	cmp	r5, r3
 80094d6:	d84f      	bhi.n	8009578 <HAL_I2C_Init+0xe4>
 80094d8:	4b4e      	ldr	r3, [pc, #312]	; (8009614 <HAL_I2C_Init+0x180>)
 80094da:	4298      	cmp	r0, r3
 80094dc:	d97c      	bls.n	80095d8 <HAL_I2C_Init+0x144>
  freqrange = I2C_FREQRANGE(pclk1);
 80094de:	4b4e      	ldr	r3, [pc, #312]	; (8009618 <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 80094e0:	006a      	lsls	r2, r5, #1
  freqrange = I2C_FREQRANGE(pclk1);
 80094e2:	fba3 3500 	umull	r3, r5, r3, r0
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 80094e6:	1e43      	subs	r3, r0, #1
 80094e8:	fbb3 f3f2 	udiv	r3, r3, r2
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 80094ec:	6822      	ldr	r2, [r4, #0]
 80094ee:	6851      	ldr	r1, [r2, #4]
 80094f0:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 80094f4:	ea41 4195 	orr.w	r1, r1, r5, lsr #18
 80094f8:	6051      	str	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 80094fa:	6a11      	ldr	r1, [r2, #32]
  freqrange = I2C_FREQRANGE(pclk1);
 80094fc:	ea4f 4c95 	mov.w	ip, r5, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8009500:	f10c 0c01 	add.w	ip, ip, #1
 8009504:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 8009508:	ea41 010c 	orr.w	r1, r1, ip
 800950c:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800950e:	69d1      	ldr	r1, [r2, #28]
 8009510:	f640 70fc 	movw	r0, #4092	; 0xffc
 8009514:	3301      	adds	r3, #1
 8009516:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 800951a:	4203      	tst	r3, r0
 800951c:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8009520:	d161      	bne.n	80095e6 <HAL_I2C_Init+0x152>
 8009522:	2304      	movs	r3, #4
 8009524:	430b      	orrs	r3, r1
 8009526:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8009528:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 800952c:	6811      	ldr	r1, [r2, #0]
 800952e:	4303      	orrs	r3, r0
 8009530:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8009534:	430b      	orrs	r3, r1
 8009536:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8009538:	6891      	ldr	r1, [r2, #8]
 800953a:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 800953e:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 8009542:	4303      	orrs	r3, r0
 8009544:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8009548:	430b      	orrs	r3, r1
 800954a:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 800954c:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8009550:	68d1      	ldr	r1, [r2, #12]
 8009552:	4303      	orrs	r3, r0
 8009554:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8009558:	430b      	orrs	r3, r1
 800955a:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 800955c:	6811      	ldr	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800955e:	2300      	movs	r3, #0
  __HAL_I2C_ENABLE(hi2c);
 8009560:	f041 0101 	orr.w	r1, r1, #1
  hi2c->State = HAL_I2C_STATE_READY;
 8009564:	2020      	movs	r0, #32
  __HAL_I2C_ENABLE(hi2c);
 8009566:	6011      	str	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8009568:	6423      	str	r3, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 800956a:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 800956e:	6323      	str	r3, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8009570:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
  return HAL_OK;
 8009574:	4618      	mov	r0, r3
}
 8009576:	bd70      	pop	{r4, r5, r6, pc}
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8009578:	4b28      	ldr	r3, [pc, #160]	; (800961c <HAL_I2C_Init+0x188>)
 800957a:	4298      	cmp	r0, r3
 800957c:	d92c      	bls.n	80095d8 <HAL_I2C_Init+0x144>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800957e:	6822      	ldr	r2, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 8009580:	4b25      	ldr	r3, [pc, #148]	; (8009618 <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8009582:	6851      	ldr	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8009584:	4e26      	ldr	r6, [pc, #152]	; (8009620 <HAL_I2C_Init+0x18c>)
  freqrange = I2C_FREQRANGE(pclk1);
 8009586:	fba3 3c00 	umull	r3, ip, r3, r0
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800958a:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800958e:	ea41 419c 	orr.w	r1, r1, ip, lsr #18
 8009592:	6051      	str	r1, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 8009594:	ea4f 439c 	mov.w	r3, ip, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8009598:	f44f 7196 	mov.w	r1, #300	; 0x12c
 800959c:	fb01 f303 	mul.w	r3, r1, r3
 80095a0:	fba6 6303 	umull	r6, r3, r6, r3
 80095a4:	6a11      	ldr	r1, [r2, #32]
 80095a6:	099b      	lsrs	r3, r3, #6
 80095a8:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 80095ac:	3301      	adds	r3, #1
 80095ae:	430b      	orrs	r3, r1
 80095b0:	6213      	str	r3, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 80095b2:	69d1      	ldr	r1, [r2, #28]
 80095b4:	68a3      	ldr	r3, [r4, #8]
 80095b6:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 80095ba:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 80095be:	b9ab      	cbnz	r3, 80095ec <HAL_I2C_Init+0x158>
 80095c0:	1e43      	subs	r3, r0, #1
 80095c2:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80095c6:	fbb3 f3f5 	udiv	r3, r3, r5
 80095ca:	3301      	adds	r3, #1
 80095cc:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80095d0:	b1d3      	cbz	r3, 8009608 <HAL_I2C_Init+0x174>
 80095d2:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80095d6:	e7a5      	b.n	8009524 <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 80095d8:	2001      	movs	r0, #1
}
 80095da:	bd70      	pop	{r4, r5, r6, pc}
    hi2c->Lock = HAL_UNLOCKED;
 80095dc:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 80095e0:	f7f8 fb26 	bl	8001c30 <HAL_I2C_MspInit>
 80095e4:	e762      	b.n	80094ac <HAL_I2C_Init+0x18>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 80095e6:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80095ea:	e79b      	b.n	8009524 <HAL_I2C_Init+0x90>
 80095ec:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 80095f0:	1e43      	subs	r3, r0, #1
 80095f2:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 80095f6:	fbb3 f3f5 	udiv	r3, r3, r5
 80095fa:	3301      	adds	r3, #1
 80095fc:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8009600:	b113      	cbz	r3, 8009608 <HAL_I2C_Init+0x174>
 8009602:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8009606:	e78d      	b.n	8009524 <HAL_I2C_Init+0x90>
 8009608:	2301      	movs	r3, #1
 800960a:	e78b      	b.n	8009524 <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 800960c:	2001      	movs	r0, #1
}
 800960e:	4770      	bx	lr
 8009610:	000186a0 	.word	0x000186a0
 8009614:	001e847f 	.word	0x001e847f
 8009618:	431bde83 	.word	0x431bde83
 800961c:	003d08ff 	.word	0x003d08ff
 8009620:	10624dd3 	.word	0x10624dd3

08009624 <HAL_I2C_Mem_Write>:
{
 8009624:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009628:	4604      	mov	r4, r0
 800962a:	b083      	sub	sp, #12
 800962c:	4699      	mov	r9, r3
 800962e:	f8bd a034 	ldrh.w	sl, [sp, #52]	; 0x34
 8009632:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8009634:	460f      	mov	r7, r1
 8009636:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8009638:	f7ff f9c6 	bl	80089c8 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800963c:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8009640:	2b20      	cmp	r3, #32
 8009642:	d004      	beq.n	800964e <HAL_I2C_Mem_Write+0x2a>
      return HAL_BUSY;
 8009644:	2702      	movs	r7, #2
}
 8009646:	4638      	mov	r0, r7
 8009648:	b003      	add	sp, #12
 800964a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800964e:	4605      	mov	r5, r0
 8009650:	e005      	b.n	800965e <HAL_I2C_Mem_Write+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009652:	f7ff f9b9 	bl	80089c8 <HAL_GetTick>
 8009656:	1b40      	subs	r0, r0, r5
 8009658:	2819      	cmp	r0, #25
 800965a:	f200 80a8 	bhi.w	80097ae <HAL_I2C_Mem_Write+0x18a>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800965e:	6820      	ldr	r0, [r4, #0]
 8009660:	6983      	ldr	r3, [r0, #24]
 8009662:	ea6f 0c03 	mvn.w	ip, r3
 8009666:	f01c 0b02 	ands.w	fp, ip, #2
 800966a:	d0f2      	beq.n	8009652 <HAL_I2C_Mem_Write+0x2e>
    __HAL_LOCK(hi2c);
 800966c:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8009670:	2b01      	cmp	r3, #1
 8009672:	d0e7      	beq.n	8009644 <HAL_I2C_Mem_Write+0x20>
 8009674:	2301      	movs	r3, #1
 8009676:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800967a:	6803      	ldr	r3, [r0, #0]
 800967c:	07db      	lsls	r3, r3, #31
 800967e:	d572      	bpl.n	8009766 <HAL_I2C_Mem_Write+0x142>
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8009680:	4639      	mov	r1, r7
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8009682:	6807      	ldr	r7, [r0, #0]
 8009684:	f427 6700 	bic.w	r7, r7, #2048	; 0x800
 8009688:	6007      	str	r7, [r0, #0]
    hi2c->pBuffPtr    = pData;
 800968a:	980c      	ldr	r0, [sp, #48]	; 0x30
 800968c:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800968e:	2021      	movs	r0, #33	; 0x21
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8009690:	e9cd 6500 	strd	r6, r5, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8009694:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8009698:	2040      	movs	r0, #64	; 0x40
 800969a:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800969e:	2000      	movs	r0, #0
 80096a0:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 80096a2:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 80096a6:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 80096a8:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 80096aa:	4856      	ldr	r0, [pc, #344]	; (8009804 <HAL_I2C_Mem_Write+0x1e0>)
 80096ac:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 80096ae:	464b      	mov	r3, r9
 80096b0:	4642      	mov	r2, r8
 80096b2:	4620      	mov	r0, r4
 80096b4:	f7ff fca4 	bl	8009000 <I2C_RequestMemoryWrite>
 80096b8:	4607      	mov	r7, r0
 80096ba:	bb00      	cbnz	r0, 80096fe <HAL_I2C_Mem_Write+0xda>
    while (hi2c->XferSize > 0U)
 80096bc:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 80096be:	2b00      	cmp	r3, #0
 80096c0:	f000 809e 	beq.w	8009800 <HAL_I2C_Mem_Write+0x1dc>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 80096c4:	6823      	ldr	r3, [r4, #0]
 80096c6:	1c72      	adds	r2, r6, #1
 80096c8:	d159      	bne.n	800977e <HAL_I2C_Mem_Write+0x15a>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80096ca:	695a      	ldr	r2, [r3, #20]
 80096cc:	0610      	lsls	r0, r2, #24
 80096ce:	d41b      	bmi.n	8009708 <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80096d0:	695a      	ldr	r2, [r3, #20]
 80096d2:	0551      	lsls	r1, r2, #21
 80096d4:	d5f9      	bpl.n	80096ca <HAL_I2C_Mem_Write+0xa6>
    hi2c->PreviousState       = I2C_STATE_NONE;
 80096d6:	2200      	movs	r2, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80096d8:	f46f 6080 	mvn.w	r0, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 80096dc:	2120      	movs	r1, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80096de:	6158      	str	r0, [r3, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 80096e0:	6322      	str	r2, [r4, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 80096e2:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 80096e6:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80096ea:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80096ec:	f043 0304 	orr.w	r3, r3, #4
 80096f0:	6423      	str	r3, [r4, #64]	; 0x40
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80096f2:	6c23      	ldr	r3, [r4, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 80096f4:	2200      	movs	r2, #0
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80096f6:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 80096f8:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80096fc:	d038      	beq.n	8009770 <HAL_I2C_Mem_Write+0x14c>
      return HAL_ERROR;
 80096fe:	2701      	movs	r7, #1
}
 8009700:	4638      	mov	r0, r7
 8009702:	b003      	add	sp, #12
 8009704:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8009708:	f8d4 c024 	ldr.w	ip, [r4, #36]	; 0x24
      hi2c->XferSize--;
 800970c:	f8b4 e028 	ldrh.w	lr, [r4, #40]	; 0x28
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8009710:	4661      	mov	r1, ip
      hi2c->XferSize--;
 8009712:	f10e 30ff 	add.w	r0, lr, #4294967295
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8009716:	f811 2b01 	ldrb.w	r2, [r1], #1
 800971a:	611a      	str	r2, [r3, #16]
      hi2c->XferCount--;
 800971c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800971e:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8009720:	3a01      	subs	r2, #1
 8009722:	b292      	uxth	r2, r2
 8009724:	8562      	strh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8009726:	b282      	uxth	r2, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8009728:	6958      	ldr	r0, [r3, #20]
      hi2c->XferSize--;
 800972a:	8522      	strh	r2, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800972c:	0740      	lsls	r0, r0, #29
 800972e:	d517      	bpl.n	8009760 <HAL_I2C_Mem_Write+0x13c>
 8009730:	b942      	cbnz	r2, 8009744 <HAL_I2C_Mem_Write+0x120>
 8009732:	1c72      	adds	r2, r6, #1
 8009734:	d156      	bne.n	80097e4 <HAL_I2C_Mem_Write+0x1c0>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8009736:	695a      	ldr	r2, [r3, #20]
 8009738:	0750      	lsls	r0, r2, #29
 800973a:	d446      	bmi.n	80097ca <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800973c:	695a      	ldr	r2, [r3, #20]
 800973e:	0551      	lsls	r1, r2, #21
 8009740:	d5f9      	bpl.n	8009736 <HAL_I2C_Mem_Write+0x112>
 8009742:	e7c8      	b.n	80096d6 <HAL_I2C_Mem_Write+0xb2>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8009744:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8009748:	6119      	str	r1, [r3, #16]
        hi2c->pBuffPtr++;
 800974a:	f10c 0102 	add.w	r1, ip, #2
 800974e:	6261      	str	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 8009750:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
        hi2c->XferSize--;
 8009752:	f1ae 0202 	sub.w	r2, lr, #2
        hi2c->XferCount--;
 8009756:	3901      	subs	r1, #1
        hi2c->XferSize--;
 8009758:	b292      	uxth	r2, r2
        hi2c->XferCount--;
 800975a:	b289      	uxth	r1, r1
        hi2c->XferSize--;
 800975c:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->XferCount--;
 800975e:	8561      	strh	r1, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8009760:	2a00      	cmp	r2, #0
 8009762:	d1b0      	bne.n	80096c6 <HAL_I2C_Mem_Write+0xa2>
 8009764:	e7e5      	b.n	8009732 <HAL_I2C_Mem_Write+0x10e>
      __HAL_I2C_ENABLE(hi2c);
 8009766:	6803      	ldr	r3, [r0, #0]
 8009768:	f043 0301 	orr.w	r3, r3, #1
 800976c:	6003      	str	r3, [r0, #0]
 800976e:	e787      	b.n	8009680 <HAL_I2C_Mem_Write+0x5c>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009770:	6822      	ldr	r2, [r4, #0]
 8009772:	6813      	ldr	r3, [r2, #0]
 8009774:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 8009778:	2701      	movs	r7, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800977a:	6013      	str	r3, [r2, #0]
 800977c:	e763      	b.n	8009646 <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800977e:	695a      	ldr	r2, [r3, #20]
 8009780:	0612      	lsls	r2, r2, #24
 8009782:	d4c1      	bmi.n	8009708 <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009784:	695a      	ldr	r2, [r3, #20]
 8009786:	0551      	lsls	r1, r2, #21
 8009788:	d4a5      	bmi.n	80096d6 <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800978a:	f7ff f91d 	bl	80089c8 <HAL_GetTick>
 800978e:	1b40      	subs	r0, r0, r5
 8009790:	4286      	cmp	r6, r0
 8009792:	d301      	bcc.n	8009798 <HAL_I2C_Mem_Write+0x174>
 8009794:	2e00      	cmp	r6, #0
 8009796:	d195      	bne.n	80096c4 <HAL_I2C_Mem_Write+0xa0>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009798:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800979a:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800979c:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800979e:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 80097a2:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80097a6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80097a8:	4313      	orrs	r3, r2
 80097aa:	6423      	str	r3, [r4, #64]	; 0x40
        return HAL_ERROR;
 80097ac:	e7a1      	b.n	80096f2 <HAL_I2C_Mem_Write+0xce>
        hi2c->State             = HAL_I2C_STATE_READY;
 80097ae:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 80097b0:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 80097b4:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 80097b8:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80097bc:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 80097be:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80097c2:	f043 0320 	orr.w	r3, r3, #32
 80097c6:	6423      	str	r3, [r4, #64]	; 0x40
 80097c8:	e73c      	b.n	8009644 <HAL_I2C_Mem_Write+0x20>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80097ca:	681a      	ldr	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 80097cc:	2100      	movs	r1, #0
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80097ce:	f442 7200 	orr.w	r2, r2, #512	; 0x200
    hi2c->State = HAL_I2C_STATE_READY;
 80097d2:	2020      	movs	r0, #32
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80097d4:	601a      	str	r2, [r3, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 80097d6:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 80097da:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 80097de:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
    return HAL_OK;
 80097e2:	e730      	b.n	8009646 <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 80097e4:	695a      	ldr	r2, [r3, #20]
 80097e6:	0752      	lsls	r2, r2, #29
 80097e8:	d4ef      	bmi.n	80097ca <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80097ea:	695a      	ldr	r2, [r3, #20]
 80097ec:	0551      	lsls	r1, r2, #21
 80097ee:	f53f af72 	bmi.w	80096d6 <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80097f2:	f7ff f8e9 	bl	80089c8 <HAL_GetTick>
 80097f6:	1b40      	subs	r0, r0, r5
 80097f8:	4286      	cmp	r6, r0
 80097fa:	d3cd      	bcc.n	8009798 <HAL_I2C_Mem_Write+0x174>
 80097fc:	2e00      	cmp	r6, #0
 80097fe:	d0cb      	beq.n	8009798 <HAL_I2C_Mem_Write+0x174>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8009800:	6823      	ldr	r3, [r4, #0]
 8009802:	e796      	b.n	8009732 <HAL_I2C_Mem_Write+0x10e>
 8009804:	ffff0000 	.word	0xffff0000

08009808 <HAL_I2C_Mem_Read>:
{
 8009808:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800980c:	4604      	mov	r4, r0
 800980e:	b087      	sub	sp, #28
 8009810:	4699      	mov	r9, r3
 8009812:	f8bd a044 	ldrh.w	sl, [sp, #68]	; 0x44
 8009816:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8009818:	460f      	mov	r7, r1
 800981a:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800981c:	f7ff f8d4 	bl	80089c8 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8009820:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8009824:	2b20      	cmp	r3, #32
 8009826:	d004      	beq.n	8009832 <HAL_I2C_Mem_Read+0x2a>
      return HAL_BUSY;
 8009828:	2702      	movs	r7, #2
}
 800982a:	4638      	mov	r0, r7
 800982c:	b007      	add	sp, #28
 800982e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009832:	4606      	mov	r6, r0
 8009834:	e005      	b.n	8009842 <HAL_I2C_Mem_Read+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009836:	f7ff f8c7 	bl	80089c8 <HAL_GetTick>
 800983a:	1b80      	subs	r0, r0, r6
 800983c:	2819      	cmp	r0, #25
 800983e:	f200 80d2 	bhi.w	80099e6 <HAL_I2C_Mem_Read+0x1de>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009842:	f8d4 c000 	ldr.w	ip, [r4]
 8009846:	f8dc 0018 	ldr.w	r0, [ip, #24]
 800984a:	43c0      	mvns	r0, r0
 800984c:	f010 0b02 	ands.w	fp, r0, #2
 8009850:	d0f1      	beq.n	8009836 <HAL_I2C_Mem_Read+0x2e>
    __HAL_LOCK(hi2c);
 8009852:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8009856:	2b01      	cmp	r3, #1
 8009858:	d0e6      	beq.n	8009828 <HAL_I2C_Mem_Read+0x20>
 800985a:	2301      	movs	r3, #1
 800985c:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8009860:	f8dc 3000 	ldr.w	r3, [ip]
 8009864:	07d9      	lsls	r1, r3, #31
 8009866:	d537      	bpl.n	80098d8 <HAL_I2C_Mem_Read+0xd0>
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8009868:	f8dc 0000 	ldr.w	r0, [ip]
 800986c:	f420 6000 	bic.w	r0, r0, #2048	; 0x800
 8009870:	f8cc 0000 	str.w	r0, [ip]
    hi2c->pBuffPtr    = pData;
 8009874:	9810      	ldr	r0, [sp, #64]	; 0x40
 8009876:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8009878:	2022      	movs	r0, #34	; 0x22
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800987a:	e9cd 5600 	strd	r5, r6, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800987e:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8009882:	2040      	movs	r0, #64	; 0x40
 8009884:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8009888:	2000      	movs	r0, #0
 800988a:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 800988c:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8009890:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 8009892:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8009894:	4893      	ldr	r0, [pc, #588]	; (8009ae4 <HAL_I2C_Mem_Read+0x2dc>)
 8009896:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8009898:	4639      	mov	r1, r7
 800989a:	464b      	mov	r3, r9
 800989c:	4642      	mov	r2, r8
 800989e:	4620      	mov	r0, r4
 80098a0:	f7ff fca2 	bl	80091e8 <I2C_RequestMemoryRead>
 80098a4:	4607      	mov	r7, r0
 80098a6:	2800      	cmp	r0, #0
 80098a8:	f040 80ab 	bne.w	8009a02 <HAL_I2C_Mem_Read+0x1fa>
    if (hi2c->XferSize == 0U)
 80098ac:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 80098ae:	b9d2      	cbnz	r2, 80098e6 <HAL_I2C_Mem_Read+0xde>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80098b0:	6823      	ldr	r3, [r4, #0]
 80098b2:	9002      	str	r0, [sp, #8]
 80098b4:	695a      	ldr	r2, [r3, #20]
 80098b6:	9202      	str	r2, [sp, #8]
 80098b8:	699a      	ldr	r2, [r3, #24]
 80098ba:	9202      	str	r2, [sp, #8]
 80098bc:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80098be:	681a      	ldr	r2, [r3, #0]
 80098c0:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80098c4:	601a      	str	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 80098c6:	2300      	movs	r3, #0
    hi2c->State = HAL_I2C_STATE_READY;
 80098c8:	2220      	movs	r2, #32
 80098ca:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 80098ce:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 80098d2:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 80098d6:	e7a8      	b.n	800982a <HAL_I2C_Mem_Read+0x22>
      __HAL_I2C_ENABLE(hi2c);
 80098d8:	f8dc 3000 	ldr.w	r3, [ip]
 80098dc:	f043 0301 	orr.w	r3, r3, #1
 80098e0:	f8cc 3000 	str.w	r3, [ip]
 80098e4:	e7c0      	b.n	8009868 <HAL_I2C_Mem_Read+0x60>
    else if (hi2c->XferSize == 1U)
 80098e6:	2a01      	cmp	r2, #1
 80098e8:	f000 812c 	beq.w	8009b44 <HAL_I2C_Mem_Read+0x33c>
    else if (hi2c->XferSize == 2U)
 80098ec:	2a02      	cmp	r2, #2
 80098ee:	f000 80bd 	beq.w	8009a6c <HAL_I2C_Mem_Read+0x264>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80098f2:	6823      	ldr	r3, [r4, #0]
 80098f4:	9005      	str	r0, [sp, #20]
 80098f6:	6959      	ldr	r1, [r3, #20]
 80098f8:	9105      	str	r1, [sp, #20]
 80098fa:	6999      	ldr	r1, [r3, #24]
 80098fc:	9105      	str	r1, [sp, #20]
 80098fe:	9905      	ldr	r1, [sp, #20]
      if (hi2c->XferSize <= 3U)
 8009900:	2a03      	cmp	r2, #3
 8009902:	d849      	bhi.n	8009998 <HAL_I2C_Mem_Read+0x190>
        if (hi2c->XferSize == 1U)
 8009904:	2a01      	cmp	r2, #1
 8009906:	f000 80eb 	beq.w	8009ae0 <HAL_I2C_Mem_Read+0x2d8>
        else if (hi2c->XferSize == 2U)
 800990a:	2a02      	cmp	r2, #2
 800990c:	f000 8089 	beq.w	8009a22 <HAL_I2C_Mem_Read+0x21a>
 8009910:	1c69      	adds	r1, r5, #1
 8009912:	f040 80bb 	bne.w	8009a8c <HAL_I2C_Mem_Read+0x284>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009916:	695a      	ldr	r2, [r3, #20]
 8009918:	0752      	lsls	r2, r2, #29
 800991a:	d5fc      	bpl.n	8009916 <HAL_I2C_Mem_Read+0x10e>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800991c:	681a      	ldr	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800991e:	6a61      	ldr	r1, [r4, #36]	; 0x24
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009920:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8009924:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009926:	691b      	ldr	r3, [r3, #16]
 8009928:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 800992a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800992c:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800992e:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8009930:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 8009932:	3101      	adds	r1, #1
          hi2c->XferSize--;
 8009934:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 8009936:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 8009938:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800993a:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800993c:	8563      	strh	r3, [r4, #42]	; 0x2a
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800993e:	1c69      	adds	r1, r5, #1
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009940:	6822      	ldr	r2, [r4, #0]
 8009942:	f040 80af 	bne.w	8009aa4 <HAL_I2C_Mem_Read+0x29c>
 8009946:	6953      	ldr	r3, [r2, #20]
 8009948:	075b      	lsls	r3, r3, #29
 800994a:	d5fc      	bpl.n	8009946 <HAL_I2C_Mem_Read+0x13e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800994c:	6813      	ldr	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800994e:	6a61      	ldr	r1, [r4, #36]	; 0x24
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009950:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8009954:	6013      	str	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009956:	6913      	ldr	r3, [r2, #16]
 8009958:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 800995a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800995c:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800995e:	6a60      	ldr	r0, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009960:	6821      	ldr	r1, [r4, #0]
          hi2c->XferCount--;
 8009962:	3b01      	subs	r3, #1
 8009964:	b29b      	uxth	r3, r3
 8009966:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009968:	6909      	ldr	r1, [r1, #16]
          hi2c->XferSize--;
 800996a:	1e53      	subs	r3, r2, #1
          hi2c->pBuffPtr++;
 800996c:	f100 0c01 	add.w	ip, r0, #1
          hi2c->XferSize--;
 8009970:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 8009972:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009976:	7041      	strb	r1, [r0, #1]
          hi2c->XferSize--;
 8009978:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800997a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800997c:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800997e:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 8009980:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 8009982:	3101      	adds	r1, #1
          hi2c->XferSize--;
 8009984:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 8009986:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 8009988:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800998a:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800998c:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 800998e:	2a00      	cmp	r2, #0
 8009990:	d099      	beq.n	80098c6 <HAL_I2C_Mem_Read+0xbe>
      if (hi2c->XferSize <= 3U)
 8009992:	2a03      	cmp	r2, #3
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8009994:	6823      	ldr	r3, [r4, #0]
      if (hi2c->XferSize <= 3U)
 8009996:	d9b5      	bls.n	8009904 <HAL_I2C_Mem_Read+0xfc>
 8009998:	b95d      	cbnz	r5, 80099b2 <HAL_I2C_Mem_Read+0x1aa>
 800999a:	e0c5      	b.n	8009b28 <HAL_I2C_Mem_Read+0x320>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800999c:	695a      	ldr	r2, [r3, #20]
 800999e:	06d0      	lsls	r0, r2, #27
 80099a0:	f100 80b2 	bmi.w	8009b08 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80099a4:	f7ff f810 	bl	80089c8 <HAL_GetTick>
 80099a8:	1b80      	subs	r0, r0, r6
 80099aa:	4285      	cmp	r5, r0
 80099ac:	f0c0 8086 	bcc.w	8009abc <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 80099b0:	6823      	ldr	r3, [r4, #0]
 80099b2:	695a      	ldr	r2, [r3, #20]
 80099b4:	0652      	lsls	r2, r2, #25
 80099b6:	d5f1      	bpl.n	800999c <HAL_I2C_Mem_Read+0x194>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80099b8:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80099ba:	691b      	ldr	r3, [r3, #16]
 80099bc:	7013      	strb	r3, [r2, #0]
        hi2c->XferCount--;
 80099be:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 80099c0:	6820      	ldr	r0, [r4, #0]
        hi2c->XferSize--;
 80099c2:	8d22      	ldrh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 80099c4:	6a61      	ldr	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 80099c6:	3b01      	subs	r3, #1
 80099c8:	b29b      	uxth	r3, r3
 80099ca:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 80099cc:	6943      	ldr	r3, [r0, #20]
        hi2c->XferSize--;
 80099ce:	3a01      	subs	r2, #1
 80099d0:	b292      	uxth	r2, r2
        hi2c->pBuffPtr++;
 80099d2:	f101 0c01 	add.w	ip, r1, #1
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 80099d6:	075b      	lsls	r3, r3, #29
        hi2c->XferSize--;
 80099d8:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 80099da:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 80099de:	d5d6      	bpl.n	800998e <HAL_I2C_Mem_Read+0x186>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80099e0:	6903      	ldr	r3, [r0, #16]
 80099e2:	704b      	strb	r3, [r1, #1]
 80099e4:	e036      	b.n	8009a54 <HAL_I2C_Mem_Read+0x24c>
        hi2c->State             = HAL_I2C_STATE_READY;
 80099e6:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 80099e8:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 80099ec:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 80099f0:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80099f4:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 80099f6:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80099fa:	f043 0320 	orr.w	r3, r3, #32
 80099fe:	6423      	str	r3, [r4, #64]	; 0x40
 8009a00:	e712      	b.n	8009828 <HAL_I2C_Mem_Read+0x20>
      return HAL_ERROR;
 8009a02:	2701      	movs	r7, #1
}
 8009a04:	4638      	mov	r0, r7
 8009a06:	b007      	add	sp, #28
 8009a08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009a0c:	695a      	ldr	r2, [r3, #20]
 8009a0e:	0750      	lsls	r0, r2, #29
 8009a10:	d40c      	bmi.n	8009a2c <HAL_I2C_Mem_Read+0x224>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009a12:	f7fe ffd9 	bl	80089c8 <HAL_GetTick>
 8009a16:	1b80      	subs	r0, r0, r6
 8009a18:	4285      	cmp	r5, r0
 8009a1a:	d34f      	bcc.n	8009abc <HAL_I2C_Mem_Read+0x2b4>
 8009a1c:	2d00      	cmp	r5, #0
 8009a1e:	d04d      	beq.n	8009abc <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009a20:	6823      	ldr	r3, [r4, #0]
 8009a22:	1c69      	adds	r1, r5, #1
 8009a24:	d1f2      	bne.n	8009a0c <HAL_I2C_Mem_Read+0x204>
 8009a26:	695a      	ldr	r2, [r3, #20]
 8009a28:	0752      	lsls	r2, r2, #29
 8009a2a:	d5fc      	bpl.n	8009a26 <HAL_I2C_Mem_Read+0x21e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009a2c:	681a      	ldr	r2, [r3, #0]
 8009a2e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8009a32:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009a34:	691a      	ldr	r2, [r3, #16]
 8009a36:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8009a38:	701a      	strb	r2, [r3, #0]
          hi2c->XferCount--;
 8009a3a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 8009a3c:	6a62      	ldr	r2, [r4, #36]	; 0x24
          hi2c->XferCount--;
 8009a3e:	3b01      	subs	r3, #1
 8009a40:	b29b      	uxth	r3, r3
 8009a42:	8563      	strh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 8009a44:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8009a46:	3b01      	subs	r3, #1
 8009a48:	8523      	strh	r3, [r4, #40]	; 0x28
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009a4a:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 8009a4c:	1c51      	adds	r1, r2, #1
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009a4e:	691b      	ldr	r3, [r3, #16]
          hi2c->pBuffPtr++;
 8009a50:	6261      	str	r1, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009a52:	7053      	strb	r3, [r2, #1]
          hi2c->pBuffPtr++;
 8009a54:	6a63      	ldr	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8009a56:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 8009a58:	3301      	adds	r3, #1
 8009a5a:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferCount--;
 8009a5c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 8009a5e:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 8009a60:	3b01      	subs	r3, #1
          hi2c->XferSize--;
 8009a62:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 8009a64:	b29b      	uxth	r3, r3
          hi2c->XferSize--;
 8009a66:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8009a68:	8563      	strh	r3, [r4, #42]	; 0x2a
 8009a6a:	e790      	b.n	800998e <HAL_I2C_Mem_Read+0x186>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009a6c:	6823      	ldr	r3, [r4, #0]
 8009a6e:	6819      	ldr	r1, [r3, #0]
 8009a70:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 8009a74:	6019      	str	r1, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8009a76:	6819      	ldr	r1, [r3, #0]
 8009a78:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 8009a7c:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009a7e:	9004      	str	r0, [sp, #16]
 8009a80:	6959      	ldr	r1, [r3, #20]
 8009a82:	9104      	str	r1, [sp, #16]
 8009a84:	6999      	ldr	r1, [r3, #24]
 8009a86:	9104      	str	r1, [sp, #16]
 8009a88:	9904      	ldr	r1, [sp, #16]
 8009a8a:	e739      	b.n	8009900 <HAL_I2C_Mem_Read+0xf8>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009a8c:	695a      	ldr	r2, [r3, #20]
 8009a8e:	0750      	lsls	r0, r2, #29
 8009a90:	f53f af44 	bmi.w	800991c <HAL_I2C_Mem_Read+0x114>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009a94:	f7fe ff98 	bl	80089c8 <HAL_GetTick>
 8009a98:	1b80      	subs	r0, r0, r6
 8009a9a:	4285      	cmp	r5, r0
 8009a9c:	d30e      	bcc.n	8009abc <HAL_I2C_Mem_Read+0x2b4>
 8009a9e:	b16d      	cbz	r5, 8009abc <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009aa0:	6823      	ldr	r3, [r4, #0]
 8009aa2:	e735      	b.n	8009910 <HAL_I2C_Mem_Read+0x108>
 8009aa4:	6953      	ldr	r3, [r2, #20]
 8009aa6:	0758      	lsls	r0, r3, #29
 8009aa8:	f53f af50 	bmi.w	800994c <HAL_I2C_Mem_Read+0x144>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009aac:	f7fe ff8c 	bl	80089c8 <HAL_GetTick>
 8009ab0:	1b80      	subs	r0, r0, r6
 8009ab2:	4285      	cmp	r5, r0
 8009ab4:	d302      	bcc.n	8009abc <HAL_I2C_Mem_Read+0x2b4>
 8009ab6:	2d00      	cmp	r5, #0
 8009ab8:	f47f af41 	bne.w	800993e <HAL_I2C_Mem_Read+0x136>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009abc:	2200      	movs	r2, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8009abe:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009ac0:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009ac2:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009ac6:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009aca:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8009acc:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 8009ad0:	2701      	movs	r7, #1
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009ad2:	f043 0320 	orr.w	r3, r3, #32
}
 8009ad6:	4638      	mov	r0, r7
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009ad8:	6423      	str	r3, [r4, #64]	; 0x40
}
 8009ada:	b007      	add	sp, #28
 8009adc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009ae0:	b95d      	cbnz	r5, 8009afa <HAL_I2C_Mem_Read+0x2f2>
 8009ae2:	e02b      	b.n	8009b3c <HAL_I2C_Mem_Read+0x334>
 8009ae4:	ffff0000 	.word	0xffff0000
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8009ae8:	695a      	ldr	r2, [r3, #20]
 8009aea:	06d2      	lsls	r2, r2, #27
 8009aec:	d40c      	bmi.n	8009b08 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009aee:	f7fe ff6b 	bl	80089c8 <HAL_GetTick>
 8009af2:	1b80      	subs	r0, r0, r6
 8009af4:	4285      	cmp	r5, r0
 8009af6:	d3e1      	bcc.n	8009abc <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8009af8:	6823      	ldr	r3, [r4, #0]
 8009afa:	695a      	ldr	r2, [r3, #20]
 8009afc:	0651      	lsls	r1, r2, #25
 8009afe:	d5f3      	bpl.n	8009ae8 <HAL_I2C_Mem_Read+0x2e0>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009b00:	691a      	ldr	r2, [r3, #16]
 8009b02:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8009b04:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8009b06:	e7a5      	b.n	8009a54 <HAL_I2C_Mem_Read+0x24c>
      hi2c->PreviousState       = I2C_STATE_NONE;
 8009b08:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8009b0a:	f06f 0010 	mvn.w	r0, #16
      hi2c->State               = HAL_I2C_STATE_READY;
 8009b0e:	2120      	movs	r1, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8009b10:	6158      	str	r0, [r3, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 8009b12:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8009b14:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009b18:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 8009b1c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8009b1e:	6423      	str	r3, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 8009b20:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 8009b24:	2701      	movs	r7, #1
 8009b26:	e680      	b.n	800982a <HAL_I2C_Mem_Read+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8009b28:	695a      	ldr	r2, [r3, #20]
 8009b2a:	0652      	lsls	r2, r2, #25
 8009b2c:	f53f af44 	bmi.w	80099b8 <HAL_I2C_Mem_Read+0x1b0>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8009b30:	695a      	ldr	r2, [r3, #20]
 8009b32:	06d1      	lsls	r1, r2, #27
 8009b34:	d4e8      	bmi.n	8009b08 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009b36:	f7fe ff47 	bl	80089c8 <HAL_GetTick>
 8009b3a:	e7bf      	b.n	8009abc <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8009b3c:	695a      	ldr	r2, [r3, #20]
 8009b3e:	0650      	lsls	r0, r2, #25
 8009b40:	d5f6      	bpl.n	8009b30 <HAL_I2C_Mem_Read+0x328>
 8009b42:	e7dd      	b.n	8009b00 <HAL_I2C_Mem_Read+0x2f8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009b44:	6823      	ldr	r3, [r4, #0]
 8009b46:	6819      	ldr	r1, [r3, #0]
 8009b48:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 8009b4c:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009b4e:	9003      	str	r0, [sp, #12]
 8009b50:	6959      	ldr	r1, [r3, #20]
 8009b52:	9103      	str	r1, [sp, #12]
 8009b54:	6999      	ldr	r1, [r3, #24]
 8009b56:	9103      	str	r1, [sp, #12]
 8009b58:	9903      	ldr	r1, [sp, #12]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009b5a:	6819      	ldr	r1, [r3, #0]
 8009b5c:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 8009b60:	6019      	str	r1, [r3, #0]
 8009b62:	e6cd      	b.n	8009900 <HAL_I2C_Mem_Read+0xf8>

08009b64 <HAL_I2C_MasterTxCpltCallback>:
 8009b64:	4770      	bx	lr
 8009b66:	bf00      	nop

08009b68 <HAL_I2C_MasterRxCpltCallback>:
 8009b68:	4770      	bx	lr
 8009b6a:	bf00      	nop

08009b6c <HAL_I2C_SlaveTxCpltCallback>:
 8009b6c:	4770      	bx	lr
 8009b6e:	bf00      	nop

08009b70 <HAL_I2C_SlaveRxCpltCallback>:
 8009b70:	4770      	bx	lr
 8009b72:	bf00      	nop

08009b74 <HAL_I2C_AddrCallback>:
}
 8009b74:	4770      	bx	lr
 8009b76:	bf00      	nop

08009b78 <HAL_I2C_ListenCpltCallback>:
 8009b78:	4770      	bx	lr
 8009b7a:	bf00      	nop

08009b7c <HAL_I2C_MemTxCpltCallback>:
 8009b7c:	4770      	bx	lr
 8009b7e:	bf00      	nop

08009b80 <I2C_MemoryTransmit_TXE_BTF>:
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 8009b80:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  if (hi2c->EventCount == 0U)
 8009b84:	6d01      	ldr	r1, [r0, #80]	; 0x50
{
 8009b86:	4603      	mov	r3, r0
  if (hi2c->EventCount == 0U)
 8009b88:	b959      	cbnz	r1, 8009ba2 <I2C_MemoryTransmit_TXE_BTF+0x22>
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 8009b8a:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 8009b8c:	6801      	ldr	r1, [r0, #0]
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 8009b8e:	2a01      	cmp	r2, #1
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 8009b90:	6c82      	ldr	r2, [r0, #72]	; 0x48
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 8009b92:	d00d      	beq.n	8009bb0 <I2C_MemoryTransmit_TXE_BTF+0x30>
      hi2c->Instance->DR = I2C_MEM_ADD_MSB(hi2c->Memaddress);
 8009b94:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8009b98:	610a      	str	r2, [r1, #16]
      hi2c->EventCount++;
 8009b9a:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8009b9c:	3201      	adds	r2, #1
 8009b9e:	6502      	str	r2, [r0, #80]	; 0x50
 8009ba0:	4770      	bx	lr
  else if (hi2c->EventCount == 1U)
 8009ba2:	6d01      	ldr	r1, [r0, #80]	; 0x50
 8009ba4:	2901      	cmp	r1, #1
 8009ba6:	d009      	beq.n	8009bbc <I2C_MemoryTransmit_TXE_BTF+0x3c>
  else if (hi2c->EventCount == 2U)
 8009ba8:	6d01      	ldr	r1, [r0, #80]	; 0x50
 8009baa:	2902      	cmp	r1, #2
 8009bac:	d00e      	beq.n	8009bcc <I2C_MemoryTransmit_TXE_BTF+0x4c>
 8009bae:	4770      	bx	lr
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 8009bb0:	b2d2      	uxtb	r2, r2
 8009bb2:	610a      	str	r2, [r1, #16]
      hi2c->EventCount += 2U;
 8009bb4:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8009bb6:	3202      	adds	r2, #2
 8009bb8:	6502      	str	r2, [r0, #80]	; 0x50
 8009bba:	4770      	bx	lr
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 8009bbc:	6c82      	ldr	r2, [r0, #72]	; 0x48
 8009bbe:	6801      	ldr	r1, [r0, #0]
 8009bc0:	b2d2      	uxtb	r2, r2
 8009bc2:	610a      	str	r2, [r1, #16]
    hi2c->EventCount++;
 8009bc4:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8009bc6:	3201      	adds	r2, #1
 8009bc8:	6502      	str	r2, [r0, #80]	; 0x50
 8009bca:	4770      	bx	lr
 8009bcc:	b2d2      	uxtb	r2, r2
    if (CurrentState == HAL_I2C_STATE_BUSY_RX)
 8009bce:	2a22      	cmp	r2, #34	; 0x22
 8009bd0:	d01f      	beq.n	8009c12 <I2C_MemoryTransmit_TXE_BTF+0x92>
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 8009bd2:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 8009bd4:	b289      	uxth	r1, r1
 8009bd6:	b9c1      	cbnz	r1, 8009c0a <I2C_MemoryTransmit_TXE_BTF+0x8a>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 8009bd8:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 8009bda:	b289      	uxth	r1, r1
 8009bdc:	2900      	cmp	r1, #0
 8009bde:	d1e6      	bne.n	8009bae <I2C_MemoryTransmit_TXE_BTF+0x2e>
 8009be0:	2a21      	cmp	r2, #33	; 0x21
 8009be2:	d1e4      	bne.n	8009bae <I2C_MemoryTransmit_TXE_BTF+0x2e>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 8009be4:	6802      	ldr	r2, [r0, #0]
{
 8009be6:	b510      	push	{r4, lr}
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 8009be8:	6854      	ldr	r4, [r2, #4]
 8009bea:	f424 64e0 	bic.w	r4, r4, #1792	; 0x700
 8009bee:	6054      	str	r4, [r2, #4]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009bf0:	6814      	ldr	r4, [r2, #0]
 8009bf2:	f444 7400 	orr.w	r4, r4, #512	; 0x200
 8009bf6:	6014      	str	r4, [r2, #0]
      hi2c->State = HAL_I2C_STATE_READY;
 8009bf8:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 8009bfa:	6301      	str	r1, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_READY;
 8009bfc:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 8009c00:	f880 103e 	strb.w	r1, [r0, #62]	; 0x3e
      HAL_I2C_MemTxCpltCallback(hi2c);
 8009c04:	f7ff ffba 	bl	8009b7c <HAL_I2C_MemTxCpltCallback>
}
 8009c08:	bd10      	pop	{r4, pc}
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 8009c0a:	2a21      	cmp	r2, #33	; 0x21
 8009c0c:	d00a      	beq.n	8009c24 <I2C_MemoryTransmit_TXE_BTF+0xa4>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 8009c0e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8009c10:	4770      	bx	lr
      hi2c->Instance->CR1 |= I2C_CR1_START;
 8009c12:	6801      	ldr	r1, [r0, #0]
 8009c14:	680a      	ldr	r2, [r1, #0]
 8009c16:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8009c1a:	600a      	str	r2, [r1, #0]
      hi2c->EventCount++;
 8009c1c:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8009c1e:	3201      	adds	r2, #1
 8009c20:	6502      	str	r2, [r0, #80]	; 0x50
 8009c22:	4770      	bx	lr
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8009c24:	6a41      	ldr	r1, [r0, #36]	; 0x24
 8009c26:	6802      	ldr	r2, [r0, #0]
 8009c28:	f811 0b01 	ldrb.w	r0, [r1], #1
 8009c2c:	6110      	str	r0, [r2, #16]
      hi2c->XferCount--;
 8009c2e:	8d5a      	ldrh	r2, [r3, #42]	; 0x2a
      hi2c->pBuffPtr++;
 8009c30:	6259      	str	r1, [r3, #36]	; 0x24
      hi2c->XferCount--;
 8009c32:	3a01      	subs	r2, #1
 8009c34:	b292      	uxth	r2, r2
 8009c36:	855a      	strh	r2, [r3, #42]	; 0x2a
 8009c38:	4770      	bx	lr
 8009c3a:	bf00      	nop

08009c3c <HAL_I2C_MemRxCpltCallback>:
 8009c3c:	4770      	bx	lr
 8009c3e:	bf00      	nop

08009c40 <HAL_I2C_ErrorCallback>:
 8009c40:	4770      	bx	lr
 8009c42:	bf00      	nop

08009c44 <HAL_I2C_AbortCpltCallback>:
 8009c44:	4770      	bx	lr
 8009c46:	bf00      	nop

08009c48 <I2C_DMAAbort>:
{
 8009c48:	b570      	push	{r4, r5, r6, lr}
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 8009c4a:	4b3a      	ldr	r3, [pc, #232]	; (8009d34 <I2C_DMAAbort+0xec>)
 8009c4c:	4a3a      	ldr	r2, [pc, #232]	; (8009d38 <I2C_DMAAbort+0xf0>)
 8009c4e:	681b      	ldr	r3, [r3, #0]
  I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent; /* Derogation MISRAC2012-Rule-11.5 */
 8009c50:	6b80      	ldr	r0, [r0, #56]	; 0x38
{
 8009c52:	b082      	sub	sp, #8
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 8009c54:	08db      	lsrs	r3, r3, #3
  __IO uint32_t count = 0U;
 8009c56:	2100      	movs	r1, #0
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 8009c58:	fba2 2303 	umull	r2, r3, r2, r3
  __IO uint32_t count = 0U;
 8009c5c:	9101      	str	r1, [sp, #4]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 8009c5e:	0a1b      	lsrs	r3, r3, #8
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 8009c60:	f890 103d 	ldrb.w	r1, [r0, #61]	; 0x3d
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 8009c64:	6802      	ldr	r2, [r0, #0]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 8009c66:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8009c6a:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 8009c6e:	b2c9      	uxtb	r1, r1
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 8009c70:	9301      	str	r3, [sp, #4]
 8009c72:	e005      	b.n	8009c80 <I2C_DMAAbort+0x38>
    count--;
 8009c74:	9b01      	ldr	r3, [sp, #4]
 8009c76:	3b01      	subs	r3, #1
 8009c78:	9301      	str	r3, [sp, #4]
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 8009c7a:	6813      	ldr	r3, [r2, #0]
 8009c7c:	059b      	lsls	r3, r3, #22
 8009c7e:	d506      	bpl.n	8009c8e <I2C_DMAAbort+0x46>
    if (count == 0U)
 8009c80:	9b01      	ldr	r3, [sp, #4]
 8009c82:	2b00      	cmp	r3, #0
 8009c84:	d1f6      	bne.n	8009c74 <I2C_DMAAbort+0x2c>
      hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8009c86:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8009c88:	f043 0320 	orr.w	r3, r3, #32
 8009c8c:	6403      	str	r3, [r0, #64]	; 0x40
  if (hi2c->hdmatx != NULL)
 8009c8e:	6b44      	ldr	r4, [r0, #52]	; 0x34
 8009c90:	b34c      	cbz	r4, 8009ce6 <I2C_DMAAbort+0x9e>
  if (hi2c->hdmarx != NULL)
 8009c92:	6b83      	ldr	r3, [r0, #56]	; 0x38
    hi2c->hdmatx->XferCpltCallback = NULL;
 8009c94:	2500      	movs	r5, #0
 8009c96:	63e5      	str	r5, [r4, #60]	; 0x3c
  if (hi2c->hdmarx != NULL)
 8009c98:	b1f3      	cbz	r3, 8009cd8 <I2C_DMAAbort+0x90>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009c9a:	6816      	ldr	r6, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 8009c9c:	63dd      	str	r5, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009c9e:	f426 6680 	bic.w	r6, r6, #1024	; 0x400
 8009ca2:	6016      	str	r6, [r2, #0]
  hi2c->XferCount = 0U;
 8009ca4:	8545      	strh	r5, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 8009ca6:	6525      	str	r5, [r4, #80]	; 0x50
    hi2c->hdmarx->XferAbortCallback = NULL;
 8009ca8:	2400      	movs	r4, #0
 8009caa:	651c      	str	r4, [r3, #80]	; 0x50
  __HAL_I2C_DISABLE(hi2c);
 8009cac:	6813      	ldr	r3, [r2, #0]
 8009cae:	f023 0301 	bic.w	r3, r3, #1
 8009cb2:	6013      	str	r3, [r2, #0]
  if (hi2c->State == HAL_I2C_STATE_ABORT)
 8009cb4:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8009cb8:	2b60      	cmp	r3, #96	; 0x60
 8009cba:	d02a      	beq.n	8009d12 <I2C_DMAAbort+0xca>
    if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 8009cbc:	f001 0128 	and.w	r1, r1, #40	; 0x28
 8009cc0:	2928      	cmp	r1, #40	; 0x28
 8009cc2:	d019      	beq.n	8009cf8 <I2C_DMAAbort+0xb0>
      hi2c->State = HAL_I2C_STATE_READY;
 8009cc4:	2220      	movs	r2, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 8009cc6:	2300      	movs	r3, #0
      hi2c->State = HAL_I2C_STATE_READY;
 8009cc8:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 8009ccc:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    HAL_I2C_ErrorCallback(hi2c);
 8009cd0:	f7ff ffb6 	bl	8009c40 <HAL_I2C_ErrorCallback>
}
 8009cd4:	b002      	add	sp, #8
 8009cd6:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009cd8:	6815      	ldr	r5, [r2, #0]
 8009cda:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 8009cde:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 8009ce0:	8543      	strh	r3, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 8009ce2:	6523      	str	r3, [r4, #80]	; 0x50
  if (hi2c->hdmarx != NULL)
 8009ce4:	e7e2      	b.n	8009cac <I2C_DMAAbort+0x64>
  if (hi2c->hdmarx != NULL)
 8009ce6:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8009ce8:	b1f3      	cbz	r3, 8009d28 <I2C_DMAAbort+0xe0>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009cea:	6815      	ldr	r5, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 8009cec:	63dc      	str	r4, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009cee:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 8009cf2:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 8009cf4:	8544      	strh	r4, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 8009cf6:	e7d7      	b.n	8009ca8 <I2C_DMAAbort+0x60>
      __HAL_I2C_ENABLE(hi2c);
 8009cf8:	6813      	ldr	r3, [r2, #0]
 8009cfa:	f043 0301 	orr.w	r3, r3, #1
 8009cfe:	6013      	str	r3, [r2, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009d00:	6813      	ldr	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 8009d02:	2400      	movs	r4, #0
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009d04:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8009d08:	6013      	str	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 8009d0a:	6304      	str	r4, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 8009d0c:	f880 103d 	strb.w	r1, [r0, #61]	; 0x3d
 8009d10:	e7de      	b.n	8009cd0 <I2C_DMAAbort+0x88>
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 8009d12:	2300      	movs	r3, #0
    hi2c->State         = HAL_I2C_STATE_READY;
 8009d14:	2220      	movs	r2, #32
 8009d16:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 8009d1a:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    hi2c->ErrorCode     = HAL_I2C_ERROR_NONE;
 8009d1e:	6403      	str	r3, [r0, #64]	; 0x40
    HAL_I2C_AbortCpltCallback(hi2c);
 8009d20:	f7ff ff90 	bl	8009c44 <HAL_I2C_AbortCpltCallback>
}
 8009d24:	b002      	add	sp, #8
 8009d26:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009d28:	6814      	ldr	r4, [r2, #0]
 8009d2a:	f424 6480 	bic.w	r4, r4, #1024	; 0x400
 8009d2e:	6014      	str	r4, [r2, #0]
  hi2c->XferCount = 0U;
 8009d30:	8543      	strh	r3, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 8009d32:	e7bb      	b.n	8009cac <I2C_DMAAbort+0x64>
 8009d34:	20000078 	.word	0x20000078
 8009d38:	14f8b589 	.word	0x14f8b589

08009d3c <I2C_ITError>:
{
 8009d3c:	b510      	push	{r4, lr}
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 8009d3e:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  HAL_I2C_ModeTypeDef CurrentMode = hi2c->Mode;
 8009d42:	f890 303e 	ldrb.w	r3, [r0, #62]	; 0x3e
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 8009d46:	2b10      	cmp	r3, #16
{
 8009d48:	4604      	mov	r4, r0
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 8009d4a:	b2d2      	uxtb	r2, r2
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 8009d4c:	d039      	beq.n	8009dc2 <I2C_ITError+0x86>
 8009d4e:	b2d9      	uxtb	r1, r3
 8009d50:	2940      	cmp	r1, #64	; 0x40
 8009d52:	d036      	beq.n	8009dc2 <I2C_ITError+0x86>
  if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 8009d54:	f002 0128 	and.w	r1, r2, #40	; 0x28
 8009d58:	2928      	cmp	r1, #40	; 0x28
 8009d5a:	d03d      	beq.n	8009dd8 <I2C_ITError+0x9c>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 8009d5c:	6823      	ldr	r3, [r4, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 8009d5e:	6859      	ldr	r1, [r3, #4]
 8009d60:	0508      	lsls	r0, r1, #20
 8009d62:	d407      	bmi.n	8009d74 <I2C_ITError+0x38>
 8009d64:	2a60      	cmp	r2, #96	; 0x60
 8009d66:	d005      	beq.n	8009d74 <I2C_ITError+0x38>
      hi2c->State = HAL_I2C_STATE_READY;
 8009d68:	2120      	movs	r1, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 8009d6a:	2200      	movs	r2, #0
      hi2c->State = HAL_I2C_STATE_READY;
 8009d6c:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 8009d70:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->PreviousState = I2C_STATE_NONE;
 8009d74:	2200      	movs	r2, #0
 8009d76:	6322      	str	r2, [r4, #48]	; 0x30
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 8009d78:	685a      	ldr	r2, [r3, #4]
 8009d7a:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 8009d7e:	d134      	bne.n	8009dea <I2C_ITError+0xae>
  else if (hi2c->State == HAL_I2C_STATE_ABORT)
 8009d80:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 8009d84:	2960      	cmp	r1, #96	; 0x60
 8009d86:	d075      	beq.n	8009e74 <I2C_ITError+0x138>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 8009d88:	695a      	ldr	r2, [r3, #20]
 8009d8a:	0650      	lsls	r0, r2, #25
 8009d8c:	d505      	bpl.n	8009d9a <I2C_ITError+0x5e>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009d8e:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8009d90:	691b      	ldr	r3, [r3, #16]
 8009d92:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 8009d94:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8009d96:	3301      	adds	r3, #1
 8009d98:	6263      	str	r3, [r4, #36]	; 0x24
    HAL_I2C_ErrorCallback(hi2c);
 8009d9a:	4620      	mov	r0, r4
 8009d9c:	f7ff ff50 	bl	8009c40 <HAL_I2C_ErrorCallback>
  CurrentError = hi2c->ErrorCode;
 8009da0:	6c23      	ldr	r3, [r4, #64]	; 0x40
  if (((CurrentError & HAL_I2C_ERROR_BERR) == HAL_I2C_ERROR_BERR) || \
 8009da2:	0719      	lsls	r1, r3, #28
 8009da4:	d004      	beq.n	8009db0 <I2C_ITError+0x74>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 8009da6:	6822      	ldr	r2, [r4, #0]
 8009da8:	6853      	ldr	r3, [r2, #4]
 8009daa:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 8009dae:	6053      	str	r3, [r2, #4]
  CurrentState = hi2c->State;
 8009db0:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 8009db4:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8009db6:	0752      	lsls	r2, r2, #29
  CurrentState = hi2c->State;
 8009db8:	b2db      	uxtb	r3, r3
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 8009dba:	d501      	bpl.n	8009dc0 <I2C_ITError+0x84>
 8009dbc:	2b28      	cmp	r3, #40	; 0x28
 8009dbe:	d02f      	beq.n	8009e20 <I2C_ITError+0xe4>
}
 8009dc0:	bd10      	pop	{r4, pc}
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 8009dc2:	2a22      	cmp	r2, #34	; 0x22
 8009dc4:	d1c6      	bne.n	8009d54 <I2C_ITError+0x18>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 8009dc6:	6823      	ldr	r3, [r4, #0]
 8009dc8:	681a      	ldr	r2, [r3, #0]
 8009dca:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8009dce:	601a      	str	r2, [r3, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 8009dd0:	685a      	ldr	r2, [r3, #4]
 8009dd2:	0512      	lsls	r2, r2, #20
 8009dd4:	d5c8      	bpl.n	8009d68 <I2C_ITError+0x2c>
 8009dd6:	e7cd      	b.n	8009d74 <I2C_ITError+0x38>
    hi2c->PreviousState = I2C_STATE_NONE;
 8009dd8:	2300      	movs	r3, #0
 8009dda:	6323      	str	r3, [r4, #48]	; 0x30
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 8009ddc:	6823      	ldr	r3, [r4, #0]
    hi2c->State = HAL_I2C_STATE_LISTEN;
 8009dde:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 8009de2:	685a      	ldr	r2, [r3, #4]
 8009de4:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 8009de8:	d0ca      	beq.n	8009d80 <I2C_ITError+0x44>
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 8009dea:	685a      	ldr	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 8009dec:	6b60      	ldr	r0, [r4, #52]	; 0x34
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 8009dee:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8009df2:	605a      	str	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 8009df4:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 8009df8:	2b01      	cmp	r3, #1
 8009dfa:	d01e      	beq.n	8009e3a <I2C_ITError+0xfe>
      hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 8009dfc:	4b28      	ldr	r3, [pc, #160]	; (8009ea0 <I2C_ITError+0x164>)
 8009dfe:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 8009e00:	f7fe fe6c 	bl	8008adc <HAL_DMA_Abort_IT>
 8009e04:	2800      	cmp	r0, #0
 8009e06:	d0cb      	beq.n	8009da0 <I2C_ITError+0x64>
        __HAL_I2C_DISABLE(hi2c);
 8009e08:	6822      	ldr	r2, [r4, #0]
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 8009e0a:	6b60      	ldr	r0, [r4, #52]	; 0x34
        __HAL_I2C_DISABLE(hi2c);
 8009e0c:	6813      	ldr	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 8009e0e:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 8009e10:	f023 0301 	bic.w	r3, r3, #1
 8009e14:	6013      	str	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 8009e16:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 8009e1a:	6d03      	ldr	r3, [r0, #80]	; 0x50
 8009e1c:	4798      	blx	r3
 8009e1e:	e7bf      	b.n	8009da0 <I2C_ITError+0x64>
    hi2c->PreviousState = I2C_STATE_NONE;
 8009e20:	2300      	movs	r3, #0
    hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
 8009e22:	4920      	ldr	r1, [pc, #128]	; (8009ea4 <I2C_ITError+0x168>)
 8009e24:	62e1      	str	r1, [r4, #44]	; 0x2c
    hi2c->State         = HAL_I2C_STATE_READY;
 8009e26:	2220      	movs	r2, #32
    hi2c->PreviousState = I2C_STATE_NONE;
 8009e28:	6323      	str	r3, [r4, #48]	; 0x30
    HAL_I2C_ListenCpltCallback(hi2c);
 8009e2a:	4620      	mov	r0, r4
    hi2c->State         = HAL_I2C_STATE_READY;
 8009e2c:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 8009e30:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    HAL_I2C_ListenCpltCallback(hi2c);
 8009e34:	f7ff fea0 	bl	8009b78 <HAL_I2C_ListenCpltCallback>
}
 8009e38:	bd10      	pop	{r4, pc}
      hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 8009e3a:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 8009e3c:	4b18      	ldr	r3, [pc, #96]	; (8009ea0 <I2C_ITError+0x164>)
 8009e3e:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 8009e40:	f7fe fe4c 	bl	8008adc <HAL_DMA_Abort_IT>
 8009e44:	2800      	cmp	r0, #0
 8009e46:	d0ab      	beq.n	8009da0 <I2C_ITError+0x64>
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 8009e48:	6823      	ldr	r3, [r4, #0]
 8009e4a:	695a      	ldr	r2, [r3, #20]
 8009e4c:	0651      	lsls	r1, r2, #25
 8009e4e:	d506      	bpl.n	8009e5e <I2C_ITError+0x122>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009e50:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8009e52:	691b      	ldr	r3, [r3, #16]
 8009e54:	7013      	strb	r3, [r2, #0]
          hi2c->pBuffPtr++;
 8009e56:	6a62      	ldr	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 8009e58:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 8009e5a:	3201      	adds	r2, #1
 8009e5c:	6262      	str	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 8009e5e:	681a      	ldr	r2, [r3, #0]
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 8009e60:	6ba0      	ldr	r0, [r4, #56]	; 0x38
        __HAL_I2C_DISABLE(hi2c);
 8009e62:	f022 0201 	bic.w	r2, r2, #1
        hi2c->State = HAL_I2C_STATE_READY;
 8009e66:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 8009e68:	601a      	str	r2, [r3, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 8009e6a:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 8009e6e:	6d03      	ldr	r3, [r0, #80]	; 0x50
 8009e70:	4798      	blx	r3
 8009e72:	e795      	b.n	8009da0 <I2C_ITError+0x64>
    hi2c->State = HAL_I2C_STATE_READY;
 8009e74:	2120      	movs	r1, #32
 8009e76:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8009e7a:	6422      	str	r2, [r4, #64]	; 0x40
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 8009e7c:	695a      	ldr	r2, [r3, #20]
 8009e7e:	0652      	lsls	r2, r2, #25
 8009e80:	d506      	bpl.n	8009e90 <I2C_ITError+0x154>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009e82:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8009e84:	691b      	ldr	r3, [r3, #16]
 8009e86:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 8009e88:	6a62      	ldr	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 8009e8a:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 8009e8c:	3201      	adds	r2, #1
 8009e8e:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 8009e90:	681a      	ldr	r2, [r3, #0]
 8009e92:	f022 0201 	bic.w	r2, r2, #1
    HAL_I2C_AbortCpltCallback(hi2c);
 8009e96:	4620      	mov	r0, r4
    __HAL_I2C_DISABLE(hi2c);
 8009e98:	601a      	str	r2, [r3, #0]
    HAL_I2C_AbortCpltCallback(hi2c);
 8009e9a:	f7ff fed3 	bl	8009c44 <HAL_I2C_AbortCpltCallback>
 8009e9e:	e77f      	b.n	8009da0 <I2C_ITError+0x64>
 8009ea0:	08009c49 	.word	0x08009c49
 8009ea4:	ffff0000 	.word	0xffff0000

08009ea8 <HAL_I2C_EV_IRQHandler>:
{
 8009ea8:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 8009eaa:	6803      	ldr	r3, [r0, #0]
{
 8009eac:	4604      	mov	r4, r0
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 8009eae:	6858      	ldr	r0, [r3, #4]
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 8009eb0:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 8009eb2:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 8009eb6:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 8009eba:	2910      	cmp	r1, #16
{
 8009ebc:	b08e      	sub	sp, #56	; 0x38
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 8009ebe:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 8009ec0:	fa5f fc81 	uxtb.w	ip, r1
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 8009ec4:	d022      	beq.n	8009f0c <HAL_I2C_EV_IRQHandler+0x64>
 8009ec6:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 8009eca:	d01f      	beq.n	8009f0c <HAL_I2C_EV_IRQHandler+0x64>
    if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 8009ecc:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8009ece:	2900      	cmp	r1, #0
 8009ed0:	f000 8094 	beq.w	8009ffc <HAL_I2C_EV_IRQHandler+0x154>
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 8009ed4:	6959      	ldr	r1, [r3, #20]
  uint32_t sr2itflags               = 0U;
 8009ed6:	2500      	movs	r5, #0
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 8009ed8:	f011 0602 	ands.w	r6, r1, #2
 8009edc:	d059      	beq.n	8009f92 <HAL_I2C_EV_IRQHandler+0xea>
 8009ede:	0586      	lsls	r6, r0, #22
 8009ee0:	d559      	bpl.n	8009f96 <HAL_I2C_EV_IRQHandler+0xee>
      if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 8009ee2:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8009ee4:	b102      	cbz	r2, 8009ee8 <HAL_I2C_EV_IRQHandler+0x40>
        sr2itflags   = READ_REG(hi2c->Instance->SR2);
 8009ee6:	699d      	ldr	r5, [r3, #24]
  if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 8009ee8:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 8009eec:	f002 0228 	and.w	r2, r2, #40	; 0x28
 8009ef0:	2a28      	cmp	r2, #40	; 0x28
 8009ef2:	f000 821e 	beq.w	800a332 <HAL_I2C_EV_IRQHandler+0x48a>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009ef6:	2200      	movs	r2, #0
 8009ef8:	920c      	str	r2, [sp, #48]	; 0x30
 8009efa:	6959      	ldr	r1, [r3, #20]
 8009efc:	910c      	str	r1, [sp, #48]	; 0x30
 8009efe:	699b      	ldr	r3, [r3, #24]
 8009f00:	930c      	str	r3, [sp, #48]	; 0x30
 8009f02:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    __HAL_UNLOCK(hi2c);
 8009f04:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
}
 8009f08:	b00e      	add	sp, #56	; 0x38
 8009f0a:	bd70      	pop	{r4, r5, r6, pc}
    sr2itflags   = READ_REG(hi2c->Instance->SR2);
 8009f0c:	699e      	ldr	r6, [r3, #24]
    sr1itflags   = READ_REG(hi2c->Instance->SR1);
 8009f0e:	6959      	ldr	r1, [r3, #20]
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) == RESET) && (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST(CurrentXferOptions) == 1U))
 8009f10:	f011 0f01 	tst.w	r1, #1
 8009f14:	d11a      	bne.n	8009f4c <HAL_I2C_EV_IRQHandler+0xa4>
 8009f16:	f5b5 0f2a 	cmp.w	r5, #11141120	; 0xaa0000
 8009f1a:	d0f5      	beq.n	8009f08 <HAL_I2C_EV_IRQHandler+0x60>
 8009f1c:	f1b5 4f2a 	cmp.w	r5, #2852126720	; 0xaa000000
 8009f20:	d0f2      	beq.n	8009f08 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 8009f22:	070d      	lsls	r5, r1, #28
 8009f24:	d56d      	bpl.n	800a002 <HAL_I2C_EV_IRQHandler+0x15a>
 8009f26:	0585      	lsls	r5, r0, #22
 8009f28:	f140 8083 	bpl.w	800a032 <HAL_I2C_EV_IRQHandler+0x18a>
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 8009f2c:	6c62      	ldr	r2, [r4, #68]	; 0x44
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 8009f2e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8009f30:	b2d2      	uxtb	r2, r2
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 8009f32:	611a      	str	r2, [r3, #16]
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 8009f34:	2900      	cmp	r1, #0
 8009f36:	f000 81e3 	beq.w	800a300 <HAL_I2C_EV_IRQHandler+0x458>
 8009f3a:	6bca      	ldr	r2, [r1, #60]	; 0x3c
 8009f3c:	2a00      	cmp	r2, #0
 8009f3e:	f000 81df 	beq.w	800a300 <HAL_I2C_EV_IRQHandler+0x458>
    SET_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 8009f42:	685a      	ldr	r2, [r3, #4]
 8009f44:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8009f48:	605a      	str	r2, [r3, #4]
 8009f4a:	e7dd      	b.n	8009f08 <HAL_I2C_EV_IRQHandler+0x60>
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 8009f4c:	0585      	lsls	r5, r0, #22
 8009f4e:	d56e      	bpl.n	800a02e <HAL_I2C_EV_IRQHandler+0x186>
static void I2C_ConvertOtherXferOptions(I2C_HandleTypeDef *hi2c)
{
  /* if user set XferOptions to I2C_OTHER_FRAME            */
  /* it request implicitly to generate a restart condition */
  /* set XferOptions to I2C_FIRST_FRAME                    */
  if (hi2c->XferOptions == I2C_OTHER_FRAME)
 8009f50:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8009f52:	f5b2 0f2a 	cmp.w	r2, #11141120	; 0xaa0000
 8009f56:	f000 81e9 	beq.w	800a32c <HAL_I2C_EV_IRQHandler+0x484>
  }
  /* else if user set XferOptions to I2C_OTHER_AND_LAST_FRAME */
  /* it request implicitly to generate a restart condition    */
  /* then generate a stop condition at the end of transfer    */
  /* set XferOptions to I2C_FIRST_AND_LAST_FRAME              */
  else if (hi2c->XferOptions == I2C_OTHER_AND_LAST_FRAME)
 8009f5a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8009f5c:	f1b2 4f2a 	cmp.w	r2, #2852126720	; 0xaa000000
  {
    hi2c->XferOptions = I2C_FIRST_AND_LAST_FRAME;
 8009f60:	bf04      	itt	eq
 8009f62:	2208      	moveq	r2, #8
 8009f64:	62e2      	streq	r2, [r4, #44]	; 0x2c
  if (hi2c->Mode == HAL_I2C_MODE_MEM)
 8009f66:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 8009f6a:	2a40      	cmp	r2, #64	; 0x40
 8009f6c:	f000 81d7 	beq.w	800a31e <HAL_I2C_EV_IRQHandler+0x476>
    if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 8009f70:	6922      	ldr	r2, [r4, #16]
 8009f72:	f5b2 4f80 	cmp.w	r2, #16384	; 0x4000
 8009f76:	f000 81b2 	beq.w	800a2de <HAL_I2C_EV_IRQHandler+0x436>
      if (hi2c->EventCount == 0U)
 8009f7a:	6d22      	ldr	r2, [r4, #80]	; 0x50
 8009f7c:	2a00      	cmp	r2, #0
 8009f7e:	f040 81ef 	bne.w	800a360 <HAL_I2C_EV_IRQHandler+0x4b8>
        hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(hi2c->Devaddress);
 8009f82:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8009f84:	11d2      	asrs	r2, r2, #7
 8009f86:	f002 0206 	and.w	r2, r2, #6
 8009f8a:	f042 02f0 	orr.w	r2, r2, #240	; 0xf0
 8009f8e:	611a      	str	r2, [r3, #16]
 8009f90:	e7ba      	b.n	8009f08 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 8009f92:	06cd      	lsls	r5, r1, #27
 8009f94:	d47c      	bmi.n	800a090 <HAL_I2C_EV_IRQHandler+0x1e8>
    else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 8009f96:	f002 02f7 	and.w	r2, r2, #247	; 0xf7
 8009f9a:	2a21      	cmp	r2, #33	; 0x21
 8009f9c:	f000 80f5 	beq.w	800a18a <HAL_I2C_EV_IRQHandler+0x2e2>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 8009fa0:	064e      	lsls	r6, r1, #25
 8009fa2:	f140 8132 	bpl.w	800a20a <HAL_I2C_EV_IRQHandler+0x362>
 8009fa6:	0545      	lsls	r5, r0, #21
 8009fa8:	f140 812f 	bpl.w	800a20a <HAL_I2C_EV_IRQHandler+0x362>
 8009fac:	0749      	lsls	r1, r1, #29
 8009fae:	f100 812f 	bmi.w	800a210 <HAL_I2C_EV_IRQHandler+0x368>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 8009fb2:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 8009fb6:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8009fb8:	b292      	uxth	r2, r2
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 8009fba:	b2c9      	uxtb	r1, r1
  if (hi2c->XferCount != 0U)
 8009fbc:	2a00      	cmp	r2, #0
 8009fbe:	d0a3      	beq.n	8009f08 <HAL_I2C_EV_IRQHandler+0x60>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009fc0:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8009fc2:	691b      	ldr	r3, [r3, #16]
 8009fc4:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 8009fc6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 8009fc8:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 8009fca:	3b01      	subs	r3, #1
 8009fcc:	b29b      	uxth	r3, r3
 8009fce:	8563      	strh	r3, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 8009fd0:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 8009fd2:	3201      	adds	r2, #1
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 8009fd4:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 8009fd6:	6262      	str	r2, [r4, #36]	; 0x24
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 8009fd8:	2b00      	cmp	r3, #0
 8009fda:	d195      	bne.n	8009f08 <HAL_I2C_EV_IRQHandler+0x60>
 8009fdc:	292a      	cmp	r1, #42	; 0x2a
 8009fde:	d193      	bne.n	8009f08 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 8009fe0:	6822      	ldr	r2, [r4, #0]
 8009fe2:	6853      	ldr	r3, [r2, #4]
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 8009fe4:	2522      	movs	r5, #34	; 0x22
      hi2c->State = HAL_I2C_STATE_LISTEN;
 8009fe6:	2128      	movs	r1, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 8009fe8:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8009fec:	6053      	str	r3, [r2, #4]
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 8009fee:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 8009ff0:	6325      	str	r5, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 8009ff2:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 8009ff6:	f7ff fdbb 	bl	8009b70 <HAL_I2C_SlaveRxCpltCallback>
 8009ffa:	e785      	b.n	8009f08 <HAL_I2C_EV_IRQHandler+0x60>
      sr2itflags   = READ_REG(hi2c->Instance->SR2);
 8009ffc:	699d      	ldr	r5, [r3, #24]
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 8009ffe:	6959      	ldr	r1, [r3, #20]
 800a000:	e76a      	b.n	8009ed8 <HAL_I2C_EV_IRQHandler+0x30>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a002:	078d      	lsls	r5, r1, #30
 800a004:	d515      	bpl.n	800a032 <HAL_I2C_EV_IRQHandler+0x18a>
 800a006:	0585      	lsls	r5, r0, #22
 800a008:	d513      	bpl.n	800a032 <HAL_I2C_EV_IRQHandler+0x18a>
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800a00a:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions           = hi2c->XferOptions;
 800a00e:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  uint32_t Prev_State                   = hi2c->PreviousState;
 800a010:	6b25      	ldr	r5, [r4, #48]	; 0x30
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800a012:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800a016:	2922      	cmp	r1, #34	; 0x22
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800a018:	b2d2      	uxtb	r2, r2
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800a01a:	f000 81b3 	beq.w	800a384 <HAL_I2C_EV_IRQHandler+0x4dc>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a01e:	2200      	movs	r2, #0
 800a020:	920a      	str	r2, [sp, #40]	; 0x28
 800a022:	695a      	ldr	r2, [r3, #20]
 800a024:	920a      	str	r2, [sp, #40]	; 0x28
 800a026:	699b      	ldr	r3, [r3, #24]
 800a028:	930a      	str	r3, [sp, #40]	; 0x28
 800a02a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800a02c:	e76c      	b.n	8009f08 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a02e:	070d      	lsls	r5, r1, #28
 800a030:	d5e7      	bpl.n	800a002 <HAL_I2C_EV_IRQHandler+0x15a>
    else if (I2C_CHECK_FLAG(sr2itflags, I2C_FLAG_TRA) != RESET)
 800a032:	0776      	lsls	r6, r6, #29
 800a034:	f140 80f5 	bpl.w	800a222 <HAL_I2C_EV_IRQHandler+0x37a>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800a038:	685d      	ldr	r5, [r3, #4]
 800a03a:	052d      	lsls	r5, r5, #20
 800a03c:	f53f af64 	bmi.w	8009f08 <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800a040:	060e      	lsls	r6, r1, #24
 800a042:	f140 8115 	bpl.w	800a270 <HAL_I2C_EV_IRQHandler+0x3c8>
 800a046:	0545      	lsls	r5, r0, #21
 800a048:	f140 8112 	bpl.w	800a270 <HAL_I2C_EV_IRQHandler+0x3c8>
 800a04c:	074e      	lsls	r6, r1, #29
 800a04e:	f100 8112 	bmi.w	800a276 <HAL_I2C_EV_IRQHandler+0x3ce>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a052:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a056:	8d20      	ldrh	r0, [r4, #40]	; 0x28
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800a058:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800a05c:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a05e:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800a060:	b2c9      	uxtb	r1, r1
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a062:	2800      	cmp	r0, #0
 800a064:	f040 8235 	bne.w	800a4d2 <HAL_I2C_EV_IRQHandler+0x62a>
 800a068:	2a21      	cmp	r2, #33	; 0x21
 800a06a:	f000 8347 	beq.w	800a6fc <HAL_I2C_EV_IRQHandler+0x854>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800a06e:	2940      	cmp	r1, #64	; 0x40
 800a070:	f47f af4a 	bne.w	8009f08 <HAL_I2C_EV_IRQHandler+0x60>
           ((CurrentMode == HAL_I2C_MODE_MEM) && (CurrentState == HAL_I2C_STATE_BUSY_RX)))
 800a074:	2a22      	cmp	r2, #34	; 0x22
 800a076:	f47f af47 	bne.w	8009f08 <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount == 0U)
 800a07a:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a07c:	b292      	uxth	r2, r2
 800a07e:	2a00      	cmp	r2, #0
 800a080:	f000 8268 	beq.w	800a554 <HAL_I2C_EV_IRQHandler+0x6ac>
      if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800a084:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800a088:	2a40      	cmp	r2, #64	; 0x40
 800a08a:	f040 80b4 	bne.w	800a1f6 <HAL_I2C_EV_IRQHandler+0x34e>
 800a08e:	e0fc      	b.n	800a28a <HAL_I2C_EV_IRQHandler+0x3e2>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a090:	0585      	lsls	r5, r0, #22
 800a092:	d580      	bpl.n	8009f96 <HAL_I2C_EV_IRQHandler+0xee>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a094:	f894 503d 	ldrb.w	r5, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800a098:	685a      	ldr	r2, [r3, #4]
 800a09a:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800a09e:	605a      	str	r2, [r3, #4]
  __HAL_I2C_CLEAR_STOPFLAG(hi2c);
 800a0a0:	960d      	str	r6, [sp, #52]	; 0x34
 800a0a2:	695a      	ldr	r2, [r3, #20]
 800a0a4:	920d      	str	r2, [sp, #52]	; 0x34
 800a0a6:	681a      	ldr	r2, [r3, #0]
 800a0a8:	f042 0201 	orr.w	r2, r2, #1
 800a0ac:	601a      	str	r2, [r3, #0]
 800a0ae:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a0b0:	681a      	ldr	r2, [r3, #0]
 800a0b2:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a0b6:	601a      	str	r2, [r3, #0]
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800a0b8:	685a      	ldr	r2, [r3, #4]
 800a0ba:	0511      	lsls	r1, r2, #20
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a0bc:	b2ed      	uxtb	r5, r5
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800a0be:	d521      	bpl.n	800a104 <HAL_I2C_EV_IRQHandler+0x25c>
    if ((CurrentState == HAL_I2C_STATE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800a0c0:	f005 02f7 	and.w	r2, r5, #247	; 0xf7
 800a0c4:	2a22      	cmp	r2, #34	; 0x22
 800a0c6:	f000 817a 	beq.w	800a3be <HAL_I2C_EV_IRQHandler+0x516>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmatx));
 800a0ca:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800a0cc:	6802      	ldr	r2, [r0, #0]
 800a0ce:	6852      	ldr	r2, [r2, #4]
 800a0d0:	b292      	uxth	r2, r2
 800a0d2:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800a0d4:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a0d6:	b292      	uxth	r2, r2
 800a0d8:	b11a      	cbz	r2, 800a0e2 <HAL_I2C_EV_IRQHandler+0x23a>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800a0da:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800a0dc:	f042 0204 	orr.w	r2, r2, #4
 800a0e0:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800a0e2:	685a      	ldr	r2, [r3, #4]
 800a0e4:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800a0e8:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmatx) != HAL_DMA_STATE_READY)
 800a0ea:	f7fe fd09 	bl	8008b00 <HAL_DMA_GetState>
 800a0ee:	2801      	cmp	r0, #1
 800a0f0:	d008      	beq.n	800a104 <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800a0f2:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800a0f4:	4b99      	ldr	r3, [pc, #612]	; (800a35c <HAL_I2C_EV_IRQHandler+0x4b4>)
 800a0f6:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800a0f8:	f7fe fcf0 	bl	8008adc <HAL_DMA_Abort_IT>
 800a0fc:	b110      	cbz	r0, 800a104 <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800a0fe:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800a100:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800a102:	4798      	blx	r3
  if (hi2c->XferCount != 0U)
 800a104:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800a106:	b29b      	uxth	r3, r3
 800a108:	b313      	cbz	r3, 800a150 <HAL_I2C_EV_IRQHandler+0x2a8>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800a10a:	6823      	ldr	r3, [r4, #0]
 800a10c:	695a      	ldr	r2, [r3, #20]
 800a10e:	0752      	lsls	r2, r2, #29
 800a110:	d50a      	bpl.n	800a128 <HAL_I2C_EV_IRQHandler+0x280>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a112:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a114:	691b      	ldr	r3, [r3, #16]
 800a116:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800a118:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800a11a:	6a63      	ldr	r3, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800a11c:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
 800a11e:	1c59      	adds	r1, r3, #1
      hi2c->XferCount--;
 800a120:	b292      	uxth	r2, r2
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800a122:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800a124:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800a126:	8562      	strh	r2, [r4, #42]	; 0x2a
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800a128:	695a      	ldr	r2, [r3, #20]
 800a12a:	0656      	lsls	r6, r2, #25
 800a12c:	d509      	bpl.n	800a142 <HAL_I2C_EV_IRQHandler+0x29a>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a12e:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a130:	691b      	ldr	r3, [r3, #16]
 800a132:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800a134:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800a136:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800a138:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
 800a13a:	3201      	adds	r2, #1
      hi2c->XferCount--;
 800a13c:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800a13e:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800a140:	8563      	strh	r3, [r4, #42]	; 0x2a
    if (hi2c->XferCount != 0U)
 800a142:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800a144:	b29b      	uxth	r3, r3
 800a146:	b11b      	cbz	r3, 800a150 <HAL_I2C_EV_IRQHandler+0x2a8>
      hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800a148:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a14a:	f043 0304 	orr.w	r3, r3, #4
 800a14e:	6423      	str	r3, [r4, #64]	; 0x40
  if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800a150:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a152:	2b00      	cmp	r3, #0
 800a154:	f040 80dd 	bne.w	800a312 <HAL_I2C_EV_IRQHandler+0x46a>
    if (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN)
 800a158:	2d2a      	cmp	r5, #42	; 0x2a
 800a15a:	f000 8151 	beq.w	800a400 <HAL_I2C_EV_IRQHandler+0x558>
    if (hi2c->State == HAL_I2C_STATE_LISTEN)
 800a15e:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800a162:	2b28      	cmp	r3, #40	; 0x28
 800a164:	f000 8154 	beq.w	800a410 <HAL_I2C_EV_IRQHandler+0x568>
      if ((hi2c->PreviousState  == I2C_STATE_SLAVE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800a168:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800a16a:	2b22      	cmp	r3, #34	; 0x22
 800a16c:	d002      	beq.n	800a174 <HAL_I2C_EV_IRQHandler+0x2cc>
 800a16e:	2d22      	cmp	r5, #34	; 0x22
 800a170:	f47f aeca 	bne.w	8009f08 <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->PreviousState = I2C_STATE_NONE;
 800a174:	2300      	movs	r3, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800a176:	2220      	movs	r2, #32
        hi2c->PreviousState = I2C_STATE_NONE;
 800a178:	6323      	str	r3, [r4, #48]	; 0x30
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800a17a:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800a17c:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800a180:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800a184:	f7ff fcf4 	bl	8009b70 <HAL_I2C_SlaveRxCpltCallback>
 800a188:	e6be      	b.n	8009f08 <HAL_I2C_EV_IRQHandler+0x60>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800a18a:	060d      	lsls	r5, r1, #24
 800a18c:	d528      	bpl.n	800a1e0 <HAL_I2C_EV_IRQHandler+0x338>
 800a18e:	0546      	lsls	r6, r0, #21
 800a190:	d526      	bpl.n	800a1e0 <HAL_I2C_EV_IRQHandler+0x338>
 800a192:	074d      	lsls	r5, r1, #29
 800a194:	d427      	bmi.n	800a1e6 <HAL_I2C_EV_IRQHandler+0x33e>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a196:	f894 003d 	ldrb.w	r0, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800a19a:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800a19c:	b289      	uxth	r1, r1
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a19e:	b2c0      	uxtb	r0, r0
  if (hi2c->XferCount != 0U)
 800a1a0:	2900      	cmp	r1, #0
 800a1a2:	f43f aeb1 	beq.w	8009f08 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a1a6:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800a1a8:	f811 5b01 	ldrb.w	r5, [r1], #1
 800a1ac:	611d      	str	r5, [r3, #16]
    hi2c->pBuffPtr++;
 800a1ae:	6261      	str	r1, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800a1b0:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800a1b2:	3901      	subs	r1, #1
 800a1b4:	b289      	uxth	r1, r1
 800a1b6:	8561      	strh	r1, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800a1b8:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800a1ba:	b289      	uxth	r1, r1
 800a1bc:	2900      	cmp	r1, #0
 800a1be:	f47f aea3 	bne.w	8009f08 <HAL_I2C_EV_IRQHandler+0x60>
 800a1c2:	2829      	cmp	r0, #41	; 0x29
 800a1c4:	f47f aea0 	bne.w	8009f08 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a1c8:	6859      	ldr	r1, [r3, #4]
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a1ca:	2528      	movs	r5, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a1cc:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800a1d0:	6059      	str	r1, [r3, #4]
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800a1d2:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
 800a1d4:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a1d6:	f884 503d 	strb.w	r5, [r4, #61]	; 0x3d
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800a1da:	f7ff fcc7 	bl	8009b6c <HAL_I2C_SlaveTxCpltCallback>
 800a1de:	e693      	b.n	8009f08 <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a1e0:	0749      	lsls	r1, r1, #29
 800a1e2:	f57f ae91 	bpl.w	8009f08 <HAL_I2C_EV_IRQHandler+0x60>
 800a1e6:	0582      	lsls	r2, r0, #22
 800a1e8:	f57f ae8e 	bpl.w	8009f08 <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800a1ec:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a1ee:	b292      	uxth	r2, r2
 800a1f0:	2a00      	cmp	r2, #0
 800a1f2:	f43f ae89 	beq.w	8009f08 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a1f6:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a1f8:	f812 1b01 	ldrb.w	r1, [r2], #1
 800a1fc:	6119      	str	r1, [r3, #16]
    hi2c->XferCount--;
 800a1fe:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800a200:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800a202:	3b01      	subs	r3, #1
 800a204:	b29b      	uxth	r3, r3
 800a206:	8563      	strh	r3, [r4, #42]	; 0x2a
 800a208:	e67e      	b.n	8009f08 <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a20a:	074a      	lsls	r2, r1, #29
 800a20c:	f57f ae7c 	bpl.w	8009f08 <HAL_I2C_EV_IRQHandler+0x60>
 800a210:	0586      	lsls	r6, r0, #22
 800a212:	f57f ae79 	bpl.w	8009f08 <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800a216:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a218:	b292      	uxth	r2, r2
 800a21a:	2a00      	cmp	r2, #0
 800a21c:	f43f ae74 	beq.w	8009f08 <HAL_I2C_EV_IRQHandler+0x60>
 800a220:	e01b      	b.n	800a25a <HAL_I2C_EV_IRQHandler+0x3b2>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800a222:	685a      	ldr	r2, [r3, #4]
 800a224:	0512      	lsls	r2, r2, #20
 800a226:	f53f ae6f 	bmi.w	8009f08 <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800a22a:	064e      	lsls	r6, r1, #25
 800a22c:	d433      	bmi.n	800a296 <HAL_I2C_EV_IRQHandler+0x3ee>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a22e:	0749      	lsls	r1, r1, #29
 800a230:	f57f ae6a 	bpl.w	8009f08 <HAL_I2C_EV_IRQHandler+0x60>
 800a234:	0582      	lsls	r2, r0, #22
 800a236:	f57f ae67 	bpl.w	8009f08 <HAL_I2C_EV_IRQHandler+0x60>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800a23a:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->XferCount == 4U)
 800a23c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a23e:	b292      	uxth	r2, r2
 800a240:	2a04      	cmp	r2, #4
 800a242:	f000 8113 	beq.w	800a46c <HAL_I2C_EV_IRQHandler+0x5c4>
  else if (hi2c->XferCount == 3U)
 800a246:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a248:	b292      	uxth	r2, r2
 800a24a:	2a03      	cmp	r2, #3
 800a24c:	f000 8153 	beq.w	800a4f6 <HAL_I2C_EV_IRQHandler+0x64e>
  else if (hi2c->XferCount == 2U)
 800a250:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a252:	b292      	uxth	r2, r2
 800a254:	2a02      	cmp	r2, #2
 800a256:	f000 8182 	beq.w	800a55e <HAL_I2C_EV_IRQHandler+0x6b6>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a25a:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a25c:	691b      	ldr	r3, [r3, #16]
 800a25e:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800a260:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800a262:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800a264:	3b01      	subs	r3, #1
    hi2c->pBuffPtr++;
 800a266:	3201      	adds	r2, #1
    hi2c->XferCount--;
 800a268:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800a26a:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800a26c:	8563      	strh	r3, [r4, #42]	; 0x2a
      }
 800a26e:	e64b      	b.n	8009f08 <HAL_I2C_EV_IRQHandler+0x60>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a270:	074d      	lsls	r5, r1, #29
 800a272:	f57f ae49 	bpl.w	8009f08 <HAL_I2C_EV_IRQHandler+0x60>
 800a276:	0581      	lsls	r1, r0, #22
 800a278:	f57f ae46 	bpl.w	8009f08 <HAL_I2C_EV_IRQHandler+0x60>
          if (CurrentState == HAL_I2C_STATE_BUSY_TX)
 800a27c:	2a21      	cmp	r2, #33	; 0x21
 800a27e:	f000 80fd 	beq.w	800a47c <HAL_I2C_EV_IRQHandler+0x5d4>
            if (CurrentMode == HAL_I2C_MODE_MEM)
 800a282:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800a286:	f47f ae3f 	bne.w	8009f08 <HAL_I2C_EV_IRQHandler+0x60>
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800a28a:	4620      	mov	r0, r4
}
 800a28c:	b00e      	add	sp, #56	; 0x38
 800a28e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800a292:	f7ff bc75 	b.w	8009b80 <I2C_MemoryTransmit_TXE_BTF>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800a296:	0545      	lsls	r5, r0, #21
 800a298:	d5c9      	bpl.n	800a22e <HAL_I2C_EV_IRQHandler+0x386>
 800a29a:	f011 0104 	ands.w	r1, r1, #4
 800a29e:	d1c9      	bne.n	800a234 <HAL_I2C_EV_IRQHandler+0x38c>
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800a2a0:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800a2a4:	2a22      	cmp	r2, #34	; 0x22
 800a2a6:	f47f ae2f 	bne.w	8009f08 <HAL_I2C_EV_IRQHandler+0x60>
    tmp = hi2c->XferCount;
 800a2aa:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a2ac:	b292      	uxth	r2, r2
    if (tmp > 3U)
 800a2ae:	2a03      	cmp	r2, #3
 800a2b0:	f240 81ec 	bls.w	800a68c <HAL_I2C_EV_IRQHandler+0x7e4>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a2b4:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a2b6:	691b      	ldr	r3, [r3, #16]
 800a2b8:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800a2ba:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800a2bc:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800a2be:	3b01      	subs	r3, #1
 800a2c0:	b29b      	uxth	r3, r3
 800a2c2:	8563      	strh	r3, [r4, #42]	; 0x2a
      if (hi2c->XferCount == (uint16_t)3)
 800a2c4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800a2c6:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800a2c8:	3201      	adds	r2, #1
      if (hi2c->XferCount == (uint16_t)3)
 800a2ca:	2b03      	cmp	r3, #3
      hi2c->pBuffPtr++;
 800a2cc:	6262      	str	r2, [r4, #36]	; 0x24
      if (hi2c->XferCount == (uint16_t)3)
 800a2ce:	f47f ae1b 	bne.w	8009f08 <HAL_I2C_EV_IRQHandler+0x60>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a2d2:	6822      	ldr	r2, [r4, #0]
 800a2d4:	6853      	ldr	r3, [r2, #4]
 800a2d6:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800a2da:	6053      	str	r3, [r2, #4]
 800a2dc:	e614      	b.n	8009f08 <HAL_I2C_EV_IRQHandler+0x60>
      if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800a2de:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800a2e2:	2a21      	cmp	r2, #33	; 0x21
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800a2e4:	6c62      	ldr	r2, [r4, #68]	; 0x44
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800a2e6:	bf16      	itet	ne
 800a2e8:	f042 0201 	orrne.w	r2, r2, #1
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800a2ec:	f002 02fe 	andeq.w	r2, r2, #254	; 0xfe
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800a2f0:	b2d2      	uxtbne	r2, r2
 800a2f2:	611a      	str	r2, [r3, #16]
      if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800a2f4:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800a2f6:	b11a      	cbz	r2, 800a300 <HAL_I2C_EV_IRQHandler+0x458>
 800a2f8:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800a2fa:	2a00      	cmp	r2, #0
 800a2fc:	f47f ae21 	bne.w	8009f42 <HAL_I2C_EV_IRQHandler+0x9a>
      || ((hi2c->hdmarx != NULL) && (hi2c->hdmarx->XferCpltCallback != NULL)))
 800a300:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800a302:	2a00      	cmp	r2, #0
 800a304:	f43f ae00 	beq.w	8009f08 <HAL_I2C_EV_IRQHandler+0x60>
 800a308:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800a30a:	2a00      	cmp	r2, #0
 800a30c:	f47f ae19 	bne.w	8009f42 <HAL_I2C_EV_IRQHandler+0x9a>
 800a310:	e5fa      	b.n	8009f08 <HAL_I2C_EV_IRQHandler+0x60>
    I2C_ITError(hi2c);
 800a312:	4620      	mov	r0, r4
}
 800a314:	b00e      	add	sp, #56	; 0x38
 800a316:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    I2C_ITError(hi2c);
 800a31a:	f7ff bd0f 	b.w	8009d3c <I2C_ITError>
    if (hi2c->EventCount == 0U)
 800a31e:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800a320:	bb52      	cbnz	r2, 800a378 <HAL_I2C_EV_IRQHandler+0x4d0>
      hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800a322:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800a324:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 800a328:	611a      	str	r2, [r3, #16]
 800a32a:	e5ed      	b.n	8009f08 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->XferOptions = I2C_FIRST_FRAME;
 800a32c:	2201      	movs	r2, #1
 800a32e:	62e2      	str	r2, [r4, #44]	; 0x2c
 800a330:	e619      	b.n	8009f66 <HAL_I2C_EV_IRQHandler+0xbe>
    __HAL_I2C_DISABLE_IT(hi2c, (I2C_IT_BUF));
 800a332:	685a      	ldr	r2, [r3, #4]
 800a334:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a338:	605a      	str	r2, [r3, #4]
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_DUALF) == RESET)
 800a33a:	062e      	lsls	r6, r5, #24
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_TRA) == RESET)
 800a33c:	f085 0104 	eor.w	r1, r5, #4
    __HAL_UNLOCK(hi2c);
 800a340:	f04f 0300 	mov.w	r3, #0
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress1;
 800a344:	bf54      	ite	pl
 800a346:	89a2      	ldrhpl	r2, [r4, #12]
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress2;
 800a348:	8b22      	ldrhmi	r2, [r4, #24]
    __HAL_UNLOCK(hi2c);
 800a34a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
  uint8_t TransferDirection = I2C_DIRECTION_RECEIVE;
 800a34e:	f3c1 0180 	ubfx	r1, r1, #2, #1
    HAL_I2C_AddrCallback(hi2c, TransferDirection, SlaveAddrCode);
 800a352:	4620      	mov	r0, r4
 800a354:	f7ff fc0e 	bl	8009b74 <HAL_I2C_AddrCallback>
 800a358:	e5d6      	b.n	8009f08 <HAL_I2C_EV_IRQHandler+0x60>
 800a35a:	bf00      	nop
 800a35c:	08009c49 	.word	0x08009c49
      else if (hi2c->EventCount == 1U)
 800a360:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800a362:	2a01      	cmp	r2, #1
 800a364:	f47f add0 	bne.w	8009f08 <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->Instance->DR = I2C_10BIT_HEADER_READ(hi2c->Devaddress);
 800a368:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800a36a:	11d2      	asrs	r2, r2, #7
 800a36c:	f002 0206 	and.w	r2, r2, #6
 800a370:	f042 02f1 	orr.w	r2, r2, #241	; 0xf1
 800a374:	611a      	str	r2, [r3, #16]
 800a376:	e5c7      	b.n	8009f08 <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800a378:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800a37a:	f042 0201 	orr.w	r2, r2, #1
 800a37e:	b2d2      	uxtb	r2, r2
 800a380:	611a      	str	r2, [r3, #16]
 800a382:	e5c1      	b.n	8009f08 <HAL_I2C_EV_IRQHandler+0x60>
    if ((hi2c->EventCount == 0U) && (CurrentMode == HAL_I2C_MODE_MEM))
 800a384:	6d21      	ldr	r1, [r4, #80]	; 0x50
 800a386:	b911      	cbnz	r1, 800a38e <HAL_I2C_EV_IRQHandler+0x4e6>
 800a388:	2a40      	cmp	r2, #64	; 0x40
 800a38a:	f000 809b 	beq.w	800a4c4 <HAL_I2C_EV_IRQHandler+0x61c>
    else if ((hi2c->EventCount == 0U) && (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT))
 800a38e:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800a390:	b922      	cbnz	r2, 800a39c <HAL_I2C_EV_IRQHandler+0x4f4>
 800a392:	6921      	ldr	r1, [r4, #16]
 800a394:	f5b1 4f40 	cmp.w	r1, #49152	; 0xc000
 800a398:	f000 809f 	beq.w	800a4da <HAL_I2C_EV_IRQHandler+0x632>
      if (hi2c->XferCount == 0U)
 800a39c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a39e:	b292      	uxth	r2, r2
 800a3a0:	2a00      	cmp	r2, #0
 800a3a2:	d142      	bne.n	800a42a <HAL_I2C_EV_IRQHandler+0x582>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a3a4:	9203      	str	r2, [sp, #12]
 800a3a6:	695a      	ldr	r2, [r3, #20]
 800a3a8:	9203      	str	r2, [sp, #12]
 800a3aa:	699a      	ldr	r2, [r3, #24]
 800a3ac:	9203      	str	r2, [sp, #12]
 800a3ae:	9a03      	ldr	r2, [sp, #12]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a3b0:	681a      	ldr	r2, [r3, #0]
 800a3b2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800a3b6:	601a      	str	r2, [r3, #0]
      hi2c->EventCount = 0U;
 800a3b8:	2300      	movs	r3, #0
 800a3ba:	6523      	str	r3, [r4, #80]	; 0x50
 800a3bc:	e5a4      	b.n	8009f08 <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmarx));
 800a3be:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800a3c0:	6802      	ldr	r2, [r0, #0]
 800a3c2:	6852      	ldr	r2, [r2, #4]
 800a3c4:	b292      	uxth	r2, r2
 800a3c6:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800a3c8:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a3ca:	b292      	uxth	r2, r2
 800a3cc:	b11a      	cbz	r2, 800a3d6 <HAL_I2C_EV_IRQHandler+0x52e>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800a3ce:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800a3d0:	f042 0204 	orr.w	r2, r2, #4
 800a3d4:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800a3d6:	685a      	ldr	r2, [r3, #4]
 800a3d8:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800a3dc:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmarx) != HAL_DMA_STATE_READY)
 800a3de:	f7fe fb8f 	bl	8008b00 <HAL_DMA_GetState>
 800a3e2:	2801      	cmp	r0, #1
 800a3e4:	f43f ae8e 	beq.w	800a104 <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800a3e8:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800a3ea:	4b98      	ldr	r3, [pc, #608]	; (800a64c <HAL_I2C_EV_IRQHandler+0x7a4>)
 800a3ec:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800a3ee:	f7fe fb75 	bl	8008adc <HAL_DMA_Abort_IT>
 800a3f2:	2800      	cmp	r0, #0
 800a3f4:	f43f ae86 	beq.w	800a104 <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800a3f8:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800a3fa:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800a3fc:	4798      	blx	r3
 800a3fe:	e681      	b.n	800a104 <HAL_I2C_EV_IRQHandler+0x25c>
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a400:	2228      	movs	r2, #40	; 0x28
      hi2c->PreviousState = I2C_STATE_NONE;
 800a402:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800a404:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a406:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800a40a:	f7ff fbb1 	bl	8009b70 <HAL_I2C_SlaveRxCpltCallback>
 800a40e:	e6a6      	b.n	800a15e <HAL_I2C_EV_IRQHandler+0x2b6>
      hi2c->PreviousState = I2C_STATE_NONE;
 800a410:	2300      	movs	r3, #0
      hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800a412:	498f      	ldr	r1, [pc, #572]	; (800a650 <HAL_I2C_EV_IRQHandler+0x7a8>)
 800a414:	62e1      	str	r1, [r4, #44]	; 0x2c
      hi2c->State = HAL_I2C_STATE_READY;
 800a416:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800a418:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_ListenCpltCallback(hi2c);
 800a41a:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800a41c:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a420:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_ListenCpltCallback(hi2c);
 800a424:	f7ff fba8 	bl	8009b78 <HAL_I2C_ListenCpltCallback>
 800a428:	e56e      	b.n	8009f08 <HAL_I2C_EV_IRQHandler+0x60>
      else if (hi2c->XferCount == 1U)
 800a42a:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a42c:	b292      	uxth	r2, r2
 800a42e:	2a01      	cmp	r2, #1
 800a430:	d070      	beq.n	800a514 <HAL_I2C_EV_IRQHandler+0x66c>
      else if (hi2c->XferCount == 2U)
 800a432:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a434:	b292      	uxth	r2, r2
 800a436:	2a02      	cmp	r2, #2
 800a438:	f000 80d6 	beq.w	800a5e8 <HAL_I2C_EV_IRQHandler+0x740>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a43c:	681a      	ldr	r2, [r3, #0]
 800a43e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800a442:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800a444:	685a      	ldr	r2, [r3, #4]
 800a446:	0511      	lsls	r1, r2, #20
 800a448:	d508      	bpl.n	800a45c <HAL_I2C_EV_IRQHandler+0x5b4>
 800a44a:	2820      	cmp	r0, #32
 800a44c:	f200 80f8 	bhi.w	800a640 <HAL_I2C_EV_IRQHandler+0x798>
 800a450:	2807      	cmp	r0, #7
 800a452:	f200 80ea 	bhi.w	800a62a <HAL_I2C_EV_IRQHandler+0x782>
 800a456:	2801      	cmp	r0, #1
 800a458:	f000 80ed 	beq.w	800a636 <HAL_I2C_EV_IRQHandler+0x78e>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a45c:	2200      	movs	r2, #0
 800a45e:	9209      	str	r2, [sp, #36]	; 0x24
 800a460:	695a      	ldr	r2, [r3, #20]
 800a462:	9209      	str	r2, [sp, #36]	; 0x24
 800a464:	699b      	ldr	r3, [r3, #24]
 800a466:	9309      	str	r3, [sp, #36]	; 0x24
 800a468:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800a46a:	e7a5      	b.n	800a3b8 <HAL_I2C_EV_IRQHandler+0x510>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a46c:	685a      	ldr	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a46e:	6a61      	ldr	r1, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a470:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a474:	605a      	str	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a476:	691b      	ldr	r3, [r3, #16]
 800a478:	700b      	strb	r3, [r1, #0]
    hi2c->pBuffPtr++;
 800a47a:	e6f1      	b.n	800a260 <HAL_I2C_EV_IRQHandler+0x3b8>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800a47c:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800a47e:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800a482:	2a21      	cmp	r2, #33	; 0x21
 800a484:	f47f ad40 	bne.w	8009f08 <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount != 0U)
 800a488:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a48a:	b292      	uxth	r2, r2
 800a48c:	2a00      	cmp	r2, #0
 800a48e:	f47f aeb2 	bne.w	800a1f6 <HAL_I2C_EV_IRQHandler+0x34e>
      if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800a492:	2908      	cmp	r1, #8
 800a494:	f000 80e2 	beq.w	800a65c <HAL_I2C_EV_IRQHandler+0x7b4>
 800a498:	2920      	cmp	r1, #32
 800a49a:	f000 80df 	beq.w	800a65c <HAL_I2C_EV_IRQHandler+0x7b4>
 800a49e:	f511 3f80 	cmn.w	r1, #65536	; 0x10000
 800a4a2:	f000 80db 	beq.w	800a65c <HAL_I2C_EV_IRQHandler+0x7b4>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800a4a6:	6859      	ldr	r1, [r3, #4]
 800a4a8:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800a4ac:	6059      	str	r1, [r3, #4]
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800a4ae:	2011      	movs	r0, #17
        hi2c->State = HAL_I2C_STATE_READY;
 800a4b0:	2320      	movs	r3, #32
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800a4b2:	6320      	str	r0, [r4, #48]	; 0x30
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800a4b4:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800a4b8:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800a4ba:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800a4be:	f7ff fb51 	bl	8009b64 <HAL_I2C_MasterTxCpltCallback>
 800a4c2:	e521      	b.n	8009f08 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a4c4:	9101      	str	r1, [sp, #4]
 800a4c6:	695a      	ldr	r2, [r3, #20]
 800a4c8:	9201      	str	r2, [sp, #4]
 800a4ca:	699b      	ldr	r3, [r3, #24]
 800a4cc:	9301      	str	r3, [sp, #4]
 800a4ce:	9b01      	ldr	r3, [sp, #4]
 800a4d0:	e51a      	b.n	8009f08 <HAL_I2C_EV_IRQHandler+0x60>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800a4d2:	2a21      	cmp	r2, #33	; 0x21
 800a4d4:	f43f add1 	beq.w	800a07a <HAL_I2C_EV_IRQHandler+0x1d2>
 800a4d8:	e5c9      	b.n	800a06e <HAL_I2C_EV_IRQHandler+0x1c6>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a4da:	9202      	str	r2, [sp, #8]
 800a4dc:	695a      	ldr	r2, [r3, #20]
 800a4de:	9202      	str	r2, [sp, #8]
 800a4e0:	699a      	ldr	r2, [r3, #24]
 800a4e2:	9202      	str	r2, [sp, #8]
 800a4e4:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a4e6:	681a      	ldr	r2, [r3, #0]
 800a4e8:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800a4ec:	601a      	str	r2, [r3, #0]
      hi2c->EventCount++;
 800a4ee:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800a4f0:	3301      	adds	r3, #1
 800a4f2:	6523      	str	r3, [r4, #80]	; 0x50
 800a4f4:	e508      	b.n	8009f08 <HAL_I2C_EV_IRQHandler+0x60>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a4f6:	685a      	ldr	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800a4f8:	2904      	cmp	r1, #4
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a4fa:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a4fe:	605a      	str	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800a500:	f43f aeab 	beq.w	800a25a <HAL_I2C_EV_IRQHandler+0x3b2>
 800a504:	2902      	cmp	r1, #2
 800a506:	f43f aea8 	beq.w	800a25a <HAL_I2C_EV_IRQHandler+0x3b2>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a50a:	681a      	ldr	r2, [r3, #0]
 800a50c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a510:	601a      	str	r2, [r3, #0]
 800a512:	e6a2      	b.n	800a25a <HAL_I2C_EV_IRQHandler+0x3b2>
        if (CurrentXferOptions == I2C_NO_OPTION_FRAME)
 800a514:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800a518:	f000 811b 	beq.w	800a752 <HAL_I2C_EV_IRQHandler+0x8aa>
        else if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) \
 800a51c:	2808      	cmp	r0, #8
 800a51e:	f000 8108 	beq.w	800a732 <HAL_I2C_EV_IRQHandler+0x88a>
 800a522:	2820      	cmp	r0, #32
 800a524:	f000 8105 	beq.w	800a732 <HAL_I2C_EV_IRQHandler+0x88a>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800a528:	2d12      	cmp	r5, #18
 800a52a:	f000 80ff 	beq.w	800a72c <HAL_I2C_EV_IRQHandler+0x884>
          if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800a52e:	2810      	cmp	r0, #16
 800a530:	d804      	bhi.n	800a53c <HAL_I2C_EV_IRQHandler+0x694>
 800a532:	4a48      	ldr	r2, [pc, #288]	; (800a654 <HAL_I2C_EV_IRQHandler+0x7ac>)
 800a534:	40c2      	lsrs	r2, r0
 800a536:	07d1      	lsls	r1, r2, #31
 800a538:	f100 814c 	bmi.w	800a7d4 <HAL_I2C_EV_IRQHandler+0x92c>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a53c:	681a      	ldr	r2, [r3, #0]
 800a53e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a542:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a544:	2200      	movs	r2, #0
 800a546:	9206      	str	r2, [sp, #24]
 800a548:	695a      	ldr	r2, [r3, #20]
 800a54a:	9206      	str	r2, [sp, #24]
 800a54c:	699b      	ldr	r3, [r3, #24]
 800a54e:	9306      	str	r3, [sp, #24]
 800a550:	9b06      	ldr	r3, [sp, #24]
 800a552:	e731      	b.n	800a3b8 <HAL_I2C_EV_IRQHandler+0x510>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a554:	685a      	ldr	r2, [r3, #4]
 800a556:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a55a:	605a      	str	r2, [r3, #4]
 800a55c:	e4d4      	b.n	8009f08 <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP))
 800a55e:	3901      	subs	r1, #1
 800a560:	290f      	cmp	r1, #15
 800a562:	d809      	bhi.n	800a578 <HAL_I2C_EV_IRQHandler+0x6d0>
 800a564:	e8df f001 	tbb	[pc, r1]
 800a568:	3608363b 	.word	0x3608363b
 800a56c:	08080808 	.word	0x08080808
 800a570:	08080808 	.word	0x08080808
 800a574:	3b080808 	.word	0x3b080808
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a578:	681a      	ldr	r2, [r3, #0]
 800a57a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800a57e:	601a      	str	r2, [r3, #0]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a580:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a582:	691b      	ldr	r3, [r3, #16]
 800a584:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800a586:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800a588:	6a62      	ldr	r2, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a58a:	6821      	ldr	r1, [r4, #0]
    hi2c->XferCount--;
 800a58c:	3b01      	subs	r3, #1
 800a58e:	b29b      	uxth	r3, r3
 800a590:	8563      	strh	r3, [r4, #42]	; 0x2a
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a592:	690b      	ldr	r3, [r1, #16]
    hi2c->pBuffPtr++;
 800a594:	1c51      	adds	r1, r2, #1
 800a596:	6261      	str	r1, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a598:	7053      	strb	r3, [r2, #1]
    hi2c->XferCount--;
 800a59a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800a59c:	6821      	ldr	r1, [r4, #0]
    hi2c->pBuffPtr++;
 800a59e:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800a5a0:	3b01      	subs	r3, #1
 800a5a2:	b29b      	uxth	r3, r3
 800a5a4:	8563      	strh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800a5a6:	684b      	ldr	r3, [r1, #4]
    hi2c->pBuffPtr++;
 800a5a8:	3201      	adds	r2, #1
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800a5aa:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    hi2c->State = HAL_I2C_STATE_READY;
 800a5ae:	2020      	movs	r0, #32
    hi2c->pBuffPtr++;
 800a5b0:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800a5b2:	604b      	str	r3, [r1, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 800a5b4:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800a5b8:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
 800a5bc:	2b40      	cmp	r3, #64	; 0x40
 800a5be:	f000 80f5 	beq.w	800a7ac <HAL_I2C_EV_IRQHandler+0x904>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a5c2:	2200      	movs	r2, #0
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800a5c4:	2312      	movs	r3, #18
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a5c6:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800a5ca:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800a5cc:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800a5ce:	f7ff facb 	bl	8009b68 <HAL_I2C_MasterRxCpltCallback>
 800a5d2:	e499      	b.n	8009f08 <HAL_I2C_EV_IRQHandler+0x60>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a5d4:	681a      	ldr	r2, [r3, #0]
 800a5d6:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800a5da:	601a      	str	r2, [r3, #0]
 800a5dc:	e7d0      	b.n	800a580 <HAL_I2C_EV_IRQHandler+0x6d8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a5de:	681a      	ldr	r2, [r3, #0]
 800a5e0:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a5e4:	601a      	str	r2, [r3, #0]
 800a5e6:	e7cb      	b.n	800a580 <HAL_I2C_EV_IRQHandler+0x6d8>
        if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800a5e8:	2810      	cmp	r0, #16
 800a5ea:	d804      	bhi.n	800a5f6 <HAL_I2C_EV_IRQHandler+0x74e>
 800a5ec:	4a19      	ldr	r2, [pc, #100]	; (800a654 <HAL_I2C_EV_IRQHandler+0x7ac>)
 800a5ee:	40c2      	lsrs	r2, r0
 800a5f0:	07d2      	lsls	r2, r2, #31
 800a5f2:	f100 80c2 	bmi.w	800a77a <HAL_I2C_EV_IRQHandler+0x8d2>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a5f6:	681a      	ldr	r2, [r3, #0]
 800a5f8:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a5fc:	601a      	str	r2, [r3, #0]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800a5fe:	681a      	ldr	r2, [r3, #0]
 800a600:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800a604:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800a606:	685a      	ldr	r2, [r3, #4]
 800a608:	0516      	lsls	r6, r2, #20
 800a60a:	d506      	bpl.n	800a61a <HAL_I2C_EV_IRQHandler+0x772>
 800a60c:	2820      	cmp	r0, #32
 800a60e:	f240 80bc 	bls.w	800a78a <HAL_I2C_EV_IRQHandler+0x8e2>
 800a612:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800a616:	f000 80bd 	beq.w	800a794 <HAL_I2C_EV_IRQHandler+0x8ec>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a61a:	2200      	movs	r2, #0
 800a61c:	9208      	str	r2, [sp, #32]
 800a61e:	695a      	ldr	r2, [r3, #20]
 800a620:	9208      	str	r2, [sp, #32]
 800a622:	699b      	ldr	r3, [r3, #24]
 800a624:	9308      	str	r3, [sp, #32]
 800a626:	9b08      	ldr	r3, [sp, #32]
 800a628:	e6c6      	b.n	800a3b8 <HAL_I2C_EV_IRQHandler+0x510>
 800a62a:	4a0b      	ldr	r2, [pc, #44]	; (800a658 <HAL_I2C_EV_IRQHandler+0x7b0>)
 800a62c:	3808      	subs	r0, #8
 800a62e:	40c2      	lsrs	r2, r0
 800a630:	07d2      	lsls	r2, r2, #31
 800a632:	f57f af13 	bpl.w	800a45c <HAL_I2C_EV_IRQHandler+0x5b4>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800a636:	685a      	ldr	r2, [r3, #4]
 800a638:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800a63c:	605a      	str	r2, [r3, #4]
 800a63e:	e70d      	b.n	800a45c <HAL_I2C_EV_IRQHandler+0x5b4>
 800a640:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800a644:	f47f af0a 	bne.w	800a45c <HAL_I2C_EV_IRQHandler+0x5b4>
 800a648:	e7f5      	b.n	800a636 <HAL_I2C_EV_IRQHandler+0x78e>
 800a64a:	bf00      	nop
 800a64c:	08009c49 	.word	0x08009c49
 800a650:	ffff0000 	.word	0xffff0000
 800a654:	00010014 	.word	0x00010014
 800a658:	01000101 	.word	0x01000101
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800a65c:	6859      	ldr	r1, [r3, #4]
 800a65e:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800a662:	6059      	str	r1, [r3, #4]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a664:	6819      	ldr	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800a666:	2200      	movs	r2, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800a668:	2020      	movs	r0, #32
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a66a:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800a66e:	6019      	str	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800a670:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State = HAL_I2C_STATE_READY;
 800a672:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800a676:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800a67a:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800a67e:	2b40      	cmp	r3, #64	; 0x40
          HAL_I2C_MemTxCpltCallback(hi2c);
 800a680:	4620      	mov	r0, r4
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800a682:	f47f af1c 	bne.w	800a4be <HAL_I2C_EV_IRQHandler+0x616>
          HAL_I2C_MemTxCpltCallback(hi2c);
 800a686:	f7ff fa79 	bl	8009b7c <HAL_I2C_MemTxCpltCallback>
 800a68a:	e43d      	b.n	8009f08 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((hi2c->XferOptions != I2C_FIRST_AND_NEXT_FRAME) && ((tmp == 1U) || (tmp == 0U)))
 800a68c:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800a68e:	2802      	cmp	r0, #2
 800a690:	f43f af60 	beq.w	800a554 <HAL_I2C_EV_IRQHandler+0x6ac>
 800a694:	2a01      	cmp	r2, #1
 800a696:	f63f af5d 	bhi.w	800a554 <HAL_I2C_EV_IRQHandler+0x6ac>
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800a69a:	4a62      	ldr	r2, [pc, #392]	; (800a824 <HAL_I2C_EV_IRQHandler+0x97c>)
  __IO uint32_t count = 0U;
 800a69c:	910b      	str	r1, [sp, #44]	; 0x2c
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800a69e:	6812      	ldr	r2, [r2, #0]
 800a6a0:	f246 10a8 	movw	r0, #25000	; 0x61a8
 800a6a4:	fbb2 f2f0 	udiv	r2, r2, r0
 800a6a8:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800a6ac:	920b      	str	r2, [sp, #44]	; 0x2c
 800a6ae:	e004      	b.n	800a6ba <HAL_I2C_EV_IRQHandler+0x812>
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800a6b0:	681a      	ldr	r2, [r3, #0]
 800a6b2:	f412 7200 	ands.w	r2, r2, #512	; 0x200
 800a6b6:	f000 8092 	beq.w	800a7de <HAL_I2C_EV_IRQHandler+0x936>
    count--;
 800a6ba:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800a6bc:	3a01      	subs	r2, #1
 800a6be:	920b      	str	r2, [sp, #44]	; 0x2c
    if (count == 0U)
 800a6c0:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800a6c2:	2900      	cmp	r1, #0
 800a6c4:	d1f4      	bne.n	800a6b0 <HAL_I2C_EV_IRQHandler+0x808>
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800a6c6:	6c22      	ldr	r2, [r4, #64]	; 0x40
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a6c8:	6a60      	ldr	r0, [r4, #36]	; 0x24
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800a6ca:	f042 0220 	orr.w	r2, r2, #32
 800a6ce:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800a6d0:	685a      	ldr	r2, [r3, #4]
 800a6d2:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800a6d6:	605a      	str	r2, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a6d8:	691b      	ldr	r3, [r3, #16]
 800a6da:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800a6dc:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800a6de:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800a6e0:	3b01      	subs	r3, #1
        hi2c->pBuffPtr++;
 800a6e2:	3201      	adds	r2, #1
        hi2c->XferCount--;
 800a6e4:	b29b      	uxth	r3, r3
        hi2c->State = HAL_I2C_STATE_READY;
 800a6e6:	2020      	movs	r0, #32
        hi2c->XferCount--;
 800a6e8:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800a6ea:	6262      	str	r2, [r4, #36]	; 0x24
        hi2c->State = HAL_I2C_STATE_READY;
 800a6ec:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        HAL_I2C_ErrorCallback(hi2c);
 800a6f0:	4620      	mov	r0, r4
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800a6f2:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
        HAL_I2C_ErrorCallback(hi2c);
 800a6f6:	f7ff faa3 	bl	8009c40 <HAL_I2C_ErrorCallback>
 800a6fa:	e405      	b.n	8009f08 <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800a6fc:	2d08      	cmp	r5, #8
 800a6fe:	d0ad      	beq.n	800a65c <HAL_I2C_EV_IRQHandler+0x7b4>
 800a700:	2d20      	cmp	r5, #32
 800a702:	d0ab      	beq.n	800a65c <HAL_I2C_EV_IRQHandler+0x7b4>
 800a704:	f515 3f80 	cmn.w	r5, #65536	; 0x10000
 800a708:	d0a8      	beq.n	800a65c <HAL_I2C_EV_IRQHandler+0x7b4>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800a70a:	685a      	ldr	r2, [r3, #4]
 800a70c:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800a710:	605a      	str	r2, [r3, #4]
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800a712:	2011      	movs	r0, #17
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a714:	2100      	movs	r1, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800a716:	2320      	movs	r3, #32
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800a718:	6320      	str	r0, [r4, #48]	; 0x30
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a71a:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800a71e:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800a720:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800a724:	f7ff fa1e 	bl	8009b64 <HAL_I2C_MasterTxCpltCallback>
 800a728:	f7ff bbee 	b.w	8009f08 <HAL_I2C_EV_IRQHandler+0x60>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800a72c:	2801      	cmp	r0, #1
 800a72e:	f43f af05 	beq.w	800a53c <HAL_I2C_EV_IRQHandler+0x694>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a732:	681a      	ldr	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a734:	2100      	movs	r1, #0
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a736:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a73a:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a73c:	9107      	str	r1, [sp, #28]
 800a73e:	695a      	ldr	r2, [r3, #20]
 800a740:	9207      	str	r2, [sp, #28]
 800a742:	699a      	ldr	r2, [r3, #24]
 800a744:	9207      	str	r2, [sp, #28]
 800a746:	9a07      	ldr	r2, [sp, #28]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a748:	681a      	ldr	r2, [r3, #0]
 800a74a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800a74e:	601a      	str	r2, [r3, #0]
 800a750:	e632      	b.n	800a3b8 <HAL_I2C_EV_IRQHandler+0x510>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a752:	681a      	ldr	r2, [r3, #0]
 800a754:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a758:	601a      	str	r2, [r3, #0]
          if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800a75a:	685a      	ldr	r2, [r3, #4]
 800a75c:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800a760:	d02d      	beq.n	800a7be <HAL_I2C_EV_IRQHandler+0x916>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a762:	681a      	ldr	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a764:	2100      	movs	r1, #0
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a766:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a76a:	601a      	str	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a76c:	9104      	str	r1, [sp, #16]
 800a76e:	695a      	ldr	r2, [r3, #20]
 800a770:	9204      	str	r2, [sp, #16]
 800a772:	699b      	ldr	r3, [r3, #24]
 800a774:	9304      	str	r3, [sp, #16]
 800a776:	9b04      	ldr	r3, [sp, #16]
 800a778:	e61e      	b.n	800a3b8 <HAL_I2C_EV_IRQHandler+0x510>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a77a:	681a      	ldr	r2, [r3, #0]
 800a77c:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800a780:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800a782:	685a      	ldr	r2, [r3, #4]
 800a784:	0515      	lsls	r5, r2, #20
 800a786:	f57f af48 	bpl.w	800a61a <HAL_I2C_EV_IRQHandler+0x772>
 800a78a:	2807      	cmp	r0, #7
 800a78c:	d807      	bhi.n	800a79e <HAL_I2C_EV_IRQHandler+0x8f6>
 800a78e:	2801      	cmp	r0, #1
 800a790:	f47f af43 	bne.w	800a61a <HAL_I2C_EV_IRQHandler+0x772>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800a794:	685a      	ldr	r2, [r3, #4]
 800a796:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800a79a:	605a      	str	r2, [r3, #4]
 800a79c:	e73d      	b.n	800a61a <HAL_I2C_EV_IRQHandler+0x772>
 800a79e:	4a22      	ldr	r2, [pc, #136]	; (800a828 <HAL_I2C_EV_IRQHandler+0x980>)
 800a7a0:	3808      	subs	r0, #8
 800a7a2:	40c2      	lsrs	r2, r0
 800a7a4:	07d0      	lsls	r0, r2, #31
 800a7a6:	f57f af38 	bpl.w	800a61a <HAL_I2C_EV_IRQHandler+0x772>
 800a7aa:	e7f3      	b.n	800a794 <HAL_I2C_EV_IRQHandler+0x8ec>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a7ac:	2300      	movs	r3, #0
 800a7ae:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_MemRxCpltCallback(hi2c);
 800a7b2:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_NONE;
 800a7b4:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MemRxCpltCallback(hi2c);
 800a7b6:	f7ff fa41 	bl	8009c3c <HAL_I2C_MemRxCpltCallback>
 800a7ba:	f7ff bba5 	b.w	8009f08 <HAL_I2C_EV_IRQHandler+0x60>
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a7be:	9205      	str	r2, [sp, #20]
 800a7c0:	695a      	ldr	r2, [r3, #20]
 800a7c2:	9205      	str	r2, [sp, #20]
 800a7c4:	699a      	ldr	r2, [r3, #24]
 800a7c6:	9205      	str	r2, [sp, #20]
 800a7c8:	9a05      	ldr	r2, [sp, #20]
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a7ca:	681a      	ldr	r2, [r3, #0]
 800a7cc:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800a7d0:	601a      	str	r2, [r3, #0]
 800a7d2:	e5f1      	b.n	800a3b8 <HAL_I2C_EV_IRQHandler+0x510>
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a7d4:	681a      	ldr	r2, [r3, #0]
 800a7d6:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800a7da:	601a      	str	r2, [r3, #0]
 800a7dc:	e6b2      	b.n	800a544 <HAL_I2C_EV_IRQHandler+0x69c>
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a7de:	6819      	ldr	r1, [r3, #0]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a7e0:	6a60      	ldr	r0, [r4, #36]	; 0x24
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a7e2:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800a7e6:	6019      	str	r1, [r3, #0]
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800a7e8:	6859      	ldr	r1, [r3, #4]
 800a7ea:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800a7ee:	6059      	str	r1, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a7f0:	691b      	ldr	r3, [r3, #16]
 800a7f2:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800a7f4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800a7f6:	3b01      	subs	r3, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800a7f8:	2120      	movs	r1, #32
        hi2c->XferCount--;
 800a7fa:	b29b      	uxth	r3, r3
 800a7fc:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->State = HAL_I2C_STATE_READY;
 800a7fe:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->pBuffPtr++;
 800a802:	6a63      	ldr	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800a804:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
        hi2c->pBuffPtr++;
 800a808:	3301      	adds	r3, #1
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800a80a:	2940      	cmp	r1, #64	; 0x40
        hi2c->pBuffPtr++;
 800a80c:	6263      	str	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800a80e:	f47f aed9 	bne.w	800a5c4 <HAL_I2C_EV_IRQHandler+0x71c>
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800a812:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
          HAL_I2C_MemRxCpltCallback(hi2c);
 800a816:	4620      	mov	r0, r4
          hi2c->PreviousState = I2C_STATE_NONE;
 800a818:	6322      	str	r2, [r4, #48]	; 0x30
          HAL_I2C_MemRxCpltCallback(hi2c);
 800a81a:	f7ff fa0f 	bl	8009c3c <HAL_I2C_MemRxCpltCallback>
 800a81e:	f7ff bb73 	b.w	8009f08 <HAL_I2C_EV_IRQHandler+0x60>
 800a822:	bf00      	nop
 800a824:	20000078 	.word	0x20000078
 800a828:	01000101 	.word	0x01000101

0800a82c <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800a82c:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800a830:	2a20      	cmp	r2, #32
{
 800a832:	4603      	mov	r3, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800a834:	fa5f fc82 	uxtb.w	ip, r2
 800a838:	d001      	beq.n	800a83e <HAL_I2CEx_ConfigAnalogFilter+0x12>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800a83a:	2002      	movs	r0, #2
  }
}
 800a83c:	4770      	bx	lr
    __HAL_I2C_DISABLE(hi2c);
 800a83e:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800a840:	2024      	movs	r0, #36	; 0x24
 800a842:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800a846:	6810      	ldr	r0, [r2, #0]
 800a848:	f020 0001 	bic.w	r0, r0, #1
 800a84c:	6010      	str	r0, [r2, #0]
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 800a84e:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800a850:	f020 0010 	bic.w	r0, r0, #16
 800a854:	6250      	str	r0, [r2, #36]	; 0x24
    hi2c->Instance->FLTR |= AnalogFilter;
 800a856:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800a858:	4301      	orrs	r1, r0
 800a85a:	6251      	str	r1, [r2, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800a85c:	6811      	ldr	r1, [r2, #0]
 800a85e:	f041 0101 	orr.w	r1, r1, #1
 800a862:	6011      	str	r1, [r2, #0]
    return HAL_OK;
 800a864:	2000      	movs	r0, #0
    hi2c->State = HAL_I2C_STATE_READY;
 800a866:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800a86a:	4770      	bx	lr

0800a86c <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800a86c:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800a870:	2a20      	cmp	r2, #32
 800a872:	d001      	beq.n	800a878 <HAL_I2CEx_ConfigDigitalFilter+0xc>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800a874:	2002      	movs	r0, #2
  }
}
 800a876:	4770      	bx	lr
{
 800a878:	b410      	push	{r4}
 800a87a:	fa5f fc82 	uxtb.w	ip, r2
    __HAL_I2C_DISABLE(hi2c);
 800a87e:	6804      	ldr	r4, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800a880:	2224      	movs	r2, #36	; 0x24
 800a882:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800a886:	6822      	ldr	r2, [r4, #0]
 800a888:	f022 0201 	bic.w	r2, r2, #1
 800a88c:	6022      	str	r2, [r4, #0]
    tmpreg = hi2c->Instance->FLTR;
 800a88e:	4603      	mov	r3, r0
 800a890:	6a60      	ldr	r0, [r4, #36]	; 0x24
    tmpreg &= ~(I2C_FLTR_DNF);
 800a892:	f64f 72f0 	movw	r2, #65520	; 0xfff0
 800a896:	4002      	ands	r2, r0
    tmpreg |= DigitalFilter;
 800a898:	4311      	orrs	r1, r2
    hi2c->Instance->FLTR = tmpreg;
 800a89a:	b289      	uxth	r1, r1
 800a89c:	6261      	str	r1, [r4, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800a89e:	6822      	ldr	r2, [r4, #0]
 800a8a0:	f042 0201 	orr.w	r2, r2, #1
 800a8a4:	6022      	str	r2, [r4, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800a8a6:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800a8aa:	2000      	movs	r0, #0
}
 800a8ac:	f85d 4b04 	ldr.w	r4, [sp], #4
 800a8b0:	4770      	bx	lr
 800a8b2:	bf00      	nop

0800a8b4 <HAL_LTDC_Init>:
{
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
 800a8b4:	2800      	cmp	r0, #0
 800a8b6:	d069      	beq.n	800a98c <HAL_LTDC_Init+0xd8>
{
 800a8b8:	b538      	push	{r3, r4, r5, lr}
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 800a8ba:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 800a8be:	4604      	mov	r4, r0
 800a8c0:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800a8c4:	2b00      	cmp	r3, #0
 800a8c6:	d05c      	beq.n	800a982 <HAL_LTDC_Init+0xce>
    HAL_LTDC_MspInit(hltdc);
  }
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800a8c8:	2202      	movs	r2, #2

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800a8ca:	6823      	ldr	r3, [r4, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800a8cc:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800a8d0:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800a8d4:	6999      	ldr	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800a8d6:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800a8d8:	e9d4 5003 	ldrd	r5, r0, [r4, #12]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800a8dc:	f021 4170 	bic.w	r1, r1, #4026531840	; 0xf0000000
 800a8e0:	6199      	str	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800a8e2:	6999      	ldr	r1, [r3, #24]
 800a8e4:	432a      	orrs	r2, r5
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800a8e6:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800a8e8:	430a      	orrs	r2, r1
 800a8ea:	619a      	str	r2, [r3, #24]

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800a8ec:	689a      	ldr	r2, [r3, #8]
 800a8ee:	4928      	ldr	r1, [pc, #160]	; (800a990 <HAL_LTDC_Init+0xdc>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800a8f0:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800a8f2:	400a      	ands	r2, r1
 800a8f4:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 800a8f6:	689a      	ldr	r2, [r3, #8]
 800a8f8:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800a8fc:	69a0      	ldr	r0, [r4, #24]
 800a8fe:	4302      	orrs	r2, r0
 800a900:	609a      	str	r2, [r3, #8]

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800a902:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800a904:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800a906:	400a      	ands	r2, r1
 800a908:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 800a90a:	68da      	ldr	r2, [r3, #12]
 800a90c:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800a910:	6a20      	ldr	r0, [r4, #32]
 800a912:	4302      	orrs	r2, r0
 800a914:	60da      	str	r2, [r3, #12]

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800a916:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800a918:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800a91a:	400a      	ands	r2, r1
 800a91c:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 800a91e:	691a      	ldr	r2, [r3, #16]
 800a920:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800a924:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800a926:	4302      	orrs	r2, r0
 800a928:	611a      	str	r2, [r3, #16]

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800a92a:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 800a92c:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800a92e:	400a      	ands	r2, r1
 800a930:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800a932:	695a      	ldr	r2, [r3, #20]
 800a934:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800a936:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800a93a:	430a      	orrs	r2, r1
 800a93c:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800a93e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800a940:	f894 0035 	ldrb.w	r0, [r4, #53]	; 0x35
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800a944:	f894 1036 	ldrb.w	r1, [r4, #54]	; 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800a948:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
 800a94c:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 800a94e:	6add      	ldr	r5, [r3, #44]	; 0x2c
 800a950:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 800a954:	432a      	orrs	r2, r5
 800a956:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 800a95a:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800a95e:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Enable the Transfer Error and FIFO underrun interrupts */
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 800a960:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800a962:	f042 0206 	orr.w	r2, r2, #6
 800a966:	635a      	str	r2, [r3, #52]	; 0x34

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);
 800a968:	699a      	ldr	r2, [r3, #24]

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 800a96a:	f04f 0c01 	mov.w	ip, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800a96e:	2100      	movs	r1, #0
  __HAL_LTDC_ENABLE(hltdc);
 800a970:	ea42 020c 	orr.w	r2, r2, ip
 800a974:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800a976:	f8c4 10a4 	str.w	r1, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800a97a:	f884 c0a1 	strb.w	ip, [r4, #161]	; 0xa1

  return HAL_OK;
 800a97e:	4608      	mov	r0, r1
}
 800a980:	bd38      	pop	{r3, r4, r5, pc}
    hltdc->Lock = HAL_UNLOCKED;
 800a982:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 800a986:	f7f7 f9bb 	bl	8001d00 <HAL_LTDC_MspInit>
 800a98a:	e79d      	b.n	800a8c8 <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
 800a98c:	2001      	movs	r0, #1
}
 800a98e:	4770      	bx	lr
 800a990:	f000f800 	.word	0xf000f800

0800a994 <HAL_LTDC_ErrorCallback>:
 800a994:	4770      	bx	lr
 800a996:	bf00      	nop

0800a998 <HAL_LTDC_ReloadEventCallback>:
 800a998:	4770      	bx	lr
 800a99a:	bf00      	nop

0800a99c <HAL_LTDC_IRQHandler>:
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
void HAL_LTDC_IRQHandler(LTDC_HandleTypeDef *hltdc)
{
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800a99c:	6803      	ldr	r3, [r0, #0]
{
 800a99e:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800a9a0:	6b9d      	ldr	r5, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 800a9a2:	6b5e      	ldr	r6, [r3, #52]	; 0x34

  /* Transfer Error Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800a9a4:	076a      	lsls	r2, r5, #29
{
 800a9a6:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800a9a8:	d501      	bpl.n	800a9ae <HAL_LTDC_IRQHandler+0x12>
 800a9aa:	0771      	lsls	r1, r6, #29
 800a9ac:	d41d      	bmi.n	800a9ea <HAL_LTDC_IRQHandler+0x4e>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* FIFO underrun Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 800a9ae:	07aa      	lsls	r2, r5, #30
 800a9b0:	d501      	bpl.n	800a9b6 <HAL_LTDC_IRQHandler+0x1a>
 800a9b2:	07b3      	lsls	r3, r6, #30
 800a9b4:	d42d      	bmi.n	800aa12 <HAL_LTDC_IRQHandler+0x76>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Line Interrupt management ************************************************/
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800a9b6:	07e8      	lsls	r0, r5, #31
 800a9b8:	d501      	bpl.n	800a9be <HAL_LTDC_IRQHandler+0x22>
 800a9ba:	07f1      	lsls	r1, r6, #31
 800a9bc:	d440      	bmi.n	800aa40 <HAL_LTDC_IRQHandler+0xa4>
    HAL_LTDC_LineEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Register reload Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 800a9be:	072a      	lsls	r2, r5, #28
 800a9c0:	d501      	bpl.n	800a9c6 <HAL_LTDC_IRQHandler+0x2a>
 800a9c2:	0733      	lsls	r3, r6, #28
 800a9c4:	d400      	bmi.n	800a9c8 <HAL_LTDC_IRQHandler+0x2c>
#else
    /*Call Legacy Reload Event callback */
    HAL_LTDC_ReloadEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }
}
 800a9c6:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800a9c8:	6823      	ldr	r3, [r4, #0]
 800a9ca:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800a9cc:	2008      	movs	r0, #8
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800a9ce:	f022 0208 	bic.w	r2, r2, #8
 800a9d2:	635a      	str	r2, [r3, #52]	; 0x34
    hltdc->State = HAL_LTDC_STATE_READY;
 800a9d4:	2101      	movs	r1, #1
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800a9d6:	63d8      	str	r0, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800a9d8:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800a9da:	f884 10a1 	strb.w	r1, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800a9de:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 800a9e2:	4620      	mov	r0, r4
 800a9e4:	f7ff ffd8 	bl	800a998 <HAL_LTDC_ReloadEventCallback>
}
 800a9e8:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 800a9ea:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800a9ec:	f022 0204 	bic.w	r2, r2, #4
 800a9f0:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 800a9f2:	2204      	movs	r2, #4
 800a9f4:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 800a9f6:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800a9fa:	f043 0301 	orr.w	r3, r3, #1
 800a9fe:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 800aa02:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800aa04:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800aa08:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800aa0c:	f7ff ffc2 	bl	800a994 <HAL_LTDC_ErrorCallback>
 800aa10:	e7cd      	b.n	800a9ae <HAL_LTDC_IRQHandler+0x12>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800aa12:	6823      	ldr	r3, [r4, #0]
 800aa14:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800aa16:	f022 0202 	bic.w	r2, r2, #2
 800aa1a:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800aa1c:	2202      	movs	r2, #2
 800aa1e:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800aa20:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800aa24:	f043 0302 	orr.w	r3, r3, #2
 800aa28:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800aa2c:	2204      	movs	r2, #4
    __HAL_UNLOCK(hltdc);
 800aa2e:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800aa30:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800aa34:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800aa38:	4620      	mov	r0, r4
 800aa3a:	f7ff ffab 	bl	800a994 <HAL_LTDC_ErrorCallback>
 800aa3e:	e7ba      	b.n	800a9b6 <HAL_LTDC_IRQHandler+0x1a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800aa40:	6823      	ldr	r3, [r4, #0]
 800aa42:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800aa44:	f022 0201 	bic.w	r2, r2, #1
 800aa48:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800aa4a:	2201      	movs	r2, #1
 800aa4c:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800aa4e:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800aa50:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800aa54:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800aa58:	4620      	mov	r0, r4
 800aa5a:	f7f6 fc63 	bl	8001324 <HAL_LTDC_LineEventCallback>
 800aa5e:	e7ae      	b.n	800a9be <HAL_LTDC_IRQHandler+0x22>

0800aa60 <HAL_LTDC_ConfigLayer>:
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
 800aa60:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800aa64:	2b01      	cmp	r3, #1
 800aa66:	f000 80c2 	beq.w	800abee <HAL_LTDC_ConfigLayer+0x18e>
{
 800aa6a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800aa6e:	f04f 0e34 	mov.w	lr, #52	; 0x34
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800aa72:	f8d0 9000 	ldr.w	r9, [r0]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800aa76:	fb0e 0e02 	mla	lr, lr, r2, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800aa7a:	2302      	movs	r3, #2
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800aa7c:	01d2      	lsls	r2, r2, #7
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800aa7e:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800aa82:	f102 0684 	add.w	r6, r2, #132	; 0x84
 800aa86:	eb09 0c06 	add.w	ip, r9, r6
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800aa8a:	f8d9 300c 	ldr.w	r3, [r9, #12]
 800aa8e:	f3c3 4a0b 	ubfx	sl, r3, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800aa92:	f8dc 3004 	ldr.w	r3, [ip, #4]
{
 800aa96:	b083      	sub	sp, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800aa98:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800aa9c:	460c      	mov	r4, r1
 800aa9e:	460d      	mov	r5, r1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800aaa0:	9301      	str	r3, [sp, #4]
 800aaa2:	4680      	mov	r8, r0
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800aaa4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800aaa6:	f10e 0e38 	add.w	lr, lr, #56	; 0x38
 800aaaa:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800aaae:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800aab0:	686f      	ldr	r7, [r5, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800aab2:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800aab6:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800aab8:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800aabc:	6823      	ldr	r3, [r4, #0]
 800aabe:	f8ce 3000 	str.w	r3, [lr]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800aac2:	9b01      	ldr	r3, [sp, #4]
 800aac4:	f8cc 3004 	str.w	r3, [ip, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800aac8:	f8d9 300c 	ldr.w	r3, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800aacc:	682a      	ldr	r2, [r5, #0]

  /* Configure the vertical start and stop position */
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800aace:	68e8      	ldr	r0, [r5, #12]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 800aad0:	f8d5 e018 	ldr.w	lr, [r5, #24]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800aad4:	1c51      	adds	r1, r2, #1
 800aad6:	f3c3 430b 	ubfx	r3, r3, #16, #12
 800aada:	440b      	add	r3, r1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800aadc:	44ba      	add	sl, r7
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800aade:	ea43 430a 	orr.w	r3, r3, sl, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800aae2:	f8cc 3004 	str.w	r3, [ip, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800aae6:	f8d9 100c 	ldr.w	r1, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 800aaea:	f8dc 3008 	ldr.w	r3, [ip, #8]
 800aaee:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 800aaf2:	f8cc 3008 	str.w	r3, [ip, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800aaf6:	f3c1 010a 	ubfx	r1, r1, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800aafa:	68ab      	ldr	r3, [r5, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800aafc:	4401      	add	r1, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800aafe:	f8d9 000c 	ldr.w	r0, [r9, #12]
 800ab02:	3301      	adds	r3, #1
 800ab04:	f3c0 000a 	ubfx	r0, r0, #0, #11
 800ab08:	4403      	add	r3, r0
 800ab0a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800ab0e:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800ab12:	f8dc 3010 	ldr.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800ab16:	6929      	ldr	r1, [r5, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800ab18:	f023 0307 	bic.w	r3, r3, #7
 800ab1c:	f8cc 3010 	str.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800ab20:	f04f 0b00 	mov.w	fp, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800ab24:	f8cc 1010 	str.w	r1, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800ab28:	f8dc 3018 	ldr.w	r3, [ip, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 800ab2c:	f895 0032 	ldrb.w	r0, [r5, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 800ab30:	f895 4031 	ldrb.w	r4, [r5, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800ab34:	f8cc b018 	str.w	fp, [ip, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 800ab38:	f895 3030 	ldrb.w	r3, [r5, #48]	; 0x30
 800ab3c:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
 800ab40:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800ab44:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 800ab48:	f8cc 3018 	str.w	r3, [ip, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 800ab4c:	f8dc 3014 	ldr.w	r3, [ip, #20]
 800ab50:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 800ab54:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 800ab58:	696b      	ldr	r3, [r5, #20]
 800ab5a:	f8cc 3014 	str.w	r3, [ip, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 800ab5e:	f8dc 301c 	ldr.w	r3, [ip, #28]
 800ab62:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800ab66:	f023 0307 	bic.w	r3, r3, #7
 800ab6a:	f8cc 301c 	str.w	r3, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 800ab6e:	e9d5 3007 	ldrd	r3, r0, [r5, #28]
 800ab72:	4303      	orrs	r3, r0
 800ab74:	f8cc 301c 	str.w	r3, [ip, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800ab78:	f8dc 3028 	ldr.w	r3, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800ab7c:	6a6b      	ldr	r3, [r5, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800ab7e:	f8cc b028 	str.w	fp, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800ab82:	f8cc 3028 	str.w	r3, [ip, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800ab86:	bb69      	cbnz	r1, 800abe4 <HAL_LTDC_ConfigLayer+0x184>
  {
    tmp = 4U;
 800ab88:	2304      	movs	r3, #4
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800ab8a:	1abf      	subs	r7, r7, r2
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800ab8c:	6aaa      	ldr	r2, [r5, #40]	; 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800ab8e:	fb03 f707 	mul.w	r7, r3, r7
 800ab92:	3703      	adds	r7, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800ab94:	fb02 f303 	mul.w	r3, r2, r3
 800ab98:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800ab9c:	f8dc 302c 	ldr.w	r3, [ip, #44]	; 0x2c
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800aba0:	6aea      	ldr	r2, [r5, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800aba2:	f003 23e0 	and.w	r3, r3, #3758153728	; 0xe000e000
 800aba6:	f8cc 302c 	str.w	r3, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800abaa:	f8cc 702c 	str.w	r7, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800abae:	f8dc 3030 	ldr.w	r3, [ip, #48]	; 0x30
 800abb2:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 800abb6:	f023 0307 	bic.w	r3, r3, #7
 800abba:	f8cc 3030 	str.w	r3, [ip, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800abbe:	f8cc 2030 	str.w	r2, [ip, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800abc2:	f859 3006 	ldr.w	r3, [r9, r6]
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800abc6:	2201      	movs	r2, #1
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800abc8:	4313      	orrs	r3, r2
 800abca:	f849 3006 	str.w	r3, [r9, r6]
  __HAL_UNLOCK(hltdc);
 800abce:	2300      	movs	r3, #0
  return HAL_OK;
 800abd0:	4618      	mov	r0, r3
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800abd2:	f8c9 2024 	str.w	r2, [r9, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 800abd6:	f888 20a1 	strb.w	r2, [r8, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800abda:	f888 30a0 	strb.w	r3, [r8, #160]	; 0xa0
}
 800abde:	b003      	add	sp, #12
 800abe0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 800abe4:	3901      	subs	r1, #1
 800abe6:	2906      	cmp	r1, #6
 800abe8:	d903      	bls.n	800abf2 <HAL_LTDC_ConfigLayer+0x192>
  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800abea:	2301      	movs	r3, #1
 800abec:	e7cd      	b.n	800ab8a <HAL_LTDC_ConfigLayer+0x12a>
  __HAL_LOCK(hltdc);
 800abee:	2002      	movs	r0, #2
}
 800abf0:	4770      	bx	lr
 800abf2:	4b02      	ldr	r3, [pc, #8]	; (800abfc <HAL_LTDC_ConfigLayer+0x19c>)
 800abf4:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800abf8:	e7c7      	b.n	800ab8a <HAL_LTDC_ConfigLayer+0x12a>
 800abfa:	bf00      	nop
 800abfc:	0802c200 	.word	0x0802c200

0800ac00 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 800ac00:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800ac04:	2b01      	cmp	r3, #1
 800ac06:	d019      	beq.n	800ac3c <HAL_LTDC_ProgramLineEvent+0x3c>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800ac08:	6802      	ldr	r2, [r0, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800ac0a:	2302      	movs	r3, #2
{
 800ac0c:	b410      	push	{r4}
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800ac0e:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800ac12:	6b53      	ldr	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800ac14:	4c0a      	ldr	r4, [pc, #40]	; (800ac40 <HAL_LTDC_ProgramLineEvent+0x40>)
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800ac16:	f023 0301 	bic.w	r3, r3, #1
 800ac1a:	6353      	str	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800ac1c:	6421      	str	r1, [r4, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800ac1e:	6b51      	ldr	r1, [r2, #52]	; 0x34
  __HAL_UNLOCK(hltdc);
 800ac20:	2300      	movs	r3, #0
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800ac22:	f041 0101 	orr.w	r1, r1, #1
  hltdc->State = HAL_LTDC_STATE_READY;
 800ac26:	f04f 0c01 	mov.w	ip, #1
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800ac2a:	6351      	str	r1, [r2, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 800ac2c:	f880 c0a1 	strb.w	ip, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800ac30:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
}
 800ac34:	f85d 4b04 	ldr.w	r4, [sp], #4
  return HAL_OK;
 800ac38:	4618      	mov	r0, r3
}
 800ac3a:	4770      	bx	lr
  __HAL_LOCK(hltdc);
 800ac3c:	2002      	movs	r0, #2
}
 800ac3e:	4770      	bx	lr
 800ac40:	40016800 	.word	0x40016800

0800ac44 <HAL_RCC_OscConfig>:
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 800ac44:	2800      	cmp	r0, #0
 800ac46:	f000 81a2 	beq.w	800af8e <HAL_RCC_OscConfig+0x34a>
{
 800ac4a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800ac4e:	6803      	ldr	r3, [r0, #0]
 800ac50:	07dd      	lsls	r5, r3, #31
{
 800ac52:	b082      	sub	sp, #8
 800ac54:	4604      	mov	r4, r0
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800ac56:	d52f      	bpl.n	800acb8 <HAL_RCC_OscConfig+0x74>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800ac58:	499e      	ldr	r1, [pc, #632]	; (800aed4 <HAL_RCC_OscConfig+0x290>)
 800ac5a:	688a      	ldr	r2, [r1, #8]
 800ac5c:	f002 020c 	and.w	r2, r2, #12
 800ac60:	2a04      	cmp	r2, #4
 800ac62:	f000 80ed 	beq.w	800ae40 <HAL_RCC_OscConfig+0x1fc>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800ac66:	688a      	ldr	r2, [r1, #8]
 800ac68:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800ac6c:	2a08      	cmp	r2, #8
 800ac6e:	f000 80e3 	beq.w	800ae38 <HAL_RCC_OscConfig+0x1f4>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800ac72:	6863      	ldr	r3, [r4, #4]
 800ac74:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800ac78:	f000 80ec 	beq.w	800ae54 <HAL_RCC_OscConfig+0x210>
 800ac7c:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 800ac80:	f000 8175 	beq.w	800af6e <HAL_RCC_OscConfig+0x32a>
 800ac84:	4d93      	ldr	r5, [pc, #588]	; (800aed4 <HAL_RCC_OscConfig+0x290>)
 800ac86:	682a      	ldr	r2, [r5, #0]
 800ac88:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 800ac8c:	602a      	str	r2, [r5, #0]
 800ac8e:	682a      	ldr	r2, [r5, #0]
 800ac90:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 800ac94:	602a      	str	r2, [r5, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800ac96:	2b00      	cmp	r3, #0
 800ac98:	f040 80e1 	bne.w	800ae5e <HAL_RCC_OscConfig+0x21a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800ac9c:	f7fd fe94 	bl	80089c8 <HAL_GetTick>
 800aca0:	4606      	mov	r6, r0

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800aca2:	e005      	b.n	800acb0 <HAL_RCC_OscConfig+0x6c>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800aca4:	f7fd fe90 	bl	80089c8 <HAL_GetTick>
 800aca8:	1b80      	subs	r0, r0, r6
 800acaa:	2864      	cmp	r0, #100	; 0x64
 800acac:	f200 8101 	bhi.w	800aeb2 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800acb0:	682b      	ldr	r3, [r5, #0]
 800acb2:	039b      	lsls	r3, r3, #14
 800acb4:	d4f6      	bmi.n	800aca4 <HAL_RCC_OscConfig+0x60>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800acb6:	6823      	ldr	r3, [r4, #0]
 800acb8:	079f      	lsls	r7, r3, #30
 800acba:	d528      	bpl.n	800ad0e <HAL_RCC_OscConfig+0xca>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800acbc:	4a85      	ldr	r2, [pc, #532]	; (800aed4 <HAL_RCC_OscConfig+0x290>)
 800acbe:	6891      	ldr	r1, [r2, #8]
 800acc0:	f011 0f0c 	tst.w	r1, #12
 800acc4:	f000 8090 	beq.w	800ade8 <HAL_RCC_OscConfig+0x1a4>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800acc8:	6891      	ldr	r1, [r2, #8]
 800acca:	f001 010c 	and.w	r1, r1, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800acce:	2908      	cmp	r1, #8
 800acd0:	f000 8086 	beq.w	800ade0 <HAL_RCC_OscConfig+0x19c>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800acd4:	68e3      	ldr	r3, [r4, #12]
 800acd6:	2b00      	cmp	r3, #0
 800acd8:	f000 810e 	beq.w	800aef8 <HAL_RCC_OscConfig+0x2b4>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 800acdc:	4b7e      	ldr	r3, [pc, #504]	; (800aed8 <HAL_RCC_OscConfig+0x294>)

        /* Get Start Tick*/
        tickstart = HAL_GetTick();

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800acde:	4e7d      	ldr	r6, [pc, #500]	; (800aed4 <HAL_RCC_OscConfig+0x290>)
        __HAL_RCC_HSI_ENABLE();
 800ace0:	2201      	movs	r2, #1
 800ace2:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800ace4:	f7fd fe70 	bl	80089c8 <HAL_GetTick>
 800ace8:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800acea:	e005      	b.n	800acf8 <HAL_RCC_OscConfig+0xb4>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800acec:	f7fd fe6c 	bl	80089c8 <HAL_GetTick>
 800acf0:	1b40      	subs	r0, r0, r5
 800acf2:	2802      	cmp	r0, #2
 800acf4:	f200 80dd 	bhi.w	800aeb2 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800acf8:	6833      	ldr	r3, [r6, #0]
 800acfa:	0798      	lsls	r0, r3, #30
 800acfc:	d5f6      	bpl.n	800acec <HAL_RCC_OscConfig+0xa8>
            return HAL_TIMEOUT;
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800acfe:	6833      	ldr	r3, [r6, #0]
 800ad00:	6922      	ldr	r2, [r4, #16]
 800ad02:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800ad06:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800ad0a:	6033      	str	r3, [r6, #0]
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800ad0c:	6823      	ldr	r3, [r4, #0]
 800ad0e:	071a      	lsls	r2, r3, #28
 800ad10:	d451      	bmi.n	800adb6 <HAL_RCC_OscConfig+0x172>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800ad12:	0758      	lsls	r0, r3, #29
 800ad14:	d52f      	bpl.n	800ad76 <HAL_RCC_OscConfig+0x132>
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 800ad16:	4a6f      	ldr	r2, [pc, #444]	; (800aed4 <HAL_RCC_OscConfig+0x290>)
 800ad18:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800ad1a:	f013 5380 	ands.w	r3, r3, #268435456	; 0x10000000
 800ad1e:	d07f      	beq.n	800ae20 <HAL_RCC_OscConfig+0x1dc>
    FlagStatus       pwrclkchanged = RESET;
 800ad20:	2500      	movs	r5, #0
    {
      __HAL_RCC_PWR_CLK_ENABLE();
      pwrclkchanged = SET;
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800ad22:	4e6e      	ldr	r6, [pc, #440]	; (800aedc <HAL_RCC_OscConfig+0x298>)
 800ad24:	6833      	ldr	r3, [r6, #0]
 800ad26:	05d9      	lsls	r1, r3, #23
 800ad28:	f140 80b3 	bpl.w	800ae92 <HAL_RCC_OscConfig+0x24e>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800ad2c:	68a3      	ldr	r3, [r4, #8]
 800ad2e:	2b01      	cmp	r3, #1
 800ad30:	f000 80c3 	beq.w	800aeba <HAL_RCC_OscConfig+0x276>
 800ad34:	2b05      	cmp	r3, #5
 800ad36:	f000 812c 	beq.w	800af92 <HAL_RCC_OscConfig+0x34e>
 800ad3a:	4e66      	ldr	r6, [pc, #408]	; (800aed4 <HAL_RCC_OscConfig+0x290>)
 800ad3c:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800ad3e:	f022 0201 	bic.w	r2, r2, #1
 800ad42:	6732      	str	r2, [r6, #112]	; 0x70
 800ad44:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800ad46:	f022 0204 	bic.w	r2, r2, #4
 800ad4a:	6732      	str	r2, [r6, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800ad4c:	2b00      	cmp	r3, #0
 800ad4e:	f040 80b9 	bne.w	800aec4 <HAL_RCC_OscConfig+0x280>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800ad52:	f7fd fe39 	bl	80089c8 <HAL_GetTick>

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800ad56:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 800ad5a:	4607      	mov	r7, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800ad5c:	e005      	b.n	800ad6a <HAL_RCC_OscConfig+0x126>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800ad5e:	f7fd fe33 	bl	80089c8 <HAL_GetTick>
 800ad62:	1bc0      	subs	r0, r0, r7
 800ad64:	4540      	cmp	r0, r8
 800ad66:	f200 80a4 	bhi.w	800aeb2 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800ad6a:	6f33      	ldr	r3, [r6, #112]	; 0x70
 800ad6c:	0798      	lsls	r0, r3, #30
 800ad6e:	d4f6      	bmi.n	800ad5e <HAL_RCC_OscConfig+0x11a>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 800ad70:	2d00      	cmp	r5, #0
 800ad72:	f040 8106 	bne.w	800af82 <HAL_RCC_OscConfig+0x33e>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800ad76:	69a0      	ldr	r0, [r4, #24]
 800ad78:	b1c8      	cbz	r0, 800adae <HAL_RCC_OscConfig+0x16a>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800ad7a:	4d56      	ldr	r5, [pc, #344]	; (800aed4 <HAL_RCC_OscConfig+0x290>)
 800ad7c:	68ab      	ldr	r3, [r5, #8]
 800ad7e:	f003 030c 	and.w	r3, r3, #12
 800ad82:	2b08      	cmp	r3, #8
 800ad84:	f000 80c9 	beq.w	800af1a <HAL_RCC_OscConfig+0x2d6>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 800ad88:	4b53      	ldr	r3, [pc, #332]	; (800aed8 <HAL_RCC_OscConfig+0x294>)
 800ad8a:	2200      	movs	r2, #0
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800ad8c:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 800ad8e:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800ad90:	f000 8109 	beq.w	800afa6 <HAL_RCC_OscConfig+0x362>
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800ad94:	f7fd fe18 	bl	80089c8 <HAL_GetTick>
 800ad98:	4604      	mov	r4, r0

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800ad9a:	e005      	b.n	800ada8 <HAL_RCC_OscConfig+0x164>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800ad9c:	f7fd fe14 	bl	80089c8 <HAL_GetTick>
 800ada0:	1b00      	subs	r0, r0, r4
 800ada2:	2802      	cmp	r0, #2
 800ada4:	f200 8085 	bhi.w	800aeb2 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800ada8:	682b      	ldr	r3, [r5, #0]
 800adaa:	019b      	lsls	r3, r3, #6
 800adac:	d4f6      	bmi.n	800ad9c <HAL_RCC_OscConfig+0x158>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800adae:	2000      	movs	r0, #0
}
 800adb0:	b002      	add	sp, #8
 800adb2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800adb6:	6963      	ldr	r3, [r4, #20]
 800adb8:	b30b      	cbz	r3, 800adfe <HAL_RCC_OscConfig+0x1ba>
      __HAL_RCC_LSI_ENABLE();
 800adba:	4b47      	ldr	r3, [pc, #284]	; (800aed8 <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800adbc:	4e45      	ldr	r6, [pc, #276]	; (800aed4 <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_ENABLE();
 800adbe:	2201      	movs	r2, #1
 800adc0:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800adc4:	f7fd fe00 	bl	80089c8 <HAL_GetTick>
 800adc8:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800adca:	e004      	b.n	800add6 <HAL_RCC_OscConfig+0x192>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800adcc:	f7fd fdfc 	bl	80089c8 <HAL_GetTick>
 800add0:	1b40      	subs	r0, r0, r5
 800add2:	2802      	cmp	r0, #2
 800add4:	d86d      	bhi.n	800aeb2 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800add6:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800add8:	079b      	lsls	r3, r3, #30
 800adda:	d5f7      	bpl.n	800adcc <HAL_RCC_OscConfig+0x188>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800addc:	6823      	ldr	r3, [r4, #0]
 800adde:	e798      	b.n	800ad12 <HAL_RCC_OscConfig+0xce>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800ade0:	6852      	ldr	r2, [r2, #4]
 800ade2:	0256      	lsls	r6, r2, #9
 800ade4:	f53f af76 	bmi.w	800acd4 <HAL_RCC_OscConfig+0x90>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800ade8:	4a3a      	ldr	r2, [pc, #232]	; (800aed4 <HAL_RCC_OscConfig+0x290>)
 800adea:	6812      	ldr	r2, [r2, #0]
 800adec:	0795      	lsls	r5, r2, #30
 800adee:	d544      	bpl.n	800ae7a <HAL_RCC_OscConfig+0x236>
 800adf0:	68e2      	ldr	r2, [r4, #12]
 800adf2:	2a01      	cmp	r2, #1
 800adf4:	d041      	beq.n	800ae7a <HAL_RCC_OscConfig+0x236>
        return HAL_ERROR;
 800adf6:	2001      	movs	r0, #1
}
 800adf8:	b002      	add	sp, #8
 800adfa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_LSI_DISABLE();
 800adfe:	4a36      	ldr	r2, [pc, #216]	; (800aed8 <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800ae00:	4e34      	ldr	r6, [pc, #208]	; (800aed4 <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_DISABLE();
 800ae02:	f8c2 3e80 	str.w	r3, [r2, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800ae06:	f7fd fddf 	bl	80089c8 <HAL_GetTick>
 800ae0a:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800ae0c:	e004      	b.n	800ae18 <HAL_RCC_OscConfig+0x1d4>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800ae0e:	f7fd fddb 	bl	80089c8 <HAL_GetTick>
 800ae12:	1b40      	subs	r0, r0, r5
 800ae14:	2802      	cmp	r0, #2
 800ae16:	d84c      	bhi.n	800aeb2 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800ae18:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800ae1a:	079f      	lsls	r7, r3, #30
 800ae1c:	d4f7      	bmi.n	800ae0e <HAL_RCC_OscConfig+0x1ca>
 800ae1e:	e7dd      	b.n	800addc <HAL_RCC_OscConfig+0x198>
      __HAL_RCC_PWR_CLK_ENABLE();
 800ae20:	9301      	str	r3, [sp, #4]
 800ae22:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800ae24:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800ae28:	6413      	str	r3, [r2, #64]	; 0x40
 800ae2a:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800ae2c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800ae30:	9301      	str	r3, [sp, #4]
 800ae32:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 800ae34:	2501      	movs	r5, #1
 800ae36:	e774      	b.n	800ad22 <HAL_RCC_OscConfig+0xde>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800ae38:	684a      	ldr	r2, [r1, #4]
 800ae3a:	0250      	lsls	r0, r2, #9
 800ae3c:	f57f af19 	bpl.w	800ac72 <HAL_RCC_OscConfig+0x2e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800ae40:	4a24      	ldr	r2, [pc, #144]	; (800aed4 <HAL_RCC_OscConfig+0x290>)
 800ae42:	6812      	ldr	r2, [r2, #0]
 800ae44:	0391      	lsls	r1, r2, #14
 800ae46:	f57f af37 	bpl.w	800acb8 <HAL_RCC_OscConfig+0x74>
 800ae4a:	6862      	ldr	r2, [r4, #4]
 800ae4c:	2a00      	cmp	r2, #0
 800ae4e:	f47f af33 	bne.w	800acb8 <HAL_RCC_OscConfig+0x74>
 800ae52:	e7d0      	b.n	800adf6 <HAL_RCC_OscConfig+0x1b2>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800ae54:	4a1f      	ldr	r2, [pc, #124]	; (800aed4 <HAL_RCC_OscConfig+0x290>)
 800ae56:	6813      	ldr	r3, [r2, #0]
 800ae58:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800ae5c:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800ae5e:	f7fd fdb3 	bl	80089c8 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800ae62:	4e1c      	ldr	r6, [pc, #112]	; (800aed4 <HAL_RCC_OscConfig+0x290>)
        tickstart = HAL_GetTick();
 800ae64:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800ae66:	e004      	b.n	800ae72 <HAL_RCC_OscConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800ae68:	f7fd fdae 	bl	80089c8 <HAL_GetTick>
 800ae6c:	1b40      	subs	r0, r0, r5
 800ae6e:	2864      	cmp	r0, #100	; 0x64
 800ae70:	d81f      	bhi.n	800aeb2 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800ae72:	6833      	ldr	r3, [r6, #0]
 800ae74:	039a      	lsls	r2, r3, #14
 800ae76:	d5f7      	bpl.n	800ae68 <HAL_RCC_OscConfig+0x224>
 800ae78:	e71d      	b.n	800acb6 <HAL_RCC_OscConfig+0x72>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800ae7a:	4916      	ldr	r1, [pc, #88]	; (800aed4 <HAL_RCC_OscConfig+0x290>)
 800ae7c:	6920      	ldr	r0, [r4, #16]
 800ae7e:	680a      	ldr	r2, [r1, #0]
 800ae80:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 800ae84:	ea42 02c0 	orr.w	r2, r2, r0, lsl #3
 800ae88:	600a      	str	r2, [r1, #0]
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800ae8a:	071a      	lsls	r2, r3, #28
 800ae8c:	f57f af41 	bpl.w	800ad12 <HAL_RCC_OscConfig+0xce>
 800ae90:	e791      	b.n	800adb6 <HAL_RCC_OscConfig+0x172>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800ae92:	6833      	ldr	r3, [r6, #0]
 800ae94:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800ae98:	6033      	str	r3, [r6, #0]
      tickstart = HAL_GetTick();
 800ae9a:	f7fd fd95 	bl	80089c8 <HAL_GetTick>
 800ae9e:	4607      	mov	r7, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800aea0:	6833      	ldr	r3, [r6, #0]
 800aea2:	05da      	lsls	r2, r3, #23
 800aea4:	f53f af42 	bmi.w	800ad2c <HAL_RCC_OscConfig+0xe8>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800aea8:	f7fd fd8e 	bl	80089c8 <HAL_GetTick>
 800aeac:	1bc0      	subs	r0, r0, r7
 800aeae:	2802      	cmp	r0, #2
 800aeb0:	d9f6      	bls.n	800aea0 <HAL_RCC_OscConfig+0x25c>
            return HAL_TIMEOUT;
 800aeb2:	2003      	movs	r0, #3
}
 800aeb4:	b002      	add	sp, #8
 800aeb6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800aeba:	4a06      	ldr	r2, [pc, #24]	; (800aed4 <HAL_RCC_OscConfig+0x290>)
 800aebc:	6f13      	ldr	r3, [r2, #112]	; 0x70
 800aebe:	f043 0301 	orr.w	r3, r3, #1
 800aec2:	6713      	str	r3, [r2, #112]	; 0x70
      tickstart = HAL_GetTick();
 800aec4:	f7fd fd80 	bl	80089c8 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800aec8:	4f02      	ldr	r7, [pc, #8]	; (800aed4 <HAL_RCC_OscConfig+0x290>)
      tickstart = HAL_GetTick();
 800aeca:	4606      	mov	r6, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800aecc:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800aed0:	e00b      	b.n	800aeea <HAL_RCC_OscConfig+0x2a6>
 800aed2:	bf00      	nop
 800aed4:	40023800 	.word	0x40023800
 800aed8:	42470000 	.word	0x42470000
 800aedc:	40007000 	.word	0x40007000
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800aee0:	f7fd fd72 	bl	80089c8 <HAL_GetTick>
 800aee4:	1b80      	subs	r0, r0, r6
 800aee6:	4540      	cmp	r0, r8
 800aee8:	d8e3      	bhi.n	800aeb2 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800aeea:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800aeec:	079b      	lsls	r3, r3, #30
 800aeee:	d5f7      	bpl.n	800aee0 <HAL_RCC_OscConfig+0x29c>
    if(pwrclkchanged == SET)
 800aef0:	2d00      	cmp	r5, #0
 800aef2:	f43f af40 	beq.w	800ad76 <HAL_RCC_OscConfig+0x132>
 800aef6:	e044      	b.n	800af82 <HAL_RCC_OscConfig+0x33e>
        __HAL_RCC_HSI_DISABLE();
 800aef8:	4a42      	ldr	r2, [pc, #264]	; (800b004 <HAL_RCC_OscConfig+0x3c0>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800aefa:	4e43      	ldr	r6, [pc, #268]	; (800b008 <HAL_RCC_OscConfig+0x3c4>)
        __HAL_RCC_HSI_DISABLE();
 800aefc:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800aefe:	f7fd fd63 	bl	80089c8 <HAL_GetTick>
 800af02:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800af04:	e004      	b.n	800af10 <HAL_RCC_OscConfig+0x2cc>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800af06:	f7fd fd5f 	bl	80089c8 <HAL_GetTick>
 800af0a:	1b40      	subs	r0, r0, r5
 800af0c:	2802      	cmp	r0, #2
 800af0e:	d8d0      	bhi.n	800aeb2 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800af10:	6833      	ldr	r3, [r6, #0]
 800af12:	0799      	lsls	r1, r3, #30
 800af14:	d4f7      	bmi.n	800af06 <HAL_RCC_OscConfig+0x2c2>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800af16:	6823      	ldr	r3, [r4, #0]
 800af18:	e6f9      	b.n	800ad0e <HAL_RCC_OscConfig+0xca>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800af1a:	2801      	cmp	r0, #1
 800af1c:	f43f af48 	beq.w	800adb0 <HAL_RCC_OscConfig+0x16c>
        pll_config = RCC->PLLCFGR;
 800af20:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800af22:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800af24:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800af28:	4291      	cmp	r1, r2
 800af2a:	f47f af64 	bne.w	800adf6 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800af2e:	6a22      	ldr	r2, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800af30:	f003 013f 	and.w	r1, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800af34:	4291      	cmp	r1, r2
 800af36:	f47f af5e 	bne.w	800adf6 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800af3a:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800af3c:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 800af40:	401a      	ands	r2, r3
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800af42:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 800af46:	f47f af56 	bne.w	800adf6 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800af4a:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800af4c:	0852      	lsrs	r2, r2, #1
 800af4e:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 800af52:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800af54:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 800af58:	f47f af4d 	bne.w	800adf6 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 800af5c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800af5e:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800af62:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
    return HAL_ERROR;
 800af66:	bf14      	ite	ne
 800af68:	2001      	movne	r0, #1
 800af6a:	2000      	moveq	r0, #0
 800af6c:	e720      	b.n	800adb0 <HAL_RCC_OscConfig+0x16c>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800af6e:	4b26      	ldr	r3, [pc, #152]	; (800b008 <HAL_RCC_OscConfig+0x3c4>)
 800af70:	681a      	ldr	r2, [r3, #0]
 800af72:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 800af76:	601a      	str	r2, [r3, #0]
 800af78:	681a      	ldr	r2, [r3, #0]
 800af7a:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800af7e:	601a      	str	r2, [r3, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800af80:	e76d      	b.n	800ae5e <HAL_RCC_OscConfig+0x21a>
      __HAL_RCC_PWR_CLK_DISABLE();
 800af82:	4a21      	ldr	r2, [pc, #132]	; (800b008 <HAL_RCC_OscConfig+0x3c4>)
 800af84:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800af86:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800af8a:	6413      	str	r3, [r2, #64]	; 0x40
 800af8c:	e6f3      	b.n	800ad76 <HAL_RCC_OscConfig+0x132>
    return HAL_ERROR;
 800af8e:	2001      	movs	r0, #1
}
 800af90:	4770      	bx	lr
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800af92:	4b1d      	ldr	r3, [pc, #116]	; (800b008 <HAL_RCC_OscConfig+0x3c4>)
 800af94:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800af96:	f042 0204 	orr.w	r2, r2, #4
 800af9a:	671a      	str	r2, [r3, #112]	; 0x70
 800af9c:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800af9e:	f042 0201 	orr.w	r2, r2, #1
 800afa2:	671a      	str	r2, [r3, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800afa4:	e78e      	b.n	800aec4 <HAL_RCC_OscConfig+0x280>
        tickstart = HAL_GetTick();
 800afa6:	f7fd fd0f 	bl	80089c8 <HAL_GetTick>
 800afaa:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800afac:	e005      	b.n	800afba <HAL_RCC_OscConfig+0x376>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800afae:	f7fd fd0b 	bl	80089c8 <HAL_GetTick>
 800afb2:	1b80      	subs	r0, r0, r6
 800afb4:	2802      	cmp	r0, #2
 800afb6:	f63f af7c 	bhi.w	800aeb2 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800afba:	682b      	ldr	r3, [r5, #0]
 800afbc:	0199      	lsls	r1, r3, #6
 800afbe:	d4f6      	bmi.n	800afae <HAL_RCC_OscConfig+0x36a>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800afc0:	e9d4 3107 	ldrd	r3, r1, [r4, #28]
 800afc4:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800afc6:	430b      	orrs	r3, r1
 800afc8:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800afcc:	e9d4 210a 	ldrd	r2, r1, [r4, #40]	; 0x28
 800afd0:	0852      	lsrs	r2, r2, #1
 800afd2:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 800afd6:	3a01      	subs	r2, #1
        __HAL_RCC_PLL_ENABLE();
 800afd8:	490a      	ldr	r1, [pc, #40]	; (800b004 <HAL_RCC_OscConfig+0x3c0>)
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800afda:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
        __HAL_RCC_PLL_ENABLE();
 800afde:	2201      	movs	r2, #1
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800afe0:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800afe2:	660a      	str	r2, [r1, #96]	; 0x60
        tickstart = HAL_GetTick();
 800afe4:	f7fd fcf0 	bl	80089c8 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800afe8:	4d07      	ldr	r5, [pc, #28]	; (800b008 <HAL_RCC_OscConfig+0x3c4>)
        tickstart = HAL_GetTick();
 800afea:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800afec:	e005      	b.n	800affa <HAL_RCC_OscConfig+0x3b6>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800afee:	f7fd fceb 	bl	80089c8 <HAL_GetTick>
 800aff2:	1b00      	subs	r0, r0, r4
 800aff4:	2802      	cmp	r0, #2
 800aff6:	f63f af5c 	bhi.w	800aeb2 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800affa:	682b      	ldr	r3, [r5, #0]
 800affc:	019a      	lsls	r2, r3, #6
 800affe:	d5f6      	bpl.n	800afee <HAL_RCC_OscConfig+0x3aa>
 800b000:	e6d5      	b.n	800adae <HAL_RCC_OscConfig+0x16a>
 800b002:	bf00      	nop
 800b004:	42470000 	.word	0x42470000
 800b008:	40023800 	.word	0x40023800

0800b00c <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800b00c:	4916      	ldr	r1, [pc, #88]	; (800b068 <HAL_RCC_GetSysClockFreq+0x5c>)
{
 800b00e:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800b010:	688b      	ldr	r3, [r1, #8]
 800b012:	f003 030c 	and.w	r3, r3, #12
 800b016:	2b04      	cmp	r3, #4
 800b018:	d01b      	beq.n	800b052 <HAL_RCC_GetSysClockFreq+0x46>
 800b01a:	2b08      	cmp	r3, #8
 800b01c:	d117      	bne.n	800b04e <HAL_RCC_GetSysClockFreq+0x42>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800b01e:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800b020:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800b022:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800b024:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800b028:	f002 023f 	and.w	r2, r2, #63	; 0x3f
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800b02c:	d113      	bne.n	800b056 <HAL_RCC_GetSysClockFreq+0x4a>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800b02e:	480f      	ldr	r0, [pc, #60]	; (800b06c <HAL_RCC_GetSysClockFreq+0x60>)
 800b030:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800b034:	fba1 0100 	umull	r0, r1, r1, r0
 800b038:	f7f5 f92a 	bl	8000290 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 800b03c:	4b0a      	ldr	r3, [pc, #40]	; (800b068 <HAL_RCC_GetSysClockFreq+0x5c>)
 800b03e:	685b      	ldr	r3, [r3, #4]
 800b040:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800b044:	3301      	adds	r3, #1
 800b046:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 800b048:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 800b04c:	bd08      	pop	{r3, pc}
      sysclockfreq = HSI_VALUE;
 800b04e:	4807      	ldr	r0, [pc, #28]	; (800b06c <HAL_RCC_GetSysClockFreq+0x60>)
}
 800b050:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800b052:	4807      	ldr	r0, [pc, #28]	; (800b070 <HAL_RCC_GetSysClockFreq+0x64>)
}
 800b054:	bd08      	pop	{r3, pc}
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800b056:	4806      	ldr	r0, [pc, #24]	; (800b070 <HAL_RCC_GetSysClockFreq+0x64>)
 800b058:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800b05c:	2300      	movs	r3, #0
 800b05e:	fba1 0100 	umull	r0, r1, r1, r0
 800b062:	f7f5 f915 	bl	8000290 <__aeabi_uldivmod>
 800b066:	e7e9      	b.n	800b03c <HAL_RCC_GetSysClockFreq+0x30>
 800b068:	40023800 	.word	0x40023800
 800b06c:	00f42400 	.word	0x00f42400
 800b070:	007a1200 	.word	0x007a1200

0800b074 <HAL_RCC_ClockConfig>:
  if(RCC_ClkInitStruct == NULL)
 800b074:	2800      	cmp	r0, #0
 800b076:	f000 8087 	beq.w	800b188 <HAL_RCC_ClockConfig+0x114>
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800b07a:	4a48      	ldr	r2, [pc, #288]	; (800b19c <HAL_RCC_ClockConfig+0x128>)
 800b07c:	6813      	ldr	r3, [r2, #0]
 800b07e:	f003 030f 	and.w	r3, r3, #15
 800b082:	428b      	cmp	r3, r1
{
 800b084:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b088:	460d      	mov	r5, r1
 800b08a:	4604      	mov	r4, r0
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800b08c:	d209      	bcs.n	800b0a2 <HAL_RCC_ClockConfig+0x2e>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800b08e:	b2cb      	uxtb	r3, r1
 800b090:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800b092:	6813      	ldr	r3, [r2, #0]
 800b094:	f003 030f 	and.w	r3, r3, #15
 800b098:	428b      	cmp	r3, r1
 800b09a:	d002      	beq.n	800b0a2 <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
 800b09c:	2001      	movs	r0, #1
}
 800b09e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800b0a2:	6823      	ldr	r3, [r4, #0]
 800b0a4:	0798      	lsls	r0, r3, #30
 800b0a6:	d514      	bpl.n	800b0d2 <HAL_RCC_ClockConfig+0x5e>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800b0a8:	0759      	lsls	r1, r3, #29
 800b0aa:	d504      	bpl.n	800b0b6 <HAL_RCC_ClockConfig+0x42>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 800b0ac:	493c      	ldr	r1, [pc, #240]	; (800b1a0 <HAL_RCC_ClockConfig+0x12c>)
 800b0ae:	688a      	ldr	r2, [r1, #8]
 800b0b0:	f442 52e0 	orr.w	r2, r2, #7168	; 0x1c00
 800b0b4:	608a      	str	r2, [r1, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800b0b6:	071a      	lsls	r2, r3, #28
 800b0b8:	d504      	bpl.n	800b0c4 <HAL_RCC_ClockConfig+0x50>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800b0ba:	4939      	ldr	r1, [pc, #228]	; (800b1a0 <HAL_RCC_ClockConfig+0x12c>)
 800b0bc:	688a      	ldr	r2, [r1, #8]
 800b0be:	f442 4260 	orr.w	r2, r2, #57344	; 0xe000
 800b0c2:	608a      	str	r2, [r1, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800b0c4:	4936      	ldr	r1, [pc, #216]	; (800b1a0 <HAL_RCC_ClockConfig+0x12c>)
 800b0c6:	68a0      	ldr	r0, [r4, #8]
 800b0c8:	688a      	ldr	r2, [r1, #8]
 800b0ca:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 800b0ce:	4302      	orrs	r2, r0
 800b0d0:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800b0d2:	07df      	lsls	r7, r3, #31
 800b0d4:	d521      	bpl.n	800b11a <HAL_RCC_ClockConfig+0xa6>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800b0d6:	6862      	ldr	r2, [r4, #4]
 800b0d8:	2a01      	cmp	r2, #1
 800b0da:	d057      	beq.n	800b18c <HAL_RCC_ClockConfig+0x118>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800b0dc:	1e93      	subs	r3, r2, #2
 800b0de:	2b01      	cmp	r3, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800b0e0:	4b2f      	ldr	r3, [pc, #188]	; (800b1a0 <HAL_RCC_ClockConfig+0x12c>)
 800b0e2:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800b0e4:	d94d      	bls.n	800b182 <HAL_RCC_ClockConfig+0x10e>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800b0e6:	0799      	lsls	r1, r3, #30
 800b0e8:	d5d8      	bpl.n	800b09c <HAL_RCC_ClockConfig+0x28>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800b0ea:	4e2d      	ldr	r6, [pc, #180]	; (800b1a0 <HAL_RCC_ClockConfig+0x12c>)
 800b0ec:	68b3      	ldr	r3, [r6, #8]
 800b0ee:	f023 0303 	bic.w	r3, r3, #3
 800b0f2:	4313      	orrs	r3, r2
 800b0f4:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 800b0f6:	f7fd fc67 	bl	80089c8 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800b0fa:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 800b0fe:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800b100:	e004      	b.n	800b10c <HAL_RCC_ClockConfig+0x98>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800b102:	f7fd fc61 	bl	80089c8 <HAL_GetTick>
 800b106:	1bc0      	subs	r0, r0, r7
 800b108:	4540      	cmp	r0, r8
 800b10a:	d844      	bhi.n	800b196 <HAL_RCC_ClockConfig+0x122>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800b10c:	68b3      	ldr	r3, [r6, #8]
 800b10e:	6862      	ldr	r2, [r4, #4]
 800b110:	f003 030c 	and.w	r3, r3, #12
 800b114:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800b118:	d1f3      	bne.n	800b102 <HAL_RCC_ClockConfig+0x8e>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 800b11a:	4a20      	ldr	r2, [pc, #128]	; (800b19c <HAL_RCC_ClockConfig+0x128>)
 800b11c:	6813      	ldr	r3, [r2, #0]
 800b11e:	f003 030f 	and.w	r3, r3, #15
 800b122:	42ab      	cmp	r3, r5
 800b124:	d906      	bls.n	800b134 <HAL_RCC_ClockConfig+0xc0>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800b126:	b2eb      	uxtb	r3, r5
 800b128:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800b12a:	6813      	ldr	r3, [r2, #0]
 800b12c:	f003 030f 	and.w	r3, r3, #15
 800b130:	42ab      	cmp	r3, r5
 800b132:	d1b3      	bne.n	800b09c <HAL_RCC_ClockConfig+0x28>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800b134:	6823      	ldr	r3, [r4, #0]
 800b136:	075a      	lsls	r2, r3, #29
 800b138:	d506      	bpl.n	800b148 <HAL_RCC_ClockConfig+0xd4>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800b13a:	4919      	ldr	r1, [pc, #100]	; (800b1a0 <HAL_RCC_ClockConfig+0x12c>)
 800b13c:	68e0      	ldr	r0, [r4, #12]
 800b13e:	688a      	ldr	r2, [r1, #8]
 800b140:	f422 52e0 	bic.w	r2, r2, #7168	; 0x1c00
 800b144:	4302      	orrs	r2, r0
 800b146:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800b148:	071b      	lsls	r3, r3, #28
 800b14a:	d507      	bpl.n	800b15c <HAL_RCC_ClockConfig+0xe8>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 800b14c:	4a14      	ldr	r2, [pc, #80]	; (800b1a0 <HAL_RCC_ClockConfig+0x12c>)
 800b14e:	6921      	ldr	r1, [r4, #16]
 800b150:	6893      	ldr	r3, [r2, #8]
 800b152:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 800b156:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800b15a:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800b15c:	f7ff ff56 	bl	800b00c <HAL_RCC_GetSysClockFreq>
 800b160:	4a0f      	ldr	r2, [pc, #60]	; (800b1a0 <HAL_RCC_ClockConfig+0x12c>)
 800b162:	4c10      	ldr	r4, [pc, #64]	; (800b1a4 <HAL_RCC_ClockConfig+0x130>)
 800b164:	6892      	ldr	r2, [r2, #8]
 800b166:	4910      	ldr	r1, [pc, #64]	; (800b1a8 <HAL_RCC_ClockConfig+0x134>)
 800b168:	f3c2 1203 	ubfx	r2, r2, #4, #4
 800b16c:	4603      	mov	r3, r0
 800b16e:	5ca2      	ldrb	r2, [r4, r2]
  HAL_InitTick (uwTickPrio);
 800b170:	480e      	ldr	r0, [pc, #56]	; (800b1ac <HAL_RCC_ClockConfig+0x138>)
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800b172:	40d3      	lsrs	r3, r2
  HAL_InitTick (uwTickPrio);
 800b174:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800b176:	600b      	str	r3, [r1, #0]
  HAL_InitTick (uwTickPrio);
 800b178:	f7f6 ff82 	bl	8002080 <HAL_InitTick>
  return HAL_OK;
 800b17c:	2000      	movs	r0, #0
}
 800b17e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800b182:	0198      	lsls	r0, r3, #6
 800b184:	d4b1      	bmi.n	800b0ea <HAL_RCC_ClockConfig+0x76>
 800b186:	e789      	b.n	800b09c <HAL_RCC_ClockConfig+0x28>
    return HAL_ERROR;
 800b188:	2001      	movs	r0, #1
}
 800b18a:	4770      	bx	lr
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800b18c:	4b04      	ldr	r3, [pc, #16]	; (800b1a0 <HAL_RCC_ClockConfig+0x12c>)
 800b18e:	681b      	ldr	r3, [r3, #0]
 800b190:	039e      	lsls	r6, r3, #14
 800b192:	d4aa      	bmi.n	800b0ea <HAL_RCC_ClockConfig+0x76>
 800b194:	e782      	b.n	800b09c <HAL_RCC_ClockConfig+0x28>
        return HAL_TIMEOUT;
 800b196:	2003      	movs	r0, #3
 800b198:	e781      	b.n	800b09e <HAL_RCC_ClockConfig+0x2a>
 800b19a:	bf00      	nop
 800b19c:	40023c00 	.word	0x40023c00
 800b1a0:	40023800 	.word	0x40023800
 800b1a4:	0802c1e8 	.word	0x0802c1e8
 800b1a8:	20000078 	.word	0x20000078
 800b1ac:	20000080 	.word	0x20000080

0800b1b0 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800b1b0:	4b04      	ldr	r3, [pc, #16]	; (800b1c4 <HAL_RCC_GetPCLK1Freq+0x14>)
  return SystemCoreClock;
 800b1b2:	4905      	ldr	r1, [pc, #20]	; (800b1c8 <HAL_RCC_GetPCLK1Freq+0x18>)
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800b1b4:	689b      	ldr	r3, [r3, #8]
 800b1b6:	4a05      	ldr	r2, [pc, #20]	; (800b1cc <HAL_RCC_GetPCLK1Freq+0x1c>)
 800b1b8:	6808      	ldr	r0, [r1, #0]
 800b1ba:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800b1be:	5cd3      	ldrb	r3, [r2, r3]
}
 800b1c0:	40d8      	lsrs	r0, r3
 800b1c2:	4770      	bx	lr
 800b1c4:	40023800 	.word	0x40023800
 800b1c8:	20000078 	.word	0x20000078
 800b1cc:	0802c1f8 	.word	0x0802c1f8

0800b1d0 <HAL_RCC_GetClockConfig>:
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800b1d0:	4b0e      	ldr	r3, [pc, #56]	; (800b20c <HAL_RCC_GetClockConfig+0x3c>)
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 800b1d2:	220f      	movs	r2, #15
 800b1d4:	6002      	str	r2, [r0, #0]
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800b1d6:	689a      	ldr	r2, [r3, #8]
 800b1d8:	f002 0203 	and.w	r2, r2, #3
 800b1dc:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 800b1de:	689a      	ldr	r2, [r3, #8]
 800b1e0:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 800b1e4:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800b1e6:	689a      	ldr	r2, [r3, #8]
 800b1e8:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 800b1ec:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800b1ee:	689b      	ldr	r3, [r3, #8]
 800b1f0:	08db      	lsrs	r3, r3, #3
{
 800b1f2:	b410      	push	{r4}
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800b1f4:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800b1f8:	4c05      	ldr	r4, [pc, #20]	; (800b210 <HAL_RCC_GetClockConfig+0x40>)
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800b1fa:	6103      	str	r3, [r0, #16]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800b1fc:	6823      	ldr	r3, [r4, #0]
}
 800b1fe:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800b202:	f003 030f 	and.w	r3, r3, #15
 800b206:	600b      	str	r3, [r1, #0]
}
 800b208:	4770      	bx	lr
 800b20a:	bf00      	nop
 800b20c:	40023800 	.word	0x40023800
 800b210:	40023c00 	.word	0x40023c00

0800b214 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 800b214:	b5f0      	push	{r4, r5, r6, r7, lr}
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 800b216:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800b218:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 800b21c:	b083      	sub	sp, #12
 800b21e:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800b220:	d111      	bne.n	800b246 <HAL_RCCEx_PeriphCLKConfig+0x32>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800b222:	f013 0f0c 	tst.w	r3, #12
 800b226:	d16f      	bne.n	800b308 <HAL_RCCEx_PeriphCLKConfig+0xf4>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800b228:	0698      	lsls	r0, r3, #26
 800b22a:	f100 80c2 	bmi.w	800b3b2 <HAL_RCCEx_PeriphCLKConfig+0x19e>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800b22e:	f013 0310 	ands.w	r3, r3, #16
 800b232:	f000 80bb 	beq.w	800b3ac <HAL_RCCEx_PeriphCLKConfig+0x198>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 800b236:	4b89      	ldr	r3, [pc, #548]	; (800b45c <HAL_RCCEx_PeriphCLKConfig+0x248>)
 800b238:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 800b23c:	f8c3 21e0 	str.w	r2, [r3, #480]	; 0x1e0
  }
  return HAL_OK;
 800b240:	2000      	movs	r0, #0
}
 800b242:	b003      	add	sp, #12
 800b244:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLI2S_DISABLE();
 800b246:	4b86      	ldr	r3, [pc, #536]	; (800b460 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800b248:	4e86      	ldr	r6, [pc, #536]	; (800b464 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_DISABLE();
 800b24a:	2200      	movs	r2, #0
 800b24c:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800b24e:	f7fd fbbb 	bl	80089c8 <HAL_GetTick>
 800b252:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800b254:	e004      	b.n	800b260 <HAL_RCCEx_PeriphCLKConfig+0x4c>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800b256:	f7fd fbb7 	bl	80089c8 <HAL_GetTick>
 800b25a:	1b43      	subs	r3, r0, r5
 800b25c:	2b02      	cmp	r3, #2
 800b25e:	d850      	bhi.n	800b302 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800b260:	6833      	ldr	r3, [r6, #0]
 800b262:	0118      	lsls	r0, r3, #4
 800b264:	d4f7      	bmi.n	800b256 <HAL_RCCEx_PeriphCLKConfig+0x42>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800b266:	6823      	ldr	r3, [r4, #0]
 800b268:	07d9      	lsls	r1, r3, #31
 800b26a:	d506      	bpl.n	800b27a <HAL_RCCEx_PeriphCLKConfig+0x66>
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 800b26c:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800b270:	0712      	lsls	r2, r2, #28
 800b272:	ea42 1281 	orr.w	r2, r2, r1, lsl #6
 800b276:	f8c6 2084 	str.w	r2, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 800b27a:	079a      	lsls	r2, r3, #30
 800b27c:	d515      	bpl.n	800b2aa <HAL_RCCEx_PeriphCLKConfig+0x96>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800b27e:	4979      	ldr	r1, [pc, #484]	; (800b464 <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800b280:	68e2      	ldr	r2, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800b282:	f8d1 0084 	ldr.w	r0, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800b286:	6865      	ldr	r5, [r4, #4]
 800b288:	0612      	lsls	r2, r2, #24
 800b28a:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 800b28e:	ea42 1285 	orr.w	r2, r2, r5, lsl #6
 800b292:	4302      	orrs	r2, r0
 800b294:	f8c1 2084 	str.w	r2, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 800b298:	f8d1 008c 	ldr.w	r0, [r1, #140]	; 0x8c
 800b29c:	69e2      	ldr	r2, [r4, #28]
 800b29e:	f020 001f 	bic.w	r0, r0, #31
 800b2a2:	3a01      	subs	r2, #1
 800b2a4:	4302      	orrs	r2, r0
 800b2a6:	f8c1 208c 	str.w	r2, [r1, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 800b2aa:	065b      	lsls	r3, r3, #25
 800b2ac:	d509      	bpl.n	800b2c2 <HAL_RCCEx_PeriphCLKConfig+0xae>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 800b2ae:	1d20      	adds	r0, r4, #4
 800b2b0:	c80b      	ldmia	r0, {r0, r1, r3}
 800b2b2:	061b      	lsls	r3, r3, #24
 800b2b4:	4a6b      	ldr	r2, [pc, #428]	; (800b464 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800b2b6:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800b2ba:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
 800b2be:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 800b2c2:	4b67      	ldr	r3, [pc, #412]	; (800b460 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800b2c4:	4e67      	ldr	r6, [pc, #412]	; (800b464 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_ENABLE();
 800b2c6:	2201      	movs	r2, #1
 800b2c8:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800b2ca:	f7fd fb7d 	bl	80089c8 <HAL_GetTick>
 800b2ce:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800b2d0:	e004      	b.n	800b2dc <HAL_RCCEx_PeriphCLKConfig+0xc8>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800b2d2:	f7fd fb79 	bl	80089c8 <HAL_GetTick>
 800b2d6:	1b40      	subs	r0, r0, r5
 800b2d8:	2802      	cmp	r0, #2
 800b2da:	d812      	bhi.n	800b302 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800b2dc:	6833      	ldr	r3, [r6, #0]
 800b2de:	011f      	lsls	r7, r3, #4
 800b2e0:	d5f7      	bpl.n	800b2d2 <HAL_RCCEx_PeriphCLKConfig+0xbe>
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800b2e2:	6823      	ldr	r3, [r4, #0]
 800b2e4:	e79d      	b.n	800b222 <HAL_RCCEx_PeriphCLKConfig+0xe>
        tickstart = HAL_GetTick();
 800b2e6:	f7fd fb6f 	bl	80089c8 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b2ea:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 800b2ee:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800b2f0:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800b2f2:	079b      	lsls	r3, r3, #30
 800b2f4:	f100 80a5 	bmi.w	800b442 <HAL_RCCEx_PeriphCLKConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b2f8:	f7fd fb66 	bl	80089c8 <HAL_GetTick>
 800b2fc:	1b80      	subs	r0, r0, r6
 800b2fe:	42b8      	cmp	r0, r7
 800b300:	d9f6      	bls.n	800b2f0 <HAL_RCCEx_PeriphCLKConfig+0xdc>
        return HAL_TIMEOUT;
 800b302:	2003      	movs	r0, #3
}
 800b304:	b003      	add	sp, #12
 800b306:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLSAI_DISABLE();
 800b308:	4b55      	ldr	r3, [pc, #340]	; (800b460 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800b30a:	4e56      	ldr	r6, [pc, #344]	; (800b464 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_DISABLE();
 800b30c:	2200      	movs	r2, #0
 800b30e:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800b310:	f7fd fb5a 	bl	80089c8 <HAL_GetTick>
 800b314:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800b316:	e004      	b.n	800b322 <HAL_RCCEx_PeriphCLKConfig+0x10e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800b318:	f7fd fb56 	bl	80089c8 <HAL_GetTick>
 800b31c:	1b43      	subs	r3, r0, r5
 800b31e:	2b02      	cmp	r3, #2
 800b320:	d8ef      	bhi.n	800b302 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800b322:	6833      	ldr	r3, [r6, #0]
 800b324:	0098      	lsls	r0, r3, #2
 800b326:	d4f7      	bmi.n	800b318 <HAL_RCCEx_PeriphCLKConfig+0x104>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 800b328:	6822      	ldr	r2, [r4, #0]
 800b32a:	0751      	lsls	r1, r2, #29
 800b32c:	d515      	bpl.n	800b35a <HAL_RCCEx_PeriphCLKConfig+0x146>
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800b32e:	6963      	ldr	r3, [r4, #20]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800b330:	f8d6 1088 	ldr.w	r1, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800b334:	6920      	ldr	r0, [r4, #16]
 800b336:	061b      	lsls	r3, r3, #24
 800b338:	f001 41e0 	and.w	r1, r1, #1879048192	; 0x70000000
 800b33c:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800b340:	430b      	orrs	r3, r1
 800b342:	f8c6 3088 	str.w	r3, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800b346:	f8d6 308c 	ldr.w	r3, [r6, #140]	; 0x8c
 800b34a:	6a21      	ldr	r1, [r4, #32]
 800b34c:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 800b350:	3901      	subs	r1, #1
 800b352:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800b356:	f8c6 308c 	str.w	r3, [r6, #140]	; 0x8c
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 800b35a:	0713      	lsls	r3, r2, #28
 800b35c:	d514      	bpl.n	800b388 <HAL_RCCEx_PeriphCLKConfig+0x174>
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800b35e:	4a41      	ldr	r2, [pc, #260]	; (800b464 <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800b360:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800b362:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800b366:	6920      	ldr	r0, [r4, #16]
 800b368:	071b      	lsls	r3, r3, #28
 800b36a:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 800b36e:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800b372:	430b      	orrs	r3, r1
 800b374:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 800b378:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 800b37c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800b37e:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800b382:	430b      	orrs	r3, r1
 800b384:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    __HAL_RCC_PLLSAI_ENABLE();
 800b388:	4b35      	ldr	r3, [pc, #212]	; (800b460 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800b38a:	4e36      	ldr	r6, [pc, #216]	; (800b464 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_ENABLE();
 800b38c:	2201      	movs	r2, #1
 800b38e:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800b390:	f7fd fb1a 	bl	80089c8 <HAL_GetTick>
 800b394:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800b396:	e004      	b.n	800b3a2 <HAL_RCCEx_PeriphCLKConfig+0x18e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800b398:	f7fd fb16 	bl	80089c8 <HAL_GetTick>
 800b39c:	1b40      	subs	r0, r0, r5
 800b39e:	2802      	cmp	r0, #2
 800b3a0:	d8af      	bhi.n	800b302 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800b3a2:	6833      	ldr	r3, [r6, #0]
 800b3a4:	009f      	lsls	r7, r3, #2
 800b3a6:	d5f7      	bpl.n	800b398 <HAL_RCCEx_PeriphCLKConfig+0x184>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800b3a8:	6823      	ldr	r3, [r4, #0]
 800b3aa:	e73d      	b.n	800b228 <HAL_RCCEx_PeriphCLKConfig+0x14>
  return HAL_OK;
 800b3ac:	4618      	mov	r0, r3
}
 800b3ae:	b003      	add	sp, #12
 800b3b0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PWR_CLK_ENABLE();
 800b3b2:	4b2c      	ldr	r3, [pc, #176]	; (800b464 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    PWR->CR |= PWR_CR_DBP;
 800b3b4:	4d2c      	ldr	r5, [pc, #176]	; (800b468 <HAL_RCCEx_PeriphCLKConfig+0x254>)
    __HAL_RCC_PWR_CLK_ENABLE();
 800b3b6:	2200      	movs	r2, #0
 800b3b8:	9201      	str	r2, [sp, #4]
 800b3ba:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800b3bc:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800b3c0:	641a      	str	r2, [r3, #64]	; 0x40
 800b3c2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800b3c4:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800b3c8:	9301      	str	r3, [sp, #4]
 800b3ca:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 800b3cc:	682b      	ldr	r3, [r5, #0]
 800b3ce:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800b3d2:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800b3d4:	f7fd faf8 	bl	80089c8 <HAL_GetTick>
 800b3d8:	4606      	mov	r6, r0
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800b3da:	e004      	b.n	800b3e6 <HAL_RCCEx_PeriphCLKConfig+0x1d2>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 800b3dc:	f7fd faf4 	bl	80089c8 <HAL_GetTick>
 800b3e0:	1b83      	subs	r3, r0, r6
 800b3e2:	2b02      	cmp	r3, #2
 800b3e4:	d88d      	bhi.n	800b302 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800b3e6:	682b      	ldr	r3, [r5, #0]
 800b3e8:	05d9      	lsls	r1, r3, #23
 800b3ea:	d5f7      	bpl.n	800b3dc <HAL_RCCEx_PeriphCLKConfig+0x1c8>
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800b3ec:	4d1d      	ldr	r5, [pc, #116]	; (800b464 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800b3ee:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800b3f0:	6f2a      	ldr	r2, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800b3f2:	f412 7240 	ands.w	r2, r2, #768	; 0x300
 800b3f6:	d111      	bne.n	800b41c <HAL_RCCEx_PeriphCLKConfig+0x208>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800b3f8:	f403 7240 	and.w	r2, r3, #768	; 0x300
 800b3fc:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 800b400:	d021      	beq.n	800b446 <HAL_RCCEx_PeriphCLKConfig+0x232>
 800b402:	4918      	ldr	r1, [pc, #96]	; (800b464 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800b404:	688a      	ldr	r2, [r1, #8]
 800b406:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800b40a:	608a      	str	r2, [r1, #8]
 800b40c:	4a15      	ldr	r2, [pc, #84]	; (800b464 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800b40e:	6f11      	ldr	r1, [r2, #112]	; 0x70
 800b410:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800b414:	430b      	orrs	r3, r1
 800b416:	6713      	str	r3, [r2, #112]	; 0x70
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800b418:	6823      	ldr	r3, [r4, #0]
 800b41a:	e708      	b.n	800b22e <HAL_RCCEx_PeriphCLKConfig+0x1a>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800b41c:	f403 7140 	and.w	r1, r3, #768	; 0x300
 800b420:	4291      	cmp	r1, r2
 800b422:	d0eb      	beq.n	800b3fc <HAL_RCCEx_PeriphCLKConfig+0x1e8>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800b424:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 800b426:	4a0e      	ldr	r2, [pc, #56]	; (800b460 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 800b428:	2101      	movs	r1, #1
 800b42a:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800b42e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 800b432:	2100      	movs	r1, #0
 800b434:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 800b438:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800b43a:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800b43c:	07da      	lsls	r2, r3, #31
 800b43e:	f53f af52 	bmi.w	800b2e6 <HAL_RCCEx_PeriphCLKConfig+0xd2>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800b442:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800b444:	e7d8      	b.n	800b3f8 <HAL_RCCEx_PeriphCLKConfig+0x1e4>
 800b446:	4807      	ldr	r0, [pc, #28]	; (800b464 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800b448:	6882      	ldr	r2, [r0, #8]
 800b44a:	f023 4170 	bic.w	r1, r3, #4026531840	; 0xf0000000
 800b44e:	f421 7140 	bic.w	r1, r1, #768	; 0x300
 800b452:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800b456:	430a      	orrs	r2, r1
 800b458:	6082      	str	r2, [r0, #8]
 800b45a:	e7d7      	b.n	800b40c <HAL_RCCEx_PeriphCLKConfig+0x1f8>
 800b45c:	42471000 	.word	0x42471000
 800b460:	42470000 	.word	0x42470000
 800b464:	40023800 	.word	0x40023800
 800b468:	40007000 	.word	0x40007000

0800b46c <HAL_SDRAM_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 800b46c:	b1f0      	cbz	r0, 800b4ac <HAL_SDRAM_Init+0x40>
{
 800b46e:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 800b470:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800b474:	460d      	mov	r5, r1
 800b476:	4604      	mov	r4, r0
 800b478:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800b47c:	b18b      	cbz	r3, 800b4a2 <HAL_SDRAM_Init+0x36>

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800b47e:	4621      	mov	r1, r4
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800b480:	2302      	movs	r3, #2
 800b482:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800b486:	f851 0b04 	ldr.w	r0, [r1], #4
 800b48a:	f000 ffcd 	bl	800c428 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 800b48e:	e9d4 0200 	ldrd	r0, r2, [r4]
 800b492:	4629      	mov	r1, r5
 800b494:	f001 f806 	bl	800c4a4 <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800b498:	2301      	movs	r3, #1
 800b49a:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  return HAL_OK;
 800b49e:	2000      	movs	r0, #0
}
 800b4a0:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->Lock = HAL_UNLOCKED;
 800b4a2:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d
    HAL_SDRAM_MspInit(hsdram);
 800b4a6:	f7f6 fd83 	bl	8001fb0 <HAL_SDRAM_MspInit>
 800b4aa:	e7e8      	b.n	800b47e <HAL_SDRAM_Init+0x12>
    return HAL_ERROR;
 800b4ac:	2001      	movs	r0, #1
}
 800b4ae:	4770      	bx	lr

0800b4b0 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 800b4b0:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800b4b2:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 800b4b6:	2b02      	cmp	r3, #2
{
 800b4b8:	4605      	mov	r5, r0
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800b4ba:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 800b4bc:	d004      	beq.n	800b4c8 <HAL_SDRAM_SendCommand+0x18>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 800b4be:	f000 04fb 	and.w	r4, r0, #251	; 0xfb
 800b4c2:	2c01      	cmp	r4, #1
 800b4c4:	d001      	beq.n	800b4ca <HAL_SDRAM_SendCommand+0x1a>
      hsdram->State = HAL_SDRAM_STATE_READY;
    }
  }
  else
  {
    return HAL_ERROR;
 800b4c6:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800b4c8:	bd70      	pop	{r4, r5, r6, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800b4ca:	460e      	mov	r6, r1
 800b4cc:	2302      	movs	r3, #2
 800b4ce:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800b4d2:	6828      	ldr	r0, [r5, #0]
 800b4d4:	f001 f832 	bl	800c53c <FMC_SDRAM_SendCommand>
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 800b4d8:	6833      	ldr	r3, [r6, #0]
 800b4da:	2b02      	cmp	r3, #2
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 800b4dc:	bf06      	itte	eq
 800b4de:	2305      	moveq	r3, #5
 800b4e0:	f885 302c 	strbeq.w	r3, [r5, #44]	; 0x2c
      hsdram->State = HAL_SDRAM_STATE_READY;
 800b4e4:	f885 402c 	strbne.w	r4, [r5, #44]	; 0x2c
  return HAL_OK;
 800b4e8:	2000      	movs	r0, #0
}
 800b4ea:	bd70      	pop	{r4, r5, r6, pc}

0800b4ec <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 800b4ec:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800b4ee:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800b4f2:	2b02      	cmp	r3, #2
{
 800b4f4:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800b4f6:	b2d8      	uxtb	r0, r3
 800b4f8:	d005      	beq.n	800b506 <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 800b4fa:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800b4fe:	2b01      	cmp	r3, #1
 800b500:	b2dd      	uxtb	r5, r3
 800b502:	d001      	beq.n	800b508 <HAL_SDRAM_ProgramRefreshRate+0x1c>
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  else
  {
    return HAL_ERROR;
 800b504:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800b506:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800b508:	2302      	movs	r3, #2
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800b50a:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800b50c:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800b510:	f001 f83e 	bl	800c590 <FMC_SDRAM_ProgramRefreshRate>
    hsdram->State = HAL_SDRAM_STATE_READY;
 800b514:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
  return HAL_OK;
 800b518:	2000      	movs	r0, #0
}
 800b51a:	bd38      	pop	{r3, r4, r5, pc}

0800b51c <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 800b51c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b520:	b082      	sub	sp, #8
 800b522:	461d      	mov	r5, r3
 800b524:	4616      	mov	r6, r2
 800b526:	460c      	mov	r4, r1
 800b528:	4607      	mov	r7, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 800b52a:	f7fd fa4d 	bl	80089c8 <HAL_GetTick>
 800b52e:	4435      	add	r5, r6
 800b530:	1a2d      	subs	r5, r5, r0
  tmp_tickstart = HAL_GetTick();
 800b532:	f7fd fa49 	bl	80089c8 <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800b536:	4b27      	ldr	r3, [pc, #156]	; (800b5d4 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xb8>)
 800b538:	681b      	ldr	r3, [r3, #0]
 800b53a:	f3c3 33cb 	ubfx	r3, r3, #15, #12
 800b53e:	fb05 f303 	mul.w	r3, r5, r3
  tmp_tickstart = HAL_GetTick();
 800b542:	4680      	mov	r8, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800b544:	9301      	str	r3, [sp, #4]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800b546:	1c73      	adds	r3, r6, #1
 800b548:	6839      	ldr	r1, [r7, #0]
 800b54a:	d107      	bne.n	800b55c <SPI_WaitFlagStateUntilTimeout.constprop.0+0x40>
 800b54c:	688b      	ldr	r3, [r1, #8]
 800b54e:	ea34 0303 	bics.w	r3, r4, r3
 800b552:	d0fb      	beq.n	800b54c <SPI_WaitFlagStateUntilTimeout.constprop.0+0x30>
      }
      count--;
    }
  }

  return HAL_OK;
 800b554:	2000      	movs	r0, #0
}
 800b556:	b002      	add	sp, #8
 800b558:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800b55c:	688b      	ldr	r3, [r1, #8]
 800b55e:	ea34 0303 	bics.w	r3, r4, r3
 800b562:	d1f7      	bne.n	800b554 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x38>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 800b564:	f7fd fa30 	bl	80089c8 <HAL_GetTick>
 800b568:	eba0 0008 	sub.w	r0, r0, r8
 800b56c:	42a8      	cmp	r0, r5
 800b56e:	d208      	bcs.n	800b582 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x66>
      if (count == 0U)
 800b570:	9b01      	ldr	r3, [sp, #4]
        tmp_timeout = 0U;
 800b572:	2b00      	cmp	r3, #0
      count--;
 800b574:	9b01      	ldr	r3, [sp, #4]
 800b576:	f103 33ff 	add.w	r3, r3, #4294967295
        tmp_timeout = 0U;
 800b57a:	bf08      	it	eq
 800b57c:	2500      	moveq	r5, #0
      count--;
 800b57e:	9301      	str	r3, [sp, #4]
 800b580:	e7e1      	b.n	800b546 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x2a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800b582:	e9d7 3100 	ldrd	r3, r1, [r7]
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800b586:	685a      	ldr	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800b588:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800b58c:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 800b590:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800b592:	d013      	beq.n	800b5bc <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa0>
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 800b594:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800b596:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 800b59a:	d107      	bne.n	800b5ac <SPI_WaitFlagStateUntilTimeout.constprop.0+0x90>
          SPI_RESET_CRC(hspi);
 800b59c:	681a      	ldr	r2, [r3, #0]
 800b59e:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800b5a2:	601a      	str	r2, [r3, #0]
 800b5a4:	681a      	ldr	r2, [r3, #0]
 800b5a6:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800b5aa:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 800b5ac:	2201      	movs	r2, #1
        __HAL_UNLOCK(hspi);
 800b5ae:	2300      	movs	r3, #0
        hspi->State = HAL_SPI_STATE_READY;
 800b5b0:	f887 2051 	strb.w	r2, [r7, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 800b5b4:	f887 3050 	strb.w	r3, [r7, #80]	; 0x50
 800b5b8:	2003      	movs	r0, #3
 800b5ba:	e7cc      	b.n	800b556 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x3a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800b5bc:	68ba      	ldr	r2, [r7, #8]
 800b5be:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800b5c2:	d002      	beq.n	800b5ca <SPI_WaitFlagStateUntilTimeout.constprop.0+0xae>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800b5c4:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800b5c8:	d1e4      	bne.n	800b594 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
          __HAL_SPI_DISABLE(hspi);
 800b5ca:	681a      	ldr	r2, [r3, #0]
 800b5cc:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800b5d0:	601a      	str	r2, [r3, #0]
 800b5d2:	e7df      	b.n	800b594 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
 800b5d4:	20000078 	.word	0x20000078

0800b5d8 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 800b5d8:	b538      	push	{r3, r4, r5, lr}
 800b5da:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800b5dc:	6842      	ldr	r2, [r0, #4]
 800b5de:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 800b5e2:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800b5e4:	d006      	beq.n	800b5f4 <SPI_EndRxTransaction+0x1c>
    }
  }
  else
  {
    /* Wait the RXNE reset */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800b5e6:	460a      	mov	r2, r1
 800b5e8:	2101      	movs	r1, #1
 800b5ea:	f7ff ff97 	bl	800b51c <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800b5ee:	b978      	cbnz	r0, 800b610 <SPI_EndRxTransaction+0x38>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 800b5f0:	2000      	movs	r0, #0
}
 800b5f2:	bd38      	pop	{r3, r4, r5, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800b5f4:	6882      	ldr	r2, [r0, #8]
 800b5f6:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800b5fa:	d01c      	beq.n	800b636 <SPI_EndRxTransaction+0x5e>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800b5fc:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800b600:	d00c      	beq.n	800b61c <SPI_EndRxTransaction+0x44>
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800b602:	460a      	mov	r2, r1
 800b604:	4620      	mov	r0, r4
 800b606:	2180      	movs	r1, #128	; 0x80
 800b608:	f7ff ff88 	bl	800b51c <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800b60c:	2800      	cmp	r0, #0
 800b60e:	d0ef      	beq.n	800b5f0 <SPI_EndRxTransaction+0x18>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800b610:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800b612:	f043 0320 	orr.w	r3, r3, #32
      return HAL_TIMEOUT;
 800b616:	2003      	movs	r0, #3
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800b618:	6563      	str	r3, [r4, #84]	; 0x54
}
 800b61a:	bd38      	pop	{r3, r4, r5, pc}
    __HAL_SPI_DISABLE(hspi);
 800b61c:	6805      	ldr	r5, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800b61e:	460a      	mov	r2, r1
    __HAL_SPI_DISABLE(hspi);
 800b620:	6829      	ldr	r1, [r5, #0]
 800b622:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800b626:	6029      	str	r1, [r5, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800b628:	2101      	movs	r1, #1
 800b62a:	f7ff ff77 	bl	800b51c <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800b62e:	2800      	cmp	r0, #0
 800b630:	d1ee      	bne.n	800b610 <SPI_EndRxTransaction+0x38>
  return HAL_OK;
 800b632:	2000      	movs	r0, #0
 800b634:	e7dd      	b.n	800b5f2 <SPI_EndRxTransaction+0x1a>
    __HAL_SPI_DISABLE(hspi);
 800b636:	6800      	ldr	r0, [r0, #0]
 800b638:	6802      	ldr	r2, [r0, #0]
 800b63a:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800b63e:	6002      	str	r2, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800b640:	460a      	mov	r2, r1
 800b642:	4620      	mov	r0, r4
 800b644:	2180      	movs	r1, #128	; 0x80
 800b646:	f7ff ff69 	bl	800b51c <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800b64a:	2800      	cmp	r0, #0
 800b64c:	d0d0      	beq.n	800b5f0 <SPI_EndRxTransaction+0x18>
 800b64e:	e7df      	b.n	800b610 <SPI_EndRxTransaction+0x38>

0800b650 <HAL_SPI_Init>:
  if (hspi == NULL)
 800b650:	2800      	cmp	r0, #0
 800b652:	d05c      	beq.n	800b70e <HAL_SPI_Init+0xbe>
{
 800b654:	b570      	push	{r4, r5, r6, lr}
 800b656:	4604      	mov	r4, r0
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 800b658:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800b65a:	2800      	cmp	r0, #0
 800b65c:	d047      	beq.n	800b6ee <HAL_SPI_Init+0x9e>
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 800b65e:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 800b660:	e9c4 3304 	strd	r3, r3, [r4, #16]
  if (hspi->State == HAL_SPI_STATE_RESET)
 800b664:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800b668:	2200      	movs	r2, #0
 800b66a:	62a2      	str	r2, [r4, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 800b66c:	f003 01ff 	and.w	r1, r3, #255	; 0xff
 800b670:	2b00      	cmp	r3, #0
 800b672:	d042      	beq.n	800b6fa <HAL_SPI_Init+0xaa>
 800b674:	4694      	mov	ip, r2
  __HAL_SPI_DISABLE(hspi);
 800b676:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800b678:	68a5      	ldr	r5, [r4, #8]
 800b67a:	69a2      	ldr	r2, [r4, #24]
 800b67c:	6a26      	ldr	r6, [r4, #32]
  hspi->State = HAL_SPI_STATE_BUSY;
 800b67e:	2302      	movs	r3, #2
 800b680:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 800b684:	680b      	ldr	r3, [r1, #0]
 800b686:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800b68a:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800b68c:	6863      	ldr	r3, [r4, #4]
 800b68e:	f405 4504 	and.w	r5, r5, #33792	; 0x8400
 800b692:	f403 7382 	and.w	r3, r3, #260	; 0x104
 800b696:	432b      	orrs	r3, r5
 800b698:	68e5      	ldr	r5, [r4, #12]
 800b69a:	f405 6500 	and.w	r5, r5, #2048	; 0x800
 800b69e:	432b      	orrs	r3, r5
 800b6a0:	6925      	ldr	r5, [r4, #16]
 800b6a2:	f005 0502 	and.w	r5, r5, #2
 800b6a6:	432b      	orrs	r3, r5
 800b6a8:	6965      	ldr	r5, [r4, #20]
 800b6aa:	f005 0501 	and.w	r5, r5, #1
 800b6ae:	432b      	orrs	r3, r5
 800b6b0:	69e5      	ldr	r5, [r4, #28]
 800b6b2:	f006 0e80 	and.w	lr, r6, #128	; 0x80
 800b6b6:	f402 7600 	and.w	r6, r2, #512	; 0x200
 800b6ba:	f005 0538 	and.w	r5, r5, #56	; 0x38
 800b6be:	4333      	orrs	r3, r6
 800b6c0:	432b      	orrs	r3, r5
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800b6c2:	0c12      	lsrs	r2, r2, #16
 800b6c4:	f000 0010 	and.w	r0, r0, #16
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800b6c8:	ea43 030e 	orr.w	r3, r3, lr
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800b6cc:	f002 0204 	and.w	r2, r2, #4
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800b6d0:	ea43 030c 	orr.w	r3, r3, ip
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800b6d4:	4302      	orrs	r2, r0
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800b6d6:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800b6d8:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800b6da:	69cb      	ldr	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800b6dc:	2000      	movs	r0, #0
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800b6de:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  hspi->State     = HAL_SPI_STATE_READY;
 800b6e2:	2201      	movs	r2, #1
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800b6e4:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800b6e6:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 800b6e8:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
}
 800b6ec:	bd70      	pop	{r4, r5, r6, pc}
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 800b6ee:	6863      	ldr	r3, [r4, #4]
 800b6f0:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800b6f4:	d0b6      	beq.n	800b664 <HAL_SPI_Init+0x14>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800b6f6:	61e0      	str	r0, [r4, #28]
 800b6f8:	e7b4      	b.n	800b664 <HAL_SPI_Init+0x14>
    HAL_SPI_MspInit(hspi);
 800b6fa:	4620      	mov	r0, r4
    hspi->Lock = HAL_UNLOCKED;
 800b6fc:	f884 1050 	strb.w	r1, [r4, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 800b700:	f7f6 fbee 	bl	8001ee0 <HAL_SPI_MspInit>
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800b704:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800b708:	f403 5c00 	and.w	ip, r3, #8192	; 0x2000
 800b70c:	e7b3      	b.n	800b676 <HAL_SPI_Init+0x26>
    return HAL_ERROR;
 800b70e:	2001      	movs	r0, #1
}
 800b710:	4770      	bx	lr
 800b712:	bf00      	nop

0800b714 <HAL_SPI_Transmit>:
{
 800b714:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b718:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800b71a:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800b71e:	2801      	cmp	r0, #1
{
 800b720:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800b722:	f000 8085 	beq.w	800b830 <HAL_SPI_Transmit+0x11c>
 800b726:	461d      	mov	r5, r3
 800b728:	2301      	movs	r3, #1
 800b72a:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800b72e:	4688      	mov	r8, r1
 800b730:	4617      	mov	r7, r2
 800b732:	f7fd f949 	bl	80089c8 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800b736:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 800b73a:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800b73c:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800b73e:	b2d8      	uxtb	r0, r3
 800b740:	d009      	beq.n	800b756 <HAL_SPI_Transmit+0x42>
    errorcode = HAL_BUSY;
 800b742:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800b744:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800b746:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800b748:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800b74c:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800b750:	b002      	add	sp, #8
 800b752:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800b756:	f1b8 0f00 	cmp.w	r8, #0
 800b75a:	d0f3      	beq.n	800b744 <HAL_SPI_Transmit+0x30>
 800b75c:	2f00      	cmp	r7, #0
 800b75e:	d0f1      	beq.n	800b744 <HAL_SPI_Transmit+0x30>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800b760:	68a2      	ldr	r2, [r4, #8]
    __HAL_SPI_DISABLE(hspi);
 800b762:	6820      	ldr	r0, [r4, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 800b764:	f8c4 8030 	str.w	r8, [r4, #48]	; 0x30
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800b768:	2300      	movs	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800b76a:	2103      	movs	r1, #3
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800b76c:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800b770:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->RxISR       = NULL;
 800b774:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800b778:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxXferSize  = Size;
 800b77a:	86a7      	strh	r7, [r4, #52]	; 0x34
  hspi->TxXferCount = Size;
 800b77c:	86e7      	strh	r7, [r4, #54]	; 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 800b77e:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferSize  = 0U;
 800b780:	87a3      	strh	r3, [r4, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 800b782:	87e3      	strh	r3, [r4, #62]	; 0x3e
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800b784:	f000 8085 	beq.w	800b892 <HAL_SPI_Transmit+0x17e>
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800b788:	6803      	ldr	r3, [r0, #0]
 800b78a:	065b      	lsls	r3, r3, #25
    __HAL_SPI_DISABLE(hspi);
 800b78c:	4602      	mov	r2, r0
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800b78e:	d403      	bmi.n	800b798 <HAL_SPI_Transmit+0x84>
    __HAL_SPI_ENABLE(hspi);
 800b790:	6803      	ldr	r3, [r0, #0]
 800b792:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800b796:	6003      	str	r3, [r0, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800b798:	68e3      	ldr	r3, [r4, #12]
 800b79a:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800b79e:	d04b      	beq.n	800b838 <HAL_SPI_Transmit+0x124>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800b7a0:	6863      	ldr	r3, [r4, #4]
 800b7a2:	2b00      	cmp	r3, #0
 800b7a4:	f000 8097 	beq.w	800b8d6 <HAL_SPI_Transmit+0x1c2>
 800b7a8:	2f01      	cmp	r7, #1
 800b7aa:	f000 8094 	beq.w	800b8d6 <HAL_SPI_Transmit+0x1c2>
    while (hspi->TxXferCount > 0U)
 800b7ae:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800b7b0:	b29b      	uxth	r3, r3
 800b7b2:	b1ab      	cbz	r3, 800b7e0 <HAL_SPI_Transmit+0xcc>
 800b7b4:	1c68      	adds	r0, r5, #1
 800b7b6:	f040 8083 	bne.w	800b8c0 <HAL_SPI_Transmit+0x1ac>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800b7ba:	6823      	ldr	r3, [r4, #0]
 800b7bc:	689a      	ldr	r2, [r3, #8]
 800b7be:	0791      	lsls	r1, r2, #30
 800b7c0:	f140 8094 	bpl.w	800b8ec <HAL_SPI_Transmit+0x1d8>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800b7c4:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800b7c6:	7812      	ldrb	r2, [r2, #0]
 800b7c8:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800b7ca:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800b7cc:	6b23      	ldr	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800b7ce:	3901      	subs	r1, #1
 800b7d0:	b289      	uxth	r1, r1
 800b7d2:	86e1      	strh	r1, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800b7d4:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800b7d6:	3301      	adds	r3, #1
    while (hspi->TxXferCount > 0U)
 800b7d8:	b289      	uxth	r1, r1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800b7da:	6323      	str	r3, [r4, #48]	; 0x30
    while (hspi->TxXferCount > 0U)
 800b7dc:	2900      	cmp	r1, #0
 800b7de:	d1ec      	bne.n	800b7ba <HAL_SPI_Transmit+0xa6>
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800b7e0:	6861      	ldr	r1, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800b7e2:	4b5b      	ldr	r3, [pc, #364]	; (800b950 <HAL_SPI_Transmit+0x23c>)
 800b7e4:	4a5b      	ldr	r2, [pc, #364]	; (800b954 <HAL_SPI_Transmit+0x240>)
 800b7e6:	681b      	ldr	r3, [r3, #0]
 800b7e8:	fba2 2303 	umull	r2, r3, r2, r3
 800b7ec:	0d5b      	lsrs	r3, r3, #21
 800b7ee:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800b7f2:	fb02 f303 	mul.w	r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800b7f6:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800b7fa:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800b7fc:	d107      	bne.n	800b80e <HAL_SPI_Transmit+0xfa>
 800b7fe:	e098      	b.n	800b932 <HAL_SPI_Transmit+0x21e>
    {
      if (count == 0U)
      {
        break;
      }
      count--;
 800b800:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800b802:	6822      	ldr	r2, [r4, #0]
      count--;
 800b804:	3b01      	subs	r3, #1
 800b806:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800b808:	6893      	ldr	r3, [r2, #8]
 800b80a:	061b      	lsls	r3, r3, #24
 800b80c:	d502      	bpl.n	800b814 <HAL_SPI_Transmit+0x100>
      if (count == 0U)
 800b80e:	9b01      	ldr	r3, [sp, #4]
 800b810:	2b00      	cmp	r3, #0
 800b812:	d1f5      	bne.n	800b800 <HAL_SPI_Transmit+0xec>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800b814:	68a3      	ldr	r3, [r4, #8]
 800b816:	b933      	cbnz	r3, 800b826 <HAL_SPI_Transmit+0x112>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800b818:	6822      	ldr	r2, [r4, #0]
 800b81a:	9300      	str	r3, [sp, #0]
 800b81c:	68d3      	ldr	r3, [r2, #12]
 800b81e:	9300      	str	r3, [sp, #0]
 800b820:	6893      	ldr	r3, [r2, #8]
 800b822:	9300      	str	r3, [sp, #0]
 800b824:	9b00      	ldr	r3, [sp, #0]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800b826:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800b828:	3800      	subs	r0, #0
 800b82a:	bf18      	it	ne
 800b82c:	2001      	movne	r0, #1
error:
 800b82e:	e789      	b.n	800b744 <HAL_SPI_Transmit+0x30>
  __HAL_LOCK(hspi);
 800b830:	2002      	movs	r0, #2
}
 800b832:	b002      	add	sp, #8
 800b834:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800b838:	6861      	ldr	r1, [r4, #4]
 800b83a:	2900      	cmp	r1, #0
 800b83c:	d176      	bne.n	800b92c <HAL_SPI_Transmit+0x218>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800b83e:	4643      	mov	r3, r8
 800b840:	f833 7b02 	ldrh.w	r7, [r3], #2
 800b844:	60c7      	str	r7, [r0, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800b846:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800b848:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800b84a:	3b01      	subs	r3, #1
 800b84c:	b29b      	uxth	r3, r3
 800b84e:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800b850:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800b852:	b29b      	uxth	r3, r3
 800b854:	2b00      	cmp	r3, #0
 800b856:	d0c4      	beq.n	800b7e2 <HAL_SPI_Transmit+0xce>
 800b858:	1c6b      	adds	r3, r5, #1
 800b85a:	d15e      	bne.n	800b91a <HAL_SPI_Transmit+0x206>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800b85c:	6883      	ldr	r3, [r0, #8]
 800b85e:	079f      	lsls	r7, r3, #30
 800b860:	d50f      	bpl.n	800b882 <HAL_SPI_Transmit+0x16e>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800b862:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800b864:	f832 3b02 	ldrh.w	r3, [r2], #2
 800b868:	60c3      	str	r3, [r0, #12]
        hspi->TxXferCount--;
 800b86a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800b86c:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800b86e:	3b01      	subs	r3, #1
 800b870:	b29b      	uxth	r3, r3
 800b872:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800b874:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800b876:	b29b      	uxth	r3, r3
 800b878:	2b00      	cmp	r3, #0
 800b87a:	d0b1      	beq.n	800b7e0 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800b87c:	6883      	ldr	r3, [r0, #8]
 800b87e:	079f      	lsls	r7, r3, #30
 800b880:	d4ef      	bmi.n	800b862 <HAL_SPI_Transmit+0x14e>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800b882:	f7fd f8a1 	bl	80089c8 <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800b886:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800b888:	b29b      	uxth	r3, r3
 800b88a:	2b00      	cmp	r3, #0
 800b88c:	d0a8      	beq.n	800b7e0 <HAL_SPI_Transmit+0xcc>
 800b88e:	6820      	ldr	r0, [r4, #0]
 800b890:	e7e4      	b.n	800b85c <HAL_SPI_Transmit+0x148>
    __HAL_SPI_DISABLE(hspi);
 800b892:	6803      	ldr	r3, [r0, #0]
 800b894:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800b898:	6003      	str	r3, [r0, #0]
    SPI_1LINE_TX(hspi);
 800b89a:	6803      	ldr	r3, [r0, #0]
 800b89c:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800b8a0:	6003      	str	r3, [r0, #0]
 800b8a2:	e771      	b.n	800b788 <HAL_SPI_Transmit+0x74>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800b8a4:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800b8a6:	7812      	ldrb	r2, [r2, #0]
 800b8a8:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800b8aa:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800b8ac:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800b8ae:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800b8b0:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800b8b2:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800b8b4:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800b8b6:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800b8b8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800b8ba:	b29b      	uxth	r3, r3
 800b8bc:	2b00      	cmp	r3, #0
 800b8be:	d08f      	beq.n	800b7e0 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800b8c0:	6823      	ldr	r3, [r4, #0]
 800b8c2:	689a      	ldr	r2, [r3, #8]
 800b8c4:	0792      	lsls	r2, r2, #30
 800b8c6:	d4ed      	bmi.n	800b8a4 <HAL_SPI_Transmit+0x190>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800b8c8:	f7fd f87e 	bl	80089c8 <HAL_GetTick>
 800b8cc:	1b80      	subs	r0, r0, r6
 800b8ce:	42a8      	cmp	r0, r5
 800b8d0:	d3f2      	bcc.n	800b8b8 <HAL_SPI_Transmit+0x1a4>
          errorcode = HAL_TIMEOUT;
 800b8d2:	2003      	movs	r0, #3
 800b8d4:	e736      	b.n	800b744 <HAL_SPI_Transmit+0x30>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800b8d6:	f898 3000 	ldrb.w	r3, [r8]
 800b8da:	7303      	strb	r3, [r0, #12]
      hspi->TxXferCount--;
 800b8dc:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800b8de:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800b8e0:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800b8e2:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800b8e4:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800b8e6:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800b8e8:	86e3      	strh	r3, [r4, #54]	; 0x36
 800b8ea:	e760      	b.n	800b7ae <HAL_SPI_Transmit+0x9a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800b8ec:	f7fd f86c 	bl	80089c8 <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800b8f0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800b8f2:	b29b      	uxth	r3, r3
 800b8f4:	2b00      	cmp	r3, #0
 800b8f6:	f47f af60 	bne.w	800b7ba <HAL_SPI_Transmit+0xa6>
 800b8fa:	e771      	b.n	800b7e0 <HAL_SPI_Transmit+0xcc>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800b8fc:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800b8fe:	f831 3b02 	ldrh.w	r3, [r1], #2
 800b902:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800b904:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800b906:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800b908:	3b01      	subs	r3, #1
 800b90a:	b29b      	uxth	r3, r3
 800b90c:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800b90e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800b910:	b29b      	uxth	r3, r3
 800b912:	2b00      	cmp	r3, #0
 800b914:	f43f af64 	beq.w	800b7e0 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800b918:	6822      	ldr	r2, [r4, #0]
 800b91a:	6893      	ldr	r3, [r2, #8]
 800b91c:	0799      	lsls	r1, r3, #30
 800b91e:	d4ed      	bmi.n	800b8fc <HAL_SPI_Transmit+0x1e8>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800b920:	f7fd f852 	bl	80089c8 <HAL_GetTick>
 800b924:	1b80      	subs	r0, r0, r6
 800b926:	42a8      	cmp	r0, r5
 800b928:	d3f1      	bcc.n	800b90e <HAL_SPI_Transmit+0x1fa>
 800b92a:	e7d2      	b.n	800b8d2 <HAL_SPI_Transmit+0x1be>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800b92c:	2f01      	cmp	r7, #1
 800b92e:	d18f      	bne.n	800b850 <HAL_SPI_Transmit+0x13c>
 800b930:	e785      	b.n	800b83e <HAL_SPI_Transmit+0x12a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800b932:	4633      	mov	r3, r6
 800b934:	462a      	mov	r2, r5
 800b936:	2180      	movs	r1, #128	; 0x80
 800b938:	4620      	mov	r0, r4
 800b93a:	f7ff fdef 	bl	800b51c <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800b93e:	2800      	cmp	r0, #0
 800b940:	f43f af68 	beq.w	800b814 <HAL_SPI_Transmit+0x100>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800b944:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800b946:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800b948:	4313      	orrs	r3, r2
 800b94a:	6563      	str	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800b94c:	6562      	str	r2, [r4, #84]	; 0x54
 800b94e:	e761      	b.n	800b814 <HAL_SPI_Transmit+0x100>
 800b950:	20000078 	.word	0x20000078
 800b954:	165e9f81 	.word	0x165e9f81

0800b958 <HAL_SPI_TransmitReceive>:
{
 800b958:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b95c:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800b95e:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800b962:	2801      	cmp	r0, #1
{
 800b964:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800b966:	f000 80ac 	beq.w	800bac2 <HAL_SPI_TransmitReceive+0x16a>
 800b96a:	461e      	mov	r6, r3
 800b96c:	2301      	movs	r3, #1
 800b96e:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800b972:	4690      	mov	r8, r2
 800b974:	460f      	mov	r7, r1
 800b976:	f7fd f827 	bl	80089c8 <HAL_GetTick>
 800b97a:	4605      	mov	r5, r0
  tmp_state           = hspi->State;
 800b97c:	f894 0051 	ldrb.w	r0, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 800b980:	6863      	ldr	r3, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800b982:	2801      	cmp	r0, #1
  tmp_state           = hspi->State;
 800b984:	b2c2      	uxtb	r2, r0
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800b986:	d011      	beq.n	800b9ac <HAL_SPI_TransmitReceive+0x54>
 800b988:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800b98c:	d009      	beq.n	800b9a2 <HAL_SPI_TransmitReceive+0x4a>
    errorcode = HAL_BUSY;
 800b98e:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800b990:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800b992:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800b994:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800b998:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800b99c:	b002      	add	sp, #8
 800b99e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 800b9a2:	68a1      	ldr	r1, [r4, #8]
 800b9a4:	2900      	cmp	r1, #0
 800b9a6:	d1f2      	bne.n	800b98e <HAL_SPI_TransmitReceive+0x36>
 800b9a8:	2a04      	cmp	r2, #4
 800b9aa:	d1f0      	bne.n	800b98e <HAL_SPI_TransmitReceive+0x36>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 800b9ac:	2f00      	cmp	r7, #0
 800b9ae:	f000 808c 	beq.w	800baca <HAL_SPI_TransmitReceive+0x172>
 800b9b2:	f1b8 0f00 	cmp.w	r8, #0
 800b9b6:	f000 8088 	beq.w	800baca <HAL_SPI_TransmitReceive+0x172>
 800b9ba:	2e00      	cmp	r6, #0
 800b9bc:	f000 8085 	beq.w	800baca <HAL_SPI_TransmitReceive+0x172>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800b9c0:	f894 2051 	ldrb.w	r2, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 800b9c4:	f8c4 8038 	str.w	r8, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800b9c8:	2a04      	cmp	r2, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 800b9ca:	bf1c      	itt	ne
 800b9cc:	2205      	movne	r2, #5
 800b9ce:	f884 2051 	strbne.w	r2, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800b9d2:	2200      	movs	r2, #0
 800b9d4:	6562      	str	r2, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 800b9d6:	e9c4 2210 	strd	r2, r2, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800b9da:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferCount = Size;
 800b9dc:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 800b9de:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800b9e0:	6811      	ldr	r1, [r2, #0]
  hspi->RxXferSize  = Size;
 800b9e2:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800b9e4:	0649      	lsls	r1, r1, #25
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 800b9e6:	6327      	str	r7, [r4, #48]	; 0x30
  hspi->TxXferSize  = Size;
 800b9e8:	86a6      	strh	r6, [r4, #52]	; 0x34
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800b9ea:	d403      	bmi.n	800b9f4 <HAL_SPI_TransmitReceive+0x9c>
    __HAL_SPI_ENABLE(hspi);
 800b9ec:	6811      	ldr	r1, [r2, #0]
 800b9ee:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800b9f2:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800b9f4:	68e1      	ldr	r1, [r4, #12]
 800b9f6:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 800b9fa:	f000 809e 	beq.w	800bb3a <HAL_SPI_TransmitReceive+0x1e2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800b9fe:	2b00      	cmp	r3, #0
 800ba00:	f000 8091 	beq.w	800bb26 <HAL_SPI_TransmitReceive+0x1ce>
 800ba04:	2e01      	cmp	r6, #1
 800ba06:	f000 808e 	beq.w	800bb26 <HAL_SPI_TransmitReceive+0x1ce>
 800ba0a:	9b08      	ldr	r3, [sp, #32]
 800ba0c:	3301      	adds	r3, #1
        txallowed = 1U;
 800ba0e:	f04f 0601 	mov.w	r6, #1
 800ba12:	d028      	beq.n	800ba66 <HAL_SPI_TransmitReceive+0x10e>
 800ba14:	e05b      	b.n	800bace <HAL_SPI_TransmitReceive+0x176>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800ba16:	6821      	ldr	r1, [r4, #0]
 800ba18:	688b      	ldr	r3, [r1, #8]
 800ba1a:	0798      	lsls	r0, r3, #30
 800ba1c:	d50f      	bpl.n	800ba3e <HAL_SPI_TransmitReceive+0xe6>
 800ba1e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800ba20:	b29b      	uxth	r3, r3
 800ba22:	b163      	cbz	r3, 800ba3e <HAL_SPI_TransmitReceive+0xe6>
 800ba24:	b15e      	cbz	r6, 800ba3e <HAL_SPI_TransmitReceive+0xe6>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800ba26:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800ba28:	781b      	ldrb	r3, [r3, #0]
 800ba2a:	730b      	strb	r3, [r1, #12]
        hspi->TxXferCount--;
 800ba2c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800ba2e:	6b22      	ldr	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800ba30:	6821      	ldr	r1, [r4, #0]
        hspi->TxXferCount--;
 800ba32:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800ba34:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800ba36:	b29b      	uxth	r3, r3
        txallowed = 0U;
 800ba38:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800ba3a:	86e3      	strh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800ba3c:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800ba3e:	688a      	ldr	r2, [r1, #8]
 800ba40:	f012 0201 	ands.w	r2, r2, #1
 800ba44:	d00d      	beq.n	800ba62 <HAL_SPI_TransmitReceive+0x10a>
 800ba46:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800ba48:	b29b      	uxth	r3, r3
 800ba4a:	b153      	cbz	r3, 800ba62 <HAL_SPI_TransmitReceive+0x10a>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800ba4c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800ba4e:	68c9      	ldr	r1, [r1, #12]
 800ba50:	7019      	strb	r1, [r3, #0]
        hspi->RxXferCount--;
 800ba52:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800ba54:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800ba56:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr++;
 800ba58:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800ba5a:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr++;
 800ba5c:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800ba5e:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 800ba60:	4616      	mov	r6, r2
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800ba62:	f7fc ffb1 	bl	80089c8 <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800ba66:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800ba68:	b292      	uxth	r2, r2
 800ba6a:	2a00      	cmp	r2, #0
 800ba6c:	d1d3      	bne.n	800ba16 <HAL_SPI_TransmitReceive+0xbe>
 800ba6e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800ba70:	b29b      	uxth	r3, r3
 800ba72:	2b00      	cmp	r3, #0
 800ba74:	d1cf      	bne.n	800ba16 <HAL_SPI_TransmitReceive+0xbe>
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800ba76:	4b79      	ldr	r3, [pc, #484]	; (800bc5c <HAL_SPI_TransmitReceive+0x304>)
 800ba78:	4a79      	ldr	r2, [pc, #484]	; (800bc60 <HAL_SPI_TransmitReceive+0x308>)
 800ba7a:	681b      	ldr	r3, [r3, #0]
 800ba7c:	fba2 2303 	umull	r2, r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800ba80:	6862      	ldr	r2, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800ba82:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800ba86:	0d5b      	lsrs	r3, r3, #21
 800ba88:	fb01 f303 	mul.w	r3, r1, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800ba8c:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800ba90:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800ba92:	d107      	bne.n	800baa4 <HAL_SPI_TransmitReceive+0x14c>
 800ba94:	e0d2      	b.n	800bc3c <HAL_SPI_TransmitReceive+0x2e4>
      count--;
 800ba96:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800ba98:	6822      	ldr	r2, [r4, #0]
      count--;
 800ba9a:	3b01      	subs	r3, #1
 800ba9c:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800ba9e:	6893      	ldr	r3, [r2, #8]
 800baa0:	061b      	lsls	r3, r3, #24
 800baa2:	d502      	bpl.n	800baaa <HAL_SPI_TransmitReceive+0x152>
      if (count == 0U)
 800baa4:	9b01      	ldr	r3, [sp, #4]
 800baa6:	2b00      	cmp	r3, #0
 800baa8:	d1f5      	bne.n	800ba96 <HAL_SPI_TransmitReceive+0x13e>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800baaa:	68a0      	ldr	r0, [r4, #8]
 800baac:	2800      	cmp	r0, #0
 800baae:	f040 8082 	bne.w	800bbb6 <HAL_SPI_TransmitReceive+0x25e>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800bab2:	6823      	ldr	r3, [r4, #0]
 800bab4:	9000      	str	r0, [sp, #0]
 800bab6:	68da      	ldr	r2, [r3, #12]
 800bab8:	9200      	str	r2, [sp, #0]
 800baba:	689b      	ldr	r3, [r3, #8]
 800babc:	9300      	str	r3, [sp, #0]
 800babe:	9b00      	ldr	r3, [sp, #0]
 800bac0:	e766      	b.n	800b990 <HAL_SPI_TransmitReceive+0x38>
  __HAL_LOCK(hspi);
 800bac2:	2002      	movs	r0, #2
}
 800bac4:	b002      	add	sp, #8
 800bac6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    errorcode = HAL_ERROR;
 800baca:	2001      	movs	r0, #1
 800bacc:	e760      	b.n	800b990 <HAL_SPI_TransmitReceive+0x38>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800bace:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bad0:	b29b      	uxth	r3, r3
 800bad2:	b91b      	cbnz	r3, 800badc <HAL_SPI_TransmitReceive+0x184>
 800bad4:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800bad6:	b29b      	uxth	r3, r3
 800bad8:	2b00      	cmp	r3, #0
 800bada:	d0cc      	beq.n	800ba76 <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800badc:	6822      	ldr	r2, [r4, #0]
 800bade:	6893      	ldr	r3, [r2, #8]
 800bae0:	0799      	lsls	r1, r3, #30
 800bae2:	d50f      	bpl.n	800bb04 <HAL_SPI_TransmitReceive+0x1ac>
 800bae4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bae6:	b29b      	uxth	r3, r3
 800bae8:	b163      	cbz	r3, 800bb04 <HAL_SPI_TransmitReceive+0x1ac>
 800baea:	b15e      	cbz	r6, 800bb04 <HAL_SPI_TransmitReceive+0x1ac>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800baec:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800baee:	781b      	ldrb	r3, [r3, #0]
 800baf0:	7313      	strb	r3, [r2, #12]
        hspi->TxXferCount--;
 800baf2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800baf4:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800baf6:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800baf8:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800bafa:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr++;
 800bafc:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800bafe:	6822      	ldr	r2, [r4, #0]
        hspi->TxXferCount--;
 800bb00:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800bb02:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800bb04:	6893      	ldr	r3, [r2, #8]
 800bb06:	f013 0301 	ands.w	r3, r3, #1
 800bb0a:	d004      	beq.n	800bb16 <HAL_SPI_TransmitReceive+0x1be>
 800bb0c:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800bb0e:	b289      	uxth	r1, r1
 800bb10:	2900      	cmp	r1, #0
 800bb12:	f040 8087 	bne.w	800bc24 <HAL_SPI_TransmitReceive+0x2cc>
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800bb16:	f7fc ff57 	bl	80089c8 <HAL_GetTick>
 800bb1a:	9b08      	ldr	r3, [sp, #32]
 800bb1c:	1b40      	subs	r0, r0, r5
 800bb1e:	4298      	cmp	r0, r3
 800bb20:	d3d5      	bcc.n	800bace <HAL_SPI_TransmitReceive+0x176>
        errorcode = HAL_TIMEOUT;
 800bb22:	2003      	movs	r0, #3
 800bb24:	e734      	b.n	800b990 <HAL_SPI_TransmitReceive+0x38>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800bb26:	783b      	ldrb	r3, [r7, #0]
 800bb28:	7313      	strb	r3, [r2, #12]
      hspi->TxXferCount--;
 800bb2a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800bb2c:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800bb2e:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800bb30:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800bb32:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800bb34:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800bb36:	86e3      	strh	r3, [r4, #54]	; 0x36
 800bb38:	e767      	b.n	800ba0a <HAL_SPI_TransmitReceive+0xb2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800bb3a:	2b00      	cmp	r3, #0
 800bb3c:	d13d      	bne.n	800bbba <HAL_SPI_TransmitReceive+0x262>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800bb3e:	f837 3b02 	ldrh.w	r3, [r7], #2
 800bb42:	60d3      	str	r3, [r2, #12]
      hspi->TxXferCount--;
 800bb44:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800bb46:	6327      	str	r7, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800bb48:	3b01      	subs	r3, #1
 800bb4a:	b29b      	uxth	r3, r3
 800bb4c:	86e3      	strh	r3, [r4, #54]	; 0x36
 800bb4e:	9b08      	ldr	r3, [sp, #32]
 800bb50:	3301      	adds	r3, #1
{
 800bb52:	f04f 0601 	mov.w	r6, #1
 800bb56:	d025      	beq.n	800bba4 <HAL_SPI_TransmitReceive+0x24c>
 800bb58:	e032      	b.n	800bbc0 <HAL_SPI_TransmitReceive+0x268>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800bb5a:	6823      	ldr	r3, [r4, #0]
 800bb5c:	689a      	ldr	r2, [r3, #8]
 800bb5e:	0792      	lsls	r2, r2, #30
 800bb60:	d50d      	bpl.n	800bb7e <HAL_SPI_TransmitReceive+0x226>
 800bb62:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800bb64:	b292      	uxth	r2, r2
 800bb66:	b152      	cbz	r2, 800bb7e <HAL_SPI_TransmitReceive+0x226>
 800bb68:	b14e      	cbz	r6, 800bb7e <HAL_SPI_TransmitReceive+0x226>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800bb6a:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800bb6c:	f831 2b02 	ldrh.w	r2, [r1], #2
 800bb70:	60da      	str	r2, [r3, #12]
        hspi->TxXferCount--;
 800bb72:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800bb74:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800bb76:	3a01      	subs	r2, #1
 800bb78:	b292      	uxth	r2, r2
        txallowed = 0U;
 800bb7a:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800bb7c:	86e2      	strh	r2, [r4, #54]	; 0x36
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800bb7e:	689a      	ldr	r2, [r3, #8]
 800bb80:	f012 0201 	ands.w	r2, r2, #1
 800bb84:	d00c      	beq.n	800bba0 <HAL_SPI_TransmitReceive+0x248>
 800bb86:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800bb88:	b289      	uxth	r1, r1
 800bb8a:	b149      	cbz	r1, 800bba0 <HAL_SPI_TransmitReceive+0x248>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800bb8c:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800bb8e:	68db      	ldr	r3, [r3, #12]
 800bb90:	f821 3b02 	strh.w	r3, [r1], #2
        hspi->RxXferCount--;
 800bb94:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800bb96:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800bb98:	3b01      	subs	r3, #1
 800bb9a:	b29b      	uxth	r3, r3
        txallowed = 1U;
 800bb9c:	4616      	mov	r6, r2
        hspi->RxXferCount--;
 800bb9e:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800bba0:	f7fc ff12 	bl	80089c8 <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800bba4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bba6:	b29b      	uxth	r3, r3
 800bba8:	2b00      	cmp	r3, #0
 800bbaa:	d1d6      	bne.n	800bb5a <HAL_SPI_TransmitReceive+0x202>
 800bbac:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800bbae:	b29b      	uxth	r3, r3
 800bbb0:	2b00      	cmp	r3, #0
 800bbb2:	d1d2      	bne.n	800bb5a <HAL_SPI_TransmitReceive+0x202>
 800bbb4:	e75f      	b.n	800ba76 <HAL_SPI_TransmitReceive+0x11e>
  HAL_StatusTypeDef    errorcode = HAL_OK;
 800bbb6:	2000      	movs	r0, #0
 800bbb8:	e6ea      	b.n	800b990 <HAL_SPI_TransmitReceive+0x38>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800bbba:	2e01      	cmp	r6, #1
 800bbbc:	d1c7      	bne.n	800bb4e <HAL_SPI_TransmitReceive+0x1f6>
 800bbbe:	e7be      	b.n	800bb3e <HAL_SPI_TransmitReceive+0x1e6>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800bbc0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bbc2:	b29b      	uxth	r3, r3
 800bbc4:	b923      	cbnz	r3, 800bbd0 <HAL_SPI_TransmitReceive+0x278>
 800bbc6:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800bbc8:	b29b      	uxth	r3, r3
 800bbca:	2b00      	cmp	r3, #0
 800bbcc:	f43f af53 	beq.w	800ba76 <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800bbd0:	6822      	ldr	r2, [r4, #0]
 800bbd2:	6893      	ldr	r3, [r2, #8]
 800bbd4:	079f      	lsls	r7, r3, #30
 800bbd6:	d50d      	bpl.n	800bbf4 <HAL_SPI_TransmitReceive+0x29c>
 800bbd8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bbda:	b29b      	uxth	r3, r3
 800bbdc:	b153      	cbz	r3, 800bbf4 <HAL_SPI_TransmitReceive+0x29c>
 800bbde:	b14e      	cbz	r6, 800bbf4 <HAL_SPI_TransmitReceive+0x29c>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800bbe0:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800bbe2:	f831 3b02 	ldrh.w	r3, [r1], #2
 800bbe6:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800bbe8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800bbea:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800bbec:	3b01      	subs	r3, #1
 800bbee:	b29b      	uxth	r3, r3
 800bbf0:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800bbf2:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800bbf4:	6893      	ldr	r3, [r2, #8]
 800bbf6:	f013 0301 	ands.w	r3, r3, #1
 800bbfa:	d00c      	beq.n	800bc16 <HAL_SPI_TransmitReceive+0x2be>
 800bbfc:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800bbfe:	b289      	uxth	r1, r1
 800bc00:	b149      	cbz	r1, 800bc16 <HAL_SPI_TransmitReceive+0x2be>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800bc02:	68d1      	ldr	r1, [r2, #12]
 800bc04:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800bc06:	f822 1b02 	strh.w	r1, [r2], #2
        txallowed = 1U;
 800bc0a:	461e      	mov	r6, r3
        hspi->RxXferCount--;
 800bc0c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800bc0e:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800bc10:	3b01      	subs	r3, #1
 800bc12:	b29b      	uxth	r3, r3
 800bc14:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800bc16:	f7fc fed7 	bl	80089c8 <HAL_GetTick>
 800bc1a:	9b08      	ldr	r3, [sp, #32]
 800bc1c:	1b40      	subs	r0, r0, r5
 800bc1e:	4298      	cmp	r0, r3
 800bc20:	d3ce      	bcc.n	800bbc0 <HAL_SPI_TransmitReceive+0x268>
 800bc22:	e77e      	b.n	800bb22 <HAL_SPI_TransmitReceive+0x1ca>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800bc24:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800bc26:	68d2      	ldr	r2, [r2, #12]
 800bc28:	700a      	strb	r2, [r1, #0]
        hspi->RxXferCount--;
 800bc2a:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800bc2c:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800bc2e:	3a01      	subs	r2, #1
        hspi->pRxBuffPtr++;
 800bc30:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800bc32:	b292      	uxth	r2, r2
        hspi->pRxBuffPtr++;
 800bc34:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800bc36:	87e2      	strh	r2, [r4, #62]	; 0x3e
        txallowed = 1U;
 800bc38:	461e      	mov	r6, r3
 800bc3a:	e76c      	b.n	800bb16 <HAL_SPI_TransmitReceive+0x1be>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800bc3c:	9a08      	ldr	r2, [sp, #32]
 800bc3e:	462b      	mov	r3, r5
 800bc40:	2180      	movs	r1, #128	; 0x80
 800bc42:	4620      	mov	r0, r4
 800bc44:	f7ff fc6a 	bl	800b51c <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800bc48:	2800      	cmp	r0, #0
 800bc4a:	f43f af2e 	beq.w	800baaa <HAL_SPI_TransmitReceive+0x152>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800bc4e:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800bc50:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800bc52:	4313      	orrs	r3, r2
 800bc54:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 800bc56:	2001      	movs	r0, #1
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800bc58:	6562      	str	r2, [r4, #84]	; 0x54
    goto error;
 800bc5a:	e699      	b.n	800b990 <HAL_SPI_TransmitReceive+0x38>
 800bc5c:	20000078 	.word	0x20000078
 800bc60:	165e9f81 	.word	0x165e9f81

0800bc64 <HAL_SPI_Receive>:
{
 800bc64:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800bc68:	6846      	ldr	r6, [r0, #4]
 800bc6a:	f5b6 7f82 	cmp.w	r6, #260	; 0x104
{
 800bc6e:	b082      	sub	sp, #8
 800bc70:	4604      	mov	r4, r0
 800bc72:	4690      	mov	r8, r2
 800bc74:	461d      	mov	r5, r3
 800bc76:	460f      	mov	r7, r1
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800bc78:	d06e      	beq.n	800bd58 <HAL_SPI_Receive+0xf4>
  __HAL_LOCK(hspi);
 800bc7a:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 800bc7e:	2b01      	cmp	r3, #1
 800bc80:	d076      	beq.n	800bd70 <HAL_SPI_Receive+0x10c>
 800bc82:	2301      	movs	r3, #1
 800bc84:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800bc88:	f7fc fe9e 	bl	80089c8 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800bc8c:	f894 c051 	ldrb.w	ip, [r4, #81]	; 0x51
 800bc90:	f1bc 0f01 	cmp.w	ip, #1
  tickstart = HAL_GetTick();
 800bc94:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800bc96:	fa5f f08c 	uxtb.w	r0, ip
 800bc9a:	d009      	beq.n	800bcb0 <HAL_SPI_Receive+0x4c>
    errorcode = HAL_BUSY;
 800bc9c:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800bc9e:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800bca0:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800bca2:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800bca6:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800bcaa:	b002      	add	sp, #8
 800bcac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800bcb0:	2f00      	cmp	r7, #0
 800bcb2:	d0f4      	beq.n	800bc9e <HAL_SPI_Receive+0x3a>
 800bcb4:	f1b8 0f00 	cmp.w	r8, #0
 800bcb8:	d0f1      	beq.n	800bc9e <HAL_SPI_Receive+0x3a>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bcba:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 800bcbc:	63a7      	str	r7, [r4, #56]	; 0x38
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bcbe:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
    __HAL_SPI_DISABLE(hspi);
 800bcc2:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferSize  = Size;
 800bcc4:	f8a4 803c 	strh.w	r8, [r4, #60]	; 0x3c
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800bcc8:	f04f 0300 	mov.w	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 800bccc:	f04f 0104 	mov.w	r1, #4
 800bcd0:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->TxISR       = NULL;
 800bcd4:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800bcd8:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 800bcda:	6323      	str	r3, [r4, #48]	; 0x30
  hspi->TxXferSize  = 0U;
 800bcdc:	86a3      	strh	r3, [r4, #52]	; 0x34
  hspi->RxXferCount = Size;
 800bcde:	f8a4 803e 	strh.w	r8, [r4, #62]	; 0x3e
  hspi->TxXferCount = 0U;
 800bce2:	86e3      	strh	r3, [r4, #54]	; 0x36
    __HAL_SPI_DISABLE(hspi);
 800bce4:	4613      	mov	r3, r2
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bce6:	d107      	bne.n	800bcf8 <HAL_SPI_Receive+0x94>
    __HAL_SPI_DISABLE(hspi);
 800bce8:	6811      	ldr	r1, [r2, #0]
 800bcea:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800bcee:	6011      	str	r1, [r2, #0]
    SPI_1LINE_RX(hspi);
 800bcf0:	6811      	ldr	r1, [r2, #0]
 800bcf2:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
 800bcf6:	6011      	str	r1, [r2, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800bcf8:	6811      	ldr	r1, [r2, #0]
 800bcfa:	0648      	lsls	r0, r1, #25
 800bcfc:	d403      	bmi.n	800bd06 <HAL_SPI_Receive+0xa2>
    __HAL_SPI_ENABLE(hspi);
 800bcfe:	6811      	ldr	r1, [r2, #0]
 800bd00:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800bd04:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 800bd06:	68e1      	ldr	r1, [r4, #12]
 800bd08:	2900      	cmp	r1, #0
 800bd0a:	d054      	beq.n	800bdb6 <HAL_SPI_Receive+0x152>
    while (hspi->RxXferCount > 0U)
 800bd0c:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800bd0e:	b289      	uxth	r1, r1
 800bd10:	b1a9      	cbz	r1, 800bd3e <HAL_SPI_Receive+0xda>
 800bd12:	1c69      	adds	r1, r5, #1
 800bd14:	d13e      	bne.n	800bd94 <HAL_SPI_Receive+0x130>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800bd16:	6893      	ldr	r3, [r2, #8]
 800bd18:	07db      	lsls	r3, r3, #31
 800bd1a:	d544      	bpl.n	800bda6 <HAL_SPI_Receive+0x142>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800bd1c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800bd1e:	68d1      	ldr	r1, [r2, #12]
 800bd20:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->RxXferCount--;
 800bd24:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800bd28:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800bd2a:	f10c 3cff 	add.w	ip, ip, #4294967295
 800bd2e:	fa1f fc8c 	uxth.w	ip, ip
 800bd32:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800bd36:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800bd38:	b29b      	uxth	r3, r3
 800bd3a:	2b00      	cmp	r3, #0
 800bd3c:	d1eb      	bne.n	800bd16 <HAL_SPI_Receive+0xb2>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800bd3e:	4632      	mov	r2, r6
 800bd40:	4629      	mov	r1, r5
 800bd42:	4620      	mov	r0, r4
 800bd44:	f7ff fc48 	bl	800b5d8 <SPI_EndRxTransaction>
 800bd48:	b108      	cbz	r0, 800bd4e <HAL_SPI_Receive+0xea>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800bd4a:	2320      	movs	r3, #32
 800bd4c:	6563      	str	r3, [r4, #84]	; 0x54
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800bd4e:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800bd50:	3800      	subs	r0, #0
 800bd52:	bf18      	it	ne
 800bd54:	2001      	movne	r0, #1
error :
 800bd56:	e7a2      	b.n	800bc9e <HAL_SPI_Receive+0x3a>
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800bd58:	6883      	ldr	r3, [r0, #8]
 800bd5a:	2b00      	cmp	r3, #0
 800bd5c:	d18d      	bne.n	800bc7a <HAL_SPI_Receive+0x16>
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800bd5e:	9500      	str	r5, [sp, #0]
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800bd60:	2504      	movs	r5, #4
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800bd62:	4613      	mov	r3, r2
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800bd64:	f880 5051 	strb.w	r5, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800bd68:	460a      	mov	r2, r1
 800bd6a:	f7ff fdf5 	bl	800b958 <HAL_SPI_TransmitReceive>
 800bd6e:	e79c      	b.n	800bcaa <HAL_SPI_Receive+0x46>
  __HAL_LOCK(hspi);
 800bd70:	2002      	movs	r0, #2
}
 800bd72:	b002      	add	sp, #8
 800bd74:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800bd78:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800bd7a:	68db      	ldr	r3, [r3, #12]
 800bd7c:	f822 3b02 	strh.w	r3, [r2], #2
        hspi->RxXferCount--;
 800bd80:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800bd82:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800bd84:	3b01      	subs	r3, #1
 800bd86:	b29b      	uxth	r3, r3
 800bd88:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800bd8a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800bd8c:	b29b      	uxth	r3, r3
 800bd8e:	2b00      	cmp	r3, #0
 800bd90:	d0d5      	beq.n	800bd3e <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800bd92:	6823      	ldr	r3, [r4, #0]
 800bd94:	689a      	ldr	r2, [r3, #8]
 800bd96:	07d2      	lsls	r2, r2, #31
 800bd98:	d4ee      	bmi.n	800bd78 <HAL_SPI_Receive+0x114>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800bd9a:	f7fc fe15 	bl	80089c8 <HAL_GetTick>
 800bd9e:	1b80      	subs	r0, r0, r6
 800bda0:	42a8      	cmp	r0, r5
 800bda2:	d243      	bcs.n	800be2c <HAL_SPI_Receive+0x1c8>
 800bda4:	e7f1      	b.n	800bd8a <HAL_SPI_Receive+0x126>
 800bda6:	f7fc fe0f 	bl	80089c8 <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800bdaa:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800bdac:	b29b      	uxth	r3, r3
 800bdae:	2b00      	cmp	r3, #0
 800bdb0:	d0c5      	beq.n	800bd3e <HAL_SPI_Receive+0xda>
 800bdb2:	6822      	ldr	r2, [r4, #0]
 800bdb4:	e7af      	b.n	800bd16 <HAL_SPI_Receive+0xb2>
    while (hspi->RxXferCount > 0U)
 800bdb6:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 800bdb8:	b292      	uxth	r2, r2
 800bdba:	2a00      	cmp	r2, #0
 800bdbc:	d0bf      	beq.n	800bd3e <HAL_SPI_Receive+0xda>
 800bdbe:	1c6f      	adds	r7, r5, #1
 800bdc0:	d013      	beq.n	800bdea <HAL_SPI_Receive+0x186>
 800bdc2:	e02b      	b.n	800be1c <HAL_SPI_Receive+0x1b8>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800bdc4:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800bdc6:	7b1b      	ldrb	r3, [r3, #12]
 800bdc8:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800bdca:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800bdce:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800bdd0:	f10c 3cff 	add.w	ip, ip, #4294967295
 800bdd4:	fa1f fc8c 	uxth.w	ip, ip
 800bdd8:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800bddc:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800bdde:	3201      	adds	r2, #1
    while (hspi->RxXferCount > 0U)
 800bde0:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800bde2:	63a2      	str	r2, [r4, #56]	; 0x38
    while (hspi->RxXferCount > 0U)
 800bde4:	2b00      	cmp	r3, #0
 800bde6:	d0aa      	beq.n	800bd3e <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800bde8:	6823      	ldr	r3, [r4, #0]
 800bdea:	689a      	ldr	r2, [r3, #8]
 800bdec:	07d0      	lsls	r0, r2, #31
 800bdee:	d4e9      	bmi.n	800bdc4 <HAL_SPI_Receive+0x160>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800bdf0:	f7fc fdea 	bl	80089c8 <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800bdf4:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800bdf6:	b29b      	uxth	r3, r3
 800bdf8:	2b00      	cmp	r3, #0
 800bdfa:	d1f5      	bne.n	800bde8 <HAL_SPI_Receive+0x184>
 800bdfc:	e79f      	b.n	800bd3e <HAL_SPI_Receive+0xda>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800bdfe:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800be00:	7b1b      	ldrb	r3, [r3, #12]
 800be02:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800be04:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800be06:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800be08:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800be0a:	3201      	adds	r2, #1
        hspi->RxXferCount--;
 800be0c:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800be0e:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800be10:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800be12:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800be14:	b29b      	uxth	r3, r3
 800be16:	2b00      	cmp	r3, #0
 800be18:	d091      	beq.n	800bd3e <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800be1a:	6823      	ldr	r3, [r4, #0]
 800be1c:	689a      	ldr	r2, [r3, #8]
 800be1e:	07d1      	lsls	r1, r2, #31
 800be20:	d4ed      	bmi.n	800bdfe <HAL_SPI_Receive+0x19a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800be22:	f7fc fdd1 	bl	80089c8 <HAL_GetTick>
 800be26:	1b80      	subs	r0, r0, r6
 800be28:	42a8      	cmp	r0, r5
 800be2a:	d3f2      	bcc.n	800be12 <HAL_SPI_Receive+0x1ae>
          errorcode = HAL_TIMEOUT;
 800be2c:	2003      	movs	r0, #3
 800be2e:	e736      	b.n	800bc9e <HAL_SPI_Receive+0x3a>

0800be30 <HAL_TIM_Base_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
  /* Check the TIM handle allocation */
  if (htim == NULL)
 800be30:	2800      	cmp	r0, #0
 800be32:	f000 8087 	beq.w	800bf44 <HAL_TIM_Base_Init+0x114>
{
 800be36:	b510      	push	{r4, lr}
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 800be38:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800be3c:	4604      	mov	r4, r0
 800be3e:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800be42:	2b00      	cmp	r3, #0
 800be44:	d079      	beq.n	800bf3a <HAL_TIM_Base_Init+0x10a>

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800be46:	6822      	ldr	r2, [r4, #0]
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800be48:	493f      	ldr	r1, [pc, #252]	; (800bf48 <HAL_TIM_Base_Init+0x118>)
  htim->State = HAL_TIM_STATE_BUSY;
 800be4a:	2302      	movs	r3, #2
 800be4c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800be50:	428a      	cmp	r2, r1
  tmpcr1 = TIMx->CR1;
 800be52:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800be54:	d05d      	beq.n	800bf12 <HAL_TIM_Base_Init+0xe2>
 800be56:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 800be5a:	d031      	beq.n	800bec0 <HAL_TIM_Base_Init+0x90>
 800be5c:	f5a1 417c 	sub.w	r1, r1, #64512	; 0xfc00
 800be60:	428a      	cmp	r2, r1
 800be62:	d02d      	beq.n	800bec0 <HAL_TIM_Base_Init+0x90>
 800be64:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800be68:	428a      	cmp	r2, r1
 800be6a:	d029      	beq.n	800bec0 <HAL_TIM_Base_Init+0x90>
 800be6c:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800be70:	428a      	cmp	r2, r1
 800be72:	d025      	beq.n	800bec0 <HAL_TIM_Base_Init+0x90>
 800be74:	f501 4178 	add.w	r1, r1, #63488	; 0xf800
 800be78:	428a      	cmp	r2, r1
 800be7a:	d04a      	beq.n	800bf12 <HAL_TIM_Base_Init+0xe2>
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800be7c:	f501 5170 	add.w	r1, r1, #15360	; 0x3c00
 800be80:	428a      	cmp	r2, r1
 800be82:	d021      	beq.n	800bec8 <HAL_TIM_Base_Init+0x98>
 800be84:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800be88:	428a      	cmp	r2, r1
 800be8a:	d01d      	beq.n	800bec8 <HAL_TIM_Base_Init+0x98>
 800be8c:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800be90:	428a      	cmp	r2, r1
 800be92:	d019      	beq.n	800bec8 <HAL_TIM_Base_Init+0x98>
 800be94:	f5a1 3198 	sub.w	r1, r1, #77824	; 0x13000
 800be98:	428a      	cmp	r2, r1
 800be9a:	d015      	beq.n	800bec8 <HAL_TIM_Base_Init+0x98>
 800be9c:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800bea0:	428a      	cmp	r2, r1
 800bea2:	d011      	beq.n	800bec8 <HAL_TIM_Base_Init+0x98>
 800bea4:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800bea8:	428a      	cmp	r2, r1
 800beaa:	d00d      	beq.n	800bec8 <HAL_TIM_Base_Init+0x98>
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800beac:	69a0      	ldr	r0, [r4, #24]

  TIMx->CR1 = tmpcr1;

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800beae:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800beb0:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800beb4:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
 800beb6:	6013      	str	r3, [r2, #0]

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800beb8:	6863      	ldr	r3, [r4, #4]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800beba:	62d1      	str	r1, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800bebc:	6293      	str	r3, [r2, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800bebe:	e010      	b.n	800bee2 <HAL_TIM_Base_Init+0xb2>
    tmpcr1 |= Structure->CounterMode;
 800bec0:	68a1      	ldr	r1, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800bec2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800bec6:	430b      	orrs	r3, r1
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800bec8:	6920      	ldr	r0, [r4, #16]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800beca:	69a1      	ldr	r1, [r4, #24]
    tmpcr1 &= ~TIM_CR1_CKD;
 800becc:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800bed0:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800bed2:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  TIMx->ARR = (uint32_t)Structure->Period ;
 800bed6:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800bed8:	430b      	orrs	r3, r1
  TIMx->PSC = Structure->Prescaler;
 800beda:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
 800bedc:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800bede:	62d0      	str	r0, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800bee0:	6291      	str	r1, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800bee2:	2301      	movs	r3, #1
 800bee4:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800bee6:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800beea:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800beee:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800bef2:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800bef6:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800befa:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800befe:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800bf02:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800bf06:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 800bf0a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 800bf0e:	2000      	movs	r0, #0
}
 800bf10:	bd10      	pop	{r4, pc}
    tmpcr1 |= Structure->CounterMode;
 800bf12:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800bf14:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800bf16:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800bf1a:	4303      	orrs	r3, r0
    tmpcr1 &= ~TIM_CR1_CKD;
 800bf1c:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800bf20:	430b      	orrs	r3, r1
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800bf22:	69a1      	ldr	r1, [r4, #24]
 800bf24:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800bf28:	430b      	orrs	r3, r1
  TIMx->CR1 = tmpcr1;
 800bf2a:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800bf2c:	68e3      	ldr	r3, [r4, #12]
 800bf2e:	62d3      	str	r3, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800bf30:	6863      	ldr	r3, [r4, #4]
 800bf32:	6293      	str	r3, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
 800bf34:	6963      	ldr	r3, [r4, #20]
 800bf36:	6313      	str	r3, [r2, #48]	; 0x30
 800bf38:	e7d3      	b.n	800bee2 <HAL_TIM_Base_Init+0xb2>
    htim->Lock = HAL_UNLOCKED;
 800bf3a:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 800bf3e:	f7f6 f80b 	bl	8001f58 <HAL_TIM_Base_MspInit>
 800bf42:	e780      	b.n	800be46 <HAL_TIM_Base_Init+0x16>
    return HAL_ERROR;
 800bf44:	2001      	movs	r0, #1
}
 800bf46:	4770      	bx	lr
 800bf48:	40010000 	.word	0x40010000

0800bf4c <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
 800bf4c:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800bf50:	2b01      	cmp	r3, #1
 800bf52:	d12f      	bne.n	800bfb4 <HAL_TIM_Base_Start_IT+0x68>
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800bf54:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800bf56:	4919      	ldr	r1, [pc, #100]	; (800bfbc <HAL_TIM_Base_Start_IT+0x70>)
  htim->State = HAL_TIM_STATE_BUSY;
 800bf58:	2202      	movs	r2, #2
 800bf5a:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800bf5e:	68da      	ldr	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800bf60:	428b      	cmp	r3, r1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800bf62:	f042 0201 	orr.w	r2, r2, #1
 800bf66:	60da      	str	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800bf68:	d019      	beq.n	800bf9e <HAL_TIM_Base_Start_IT+0x52>
 800bf6a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800bf6e:	d016      	beq.n	800bf9e <HAL_TIM_Base_Start_IT+0x52>
 800bf70:	4a13      	ldr	r2, [pc, #76]	; (800bfc0 <HAL_TIM_Base_Start_IT+0x74>)
 800bf72:	4293      	cmp	r3, r2
 800bf74:	d013      	beq.n	800bf9e <HAL_TIM_Base_Start_IT+0x52>
 800bf76:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800bf7a:	4293      	cmp	r3, r2
 800bf7c:	d00f      	beq.n	800bf9e <HAL_TIM_Base_Start_IT+0x52>
 800bf7e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800bf82:	4293      	cmp	r3, r2
 800bf84:	d00b      	beq.n	800bf9e <HAL_TIM_Base_Start_IT+0x52>
 800bf86:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800bf8a:	4293      	cmp	r3, r2
 800bf8c:	d007      	beq.n	800bf9e <HAL_TIM_Base_Start_IT+0x52>
 800bf8e:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800bf92:	4293      	cmp	r3, r2
 800bf94:	d003      	beq.n	800bf9e <HAL_TIM_Base_Start_IT+0x52>
 800bf96:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800bf9a:	4293      	cmp	r3, r2
 800bf9c:	d104      	bne.n	800bfa8 <HAL_TIM_Base_Start_IT+0x5c>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800bf9e:	689a      	ldr	r2, [r3, #8]
 800bfa0:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800bfa4:	2a06      	cmp	r2, #6
 800bfa6:	d007      	beq.n	800bfb8 <HAL_TIM_Base_Start_IT+0x6c>
    __HAL_TIM_ENABLE(htim);
 800bfa8:	681a      	ldr	r2, [r3, #0]
 800bfaa:	f042 0201 	orr.w	r2, r2, #1
  return HAL_OK;
 800bfae:	2000      	movs	r0, #0
    __HAL_TIM_ENABLE(htim);
 800bfb0:	601a      	str	r2, [r3, #0]
 800bfb2:	4770      	bx	lr
    return HAL_ERROR;
 800bfb4:	2001      	movs	r0, #1
 800bfb6:	4770      	bx	lr
  return HAL_OK;
 800bfb8:	2000      	movs	r0, #0
}
 800bfba:	4770      	bx	lr
 800bfbc:	40010000 	.word	0x40010000
 800bfc0:	40000400 	.word	0x40000400

0800bfc4 <HAL_TIM_ConfigClockSource>:
  __HAL_LOCK(htim);
 800bfc4:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800bfc8:	2b01      	cmp	r3, #1
 800bfca:	d075      	beq.n	800c0b8 <HAL_TIM_ConfigClockSource+0xf4>
 800bfcc:	4602      	mov	r2, r0
{
 800bfce:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800bfd0:	2302      	movs	r3, #2
  tmpsmcr = htim->Instance->SMCR;
 800bfd2:	6804      	ldr	r4, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800bfd4:	f882 303d 	strb.w	r3, [r2, #61]	; 0x3d
  __HAL_LOCK(htim);
 800bfd8:	2001      	movs	r0, #1
 800bfda:	f882 003c 	strb.w	r0, [r2, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 800bfde:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800bfe0:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800bfe4:	f023 0377 	bic.w	r3, r3, #119	; 0x77
  htim->Instance->SMCR = tmpsmcr;
 800bfe8:	60a3      	str	r3, [r4, #8]
  switch (sClockSourceConfig->ClockSource)
 800bfea:	680b      	ldr	r3, [r1, #0]
 800bfec:	2b60      	cmp	r3, #96	; 0x60
 800bfee:	d065      	beq.n	800c0bc <HAL_TIM_ConfigClockSource+0xf8>
 800bff0:	d824      	bhi.n	800c03c <HAL_TIM_ConfigClockSource+0x78>
 800bff2:	2b40      	cmp	r3, #64	; 0x40
 800bff4:	d07c      	beq.n	800c0f0 <HAL_TIM_ConfigClockSource+0x12c>
 800bff6:	d94b      	bls.n	800c090 <HAL_TIM_ConfigClockSource+0xcc>
 800bff8:	2b50      	cmp	r3, #80	; 0x50
 800bffa:	d117      	bne.n	800c02c <HAL_TIM_ConfigClockSource+0x68>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800bffc:	684b      	ldr	r3, [r1, #4]
 800bffe:	68cd      	ldr	r5, [r1, #12]
{
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 1: Reset the CC1E Bit */
  tmpccer = TIMx->CCER;
 800c000:	6a21      	ldr	r1, [r4, #32]
  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
  tmpccmr1 |= (TIM_ICFilter << 4U);

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800c002:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800c006:	4319      	orrs	r1, r3
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800c008:	6a23      	ldr	r3, [r4, #32]
 800c00a:	f023 0301 	bic.w	r3, r3, #1
 800c00e:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800c010:	69a3      	ldr	r3, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800c012:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800c016:	ea43 1305 	orr.w	r3, r3, r5, lsl #4

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 800c01a:	61a3      	str	r3, [r4, #24]
  TIMx->CCER = tmpccer;
 800c01c:	6221      	str	r1, [r4, #32]
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource)
{
  uint32_t tmpsmcr;

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
 800c01e:	68a3      	ldr	r3, [r4, #8]
  /* Reset the TS Bits */
  tmpsmcr &= ~TIM_SMCR_TS;
 800c020:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  /* Set the Input Trigger source and the slave mode*/
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800c024:	f043 0357 	orr.w	r3, r3, #87	; 0x57
  HAL_StatusTypeDef status = HAL_OK;
 800c028:	2000      	movs	r0, #0
  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800c02a:	60a3      	str	r3, [r4, #8]
  htim->State = HAL_TIM_STATE_READY;
 800c02c:	2101      	movs	r1, #1
  __HAL_UNLOCK(htim);
 800c02e:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 800c030:	f882 103d 	strb.w	r1, [r2, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800c034:	f882 303c 	strb.w	r3, [r2, #60]	; 0x3c
}
 800c038:	bc30      	pop	{r4, r5}
 800c03a:	4770      	bx	lr
  switch (sClockSourceConfig->ClockSource)
 800c03c:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800c040:	d038      	beq.n	800c0b4 <HAL_TIM_ConfigClockSource+0xf0>
 800c042:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800c046:	d110      	bne.n	800c06a <HAL_TIM_ConfigClockSource+0xa6>

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c048:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
  tmpsmcr = TIMx->SMCR;
 800c04c:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c04e:	432b      	orrs	r3, r5
 800c050:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800c052:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c056:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 800c05a:	430b      	orrs	r3, r1

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800c05c:	60a3      	str	r3, [r4, #8]
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800c05e:	68a3      	ldr	r3, [r4, #8]
 800c060:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
  HAL_StatusTypeDef status = HAL_OK;
 800c064:	2000      	movs	r0, #0
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800c066:	60a3      	str	r3, [r4, #8]
      break;
 800c068:	e7e0      	b.n	800c02c <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800c06a:	2b70      	cmp	r3, #112	; 0x70
 800c06c:	d1de      	bne.n	800c02c <HAL_TIM_ConfigClockSource+0x68>
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c06e:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
  tmpsmcr = TIMx->SMCR;
 800c072:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c074:	432b      	orrs	r3, r5
 800c076:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800c078:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c07c:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 800c080:	430b      	orrs	r3, r1
  TIMx->SMCR = tmpsmcr;
 800c082:	60a3      	str	r3, [r4, #8]
      tmpsmcr = htim->Instance->SMCR;
 800c084:	68a3      	ldr	r3, [r4, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 800c086:	f043 0377 	orr.w	r3, r3, #119	; 0x77
  HAL_StatusTypeDef status = HAL_OK;
 800c08a:	2000      	movs	r0, #0
      htim->Instance->SMCR = tmpsmcr;
 800c08c:	60a3      	str	r3, [r4, #8]
      break;
 800c08e:	e7cd      	b.n	800c02c <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800c090:	2b20      	cmp	r3, #32
 800c092:	d002      	beq.n	800c09a <HAL_TIM_ConfigClockSource+0xd6>
 800c094:	d90a      	bls.n	800c0ac <HAL_TIM_ConfigClockSource+0xe8>
 800c096:	2b30      	cmp	r3, #48	; 0x30
 800c098:	d1c8      	bne.n	800c02c <HAL_TIM_ConfigClockSource+0x68>
  tmpsmcr = TIMx->SMCR;
 800c09a:	68a1      	ldr	r1, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800c09c:	f021 0170 	bic.w	r1, r1, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800c0a0:	430b      	orrs	r3, r1
 800c0a2:	f043 0307 	orr.w	r3, r3, #7
  HAL_StatusTypeDef status = HAL_OK;
 800c0a6:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800c0a8:	60a3      	str	r3, [r4, #8]
}
 800c0aa:	e7bf      	b.n	800c02c <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800c0ac:	f033 0110 	bics.w	r1, r3, #16
 800c0b0:	d1bc      	bne.n	800c02c <HAL_TIM_ConfigClockSource+0x68>
 800c0b2:	e7f2      	b.n	800c09a <HAL_TIM_ConfigClockSource+0xd6>
  HAL_StatusTypeDef status = HAL_OK;
 800c0b4:	2000      	movs	r0, #0
 800c0b6:	e7b9      	b.n	800c02c <HAL_TIM_ConfigClockSource+0x68>
  __HAL_LOCK(htim);
 800c0b8:	2002      	movs	r0, #2
}
 800c0ba:	4770      	bx	lr
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800c0bc:	6a23      	ldr	r3, [r4, #32]
      TIM_TI2_ConfigInputStage(htim->Instance,
 800c0be:	6848      	ldr	r0, [r1, #4]
 800c0c0:	68cd      	ldr	r5, [r1, #12]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800c0c2:	f023 0310 	bic.w	r3, r3, #16
 800c0c6:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800c0c8:	69a1      	ldr	r1, [r4, #24]
  tmpccer = TIMx->CCER;
 800c0ca:	6a23      	ldr	r3, [r4, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800c0cc:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800c0d0:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
  tmpccer |= (TIM_ICPolarity << 4U);
 800c0d4:	ea43 1300 	orr.w	r3, r3, r0, lsl #4
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800c0d8:	ea41 3105 	orr.w	r1, r1, r5, lsl #12
  TIMx->CCMR1 = tmpccmr1 ;
 800c0dc:	61a1      	str	r1, [r4, #24]
  TIMx->CCER = tmpccer;
 800c0de:	6223      	str	r3, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 800c0e0:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800c0e2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800c0e6:	f043 0367 	orr.w	r3, r3, #103	; 0x67
  HAL_StatusTypeDef status = HAL_OK;
 800c0ea:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800c0ec:	60a3      	str	r3, [r4, #8]
}
 800c0ee:	e79d      	b.n	800c02c <HAL_TIM_ConfigClockSource+0x68>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800c0f0:	684b      	ldr	r3, [r1, #4]
 800c0f2:	68cd      	ldr	r5, [r1, #12]
  tmpccer = TIMx->CCER;
 800c0f4:	6a21      	ldr	r1, [r4, #32]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800c0f6:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800c0fa:	4319      	orrs	r1, r3
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800c0fc:	6a23      	ldr	r3, [r4, #32]
 800c0fe:	f023 0301 	bic.w	r3, r3, #1
 800c102:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800c104:	69a3      	ldr	r3, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800c106:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800c10a:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 800c10e:	61a3      	str	r3, [r4, #24]
  TIMx->CCER = tmpccer;
 800c110:	6221      	str	r1, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 800c112:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800c114:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800c118:	f043 0347 	orr.w	r3, r3, #71	; 0x47
  HAL_StatusTypeDef status = HAL_OK;
 800c11c:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800c11e:	60a3      	str	r3, [r4, #8]
}
 800c120:	e784      	b.n	800c02c <HAL_TIM_ConfigClockSource+0x68>
 800c122:	bf00      	nop

0800c124 <HAL_TIM_SlaveConfigSynchro>:
  __HAL_LOCK(htim);
 800c124:	f890 203c 	ldrb.w	r2, [r0, #60]	; 0x3c
 800c128:	2a01      	cmp	r2, #1
 800c12a:	d050      	beq.n	800c1ce <HAL_TIM_SlaveConfigSynchro+0xaa>
 800c12c:	4603      	mov	r3, r0
{
 800c12e:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800c130:	2202      	movs	r2, #2
  tmpsmcr = htim->Instance->SMCR;
 800c132:	6804      	ldr	r4, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800c134:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
  __HAL_LOCK(htim);
 800c138:	2001      	movs	r0, #1
 800c13a:	f883 003c 	strb.w	r0, [r3, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 800c13e:	68a2      	ldr	r2, [r4, #8]
  tmpsmcr |= sSlaveConfig->InputTrigger;
 800c140:	6848      	ldr	r0, [r1, #4]
  tmpsmcr |= sSlaveConfig->SlaveMode;
 800c142:	680d      	ldr	r5, [r1, #0]
  tmpsmcr &= ~TIM_SMCR_TS;
 800c144:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpsmcr |= sSlaveConfig->InputTrigger;
 800c148:	4302      	orrs	r2, r0
  tmpsmcr &= ~TIM_SMCR_SMS;
 800c14a:	f022 0207 	bic.w	r2, r2, #7
  tmpsmcr |= sSlaveConfig->SlaveMode;
 800c14e:	432a      	orrs	r2, r5
  switch (sSlaveConfig->InputTrigger)
 800c150:	2850      	cmp	r0, #80	; 0x50
  htim->Instance->SMCR = tmpsmcr;
 800c152:	60a2      	str	r2, [r4, #8]
  switch (sSlaveConfig->InputTrigger)
 800c154:	d060      	beq.n	800c218 <HAL_TIM_SlaveConfigSynchro+0xf4>
 800c156:	d90f      	bls.n	800c178 <HAL_TIM_SlaveConfigSynchro+0x54>
 800c158:	2860      	cmp	r0, #96	; 0x60
 800c15a:	d03a      	beq.n	800c1d2 <HAL_TIM_SlaveConfigSynchro+0xae>
 800c15c:	2870      	cmp	r0, #112	; 0x70
 800c15e:	d10e      	bne.n	800c17e <HAL_TIM_SlaveConfigSynchro+0x5a>
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c160:	e9d1 5202 	ldrd	r5, r2, [r1, #8]
  tmpsmcr = TIMx->SMCR;
 800c164:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c166:	432a      	orrs	r2, r5
 800c168:	690d      	ldr	r5, [r1, #16]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800c16a:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c16e:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 800c172:	430a      	orrs	r2, r1
  TIMx->SMCR = tmpsmcr;
 800c174:	60a2      	str	r2, [r4, #8]
 800c176:	e00f      	b.n	800c198 <HAL_TIM_SlaveConfigSynchro+0x74>
  switch (sSlaveConfig->InputTrigger)
 800c178:	2840      	cmp	r0, #64	; 0x40
 800c17a:	d03d      	beq.n	800c1f8 <HAL_TIM_SlaveConfigSynchro+0xd4>
 800c17c:	d907      	bls.n	800c18e <HAL_TIM_SlaveConfigSynchro+0x6a>
    htim->State = HAL_TIM_STATE_READY;
 800c17e:	2001      	movs	r0, #1
    __HAL_UNLOCK(htim);
 800c180:	2200      	movs	r2, #0
    htim->State = HAL_TIM_STATE_READY;
 800c182:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_UNLOCK(htim);
 800c186:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
}
 800c18a:	bc30      	pop	{r4, r5}
 800c18c:	4770      	bx	lr
  switch (sSlaveConfig->InputTrigger)
 800c18e:	2820      	cmp	r0, #32
 800c190:	d002      	beq.n	800c198 <HAL_TIM_SlaveConfigSynchro+0x74>
 800c192:	d912      	bls.n	800c1ba <HAL_TIM_SlaveConfigSynchro+0x96>
 800c194:	2830      	cmp	r0, #48	; 0x30
 800c196:	d1f2      	bne.n	800c17e <HAL_TIM_SlaveConfigSynchro+0x5a>
  __HAL_TIM_DISABLE_IT(htim, TIM_IT_TRIGGER);
 800c198:	68e2      	ldr	r2, [r4, #12]
 800c19a:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800c19e:	60e2      	str	r2, [r4, #12]
  __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
 800c1a0:	68e2      	ldr	r2, [r4, #12]
  __HAL_UNLOCK(htim);
 800c1a2:	2100      	movs	r1, #0
  htim->State = HAL_TIM_STATE_READY;
 800c1a4:	2501      	movs	r5, #1
  __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
 800c1a6:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 800c1aa:	60e2      	str	r2, [r4, #12]
  htim->State = HAL_TIM_STATE_READY;
 800c1ac:	f883 503d 	strb.w	r5, [r3, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800c1b0:	f883 103c 	strb.w	r1, [r3, #60]	; 0x3c
  return HAL_OK;
 800c1b4:	4608      	mov	r0, r1
}
 800c1b6:	bc30      	pop	{r4, r5}
 800c1b8:	4770      	bx	lr
  switch (sSlaveConfig->InputTrigger)
 800c1ba:	f030 0210 	bics.w	r2, r0, #16
 800c1be:	d0eb      	beq.n	800c198 <HAL_TIM_SlaveConfigSynchro+0x74>
    htim->State = HAL_TIM_STATE_READY;
 800c1c0:	2001      	movs	r0, #1
    __HAL_UNLOCK(htim);
 800c1c2:	2200      	movs	r2, #0
    htim->State = HAL_TIM_STATE_READY;
 800c1c4:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_UNLOCK(htim);
 800c1c8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    return HAL_ERROR;
 800c1cc:	e7dd      	b.n	800c18a <HAL_TIM_SlaveConfigSynchro+0x66>
  __HAL_LOCK(htim);
 800c1ce:	2002      	movs	r0, #2
}
 800c1d0:	4770      	bx	lr
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800c1d2:	6a22      	ldr	r2, [r4, #32]
      TIM_TI2_ConfigInputStage(htim->Instance,
 800c1d4:	6888      	ldr	r0, [r1, #8]
 800c1d6:	690d      	ldr	r5, [r1, #16]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800c1d8:	f022 0210 	bic.w	r2, r2, #16
 800c1dc:	6222      	str	r2, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800c1de:	69a1      	ldr	r1, [r4, #24]
  tmpccer = TIMx->CCER;
 800c1e0:	6a22      	ldr	r2, [r4, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800c1e2:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800c1e6:	f022 02a0 	bic.w	r2, r2, #160	; 0xa0
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800c1ea:	ea41 3105 	orr.w	r1, r1, r5, lsl #12
  tmpccer |= (TIM_ICPolarity << 4U);
 800c1ee:	ea42 1200 	orr.w	r2, r2, r0, lsl #4
  TIMx->CCMR1 = tmpccmr1 ;
 800c1f2:	61a1      	str	r1, [r4, #24]
  TIMx->CCER = tmpccer;
 800c1f4:	6222      	str	r2, [r4, #32]
 800c1f6:	e7cf      	b.n	800c198 <HAL_TIM_SlaveConfigSynchro+0x74>
      if (sSlaveConfig->SlaveMode == TIM_SLAVEMODE_GATED)
 800c1f8:	2d05      	cmp	r5, #5
 800c1fa:	d0c0      	beq.n	800c17e <HAL_TIM_SlaveConfigSynchro+0x5a>
      tmpccer = htim->Instance->CCER;
 800c1fc:	6a20      	ldr	r0, [r4, #32]
      htim->Instance->CCER &= ~TIM_CCER_CC1E;
 800c1fe:	6a22      	ldr	r2, [r4, #32]
      tmpccmr1 |= ((sSlaveConfig->TriggerFilter) << 4U);
 800c200:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCER &= ~TIM_CCER_CC1E;
 800c202:	f022 0201 	bic.w	r2, r2, #1
 800c206:	6222      	str	r2, [r4, #32]
      tmpccmr1 = htim->Instance->CCMR1;
 800c208:	69a2      	ldr	r2, [r4, #24]
      tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800c20a:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
      tmpccmr1 |= ((sSlaveConfig->TriggerFilter) << 4U);
 800c20e:	ea42 1201 	orr.w	r2, r2, r1, lsl #4
      htim->Instance->CCMR1 = tmpccmr1;
 800c212:	61a2      	str	r2, [r4, #24]
      htim->Instance->CCER = tmpccer;
 800c214:	6220      	str	r0, [r4, #32]
      break;
 800c216:	e7bf      	b.n	800c198 <HAL_TIM_SlaveConfigSynchro+0x74>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800c218:	688a      	ldr	r2, [r1, #8]
 800c21a:	6908      	ldr	r0, [r1, #16]
  tmpccer = TIMx->CCER;
 800c21c:	6a21      	ldr	r1, [r4, #32]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800c21e:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800c222:	4311      	orrs	r1, r2
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800c224:	6a22      	ldr	r2, [r4, #32]
 800c226:	f022 0201 	bic.w	r2, r2, #1
 800c22a:	6222      	str	r2, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800c22c:	69a2      	ldr	r2, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800c22e:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800c232:	ea42 1200 	orr.w	r2, r2, r0, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 800c236:	61a2      	str	r2, [r4, #24]
  TIMx->CCER = tmpccer;
 800c238:	6221      	str	r1, [r4, #32]
 800c23a:	e7ad      	b.n	800c198 <HAL_TIM_SlaveConfigSynchro+0x74>

0800c23c <HAL_TIM_OC_DelayElapsedCallback>:
 800c23c:	4770      	bx	lr
 800c23e:	bf00      	nop

0800c240 <HAL_TIM_IC_CaptureCallback>:
 800c240:	4770      	bx	lr
 800c242:	bf00      	nop

0800c244 <HAL_TIM_PWM_PulseFinishedCallback>:
 800c244:	4770      	bx	lr
 800c246:	bf00      	nop

0800c248 <HAL_TIM_TriggerCallback>:
 800c248:	4770      	bx	lr
 800c24a:	bf00      	nop

0800c24c <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800c24c:	6803      	ldr	r3, [r0, #0]
 800c24e:	691a      	ldr	r2, [r3, #16]
 800c250:	0791      	lsls	r1, r2, #30
{
 800c252:	b510      	push	{r4, lr}
 800c254:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800c256:	d502      	bpl.n	800c25e <HAL_TIM_IRQHandler+0x12>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 800c258:	68da      	ldr	r2, [r3, #12]
 800c25a:	0792      	lsls	r2, r2, #30
 800c25c:	d45f      	bmi.n	800c31e <HAL_TIM_IRQHandler+0xd2>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800c25e:	691a      	ldr	r2, [r3, #16]
 800c260:	0750      	lsls	r0, r2, #29
 800c262:	d502      	bpl.n	800c26a <HAL_TIM_IRQHandler+0x1e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 800c264:	68da      	ldr	r2, [r3, #12]
 800c266:	0751      	lsls	r1, r2, #29
 800c268:	d446      	bmi.n	800c2f8 <HAL_TIM_IRQHandler+0xac>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800c26a:	691a      	ldr	r2, [r3, #16]
 800c26c:	0712      	lsls	r2, r2, #28
 800c26e:	d502      	bpl.n	800c276 <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 800c270:	68da      	ldr	r2, [r3, #12]
 800c272:	0710      	lsls	r0, r2, #28
 800c274:	d42e      	bmi.n	800c2d4 <HAL_TIM_IRQHandler+0x88>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800c276:	691a      	ldr	r2, [r3, #16]
 800c278:	06d2      	lsls	r2, r2, #27
 800c27a:	d502      	bpl.n	800c282 <HAL_TIM_IRQHandler+0x36>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800c27c:	68da      	ldr	r2, [r3, #12]
 800c27e:	06d0      	lsls	r0, r2, #27
 800c280:	d418      	bmi.n	800c2b4 <HAL_TIM_IRQHandler+0x68>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800c282:	691a      	ldr	r2, [r3, #16]
 800c284:	07d1      	lsls	r1, r2, #31
 800c286:	d502      	bpl.n	800c28e <HAL_TIM_IRQHandler+0x42>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 800c288:	68da      	ldr	r2, [r3, #12]
 800c28a:	07d2      	lsls	r2, r2, #31
 800c28c:	d45d      	bmi.n	800c34a <HAL_TIM_IRQHandler+0xfe>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800c28e:	691a      	ldr	r2, [r3, #16]
 800c290:	0610      	lsls	r0, r2, #24
 800c292:	d502      	bpl.n	800c29a <HAL_TIM_IRQHandler+0x4e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 800c294:	68da      	ldr	r2, [r3, #12]
 800c296:	0611      	lsls	r1, r2, #24
 800c298:	d45f      	bmi.n	800c35a <HAL_TIM_IRQHandler+0x10e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800c29a:	691a      	ldr	r2, [r3, #16]
 800c29c:	0652      	lsls	r2, r2, #25
 800c29e:	d502      	bpl.n	800c2a6 <HAL_TIM_IRQHandler+0x5a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800c2a0:	68da      	ldr	r2, [r3, #12]
 800c2a2:	0650      	lsls	r0, r2, #25
 800c2a4:	d461      	bmi.n	800c36a <HAL_TIM_IRQHandler+0x11e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800c2a6:	691a      	ldr	r2, [r3, #16]
 800c2a8:	0691      	lsls	r1, r2, #26
 800c2aa:	d502      	bpl.n	800c2b2 <HAL_TIM_IRQHandler+0x66>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 800c2ac:	68da      	ldr	r2, [r3, #12]
 800c2ae:	0692      	lsls	r2, r2, #26
 800c2b0:	d443      	bmi.n	800c33a <HAL_TIM_IRQHandler+0xee>
}
 800c2b2:	bd10      	pop	{r4, pc}
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800c2b4:	f06f 0110 	mvn.w	r1, #16
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800c2b8:	2208      	movs	r2, #8
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800c2ba:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800c2bc:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800c2be:	69db      	ldr	r3, [r3, #28]
 800c2c0:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800c2c4:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800c2c6:	d064      	beq.n	800c392 <HAL_TIM_IRQHandler+0x146>
        HAL_TIM_IC_CaptureCallback(htim);
 800c2c8:	f7ff ffba 	bl	800c240 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c2cc:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800c2ce:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c2d0:	7722      	strb	r2, [r4, #28]
 800c2d2:	e7d6      	b.n	800c282 <HAL_TIM_IRQHandler+0x36>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800c2d4:	f06f 0108 	mvn.w	r1, #8
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800c2d8:	2204      	movs	r2, #4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800c2da:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800c2dc:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800c2de:	69db      	ldr	r3, [r3, #28]
 800c2e0:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 800c2e2:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800c2e4:	d152      	bne.n	800c38c <HAL_TIM_IRQHandler+0x140>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800c2e6:	f7ff ffa9 	bl	800c23c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800c2ea:	4620      	mov	r0, r4
 800c2ec:	f7ff ffaa 	bl	800c244 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c2f0:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800c2f2:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c2f4:	7722      	strb	r2, [r4, #28]
 800c2f6:	e7be      	b.n	800c276 <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800c2f8:	f06f 0104 	mvn.w	r1, #4
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800c2fc:	2202      	movs	r2, #2
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800c2fe:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800c300:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800c302:	699b      	ldr	r3, [r3, #24]
 800c304:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800c308:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800c30a:	d13c      	bne.n	800c386 <HAL_TIM_IRQHandler+0x13a>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800c30c:	f7ff ff96 	bl	800c23c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800c310:	4620      	mov	r0, r4
 800c312:	f7ff ff97 	bl	800c244 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c316:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800c318:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c31a:	7722      	strb	r2, [r4, #28]
 800c31c:	e7a5      	b.n	800c26a <HAL_TIM_IRQHandler+0x1e>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800c31e:	f06f 0102 	mvn.w	r1, #2
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800c322:	2201      	movs	r2, #1
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800c324:	6119      	str	r1, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800c326:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800c328:	699b      	ldr	r3, [r3, #24]
 800c32a:	079b      	lsls	r3, r3, #30
 800c32c:	d025      	beq.n	800c37a <HAL_TIM_IRQHandler+0x12e>
          HAL_TIM_IC_CaptureCallback(htim);
 800c32e:	f7ff ff87 	bl	800c240 <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c332:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800c334:	6823      	ldr	r3, [r4, #0]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c336:	7722      	strb	r2, [r4, #28]
 800c338:	e791      	b.n	800c25e <HAL_TIM_IRQHandler+0x12>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800c33a:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 800c33e:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800c340:	611a      	str	r2, [r3, #16]
}
 800c342:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 800c346:	f000 b86b 	b.w	800c420 <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800c34a:	f06f 0201 	mvn.w	r2, #1
 800c34e:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 800c350:	4620      	mov	r0, r4
 800c352:	f7f5 fc07 	bl	8001b64 <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800c356:	6823      	ldr	r3, [r4, #0]
 800c358:	e799      	b.n	800c28e <HAL_TIM_IRQHandler+0x42>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800c35a:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800c35e:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 800c360:	4620      	mov	r0, r4
 800c362:	f000 f85f 	bl	800c424 <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800c366:	6823      	ldr	r3, [r4, #0]
 800c368:	e797      	b.n	800c29a <HAL_TIM_IRQHandler+0x4e>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800c36a:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800c36e:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 800c370:	4620      	mov	r0, r4
 800c372:	f7ff ff69 	bl	800c248 <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800c376:	6823      	ldr	r3, [r4, #0]
 800c378:	e795      	b.n	800c2a6 <HAL_TIM_IRQHandler+0x5a>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800c37a:	f7ff ff5f 	bl	800c23c <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800c37e:	4620      	mov	r0, r4
 800c380:	f7ff ff60 	bl	800c244 <HAL_TIM_PWM_PulseFinishedCallback>
 800c384:	e7d5      	b.n	800c332 <HAL_TIM_IRQHandler+0xe6>
        HAL_TIM_IC_CaptureCallback(htim);
 800c386:	f7ff ff5b 	bl	800c240 <HAL_TIM_IC_CaptureCallback>
 800c38a:	e7c4      	b.n	800c316 <HAL_TIM_IRQHandler+0xca>
        HAL_TIM_IC_CaptureCallback(htim);
 800c38c:	f7ff ff58 	bl	800c240 <HAL_TIM_IC_CaptureCallback>
 800c390:	e7ae      	b.n	800c2f0 <HAL_TIM_IRQHandler+0xa4>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800c392:	f7ff ff53 	bl	800c23c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800c396:	4620      	mov	r0, r4
 800c398:	f7ff ff54 	bl	800c244 <HAL_TIM_PWM_PulseFinishedCallback>
 800c39c:	e796      	b.n	800c2cc <HAL_TIM_IRQHandler+0x80>
 800c39e:	bf00      	nop

0800c3a0 <HAL_TIMEx_MasterConfigSynchronization>:
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 800c3a0:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800c3a4:	2b01      	cmp	r3, #1
 800c3a6:	d037      	beq.n	800c418 <HAL_TIMEx_MasterConfigSynchronization+0x78>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 800c3a8:	6803      	ldr	r3, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800c3aa:	2202      	movs	r2, #2
{
 800c3ac:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800c3ae:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  tmpcr2 = htim->Instance->CR2;
 800c3b2:	685a      	ldr	r2, [r3, #4]
  tmpsmcr = htim->Instance->SMCR;

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800c3b4:	680d      	ldr	r5, [r1, #0]
  tmpsmcr = htim->Instance->SMCR;
 800c3b6:	689c      	ldr	r4, [r3, #8]
  tmpcr2 &= ~TIM_CR2_MMS;
 800c3b8:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800c3bc:	432a      	orrs	r2, r5

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 800c3be:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800c3c0:	4a16      	ldr	r2, [pc, #88]	; (800c41c <HAL_TIMEx_MasterConfigSynchronization+0x7c>)
 800c3c2:	4293      	cmp	r3, r2
 800c3c4:	d01a      	beq.n	800c3fc <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800c3c6:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800c3ca:	d017      	beq.n	800c3fc <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800c3cc:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800c3d0:	4293      	cmp	r3, r2
 800c3d2:	d013      	beq.n	800c3fc <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800c3d4:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800c3d8:	4293      	cmp	r3, r2
 800c3da:	d00f      	beq.n	800c3fc <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800c3dc:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800c3e0:	4293      	cmp	r3, r2
 800c3e2:	d00b      	beq.n	800c3fc <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800c3e4:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800c3e8:	4293      	cmp	r3, r2
 800c3ea:	d007      	beq.n	800c3fc <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800c3ec:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800c3f0:	4293      	cmp	r3, r2
 800c3f2:	d003      	beq.n	800c3fc <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800c3f4:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800c3f8:	4293      	cmp	r3, r2
 800c3fa:	d104      	bne.n	800c406 <HAL_TIMEx_MasterConfigSynchronization+0x66>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800c3fc:	684a      	ldr	r2, [r1, #4]
    tmpsmcr &= ~TIM_SMCR_MSM;
 800c3fe:	f024 0480 	bic.w	r4, r4, #128	; 0x80
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800c402:	4314      	orrs	r4, r2

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 800c404:	609c      	str	r4, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;

  __HAL_UNLOCK(htim);
 800c406:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 800c408:	2201      	movs	r2, #1
 800c40a:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800c40e:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c

  return HAL_OK;
}
 800c412:	bc30      	pop	{r4, r5}
  return HAL_OK;
 800c414:	4618      	mov	r0, r3
}
 800c416:	4770      	bx	lr
  __HAL_LOCK(htim);
 800c418:	2002      	movs	r0, #2
}
 800c41a:	4770      	bx	lr
 800c41c:	40010000 	.word	0x40010000

0800c420 <HAL_TIMEx_CommutCallback>:
 800c420:	4770      	bx	lr
 800c422:	bf00      	nop

0800c424 <HAL_TIMEx_BreakCallback>:
 800c424:	4770      	bx	lr
 800c426:	bf00      	nop

0800c428 <FMC_SDRAM_Init>:
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800c428:	680b      	ldr	r3, [r1, #0]
{
 800c42a:	b430      	push	{r4, r5}
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800c42c:	b9d3      	cbnz	r3, 800c464 <FMC_SDRAM_Init+0x3c>
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800c42e:	6803      	ldr	r3, [r0, #0]
 800c430:	684c      	ldr	r4, [r1, #4]
 800c432:	688a      	ldr	r2, [r1, #8]
 800c434:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800c438:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800c43c:	4323      	orrs	r3, r4
 800c43e:	4313      	orrs	r3, r2
 800c440:	e9d1 4203 	ldrd	r4, r2, [r1, #12]
 800c444:	4323      	orrs	r3, r4
 800c446:	4313      	orrs	r3, r2
 800c448:	e9d1 4205 	ldrd	r4, r2, [r1, #20]
 800c44c:	4323      	orrs	r3, r4
 800c44e:	e9d1 5407 	ldrd	r5, r4, [r1, #28]
 800c452:	4313      	orrs	r3, r2
 800c454:	432b      	orrs	r3, r5
 800c456:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 800c458:	4323      	orrs	r3, r4
 800c45a:	4313      	orrs	r3, r2
 800c45c:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 800c45e:	bc30      	pop	{r4, r5}
 800c460:	2000      	movs	r0, #0
 800c462:	4770      	bx	lr
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800c464:	e9d1 4207 	ldrd	r4, r2, [r1, #28]
 800c468:	6803      	ldr	r3, [r0, #0]
 800c46a:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 800c46e:	4323      	orrs	r3, r4
 800c470:	6a4c      	ldr	r4, [r1, #36]	; 0x24
 800c472:	4313      	orrs	r3, r2
 800c474:	4323      	orrs	r3, r4
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800c476:	684a      	ldr	r2, [r1, #4]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800c478:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800c47a:	6843      	ldr	r3, [r0, #4]
 800c47c:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800c480:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800c484:	4313      	orrs	r3, r2
 800c486:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800c48a:	4323      	orrs	r3, r4
 800c48c:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800c490:	4313      	orrs	r3, r2
 800c492:	432b      	orrs	r3, r5
 800c494:	698a      	ldr	r2, [r1, #24]
 800c496:	4323      	orrs	r3, r4
 800c498:	4313      	orrs	r3, r2
 800c49a:	6043      	str	r3, [r0, #4]
}
 800c49c:	bc30      	pop	{r4, r5}
 800c49e:	2000      	movs	r0, #0
 800c4a0:	4770      	bx	lr
 800c4a2:	bf00      	nop

0800c4a4 <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
 800c4a4:	b430      	push	{r4, r5}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800c4a6:	6883      	ldr	r3, [r0, #8]
  if (Bank == FMC_SDRAM_BANK1)
 800c4a8:	bb02      	cbnz	r2, 800c4ec <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800c4aa:	e9d1 2400 	ldrd	r2, r4, [r1]
 800c4ae:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800c4b2:	3c01      	subs	r4, #1
 800c4b4:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800c4b8:	3a01      	subs	r2, #1
 800c4ba:	4313      	orrs	r3, r2
 800c4bc:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800c4c0:	3c01      	subs	r4, #1
 800c4c2:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800c4c6:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800c4ca:	3a01      	subs	r2, #1
 800c4cc:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
 800c4d0:	698a      	ldr	r2, [r1, #24]
 800c4d2:	1e69      	subs	r1, r5, #1
 800c4d4:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800c4d8:	1e61      	subs	r1, r4, #1
 800c4da:	ea43 5301 	orr.w	r3, r3, r1, lsl #20
 800c4de:	3a01      	subs	r2, #1
 800c4e0:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800c4e4:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 800c4e6:	bc30      	pop	{r4, r5}
 800c4e8:	2000      	movs	r0, #0
 800c4ea:	4770      	bx	lr
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800c4ec:	68cc      	ldr	r4, [r1, #12]
 800c4ee:	694a      	ldr	r2, [r1, #20]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800c4f0:	688d      	ldr	r5, [r1, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800c4f2:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 800c4f6:	3c01      	subs	r4, #1
 800c4f8:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800c4fc:	ea43 3304 	orr.w	r3, r3, r4, lsl #12
 800c500:	3a01      	subs	r2, #1
 800c502:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 800c506:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800c508:	e9d1 2400 	ldrd	r2, r4, [r1]
 800c50c:	68c3      	ldr	r3, [r0, #12]
 800c50e:	3c01      	subs	r4, #1
 800c510:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800c514:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800c518:	3a01      	subs	r2, #1
 800c51a:	690c      	ldr	r4, [r1, #16]
 800c51c:	4313      	orrs	r3, r2
 800c51e:	698a      	ldr	r2, [r1, #24]
 800c520:	1e69      	subs	r1, r5, #1
 800c522:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800c526:	1e61      	subs	r1, r4, #1
 800c528:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800c52c:	3a01      	subs	r2, #1
 800c52e:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800c532:	60c3      	str	r3, [r0, #12]
}
 800c534:	bc30      	pop	{r4, r5}
 800c536:	2000      	movs	r0, #0
 800c538:	4770      	bx	lr
 800c53a:	bf00      	nop

0800c53c <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800c53c:	b570      	push	{r4, r5, r6, lr}
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800c53e:	680b      	ldr	r3, [r1, #0]
{
 800c540:	4615      	mov	r5, r2
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800c542:	684a      	ldr	r2, [r1, #4]
{
 800c544:	4604      	mov	r4, r0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800c546:	4313      	orrs	r3, r2
 800c548:	6900      	ldr	r0, [r0, #16]
 800c54a:	68ca      	ldr	r2, [r1, #12]
 800c54c:	0d80      	lsrs	r0, r0, #22
 800c54e:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
 800c552:	688a      	ldr	r2, [r1, #8]
 800c554:	0580      	lsls	r0, r0, #22
 800c556:	4303      	orrs	r3, r0
 800c558:	3a01      	subs	r2, #1
 800c55a:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800c55e:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 800c560:	f7fc fa32 	bl	80089c8 <HAL_GetTick>
 800c564:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800c566:	1c6b      	adds	r3, r5, #1
 800c568:	d105      	bne.n	800c576 <FMC_SDRAM_SendCommand+0x3a>
 800c56a:	69a3      	ldr	r3, [r4, #24]
 800c56c:	f013 0320 	ands.w	r3, r3, #32
 800c570:	d1fb      	bne.n	800c56a <FMC_SDRAM_SendCommand+0x2e>
      {
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 800c572:	4618      	mov	r0, r3
}
 800c574:	bd70      	pop	{r4, r5, r6, pc}
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800c576:	69a3      	ldr	r3, [r4, #24]
 800c578:	f013 0320 	ands.w	r3, r3, #32
 800c57c:	d0f9      	beq.n	800c572 <FMC_SDRAM_SendCommand+0x36>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800c57e:	b125      	cbz	r5, 800c58a <FMC_SDRAM_SendCommand+0x4e>
 800c580:	f7fc fa22 	bl	80089c8 <HAL_GetTick>
 800c584:	1b80      	subs	r0, r0, r6
 800c586:	42a8      	cmp	r0, r5
 800c588:	d9ed      	bls.n	800c566 <FMC_SDRAM_SendCommand+0x2a>
        return HAL_TIMEOUT;
 800c58a:	2003      	movs	r0, #3
}
 800c58c:	bd70      	pop	{r4, r5, r6, pc}
 800c58e:	bf00      	nop

0800c590 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800c590:	6943      	ldr	r3, [r0, #20]
 800c592:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
{
 800c596:	4602      	mov	r2, r0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800c598:	f023 033e 	bic.w	r3, r3, #62	; 0x3e
 800c59c:	ea43 0141 	orr.w	r1, r3, r1, lsl #1

  return HAL_OK;
}
 800c5a0:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800c5a2:	6151      	str	r1, [r2, #20]
}
 800c5a4:	4770      	bx	lr
 800c5a6:	bf00      	nop

0800c5a8 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 800c5a8:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 800c5aa:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800c5ae:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 800c5b0:	f002 fb00 	bl	800ebb4 <xTaskGetSchedulerState>
 800c5b4:	2801      	cmp	r0, #1
 800c5b6:	d100      	bne.n	800c5ba <SysTick_Handler+0x12>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 800c5b8:	bd08      	pop	{r3, pc}
 800c5ba:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 800c5be:	f000 bc41 	b.w	800ce44 <xPortSysTickHandler>
 800c5c2:	bf00      	nop

0800c5c4 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800c5c4:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 800c5c8:	b92b      	cbnz	r3, 800c5d6 <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 800c5ca:	4b06      	ldr	r3, [pc, #24]	; (800c5e4 <osKernelInitialize+0x20>)
 800c5cc:	6818      	ldr	r0, [r3, #0]
 800c5ce:	b928      	cbnz	r0, 800c5dc <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 800c5d0:	2201      	movs	r2, #1
 800c5d2:	601a      	str	r2, [r3, #0]
      stat = osOK;
 800c5d4:	4770      	bx	lr
    stat = osErrorISR;
 800c5d6:	f06f 0005 	mvn.w	r0, #5
 800c5da:	4770      	bx	lr
    } else {
      stat = osError;
 800c5dc:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 800c5e0:	4770      	bx	lr
 800c5e2:	bf00      	nop
 800c5e4:	20002c70 	.word	0x20002c70

0800c5e8 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 800c5e8:	b510      	push	{r4, lr}
 800c5ea:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800c5ee:	b974      	cbnz	r4, 800c60e <osKernelStart+0x26>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 800c5f0:	4b08      	ldr	r3, [pc, #32]	; (800c614 <osKernelStart+0x2c>)
 800c5f2:	681a      	ldr	r2, [r3, #0]
 800c5f4:	2a01      	cmp	r2, #1
 800c5f6:	d107      	bne.n	800c608 <osKernelStart+0x20>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800c5f8:	4907      	ldr	r1, [pc, #28]	; (800c618 <osKernelStart+0x30>)
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 800c5fa:	2202      	movs	r2, #2
 800c5fc:	77cc      	strb	r4, [r1, #31]
 800c5fe:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 800c600:	f002 f8b2 	bl	800e768 <vTaskStartScheduler>
      stat = osOK;
 800c604:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 800c606:	bd10      	pop	{r4, pc}
      stat = osError;
 800c608:	f04f 30ff 	mov.w	r0, #4294967295
}
 800c60c:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800c60e:	f06f 0005 	mvn.w	r0, #5
}
 800c612:	bd10      	pop	{r4, pc}
 800c614:	20002c70 	.word	0x20002c70
 800c618:	e000ed00 	.word	0xe000ed00

0800c61c <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800c61c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c61e:	b087      	sub	sp, #28
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800c620:	2400      	movs	r4, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800c622:	4615      	mov	r5, r2
  hTask = NULL;
 800c624:	9405      	str	r4, [sp, #20]
 800c626:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 800c62a:	b9ea      	cbnz	r2, 800c668 <osThreadNew+0x4c>
 800c62c:	b350      	cbz	r0, 800c684 <osThreadNew+0x68>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 800c62e:	b1f5      	cbz	r5, 800c66e <osThreadNew+0x52>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 800c630:	69ab      	ldr	r3, [r5, #24]
 800c632:	bb5b      	cbnz	r3, 800c68c <osThreadNew+0x70>
 800c634:	2318      	movs	r3, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800c636:	686a      	ldr	r2, [r5, #4]
 800c638:	07d2      	lsls	r2, r2, #31
 800c63a:	d423      	bmi.n	800c684 <osThreadNew+0x68>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 800c63c:	696e      	ldr	r6, [r5, #20]
 800c63e:	b34e      	cbz	r6, 800c694 <osThreadNew+0x78>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800c640:	ea4f 0c96 	mov.w	ip, r6, lsr #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800c644:	68ac      	ldr	r4, [r5, #8]
      if (attr->name != NULL) {
 800c646:	682f      	ldr	r7, [r5, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800c648:	b34c      	cbz	r4, 800c69e <osThreadNew+0x82>
 800c64a:	68ea      	ldr	r2, [r5, #12]
 800c64c:	2aab      	cmp	r2, #171	; 0xab
 800c64e:	d919      	bls.n	800c684 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800c650:	692d      	ldr	r5, [r5, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800c652:	b1bd      	cbz	r5, 800c684 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800c654:	b1b6      	cbz	r6, 800c684 <osThreadNew+0x68>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 800c656:	e9cd 5401 	strd	r5, r4, [sp, #4]
 800c65a:	9300      	str	r3, [sp, #0]
 800c65c:	4662      	mov	r2, ip
 800c65e:	460b      	mov	r3, r1
 800c660:	4639      	mov	r1, r7
 800c662:	f001 ffbf 	bl	800e5e4 <xTaskCreateStatic>
 800c666:	4604      	mov	r4, r0
      }
    }
  }

  return ((osThreadId_t)hTask);
}
 800c668:	4620      	mov	r0, r4
 800c66a:	b007      	add	sp, #28
 800c66c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c66e:	2280      	movs	r2, #128	; 0x80
    prio  = (UBaseType_t)osPriorityNormal;
 800c670:	2318      	movs	r3, #24
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800c672:	ac05      	add	r4, sp, #20
 800c674:	9300      	str	r3, [sp, #0]
 800c676:	9401      	str	r4, [sp, #4]
 800c678:	460b      	mov	r3, r1
 800c67a:	4629      	mov	r1, r5
 800c67c:	f001 ffec 	bl	800e658 <xTaskCreate>
 800c680:	2801      	cmp	r0, #1
 800c682:	d00a      	beq.n	800c69a <osThreadNew+0x7e>
        return (NULL);
 800c684:	2400      	movs	r4, #0
}
 800c686:	4620      	mov	r0, r4
 800c688:	b007      	add	sp, #28
 800c68a:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800c68c:	1e5c      	subs	r4, r3, #1
 800c68e:	2c37      	cmp	r4, #55	; 0x37
 800c690:	d9d1      	bls.n	800c636 <osThreadNew+0x1a>
 800c692:	e7f7      	b.n	800c684 <osThreadNew+0x68>
    stack = configMINIMAL_STACK_SIZE;
 800c694:	f04f 0c80 	mov.w	ip, #128	; 0x80
 800c698:	e7d4      	b.n	800c644 <osThreadNew+0x28>
  return ((osThreadId_t)hTask);
 800c69a:	9c05      	ldr	r4, [sp, #20]
 800c69c:	e7e4      	b.n	800c668 <osThreadNew+0x4c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800c69e:	68ee      	ldr	r6, [r5, #12]
 800c6a0:	2e00      	cmp	r6, #0
 800c6a2:	d1e1      	bne.n	800c668 <osThreadNew+0x4c>
 800c6a4:	692d      	ldr	r5, [r5, #16]
 800c6a6:	2d00      	cmp	r5, #0
 800c6a8:	d1de      	bne.n	800c668 <osThreadNew+0x4c>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800c6aa:	fa1f f28c 	uxth.w	r2, ip
 800c6ae:	463d      	mov	r5, r7
 800c6b0:	e7df      	b.n	800c672 <osThreadNew+0x56>
 800c6b2:	bf00      	nop

0800c6b4 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 800c6b4:	b510      	push	{r4, lr}
 800c6b6:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800c6ba:	b92c      	cbnz	r4, 800c6c8 <osDelay+0x14>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 800c6bc:	b900      	cbnz	r0, 800c6c0 <osDelay+0xc>
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
 800c6be:	bd10      	pop	{r4, pc}
      vTaskDelay(ticks);
 800c6c0:	f001 fffc 	bl	800e6bc <vTaskDelay>
    stat = osOK;
 800c6c4:	4620      	mov	r0, r4
}
 800c6c6:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800c6c8:	f06f 0005 	mvn.w	r0, #5
}
 800c6cc:	bd10      	pop	{r4, pc}
 800c6ce:	bf00      	nop

0800c6d0 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 800c6d0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c6d2:	b083      	sub	sp, #12
 800c6d4:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800c6d8:	b9fe      	cbnz	r6, 800c71a <osSemaphoreNew+0x4a>
 800c6da:	b1f0      	cbz	r0, 800c71a <osSemaphoreNew+0x4a>
 800c6dc:	4288      	cmp	r0, r1
 800c6de:	460f      	mov	r7, r1
 800c6e0:	d31b      	bcc.n	800c71a <osSemaphoreNew+0x4a>
    mem = -1;

    if (attr != NULL) {
 800c6e2:	4615      	mov	r5, r2
 800c6e4:	b192      	cbz	r2, 800c70c <osSemaphoreNew+0x3c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800c6e6:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
 800c6ea:	b1d2      	cbz	r2, 800c722 <osSemaphoreNew+0x52>
 800c6ec:	2b4f      	cmp	r3, #79	; 0x4f
 800c6ee:	d914      	bls.n	800c71a <osSemaphoreNew+0x4a>
    else {
      mem = 0;
    }

    if (mem != -1) {
      if (max_count == 1U) {
 800c6f0:	2801      	cmp	r0, #1
 800c6f2:	d038      	beq.n	800c766 <osSemaphoreNew+0x96>
        }
      }
      else {
        if (mem == 1) {
          #if (configSUPPORT_STATIC_ALLOCATION == 1)
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 800c6f4:	f000 fd8c 	bl	800d210 <xQueueCreateCountingSemaphoreStatic>
          #endif
        }
      }
      
      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hSemaphore != NULL) {
 800c6f8:	4604      	mov	r4, r0
 800c6fa:	b170      	cbz	r0, 800c71a <osSemaphoreNew+0x4a>
        if (attr != NULL) {
          name = attr->name;
 800c6fc:	682d      	ldr	r5, [r5, #0]
        } else {
          name = NULL;
        }
        vQueueAddToRegistry (hSemaphore, name);
 800c6fe:	4620      	mov	r0, r4
 800c700:	4629      	mov	r1, r5
 800c702:	f001 fc37 	bl	800df74 <vQueueAddToRegistry>
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800c706:	4620      	mov	r0, r4
 800c708:	b003      	add	sp, #12
 800c70a:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (max_count == 1U) {
 800c70c:	2801      	cmp	r0, #1
 800c70e:	d012      	beq.n	800c736 <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800c710:	f000 fdde 	bl	800d2d0 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800c714:	4604      	mov	r4, r0
 800c716:	2800      	cmp	r0, #0
 800c718:	d1f1      	bne.n	800c6fe <osSemaphoreNew+0x2e>
            hSemaphore = NULL;
 800c71a:	2400      	movs	r4, #0
}
 800c71c:	4620      	mov	r0, r4
 800c71e:	b003      	add	sp, #12
 800c720:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800c722:	2b00      	cmp	r3, #0
 800c724:	d1f9      	bne.n	800c71a <osSemaphoreNew+0x4a>
      if (max_count == 1U) {
 800c726:	2801      	cmp	r0, #1
 800c728:	d005      	beq.n	800c736 <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800c72a:	f000 fdd1 	bl	800d2d0 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800c72e:	4604      	mov	r4, r0
 800c730:	2800      	cmp	r0, #0
 800c732:	d1e3      	bne.n	800c6fc <osSemaphoreNew+0x2c>
 800c734:	e7f1      	b.n	800c71a <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinary();
 800c736:	2203      	movs	r2, #3
 800c738:	2100      	movs	r1, #0
 800c73a:	2001      	movs	r0, #1
 800c73c:	f000 fd26 	bl	800d18c <xQueueGenericCreate>
 800c740:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 800c742:	2c00      	cmp	r4, #0
 800c744:	d0e9      	beq.n	800c71a <osSemaphoreNew+0x4a>
 800c746:	b917      	cbnz	r7, 800c74e <osSemaphoreNew+0x7e>
        if (attr != NULL) {
 800c748:	2d00      	cmp	r5, #0
 800c74a:	d1d7      	bne.n	800c6fc <osSemaphoreNew+0x2c>
 800c74c:	e7d7      	b.n	800c6fe <osSemaphoreNew+0x2e>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800c74e:	2300      	movs	r3, #0
 800c750:	461a      	mov	r2, r3
 800c752:	4619      	mov	r1, r3
 800c754:	4620      	mov	r0, r4
 800c756:	f000 fe01 	bl	800d35c <xQueueGenericSend>
 800c75a:	2801      	cmp	r0, #1
 800c75c:	d0f4      	beq.n	800c748 <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 800c75e:	4620      	mov	r0, r4
 800c760:	f001 fbc2 	bl	800dee8 <vQueueDelete>
 800c764:	e7d9      	b.n	800c71a <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 800c766:	4613      	mov	r3, r2
 800c768:	2203      	movs	r2, #3
 800c76a:	9200      	str	r2, [sp, #0]
 800c76c:	4631      	mov	r1, r6
 800c76e:	4632      	mov	r2, r6
 800c770:	f000 fc9e 	bl	800d0b0 <xQueueGenericCreateStatic>
 800c774:	4604      	mov	r4, r0
 800c776:	e7e4      	b.n	800c742 <osSemaphoreNew+0x72>

0800c778 <osSemaphoreAcquire>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800c778:	b370      	cbz	r0, 800c7d8 <osSemaphoreAcquire+0x60>
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 800c77a:	b510      	push	{r4, lr}
 800c77c:	460c      	mov	r4, r1
 800c77e:	b082      	sub	sp, #8
 800c780:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800c784:	b1c3      	cbz	r3, 800c7b8 <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
 800c786:	bb21      	cbnz	r1, 800c7d2 <osSemaphoreAcquire+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800c788:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800c78a:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800c78c:	f001 fb2a 	bl	800dde4 <xQueueReceiveFromISR>
 800c790:	2801      	cmp	r0, #1
 800c792:	d11a      	bne.n	800c7ca <osSemaphoreAcquire+0x52>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800c794:	9b01      	ldr	r3, [sp, #4]
 800c796:	b913      	cbnz	r3, 800c79e <osSemaphoreAcquire+0x26>
  stat = osOK;
 800c798:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800c79a:	b002      	add	sp, #8
 800c79c:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 800c79e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800c7a2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800c7a6:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800c7aa:	f3bf 8f4f 	dsb	sy
 800c7ae:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800c7b2:	4620      	mov	r0, r4
}
 800c7b4:	b002      	add	sp, #8
 800c7b6:	bd10      	pop	{r4, pc}
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800c7b8:	f001 f98a 	bl	800dad0 <xQueueSemaphoreTake>
 800c7bc:	2801      	cmp	r0, #1
 800c7be:	d0eb      	beq.n	800c798 <osSemaphoreAcquire+0x20>
      if (timeout != 0U) {
 800c7c0:	b11c      	cbz	r4, 800c7ca <osSemaphoreAcquire+0x52>
        stat = osErrorTimeout;
 800c7c2:	f06f 0001 	mvn.w	r0, #1
}
 800c7c6:	b002      	add	sp, #8
 800c7c8:	bd10      	pop	{r4, pc}
        stat = osErrorResource;
 800c7ca:	f06f 0002 	mvn.w	r0, #2
}
 800c7ce:	b002      	add	sp, #8
 800c7d0:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
 800c7d2:	f06f 0003 	mvn.w	r0, #3
 800c7d6:	e7e0      	b.n	800c79a <osSemaphoreAcquire+0x22>
 800c7d8:	f06f 0003 	mvn.w	r0, #3
}
 800c7dc:	4770      	bx	lr
 800c7de:	bf00      	nop

0800c7e0 <osSemaphoreRelease>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800c7e0:	b330      	cbz	r0, 800c830 <osSemaphoreRelease+0x50>
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 800c7e2:	b510      	push	{r4, lr}
 800c7e4:	b082      	sub	sp, #8
 800c7e6:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800c7ea:	b1ab      	cbz	r3, 800c818 <osSemaphoreRelease+0x38>
    yield = pdFALSE;
 800c7ec:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800c7ee:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 800c7f0:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800c7f2:	f000 ff97 	bl	800d724 <xQueueGiveFromISR>
 800c7f6:	2801      	cmp	r0, #1
 800c7f8:	d117      	bne.n	800c82a <osSemaphoreRelease+0x4a>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 800c7fa:	9b01      	ldr	r3, [sp, #4]
 800c7fc:	b193      	cbz	r3, 800c824 <osSemaphoreRelease+0x44>
 800c7fe:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800c802:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800c806:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800c80a:	f3bf 8f4f 	dsb	sy
 800c80e:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800c812:	4620      	mov	r0, r4
      stat = osErrorResource;
    }
  }

  return (stat);
}
 800c814:	b002      	add	sp, #8
 800c816:	bd10      	pop	{r4, pc}
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800c818:	461a      	mov	r2, r3
 800c81a:	4619      	mov	r1, r3
 800c81c:	f000 fd9e 	bl	800d35c <xQueueGenericSend>
 800c820:	2801      	cmp	r0, #1
 800c822:	d102      	bne.n	800c82a <osSemaphoreRelease+0x4a>
  stat = osOK;
 800c824:	2000      	movs	r0, #0
}
 800c826:	b002      	add	sp, #8
 800c828:	bd10      	pop	{r4, pc}
      stat = osErrorResource;
 800c82a:	f06f 0002 	mvn.w	r0, #2
 800c82e:	e7fa      	b.n	800c826 <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
 800c830:	f06f 0003 	mvn.w	r0, #3
}
 800c834:	4770      	bx	lr
 800c836:	bf00      	nop

0800c838 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 800c838:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c83a:	b085      	sub	sp, #20
 800c83c:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800c840:	b987      	cbnz	r7, 800c864 <osMessageQueueNew+0x2c>
 800c842:	4605      	mov	r5, r0
 800c844:	b170      	cbz	r0, 800c864 <osMessageQueueNew+0x2c>
 800c846:	b169      	cbz	r1, 800c864 <osMessageQueueNew+0x2c>
    mem = -1;

    if (attr != NULL) {
 800c848:	4614      	mov	r4, r2
 800c84a:	b1ea      	cbz	r2, 800c888 <osMessageQueueNew+0x50>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800c84c:	6893      	ldr	r3, [r2, #8]
 800c84e:	b163      	cbz	r3, 800c86a <osMessageQueueNew+0x32>
 800c850:	68d2      	ldr	r2, [r2, #12]
 800c852:	2a4f      	cmp	r2, #79	; 0x4f
 800c854:	d906      	bls.n	800c864 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800c856:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800c858:	b122      	cbz	r2, 800c864 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800c85a:	6966      	ldr	r6, [r4, #20]
 800c85c:	fb01 f505 	mul.w	r5, r1, r5
 800c860:	42ae      	cmp	r6, r5
 800c862:	d21c      	bcs.n	800c89e <osMessageQueueNew+0x66>
  hQueue = NULL;
 800c864:	2000      	movs	r0, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 800c866:	b005      	add	sp, #20
 800c868:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 800c86a:	68d3      	ldr	r3, [r2, #12]
 800c86c:	2b00      	cmp	r3, #0
 800c86e:	d1f9      	bne.n	800c864 <osMessageQueueNew+0x2c>
 800c870:	6913      	ldr	r3, [r2, #16]
 800c872:	2b00      	cmp	r3, #0
 800c874:	d1f6      	bne.n	800c864 <osMessageQueueNew+0x2c>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 800c876:	6952      	ldr	r2, [r2, #20]
 800c878:	2a00      	cmp	r2, #0
 800c87a:	d1f3      	bne.n	800c864 <osMessageQueueNew+0x2c>
          hQueue = xQueueCreate (msg_count, msg_size);
 800c87c:	f000 fc86 	bl	800d18c <xQueueGenericCreate>
    if (hQueue != NULL) {
 800c880:	2800      	cmp	r0, #0
 800c882:	d0ef      	beq.n	800c864 <osMessageQueueNew+0x2c>
        name = attr->name;
 800c884:	6824      	ldr	r4, [r4, #0]
 800c886:	e003      	b.n	800c890 <osMessageQueueNew+0x58>
          hQueue = xQueueCreate (msg_count, msg_size);
 800c888:	f000 fc80 	bl	800d18c <xQueueGenericCreate>
    if (hQueue != NULL) {
 800c88c:	2800      	cmp	r0, #0
 800c88e:	d0e9      	beq.n	800c864 <osMessageQueueNew+0x2c>
      vQueueAddToRegistry (hQueue, name);
 800c890:	4621      	mov	r1, r4
 800c892:	9003      	str	r0, [sp, #12]
 800c894:	f001 fb6e 	bl	800df74 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 800c898:	9803      	ldr	r0, [sp, #12]
}
 800c89a:	b005      	add	sp, #20
 800c89c:	bdf0      	pop	{r4, r5, r6, r7, pc}
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800c89e:	9700      	str	r7, [sp, #0]
 800c8a0:	f000 fc06 	bl	800d0b0 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 800c8a4:	2800      	cmp	r0, #0
 800c8a6:	d1ed      	bne.n	800c884 <osMessageQueueNew+0x4c>
 800c8a8:	e7dc      	b.n	800c864 <osMessageQueueNew+0x2c>
 800c8aa:	bf00      	nop

0800c8ac <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 800c8ac:	b570      	push	{r4, r5, r6, lr}
 800c8ae:	461c      	mov	r4, r3
 800c8b0:	b082      	sub	sp, #8
 800c8b2:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800c8b6:	b1be      	cbz	r6, 800c8e8 <osMessageQueuePut+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800c8b8:	b350      	cbz	r0, 800c910 <osMessageQueuePut+0x64>
 800c8ba:	b349      	cbz	r1, 800c910 <osMessageQueuePut+0x64>
 800c8bc:	bb43      	cbnz	r3, 800c910 <osMessageQueuePut+0x64>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800c8be:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800c8c0:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800c8c2:	f000 fec9 	bl	800d658 <xQueueGenericSendFromISR>
 800c8c6:	2801      	cmp	r0, #1
 800c8c8:	d11e      	bne.n	800c908 <osMessageQueuePut+0x5c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800c8ca:	9b01      	ldr	r3, [sp, #4]
 800c8cc:	b1cb      	cbz	r3, 800c902 <osMessageQueuePut+0x56>
 800c8ce:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800c8d2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800c8d6:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800c8da:	f3bf 8f4f 	dsb	sy
 800c8de:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800c8e2:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800c8e4:	b002      	add	sp, #8
 800c8e6:	bd70      	pop	{r4, r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800c8e8:	b190      	cbz	r0, 800c910 <osMessageQueuePut+0x64>
 800c8ea:	b189      	cbz	r1, 800c910 <osMessageQueuePut+0x64>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800c8ec:	4633      	mov	r3, r6
 800c8ee:	4622      	mov	r2, r4
 800c8f0:	f000 fd34 	bl	800d35c <xQueueGenericSend>
 800c8f4:	2801      	cmp	r0, #1
 800c8f6:	d004      	beq.n	800c902 <osMessageQueuePut+0x56>
        if (timeout != 0U) {
 800c8f8:	b134      	cbz	r4, 800c908 <osMessageQueuePut+0x5c>
          stat = osErrorTimeout;
 800c8fa:	f06f 0001 	mvn.w	r0, #1
}
 800c8fe:	b002      	add	sp, #8
 800c900:	bd70      	pop	{r4, r5, r6, pc}
  stat = osOK;
 800c902:	2000      	movs	r0, #0
}
 800c904:	b002      	add	sp, #8
 800c906:	bd70      	pop	{r4, r5, r6, pc}
          stat = osErrorResource;
 800c908:	f06f 0002 	mvn.w	r0, #2
}
 800c90c:	b002      	add	sp, #8
 800c90e:	bd70      	pop	{r4, r5, r6, pc}
      stat = osErrorParameter;
 800c910:	f06f 0003 	mvn.w	r0, #3
 800c914:	e7e6      	b.n	800c8e4 <osMessageQueuePut+0x38>
 800c916:	bf00      	nop

0800c918 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800c918:	b530      	push	{r4, r5, lr}
 800c91a:	461c      	mov	r4, r3
 800c91c:	b083      	sub	sp, #12
 800c91e:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800c922:	b1bb      	cbz	r3, 800c954 <osMessageQueueGet+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800c924:	b348      	cbz	r0, 800c97a <osMessageQueueGet+0x62>
 800c926:	b341      	cbz	r1, 800c97a <osMessageQueueGet+0x62>
 800c928:	bb3c      	cbnz	r4, 800c97a <osMessageQueueGet+0x62>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800c92a:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800c92c:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800c92e:	f001 fa59 	bl	800dde4 <xQueueReceiveFromISR>
 800c932:	2801      	cmp	r0, #1
 800c934:	d11d      	bne.n	800c972 <osMessageQueueGet+0x5a>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800c936:	9b01      	ldr	r3, [sp, #4]
 800c938:	b1c3      	cbz	r3, 800c96c <osMessageQueueGet+0x54>
 800c93a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800c93e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800c942:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800c946:	f3bf 8f4f 	dsb	sy
 800c94a:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800c94e:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800c950:	b003      	add	sp, #12
 800c952:	bd30      	pop	{r4, r5, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800c954:	b188      	cbz	r0, 800c97a <osMessageQueueGet+0x62>
 800c956:	b181      	cbz	r1, 800c97a <osMessageQueueGet+0x62>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800c958:	4622      	mov	r2, r4
 800c95a:	f000 ff3b 	bl	800d7d4 <xQueueReceive>
 800c95e:	2801      	cmp	r0, #1
 800c960:	d004      	beq.n	800c96c <osMessageQueueGet+0x54>
        if (timeout != 0U) {
 800c962:	b134      	cbz	r4, 800c972 <osMessageQueueGet+0x5a>
          stat = osErrorTimeout;
 800c964:	f06f 0001 	mvn.w	r0, #1
}
 800c968:	b003      	add	sp, #12
 800c96a:	bd30      	pop	{r4, r5, pc}
  stat = osOK;
 800c96c:	2000      	movs	r0, #0
}
 800c96e:	b003      	add	sp, #12
 800c970:	bd30      	pop	{r4, r5, pc}
          stat = osErrorResource;
 800c972:	f06f 0002 	mvn.w	r0, #2
}
 800c976:	b003      	add	sp, #12
 800c978:	bd30      	pop	{r4, r5, pc}
      stat = osErrorParameter;
 800c97a:	f06f 0003 	mvn.w	r0, #3
 800c97e:	e7e7      	b.n	800c950 <osMessageQueueGet+0x38>

0800c980 <osMessageQueueGetCount>:
 800c980:	b130      	cbz	r0, 800c990 <osMessageQueueGetCount+0x10>
 800c982:	f3ef 8305 	mrs	r3, IPSR
 800c986:	b10b      	cbz	r3, 800c98c <osMessageQueueGetCount+0xc>
 800c988:	f001 baa0 	b.w	800decc <uxQueueMessagesWaitingFromISR>
 800c98c:	f001 ba88 	b.w	800dea0 <uxQueueMessagesWaiting>
 800c990:	4770      	bx	lr
 800c992:	bf00      	nop

0800c994 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800c994:	4b04      	ldr	r3, [pc, #16]	; (800c9a8 <vApplicationGetIdleTaskMemory+0x14>)
 800c996:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
 800c998:	b410      	push	{r4}
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800c99a:	2380      	movs	r3, #128	; 0x80
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 800c99c:	4c03      	ldr	r4, [pc, #12]	; (800c9ac <vApplicationGetIdleTaskMemory+0x18>)
 800c99e:	600c      	str	r4, [r1, #0]
}
 800c9a0:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800c9a4:	6013      	str	r3, [r2, #0]
}
 800c9a6:	4770      	bx	lr
 800c9a8:	20002bc4 	.word	0x20002bc4
 800c9ac:	200029c4 	.word	0x200029c4

0800c9b0 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 800c9b0:	4b05      	ldr	r3, [pc, #20]	; (800c9c8 <vApplicationGetTimerTaskMemory+0x18>)
 800c9b2:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
 800c9b4:	b410      	push	{r4}
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800c9b6:	f44f 7380 	mov.w	r3, #256	; 0x100
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 800c9ba:	4c04      	ldr	r4, [pc, #16]	; (800c9cc <vApplicationGetTimerTaskMemory+0x1c>)
 800c9bc:	600c      	str	r4, [r1, #0]
}
 800c9be:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800c9c2:	6013      	str	r3, [r2, #0]
}
 800c9c4:	4770      	bx	lr
 800c9c6:	bf00      	nop
 800c9c8:	20003074 	.word	0x20003074
 800c9cc:	20002c74 	.word	0x20002c74

0800c9d0 <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
 800c9d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c9d4:	4605      	mov	r5, r0
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;

	vTaskSuspendAll();
 800c9d6:	f001 ff43 	bl	800e860 <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
 800c9da:	4a54      	ldr	r2, [pc, #336]	; (800cb2c <pvPortMalloc+0x15c>)
 800c9dc:	6816      	ldr	r6, [r2, #0]
 800c9de:	2e00      	cmp	r6, #0
 800c9e0:	d06e      	beq.n	800cac0 <pvPortMalloc+0xf0>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800c9e2:	4b53      	ldr	r3, [pc, #332]	; (800cb30 <pvPortMalloc+0x160>)
 800c9e4:	681f      	ldr	r7, [r3, #0]
 800c9e6:	423d      	tst	r5, r7
 800c9e8:	d12e      	bne.n	800ca48 <pvPortMalloc+0x78>
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
 800c9ea:	b36d      	cbz	r5, 800ca48 <pvPortMalloc+0x78>
			{
				xWantedSize += xHeapStructSize;
 800c9ec:	f105 0408 	add.w	r4, r5, #8

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800c9f0:	076d      	lsls	r5, r5, #29
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800c9f2:	bf1c      	itt	ne
 800c9f4:	f024 0407 	bicne.w	r4, r4, #7
 800c9f8:	3408      	addne	r4, #8
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800c9fa:	b32c      	cbz	r4, 800ca48 <pvPortMalloc+0x78>
 800c9fc:	f8df c144 	ldr.w	ip, [pc, #324]	; 800cb44 <pvPortMalloc+0x174>
 800ca00:	f8dc 5000 	ldr.w	r5, [ip]
 800ca04:	42a5      	cmp	r5, r4
 800ca06:	d31f      	bcc.n	800ca48 <pvPortMalloc+0x78>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
				pxBlock = xStart.pxNextFreeBlock;
 800ca08:	484a      	ldr	r0, [pc, #296]	; (800cb34 <pvPortMalloc+0x164>)
 800ca0a:	6803      	ldr	r3, [r0, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800ca0c:	e003      	b.n	800ca16 <pvPortMalloc+0x46>
 800ca0e:	681a      	ldr	r2, [r3, #0]
 800ca10:	b122      	cbz	r2, 800ca1c <pvPortMalloc+0x4c>
 800ca12:	4618      	mov	r0, r3
 800ca14:	4613      	mov	r3, r2
 800ca16:	6859      	ldr	r1, [r3, #4]
 800ca18:	42a1      	cmp	r1, r4
 800ca1a:	d3f8      	bcc.n	800ca0e <pvPortMalloc+0x3e>
					pxBlock = pxBlock->pxNextFreeBlock;
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
 800ca1c:	42b3      	cmp	r3, r6
 800ca1e:	d013      	beq.n	800ca48 <pvPortMalloc+0x78>
				{
					/* Return the memory space pointed to - jumping over the
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800ca20:	4698      	mov	r8, r3
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800ca22:	1b0a      	subs	r2, r1, r4
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800ca24:	f858 eb08 	ldr.w	lr, [r8], #8
 800ca28:	f8c0 e000 	str.w	lr, [r0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800ca2c:	2a10      	cmp	r2, #16
 800ca2e:	d929      	bls.n	800ca84 <pvPortMalloc+0xb4>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800ca30:	1919      	adds	r1, r3, r4
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800ca32:	0748      	lsls	r0, r1, #29
 800ca34:	d00f      	beq.n	800ca56 <pvPortMalloc+0x86>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 800ca36:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ca3a:	f383 8811 	msr	BASEPRI, r3
 800ca3e:	f3bf 8f6f 	isb	sy
 800ca42:	f3bf 8f4f 	dsb	sy
 800ca46:	e7fe      	b.n	800ca46 <pvPortMalloc+0x76>
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
 800ca48:	f001 ff12 	bl	800e870 <xTaskResumeAll>
 800ca4c:	f04f 0800 	mov.w	r8, #0
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
	return pvReturn;
}
 800ca50:	4640      	mov	r0, r8
 800ca52:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800ca56:	604a      	str	r2, [r1, #4]
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800ca58:	4a36      	ldr	r2, [pc, #216]	; (800cb34 <pvPortMalloc+0x164>)
						pxBlock->xBlockSize = xWantedSize;
 800ca5a:	605c      	str	r4, [r3, #4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800ca5c:	4614      	mov	r4, r2
 800ca5e:	6812      	ldr	r2, [r2, #0]
 800ca60:	4291      	cmp	r1, r2
 800ca62:	d8fb      	bhi.n	800ca5c <pvPortMalloc+0x8c>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800ca64:	6860      	ldr	r0, [r4, #4]
 800ca66:	eb04 0e00 	add.w	lr, r4, r0
 800ca6a:	4571      	cmp	r1, lr
 800ca6c:	d04b      	beq.n	800cb06 <pvPortMalloc+0x136>
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800ca6e:	f8d1 e004 	ldr.w	lr, [r1, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800ca72:	eb01 000e 	add.w	r0, r1, lr
 800ca76:	4282      	cmp	r2, r0
 800ca78:	d051      	beq.n	800cb1e <pvPortMalloc+0x14e>

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 800ca7a:	428c      	cmp	r4, r1
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800ca7c:	600a      	str	r2, [r1, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800ca7e:	bf18      	it	ne
 800ca80:	6021      	strne	r1, [r4, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800ca82:	6859      	ldr	r1, [r3, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800ca84:	4a2c      	ldr	r2, [pc, #176]	; (800cb38 <pvPortMalloc+0x168>)
 800ca86:	6810      	ldr	r0, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800ca88:	1a6d      	subs	r5, r5, r1
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800ca8a:	4285      	cmp	r5, r0
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800ca8c:	bf38      	it	cc
 800ca8e:	6015      	strcc	r5, [r2, #0]
					xNumberOfSuccessfulAllocations++;
 800ca90:	4a2a      	ldr	r2, [pc, #168]	; (800cb3c <pvPortMalloc+0x16c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800ca92:	f8cc 5000 	str.w	r5, [ip]
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800ca96:	4339      	orrs	r1, r7
					pxBlock->pxNextFreeBlock = NULL;
 800ca98:	2000      	movs	r0, #0
 800ca9a:	e9c3 0100 	strd	r0, r1, [r3]
					xNumberOfSuccessfulAllocations++;
 800ca9e:	6813      	ldr	r3, [r2, #0]
 800caa0:	3301      	adds	r3, #1
 800caa2:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 800caa4:	f001 fee4 	bl	800e870 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800caa8:	f018 0f07 	tst.w	r8, #7
 800caac:	d0d0      	beq.n	800ca50 <pvPortMalloc+0x80>
 800caae:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cab2:	f383 8811 	msr	BASEPRI, r3
 800cab6:	f3bf 8f6f 	isb	sy
 800caba:	f3bf 8f4f 	dsb	sy
 800cabe:	e7fe      	b.n	800cabe <pvPortMalloc+0xee>
	uxAddress = ( size_t ) ucHeap;
 800cac0:	4b1f      	ldr	r3, [pc, #124]	; (800cb40 <pvPortMalloc+0x170>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800cac2:	075e      	lsls	r6, r3, #29
 800cac4:	d118      	bne.n	800caf8 <pvPortMalloc+0x128>
 800cac6:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
 800caca:	4619      	mov	r1, r3
	uxAddress -= xHeapStructSize;
 800cacc:	3e08      	subs	r6, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800cace:	f026 0607 	bic.w	r6, r6, #7
	pxEnd = ( void * ) uxAddress;
 800cad2:	6016      	str	r6, [r2, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800cad4:	4a18      	ldr	r2, [pc, #96]	; (800cb38 <pvPortMalloc+0x168>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800cad6:	4817      	ldr	r0, [pc, #92]	; (800cb34 <pvPortMalloc+0x164>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800cad8:	4c15      	ldr	r4, [pc, #84]	; (800cb30 <pvPortMalloc+0x160>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800cada:	6001      	str	r1, [r0, #0]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800cadc:	1af3      	subs	r3, r6, r3
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800cade:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800cae0:	4a18      	ldr	r2, [pc, #96]	; (800cb44 <pvPortMalloc+0x174>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800cae2:	f04f 4700 	mov.w	r7, #2147483648	; 0x80000000
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800cae6:	6013      	str	r3, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
 800cae8:	2200      	movs	r2, #0
 800caea:	6042      	str	r2, [r0, #4]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800caec:	6027      	str	r7, [r4, #0]
	pxEnd->pxNextFreeBlock = NULL;
 800caee:	e9c6 2200 	strd	r2, r2, [r6]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800caf2:	e9c1 6300 	strd	r6, r3, [r1]
}
 800caf6:	e776      	b.n	800c9e6 <pvPortMalloc+0x16>
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800caf8:	1dd9      	adds	r1, r3, #7
	pucAlignedHeap = ( uint8_t * ) uxAddress;
 800cafa:	f021 0107 	bic.w	r1, r1, #7
 800cafe:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800cb02:	460b      	mov	r3, r1
 800cb04:	e7e2      	b.n	800cacc <pvPortMalloc+0xfc>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800cb06:	6849      	ldr	r1, [r1, #4]
 800cb08:	eb00 0e01 	add.w	lr, r0, r1
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800cb0c:	eb04 010e 	add.w	r1, r4, lr
 800cb10:	428a      	cmp	r2, r1
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800cb12:	f8c4 e004 	str.w	lr, [r4, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800cb16:	d001      	beq.n	800cb1c <pvPortMalloc+0x14c>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800cb18:	6022      	str	r2, [r4, #0]
	if( pxIterator != pxBlockToInsert )
 800cb1a:	e7b2      	b.n	800ca82 <pvPortMalloc+0xb2>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800cb1c:	4621      	mov	r1, r4
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800cb1e:	42b2      	cmp	r2, r6
 800cb20:	d0ab      	beq.n	800ca7a <pvPortMalloc+0xaa>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800cb22:	6850      	ldr	r0, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800cb24:	6812      	ldr	r2, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800cb26:	4470      	add	r0, lr
 800cb28:	6048      	str	r0, [r1, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800cb2a:	e7a6      	b.n	800ca7a <pvPortMalloc+0xaa>
 800cb2c:	20003120 	.word	0x20003120
 800cb30:	20013124 	.word	0x20013124
 800cb34:	20013138 	.word	0x20013138
 800cb38:	2001312c 	.word	0x2001312c
 800cb3c:	20013130 	.word	0x20013130
 800cb40:	20003124 	.word	0x20003124
 800cb44:	20013128 	.word	0x20013128

0800cb48 <vPortFree>:
	if( pv != NULL )
 800cb48:	b1d0      	cbz	r0, 800cb80 <vPortFree+0x38>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800cb4a:	4a2c      	ldr	r2, [pc, #176]	; (800cbfc <vPortFree+0xb4>)
 800cb4c:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800cb50:	6812      	ldr	r2, [r2, #0]
 800cb52:	4213      	tst	r3, r2
 800cb54:	d00b      	beq.n	800cb6e <vPortFree+0x26>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 800cb56:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800cb5a:	b191      	cbz	r1, 800cb82 <vPortFree+0x3a>
 800cb5c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cb60:	f383 8811 	msr	BASEPRI, r3
 800cb64:	f3bf 8f6f 	isb	sy
 800cb68:	f3bf 8f4f 	dsb	sy
 800cb6c:	e7fe      	b.n	800cb6c <vPortFree+0x24>
 800cb6e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cb72:	f383 8811 	msr	BASEPRI, r3
 800cb76:	f3bf 8f6f 	isb	sy
 800cb7a:	f3bf 8f4f 	dsb	sy
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800cb7e:	e7fe      	b.n	800cb7e <vPortFree+0x36>
 800cb80:	4770      	bx	lr
{
 800cb82:	b510      	push	{r4, lr}
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800cb84:	ea23 0302 	bic.w	r3, r3, r2
{
 800cb88:	b082      	sub	sp, #8
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800cb8a:	f840 3c04 	str.w	r3, [r0, #-4]
					xFreeBytesRemaining += pxLink->xBlockSize;
 800cb8e:	4c1c      	ldr	r4, [pc, #112]	; (800cc00 <vPortFree+0xb8>)
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800cb90:	9001      	str	r0, [sp, #4]
				vTaskSuspendAll();
 800cb92:	f001 fe65 	bl	800e860 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 800cb96:	9801      	ldr	r0, [sp, #4]
 800cb98:	6822      	ldr	r2, [r4, #0]
 800cb9a:	f850 1c04 	ldr.w	r1, [r0, #-4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800cb9e:	4b19      	ldr	r3, [pc, #100]	; (800cc04 <vPortFree+0xbc>)
					xFreeBytesRemaining += pxLink->xBlockSize;
 800cba0:	440a      	add	r2, r1
		puc -= xHeapStructSize;
 800cba2:	3808      	subs	r0, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 800cba4:	6022      	str	r2, [r4, #0]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800cba6:	461a      	mov	r2, r3
 800cba8:	681b      	ldr	r3, [r3, #0]
 800cbaa:	4298      	cmp	r0, r3
 800cbac:	d8fb      	bhi.n	800cba6 <vPortFree+0x5e>
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800cbae:	6854      	ldr	r4, [r2, #4]
 800cbb0:	eb02 0e04 	add.w	lr, r2, r4
 800cbb4:	4570      	cmp	r0, lr
 800cbb6:	d010      	beq.n	800cbda <vPortFree+0x92>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800cbb8:	eb00 0c01 	add.w	ip, r0, r1
 800cbbc:	4563      	cmp	r3, ip
 800cbbe:	d014      	beq.n	800cbea <vPortFree+0xa2>
	if( pxIterator != pxBlockToInsert )
 800cbc0:	4282      	cmp	r2, r0
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800cbc2:	6003      	str	r3, [r0, #0]
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800cbc4:	bf18      	it	ne
 800cbc6:	6010      	strne	r0, [r2, #0]
					xNumberOfSuccessfulFrees++;
 800cbc8:	4a0f      	ldr	r2, [pc, #60]	; (800cc08 <vPortFree+0xc0>)
 800cbca:	6813      	ldr	r3, [r2, #0]
 800cbcc:	3301      	adds	r3, #1
 800cbce:	6013      	str	r3, [r2, #0]
}
 800cbd0:	b002      	add	sp, #8
 800cbd2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 800cbd6:	f001 be4b 	b.w	800e870 <xTaskResumeAll>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800cbda:	4421      	add	r1, r4
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800cbdc:	1850      	adds	r0, r2, r1
 800cbde:	4283      	cmp	r3, r0
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800cbe0:	6051      	str	r1, [r2, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800cbe2:	d001      	beq.n	800cbe8 <vPortFree+0xa0>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800cbe4:	6013      	str	r3, [r2, #0]
	if( pxIterator != pxBlockToInsert )
 800cbe6:	e7ef      	b.n	800cbc8 <vPortFree+0x80>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800cbe8:	4610      	mov	r0, r2
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800cbea:	4c08      	ldr	r4, [pc, #32]	; (800cc0c <vPortFree+0xc4>)
 800cbec:	6824      	ldr	r4, [r4, #0]
 800cbee:	42a3      	cmp	r3, r4
 800cbf0:	d0e6      	beq.n	800cbc0 <vPortFree+0x78>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800cbf2:	e9d3 3400 	ldrd	r3, r4, [r3]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800cbf6:	4421      	add	r1, r4
 800cbf8:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800cbfa:	e7e1      	b.n	800cbc0 <vPortFree+0x78>
 800cbfc:	20013124 	.word	0x20013124
 800cc00:	20013128 	.word	0x20013128
 800cc04:	20013138 	.word	0x20013138
 800cc08:	20013134 	.word	0x20013134
 800cc0c:	20003120 	.word	0x20003120

0800cc10 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800cc10:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800cc14:	f04f 31ff 	mov.w	r1, #4294967295
	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800cc18:	2200      	movs	r2, #0
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800cc1a:	e9c0 3101 	strd	r3, r1, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800cc1e:	e9c0 3303 	strd	r3, r3, [r0, #12]
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800cc22:	6002      	str	r2, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 800cc24:	4770      	bx	lr
 800cc26:	bf00      	nop

0800cc28 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800cc28:	2300      	movs	r3, #0
 800cc2a:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800cc2c:	4770      	bx	lr
 800cc2e:	bf00      	nop

0800cc30 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 800cc30:	6843      	ldr	r3, [r0, #4]

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 800cc32:	689a      	ldr	r2, [r3, #8]
 800cc34:	608a      	str	r2, [r1, #8]
	pxIndex->pxPrevious = pxNewListItem;

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800cc36:	6802      	ldr	r2, [r0, #0]
{
 800cc38:	b410      	push	{r4}
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800cc3a:	689c      	ldr	r4, [r3, #8]
	pxNewListItem->pxNext = pxIndex;
 800cc3c:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800cc3e:	3201      	adds	r2, #1
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800cc40:	6061      	str	r1, [r4, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800cc42:	6099      	str	r1, [r3, #8]
}
 800cc44:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxNewListItem->pxContainer = pxList;
 800cc48:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800cc4a:	6002      	str	r2, [r0, #0]
}
 800cc4c:	4770      	bx	lr
 800cc4e:	bf00      	nop

0800cc50 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 800cc50:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800cc52:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800cc54:	1c6b      	adds	r3, r5, #1
 800cc56:	d010      	beq.n	800cc7a <vListInsert+0x2a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800cc58:	f100 0308 	add.w	r3, r0, #8
 800cc5c:	461c      	mov	r4, r3
 800cc5e:	685b      	ldr	r3, [r3, #4]
 800cc60:	681a      	ldr	r2, [r3, #0]
 800cc62:	42aa      	cmp	r2, r5
 800cc64:	d9fa      	bls.n	800cc5c <vListInsert+0xc>

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800cc66:	6802      	ldr	r2, [r0, #0]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800cc68:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800cc6a:	3201      	adds	r2, #1
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 800cc6c:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800cc6e:	608c      	str	r4, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800cc70:	6061      	str	r1, [r4, #4]
	pxNewListItem->pxContainer = pxList;
 800cc72:	6108      	str	r0, [r1, #16]
}
 800cc74:	bc30      	pop	{r4, r5}
	( pxList->uxNumberOfItems )++;
 800cc76:	6002      	str	r2, [r0, #0]
}
 800cc78:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
 800cc7a:	6904      	ldr	r4, [r0, #16]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800cc7c:	6863      	ldr	r3, [r4, #4]
 800cc7e:	e7f2      	b.n	800cc66 <vListInsert+0x16>

0800cc80 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
 800cc80:	6903      	ldr	r3, [r0, #16]
{
 800cc82:	b410      	push	{r4}

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800cc84:	e9d0 1201 	ldrd	r1, r2, [r0, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800cc88:	685c      	ldr	r4, [r3, #4]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800cc8a:	608a      	str	r2, [r1, #8]
	if( pxList->pxIndex == pxItemToRemove )
 800cc8c:	4284      	cmp	r4, r0
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800cc8e:	6051      	str	r1, [r2, #4]
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 800cc90:	bf08      	it	eq
 800cc92:	605a      	streq	r2, [r3, #4]
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
	( pxList->uxNumberOfItems )--;
 800cc94:	681a      	ldr	r2, [r3, #0]

	return pxList->uxNumberOfItems;
}
 800cc96:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxItemToRemove->pxContainer = NULL;
 800cc9a:	2100      	movs	r1, #0
	( pxList->uxNumberOfItems )--;
 800cc9c:	3a01      	subs	r2, #1
	pxItemToRemove->pxContainer = NULL;
 800cc9e:	6101      	str	r1, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800cca0:	601a      	str	r2, [r3, #0]
	return pxList->uxNumberOfItems;
 800cca2:	6818      	ldr	r0, [r3, #0]
}
 800cca4:	4770      	bx	lr
 800cca6:	bf00      	nop

0800cca8 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 800cca8:	4808      	ldr	r0, [pc, #32]	; (800cccc <prvPortStartFirstTask+0x24>)
 800ccaa:	6800      	ldr	r0, [r0, #0]
 800ccac:	6800      	ldr	r0, [r0, #0]
 800ccae:	f380 8808 	msr	MSP, r0
 800ccb2:	f04f 0000 	mov.w	r0, #0
 800ccb6:	f380 8814 	msr	CONTROL, r0
 800ccba:	b662      	cpsie	i
 800ccbc:	b661      	cpsie	f
 800ccbe:	f3bf 8f4f 	dsb	sy
 800ccc2:	f3bf 8f6f 	isb	sy
 800ccc6:	df00      	svc	0
 800ccc8:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800ccca:	0000      	.short	0x0000
 800cccc:	e000ed08 	.word	0xe000ed08

0800ccd0 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 800ccd0:	f8df 000c 	ldr.w	r0, [pc, #12]	; 800cce0 <vPortEnableVFP+0x10>
 800ccd4:	6801      	ldr	r1, [r0, #0]
 800ccd6:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800ccda:	6001      	str	r1, [r0, #0]
 800ccdc:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800ccde:	0000      	.short	0x0000
 800cce0:	e000ed88 	.word	0xe000ed88

0800cce4 <prvTaskExitError>:
	configASSERT( uxCriticalNesting == ~0UL );
 800cce4:	4b0e      	ldr	r3, [pc, #56]	; (800cd20 <prvTaskExitError+0x3c>)
 800cce6:	681b      	ldr	r3, [r3, #0]
{
 800cce8:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 800ccea:	2200      	movs	r2, #0
	configASSERT( uxCriticalNesting == ~0UL );
 800ccec:	3301      	adds	r3, #1
volatile uint32_t ulDummy = 0;
 800ccee:	9201      	str	r2, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 800ccf0:	d008      	beq.n	800cd04 <prvTaskExitError+0x20>
 800ccf2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ccf6:	f383 8811 	msr	BASEPRI, r3
 800ccfa:	f3bf 8f6f 	isb	sy
 800ccfe:	f3bf 8f4f 	dsb	sy
 800cd02:	e7fe      	b.n	800cd02 <prvTaskExitError+0x1e>
 800cd04:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cd08:	f383 8811 	msr	BASEPRI, r3
 800cd0c:	f3bf 8f6f 	isb	sy
 800cd10:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800cd14:	9b01      	ldr	r3, [sp, #4]
 800cd16:	2b00      	cmp	r3, #0
 800cd18:	d0fc      	beq.n	800cd14 <prvTaskExitError+0x30>
}
 800cd1a:	b002      	add	sp, #8
 800cd1c:	4770      	bx	lr
 800cd1e:	bf00      	nop
 800cd20:	20000084 	.word	0x20000084

0800cd24 <pxPortInitialiseStack>:
{
 800cd24:	b410      	push	{r4}
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800cd26:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800cd2a:	4c07      	ldr	r4, [pc, #28]	; (800cd48 <pxPortInitialiseStack+0x24>)
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800cd2c:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800cd30:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800cd34:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800cd38:	e940 4103 	strd	r4, r1, [r0, #-12]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800cd3c:	e940 3209 	strd	r3, r2, [r0, #-36]	; 0x24
}
 800cd40:	f85d 4b04 	ldr.w	r4, [sp], #4
 800cd44:	3844      	subs	r0, #68	; 0x44
 800cd46:	4770      	bx	lr
 800cd48:	0800cce5 	.word	0x0800cce5
 800cd4c:	00000000 	.word	0x00000000

0800cd50 <SVC_Handler>:
	__asm volatile (
 800cd50:	4b07      	ldr	r3, [pc, #28]	; (800cd70 <pxCurrentTCBConst2>)
 800cd52:	6819      	ldr	r1, [r3, #0]
 800cd54:	6808      	ldr	r0, [r1, #0]
 800cd56:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cd5a:	f380 8809 	msr	PSP, r0
 800cd5e:	f3bf 8f6f 	isb	sy
 800cd62:	f04f 0000 	mov.w	r0, #0
 800cd66:	f380 8811 	msr	BASEPRI, r0
 800cd6a:	4770      	bx	lr
 800cd6c:	f3af 8000 	nop.w

0800cd70 <pxCurrentTCBConst2>:
 800cd70:	20013188 	.word	0x20013188

0800cd74 <vPortEnterCritical>:
 800cd74:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cd78:	f383 8811 	msr	BASEPRI, r3
 800cd7c:	f3bf 8f6f 	isb	sy
 800cd80:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 800cd84:	4a0b      	ldr	r2, [pc, #44]	; (800cdb4 <vPortEnterCritical+0x40>)
 800cd86:	6813      	ldr	r3, [r2, #0]
 800cd88:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800cd8a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800cd8c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800cd8e:	d000      	beq.n	800cd92 <vPortEnterCritical+0x1e>
}
 800cd90:	4770      	bx	lr
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 800cd92:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800cd96:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 800cd9a:	b2db      	uxtb	r3, r3
 800cd9c:	2b00      	cmp	r3, #0
 800cd9e:	d0f7      	beq.n	800cd90 <vPortEnterCritical+0x1c>
 800cda0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cda4:	f383 8811 	msr	BASEPRI, r3
 800cda8:	f3bf 8f6f 	isb	sy
 800cdac:	f3bf 8f4f 	dsb	sy
 800cdb0:	e7fe      	b.n	800cdb0 <vPortEnterCritical+0x3c>
 800cdb2:	bf00      	nop
 800cdb4:	20000084 	.word	0x20000084

0800cdb8 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 800cdb8:	4a08      	ldr	r2, [pc, #32]	; (800cddc <vPortExitCritical+0x24>)
 800cdba:	6813      	ldr	r3, [r2, #0]
 800cdbc:	b943      	cbnz	r3, 800cdd0 <vPortExitCritical+0x18>
 800cdbe:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cdc2:	f383 8811 	msr	BASEPRI, r3
 800cdc6:	f3bf 8f6f 	isb	sy
 800cdca:	f3bf 8f4f 	dsb	sy
 800cdce:	e7fe      	b.n	800cdce <vPortExitCritical+0x16>
	uxCriticalNesting--;
 800cdd0:	3b01      	subs	r3, #1
 800cdd2:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 800cdd4:	b90b      	cbnz	r3, 800cdda <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 800cdd6:	f383 8811 	msr	BASEPRI, r3
}
 800cdda:	4770      	bx	lr
 800cddc:	20000084 	.word	0x20000084

0800cde0 <PendSV_Handler>:
	__asm volatile
 800cde0:	f3ef 8009 	mrs	r0, PSP
 800cde4:	f3bf 8f6f 	isb	sy
 800cde8:	4b15      	ldr	r3, [pc, #84]	; (800ce40 <pxCurrentTCBConst>)
 800cdea:	681a      	ldr	r2, [r3, #0]
 800cdec:	f01e 0f10 	tst.w	lr, #16
 800cdf0:	bf08      	it	eq
 800cdf2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800cdf6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cdfa:	6010      	str	r0, [r2, #0]
 800cdfc:	e92d 0009 	stmdb	sp!, {r0, r3}
 800ce00:	f04f 0050 	mov.w	r0, #80	; 0x50
 800ce04:	f380 8811 	msr	BASEPRI, r0
 800ce08:	f3bf 8f4f 	dsb	sy
 800ce0c:	f3bf 8f6f 	isb	sy
 800ce10:	f001 fd54 	bl	800e8bc <vTaskSwitchContext>
 800ce14:	f04f 0000 	mov.w	r0, #0
 800ce18:	f380 8811 	msr	BASEPRI, r0
 800ce1c:	bc09      	pop	{r0, r3}
 800ce1e:	6819      	ldr	r1, [r3, #0]
 800ce20:	6808      	ldr	r0, [r1, #0]
 800ce22:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ce26:	f01e 0f10 	tst.w	lr, #16
 800ce2a:	bf08      	it	eq
 800ce2c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800ce30:	f380 8809 	msr	PSP, r0
 800ce34:	f3bf 8f6f 	isb	sy
 800ce38:	4770      	bx	lr
 800ce3a:	bf00      	nop
 800ce3c:	f3af 8000 	nop.w

0800ce40 <pxCurrentTCBConst>:
 800ce40:	20013188 	.word	0x20013188

0800ce44 <xPortSysTickHandler>:
{
 800ce44:	b508      	push	{r3, lr}
	__asm volatile
 800ce46:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ce4a:	f383 8811 	msr	BASEPRI, r3
 800ce4e:	f3bf 8f6f 	isb	sy
 800ce52:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 800ce56:	f001 fd21 	bl	800e89c <xTaskIncrementTick>
 800ce5a:	b128      	cbz	r0, 800ce68 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800ce5c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ce60:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ce64:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 800ce68:	2300      	movs	r3, #0
 800ce6a:	f383 8811 	msr	BASEPRI, r3
}
 800ce6e:	bd08      	pop	{r3, pc}

0800ce70 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800ce70:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 800ce74:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800ce76:	4906      	ldr	r1, [pc, #24]	; (800ce90 <vPortSetupTimerInterrupt+0x20>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800ce78:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 800ce7a:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800ce7c:	680b      	ldr	r3, [r1, #0]
 800ce7e:	4905      	ldr	r1, [pc, #20]	; (800ce94 <vPortSetupTimerInterrupt+0x24>)
 800ce80:	fba1 1303 	umull	r1, r3, r1, r3
 800ce84:	099b      	lsrs	r3, r3, #6
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800ce86:	2007      	movs	r0, #7
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800ce88:	3b01      	subs	r3, #1
 800ce8a:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800ce8c:	6110      	str	r0, [r2, #16]
}
 800ce8e:	4770      	bx	lr
 800ce90:	20000078 	.word	0x20000078
 800ce94:	10624dd3 	.word	0x10624dd3

0800ce98 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800ce98:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ce9c:	4a49      	ldr	r2, [pc, #292]	; (800cfc4 <xPortStartScheduler+0x12c>)
 800ce9e:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 800cea2:	4291      	cmp	r1, r2
 800cea4:	d043      	beq.n	800cf2e <xPortStartScheduler+0x96>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800cea6:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 800ceaa:	4b47      	ldr	r3, [pc, #284]	; (800cfc8 <xPortStartScheduler+0x130>)
 800ceac:	429a      	cmp	r2, r3
 800ceae:	d035      	beq.n	800cf1c <xPortStartScheduler+0x84>
{
 800ceb0:	b570      	push	{r4, r5, r6, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800ceb2:	4b46      	ldr	r3, [pc, #280]	; (800cfcc <xPortStartScheduler+0x134>)
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800ceb4:	4846      	ldr	r0, [pc, #280]	; (800cfd0 <xPortStartScheduler+0x138>)
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800ceb6:	781a      	ldrb	r2, [r3, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800ceb8:	4c46      	ldr	r4, [pc, #280]	; (800cfd4 <xPortStartScheduler+0x13c>)
{
 800ceba:	b084      	sub	sp, #16
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800cebc:	21ff      	movs	r1, #255	; 0xff
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800cebe:	b2d2      	uxtb	r2, r2
 800cec0:	9202      	str	r2, [sp, #8]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800cec2:	7019      	strb	r1, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800cec4:	781b      	ldrb	r3, [r3, #0]
 800cec6:	b2db      	uxtb	r3, r3
 800cec8:	f88d 3007 	strb.w	r3, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800cecc:	f89d 3007 	ldrb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800ced0:	f89d 2007 	ldrb.w	r2, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800ced4:	f003 0350 	and.w	r3, r3, #80	; 0x50
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800ced8:	2107      	movs	r1, #7
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800ceda:	7003      	strb	r3, [r0, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800cedc:	0610      	lsls	r0, r2, #24
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800cede:	6021      	str	r1, [r4, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800cee0:	bf48      	it	mi
 800cee2:	2206      	movmi	r2, #6
 800cee4:	d511      	bpl.n	800cf0a <xPortStartScheduler+0x72>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 800cee6:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800ceea:	005b      	lsls	r3, r3, #1
 800ceec:	b2db      	uxtb	r3, r3
 800ceee:	f88d 3007 	strb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800cef2:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800cef6:	0609      	lsls	r1, r1, #24
 800cef8:	4610      	mov	r0, r2
 800cefa:	f102 32ff 	add.w	r2, r2, #4294967295
 800cefe:	d4f2      	bmi.n	800cee6 <xPortStartScheduler+0x4e>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 800cf00:	2803      	cmp	r0, #3
 800cf02:	6020      	str	r0, [r4, #0]
 800cf04:	f88d 3007 	strb.w	r3, [sp, #7]
 800cf08:	d01a      	beq.n	800cf40 <xPortStartScheduler+0xa8>
	__asm volatile
 800cf0a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cf0e:	f383 8811 	msr	BASEPRI, r3
 800cf12:	f3bf 8f6f 	isb	sy
 800cf16:	f3bf 8f4f 	dsb	sy
 800cf1a:	e7fe      	b.n	800cf1a <xPortStartScheduler+0x82>
 800cf1c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cf20:	f383 8811 	msr	BASEPRI, r3
 800cf24:	f3bf 8f6f 	isb	sy
 800cf28:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800cf2c:	e7fe      	b.n	800cf2c <xPortStartScheduler+0x94>
 800cf2e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cf32:	f383 8811 	msr	BASEPRI, r3
 800cf36:	f3bf 8f6f 	isb	sy
 800cf3a:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800cf3e:	e7fe      	b.n	800cf3e <xPortStartScheduler+0xa6>
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800cf40:	9b02      	ldr	r3, [sp, #8]
 800cf42:	4a22      	ldr	r2, [pc, #136]	; (800cfcc <xPortStartScheduler+0x134>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800cf44:	f04f 25e0 	mov.w	r5, #3758153728	; 0xe000e000
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800cf48:	f44f 7140 	mov.w	r1, #768	; 0x300
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800cf4c:	b2db      	uxtb	r3, r3
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800cf4e:	6021      	str	r1, [r4, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800cf50:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800cf52:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 800cf56:	4c20      	ldr	r4, [pc, #128]	; (800cfd8 <xPortStartScheduler+0x140>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800cf58:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800cf5c:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 800cf60:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
 800cf64:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 800cf68:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 800cf6c:	2600      	movs	r6, #0
	vPortSetupTimerInterrupt();
 800cf6e:	f7ff ff7f 	bl	800ce70 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 800cf72:	6026      	str	r6, [r4, #0]
	vPortEnableVFP();
 800cf74:	f7ff feac 	bl	800ccd0 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800cf78:	f8d5 3f34 	ldr.w	r3, [r5, #3892]	; 0xf34
 800cf7c:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 800cf80:	f8c5 3f34 	str.w	r3, [r5, #3892]	; 0xf34
	prvPortStartFirstTask();
 800cf84:	f7ff fe90 	bl	800cca8 <prvPortStartFirstTask>
	vTaskSwitchContext();
 800cf88:	f001 fc98 	bl	800e8bc <vTaskSwitchContext>
	configASSERT( uxCriticalNesting == ~0UL );
 800cf8c:	6823      	ldr	r3, [r4, #0]
volatile uint32_t ulDummy = 0;
 800cf8e:	9603      	str	r6, [sp, #12]
	configASSERT( uxCriticalNesting == ~0UL );
 800cf90:	3301      	adds	r3, #1
 800cf92:	d008      	beq.n	800cfa6 <xPortStartScheduler+0x10e>
 800cf94:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cf98:	f383 8811 	msr	BASEPRI, r3
 800cf9c:	f3bf 8f6f 	isb	sy
 800cfa0:	f3bf 8f4f 	dsb	sy
 800cfa4:	e7fe      	b.n	800cfa4 <xPortStartScheduler+0x10c>
 800cfa6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cfaa:	f383 8811 	msr	BASEPRI, r3
 800cfae:	f3bf 8f6f 	isb	sy
 800cfb2:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800cfb6:	9b03      	ldr	r3, [sp, #12]
 800cfb8:	2b00      	cmp	r3, #0
 800cfba:	d0fc      	beq.n	800cfb6 <xPortStartScheduler+0x11e>
}
 800cfbc:	2000      	movs	r0, #0
 800cfbe:	b004      	add	sp, #16
 800cfc0:	bd70      	pop	{r4, r5, r6, pc}
 800cfc2:	bf00      	nop
 800cfc4:	410fc271 	.word	0x410fc271
 800cfc8:	410fc270 	.word	0x410fc270
 800cfcc:	e000e400 	.word	0xe000e400
 800cfd0:	20013140 	.word	0x20013140
 800cfd4:	20013144 	.word	0x20013144
 800cfd8:	20000084 	.word	0x20000084

0800cfdc <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 800cfdc:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 800cfe0:	2b0f      	cmp	r3, #15
 800cfe2:	d90e      	bls.n	800d002 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800cfe4:	4911      	ldr	r1, [pc, #68]	; (800d02c <vPortValidateInterruptPriority+0x50>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800cfe6:	4a12      	ldr	r2, [pc, #72]	; (800d030 <vPortValidateInterruptPriority+0x54>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800cfe8:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800cfea:	7812      	ldrb	r2, [r2, #0]
 800cfec:	429a      	cmp	r2, r3
 800cfee:	d908      	bls.n	800d002 <vPortValidateInterruptPriority+0x26>
 800cff0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cff4:	f383 8811 	msr	BASEPRI, r3
 800cff8:	f3bf 8f6f 	isb	sy
 800cffc:	f3bf 8f4f 	dsb	sy
 800d000:	e7fe      	b.n	800d000 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 800d002:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d006:	4a0b      	ldr	r2, [pc, #44]	; (800d034 <vPortValidateInterruptPriority+0x58>)
 800d008:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 800d00c:	6812      	ldr	r2, [r2, #0]
 800d00e:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800d012:	4293      	cmp	r3, r2
 800d014:	d908      	bls.n	800d028 <vPortValidateInterruptPriority+0x4c>
 800d016:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d01a:	f383 8811 	msr	BASEPRI, r3
 800d01e:	f3bf 8f6f 	isb	sy
 800d022:	f3bf 8f4f 	dsb	sy
 800d026:	e7fe      	b.n	800d026 <vPortValidateInterruptPriority+0x4a>
	}
 800d028:	4770      	bx	lr
 800d02a:	bf00      	nop
 800d02c:	e000e3f0 	.word	0xe000e3f0
 800d030:	20013140 	.word	0x20013140
 800d034:	20013144 	.word	0x20013144

0800d038 <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
 800d038:	b570      	push	{r4, r5, r6, lr}
 800d03a:	4604      	mov	r4, r0

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800d03c:	6c00      	ldr	r0, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800d03e:	6ba6      	ldr	r6, [r4, #56]	; 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800d040:	b920      	cbnz	r0, 800d04c <prvCopyDataToQueue+0x14>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800d042:	6825      	ldr	r5, [r4, #0]
 800d044:	b34d      	cbz	r5, 800d09a <prvCopyDataToQueue+0x62>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d046:	3601      	adds	r6, #1
 800d048:	63a6      	str	r6, [r4, #56]	; 0x38

	return xReturn;
}
 800d04a:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 800d04c:	4615      	mov	r5, r2
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800d04e:	4602      	mov	r2, r0
	else if( xPosition == queueSEND_TO_BACK )
 800d050:	b97d      	cbnz	r5, 800d072 <prvCopyDataToQueue+0x3a>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800d052:	6860      	ldr	r0, [r4, #4]
 800d054:	f01b fbaf 	bl	80287b6 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800d058:	6863      	ldr	r3, [r4, #4]
 800d05a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800d05c:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d05e:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800d060:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d062:	4293      	cmp	r3, r2
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800d064:	bf24      	itt	cs
 800d066:	6823      	ldrcs	r3, [r4, #0]
 800d068:	6063      	strcs	r3, [r4, #4]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d06a:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 800d06c:	4628      	mov	r0, r5
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d06e:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800d070:	bd70      	pop	{r4, r5, r6, pc}
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 800d072:	68e0      	ldr	r0, [r4, #12]
 800d074:	f01b fb9f 	bl	80287b6 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800d078:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800d07a:	68e3      	ldr	r3, [r4, #12]
 800d07c:	4251      	negs	r1, r2
 800d07e:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d080:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800d082:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d084:	4293      	cmp	r3, r2
 800d086:	d202      	bcs.n	800d08e <prvCopyDataToQueue+0x56>
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 800d088:	68a3      	ldr	r3, [r4, #8]
 800d08a:	440b      	add	r3, r1
 800d08c:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800d08e:	2d02      	cmp	r5, #2
 800d090:	d008      	beq.n	800d0a4 <prvCopyDataToQueue+0x6c>
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d092:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 800d094:	2000      	movs	r0, #0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d096:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800d098:	bd70      	pop	{r4, r5, r6, pc}
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800d09a:	68a0      	ldr	r0, [r4, #8]
 800d09c:	f001 fde0 	bl	800ec60 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 800d0a0:	60a5      	str	r5, [r4, #8]
 800d0a2:	e7d0      	b.n	800d046 <prvCopyDataToQueue+0xe>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800d0a4:	2e01      	cmp	r6, #1
 800d0a6:	bf38      	it	cc
 800d0a8:	2601      	movcc	r6, #1
BaseType_t xReturn = pdFALSE;
 800d0aa:	2000      	movs	r0, #0
 800d0ac:	e7cc      	b.n	800d048 <prvCopyDataToQueue+0x10>
 800d0ae:	bf00      	nop

0800d0b0 <xQueueGenericCreateStatic>:
	{
 800d0b0:	b530      	push	{r4, r5, lr}
 800d0b2:	b083      	sub	sp, #12
 800d0b4:	f89d 4018 	ldrb.w	r4, [sp, #24]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800d0b8:	b940      	cbnz	r0, 800d0cc <xQueueGenericCreateStatic+0x1c>
 800d0ba:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d0be:	f383 8811 	msr	BASEPRI, r3
 800d0c2:	f3bf 8f6f 	isb	sy
 800d0c6:	f3bf 8f4f 	dsb	sy
 800d0ca:	e7fe      	b.n	800d0ca <xQueueGenericCreateStatic+0x1a>
		configASSERT( pxStaticQueue != NULL );
 800d0cc:	461d      	mov	r5, r3
 800d0ce:	b17b      	cbz	r3, 800d0f0 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800d0d0:	b302      	cbz	r2, 800d114 <xQueueGenericCreateStatic+0x64>
 800d0d2:	b1b1      	cbz	r1, 800d102 <xQueueGenericCreateStatic+0x52>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800d0d4:	2350      	movs	r3, #80	; 0x50
 800d0d6:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800d0d8:	9b01      	ldr	r3, [sp, #4]
 800d0da:	2b50      	cmp	r3, #80	; 0x50
 800d0dc:	d023      	beq.n	800d126 <xQueueGenericCreateStatic+0x76>
 800d0de:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d0e2:	f383 8811 	msr	BASEPRI, r3
 800d0e6:	f3bf 8f6f 	isb	sy
 800d0ea:	f3bf 8f4f 	dsb	sy
 800d0ee:	e7fe      	b.n	800d0ee <xQueueGenericCreateStatic+0x3e>
 800d0f0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d0f4:	f383 8811 	msr	BASEPRI, r3
 800d0f8:	f3bf 8f6f 	isb	sy
 800d0fc:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 800d100:	e7fe      	b.n	800d100 <xQueueGenericCreateStatic+0x50>
 800d102:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d106:	f383 8811 	msr	BASEPRI, r3
 800d10a:	f3bf 8f6f 	isb	sy
 800d10e:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800d112:	e7fe      	b.n	800d112 <xQueueGenericCreateStatic+0x62>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800d114:	bb89      	cbnz	r1, 800d17a <xQueueGenericCreateStatic+0xca>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800d116:	2250      	movs	r2, #80	; 0x50
 800d118:	9201      	str	r2, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800d11a:	9a01      	ldr	r2, [sp, #4]
 800d11c:	2a50      	cmp	r2, #80	; 0x50
 800d11e:	d1de      	bne.n	800d0de <xQueueGenericCreateStatic+0x2e>
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800d120:	9a01      	ldr	r2, [sp, #4]
 800d122:	462a      	mov	r2, r5
 800d124:	e000      	b.n	800d128 <xQueueGenericCreateStatic+0x78>
 800d126:	9b01      	ldr	r3, [sp, #4]
	if( uxItemSize == ( UBaseType_t ) 0 )
 800d128:	602a      	str	r2, [r5, #0]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800d12a:	2201      	movs	r2, #1
	pxNewQueue->uxItemSize = uxItemSize;
 800d12c:	e9c5 010f 	strd	r0, r1, [r5, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800d130:	f885 2046 	strb.w	r2, [r5, #70]	; 0x46
	taskENTER_CRITICAL();
 800d134:	f7ff fe1e 	bl	800cd74 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d138:	e9d5 120f 	ldrd	r1, r2, [r5, #60]	; 0x3c
 800d13c:	6828      	ldr	r0, [r5, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800d13e:	6068      	str	r0, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d140:	fb02 f101 	mul.w	r1, r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d144:	1a8a      	subs	r2, r1, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d146:	4401      	add	r1, r0
 800d148:	60a9      	str	r1, [r5, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d14a:	2100      	movs	r1, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d14c:	4402      	add	r2, r0
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d14e:	63a9      	str	r1, [r5, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800d150:	21ff      	movs	r1, #255	; 0xff
 800d152:	f885 1044 	strb.w	r1, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d156:	60ea      	str	r2, [r5, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 800d158:	f885 1045 	strb.w	r1, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800d15c:	f105 0010 	add.w	r0, r5, #16
 800d160:	f7ff fd56 	bl	800cc10 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800d164:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800d168:	f7ff fd52 	bl	800cc10 <vListInitialise>
	taskEXIT_CRITICAL();
 800d16c:	f7ff fe24 	bl	800cdb8 <vPortExitCritical>
	}
 800d170:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 800d172:	f885 404c 	strb.w	r4, [r5, #76]	; 0x4c
	}
 800d176:	b003      	add	sp, #12
 800d178:	bd30      	pop	{r4, r5, pc}
 800d17a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d17e:	f383 8811 	msr	BASEPRI, r3
 800d182:	f3bf 8f6f 	isb	sy
 800d186:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800d18a:	e7fe      	b.n	800d18a <xQueueGenericCreateStatic+0xda>

0800d18c <xQueueGenericCreate>:
	{
 800d18c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800d18e:	b940      	cbnz	r0, 800d1a2 <xQueueGenericCreate+0x16>
 800d190:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d194:	f383 8811 	msr	BASEPRI, r3
 800d198:	f3bf 8f6f 	isb	sy
 800d19c:	f3bf 8f4f 	dsb	sy
 800d1a0:	e7fe      	b.n	800d1a0 <xQueueGenericCreate+0x14>
 800d1a2:	4605      	mov	r5, r0
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800d1a4:	fb01 f000 	mul.w	r0, r1, r0
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800d1a8:	3050      	adds	r0, #80	; 0x50
 800d1aa:	460e      	mov	r6, r1
 800d1ac:	4617      	mov	r7, r2
 800d1ae:	f7ff fc0f 	bl	800c9d0 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800d1b2:	4604      	mov	r4, r0
 800d1b4:	b340      	cbz	r0, 800d208 <xQueueGenericCreate+0x7c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800d1b6:	2300      	movs	r3, #0
 800d1b8:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 800d1bc:	b336      	cbz	r6, 800d20c <xQueueGenericCreate+0x80>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d1be:	f100 0350 	add.w	r3, r0, #80	; 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 800d1c2:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800d1c4:	e9c4 560f 	strd	r5, r6, [r4, #60]	; 0x3c
	taskENTER_CRITICAL();
 800d1c8:	f7ff fdd4 	bl	800cd74 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d1cc:	e9d4 230f 	ldrd	r2, r3, [r4, #60]	; 0x3c
 800d1d0:	6821      	ldr	r1, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800d1d2:	6061      	str	r1, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d1d4:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d1d8:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d1da:	440a      	add	r2, r1
 800d1dc:	60a2      	str	r2, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d1de:	2200      	movs	r2, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d1e0:	440b      	add	r3, r1
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d1e2:	63a2      	str	r2, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800d1e4:	22ff      	movs	r2, #255	; 0xff
 800d1e6:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d1ea:	60e3      	str	r3, [r4, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 800d1ec:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800d1f0:	f104 0010 	add.w	r0, r4, #16
 800d1f4:	f7ff fd0c 	bl	800cc10 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800d1f8:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800d1fc:	f7ff fd08 	bl	800cc10 <vListInitialise>
	taskEXIT_CRITICAL();
 800d200:	f7ff fdda 	bl	800cdb8 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 800d204:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 800d208:	4620      	mov	r0, r4
 800d20a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d20c:	4603      	mov	r3, r0
 800d20e:	e7d8      	b.n	800d1c2 <xQueueGenericCreate+0x36>

0800d210 <xQueueCreateCountingSemaphoreStatic>:
		configASSERT( uxMaxCount != 0 );
 800d210:	b940      	cbnz	r0, 800d224 <xQueueCreateCountingSemaphoreStatic+0x14>
 800d212:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d216:	f383 8811 	msr	BASEPRI, r3
 800d21a:	f3bf 8f6f 	isb	sy
 800d21e:	f3bf 8f4f 	dsb	sy
 800d222:	e7fe      	b.n	800d222 <xQueueCreateCountingSemaphoreStatic+0x12>
		configASSERT( uxInitialCount <= uxMaxCount );
 800d224:	4288      	cmp	r0, r1
 800d226:	d208      	bcs.n	800d23a <xQueueCreateCountingSemaphoreStatic+0x2a>
 800d228:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d22c:	f383 8811 	msr	BASEPRI, r3
 800d230:	f3bf 8f6f 	isb	sy
 800d234:	f3bf 8f4f 	dsb	sy
 800d238:	e7fe      	b.n	800d238 <xQueueCreateCountingSemaphoreStatic+0x28>
	{
 800d23a:	b530      	push	{r4, r5, lr}
 800d23c:	4615      	mov	r5, r2
 800d23e:	b085      	sub	sp, #20
		configASSERT( pxStaticQueue != NULL );
 800d240:	2a00      	cmp	r2, #0
 800d242:	d03c      	beq.n	800d2be <xQueueCreateCountingSemaphoreStatic+0xae>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800d244:	2350      	movs	r3, #80	; 0x50
 800d246:	9303      	str	r3, [sp, #12]
			configASSERT( xSize == sizeof( Queue_t ) );
 800d248:	9b03      	ldr	r3, [sp, #12]
 800d24a:	2b50      	cmp	r3, #80	; 0x50
 800d24c:	d008      	beq.n	800d260 <xQueueCreateCountingSemaphoreStatic+0x50>
 800d24e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d252:	f383 8811 	msr	BASEPRI, r3
 800d256:	f3bf 8f6f 	isb	sy
 800d25a:	f3bf 8f4f 	dsb	sy
 800d25e:	e7fe      	b.n	800d25e <xQueueCreateCountingSemaphoreStatic+0x4e>
	pxNewQueue->uxItemSize = uxItemSize;
 800d260:	2400      	movs	r4, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800d262:	2301      	movs	r3, #1
 800d264:	f882 3046 	strb.w	r3, [r2, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800d268:	602a      	str	r2, [r5, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800d26a:	e9c2 040f 	strd	r0, r4, [r2, #60]	; 0x3c
 800d26e:	9101      	str	r1, [sp, #4]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800d270:	9b03      	ldr	r3, [sp, #12]
	taskENTER_CRITICAL();
 800d272:	f7ff fd7f 	bl	800cd74 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d276:	e9d5 030f 	ldrd	r0, r3, [r5, #60]	; 0x3c
 800d27a:	682a      	ldr	r2, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d27c:	63ac      	str	r4, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d27e:	fb03 f000 	mul.w	r0, r3, r0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d282:	1ac3      	subs	r3, r0, r3
 800d284:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d286:	4410      	add	r0, r2
		pxQueue->cRxLock = queueUNLOCKED;
 800d288:	f04f 0eff 	mov.w	lr, #255	; 0xff
 800d28c:	f885 e044 	strb.w	lr, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d290:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800d292:	606a      	str	r2, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 800d294:	f885 e045 	strb.w	lr, [r5, #69]	; 0x45
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d298:	60a8      	str	r0, [r5, #8]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800d29a:	f105 0010 	add.w	r0, r5, #16
 800d29e:	f7ff fcb7 	bl	800cc10 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800d2a2:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800d2a6:	f7ff fcb3 	bl	800cc10 <vListInitialise>
	taskEXIT_CRITICAL();
 800d2aa:	f7ff fd85 	bl	800cdb8 <vPortExitCritical>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800d2ae:	9901      	ldr	r1, [sp, #4]
 800d2b0:	63a9      	str	r1, [r5, #56]	; 0x38
		pxNewQueue->ucQueueType = ucQueueType;
 800d2b2:	2302      	movs	r3, #2
	}
 800d2b4:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 800d2b6:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
	}
 800d2ba:	b005      	add	sp, #20
 800d2bc:	bd30      	pop	{r4, r5, pc}
 800d2be:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d2c2:	f383 8811 	msr	BASEPRI, r3
 800d2c6:	f3bf 8f6f 	isb	sy
 800d2ca:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 800d2ce:	e7fe      	b.n	800d2ce <xQueueCreateCountingSemaphoreStatic+0xbe>

0800d2d0 <xQueueCreateCountingSemaphore>:
	{
 800d2d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxMaxCount != 0 );
 800d2d2:	b940      	cbnz	r0, 800d2e6 <xQueueCreateCountingSemaphore+0x16>
 800d2d4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d2d8:	f383 8811 	msr	BASEPRI, r3
 800d2dc:	f3bf 8f6f 	isb	sy
 800d2e0:	f3bf 8f4f 	dsb	sy
 800d2e4:	e7fe      	b.n	800d2e4 <xQueueCreateCountingSemaphore+0x14>
		configASSERT( uxInitialCount <= uxMaxCount );
 800d2e6:	4288      	cmp	r0, r1
 800d2e8:	460e      	mov	r6, r1
 800d2ea:	4604      	mov	r4, r0
 800d2ec:	d208      	bcs.n	800d300 <xQueueCreateCountingSemaphore+0x30>
 800d2ee:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d2f2:	f383 8811 	msr	BASEPRI, r3
 800d2f6:	f3bf 8f6f 	isb	sy
 800d2fa:	f3bf 8f4f 	dsb	sy
 800d2fe:	e7fe      	b.n	800d2fe <xQueueCreateCountingSemaphore+0x2e>
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800d300:	2050      	movs	r0, #80	; 0x50
 800d302:	f7ff fb65 	bl	800c9d0 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800d306:	4605      	mov	r5, r0
 800d308:	b330      	cbz	r0, 800d358 <xQueueCreateCountingSemaphore+0x88>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800d30a:	2700      	movs	r7, #0
	pxNewQueue->uxItemSize = uxItemSize;
 800d30c:	e9c0 470f 	strd	r4, r7, [r0, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800d310:	f880 7046 	strb.w	r7, [r0, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800d314:	6000      	str	r0, [r0, #0]
	taskENTER_CRITICAL();
 800d316:	f7ff fd2d 	bl	800cd74 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d31a:	e9d5 230f 	ldrd	r2, r3, [r5, #60]	; 0x3c
 800d31e:	6829      	ldr	r1, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d320:	63af      	str	r7, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d322:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d326:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d328:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d32a:	440b      	add	r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d32c:	60aa      	str	r2, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
 800d32e:	22ff      	movs	r2, #255	; 0xff
 800d330:	f885 2044 	strb.w	r2, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d334:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800d336:	6069      	str	r1, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 800d338:	f885 2045 	strb.w	r2, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800d33c:	f105 0010 	add.w	r0, r5, #16
 800d340:	f7ff fc66 	bl	800cc10 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800d344:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800d348:	f7ff fc62 	bl	800cc10 <vListInitialise>
	taskEXIT_CRITICAL();
 800d34c:	f7ff fd34 	bl	800cdb8 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 800d350:	2302      	movs	r3, #2
 800d352:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800d356:	63ae      	str	r6, [r5, #56]	; 0x38
	}
 800d358:	4628      	mov	r0, r5
 800d35a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800d35c <xQueueGenericSend>:
{
 800d35c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d360:	b085      	sub	sp, #20
 800d362:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
 800d364:	2800      	cmp	r0, #0
 800d366:	f000 80a4 	beq.w	800d4b2 <xQueueGenericSend+0x156>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800d36a:	4688      	mov	r8, r1
 800d36c:	461f      	mov	r7, r3
 800d36e:	4604      	mov	r4, r0
 800d370:	2900      	cmp	r1, #0
 800d372:	f000 8091 	beq.w	800d498 <xQueueGenericSend+0x13c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800d376:	2f02      	cmp	r7, #2
 800d378:	d10b      	bne.n	800d392 <xQueueGenericSend+0x36>
 800d37a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800d37c:	2b01      	cmp	r3, #1
 800d37e:	d008      	beq.n	800d392 <xQueueGenericSend+0x36>
 800d380:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d384:	f383 8811 	msr	BASEPRI, r3
 800d388:	f3bf 8f6f 	isb	sy
 800d38c:	f3bf 8f4f 	dsb	sy
 800d390:	e7fe      	b.n	800d390 <xQueueGenericSend+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800d392:	f001 fc0f 	bl	800ebb4 <xTaskGetSchedulerState>
 800d396:	4605      	mov	r5, r0
 800d398:	2800      	cmp	r0, #0
 800d39a:	f000 8093 	beq.w	800d4c4 <xQueueGenericSend+0x168>
 800d39e:	2500      	movs	r5, #0
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d3a0:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 800d3a4:	f7ff fce6 	bl	800cd74 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800d3a8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800d3aa:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800d3ac:	429a      	cmp	r2, r3
 800d3ae:	f0c0 80ef 	bcc.w	800d590 <xQueueGenericSend+0x234>
 800d3b2:	2f02      	cmp	r7, #2
 800d3b4:	f000 80ec 	beq.w	800d590 <xQueueGenericSend+0x234>
				if( xTicksToWait == ( TickType_t ) 0 )
 800d3b8:	9801      	ldr	r0, [sp, #4]
 800d3ba:	2800      	cmp	r0, #0
 800d3bc:	f000 8101 	beq.w	800d5c2 <xQueueGenericSend+0x266>
				else if( xEntryTimeSet == pdFALSE )
 800d3c0:	2d00      	cmp	r5, #0
 800d3c2:	f000 80e1 	beq.w	800d588 <xQueueGenericSend+0x22c>
		taskEXIT_CRITICAL();
 800d3c6:	f7ff fcf7 	bl	800cdb8 <vPortExitCritical>
		vTaskSuspendAll();
 800d3ca:	f001 fa49 	bl	800e860 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800d3ce:	f7ff fcd1 	bl	800cd74 <vPortEnterCritical>
 800d3d2:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800d3d6:	2bff      	cmp	r3, #255	; 0xff
 800d3d8:	bf04      	itt	eq
 800d3da:	2300      	moveq	r3, #0
 800d3dc:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800d3e0:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800d3e4:	2bff      	cmp	r3, #255	; 0xff
 800d3e6:	bf04      	itt	eq
 800d3e8:	2300      	moveq	r3, #0
 800d3ea:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800d3ee:	f7ff fce3 	bl	800cdb8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800d3f2:	a901      	add	r1, sp, #4
 800d3f4:	a802      	add	r0, sp, #8
 800d3f6:	f001 fb8f 	bl	800eb18 <xTaskCheckForTimeOut>
 800d3fa:	2800      	cmp	r0, #0
 800d3fc:	f040 80e6 	bne.w	800d5cc <xQueueGenericSend+0x270>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800d400:	f7ff fcb8 	bl	800cd74 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 800d404:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800d406:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800d408:	429a      	cmp	r2, r3
 800d40a:	d068      	beq.n	800d4de <xQueueGenericSend+0x182>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800d40c:	f7ff fcd4 	bl	800cdb8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800d410:	f7ff fcb0 	bl	800cd74 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800d414:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
 800d418:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d41a:	2d00      	cmp	r5, #0
 800d41c:	dc04      	bgt.n	800d428 <xQueueGenericSend+0xcc>
 800d41e:	e011      	b.n	800d444 <xQueueGenericSend+0xe8>
			--cTxLock;
 800d420:	1e6a      	subs	r2, r5, #1
 800d422:	b2d3      	uxtb	r3, r2
 800d424:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d426:	b16b      	cbz	r3, 800d444 <xQueueGenericSend+0xe8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d428:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d42a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d42c:	b153      	cbz	r3, 800d444 <xQueueGenericSend+0xe8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d42e:	f001 fb1f 	bl	800ea70 <xTaskRemoveFromEventList>
 800d432:	2800      	cmp	r0, #0
 800d434:	d0f4      	beq.n	800d420 <xQueueGenericSend+0xc4>
						vTaskMissedYield();
 800d436:	f001 fbb7 	bl	800eba8 <vTaskMissedYield>
			--cTxLock;
 800d43a:	1e6a      	subs	r2, r5, #1
 800d43c:	b2d3      	uxtb	r3, r2
 800d43e:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d440:	2b00      	cmp	r3, #0
 800d442:	d1f1      	bne.n	800d428 <xQueueGenericSend+0xcc>
		pxQueue->cTxLock = queueUNLOCKED;
 800d444:	23ff      	movs	r3, #255	; 0xff
 800d446:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800d44a:	f7ff fcb5 	bl	800cdb8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800d44e:	f7ff fc91 	bl	800cd74 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800d452:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 800d456:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d458:	2d00      	cmp	r5, #0
 800d45a:	dd14      	ble.n	800d486 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d45c:	f104 0910 	add.w	r9, r4, #16
 800d460:	e003      	b.n	800d46a <xQueueGenericSend+0x10e>
				--cRxLock;
 800d462:	1e6a      	subs	r2, r5, #1
 800d464:	b2d3      	uxtb	r3, r2
 800d466:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d468:	b16b      	cbz	r3, 800d486 <xQueueGenericSend+0x12a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d46a:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d46c:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d46e:	b153      	cbz	r3, 800d486 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d470:	f001 fafe 	bl	800ea70 <xTaskRemoveFromEventList>
 800d474:	2800      	cmp	r0, #0
 800d476:	d0f4      	beq.n	800d462 <xQueueGenericSend+0x106>
					vTaskMissedYield();
 800d478:	f001 fb96 	bl	800eba8 <vTaskMissedYield>
				--cRxLock;
 800d47c:	1e6a      	subs	r2, r5, #1
 800d47e:	b2d3      	uxtb	r3, r2
 800d480:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d482:	2b00      	cmp	r3, #0
 800d484:	d1f1      	bne.n	800d46a <xQueueGenericSend+0x10e>
		pxQueue->cRxLock = queueUNLOCKED;
 800d486:	23ff      	movs	r3, #255	; 0xff
 800d488:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800d48c:	f7ff fc94 	bl	800cdb8 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800d490:	f001 f9ee 	bl	800e870 <xTaskResumeAll>
 800d494:	2501      	movs	r5, #1
 800d496:	e785      	b.n	800d3a4 <xQueueGenericSend+0x48>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800d498:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800d49a:	2b00      	cmp	r3, #0
 800d49c:	f43f af6b 	beq.w	800d376 <xQueueGenericSend+0x1a>
 800d4a0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d4a4:	f383 8811 	msr	BASEPRI, r3
 800d4a8:	f3bf 8f6f 	isb	sy
 800d4ac:	f3bf 8f4f 	dsb	sy
 800d4b0:	e7fe      	b.n	800d4b0 <xQueueGenericSend+0x154>
 800d4b2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d4b6:	f383 8811 	msr	BASEPRI, r3
 800d4ba:	f3bf 8f6f 	isb	sy
 800d4be:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800d4c2:	e7fe      	b.n	800d4c2 <xQueueGenericSend+0x166>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800d4c4:	9b01      	ldr	r3, [sp, #4]
 800d4c6:	2b00      	cmp	r3, #0
 800d4c8:	f43f af6a 	beq.w	800d3a0 <xQueueGenericSend+0x44>
 800d4cc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d4d0:	f383 8811 	msr	BASEPRI, r3
 800d4d4:	f3bf 8f6f 	isb	sy
 800d4d8:	f3bf 8f4f 	dsb	sy
 800d4dc:	e7fe      	b.n	800d4dc <xQueueGenericSend+0x180>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800d4de:	f104 0910 	add.w	r9, r4, #16
	taskEXIT_CRITICAL();
 800d4e2:	f7ff fc69 	bl	800cdb8 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800d4e6:	9901      	ldr	r1, [sp, #4]
 800d4e8:	4648      	mov	r0, r9
 800d4ea:	f001 fa33 	bl	800e954 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800d4ee:	f7ff fc41 	bl	800cd74 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800d4f2:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800d4f6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d4f8:	2d00      	cmp	r5, #0
 800d4fa:	dc04      	bgt.n	800d506 <xQueueGenericSend+0x1aa>
 800d4fc:	e011      	b.n	800d522 <xQueueGenericSend+0x1c6>
			--cTxLock;
 800d4fe:	1e6b      	subs	r3, r5, #1
 800d500:	b2da      	uxtb	r2, r3
 800d502:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d504:	b16a      	cbz	r2, 800d522 <xQueueGenericSend+0x1c6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d506:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d508:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d50a:	b153      	cbz	r3, 800d522 <xQueueGenericSend+0x1c6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d50c:	f001 fab0 	bl	800ea70 <xTaskRemoveFromEventList>
 800d510:	2800      	cmp	r0, #0
 800d512:	d0f4      	beq.n	800d4fe <xQueueGenericSend+0x1a2>
						vTaskMissedYield();
 800d514:	f001 fb48 	bl	800eba8 <vTaskMissedYield>
			--cTxLock;
 800d518:	1e6b      	subs	r3, r5, #1
 800d51a:	b2da      	uxtb	r2, r3
 800d51c:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d51e:	2a00      	cmp	r2, #0
 800d520:	d1f1      	bne.n	800d506 <xQueueGenericSend+0x1aa>
		pxQueue->cTxLock = queueUNLOCKED;
 800d522:	23ff      	movs	r3, #255	; 0xff
 800d524:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800d528:	f7ff fc46 	bl	800cdb8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800d52c:	f7ff fc22 	bl	800cd74 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800d530:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800d534:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d536:	2d00      	cmp	r5, #0
 800d538:	dc04      	bgt.n	800d544 <xQueueGenericSend+0x1e8>
 800d53a:	e011      	b.n	800d560 <xQueueGenericSend+0x204>
				--cRxLock;
 800d53c:	1e6b      	subs	r3, r5, #1
 800d53e:	b2da      	uxtb	r2, r3
 800d540:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d542:	b16a      	cbz	r2, 800d560 <xQueueGenericSend+0x204>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d544:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d546:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d548:	b153      	cbz	r3, 800d560 <xQueueGenericSend+0x204>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d54a:	f001 fa91 	bl	800ea70 <xTaskRemoveFromEventList>
 800d54e:	2800      	cmp	r0, #0
 800d550:	d0f4      	beq.n	800d53c <xQueueGenericSend+0x1e0>
					vTaskMissedYield();
 800d552:	f001 fb29 	bl	800eba8 <vTaskMissedYield>
				--cRxLock;
 800d556:	1e6b      	subs	r3, r5, #1
 800d558:	b2da      	uxtb	r2, r3
 800d55a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d55c:	2a00      	cmp	r2, #0
 800d55e:	d1f1      	bne.n	800d544 <xQueueGenericSend+0x1e8>
		pxQueue->cRxLock = queueUNLOCKED;
 800d560:	23ff      	movs	r3, #255	; 0xff
 800d562:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800d566:	f7ff fc27 	bl	800cdb8 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800d56a:	f001 f981 	bl	800e870 <xTaskResumeAll>
 800d56e:	2800      	cmp	r0, #0
 800d570:	d190      	bne.n	800d494 <xQueueGenericSend+0x138>
					portYIELD_WITHIN_API();
 800d572:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d576:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d57a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d57e:	f3bf 8f4f 	dsb	sy
 800d582:	f3bf 8f6f 	isb	sy
 800d586:	e785      	b.n	800d494 <xQueueGenericSend+0x138>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800d588:	a802      	add	r0, sp, #8
 800d58a:	f001 fab9 	bl	800eb00 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 800d58e:	e71a      	b.n	800d3c6 <xQueueGenericSend+0x6a>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800d590:	463a      	mov	r2, r7
 800d592:	4641      	mov	r1, r8
 800d594:	4620      	mov	r0, r4
 800d596:	f7ff fd4f 	bl	800d038 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d59a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800d59c:	2b00      	cmp	r3, #0
 800d59e:	d153      	bne.n	800d648 <xQueueGenericSend+0x2ec>
					else if( xYieldRequired != pdFALSE )
 800d5a0:	b148      	cbz	r0, 800d5b6 <xQueueGenericSend+0x25a>
						queueYIELD_IF_USING_PREEMPTION();
 800d5a2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d5a6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d5aa:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d5ae:	f3bf 8f4f 	dsb	sy
 800d5b2:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800d5b6:	f7ff fbff 	bl	800cdb8 <vPortExitCritical>
				return pdPASS;
 800d5ba:	2001      	movs	r0, #1
}
 800d5bc:	b005      	add	sp, #20
 800d5be:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d5c2:	9000      	str	r0, [sp, #0]
					taskEXIT_CRITICAL();
 800d5c4:	f7ff fbf8 	bl	800cdb8 <vPortExitCritical>
					return errQUEUE_FULL;
 800d5c8:	9800      	ldr	r0, [sp, #0]
 800d5ca:	e7f7      	b.n	800d5bc <xQueueGenericSend+0x260>
	taskENTER_CRITICAL();
 800d5cc:	f7ff fbd2 	bl	800cd74 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800d5d0:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800d5d4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d5d6:	2d00      	cmp	r5, #0
 800d5d8:	dd10      	ble.n	800d5fc <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d5da:	f104 0624 	add.w	r6, r4, #36	; 0x24
 800d5de:	e003      	b.n	800d5e8 <xQueueGenericSend+0x28c>
			--cTxLock;
 800d5e0:	1e6b      	subs	r3, r5, #1
 800d5e2:	b2da      	uxtb	r2, r3
 800d5e4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d5e6:	b14a      	cbz	r2, 800d5fc <xQueueGenericSend+0x2a0>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d5e8:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d5ea:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d5ec:	b133      	cbz	r3, 800d5fc <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d5ee:	f001 fa3f 	bl	800ea70 <xTaskRemoveFromEventList>
 800d5f2:	2800      	cmp	r0, #0
 800d5f4:	d0f4      	beq.n	800d5e0 <xQueueGenericSend+0x284>
						vTaskMissedYield();
 800d5f6:	f001 fad7 	bl	800eba8 <vTaskMissedYield>
 800d5fa:	e7f1      	b.n	800d5e0 <xQueueGenericSend+0x284>
		pxQueue->cTxLock = queueUNLOCKED;
 800d5fc:	23ff      	movs	r3, #255	; 0xff
 800d5fe:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800d602:	f7ff fbd9 	bl	800cdb8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800d606:	f7ff fbb5 	bl	800cd74 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800d60a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800d60e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d610:	2d00      	cmp	r5, #0
 800d612:	dd10      	ble.n	800d636 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d614:	f104 0610 	add.w	r6, r4, #16
 800d618:	e003      	b.n	800d622 <xQueueGenericSend+0x2c6>
				--cRxLock;
 800d61a:	1e6b      	subs	r3, r5, #1
 800d61c:	b2da      	uxtb	r2, r3
 800d61e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d620:	b14a      	cbz	r2, 800d636 <xQueueGenericSend+0x2da>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d622:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d624:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d626:	b133      	cbz	r3, 800d636 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d628:	f001 fa22 	bl	800ea70 <xTaskRemoveFromEventList>
 800d62c:	2800      	cmp	r0, #0
 800d62e:	d0f4      	beq.n	800d61a <xQueueGenericSend+0x2be>
					vTaskMissedYield();
 800d630:	f001 faba 	bl	800eba8 <vTaskMissedYield>
 800d634:	e7f1      	b.n	800d61a <xQueueGenericSend+0x2be>
		pxQueue->cRxLock = queueUNLOCKED;
 800d636:	23ff      	movs	r3, #255	; 0xff
 800d638:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800d63c:	f7ff fbbc 	bl	800cdb8 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800d640:	f001 f916 	bl	800e870 <xTaskResumeAll>
			return errQUEUE_FULL;
 800d644:	2000      	movs	r0, #0
 800d646:	e7b9      	b.n	800d5bc <xQueueGenericSend+0x260>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d648:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800d64c:	f001 fa10 	bl	800ea70 <xTaskRemoveFromEventList>
 800d650:	2800      	cmp	r0, #0
 800d652:	d0b0      	beq.n	800d5b6 <xQueueGenericSend+0x25a>
 800d654:	e7a5      	b.n	800d5a2 <xQueueGenericSend+0x246>
 800d656:	bf00      	nop

0800d658 <xQueueGenericSendFromISR>:
	configASSERT( pxQueue );
 800d658:	2800      	cmp	r0, #0
 800d65a:	d04b      	beq.n	800d6f4 <xQueueGenericSendFromISR+0x9c>
{
 800d65c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d660:	460e      	mov	r6, r1
 800d662:	4617      	mov	r7, r2
 800d664:	461d      	mov	r5, r3
 800d666:	4604      	mov	r4, r0
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800d668:	b321      	cbz	r1, 800d6b4 <xQueueGenericSendFromISR+0x5c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800d66a:	2d02      	cmp	r5, #2
 800d66c:	d10b      	bne.n	800d686 <xQueueGenericSendFromISR+0x2e>
 800d66e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800d670:	2b01      	cmp	r3, #1
 800d672:	d008      	beq.n	800d686 <xQueueGenericSendFromISR+0x2e>
 800d674:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d678:	f383 8811 	msr	BASEPRI, r3
 800d67c:	f3bf 8f6f 	isb	sy
 800d680:	f3bf 8f4f 	dsb	sy
 800d684:	e7fe      	b.n	800d684 <xQueueGenericSendFromISR+0x2c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800d686:	f7ff fca9 	bl	800cfdc <vPortValidateInterruptPriority>
	__asm volatile
 800d68a:	f3ef 8811 	mrs	r8, BASEPRI
 800d68e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d692:	f383 8811 	msr	BASEPRI, r3
 800d696:	f3bf 8f6f 	isb	sy
 800d69a:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800d69e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800d6a0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800d6a2:	429a      	cmp	r2, r3
 800d6a4:	d312      	bcc.n	800d6cc <xQueueGenericSendFromISR+0x74>
 800d6a6:	2d02      	cmp	r5, #2
 800d6a8:	d010      	beq.n	800d6cc <xQueueGenericSendFromISR+0x74>
			xReturn = errQUEUE_FULL;
 800d6aa:	2000      	movs	r0, #0
	__asm volatile
 800d6ac:	f388 8811 	msr	BASEPRI, r8
}
 800d6b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800d6b4:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800d6b6:	2b00      	cmp	r3, #0
 800d6b8:	d0d7      	beq.n	800d66a <xQueueGenericSendFromISR+0x12>
	__asm volatile
 800d6ba:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d6be:	f383 8811 	msr	BASEPRI, r3
 800d6c2:	f3bf 8f6f 	isb	sy
 800d6c6:	f3bf 8f4f 	dsb	sy
 800d6ca:	e7fe      	b.n	800d6ca <xQueueGenericSendFromISR+0x72>
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800d6cc:	462a      	mov	r2, r5
			const int8_t cTxLock = pxQueue->cTxLock;
 800d6ce:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 800d6d2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800d6d4:	4631      	mov	r1, r6
			const int8_t cTxLock = pxQueue->cTxLock;
 800d6d6:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800d6d8:	4620      	mov	r0, r4
 800d6da:	f7ff fcad 	bl	800d038 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800d6de:	1c6b      	adds	r3, r5, #1
 800d6e0:	d011      	beq.n	800d706 <xQueueGenericSendFromISR+0xae>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800d6e2:	1c6b      	adds	r3, r5, #1
 800d6e4:	b25b      	sxtb	r3, r3
 800d6e6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
			xReturn = pdPASS;
 800d6ea:	2001      	movs	r0, #1
	__asm volatile
 800d6ec:	f388 8811 	msr	BASEPRI, r8
}
 800d6f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	__asm volatile
 800d6f4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d6f8:	f383 8811 	msr	BASEPRI, r3
 800d6fc:	f3bf 8f6f 	isb	sy
 800d700:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800d704:	e7fe      	b.n	800d704 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d706:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800d708:	2b00      	cmp	r3, #0
 800d70a:	d0ee      	beq.n	800d6ea <xQueueGenericSendFromISR+0x92>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d70c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800d710:	f001 f9ae 	bl	800ea70 <xTaskRemoveFromEventList>
 800d714:	2800      	cmp	r0, #0
 800d716:	d0e8      	beq.n	800d6ea <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 800d718:	2f00      	cmp	r7, #0
 800d71a:	d0e6      	beq.n	800d6ea <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800d71c:	2001      	movs	r0, #1
 800d71e:	6038      	str	r0, [r7, #0]
 800d720:	e7c4      	b.n	800d6ac <xQueueGenericSendFromISR+0x54>
 800d722:	bf00      	nop

0800d724 <xQueueGiveFromISR>:
	configASSERT( pxQueue );
 800d724:	b370      	cbz	r0, 800d784 <xQueueGiveFromISR+0x60>
	configASSERT( pxQueue->uxItemSize == 0 );
 800d726:	6c03      	ldr	r3, [r0, #64]	; 0x40
{
 800d728:	b570      	push	{r4, r5, r6, lr}
 800d72a:	4606      	mov	r6, r0
	configASSERT( pxQueue->uxItemSize == 0 );
 800d72c:	b143      	cbz	r3, 800d740 <xQueueGiveFromISR+0x1c>
 800d72e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d732:	f383 8811 	msr	BASEPRI, r3
 800d736:	f3bf 8f6f 	isb	sy
 800d73a:	f3bf 8f4f 	dsb	sy
 800d73e:	e7fe      	b.n	800d73e <xQueueGiveFromISR+0x1a>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800d740:	6803      	ldr	r3, [r0, #0]
 800d742:	460c      	mov	r4, r1
 800d744:	b33b      	cbz	r3, 800d796 <xQueueGiveFromISR+0x72>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800d746:	f7ff fc49 	bl	800cfdc <vPortValidateInterruptPriority>
	__asm volatile
 800d74a:	f3ef 8511 	mrs	r5, BASEPRI
 800d74e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d752:	f383 8811 	msr	BASEPRI, r3
 800d756:	f3bf 8f6f 	isb	sy
 800d75a:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800d75e:	6bb3      	ldr	r3, [r6, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800d760:	6bf2      	ldr	r2, [r6, #60]	; 0x3c
 800d762:	429a      	cmp	r2, r3
 800d764:	d923      	bls.n	800d7ae <xQueueGiveFromISR+0x8a>
			const int8_t cTxLock = pxQueue->cTxLock;
 800d766:	f896 2045 	ldrb.w	r2, [r6, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d76a:	3301      	adds	r3, #1
			if( cTxLock == queueUNLOCKED )
 800d76c:	2aff      	cmp	r2, #255	; 0xff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d76e:	63b3      	str	r3, [r6, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 800d770:	b253      	sxtb	r3, r2
			if( cTxLock == queueUNLOCKED )
 800d772:	d020      	beq.n	800d7b6 <xQueueGiveFromISR+0x92>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800d774:	3301      	adds	r3, #1
 800d776:	b25b      	sxtb	r3, r3
 800d778:	f886 3045 	strb.w	r3, [r6, #69]	; 0x45
			xReturn = pdPASS;
 800d77c:	2001      	movs	r0, #1
	__asm volatile
 800d77e:	f385 8811 	msr	BASEPRI, r5
}
 800d782:	bd70      	pop	{r4, r5, r6, pc}
	__asm volatile
 800d784:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d788:	f383 8811 	msr	BASEPRI, r3
 800d78c:	f3bf 8f6f 	isb	sy
 800d790:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800d794:	e7fe      	b.n	800d794 <xQueueGiveFromISR+0x70>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800d796:	6883      	ldr	r3, [r0, #8]
 800d798:	2b00      	cmp	r3, #0
 800d79a:	d0d4      	beq.n	800d746 <xQueueGiveFromISR+0x22>
 800d79c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d7a0:	f383 8811 	msr	BASEPRI, r3
 800d7a4:	f3bf 8f6f 	isb	sy
 800d7a8:	f3bf 8f4f 	dsb	sy
 800d7ac:	e7fe      	b.n	800d7ac <xQueueGiveFromISR+0x88>
			xReturn = errQUEUE_FULL;
 800d7ae:	2000      	movs	r0, #0
	__asm volatile
 800d7b0:	f385 8811 	msr	BASEPRI, r5
}
 800d7b4:	bd70      	pop	{r4, r5, r6, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d7b6:	6a73      	ldr	r3, [r6, #36]	; 0x24
 800d7b8:	2b00      	cmp	r3, #0
 800d7ba:	d0df      	beq.n	800d77c <xQueueGiveFromISR+0x58>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d7bc:	f106 0024 	add.w	r0, r6, #36	; 0x24
 800d7c0:	f001 f956 	bl	800ea70 <xTaskRemoveFromEventList>
 800d7c4:	2800      	cmp	r0, #0
 800d7c6:	d0d9      	beq.n	800d77c <xQueueGiveFromISR+0x58>
							if( pxHigherPriorityTaskWoken != NULL )
 800d7c8:	2c00      	cmp	r4, #0
 800d7ca:	d0d7      	beq.n	800d77c <xQueueGiveFromISR+0x58>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800d7cc:	2001      	movs	r0, #1
 800d7ce:	6020      	str	r0, [r4, #0]
 800d7d0:	e7ee      	b.n	800d7b0 <xQueueGiveFromISR+0x8c>
 800d7d2:	bf00      	nop

0800d7d4 <xQueueReceive>:
{
 800d7d4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d7d8:	b085      	sub	sp, #20
 800d7da:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800d7dc:	2800      	cmp	r0, #0
 800d7de:	f000 815c 	beq.w	800da9a <xQueueReceive+0x2c6>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800d7e2:	460f      	mov	r7, r1
 800d7e4:	4604      	mov	r4, r0
 800d7e6:	2900      	cmp	r1, #0
 800d7e8:	d079      	beq.n	800d8de <xQueueReceive+0x10a>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800d7ea:	f001 f9e3 	bl	800ebb4 <xTaskGetSchedulerState>
 800d7ee:	2800      	cmp	r0, #0
 800d7f0:	f000 8081 	beq.w	800d8f6 <xQueueReceive+0x122>
		taskENTER_CRITICAL();
 800d7f4:	f7ff fabe 	bl	800cd74 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800d7f8:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800d7fa:	2d00      	cmp	r5, #0
 800d7fc:	f040 8138 	bne.w	800da70 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800d800:	9b01      	ldr	r3, [sp, #4]
 800d802:	2b00      	cmp	r3, #0
 800d804:	f000 80d5 	beq.w	800d9b2 <xQueueReceive+0x1de>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800d808:	a802      	add	r0, sp, #8
 800d80a:	f001 f979 	bl	800eb00 <vTaskInternalSetTimeOutState>
		prvLockQueue( pxQueue );
 800d80e:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d810:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskEXIT_CRITICAL();
 800d814:	f7ff fad0 	bl	800cdb8 <vPortExitCritical>
		vTaskSuspendAll();
 800d818:	f001 f822 	bl	800e860 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800d81c:	f7ff faaa 	bl	800cd74 <vPortEnterCritical>
 800d820:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800d824:	2bff      	cmp	r3, #255	; 0xff
 800d826:	bf08      	it	eq
 800d828:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 800d82c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800d830:	2bff      	cmp	r3, #255	; 0xff
 800d832:	bf08      	it	eq
 800d834:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 800d838:	f7ff fabe 	bl	800cdb8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800d83c:	a901      	add	r1, sp, #4
 800d83e:	a802      	add	r0, sp, #8
 800d840:	f001 f96a 	bl	800eb18 <xTaskCheckForTimeOut>
 800d844:	2800      	cmp	r0, #0
 800d846:	d163      	bne.n	800d910 <xQueueReceive+0x13c>
	taskENTER_CRITICAL();
 800d848:	f7ff fa94 	bl	800cd74 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800d84c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800d84e:	2b00      	cmp	r3, #0
 800d850:	f000 80b5 	beq.w	800d9be <xQueueReceive+0x1ea>
	taskEXIT_CRITICAL();
 800d854:	f7ff fab0 	bl	800cdb8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800d858:	f7ff fa8c 	bl	800cd74 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800d85c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800d860:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d862:	2d00      	cmp	r5, #0
 800d864:	dc04      	bgt.n	800d870 <xQueueReceive+0x9c>
 800d866:	e011      	b.n	800d88c <xQueueReceive+0xb8>
			--cTxLock;
 800d868:	1e6b      	subs	r3, r5, #1
 800d86a:	b2da      	uxtb	r2, r3
 800d86c:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d86e:	b16a      	cbz	r2, 800d88c <xQueueReceive+0xb8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d870:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d872:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d874:	b153      	cbz	r3, 800d88c <xQueueReceive+0xb8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d876:	f001 f8fb 	bl	800ea70 <xTaskRemoveFromEventList>
 800d87a:	2800      	cmp	r0, #0
 800d87c:	d0f4      	beq.n	800d868 <xQueueReceive+0x94>
						vTaskMissedYield();
 800d87e:	f001 f993 	bl	800eba8 <vTaskMissedYield>
			--cTxLock;
 800d882:	1e6b      	subs	r3, r5, #1
 800d884:	b2da      	uxtb	r2, r3
 800d886:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d888:	2a00      	cmp	r2, #0
 800d88a:	d1f1      	bne.n	800d870 <xQueueReceive+0x9c>
		pxQueue->cTxLock = queueUNLOCKED;
 800d88c:	23ff      	movs	r3, #255	; 0xff
 800d88e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800d892:	f7ff fa91 	bl	800cdb8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800d896:	f7ff fa6d 	bl	800cd74 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800d89a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800d89e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d8a0:	2d00      	cmp	r5, #0
 800d8a2:	dd14      	ble.n	800d8ce <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d8a4:	f104 0910 	add.w	r9, r4, #16
 800d8a8:	e003      	b.n	800d8b2 <xQueueReceive+0xde>
				--cRxLock;
 800d8aa:	1e6b      	subs	r3, r5, #1
 800d8ac:	b2da      	uxtb	r2, r3
 800d8ae:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d8b0:	b16a      	cbz	r2, 800d8ce <xQueueReceive+0xfa>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d8b2:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d8b4:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d8b6:	b153      	cbz	r3, 800d8ce <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d8b8:	f001 f8da 	bl	800ea70 <xTaskRemoveFromEventList>
 800d8bc:	2800      	cmp	r0, #0
 800d8be:	d0f4      	beq.n	800d8aa <xQueueReceive+0xd6>
					vTaskMissedYield();
 800d8c0:	f001 f972 	bl	800eba8 <vTaskMissedYield>
				--cRxLock;
 800d8c4:	1e6b      	subs	r3, r5, #1
 800d8c6:	b2da      	uxtb	r2, r3
 800d8c8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d8ca:	2a00      	cmp	r2, #0
 800d8cc:	d1f1      	bne.n	800d8b2 <xQueueReceive+0xde>
		pxQueue->cRxLock = queueUNLOCKED;
 800d8ce:	23ff      	movs	r3, #255	; 0xff
 800d8d0:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800d8d4:	f7ff fa70 	bl	800cdb8 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800d8d8:	f000 ffca 	bl	800e870 <xTaskResumeAll>
		taskENTER_CRITICAL();
 800d8dc:	e060      	b.n	800d9a0 <xQueueReceive+0x1cc>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800d8de:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800d8e0:	2b00      	cmp	r3, #0
 800d8e2:	d082      	beq.n	800d7ea <xQueueReceive+0x16>
	__asm volatile
 800d8e4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d8e8:	f383 8811 	msr	BASEPRI, r3
 800d8ec:	f3bf 8f6f 	isb	sy
 800d8f0:	f3bf 8f4f 	dsb	sy
 800d8f4:	e7fe      	b.n	800d8f4 <xQueueReceive+0x120>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800d8f6:	9b01      	ldr	r3, [sp, #4]
 800d8f8:	2b00      	cmp	r3, #0
 800d8fa:	f43f af7b 	beq.w	800d7f4 <xQueueReceive+0x20>
 800d8fe:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d902:	f383 8811 	msr	BASEPRI, r3
 800d906:	f3bf 8f6f 	isb	sy
 800d90a:	f3bf 8f4f 	dsb	sy
 800d90e:	e7fe      	b.n	800d90e <xQueueReceive+0x13a>
	taskENTER_CRITICAL();
 800d910:	f7ff fa30 	bl	800cd74 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800d914:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800d918:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d91a:	2d00      	cmp	r5, #0
 800d91c:	dc04      	bgt.n	800d928 <xQueueReceive+0x154>
 800d91e:	e011      	b.n	800d944 <xQueueReceive+0x170>
			--cTxLock;
 800d920:	1e6b      	subs	r3, r5, #1
 800d922:	b2da      	uxtb	r2, r3
 800d924:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d926:	b16a      	cbz	r2, 800d944 <xQueueReceive+0x170>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d928:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d92a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d92c:	b153      	cbz	r3, 800d944 <xQueueReceive+0x170>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d92e:	f001 f89f 	bl	800ea70 <xTaskRemoveFromEventList>
 800d932:	2800      	cmp	r0, #0
 800d934:	d0f4      	beq.n	800d920 <xQueueReceive+0x14c>
						vTaskMissedYield();
 800d936:	f001 f937 	bl	800eba8 <vTaskMissedYield>
			--cTxLock;
 800d93a:	1e6b      	subs	r3, r5, #1
 800d93c:	b2da      	uxtb	r2, r3
 800d93e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d940:	2a00      	cmp	r2, #0
 800d942:	d1f1      	bne.n	800d928 <xQueueReceive+0x154>
		pxQueue->cTxLock = queueUNLOCKED;
 800d944:	23ff      	movs	r3, #255	; 0xff
 800d946:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800d94a:	f7ff fa35 	bl	800cdb8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800d94e:	f7ff fa11 	bl	800cd74 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800d952:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800d956:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d958:	2d00      	cmp	r5, #0
 800d95a:	dd14      	ble.n	800d986 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d95c:	f104 0910 	add.w	r9, r4, #16
 800d960:	e003      	b.n	800d96a <xQueueReceive+0x196>
				--cRxLock;
 800d962:	1e6b      	subs	r3, r5, #1
 800d964:	b2da      	uxtb	r2, r3
 800d966:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d968:	b16a      	cbz	r2, 800d986 <xQueueReceive+0x1b2>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d96a:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d96c:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d96e:	b153      	cbz	r3, 800d986 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d970:	f001 f87e 	bl	800ea70 <xTaskRemoveFromEventList>
 800d974:	2800      	cmp	r0, #0
 800d976:	d0f4      	beq.n	800d962 <xQueueReceive+0x18e>
					vTaskMissedYield();
 800d978:	f001 f916 	bl	800eba8 <vTaskMissedYield>
				--cRxLock;
 800d97c:	1e6b      	subs	r3, r5, #1
 800d97e:	b2da      	uxtb	r2, r3
 800d980:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d982:	2a00      	cmp	r2, #0
 800d984:	d1f1      	bne.n	800d96a <xQueueReceive+0x196>
		pxQueue->cRxLock = queueUNLOCKED;
 800d986:	23ff      	movs	r3, #255	; 0xff
 800d988:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800d98c:	f7ff fa14 	bl	800cdb8 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800d990:	f000 ff6e 	bl	800e870 <xTaskResumeAll>
	taskENTER_CRITICAL();
 800d994:	f7ff f9ee 	bl	800cd74 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800d998:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800d99a:	b153      	cbz	r3, 800d9b2 <xQueueReceive+0x1de>
	taskEXIT_CRITICAL();
 800d99c:	f7ff fa0c 	bl	800cdb8 <vPortExitCritical>
		taskENTER_CRITICAL();
 800d9a0:	f7ff f9e8 	bl	800cd74 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800d9a4:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800d9a6:	2d00      	cmp	r5, #0
 800d9a8:	d162      	bne.n	800da70 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800d9aa:	9b01      	ldr	r3, [sp, #4]
 800d9ac:	2b00      	cmp	r3, #0
 800d9ae:	f47f af31 	bne.w	800d814 <xQueueReceive+0x40>
					taskEXIT_CRITICAL();
 800d9b2:	f7ff fa01 	bl	800cdb8 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800d9b6:	2000      	movs	r0, #0
}
 800d9b8:	b005      	add	sp, #20
 800d9ba:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 800d9be:	f7ff f9fb 	bl	800cdb8 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800d9c2:	9901      	ldr	r1, [sp, #4]
 800d9c4:	4630      	mov	r0, r6
 800d9c6:	f000 ffc5 	bl	800e954 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800d9ca:	f7ff f9d3 	bl	800cd74 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800d9ce:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800d9d2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d9d4:	2d00      	cmp	r5, #0
 800d9d6:	dc04      	bgt.n	800d9e2 <xQueueReceive+0x20e>
 800d9d8:	e011      	b.n	800d9fe <xQueueReceive+0x22a>
			--cTxLock;
 800d9da:	1e6b      	subs	r3, r5, #1
 800d9dc:	b2da      	uxtb	r2, r3
 800d9de:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d9e0:	b16a      	cbz	r2, 800d9fe <xQueueReceive+0x22a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d9e2:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d9e4:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d9e6:	b153      	cbz	r3, 800d9fe <xQueueReceive+0x22a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d9e8:	f001 f842 	bl	800ea70 <xTaskRemoveFromEventList>
 800d9ec:	2800      	cmp	r0, #0
 800d9ee:	d0f4      	beq.n	800d9da <xQueueReceive+0x206>
						vTaskMissedYield();
 800d9f0:	f001 f8da 	bl	800eba8 <vTaskMissedYield>
			--cTxLock;
 800d9f4:	1e6b      	subs	r3, r5, #1
 800d9f6:	b2da      	uxtb	r2, r3
 800d9f8:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d9fa:	2a00      	cmp	r2, #0
 800d9fc:	d1f1      	bne.n	800d9e2 <xQueueReceive+0x20e>
		pxQueue->cTxLock = queueUNLOCKED;
 800d9fe:	23ff      	movs	r3, #255	; 0xff
 800da00:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800da04:	f7ff f9d8 	bl	800cdb8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800da08:	f7ff f9b4 	bl	800cd74 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800da0c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800da10:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800da12:	2d00      	cmp	r5, #0
 800da14:	dd14      	ble.n	800da40 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800da16:	f104 0910 	add.w	r9, r4, #16
 800da1a:	e003      	b.n	800da24 <xQueueReceive+0x250>
				--cRxLock;
 800da1c:	1e6b      	subs	r3, r5, #1
 800da1e:	b2da      	uxtb	r2, r3
 800da20:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800da22:	b16a      	cbz	r2, 800da40 <xQueueReceive+0x26c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800da24:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800da26:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800da28:	b153      	cbz	r3, 800da40 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800da2a:	f001 f821 	bl	800ea70 <xTaskRemoveFromEventList>
 800da2e:	2800      	cmp	r0, #0
 800da30:	d0f4      	beq.n	800da1c <xQueueReceive+0x248>
					vTaskMissedYield();
 800da32:	f001 f8b9 	bl	800eba8 <vTaskMissedYield>
				--cRxLock;
 800da36:	1e6b      	subs	r3, r5, #1
 800da38:	b2da      	uxtb	r2, r3
 800da3a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800da3c:	2a00      	cmp	r2, #0
 800da3e:	d1f1      	bne.n	800da24 <xQueueReceive+0x250>
		pxQueue->cRxLock = queueUNLOCKED;
 800da40:	23ff      	movs	r3, #255	; 0xff
 800da42:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800da46:	f7ff f9b7 	bl	800cdb8 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800da4a:	f000 ff11 	bl	800e870 <xTaskResumeAll>
 800da4e:	2800      	cmp	r0, #0
 800da50:	d1a6      	bne.n	800d9a0 <xQueueReceive+0x1cc>
					portYIELD_WITHIN_API();
 800da52:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800da56:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800da5a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800da5e:	f3bf 8f4f 	dsb	sy
 800da62:	f3bf 8f6f 	isb	sy
		taskENTER_CRITICAL();
 800da66:	f7ff f985 	bl	800cd74 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800da6a:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800da6c:	2d00      	cmp	r5, #0
 800da6e:	d09c      	beq.n	800d9aa <xQueueReceive+0x1d6>
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800da70:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800da72:	b152      	cbz	r2, 800da8a <xQueueReceive+0x2b6>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800da74:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800da76:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800da78:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800da7a:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800da7c:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800da7e:	bf24      	itt	cs
 800da80:	6821      	ldrcs	r1, [r4, #0]
 800da82:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800da84:	4638      	mov	r0, r7
 800da86:	f01a fe96 	bl	80287b6 <memcpy>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800da8a:	3d01      	subs	r5, #1
 800da8c:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800da8e:	6923      	ldr	r3, [r4, #16]
 800da90:	b963      	cbnz	r3, 800daac <xQueueReceive+0x2d8>
				taskEXIT_CRITICAL();
 800da92:	f7ff f991 	bl	800cdb8 <vPortExitCritical>
				return pdPASS;
 800da96:	2001      	movs	r0, #1
 800da98:	e78e      	b.n	800d9b8 <xQueueReceive+0x1e4>
 800da9a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800da9e:	f383 8811 	msr	BASEPRI, r3
 800daa2:	f3bf 8f6f 	isb	sy
 800daa6:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 800daaa:	e7fe      	b.n	800daaa <xQueueReceive+0x2d6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800daac:	f104 0010 	add.w	r0, r4, #16
 800dab0:	f000 ffde 	bl	800ea70 <xTaskRemoveFromEventList>
 800dab4:	2800      	cmp	r0, #0
 800dab6:	d0ec      	beq.n	800da92 <xQueueReceive+0x2be>
						queueYIELD_IF_USING_PREEMPTION();
 800dab8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800dabc:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800dac0:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800dac4:	f3bf 8f4f 	dsb	sy
 800dac8:	f3bf 8f6f 	isb	sy
 800dacc:	e7e1      	b.n	800da92 <xQueueReceive+0x2be>
 800dace:	bf00      	nop

0800dad0 <xQueueSemaphoreTake>:
{
 800dad0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dad4:	b084      	sub	sp, #16
 800dad6:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 800dad8:	2800      	cmp	r0, #0
 800dada:	d05c      	beq.n	800db96 <xQueueSemaphoreTake+0xc6>
	configASSERT( pxQueue->uxItemSize == 0 );
 800dadc:	6c07      	ldr	r7, [r0, #64]	; 0x40
 800dade:	4604      	mov	r4, r0
 800dae0:	b147      	cbz	r7, 800daf4 <xQueueSemaphoreTake+0x24>
 800dae2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dae6:	f383 8811 	msr	BASEPRI, r3
 800daea:	f3bf 8f6f 	isb	sy
 800daee:	f3bf 8f4f 	dsb	sy
 800daf2:	e7fe      	b.n	800daf2 <xQueueSemaphoreTake+0x22>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800daf4:	f001 f85e 	bl	800ebb4 <xTaskGetSchedulerState>
 800daf8:	4605      	mov	r5, r0
 800dafa:	2800      	cmp	r0, #0
 800dafc:	d054      	beq.n	800dba8 <xQueueSemaphoreTake+0xd8>
 800dafe:	463d      	mov	r5, r7
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800db00:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 800db04:	f7ff f936 	bl	800cd74 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 800db08:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 800db0a:	2b00      	cmp	r3, #0
 800db0c:	f040 8148 	bne.w	800dda0 <xQueueSemaphoreTake+0x2d0>
				if( xTicksToWait == ( TickType_t ) 0 )
 800db10:	9b01      	ldr	r3, [sp, #4]
 800db12:	2b00      	cmp	r3, #0
 800db14:	f000 813a 	beq.w	800dd8c <xQueueSemaphoreTake+0x2bc>
				else if( xEntryTimeSet == pdFALSE )
 800db18:	2d00      	cmp	r5, #0
 800db1a:	f000 809d 	beq.w	800dc58 <xQueueSemaphoreTake+0x188>
		taskEXIT_CRITICAL();
 800db1e:	f7ff f94b 	bl	800cdb8 <vPortExitCritical>
		vTaskSuspendAll();
 800db22:	f000 fe9d 	bl	800e860 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800db26:	f7ff f925 	bl	800cd74 <vPortEnterCritical>
 800db2a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800db2e:	2bff      	cmp	r3, #255	; 0xff
 800db30:	bf04      	itt	eq
 800db32:	2300      	moveq	r3, #0
 800db34:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800db38:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800db3c:	2bff      	cmp	r3, #255	; 0xff
 800db3e:	bf04      	itt	eq
 800db40:	2300      	moveq	r3, #0
 800db42:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800db46:	f7ff f937 	bl	800cdb8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800db4a:	a901      	add	r1, sp, #4
 800db4c:	a802      	add	r0, sp, #8
 800db4e:	f000 ffe3 	bl	800eb18 <xTaskCheckForTimeOut>
 800db52:	2800      	cmp	r0, #0
 800db54:	d135      	bne.n	800dbc2 <xQueueSemaphoreTake+0xf2>
	taskENTER_CRITICAL();
 800db56:	f7ff f90d 	bl	800cd74 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800db5a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800db5c:	2b00      	cmp	r3, #0
 800db5e:	f000 80a4 	beq.w	800dcaa <xQueueSemaphoreTake+0x1da>
	taskEXIT_CRITICAL();
 800db62:	f7ff f929 	bl	800cdb8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800db66:	f7ff f905 	bl	800cd74 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800db6a:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800db6e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800db70:	2d00      	cmp	r5, #0
 800db72:	dc05      	bgt.n	800db80 <xQueueSemaphoreTake+0xb0>
 800db74:	e074      	b.n	800dc60 <xQueueSemaphoreTake+0x190>
			--cTxLock;
 800db76:	1e6b      	subs	r3, r5, #1
 800db78:	b2da      	uxtb	r2, r3
 800db7a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800db7c:	2a00      	cmp	r2, #0
 800db7e:	d06f      	beq.n	800dc60 <xQueueSemaphoreTake+0x190>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800db80:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800db82:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800db84:	2b00      	cmp	r3, #0
 800db86:	d06b      	beq.n	800dc60 <xQueueSemaphoreTake+0x190>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800db88:	f000 ff72 	bl	800ea70 <xTaskRemoveFromEventList>
 800db8c:	2800      	cmp	r0, #0
 800db8e:	d0f2      	beq.n	800db76 <xQueueSemaphoreTake+0xa6>
						vTaskMissedYield();
 800db90:	f001 f80a 	bl	800eba8 <vTaskMissedYield>
 800db94:	e7ef      	b.n	800db76 <xQueueSemaphoreTake+0xa6>
 800db96:	f04f 0350 	mov.w	r3, #80	; 0x50
 800db9a:	f383 8811 	msr	BASEPRI, r3
 800db9e:	f3bf 8f6f 	isb	sy
 800dba2:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 800dba6:	e7fe      	b.n	800dba6 <xQueueSemaphoreTake+0xd6>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800dba8:	9b01      	ldr	r3, [sp, #4]
 800dbaa:	2b00      	cmp	r3, #0
 800dbac:	f000 80d4 	beq.w	800dd58 <xQueueSemaphoreTake+0x288>
 800dbb0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dbb4:	f383 8811 	msr	BASEPRI, r3
 800dbb8:	f3bf 8f6f 	isb	sy
 800dbbc:	f3bf 8f4f 	dsb	sy
 800dbc0:	e7fe      	b.n	800dbc0 <xQueueSemaphoreTake+0xf0>
	taskENTER_CRITICAL();
 800dbc2:	f7ff f8d7 	bl	800cd74 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800dbc6:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800dbca:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dbcc:	2d00      	cmp	r5, #0
 800dbce:	dc04      	bgt.n	800dbda <xQueueSemaphoreTake+0x10a>
 800dbd0:	e011      	b.n	800dbf6 <xQueueSemaphoreTake+0x126>
			--cTxLock;
 800dbd2:	1e6b      	subs	r3, r5, #1
 800dbd4:	b2da      	uxtb	r2, r3
 800dbd6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dbd8:	b16a      	cbz	r2, 800dbf6 <xQueueSemaphoreTake+0x126>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dbda:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dbdc:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dbde:	b153      	cbz	r3, 800dbf6 <xQueueSemaphoreTake+0x126>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dbe0:	f000 ff46 	bl	800ea70 <xTaskRemoveFromEventList>
 800dbe4:	2800      	cmp	r0, #0
 800dbe6:	d0f4      	beq.n	800dbd2 <xQueueSemaphoreTake+0x102>
						vTaskMissedYield();
 800dbe8:	f000 ffde 	bl	800eba8 <vTaskMissedYield>
			--cTxLock;
 800dbec:	1e6b      	subs	r3, r5, #1
 800dbee:	b2da      	uxtb	r2, r3
 800dbf0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dbf2:	2a00      	cmp	r2, #0
 800dbf4:	d1f1      	bne.n	800dbda <xQueueSemaphoreTake+0x10a>
		pxQueue->cTxLock = queueUNLOCKED;
 800dbf6:	23ff      	movs	r3, #255	; 0xff
 800dbf8:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800dbfc:	f7ff f8dc 	bl	800cdb8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800dc00:	f7ff f8b8 	bl	800cd74 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800dc04:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800dc08:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dc0a:	2d00      	cmp	r5, #0
 800dc0c:	dd14      	ble.n	800dc38 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dc0e:	f104 0810 	add.w	r8, r4, #16
 800dc12:	e003      	b.n	800dc1c <xQueueSemaphoreTake+0x14c>
				--cRxLock;
 800dc14:	1e6b      	subs	r3, r5, #1
 800dc16:	b2da      	uxtb	r2, r3
 800dc18:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dc1a:	b16a      	cbz	r2, 800dc38 <xQueueSemaphoreTake+0x168>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dc1c:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dc1e:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dc20:	b153      	cbz	r3, 800dc38 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dc22:	f000 ff25 	bl	800ea70 <xTaskRemoveFromEventList>
 800dc26:	2800      	cmp	r0, #0
 800dc28:	d0f4      	beq.n	800dc14 <xQueueSemaphoreTake+0x144>
					vTaskMissedYield();
 800dc2a:	f000 ffbd 	bl	800eba8 <vTaskMissedYield>
				--cRxLock;
 800dc2e:	1e6b      	subs	r3, r5, #1
 800dc30:	b2da      	uxtb	r2, r3
 800dc32:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dc34:	2a00      	cmp	r2, #0
 800dc36:	d1f1      	bne.n	800dc1c <xQueueSemaphoreTake+0x14c>
		pxQueue->cRxLock = queueUNLOCKED;
 800dc38:	23ff      	movs	r3, #255	; 0xff
 800dc3a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800dc3e:	f7ff f8bb 	bl	800cdb8 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800dc42:	f000 fe15 	bl	800e870 <xTaskResumeAll>
	taskENTER_CRITICAL();
 800dc46:	f7ff f895 	bl	800cd74 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800dc4a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800dc4c:	2b00      	cmp	r3, #0
 800dc4e:	d07c      	beq.n	800dd4a <xQueueSemaphoreTake+0x27a>
	taskEXIT_CRITICAL();
 800dc50:	f7ff f8b2 	bl	800cdb8 <vPortExitCritical>
	return xReturn;
 800dc54:	2501      	movs	r5, #1
 800dc56:	e755      	b.n	800db04 <xQueueSemaphoreTake+0x34>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800dc58:	a802      	add	r0, sp, #8
 800dc5a:	f000 ff51 	bl	800eb00 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 800dc5e:	e75e      	b.n	800db1e <xQueueSemaphoreTake+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 800dc60:	23ff      	movs	r3, #255	; 0xff
 800dc62:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800dc66:	f7ff f8a7 	bl	800cdb8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800dc6a:	f7ff f883 	bl	800cd74 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800dc6e:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800dc72:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dc74:	2d00      	cmp	r5, #0
 800dc76:	dd10      	ble.n	800dc9a <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dc78:	f104 0810 	add.w	r8, r4, #16
 800dc7c:	e003      	b.n	800dc86 <xQueueSemaphoreTake+0x1b6>
				--cRxLock;
 800dc7e:	1e6b      	subs	r3, r5, #1
 800dc80:	b2da      	uxtb	r2, r3
 800dc82:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dc84:	b14a      	cbz	r2, 800dc9a <xQueueSemaphoreTake+0x1ca>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dc86:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dc88:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dc8a:	b133      	cbz	r3, 800dc9a <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dc8c:	f000 fef0 	bl	800ea70 <xTaskRemoveFromEventList>
 800dc90:	2800      	cmp	r0, #0
 800dc92:	d0f4      	beq.n	800dc7e <xQueueSemaphoreTake+0x1ae>
					vTaskMissedYield();
 800dc94:	f000 ff88 	bl	800eba8 <vTaskMissedYield>
 800dc98:	e7f1      	b.n	800dc7e <xQueueSemaphoreTake+0x1ae>
		pxQueue->cRxLock = queueUNLOCKED;
 800dc9a:	23ff      	movs	r3, #255	; 0xff
 800dc9c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800dca0:	f7ff f88a 	bl	800cdb8 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800dca4:	f000 fde4 	bl	800e870 <xTaskResumeAll>
 800dca8:	e7d4      	b.n	800dc54 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 800dcaa:	f7ff f885 	bl	800cdb8 <vPortExitCritical>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800dcae:	6823      	ldr	r3, [r4, #0]
 800dcb0:	2b00      	cmp	r3, #0
 800dcb2:	d062      	beq.n	800dd7a <xQueueSemaphoreTake+0x2aa>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800dcb4:	9901      	ldr	r1, [sp, #4]
 800dcb6:	4630      	mov	r0, r6
 800dcb8:	f000 fe4c 	bl	800e954 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800dcbc:	f7ff f85a 	bl	800cd74 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800dcc0:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800dcc4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dcc6:	2d00      	cmp	r5, #0
 800dcc8:	dc04      	bgt.n	800dcd4 <xQueueSemaphoreTake+0x204>
 800dcca:	e00d      	b.n	800dce8 <xQueueSemaphoreTake+0x218>
			--cTxLock;
 800dccc:	1e6b      	subs	r3, r5, #1
 800dcce:	b2da      	uxtb	r2, r3
 800dcd0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dcd2:	b14a      	cbz	r2, 800dce8 <xQueueSemaphoreTake+0x218>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dcd4:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dcd6:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dcd8:	b133      	cbz	r3, 800dce8 <xQueueSemaphoreTake+0x218>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dcda:	f000 fec9 	bl	800ea70 <xTaskRemoveFromEventList>
 800dcde:	2800      	cmp	r0, #0
 800dce0:	d0f4      	beq.n	800dccc <xQueueSemaphoreTake+0x1fc>
						vTaskMissedYield();
 800dce2:	f000 ff61 	bl	800eba8 <vTaskMissedYield>
 800dce6:	e7f1      	b.n	800dccc <xQueueSemaphoreTake+0x1fc>
		pxQueue->cTxLock = queueUNLOCKED;
 800dce8:	23ff      	movs	r3, #255	; 0xff
 800dcea:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800dcee:	f7ff f863 	bl	800cdb8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800dcf2:	f7ff f83f 	bl	800cd74 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800dcf6:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800dcfa:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dcfc:	2d00      	cmp	r5, #0
 800dcfe:	dd10      	ble.n	800dd22 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dd00:	f104 0810 	add.w	r8, r4, #16
 800dd04:	e003      	b.n	800dd0e <xQueueSemaphoreTake+0x23e>
				--cRxLock;
 800dd06:	1e6b      	subs	r3, r5, #1
 800dd08:	b2da      	uxtb	r2, r3
 800dd0a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dd0c:	b14a      	cbz	r2, 800dd22 <xQueueSemaphoreTake+0x252>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dd0e:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dd10:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dd12:	b133      	cbz	r3, 800dd22 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dd14:	f000 feac 	bl	800ea70 <xTaskRemoveFromEventList>
 800dd18:	2800      	cmp	r0, #0
 800dd1a:	d0f4      	beq.n	800dd06 <xQueueSemaphoreTake+0x236>
					vTaskMissedYield();
 800dd1c:	f000 ff44 	bl	800eba8 <vTaskMissedYield>
 800dd20:	e7f1      	b.n	800dd06 <xQueueSemaphoreTake+0x236>
		pxQueue->cRxLock = queueUNLOCKED;
 800dd22:	23ff      	movs	r3, #255	; 0xff
 800dd24:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800dd28:	f7ff f846 	bl	800cdb8 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800dd2c:	f000 fda0 	bl	800e870 <xTaskResumeAll>
 800dd30:	2800      	cmp	r0, #0
 800dd32:	d18f      	bne.n	800dc54 <xQueueSemaphoreTake+0x184>
					portYIELD_WITHIN_API();
 800dd34:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800dd38:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800dd3c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800dd40:	f3bf 8f4f 	dsb	sy
 800dd44:	f3bf 8f6f 	isb	sy
 800dd48:	e784      	b.n	800dc54 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 800dd4a:	f7ff f835 	bl	800cdb8 <vPortExitCritical>
					if( xInheritanceOccurred != pdFALSE )
 800dd4e:	b92f      	cbnz	r7, 800dd5c <xQueueSemaphoreTake+0x28c>
}
 800dd50:	4638      	mov	r0, r7
 800dd52:	b004      	add	sp, #16
 800dd54:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800dd58:	4607      	mov	r7, r0
 800dd5a:	e6d1      	b.n	800db00 <xQueueSemaphoreTake+0x30>
						taskENTER_CRITICAL();
 800dd5c:	f7ff f80a 	bl	800cd74 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800dd60:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800dd62:	b119      	cbz	r1, 800dd6c <xQueueSemaphoreTake+0x29c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800dd64:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800dd66:	6819      	ldr	r1, [r3, #0]
 800dd68:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 800dd6c:	68a0      	ldr	r0, [r4, #8]
 800dd6e:	f000 ffbd 	bl	800ecec <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 800dd72:	2700      	movs	r7, #0
						taskEXIT_CRITICAL();
 800dd74:	f7ff f820 	bl	800cdb8 <vPortExitCritical>
 800dd78:	e7ea      	b.n	800dd50 <xQueueSemaphoreTake+0x280>
						taskENTER_CRITICAL();
 800dd7a:	f7fe fffb 	bl	800cd74 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 800dd7e:	68a0      	ldr	r0, [r4, #8]
 800dd80:	f000 ff28 	bl	800ebd4 <xTaskPriorityInherit>
 800dd84:	4607      	mov	r7, r0
						taskEXIT_CRITICAL();
 800dd86:	f7ff f817 	bl	800cdb8 <vPortExitCritical>
 800dd8a:	e793      	b.n	800dcb4 <xQueueSemaphoreTake+0x1e4>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800dd8c:	b197      	cbz	r7, 800ddb4 <xQueueSemaphoreTake+0x2e4>
 800dd8e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dd92:	f383 8811 	msr	BASEPRI, r3
 800dd96:	f3bf 8f6f 	isb	sy
 800dd9a:	f3bf 8f4f 	dsb	sy
 800dd9e:	e7fe      	b.n	800dd9e <xQueueSemaphoreTake+0x2ce>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800dda0:	6822      	ldr	r2, [r4, #0]
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 800dda2:	3b01      	subs	r3, #1
 800dda4:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800dda6:	b1ca      	cbz	r2, 800dddc <xQueueSemaphoreTake+0x30c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dda8:	6923      	ldr	r3, [r4, #16]
 800ddaa:	b933      	cbnz	r3, 800ddba <xQueueSemaphoreTake+0x2ea>
				taskEXIT_CRITICAL();
 800ddac:	f7ff f804 	bl	800cdb8 <vPortExitCritical>
				return pdPASS;
 800ddb0:	2701      	movs	r7, #1
 800ddb2:	e7cd      	b.n	800dd50 <xQueueSemaphoreTake+0x280>
					taskEXIT_CRITICAL();
 800ddb4:	f7ff f800 	bl	800cdb8 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800ddb8:	e7ca      	b.n	800dd50 <xQueueSemaphoreTake+0x280>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ddba:	f104 0010 	add.w	r0, r4, #16
 800ddbe:	f000 fe57 	bl	800ea70 <xTaskRemoveFromEventList>
 800ddc2:	2800      	cmp	r0, #0
 800ddc4:	d0f2      	beq.n	800ddac <xQueueSemaphoreTake+0x2dc>
						queueYIELD_IF_USING_PREEMPTION();
 800ddc6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ddca:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ddce:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800ddd2:	f3bf 8f4f 	dsb	sy
 800ddd6:	f3bf 8f6f 	isb	sy
 800ddda:	e7e7      	b.n	800ddac <xQueueSemaphoreTake+0x2dc>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800dddc:	f000 ffda 	bl	800ed94 <pvTaskIncrementMutexHeldCount>
 800dde0:	60a0      	str	r0, [r4, #8]
 800dde2:	e7e1      	b.n	800dda8 <xQueueSemaphoreTake+0x2d8>

0800dde4 <xQueueReceiveFromISR>:
{
 800dde4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
 800dde8:	b310      	cbz	r0, 800de30 <xQueueReceiveFromISR+0x4c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800ddea:	460e      	mov	r6, r1
 800ddec:	4617      	mov	r7, r2
 800ddee:	4604      	mov	r4, r0
 800ddf0:	b191      	cbz	r1, 800de18 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800ddf2:	f7ff f8f3 	bl	800cfdc <vPortValidateInterruptPriority>
	__asm volatile
 800ddf6:	f3ef 8911 	mrs	r9, BASEPRI
 800ddfa:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ddfe:	f383 8811 	msr	BASEPRI, r3
 800de02:	f3bf 8f6f 	isb	sy
 800de06:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800de0a:	6ba5      	ldr	r5, [r4, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800de0c:	b9cd      	cbnz	r5, 800de42 <xQueueReceiveFromISR+0x5e>
			xReturn = pdFAIL;
 800de0e:	4628      	mov	r0, r5
	__asm volatile
 800de10:	f389 8811 	msr	BASEPRI, r9
}
 800de14:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800de18:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800de1a:	2b00      	cmp	r3, #0
 800de1c:	d0e9      	beq.n	800ddf2 <xQueueReceiveFromISR+0xe>
	__asm volatile
 800de1e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800de22:	f383 8811 	msr	BASEPRI, r3
 800de26:	f3bf 8f6f 	isb	sy
 800de2a:	f3bf 8f4f 	dsb	sy
 800de2e:	e7fe      	b.n	800de2e <xQueueReceiveFromISR+0x4a>
 800de30:	f04f 0350 	mov.w	r3, #80	; 0x50
 800de34:	f383 8811 	msr	BASEPRI, r3
 800de38:	f3bf 8f6f 	isb	sy
 800de3c:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800de40:	e7fe      	b.n	800de40 <xQueueReceiveFromISR+0x5c>
			const int8_t cRxLock = pxQueue->cRxLock;
 800de42:	f894 8044 	ldrb.w	r8, [r4, #68]	; 0x44
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800de46:	6c22      	ldr	r2, [r4, #64]	; 0x40
			const int8_t cRxLock = pxQueue->cRxLock;
 800de48:	fa4f f888 	sxtb.w	r8, r8
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800de4c:	b152      	cbz	r2, 800de64 <xQueueReceiveFromISR+0x80>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800de4e:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800de50:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800de52:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800de54:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800de56:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800de58:	bf24      	itt	cs
 800de5a:	6821      	ldrcs	r1, [r4, #0]
 800de5c:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800de5e:	4630      	mov	r0, r6
 800de60:	f01a fca9 	bl	80287b6 <memcpy>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800de64:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
 800de66:	f1b8 3fff 	cmp.w	r8, #4294967295
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800de6a:	63a5      	str	r5, [r4, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 800de6c:	d009      	beq.n	800de82 <xQueueReceiveFromISR+0x9e>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 800de6e:	f108 0301 	add.w	r3, r8, #1
 800de72:	b25b      	sxtb	r3, r3
 800de74:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
			xReturn = pdPASS;
 800de78:	2001      	movs	r0, #1
	__asm volatile
 800de7a:	f389 8811 	msr	BASEPRI, r9
}
 800de7e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800de82:	6923      	ldr	r3, [r4, #16]
 800de84:	2b00      	cmp	r3, #0
 800de86:	d0f7      	beq.n	800de78 <xQueueReceiveFromISR+0x94>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800de88:	f104 0010 	add.w	r0, r4, #16
 800de8c:	f000 fdf0 	bl	800ea70 <xTaskRemoveFromEventList>
 800de90:	2800      	cmp	r0, #0
 800de92:	d0f1      	beq.n	800de78 <xQueueReceiveFromISR+0x94>
						if( pxHigherPriorityTaskWoken != NULL )
 800de94:	2f00      	cmp	r7, #0
 800de96:	d0ef      	beq.n	800de78 <xQueueReceiveFromISR+0x94>
							*pxHigherPriorityTaskWoken = pdTRUE;
 800de98:	2001      	movs	r0, #1
 800de9a:	6038      	str	r0, [r7, #0]
 800de9c:	e7b8      	b.n	800de10 <xQueueReceiveFromISR+0x2c>
 800de9e:	bf00      	nop

0800dea0 <uxQueueMessagesWaiting>:
	configASSERT( xQueue );
 800dea0:	b158      	cbz	r0, 800deba <uxQueueMessagesWaiting+0x1a>
{
 800dea2:	b510      	push	{r4, lr}
 800dea4:	4604      	mov	r4, r0
 800dea6:	b082      	sub	sp, #8
	taskENTER_CRITICAL();
 800dea8:	f7fe ff64 	bl	800cd74 <vPortEnterCritical>
		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
 800deac:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800deae:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800deb0:	f7fe ff82 	bl	800cdb8 <vPortExitCritical>
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800deb4:	9801      	ldr	r0, [sp, #4]
 800deb6:	b002      	add	sp, #8
 800deb8:	bd10      	pop	{r4, pc}
	__asm volatile
 800deba:	f04f 0350 	mov.w	r3, #80	; 0x50
 800debe:	f383 8811 	msr	BASEPRI, r3
 800dec2:	f3bf 8f6f 	isb	sy
 800dec6:	f3bf 8f4f 	dsb	sy
	configASSERT( xQueue );
 800deca:	e7fe      	b.n	800deca <uxQueueMessagesWaiting+0x2a>

0800decc <uxQueueMessagesWaitingFromISR>:
	configASSERT( pxQueue );
 800decc:	b108      	cbz	r0, 800ded2 <uxQueueMessagesWaitingFromISR+0x6>
	uxReturn = pxQueue->uxMessagesWaiting;
 800dece:	6b80      	ldr	r0, [r0, #56]	; 0x38
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800ded0:	4770      	bx	lr
 800ded2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ded6:	f383 8811 	msr	BASEPRI, r3
 800deda:	f3bf 8f6f 	isb	sy
 800dede:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800dee2:	e7fe      	b.n	800dee2 <uxQueueMessagesWaitingFromISR+0x16>
 800dee4:	0000      	movs	r0, r0
	...

0800dee8 <vQueueDelete>:
	configASSERT( pxQueue );
 800dee8:	b1f0      	cbz	r0, 800df28 <vQueueDelete+0x40>

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800deea:	4b21      	ldr	r3, [pc, #132]	; (800df70 <vQueueDelete+0x88>)
 800deec:	685a      	ldr	r2, [r3, #4]
 800deee:	4290      	cmp	r0, r2
 800def0:	d025      	beq.n	800df3e <vQueueDelete+0x56>
 800def2:	68da      	ldr	r2, [r3, #12]
 800def4:	4290      	cmp	r0, r2
 800def6:	d02c      	beq.n	800df52 <vQueueDelete+0x6a>
 800def8:	695a      	ldr	r2, [r3, #20]
 800defa:	4290      	cmp	r0, r2
 800defc:	d02b      	beq.n	800df56 <vQueueDelete+0x6e>
 800defe:	69da      	ldr	r2, [r3, #28]
 800df00:	4290      	cmp	r0, r2
 800df02:	d02a      	beq.n	800df5a <vQueueDelete+0x72>
 800df04:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800df06:	4290      	cmp	r0, r2
 800df08:	d029      	beq.n	800df5e <vQueueDelete+0x76>
 800df0a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800df0c:	4290      	cmp	r0, r2
 800df0e:	d01e      	beq.n	800df4e <vQueueDelete+0x66>
 800df10:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800df12:	4290      	cmp	r0, r2
 800df14:	d025      	beq.n	800df62 <vQueueDelete+0x7a>
 800df16:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800df18:	4290      	cmp	r0, r2
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800df1a:	bf08      	it	eq
 800df1c:	2207      	moveq	r2, #7
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800df1e:	d00f      	beq.n	800df40 <vQueueDelete+0x58>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800df20:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
 800df24:	b14b      	cbz	r3, 800df3a <vQueueDelete+0x52>
}
 800df26:	4770      	bx	lr
 800df28:	f04f 0350 	mov.w	r3, #80	; 0x50
 800df2c:	f383 8811 	msr	BASEPRI, r3
 800df30:	f3bf 8f6f 	isb	sy
 800df34:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800df38:	e7fe      	b.n	800df38 <vQueueDelete+0x50>
			vPortFree( pxQueue );
 800df3a:	f7fe be05 	b.w	800cb48 <vPortFree>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800df3e:	2200      	movs	r2, #0
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 800df40:	ed9f 7b09 	vldr	d7, [pc, #36]	; 800df68 <vQueueDelete+0x80>
 800df44:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800df48:	ed83 7b00 	vstr	d7, [r3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
				break;
 800df4c:	e7e8      	b.n	800df20 <vQueueDelete+0x38>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800df4e:	2205      	movs	r2, #5
 800df50:	e7f6      	b.n	800df40 <vQueueDelete+0x58>
 800df52:	2201      	movs	r2, #1
 800df54:	e7f4      	b.n	800df40 <vQueueDelete+0x58>
 800df56:	2202      	movs	r2, #2
 800df58:	e7f2      	b.n	800df40 <vQueueDelete+0x58>
 800df5a:	2203      	movs	r2, #3
 800df5c:	e7f0      	b.n	800df40 <vQueueDelete+0x58>
 800df5e:	2204      	movs	r2, #4
 800df60:	e7ee      	b.n	800df40 <vQueueDelete+0x58>
 800df62:	2206      	movs	r2, #6
 800df64:	e7ec      	b.n	800df40 <vQueueDelete+0x58>
 800df66:	bf00      	nop
	...
 800df70:	20013148 	.word	0x20013148

0800df74 <vQueueAddToRegistry>:
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800df74:	4b12      	ldr	r3, [pc, #72]	; (800dfc0 <vQueueAddToRegistry+0x4c>)
 800df76:	681a      	ldr	r2, [r3, #0]
 800df78:	b17a      	cbz	r2, 800df9a <vQueueAddToRegistry+0x26>
 800df7a:	689a      	ldr	r2, [r3, #8]
 800df7c:	b162      	cbz	r2, 800df98 <vQueueAddToRegistry+0x24>
 800df7e:	691a      	ldr	r2, [r3, #16]
 800df80:	b192      	cbz	r2, 800dfa8 <vQueueAddToRegistry+0x34>
 800df82:	699a      	ldr	r2, [r3, #24]
 800df84:	b192      	cbz	r2, 800dfac <vQueueAddToRegistry+0x38>
 800df86:	6a1a      	ldr	r2, [r3, #32]
 800df88:	b192      	cbz	r2, 800dfb0 <vQueueAddToRegistry+0x3c>
 800df8a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800df8c:	b192      	cbz	r2, 800dfb4 <vQueueAddToRegistry+0x40>
 800df8e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800df90:	b192      	cbz	r2, 800dfb8 <vQueueAddToRegistry+0x44>
 800df92:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800df94:	b192      	cbz	r2, 800dfbc <vQueueAddToRegistry+0x48>
	}
 800df96:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800df98:	2201      	movs	r2, #1
				xQueueRegistry[ ux ].xHandle = xQueue;
 800df9a:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 800df9e:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 800dfa2:	f8cc 0004 	str.w	r0, [ip, #4]
	}
 800dfa6:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800dfa8:	2202      	movs	r2, #2
 800dfaa:	e7f6      	b.n	800df9a <vQueueAddToRegistry+0x26>
 800dfac:	2203      	movs	r2, #3
 800dfae:	e7f4      	b.n	800df9a <vQueueAddToRegistry+0x26>
 800dfb0:	2204      	movs	r2, #4
 800dfb2:	e7f2      	b.n	800df9a <vQueueAddToRegistry+0x26>
 800dfb4:	2205      	movs	r2, #5
 800dfb6:	e7f0      	b.n	800df9a <vQueueAddToRegistry+0x26>
 800dfb8:	2206      	movs	r2, #6
 800dfba:	e7ee      	b.n	800df9a <vQueueAddToRegistry+0x26>
 800dfbc:	2207      	movs	r2, #7
 800dfbe:	e7ec      	b.n	800df9a <vQueueAddToRegistry+0x26>
 800dfc0:	20013148 	.word	0x20013148

0800dfc4 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800dfc4:	b570      	push	{r4, r5, r6, lr}
 800dfc6:	4605      	mov	r5, r0
 800dfc8:	460e      	mov	r6, r1
 800dfca:	4614      	mov	r4, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 800dfcc:	f7fe fed2 	bl	800cd74 <vPortEnterCritical>
 800dfd0:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 800dfd4:	2bff      	cmp	r3, #255	; 0xff
 800dfd6:	bf04      	itt	eq
 800dfd8:	2300      	moveq	r3, #0
 800dfda:	f885 3044 	strbeq.w	r3, [r5, #68]	; 0x44
 800dfde:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 800dfe2:	2bff      	cmp	r3, #255	; 0xff
 800dfe4:	bf04      	itt	eq
 800dfe6:	2300      	moveq	r3, #0
 800dfe8:	f885 3045 	strbeq.w	r3, [r5, #69]	; 0x45
 800dfec:	f7fe fee4 	bl	800cdb8 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800dff0:	6bab      	ldr	r3, [r5, #56]	; 0x38
 800dff2:	2b00      	cmp	r3, #0
 800dff4:	d043      	beq.n	800e07e <vQueueWaitForMessageRestricted+0xba>
	taskENTER_CRITICAL();
 800dff6:	f7fe febd 	bl	800cd74 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800dffa:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 800dffe:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e000:	2c00      	cmp	r4, #0
 800e002:	dd14      	ble.n	800e02e <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e004:	f105 0624 	add.w	r6, r5, #36	; 0x24
 800e008:	e003      	b.n	800e012 <vQueueWaitForMessageRestricted+0x4e>
			--cTxLock;
 800e00a:	1e63      	subs	r3, r4, #1
 800e00c:	b2da      	uxtb	r2, r3
 800e00e:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e010:	b16a      	cbz	r2, 800e02e <vQueueWaitForMessageRestricted+0x6a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e012:	6a6b      	ldr	r3, [r5, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e014:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e016:	b153      	cbz	r3, 800e02e <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e018:	f000 fd2a 	bl	800ea70 <xTaskRemoveFromEventList>
 800e01c:	2800      	cmp	r0, #0
 800e01e:	d0f4      	beq.n	800e00a <vQueueWaitForMessageRestricted+0x46>
						vTaskMissedYield();
 800e020:	f000 fdc2 	bl	800eba8 <vTaskMissedYield>
			--cTxLock;
 800e024:	1e63      	subs	r3, r4, #1
 800e026:	b2da      	uxtb	r2, r3
 800e028:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e02a:	2a00      	cmp	r2, #0
 800e02c:	d1f1      	bne.n	800e012 <vQueueWaitForMessageRestricted+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 800e02e:	23ff      	movs	r3, #255	; 0xff
 800e030:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e034:	f7fe fec0 	bl	800cdb8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e038:	f7fe fe9c 	bl	800cd74 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e03c:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 800e040:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e042:	2c00      	cmp	r4, #0
 800e044:	dd14      	ble.n	800e070 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e046:	f105 0610 	add.w	r6, r5, #16
 800e04a:	e003      	b.n	800e054 <vQueueWaitForMessageRestricted+0x90>
				--cRxLock;
 800e04c:	1e63      	subs	r3, r4, #1
 800e04e:	b2da      	uxtb	r2, r3
 800e050:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e052:	b16a      	cbz	r2, 800e070 <vQueueWaitForMessageRestricted+0xac>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e054:	692b      	ldr	r3, [r5, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e056:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e058:	b153      	cbz	r3, 800e070 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e05a:	f000 fd09 	bl	800ea70 <xTaskRemoveFromEventList>
 800e05e:	2800      	cmp	r0, #0
 800e060:	d0f4      	beq.n	800e04c <vQueueWaitForMessageRestricted+0x88>
					vTaskMissedYield();
 800e062:	f000 fda1 	bl	800eba8 <vTaskMissedYield>
				--cRxLock;
 800e066:	1e63      	subs	r3, r4, #1
 800e068:	b2da      	uxtb	r2, r3
 800e06a:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e06c:	2a00      	cmp	r2, #0
 800e06e:	d1f1      	bne.n	800e054 <vQueueWaitForMessageRestricted+0x90>
		pxQueue->cRxLock = queueUNLOCKED;
 800e070:	23ff      	movs	r3, #255	; 0xff
 800e072:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
	}
 800e076:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 800e07a:	f7fe be9d 	b.w	800cdb8 <vPortExitCritical>
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800e07e:	4622      	mov	r2, r4
 800e080:	4631      	mov	r1, r6
 800e082:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800e086:	f000 fca9 	bl	800e9dc <vTaskPlaceOnEventListRestricted>
 800e08a:	e7b4      	b.n	800dff6 <vQueueWaitForMessageRestricted+0x32>

0800e08c <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 800e08c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800e090:	4605      	mov	r5, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800e092:	f7fe fe6f 	bl	800cd74 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800e096:	4a34      	ldr	r2, [pc, #208]	; (800e168 <prvAddNewTaskToReadyList+0xdc>)
		if( pxCurrentTCB == NULL )
 800e098:	4e34      	ldr	r6, [pc, #208]	; (800e16c <prvAddNewTaskToReadyList+0xe0>)
		uxCurrentNumberOfTasks++;
 800e09a:	6813      	ldr	r3, [r2, #0]
 800e09c:	3301      	adds	r3, #1
 800e09e:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
 800e0a0:	6833      	ldr	r3, [r6, #0]
 800e0a2:	2b00      	cmp	r3, #0
 800e0a4:	d032      	beq.n	800e10c <prvAddNewTaskToReadyList+0x80>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
 800e0a6:	4c32      	ldr	r4, [pc, #200]	; (800e170 <prvAddNewTaskToReadyList+0xe4>)
 800e0a8:	6823      	ldr	r3, [r4, #0]
 800e0aa:	b33b      	cbz	r3, 800e0fc <prvAddNewTaskToReadyList+0x70>
			{
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800e0ac:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800e0ae:	4f31      	ldr	r7, [pc, #196]	; (800e174 <prvAddNewTaskToReadyList+0xe8>)
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

		uxTaskNumber++;
 800e0b0:	4a31      	ldr	r2, [pc, #196]	; (800e178 <prvAddNewTaskToReadyList+0xec>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
 800e0b2:	4932      	ldr	r1, [pc, #200]	; (800e17c <prvAddNewTaskToReadyList+0xf0>)
		uxTaskNumber++;
 800e0b4:	6813      	ldr	r3, [r2, #0]
 800e0b6:	3301      	adds	r3, #1
 800e0b8:	6013      	str	r3, [r2, #0]
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 800e0ba:	646b      	str	r3, [r5, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 800e0bc:	680b      	ldr	r3, [r1, #0]
 800e0be:	4283      	cmp	r3, r0
 800e0c0:	bf38      	it	cc
 800e0c2:	6008      	strcc	r0, [r1, #0]
 800e0c4:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800e0c8:	eb07 0080 	add.w	r0, r7, r0, lsl #2
 800e0cc:	1d29      	adds	r1, r5, #4
 800e0ce:	f7fe fdaf 	bl	800cc30 <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
 800e0d2:	f7fe fe71 	bl	800cdb8 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
 800e0d6:	6823      	ldr	r3, [r4, #0]
 800e0d8:	b173      	cbz	r3, 800e0f8 <prvAddNewTaskToReadyList+0x6c>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 800e0da:	6832      	ldr	r2, [r6, #0]
 800e0dc:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800e0de:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800e0e0:	429a      	cmp	r2, r3
 800e0e2:	d209      	bcs.n	800e0f8 <prvAddNewTaskToReadyList+0x6c>
		{
			taskYIELD_IF_USING_PREEMPTION();
 800e0e4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e0e8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e0ec:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e0f0:	f3bf 8f4f 	dsb	sy
 800e0f4:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 800e0f8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800e0fc:	6833      	ldr	r3, [r6, #0]
 800e0fe:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800e100:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e102:	4f1c      	ldr	r7, [pc, #112]	; (800e174 <prvAddNewTaskToReadyList+0xe8>)
 800e104:	4283      	cmp	r3, r0
					pxCurrentTCB = pxNewTCB;
 800e106:	bf98      	it	ls
 800e108:	6035      	strls	r5, [r6, #0]
 800e10a:	e7d1      	b.n	800e0b0 <prvAddNewTaskToReadyList+0x24>
			pxCurrentTCB = pxNewTCB;
 800e10c:	6035      	str	r5, [r6, #0]
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 800e10e:	6813      	ldr	r3, [r2, #0]
 800e110:	2b01      	cmp	r3, #1
 800e112:	d003      	beq.n	800e11c <prvAddNewTaskToReadyList+0x90>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800e114:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800e116:	4f17      	ldr	r7, [pc, #92]	; (800e174 <prvAddNewTaskToReadyList+0xe8>)
 800e118:	4c15      	ldr	r4, [pc, #84]	; (800e170 <prvAddNewTaskToReadyList+0xe4>)
 800e11a:	e7c9      	b.n	800e0b0 <prvAddNewTaskToReadyList+0x24>
 800e11c:	4f15      	ldr	r7, [pc, #84]	; (800e174 <prvAddNewTaskToReadyList+0xe8>)
 800e11e:	463c      	mov	r4, r7
 800e120:	f507 688c 	add.w	r8, r7, #1120	; 0x460
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800e124:	4620      	mov	r0, r4
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800e126:	3414      	adds	r4, #20
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800e128:	f7fe fd72 	bl	800cc10 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800e12c:	45a0      	cmp	r8, r4
 800e12e:	d1f9      	bne.n	800e124 <prvAddNewTaskToReadyList+0x98>
	}

	vListInitialise( &xDelayedTaskList1 );
 800e130:	f8df 9060 	ldr.w	r9, [pc, #96]	; 800e194 <prvAddNewTaskToReadyList+0x108>
	vListInitialise( &xDelayedTaskList2 );
 800e134:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800e198 <prvAddNewTaskToReadyList+0x10c>
 800e138:	4c0d      	ldr	r4, [pc, #52]	; (800e170 <prvAddNewTaskToReadyList+0xe4>)
	vListInitialise( &xDelayedTaskList1 );
 800e13a:	4648      	mov	r0, r9
 800e13c:	f7fe fd68 	bl	800cc10 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 800e140:	4640      	mov	r0, r8
 800e142:	f7fe fd65 	bl	800cc10 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800e146:	480e      	ldr	r0, [pc, #56]	; (800e180 <prvAddNewTaskToReadyList+0xf4>)
 800e148:	f7fe fd62 	bl	800cc10 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 800e14c:	480d      	ldr	r0, [pc, #52]	; (800e184 <prvAddNewTaskToReadyList+0xf8>)
 800e14e:	f7fe fd5f 	bl	800cc10 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 800e152:	480d      	ldr	r0, [pc, #52]	; (800e188 <prvAddNewTaskToReadyList+0xfc>)
 800e154:	f7fe fd5c 	bl	800cc10 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800e158:	4b0c      	ldr	r3, [pc, #48]	; (800e18c <prvAddNewTaskToReadyList+0x100>)
		prvAddTaskToReadyList( pxNewTCB );
 800e15a:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
	pxDelayedTaskList = &xDelayedTaskList1;
 800e15c:	f8c3 9000 	str.w	r9, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 800e160:	4b0b      	ldr	r3, [pc, #44]	; (800e190 <prvAddNewTaskToReadyList+0x104>)
 800e162:	f8c3 8000 	str.w	r8, [r3]
}
 800e166:	e7a3      	b.n	800e0b0 <prvAddNewTaskToReadyList+0x24>
 800e168:	200135f4 	.word	0x200135f4
 800e16c:	20013188 	.word	0x20013188
 800e170:	20013650 	.word	0x20013650
 800e174:	20013194 	.word	0x20013194
 800e178:	20013600 	.word	0x20013600
 800e17c:	20013604 	.word	0x20013604
 800e180:	2001363c 	.word	0x2001363c
 800e184:	20013668 	.word	0x20013668
 800e188:	20013654 	.word	0x20013654
 800e18c:	2001318c 	.word	0x2001318c
 800e190:	20013190 	.word	0x20013190
 800e194:	20013608 	.word	0x20013608
 800e198:	2001361c 	.word	0x2001361c

0800e19c <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800e19c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e1a0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800e1a2:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800e1a6:	ea4f 0982 	mov.w	r9, r2, lsl #2
 800e1aa:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800e1ac:	4606      	mov	r6, r0
 800e1ae:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800e1b0:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800e1b2:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800e1b4:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800e1b6:	f01a f9d8 	bl	802856a <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800e1ba:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800e1bc:	f1a9 0904 	sub.w	r9, r9, #4
 800e1c0:	444b      	add	r3, r9
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 800e1c2:	f023 0907 	bic.w	r9, r3, #7
	if( pcName != NULL )
 800e1c6:	2d00      	cmp	r5, #0
 800e1c8:	d079      	beq.n	800e2be <prvInitialiseNewTask.constprop.0+0x122>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e1ca:	782b      	ldrb	r3, [r5, #0]
 800e1cc:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
			if( pcName[ x ] == ( char ) 0x00 )
 800e1d0:	2b00      	cmp	r3, #0
 800e1d2:	d03b      	beq.n	800e24c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e1d4:	786b      	ldrb	r3, [r5, #1]
 800e1d6:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
			if( pcName[ x ] == ( char ) 0x00 )
 800e1da:	2b00      	cmp	r3, #0
 800e1dc:	d036      	beq.n	800e24c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e1de:	78ab      	ldrb	r3, [r5, #2]
 800e1e0:	f884 3036 	strb.w	r3, [r4, #54]	; 0x36
			if( pcName[ x ] == ( char ) 0x00 )
 800e1e4:	b393      	cbz	r3, 800e24c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e1e6:	78eb      	ldrb	r3, [r5, #3]
 800e1e8:	f884 3037 	strb.w	r3, [r4, #55]	; 0x37
			if( pcName[ x ] == ( char ) 0x00 )
 800e1ec:	b373      	cbz	r3, 800e24c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e1ee:	792b      	ldrb	r3, [r5, #4]
 800e1f0:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
			if( pcName[ x ] == ( char ) 0x00 )
 800e1f4:	b353      	cbz	r3, 800e24c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e1f6:	796b      	ldrb	r3, [r5, #5]
 800e1f8:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
			if( pcName[ x ] == ( char ) 0x00 )
 800e1fc:	b333      	cbz	r3, 800e24c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e1fe:	79ab      	ldrb	r3, [r5, #6]
 800e200:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
 800e204:	b313      	cbz	r3, 800e24c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e206:	79eb      	ldrb	r3, [r5, #7]
 800e208:	f884 303b 	strb.w	r3, [r4, #59]	; 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
 800e20c:	b1f3      	cbz	r3, 800e24c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e20e:	7a2b      	ldrb	r3, [r5, #8]
 800e210:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
 800e214:	b1d3      	cbz	r3, 800e24c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e216:	7a6b      	ldrb	r3, [r5, #9]
 800e218:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
 800e21c:	b1b3      	cbz	r3, 800e24c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e21e:	7aab      	ldrb	r3, [r5, #10]
 800e220:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
 800e224:	b193      	cbz	r3, 800e24c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e226:	7aeb      	ldrb	r3, [r5, #11]
 800e228:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
 800e22c:	b173      	cbz	r3, 800e24c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e22e:	7b2b      	ldrb	r3, [r5, #12]
 800e230:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
			if( pcName[ x ] == ( char ) 0x00 )
 800e234:	b153      	cbz	r3, 800e24c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e236:	7b6b      	ldrb	r3, [r5, #13]
 800e238:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
			if( pcName[ x ] == ( char ) 0x00 )
 800e23c:	b133      	cbz	r3, 800e24c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e23e:	7bab      	ldrb	r3, [r5, #14]
 800e240:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
			if( pcName[ x ] == ( char ) 0x00 )
 800e244:	b113      	cbz	r3, 800e24c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e246:	7beb      	ldrb	r3, [r5, #15]
 800e248:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 800e24c:	2300      	movs	r3, #0
 800e24e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800e252:	9d08      	ldr	r5, [sp, #32]
 800e254:	2d37      	cmp	r5, #55	; 0x37
 800e256:	bf28      	it	cs
 800e258:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 800e25a:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 800e25e:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 800e260:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800e262:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800e264:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800e268:	f7fe fcde 	bl	800cc28 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e26c:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 800e270:	f104 0018 	add.w	r0, r4, #24
 800e274:	f7fe fcd8 	bl	800cc28 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e278:	61a5      	str	r5, [r4, #24]
		pxNewTCB->ulNotifiedValue = 0;
 800e27a:	f8c4 a0a4 	str.w	sl, [r4, #164]	; 0xa4
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800e27e:	4651      	mov	r1, sl
 800e280:	224c      	movs	r2, #76	; 0x4c
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 800e282:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800e284:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 800e286:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800e28a:	f884 a0a8 	strb.w	sl, [r4, #168]	; 0xa8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800e28e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800e292:	f01a f96a 	bl	802856a <memset>
 800e296:	4b0b      	ldr	r3, [pc, #44]	; (800e2c4 <prvInitialiseNewTask.constprop.0+0x128>)
 800e298:	65e3      	str	r3, [r4, #92]	; 0x5c
 800e29a:	f103 0568 	add.w	r5, r3, #104	; 0x68
 800e29e:	33d0      	adds	r3, #208	; 0xd0
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800e2a0:	463a      	mov	r2, r7
 800e2a2:	4631      	mov	r1, r6
 800e2a4:	4648      	mov	r0, r9
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800e2a6:	6625      	str	r5, [r4, #96]	; 0x60
 800e2a8:	6663      	str	r3, [r4, #100]	; 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800e2aa:	f7fe fd3b 	bl	800cd24 <pxPortInitialiseStack>
 800e2ae:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800e2b0:	f1b8 0f00 	cmp.w	r8, #0
 800e2b4:	d001      	beq.n	800e2ba <prvInitialiseNewTask.constprop.0+0x11e>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 800e2b6:	f8c8 4000 	str.w	r4, [r8]
}
 800e2ba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800e2be:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 800e2c2:	e7c6      	b.n	800e252 <prvInitialiseNewTask.constprop.0+0xb6>
 800e2c4:	20014118 	.word	0x20014118

0800e2c8 <prvIdleTask>:
{
 800e2c8:	b580      	push	{r7, lr}
 800e2ca:	4d23      	ldr	r5, [pc, #140]	; (800e358 <prvIdleTask+0x90>)
 800e2cc:	4f23      	ldr	r7, [pc, #140]	; (800e35c <prvIdleTask+0x94>)
 800e2ce:	4e24      	ldr	r6, [pc, #144]	; (800e360 <prvIdleTask+0x98>)
 800e2d0:	f8df 8090 	ldr.w	r8, [pc, #144]	; 800e364 <prvIdleTask+0x9c>
				taskYIELD();
 800e2d4:	f04f 2ae0 	mov.w	sl, #3758153728	; 0xe000e000
 800e2d8:	f04f 5980 	mov.w	r9, #268435456	; 0x10000000
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800e2dc:	682b      	ldr	r3, [r5, #0]
 800e2de:	b35b      	cbz	r3, 800e338 <prvIdleTask+0x70>
		{
			taskENTER_CRITICAL();
 800e2e0:	f7fe fd48 	bl	800cd74 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e2e4:	68fb      	ldr	r3, [r7, #12]
 800e2e6:	68dc      	ldr	r4, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e2e8:	1d20      	adds	r0, r4, #4
 800e2ea:	f7fe fcc9 	bl	800cc80 <uxListRemove>
				--uxCurrentNumberOfTasks;
 800e2ee:	6833      	ldr	r3, [r6, #0]
 800e2f0:	3b01      	subs	r3, #1
 800e2f2:	6033      	str	r3, [r6, #0]
				--uxDeletedTasksWaitingCleanUp;
 800e2f4:	682b      	ldr	r3, [r5, #0]
 800e2f6:	3b01      	subs	r3, #1
 800e2f8:	602b      	str	r3, [r5, #0]
			}
			taskEXIT_CRITICAL();
 800e2fa:	f7fe fd5d 	bl	800cdb8 <vPortExitCritical>
		to the task to free any memory allocated at the application level.
		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
		for additional information. */
		#if ( configUSE_NEWLIB_REENTRANT == 1 )
		{
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 800e2fe:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800e302:	f01a f97b 	bl	80285fc <_reclaim_reent>
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800e306:	f894 30a9 	ldrb.w	r3, [r4, #169]	; 0xa9
 800e30a:	b163      	cbz	r3, 800e326 <prvIdleTask+0x5e>
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
				vPortFree( pxTCB );
			}
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 800e30c:	2b01      	cmp	r3, #1
 800e30e:	d01e      	beq.n	800e34e <prvIdleTask+0x86>
			}
			else
			{
				/* Neither the stack nor the TCB were allocated dynamically, so
				nothing needs to be freed. */
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 800e310:	2b02      	cmp	r3, #2
 800e312:	d0e3      	beq.n	800e2dc <prvIdleTask+0x14>
 800e314:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e318:	f383 8811 	msr	BASEPRI, r3
 800e31c:	f3bf 8f6f 	isb	sy
 800e320:	f3bf 8f4f 	dsb	sy
 800e324:	e7fe      	b.n	800e324 <prvIdleTask+0x5c>
				vPortFree( pxTCB->pxStack );
 800e326:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800e328:	f7fe fc0e 	bl	800cb48 <vPortFree>
				vPortFree( pxTCB );
 800e32c:	4620      	mov	r0, r4
 800e32e:	f7fe fc0b 	bl	800cb48 <vPortFree>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800e332:	682b      	ldr	r3, [r5, #0]
 800e334:	2b00      	cmp	r3, #0
 800e336:	d1d3      	bne.n	800e2e0 <prvIdleTask+0x18>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800e338:	f8d8 3000 	ldr.w	r3, [r8]
 800e33c:	2b01      	cmp	r3, #1
 800e33e:	d9cd      	bls.n	800e2dc <prvIdleTask+0x14>
				taskYIELD();
 800e340:	f8ca 9d04 	str.w	r9, [sl, #3332]	; 0xd04
 800e344:	f3bf 8f4f 	dsb	sy
 800e348:	f3bf 8f6f 	isb	sy
 800e34c:	e7c6      	b.n	800e2dc <prvIdleTask+0x14>
				vPortFree( pxTCB );
 800e34e:	4620      	mov	r0, r4
 800e350:	f7fe fbfa 	bl	800cb48 <vPortFree>
 800e354:	e7c2      	b.n	800e2dc <prvIdleTask+0x14>
 800e356:	bf00      	nop
 800e358:	200135f8 	.word	0x200135f8
 800e35c:	20013668 	.word	0x20013668
 800e360:	200135f4 	.word	0x200135f4
 800e364:	20013194 	.word	0x20013194

0800e368 <xTaskIncrementTick.part.0>:
BaseType_t xTaskIncrementTick( void )
 800e368:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 800e36c:	4b47      	ldr	r3, [pc, #284]	; (800e48c <xTaskIncrementTick.part.0+0x124>)
 800e36e:	681e      	ldr	r6, [r3, #0]
 800e370:	3601      	adds	r6, #1
BaseType_t xTaskIncrementTick( void )
 800e372:	b083      	sub	sp, #12
		xTickCount = xConstTickCount;
 800e374:	601e      	str	r6, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 800e376:	2e00      	cmp	r6, #0
 800e378:	d040      	beq.n	800e3fc <xTaskIncrementTick.part.0+0x94>
 800e37a:	f8df b124 	ldr.w	fp, [pc, #292]	; 800e4a0 <xTaskIncrementTick.part.0+0x138>
		if( xConstTickCount >= xNextTaskUnblockTime )
 800e37e:	f8db 3000 	ldr.w	r3, [fp]
 800e382:	429e      	cmp	r6, r3
 800e384:	d347      	bcc.n	800e416 <xTaskIncrementTick.part.0+0xae>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e386:	4f42      	ldr	r7, [pc, #264]	; (800e490 <xTaskIncrementTick.part.0+0x128>)
 800e388:	f8df 9118 	ldr.w	r9, [pc, #280]	; 800e4a4 <xTaskIncrementTick.part.0+0x13c>
 800e38c:	683b      	ldr	r3, [r7, #0]
 800e38e:	f8df a118 	ldr.w	sl, [pc, #280]	; 800e4a8 <xTaskIncrementTick.part.0+0x140>
 800e392:	681d      	ldr	r5, [r3, #0]
 800e394:	2d00      	cmp	r5, #0
 800e396:	d073      	beq.n	800e480 <xTaskIncrementTick.part.0+0x118>
					prvAddTaskToReadyList( pxTCB );
 800e398:	f8df 8110 	ldr.w	r8, [pc, #272]	; 800e4ac <xTaskIncrementTick.part.0+0x144>
BaseType_t xSwitchRequired = pdFALSE;
 800e39c:	2500      	movs	r5, #0
 800e39e:	e022      	b.n	800e3e6 <xTaskIncrementTick.part.0+0x7e>
 800e3a0:	9101      	str	r1, [sp, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e3a2:	f7fe fc6d 	bl	800cc80 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800e3a6:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800e3a8:	9901      	ldr	r1, [sp, #4]
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800e3aa:	f104 0018 	add.w	r0, r4, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800e3ae:	b113      	cbz	r3, 800e3b6 <xTaskIncrementTick.part.0+0x4e>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800e3b0:	f7fe fc66 	bl	800cc80 <uxListRemove>
 800e3b4:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 800e3b6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800e3b8:	f8d8 2000 	ldr.w	r2, [r8]
 800e3bc:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 800e3c0:	4293      	cmp	r3, r2
 800e3c2:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 800e3c6:	bf88      	it	hi
 800e3c8:	f8c8 3000 	strhi.w	r3, [r8]
 800e3cc:	f7fe fc30 	bl	800cc30 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800e3d0:	f8da 2000 	ldr.w	r2, [sl]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e3d4:	683b      	ldr	r3, [r7, #0]
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800e3d6:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800e3d8:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e3da:	681b      	ldr	r3, [r3, #0]
							xSwitchRequired = pdTRUE;
 800e3dc:	4291      	cmp	r1, r2
 800e3de:	bf28      	it	cs
 800e3e0:	2501      	movcs	r5, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e3e2:	2b00      	cmp	r3, #0
 800e3e4:	d04c      	beq.n	800e480 <xTaskIncrementTick.part.0+0x118>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e3e6:	683b      	ldr	r3, [r7, #0]
 800e3e8:	68db      	ldr	r3, [r3, #12]
 800e3ea:	68dc      	ldr	r4, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800e3ec:	6863      	ldr	r3, [r4, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e3ee:	1d21      	adds	r1, r4, #4
					if( xConstTickCount < xItemValue )
 800e3f0:	429e      	cmp	r6, r3
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e3f2:	4608      	mov	r0, r1
					if( xConstTickCount < xItemValue )
 800e3f4:	d2d4      	bcs.n	800e3a0 <xTaskIncrementTick.part.0+0x38>
						xNextTaskUnblockTime = xItemValue;
 800e3f6:	f8cb 3000 	str.w	r3, [fp]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 800e3fa:	e011      	b.n	800e420 <xTaskIncrementTick.part.0+0xb8>
			taskSWITCH_DELAYED_LISTS();
 800e3fc:	4b24      	ldr	r3, [pc, #144]	; (800e490 <xTaskIncrementTick.part.0+0x128>)
 800e3fe:	681a      	ldr	r2, [r3, #0]
 800e400:	6812      	ldr	r2, [r2, #0]
 800e402:	b30a      	cbz	r2, 800e448 <xTaskIncrementTick.part.0+0xe0>
 800e404:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e408:	f383 8811 	msr	BASEPRI, r3
 800e40c:	f3bf 8f6f 	isb	sy
 800e410:	f3bf 8f4f 	dsb	sy
 800e414:	e7fe      	b.n	800e414 <xTaskIncrementTick.part.0+0xac>
 800e416:	f8df 908c 	ldr.w	r9, [pc, #140]	; 800e4a4 <xTaskIncrementTick.part.0+0x13c>
 800e41a:	f8df a08c 	ldr.w	sl, [pc, #140]	; 800e4a8 <xTaskIncrementTick.part.0+0x140>
BaseType_t xSwitchRequired = pdFALSE;
 800e41e:	2500      	movs	r5, #0
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800e420:	f8da 3000 	ldr.w	r3, [sl]
			if( xYieldPending != pdFALSE )
 800e424:	491b      	ldr	r1, [pc, #108]	; (800e494 <xTaskIncrementTick.part.0+0x12c>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800e426:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e428:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800e42c:	009b      	lsls	r3, r3, #2
 800e42e:	f859 2003 	ldr.w	r2, [r9, r3]
			if( xYieldPending != pdFALSE )
 800e432:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
 800e434:	2a02      	cmp	r2, #2
 800e436:	bf28      	it	cs
 800e438:	2501      	movcs	r5, #1
				xSwitchRequired = pdTRUE;
 800e43a:	2b00      	cmp	r3, #0
}
 800e43c:	bf0c      	ite	eq
 800e43e:	4628      	moveq	r0, r5
 800e440:	2001      	movne	r0, #1
 800e442:	b003      	add	sp, #12
 800e444:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
 800e448:	4a13      	ldr	r2, [pc, #76]	; (800e498 <xTaskIncrementTick.part.0+0x130>)
 800e44a:	6818      	ldr	r0, [r3, #0]
 800e44c:	6811      	ldr	r1, [r2, #0]
 800e44e:	6019      	str	r1, [r3, #0]
 800e450:	4912      	ldr	r1, [pc, #72]	; (800e49c <xTaskIncrementTick.part.0+0x134>)
 800e452:	6010      	str	r0, [r2, #0]
 800e454:	680a      	ldr	r2, [r1, #0]
 800e456:	3201      	adds	r2, #1
 800e458:	600a      	str	r2, [r1, #0]

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e45a:	681a      	ldr	r2, [r3, #0]
 800e45c:	6812      	ldr	r2, [r2, #0]
 800e45e:	b932      	cbnz	r2, 800e46e <xTaskIncrementTick.part.0+0x106>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
 800e460:	f8df b03c 	ldr.w	fp, [pc, #60]	; 800e4a0 <xTaskIncrementTick.part.0+0x138>
 800e464:	f04f 33ff 	mov.w	r3, #4294967295
 800e468:	f8cb 3000 	str.w	r3, [fp]
 800e46c:	e787      	b.n	800e37e <xTaskIncrementTick.part.0+0x16>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e46e:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800e470:	f8df b02c 	ldr.w	fp, [pc, #44]	; 800e4a0 <xTaskIncrementTick.part.0+0x138>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e474:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800e476:	68db      	ldr	r3, [r3, #12]
 800e478:	685b      	ldr	r3, [r3, #4]
 800e47a:	f8cb 3000 	str.w	r3, [fp]
	}
}
 800e47e:	e77e      	b.n	800e37e <xTaskIncrementTick.part.0+0x16>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e480:	f04f 33ff 	mov.w	r3, #4294967295
 800e484:	f8cb 3000 	str.w	r3, [fp]
					break;
 800e488:	e7ca      	b.n	800e420 <xTaskIncrementTick.part.0+0xb8>
 800e48a:	bf00      	nop
 800e48c:	2001367c 	.word	0x2001367c
 800e490:	2001318c 	.word	0x2001318c
 800e494:	20013680 	.word	0x20013680
 800e498:	20013190 	.word	0x20013190
 800e49c:	20013634 	.word	0x20013634
 800e4a0:	20013630 	.word	0x20013630
 800e4a4:	20013194 	.word	0x20013194
 800e4a8:	20013188 	.word	0x20013188
 800e4ac:	20013604 	.word	0x20013604

0800e4b0 <xTaskResumeAll.part.0>:
BaseType_t xTaskResumeAll( void )
 800e4b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		--uxSchedulerSuspended;
 800e4b4:	4d41      	ldr	r5, [pc, #260]	; (800e5bc <xTaskResumeAll.part.0+0x10c>)
BaseType_t xTaskResumeAll( void )
 800e4b6:	b083      	sub	sp, #12
	taskENTER_CRITICAL();
 800e4b8:	f7fe fc5c 	bl	800cd74 <vPortEnterCritical>
		--uxSchedulerSuspended;
 800e4bc:	682b      	ldr	r3, [r5, #0]
 800e4be:	3b01      	subs	r3, #1
 800e4c0:	602b      	str	r3, [r5, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800e4c2:	682b      	ldr	r3, [r5, #0]
 800e4c4:	2b00      	cmp	r3, #0
 800e4c6:	d161      	bne.n	800e58c <xTaskResumeAll.part.0+0xdc>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800e4c8:	4b3d      	ldr	r3, [pc, #244]	; (800e5c0 <xTaskResumeAll.part.0+0x110>)
 800e4ca:	681b      	ldr	r3, [r3, #0]
 800e4cc:	2b00      	cmp	r3, #0
 800e4ce:	d05d      	beq.n	800e58c <xTaskResumeAll.part.0+0xdc>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800e4d0:	4e3c      	ldr	r6, [pc, #240]	; (800e5c4 <xTaskResumeAll.part.0+0x114>)
 800e4d2:	6833      	ldr	r3, [r6, #0]
 800e4d4:	2b00      	cmp	r3, #0
 800e4d6:	d06e      	beq.n	800e5b6 <xTaskResumeAll.part.0+0x106>
 800e4d8:	4f3b      	ldr	r7, [pc, #236]	; (800e5c8 <xTaskResumeAll.part.0+0x118>)
 800e4da:	f8df 90fc 	ldr.w	r9, [pc, #252]	; 800e5d8 <xTaskResumeAll.part.0+0x128>
 800e4de:	f8df 80fc 	ldr.w	r8, [pc, #252]	; 800e5dc <xTaskResumeAll.part.0+0x12c>
 800e4e2:	f8df a0fc 	ldr.w	sl, [pc, #252]	; 800e5e0 <xTaskResumeAll.part.0+0x130>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e4e6:	68f3      	ldr	r3, [r6, #12]
 800e4e8:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e4ea:	f104 0b04 	add.w	fp, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800e4ee:	f104 0018 	add.w	r0, r4, #24
 800e4f2:	f7fe fbc5 	bl	800cc80 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e4f6:	4658      	mov	r0, fp
 800e4f8:	f7fe fbc2 	bl	800cc80 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800e4fc:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800e4fe:	683a      	ldr	r2, [r7, #0]
 800e500:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 800e504:	4293      	cmp	r3, r2
 800e506:	4659      	mov	r1, fp
 800e508:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 800e50c:	bf88      	it	hi
 800e50e:	603b      	strhi	r3, [r7, #0]
 800e510:	f7fe fb8e 	bl	800cc30 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800e514:	f8d8 3000 	ldr.w	r3, [r8]
 800e518:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800e51a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e51c:	429a      	cmp	r2, r3
 800e51e:	d33d      	bcc.n	800e59c <xTaskResumeAll.part.0+0xec>
						xYieldPending = pdTRUE;
 800e520:	2301      	movs	r3, #1
 800e522:	f8ca 3000 	str.w	r3, [sl]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800e526:	6833      	ldr	r3, [r6, #0]
 800e528:	2b00      	cmp	r3, #0
 800e52a:	d1dc      	bne.n	800e4e6 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e52c:	4b27      	ldr	r3, [pc, #156]	; (800e5cc <xTaskResumeAll.part.0+0x11c>)
 800e52e:	681a      	ldr	r2, [r3, #0]
 800e530:	6812      	ldr	r2, [r2, #0]
 800e532:	2a00      	cmp	r2, #0
 800e534:	d03a      	beq.n	800e5ac <xTaskResumeAll.part.0+0xfc>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e536:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800e538:	4b25      	ldr	r3, [pc, #148]	; (800e5d0 <xTaskResumeAll.part.0+0x120>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e53a:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800e53c:	68d2      	ldr	r2, [r2, #12]
 800e53e:	6852      	ldr	r2, [r2, #4]
 800e540:	601a      	str	r2, [r3, #0]
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 800e542:	4e24      	ldr	r6, [pc, #144]	; (800e5d4 <xTaskResumeAll.part.0+0x124>)
 800e544:	6834      	ldr	r4, [r6, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 800e546:	b194      	cbz	r4, 800e56e <xTaskResumeAll.part.0+0xbe>
								xYieldPending = pdTRUE;
 800e548:	2701      	movs	r7, #1
 800e54a:	e006      	b.n	800e55a <xTaskResumeAll.part.0+0xaa>
 800e54c:	f7ff ff0c 	bl	800e368 <xTaskIncrementTick.part.0>
							if( xTaskIncrementTick() != pdFALSE )
 800e550:	b108      	cbz	r0, 800e556 <xTaskResumeAll.part.0+0xa6>
								xYieldPending = pdTRUE;
 800e552:	f8ca 7000 	str.w	r7, [sl]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800e556:	3c01      	subs	r4, #1
 800e558:	d008      	beq.n	800e56c <xTaskResumeAll.part.0+0xbc>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800e55a:	682b      	ldr	r3, [r5, #0]
 800e55c:	2b00      	cmp	r3, #0
 800e55e:	d0f5      	beq.n	800e54c <xTaskResumeAll.part.0+0x9c>
		++xPendedTicks;
 800e560:	6833      	ldr	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800e562:	3c01      	subs	r4, #1
		++xPendedTicks;
 800e564:	f103 0301 	add.w	r3, r3, #1
 800e568:	6033      	str	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800e56a:	d1f6      	bne.n	800e55a <xTaskResumeAll.part.0+0xaa>
						xPendedTicks = 0;
 800e56c:	6034      	str	r4, [r6, #0]
				if( xYieldPending != pdFALSE )
 800e56e:	f8da 3000 	ldr.w	r3, [sl]
 800e572:	b15b      	cbz	r3, 800e58c <xTaskResumeAll.part.0+0xdc>
					taskYIELD_IF_USING_PREEMPTION();
 800e574:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e578:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e57c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e580:	f3bf 8f4f 	dsb	sy
 800e584:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 800e588:	2001      	movs	r0, #1
 800e58a:	e000      	b.n	800e58e <xTaskResumeAll.part.0+0xde>
BaseType_t xAlreadyYielded = pdFALSE;
 800e58c:	2000      	movs	r0, #0
 800e58e:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800e590:	f7fe fc12 	bl	800cdb8 <vPortExitCritical>
}
 800e594:	9801      	ldr	r0, [sp, #4]
 800e596:	b003      	add	sp, #12
 800e598:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800e59c:	6833      	ldr	r3, [r6, #0]
 800e59e:	2b00      	cmp	r3, #0
 800e5a0:	d1a1      	bne.n	800e4e6 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e5a2:	4b0a      	ldr	r3, [pc, #40]	; (800e5cc <xTaskResumeAll.part.0+0x11c>)
 800e5a4:	681a      	ldr	r2, [r3, #0]
 800e5a6:	6812      	ldr	r2, [r2, #0]
 800e5a8:	2a00      	cmp	r2, #0
 800e5aa:	d1c4      	bne.n	800e536 <xTaskResumeAll.part.0+0x86>
		xNextTaskUnblockTime = portMAX_DELAY;
 800e5ac:	4b08      	ldr	r3, [pc, #32]	; (800e5d0 <xTaskResumeAll.part.0+0x120>)
 800e5ae:	f04f 32ff 	mov.w	r2, #4294967295
 800e5b2:	601a      	str	r2, [r3, #0]
 800e5b4:	e7c5      	b.n	800e542 <xTaskResumeAll.part.0+0x92>
 800e5b6:	f8df a028 	ldr.w	sl, [pc, #40]	; 800e5e0 <xTaskResumeAll.part.0+0x130>
 800e5ba:	e7c2      	b.n	800e542 <xTaskResumeAll.part.0+0x92>
 800e5bc:	200135fc 	.word	0x200135fc
 800e5c0:	200135f4 	.word	0x200135f4
 800e5c4:	2001363c 	.word	0x2001363c
 800e5c8:	20013604 	.word	0x20013604
 800e5cc:	2001318c 	.word	0x2001318c
 800e5d0:	20013630 	.word	0x20013630
 800e5d4:	20013638 	.word	0x20013638
 800e5d8:	20013194 	.word	0x20013194
 800e5dc:	20013188 	.word	0x20013188
 800e5e0:	20013680 	.word	0x20013680

0800e5e4 <xTaskCreateStatic>:
	{
 800e5e4:	b530      	push	{r4, r5, lr}
 800e5e6:	b087      	sub	sp, #28
 800e5e8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 800e5ea:	b1c4      	cbz	r4, 800e61e <xTaskCreateStatic+0x3a>
		configASSERT( pxTaskBuffer != NULL );
 800e5ec:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800e5ee:	b16d      	cbz	r5, 800e60c <xTaskCreateStatic+0x28>
			volatile size_t xSize = sizeof( StaticTask_t );
 800e5f0:	25ac      	movs	r5, #172	; 0xac
 800e5f2:	9505      	str	r5, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 800e5f4:	9d05      	ldr	r5, [sp, #20]
 800e5f6:	2dac      	cmp	r5, #172	; 0xac
 800e5f8:	d01a      	beq.n	800e630 <xTaskCreateStatic+0x4c>
 800e5fa:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e5fe:	f383 8811 	msr	BASEPRI, r3
 800e602:	f3bf 8f6f 	isb	sy
 800e606:	f3bf 8f4f 	dsb	sy
 800e60a:	e7fe      	b.n	800e60a <xTaskCreateStatic+0x26>
 800e60c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e610:	f383 8811 	msr	BASEPRI, r3
 800e614:	f3bf 8f6f 	isb	sy
 800e618:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 800e61c:	e7fe      	b.n	800e61c <xTaskCreateStatic+0x38>
 800e61e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e622:	f383 8811 	msr	BASEPRI, r3
 800e626:	f3bf 8f6f 	isb	sy
 800e62a:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 800e62e:	e7fe      	b.n	800e62e <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800e630:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800e632:	632c      	str	r4, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800e634:	2402      	movs	r4, #2
 800e636:	f885 40a9 	strb.w	r4, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800e63a:	ac04      	add	r4, sp, #16
 800e63c:	e9cd 4501 	strd	r4, r5, [sp, #4]
 800e640:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800e642:	9400      	str	r4, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800e644:	9c05      	ldr	r4, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800e646:	f7ff fda9 	bl	800e19c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800e64a:	980c      	ldr	r0, [sp, #48]	; 0x30
 800e64c:	f7ff fd1e 	bl	800e08c <prvAddNewTaskToReadyList>
	}
 800e650:	9804      	ldr	r0, [sp, #16]
 800e652:	b007      	add	sp, #28
 800e654:	bd30      	pop	{r4, r5, pc}
 800e656:	bf00      	nop

0800e658 <xTaskCreate>:
	{
 800e658:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e65c:	4607      	mov	r7, r0
 800e65e:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800e660:	0090      	lsls	r0, r2, #2
	{
 800e662:	4615      	mov	r5, r2
 800e664:	4688      	mov	r8, r1
 800e666:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800e668:	f7fe f9b2 	bl	800c9d0 <pvPortMalloc>
			if( pxStack != NULL )
 800e66c:	b1d8      	cbz	r0, 800e6a6 <xTaskCreate+0x4e>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800e66e:	4604      	mov	r4, r0
 800e670:	20ac      	movs	r0, #172	; 0xac
 800e672:	f7fe f9ad 	bl	800c9d0 <pvPortMalloc>
				if( pxNewTCB != NULL )
 800e676:	4606      	mov	r6, r0
 800e678:	b1d0      	cbz	r0, 800e6b0 <xTaskCreate+0x58>
					pxNewTCB->pxStack = pxStack;
 800e67a:	6304      	str	r4, [r0, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800e67c:	2400      	movs	r4, #0
 800e67e:	f886 40a9 	strb.w	r4, [r6, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800e682:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 800e684:	9401      	str	r4, [sp, #4]
 800e686:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800e688:	9602      	str	r6, [sp, #8]
 800e68a:	464b      	mov	r3, r9
 800e68c:	462a      	mov	r2, r5
 800e68e:	4641      	mov	r1, r8
 800e690:	4638      	mov	r0, r7
 800e692:	9400      	str	r4, [sp, #0]
 800e694:	f7ff fd82 	bl	800e19c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800e698:	4630      	mov	r0, r6
 800e69a:	f7ff fcf7 	bl	800e08c <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800e69e:	2001      	movs	r0, #1
	}
 800e6a0:	b005      	add	sp, #20
 800e6a2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800e6a6:	f04f 30ff 	mov.w	r0, #4294967295
	}
 800e6aa:	b005      	add	sp, #20
 800e6ac:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 800e6b0:	4620      	mov	r0, r4
 800e6b2:	f7fe fa49 	bl	800cb48 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800e6b6:	f04f 30ff 	mov.w	r0, #4294967295
 800e6ba:	e7f1      	b.n	800e6a0 <xTaskCreate+0x48>

0800e6bc <vTaskDelay>:
	{
 800e6bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 800e6be:	b950      	cbnz	r0, 800e6d6 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 800e6c0:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e6c4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e6c8:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e6cc:	f3bf 8f4f 	dsb	sy
 800e6d0:	f3bf 8f6f 	isb	sy
	}
 800e6d4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 800e6d6:	4d1e      	ldr	r5, [pc, #120]	; (800e750 <vTaskDelay+0x94>)
 800e6d8:	682b      	ldr	r3, [r5, #0]
 800e6da:	b143      	cbz	r3, 800e6ee <vTaskDelay+0x32>
 800e6dc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e6e0:	f383 8811 	msr	BASEPRI, r3
 800e6e4:	f3bf 8f6f 	isb	sy
 800e6e8:	f3bf 8f4f 	dsb	sy
 800e6ec:	e7fe      	b.n	800e6ec <vTaskDelay+0x30>
	++uxSchedulerSuspended;
 800e6ee:	682b      	ldr	r3, [r5, #0]
 800e6f0:	3301      	adds	r3, #1
 800e6f2:	4604      	mov	r4, r0
 800e6f4:	602b      	str	r3, [r5, #0]
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 800e6f6:	4b17      	ldr	r3, [pc, #92]	; (800e754 <vTaskDelay+0x98>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800e6f8:	4e17      	ldr	r6, [pc, #92]	; (800e758 <vTaskDelay+0x9c>)
const TickType_t xConstTickCount = xTickCount;
 800e6fa:	681f      	ldr	r7, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800e6fc:	6830      	ldr	r0, [r6, #0]
 800e6fe:	3004      	adds	r0, #4
 800e700:	f7fe fabe 	bl	800cc80 <uxListRemove>
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800e704:	6833      	ldr	r3, [r6, #0]
 800e706:	19e4      	adds	r4, r4, r7
 800e708:	605c      	str	r4, [r3, #4]

			if( xTimeToWake < xConstTickCount )
 800e70a:	d310      	bcc.n	800e72e <vTaskDelay+0x72>
			{
				/* Wake time has overflowed.  Place this item in the overflow
				list. */
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800e70c:	4b13      	ldr	r3, [pc, #76]	; (800e75c <vTaskDelay+0xa0>)
 800e70e:	6818      	ldr	r0, [r3, #0]
 800e710:	6831      	ldr	r1, [r6, #0]
 800e712:	3104      	adds	r1, #4
 800e714:	f7fe fa9c 	bl	800cc50 <vListInsert>
	configASSERT( uxSchedulerSuspended );
 800e718:	682b      	ldr	r3, [r5, #0]
 800e71a:	b9a3      	cbnz	r3, 800e746 <vTaskDelay+0x8a>
 800e71c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e720:	f383 8811 	msr	BASEPRI, r3
 800e724:	f3bf 8f6f 	isb	sy
 800e728:	f3bf 8f4f 	dsb	sy
 800e72c:	e7fe      	b.n	800e72c <vTaskDelay+0x70>
			}
			else
			{
				/* The wake time has not overflowed, so the current block list
				is used. */
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800e72e:	4b0c      	ldr	r3, [pc, #48]	; (800e760 <vTaskDelay+0xa4>)
 800e730:	6818      	ldr	r0, [r3, #0]
 800e732:	6831      	ldr	r1, [r6, #0]
 800e734:	3104      	adds	r1, #4
 800e736:	f7fe fa8b 	bl	800cc50 <vListInsert>

				/* If the task entering the blocked state was placed at the
				head of the list of blocked tasks then xNextTaskUnblockTime
				needs to be updated too. */
				if( xTimeToWake < xNextTaskUnblockTime )
 800e73a:	4b0a      	ldr	r3, [pc, #40]	; (800e764 <vTaskDelay+0xa8>)
 800e73c:	681a      	ldr	r2, [r3, #0]
 800e73e:	4294      	cmp	r4, r2
				{
					xNextTaskUnblockTime = xTimeToWake;
 800e740:	bf38      	it	cc
 800e742:	601c      	strcc	r4, [r3, #0]
 800e744:	e7e8      	b.n	800e718 <vTaskDelay+0x5c>
 800e746:	f7ff feb3 	bl	800e4b0 <xTaskResumeAll.part.0>
		if( xAlreadyYielded == pdFALSE )
 800e74a:	2800      	cmp	r0, #0
 800e74c:	d0b8      	beq.n	800e6c0 <vTaskDelay+0x4>
	}
 800e74e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e750:	200135fc 	.word	0x200135fc
 800e754:	2001367c 	.word	0x2001367c
 800e758:	20013188 	.word	0x20013188
 800e75c:	20013190 	.word	0x20013190
 800e760:	2001318c 	.word	0x2001318c
 800e764:	20013630 	.word	0x20013630

0800e768 <vTaskStartScheduler>:
{
 800e768:	b530      	push	{r4, r5, lr}
 800e76a:	b08b      	sub	sp, #44	; 0x2c
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800e76c:	aa07      	add	r2, sp, #28
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 800e76e:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800e770:	a906      	add	r1, sp, #24
 800e772:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 800e774:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800e778:	f7fe f90c 	bl	800c994 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 800e77c:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800e780:	9d05      	ldr	r5, [sp, #20]
		configASSERT( puxStackBuffer != NULL );
 800e782:	b1bb      	cbz	r3, 800e7b4 <vTaskStartScheduler+0x4c>
		configASSERT( pxTaskBuffer != NULL );
 800e784:	b16d      	cbz	r5, 800e7a2 <vTaskStartScheduler+0x3a>
			volatile size_t xSize = sizeof( StaticTask_t );
 800e786:	21ac      	movs	r1, #172	; 0xac
 800e788:	9109      	str	r1, [sp, #36]	; 0x24
			configASSERT( xSize == sizeof( TCB_t ) );
 800e78a:	9909      	ldr	r1, [sp, #36]	; 0x24
 800e78c:	29ac      	cmp	r1, #172	; 0xac
 800e78e:	d01a      	beq.n	800e7c6 <vTaskStartScheduler+0x5e>
 800e790:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e794:	f383 8811 	msr	BASEPRI, r3
 800e798:	f3bf 8f6f 	isb	sy
 800e79c:	f3bf 8f4f 	dsb	sy
 800e7a0:	e7fe      	b.n	800e7a0 <vTaskStartScheduler+0x38>
 800e7a2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e7a6:	f383 8811 	msr	BASEPRI, r3
 800e7aa:	f3bf 8f6f 	isb	sy
 800e7ae:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 800e7b2:	e7fe      	b.n	800e7b2 <vTaskStartScheduler+0x4a>
 800e7b4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e7b8:	f383 8811 	msr	BASEPRI, r3
 800e7bc:	f3bf 8f6f 	isb	sy
 800e7c0:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 800e7c4:	e7fe      	b.n	800e7c4 <vTaskStartScheduler+0x5c>
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800e7c6:	2102      	movs	r1, #2
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800e7c8:	a808      	add	r0, sp, #32
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800e7ca:	632b      	str	r3, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800e7cc:	f885 10a9 	strb.w	r1, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800e7d0:	4623      	mov	r3, r4
 800e7d2:	e9cd 0501 	strd	r0, r5, [sp, #4]
 800e7d6:	491b      	ldr	r1, [pc, #108]	; (800e844 <vTaskStartScheduler+0xdc>)
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800e7d8:	9809      	ldr	r0, [sp, #36]	; 0x24
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800e7da:	9400      	str	r4, [sp, #0]
 800e7dc:	481a      	ldr	r0, [pc, #104]	; (800e848 <vTaskStartScheduler+0xe0>)
 800e7de:	f7ff fcdd 	bl	800e19c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800e7e2:	4628      	mov	r0, r5
 800e7e4:	f7ff fc52 	bl	800e08c <prvAddNewTaskToReadyList>
		return xReturn;
 800e7e8:	9b08      	ldr	r3, [sp, #32]
		if( xIdleTaskHandle != NULL )
 800e7ea:	b1eb      	cbz	r3, 800e828 <vTaskStartScheduler+0xc0>
			xReturn = xTimerCreateTimerTask();
 800e7ec:	f000 fc6e 	bl	800f0cc <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 800e7f0:	2801      	cmp	r0, #1
 800e7f2:	d11b      	bne.n	800e82c <vTaskStartScheduler+0xc4>
 800e7f4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e7f8:	f383 8811 	msr	BASEPRI, r3
 800e7fc:	f3bf 8f6f 	isb	sy
 800e800:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800e804:	4b11      	ldr	r3, [pc, #68]	; (800e84c <vTaskStartScheduler+0xe4>)
 800e806:	4a12      	ldr	r2, [pc, #72]	; (800e850 <vTaskStartScheduler+0xe8>)
 800e808:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 800e80a:	4912      	ldr	r1, [pc, #72]	; (800e854 <vTaskStartScheduler+0xec>)
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800e80c:	3358      	adds	r3, #88	; 0x58
 800e80e:	6013      	str	r3, [r2, #0]
		xSchedulerRunning = pdTRUE;
 800e810:	4a11      	ldr	r2, [pc, #68]	; (800e858 <vTaskStartScheduler+0xf0>)
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800e812:	4b12      	ldr	r3, [pc, #72]	; (800e85c <vTaskStartScheduler+0xf4>)
		xNextTaskUnblockTime = portMAX_DELAY;
 800e814:	f04f 35ff 	mov.w	r5, #4294967295
 800e818:	600d      	str	r5, [r1, #0]
		xSchedulerRunning = pdTRUE;
 800e81a:	6010      	str	r0, [r2, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800e81c:	601c      	str	r4, [r3, #0]
}
 800e81e:	b00b      	add	sp, #44	; 0x2c
 800e820:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
		if( xPortStartScheduler() != pdFALSE )
 800e824:	f7fe bb38 	b.w	800ce98 <xPortStartScheduler>
}
 800e828:	b00b      	add	sp, #44	; 0x2c
 800e82a:	bd30      	pop	{r4, r5, pc}
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800e82c:	3001      	adds	r0, #1
 800e82e:	d1fb      	bne.n	800e828 <vTaskStartScheduler+0xc0>
 800e830:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e834:	f383 8811 	msr	BASEPRI, r3
 800e838:	f3bf 8f6f 	isb	sy
 800e83c:	f3bf 8f4f 	dsb	sy
 800e840:	e7fe      	b.n	800e840 <vTaskStartScheduler+0xd8>
 800e842:	bf00      	nop
 800e844:	0802c21c 	.word	0x0802c21c
 800e848:	0800e2c9 	.word	0x0800e2c9
 800e84c:	20013188 	.word	0x20013188
 800e850:	20000160 	.word	0x20000160
 800e854:	20013630 	.word	0x20013630
 800e858:	20013650 	.word	0x20013650
 800e85c:	2001367c 	.word	0x2001367c

0800e860 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 800e860:	4a02      	ldr	r2, [pc, #8]	; (800e86c <vTaskSuspendAll+0xc>)
 800e862:	6813      	ldr	r3, [r2, #0]
 800e864:	3301      	adds	r3, #1
 800e866:	6013      	str	r3, [r2, #0]
}
 800e868:	4770      	bx	lr
 800e86a:	bf00      	nop
 800e86c:	200135fc 	.word	0x200135fc

0800e870 <xTaskResumeAll>:
	configASSERT( uxSchedulerSuspended );
 800e870:	4b06      	ldr	r3, [pc, #24]	; (800e88c <xTaskResumeAll+0x1c>)
 800e872:	681b      	ldr	r3, [r3, #0]
 800e874:	b943      	cbnz	r3, 800e888 <xTaskResumeAll+0x18>
 800e876:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e87a:	f383 8811 	msr	BASEPRI, r3
 800e87e:	f3bf 8f6f 	isb	sy
 800e882:	f3bf 8f4f 	dsb	sy
 800e886:	e7fe      	b.n	800e886 <xTaskResumeAll+0x16>
 800e888:	f7ff be12 	b.w	800e4b0 <xTaskResumeAll.part.0>
 800e88c:	200135fc 	.word	0x200135fc

0800e890 <xTaskGetTickCount>:
		xTicks = xTickCount;
 800e890:	4b01      	ldr	r3, [pc, #4]	; (800e898 <xTaskGetTickCount+0x8>)
 800e892:	6818      	ldr	r0, [r3, #0]
}
 800e894:	4770      	bx	lr
 800e896:	bf00      	nop
 800e898:	2001367c 	.word	0x2001367c

0800e89c <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800e89c:	4b05      	ldr	r3, [pc, #20]	; (800e8b4 <xTaskIncrementTick+0x18>)
 800e89e:	681b      	ldr	r3, [r3, #0]
 800e8a0:	b90b      	cbnz	r3, 800e8a6 <xTaskIncrementTick+0xa>
 800e8a2:	f7ff bd61 	b.w	800e368 <xTaskIncrementTick.part.0>
		++xPendedTicks;
 800e8a6:	4a04      	ldr	r2, [pc, #16]	; (800e8b8 <xTaskIncrementTick+0x1c>)
 800e8a8:	6813      	ldr	r3, [r2, #0]
 800e8aa:	3301      	adds	r3, #1
}
 800e8ac:	2000      	movs	r0, #0
		++xPendedTicks;
 800e8ae:	6013      	str	r3, [r2, #0]
}
 800e8b0:	4770      	bx	lr
 800e8b2:	bf00      	nop
 800e8b4:	200135fc 	.word	0x200135fc
 800e8b8:	20013638 	.word	0x20013638

0800e8bc <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800e8bc:	4b1f      	ldr	r3, [pc, #124]	; (800e93c <vTaskSwitchContext+0x80>)
 800e8be:	681b      	ldr	r3, [r3, #0]
 800e8c0:	b11b      	cbz	r3, 800e8ca <vTaskSwitchContext+0xe>
		xYieldPending = pdTRUE;
 800e8c2:	4b1f      	ldr	r3, [pc, #124]	; (800e940 <vTaskSwitchContext+0x84>)
 800e8c4:	2201      	movs	r2, #1
 800e8c6:	601a      	str	r2, [r3, #0]
 800e8c8:	4770      	bx	lr
		xYieldPending = pdFALSE;
 800e8ca:	4a1d      	ldr	r2, [pc, #116]	; (800e940 <vTaskSwitchContext+0x84>)
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e8cc:	491d      	ldr	r1, [pc, #116]	; (800e944 <vTaskSwitchContext+0x88>)
{
 800e8ce:	b410      	push	{r4}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e8d0:	4c1d      	ldr	r4, [pc, #116]	; (800e948 <vTaskSwitchContext+0x8c>)
		xYieldPending = pdFALSE;
 800e8d2:	6013      	str	r3, [r2, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e8d4:	6823      	ldr	r3, [r4, #0]
 800e8d6:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800e8da:	0092      	lsls	r2, r2, #2
 800e8dc:	0098      	lsls	r0, r3, #2
 800e8de:	588a      	ldr	r2, [r1, r2]
 800e8e0:	b942      	cbnz	r2, 800e8f4 <vTaskSwitchContext+0x38>
 800e8e2:	b313      	cbz	r3, 800e92a <vTaskSwitchContext+0x6e>
 800e8e4:	3b01      	subs	r3, #1
 800e8e6:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800e8ea:	0098      	lsls	r0, r3, #2
 800e8ec:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 800e8f0:	2a00      	cmp	r2, #0
 800e8f2:	d0f6      	beq.n	800e8e2 <vTaskSwitchContext+0x26>
 800e8f4:	4418      	add	r0, r3
 800e8f6:	eb01 0c80 	add.w	ip, r1, r0, lsl #2
 800e8fa:	4662      	mov	r2, ip
 800e8fc:	f8dc 1004 	ldr.w	r1, [ip, #4]
 800e900:	6849      	ldr	r1, [r1, #4]
 800e902:	f8cc 1004 	str.w	r1, [ip, #4]
 800e906:	3208      	adds	r2, #8
 800e908:	4291      	cmp	r1, r2
 800e90a:	bf08      	it	eq
 800e90c:	6849      	ldreq	r1, [r1, #4]
 800e90e:	4a0f      	ldr	r2, [pc, #60]	; (800e94c <vTaskSwitchContext+0x90>)
 800e910:	bf08      	it	eq
 800e912:	f8cc 1004 	streq.w	r1, [ip, #4]
 800e916:	68c9      	ldr	r1, [r1, #12]
 800e918:	6011      	str	r1, [r2, #0]
 800e91a:	6023      	str	r3, [r4, #0]
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800e91c:	6813      	ldr	r3, [r2, #0]
 800e91e:	4a0c      	ldr	r2, [pc, #48]	; (800e950 <vTaskSwitchContext+0x94>)
}
 800e920:	f85d 4b04 	ldr.w	r4, [sp], #4
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800e924:	3358      	adds	r3, #88	; 0x58
 800e926:	6013      	str	r3, [r2, #0]
}
 800e928:	4770      	bx	lr
 800e92a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e92e:	f383 8811 	msr	BASEPRI, r3
 800e932:	f3bf 8f6f 	isb	sy
 800e936:	f3bf 8f4f 	dsb	sy
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e93a:	e7fe      	b.n	800e93a <vTaskSwitchContext+0x7e>
 800e93c:	200135fc 	.word	0x200135fc
 800e940:	20013680 	.word	0x20013680
 800e944:	20013194 	.word	0x20013194
 800e948:	20013604 	.word	0x20013604
 800e94c:	20013188 	.word	0x20013188
 800e950:	20000160 	.word	0x20000160

0800e954 <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
 800e954:	b1d0      	cbz	r0, 800e98c <vTaskPlaceOnEventList+0x38>
{
 800e956:	b570      	push	{r4, r5, r6, lr}
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800e958:	4d1a      	ldr	r5, [pc, #104]	; (800e9c4 <vTaskPlaceOnEventList+0x70>)
 800e95a:	460c      	mov	r4, r1
 800e95c:	6829      	ldr	r1, [r5, #0]
 800e95e:	3118      	adds	r1, #24
 800e960:	f7fe f976 	bl	800cc50 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 800e964:	4b18      	ldr	r3, [pc, #96]	; (800e9c8 <vTaskPlaceOnEventList+0x74>)
 800e966:	681e      	ldr	r6, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800e968:	6828      	ldr	r0, [r5, #0]
 800e96a:	3004      	adds	r0, #4
 800e96c:	f7fe f988 	bl	800cc80 <uxListRemove>
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 800e970:	1c63      	adds	r3, r4, #1
 800e972:	d014      	beq.n	800e99e <vTaskPlaceOnEventList+0x4a>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800e974:	682b      	ldr	r3, [r5, #0]
 800e976:	19a4      	adds	r4, r4, r6
 800e978:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800e97a:	d317      	bcc.n	800e9ac <vTaskPlaceOnEventList+0x58>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800e97c:	4b13      	ldr	r3, [pc, #76]	; (800e9cc <vTaskPlaceOnEventList+0x78>)
 800e97e:	6818      	ldr	r0, [r3, #0]
 800e980:	6829      	ldr	r1, [r5, #0]
}
 800e982:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800e986:	3104      	adds	r1, #4
 800e988:	f7fe b962 	b.w	800cc50 <vListInsert>
 800e98c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e990:	f383 8811 	msr	BASEPRI, r3
 800e994:	f3bf 8f6f 	isb	sy
 800e998:	f3bf 8f4f 	dsb	sy
	configASSERT( pxEventList );
 800e99c:	e7fe      	b.n	800e99c <vTaskPlaceOnEventList+0x48>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800e99e:	6829      	ldr	r1, [r5, #0]
 800e9a0:	480b      	ldr	r0, [pc, #44]	; (800e9d0 <vTaskPlaceOnEventList+0x7c>)
}
 800e9a2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800e9a6:	3104      	adds	r1, #4
 800e9a8:	f7fe b942 	b.w	800cc30 <vListInsertEnd>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800e9ac:	4b09      	ldr	r3, [pc, #36]	; (800e9d4 <vTaskPlaceOnEventList+0x80>)
 800e9ae:	6818      	ldr	r0, [r3, #0]
 800e9b0:	6829      	ldr	r1, [r5, #0]
 800e9b2:	3104      	adds	r1, #4
 800e9b4:	f7fe f94c 	bl	800cc50 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800e9b8:	4b07      	ldr	r3, [pc, #28]	; (800e9d8 <vTaskPlaceOnEventList+0x84>)
 800e9ba:	681a      	ldr	r2, [r3, #0]
 800e9bc:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 800e9be:	bf38      	it	cc
 800e9c0:	601c      	strcc	r4, [r3, #0]
}
 800e9c2:	bd70      	pop	{r4, r5, r6, pc}
 800e9c4:	20013188 	.word	0x20013188
 800e9c8:	2001367c 	.word	0x2001367c
 800e9cc:	20013190 	.word	0x20013190
 800e9d0:	20013654 	.word	0x20013654
 800e9d4:	2001318c 	.word	0x2001318c
 800e9d8:	20013630 	.word	0x20013630

0800e9dc <vTaskPlaceOnEventListRestricted>:
		configASSERT( pxEventList );
 800e9dc:	b330      	cbz	r0, 800ea2c <vTaskPlaceOnEventListRestricted+0x50>
	{
 800e9de:	b570      	push	{r4, r5, r6, lr}
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800e9e0:	4e1d      	ldr	r6, [pc, #116]	; (800ea58 <vTaskPlaceOnEventListRestricted+0x7c>)
 800e9e2:	460c      	mov	r4, r1
 800e9e4:	6831      	ldr	r1, [r6, #0]
 800e9e6:	4615      	mov	r5, r2
 800e9e8:	3118      	adds	r1, #24
 800e9ea:	f7fe f921 	bl	800cc30 <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
 800e9ee:	4b1b      	ldr	r3, [pc, #108]	; (800ea5c <vTaskPlaceOnEventListRestricted+0x80>)
		if( xWaitIndefinitely != pdFALSE )
 800e9f0:	b985      	cbnz	r5, 800ea14 <vTaskPlaceOnEventListRestricted+0x38>
const TickType_t xConstTickCount = xTickCount;
 800e9f2:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800e9f4:	6830      	ldr	r0, [r6, #0]
 800e9f6:	3004      	adds	r0, #4
 800e9f8:	f7fe f942 	bl	800cc80 <uxListRemove>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800e9fc:	6833      	ldr	r3, [r6, #0]
 800e9fe:	1964      	adds	r4, r4, r5
 800ea00:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800ea02:	d31c      	bcc.n	800ea3e <vTaskPlaceOnEventListRestricted+0x62>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ea04:	4b16      	ldr	r3, [pc, #88]	; (800ea60 <vTaskPlaceOnEventListRestricted+0x84>)
 800ea06:	6818      	ldr	r0, [r3, #0]
 800ea08:	6831      	ldr	r1, [r6, #0]
	}
 800ea0a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ea0e:	3104      	adds	r1, #4
 800ea10:	f7fe b91e 	b.w	800cc50 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 800ea14:	681b      	ldr	r3, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800ea16:	6830      	ldr	r0, [r6, #0]
 800ea18:	3004      	adds	r0, #4
 800ea1a:	f7fe f931 	bl	800cc80 <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ea1e:	6831      	ldr	r1, [r6, #0]
 800ea20:	4810      	ldr	r0, [pc, #64]	; (800ea64 <vTaskPlaceOnEventListRestricted+0x88>)
	}
 800ea22:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ea26:	3104      	adds	r1, #4
 800ea28:	f7fe b902 	b.w	800cc30 <vListInsertEnd>
 800ea2c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ea30:	f383 8811 	msr	BASEPRI, r3
 800ea34:	f3bf 8f6f 	isb	sy
 800ea38:	f3bf 8f4f 	dsb	sy
		configASSERT( pxEventList );
 800ea3c:	e7fe      	b.n	800ea3c <vTaskPlaceOnEventListRestricted+0x60>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ea3e:	4b0a      	ldr	r3, [pc, #40]	; (800ea68 <vTaskPlaceOnEventListRestricted+0x8c>)
 800ea40:	6818      	ldr	r0, [r3, #0]
 800ea42:	6831      	ldr	r1, [r6, #0]
 800ea44:	3104      	adds	r1, #4
 800ea46:	f7fe f903 	bl	800cc50 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800ea4a:	4b08      	ldr	r3, [pc, #32]	; (800ea6c <vTaskPlaceOnEventListRestricted+0x90>)
 800ea4c:	681a      	ldr	r2, [r3, #0]
 800ea4e:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 800ea50:	bf38      	it	cc
 800ea52:	601c      	strcc	r4, [r3, #0]
	}
 800ea54:	bd70      	pop	{r4, r5, r6, pc}
 800ea56:	bf00      	nop
 800ea58:	20013188 	.word	0x20013188
 800ea5c:	2001367c 	.word	0x2001367c
 800ea60:	20013190 	.word	0x20013190
 800ea64:	20013654 	.word	0x20013654
 800ea68:	2001318c 	.word	0x2001318c
 800ea6c:	20013630 	.word	0x20013630

0800ea70 <xTaskRemoveFromEventList>:
{
 800ea70:	b530      	push	{r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ea72:	68c3      	ldr	r3, [r0, #12]
 800ea74:	68dc      	ldr	r4, [r3, #12]
{
 800ea76:	b083      	sub	sp, #12
	configASSERT( pxUnblockedTCB );
 800ea78:	2c00      	cmp	r4, #0
 800ea7a:	d02b      	beq.n	800ead4 <xTaskRemoveFromEventList+0x64>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800ea7c:	f104 0518 	add.w	r5, r4, #24
 800ea80:	4628      	mov	r0, r5
 800ea82:	f7fe f8fd 	bl	800cc80 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800ea86:	4b18      	ldr	r3, [pc, #96]	; (800eae8 <xTaskRemoveFromEventList+0x78>)
 800ea88:	681b      	ldr	r3, [r3, #0]
 800ea8a:	b17b      	cbz	r3, 800eaac <xTaskRemoveFromEventList+0x3c>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800ea8c:	4817      	ldr	r0, [pc, #92]	; (800eaec <xTaskRemoveFromEventList+0x7c>)
 800ea8e:	4629      	mov	r1, r5
 800ea90:	f7fe f8ce 	bl	800cc30 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800ea94:	4b16      	ldr	r3, [pc, #88]	; (800eaf0 <xTaskRemoveFromEventList+0x80>)
 800ea96:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800ea98:	681b      	ldr	r3, [r3, #0]
 800ea9a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ea9c:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800ea9e:	bf85      	ittet	hi
 800eaa0:	4b14      	ldrhi	r3, [pc, #80]	; (800eaf4 <xTaskRemoveFromEventList+0x84>)
 800eaa2:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 800eaa4:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 800eaa6:	6018      	strhi	r0, [r3, #0]
}
 800eaa8:	b003      	add	sp, #12
 800eaaa:	bd30      	pop	{r4, r5, pc}
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800eaac:	1d21      	adds	r1, r4, #4
 800eaae:	4608      	mov	r0, r1
 800eab0:	9101      	str	r1, [sp, #4]
 800eab2:	f7fe f8e5 	bl	800cc80 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800eab6:	4a10      	ldr	r2, [pc, #64]	; (800eaf8 <xTaskRemoveFromEventList+0x88>)
 800eab8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800eaba:	6810      	ldr	r0, [r2, #0]
 800eabc:	9901      	ldr	r1, [sp, #4]
 800eabe:	4283      	cmp	r3, r0
 800eac0:	480e      	ldr	r0, [pc, #56]	; (800eafc <xTaskRemoveFromEventList+0x8c>)
 800eac2:	bf88      	it	hi
 800eac4:	6013      	strhi	r3, [r2, #0]
 800eac6:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800eaca:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800eace:	f7fe f8af 	bl	800cc30 <vListInsertEnd>
 800ead2:	e7df      	b.n	800ea94 <xTaskRemoveFromEventList+0x24>
 800ead4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ead8:	f383 8811 	msr	BASEPRI, r3
 800eadc:	f3bf 8f6f 	isb	sy
 800eae0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxUnblockedTCB );
 800eae4:	e7fe      	b.n	800eae4 <xTaskRemoveFromEventList+0x74>
 800eae6:	bf00      	nop
 800eae8:	200135fc 	.word	0x200135fc
 800eaec:	2001363c 	.word	0x2001363c
 800eaf0:	20013188 	.word	0x20013188
 800eaf4:	20013680 	.word	0x20013680
 800eaf8:	20013604 	.word	0x20013604
 800eafc:	20013194 	.word	0x20013194

0800eb00 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800eb00:	4a03      	ldr	r2, [pc, #12]	; (800eb10 <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
 800eb02:	4b04      	ldr	r3, [pc, #16]	; (800eb14 <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800eb04:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800eb06:	681b      	ldr	r3, [r3, #0]
 800eb08:	e9c0 2300 	strd	r2, r3, [r0]
}
 800eb0c:	4770      	bx	lr
 800eb0e:	bf00      	nop
 800eb10:	20013634 	.word	0x20013634
 800eb14:	2001367c 	.word	0x2001367c

0800eb18 <xTaskCheckForTimeOut>:
	configASSERT( pxTimeOut );
 800eb18:	b328      	cbz	r0, 800eb66 <xTaskCheckForTimeOut+0x4e>
{
 800eb1a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800eb1c:	460d      	mov	r5, r1
 800eb1e:	b083      	sub	sp, #12
	configASSERT( pxTicksToWait );
 800eb20:	b1c1      	cbz	r1, 800eb54 <xTaskCheckForTimeOut+0x3c>
 800eb22:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 800eb24:	f7fe f926 	bl	800cd74 <vPortEnterCritical>
			if( *pxTicksToWait == portMAX_DELAY )
 800eb28:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
 800eb2a:	4a1d      	ldr	r2, [pc, #116]	; (800eba0 <xTaskCheckForTimeOut+0x88>)
			if( *pxTicksToWait == portMAX_DELAY )
 800eb2c:	1c58      	adds	r0, r3, #1
		const TickType_t xConstTickCount = xTickCount;
 800eb2e:	6811      	ldr	r1, [r2, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800eb30:	d030      	beq.n	800eb94 <xTaskCheckForTimeOut+0x7c>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800eb32:	f8df c070 	ldr.w	ip, [pc, #112]	; 800eba4 <xTaskCheckForTimeOut+0x8c>
 800eb36:	e9d4 6000 	ldrd	r6, r0, [r4]
 800eb3a:	f8dc 7000 	ldr.w	r7, [ip]
 800eb3e:	42be      	cmp	r6, r7
 800eb40:	d01a      	beq.n	800eb78 <xTaskCheckForTimeOut+0x60>
 800eb42:	4288      	cmp	r0, r1
 800eb44:	d818      	bhi.n	800eb78 <xTaskCheckForTimeOut+0x60>
			xReturn = pdTRUE;
 800eb46:	2001      	movs	r0, #1
 800eb48:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800eb4a:	f7fe f935 	bl	800cdb8 <vPortExitCritical>
}
 800eb4e:	9801      	ldr	r0, [sp, #4]
 800eb50:	b003      	add	sp, #12
 800eb52:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800eb54:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eb58:	f383 8811 	msr	BASEPRI, r3
 800eb5c:	f3bf 8f6f 	isb	sy
 800eb60:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTicksToWait );
 800eb64:	e7fe      	b.n	800eb64 <xTaskCheckForTimeOut+0x4c>
 800eb66:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eb6a:	f383 8811 	msr	BASEPRI, r3
 800eb6e:	f3bf 8f6f 	isb	sy
 800eb72:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTimeOut );
 800eb76:	e7fe      	b.n	800eb76 <xTaskCheckForTimeOut+0x5e>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800eb78:	eba1 0e00 	sub.w	lr, r1, r0
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800eb7c:	4573      	cmp	r3, lr
 800eb7e:	d90b      	bls.n	800eb98 <xTaskCheckForTimeOut+0x80>
			*pxTicksToWait -= xElapsedTime;
 800eb80:	1a5b      	subs	r3, r3, r1
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800eb82:	f8dc 1000 	ldr.w	r1, [ip]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800eb86:	6812      	ldr	r2, [r2, #0]
			*pxTicksToWait -= xElapsedTime;
 800eb88:	4403      	add	r3, r0
 800eb8a:	602b      	str	r3, [r5, #0]
			xReturn = pdFALSE;
 800eb8c:	2000      	movs	r0, #0
	pxTimeOut->xTimeOnEntering = xTickCount;
 800eb8e:	e9c4 1200 	strd	r1, r2, [r4]
			xReturn = pdFALSE;
 800eb92:	e7d9      	b.n	800eb48 <xTaskCheckForTimeOut+0x30>
				xReturn = pdFALSE;
 800eb94:	2000      	movs	r0, #0
 800eb96:	e7d7      	b.n	800eb48 <xTaskCheckForTimeOut+0x30>
			*pxTicksToWait = 0;
 800eb98:	2300      	movs	r3, #0
 800eb9a:	602b      	str	r3, [r5, #0]
			xReturn = pdTRUE;
 800eb9c:	2001      	movs	r0, #1
 800eb9e:	e7d3      	b.n	800eb48 <xTaskCheckForTimeOut+0x30>
 800eba0:	2001367c 	.word	0x2001367c
 800eba4:	20013634 	.word	0x20013634

0800eba8 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 800eba8:	4b01      	ldr	r3, [pc, #4]	; (800ebb0 <vTaskMissedYield+0x8>)
 800ebaa:	2201      	movs	r2, #1
 800ebac:	601a      	str	r2, [r3, #0]
}
 800ebae:	4770      	bx	lr
 800ebb0:	20013680 	.word	0x20013680

0800ebb4 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800ebb4:	4b05      	ldr	r3, [pc, #20]	; (800ebcc <xTaskGetSchedulerState+0x18>)
 800ebb6:	681b      	ldr	r3, [r3, #0]
 800ebb8:	b133      	cbz	r3, 800ebc8 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800ebba:	4b05      	ldr	r3, [pc, #20]	; (800ebd0 <xTaskGetSchedulerState+0x1c>)
 800ebbc:	6818      	ldr	r0, [r3, #0]
 800ebbe:	fab0 f080 	clz	r0, r0
 800ebc2:	0940      	lsrs	r0, r0, #5
 800ebc4:	0040      	lsls	r0, r0, #1
 800ebc6:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 800ebc8:	2001      	movs	r0, #1
	}
 800ebca:	4770      	bx	lr
 800ebcc:	20013650 	.word	0x20013650
 800ebd0:	200135fc 	.word	0x200135fc

0800ebd4 <xTaskPriorityInherit>:
	{
 800ebd4:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800ebd6:	4604      	mov	r4, r0
	{
 800ebd8:	b082      	sub	sp, #8
		if( pxMutexHolder != NULL )
 800ebda:	b1c8      	cbz	r0, 800ec10 <xTaskPriorityInherit+0x3c>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800ebdc:	4d1d      	ldr	r5, [pc, #116]	; (800ec54 <xTaskPriorityInherit+0x80>)
 800ebde:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800ebe0:	682a      	ldr	r2, [r5, #0]
 800ebe2:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800ebe4:	4293      	cmp	r3, r2
 800ebe6:	d215      	bcs.n	800ec14 <xTaskPriorityInherit+0x40>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800ebe8:	6982      	ldr	r2, [r0, #24]
 800ebea:	2a00      	cmp	r2, #0
 800ebec:	db04      	blt.n	800ebf8 <xTaskPriorityInherit+0x24>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800ebee:	682a      	ldr	r2, [r5, #0]
 800ebf0:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800ebf2:	f1c2 0238 	rsb	r2, r2, #56	; 0x38
 800ebf6:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800ebf8:	4e17      	ldr	r6, [pc, #92]	; (800ec58 <xTaskPriorityInherit+0x84>)
 800ebfa:	6962      	ldr	r2, [r4, #20]
 800ebfc:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800ec00:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 800ec04:	429a      	cmp	r2, r3
 800ec06:	d00e      	beq.n	800ec26 <xTaskPriorityInherit+0x52>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800ec08:	682b      	ldr	r3, [r5, #0]
 800ec0a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ec0c:	62e3      	str	r3, [r4, #44]	; 0x2c
				xReturn = pdTRUE;
 800ec0e:	2001      	movs	r0, #1
	}
 800ec10:	b002      	add	sp, #8
 800ec12:	bd70      	pop	{r4, r5, r6, pc}
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800ec14:	682b      	ldr	r3, [r5, #0]
 800ec16:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800ec18:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ec1a:	4298      	cmp	r0, r3
 800ec1c:	bf2c      	ite	cs
 800ec1e:	2000      	movcs	r0, #0
 800ec20:	2001      	movcc	r0, #1
	}
 800ec22:	b002      	add	sp, #8
 800ec24:	bd70      	pop	{r4, r5, r6, pc}
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800ec26:	1d21      	adds	r1, r4, #4
 800ec28:	4608      	mov	r0, r1
 800ec2a:	9101      	str	r1, [sp, #4]
 800ec2c:	f7fe f828 	bl	800cc80 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800ec30:	682a      	ldr	r2, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800ec32:	4b0a      	ldr	r3, [pc, #40]	; (800ec5c <xTaskPriorityInherit+0x88>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800ec34:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800ec36:	681a      	ldr	r2, [r3, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800ec38:	62e0      	str	r0, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800ec3a:	4290      	cmp	r0, r2
 800ec3c:	bf88      	it	hi
 800ec3e:	6018      	strhi	r0, [r3, #0]
 800ec40:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800ec44:	eb06 0080 	add.w	r0, r6, r0, lsl #2
 800ec48:	9901      	ldr	r1, [sp, #4]
 800ec4a:	f7fd fff1 	bl	800cc30 <vListInsertEnd>
				xReturn = pdTRUE;
 800ec4e:	2001      	movs	r0, #1
 800ec50:	e7de      	b.n	800ec10 <xTaskPriorityInherit+0x3c>
 800ec52:	bf00      	nop
 800ec54:	20013188 	.word	0x20013188
 800ec58:	20013194 	.word	0x20013194
 800ec5c:	20013604 	.word	0x20013604

0800ec60 <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
 800ec60:	b318      	cbz	r0, 800ecaa <xTaskPriorityDisinherit+0x4a>
	{
 800ec62:	b510      	push	{r4, lr}
			configASSERT( pxTCB == pxCurrentTCB );
 800ec64:	4b1e      	ldr	r3, [pc, #120]	; (800ece0 <xTaskPriorityDisinherit+0x80>)
 800ec66:	681c      	ldr	r4, [r3, #0]
 800ec68:	4284      	cmp	r4, r0
	{
 800ec6a:	b082      	sub	sp, #8
			configASSERT( pxTCB == pxCurrentTCB );
 800ec6c:	d008      	beq.n	800ec80 <xTaskPriorityDisinherit+0x20>
 800ec6e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ec72:	f383 8811 	msr	BASEPRI, r3
 800ec76:	f3bf 8f6f 	isb	sy
 800ec7a:	f3bf 8f4f 	dsb	sy
 800ec7e:	e7fe      	b.n	800ec7e <xTaskPriorityDisinherit+0x1e>
			configASSERT( pxTCB->uxMutexesHeld );
 800ec80:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800ec82:	b14b      	cbz	r3, 800ec98 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800ec84:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800ec86:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 800ec88:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800ec8a:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 800ec8c:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800ec8e:	d000      	beq.n	800ec92 <xTaskPriorityDisinherit+0x32>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800ec90:	b16b      	cbz	r3, 800ecae <xTaskPriorityDisinherit+0x4e>
	BaseType_t xReturn = pdFALSE;
 800ec92:	2000      	movs	r0, #0
	}
 800ec94:	b002      	add	sp, #8
 800ec96:	bd10      	pop	{r4, pc}
 800ec98:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ec9c:	f383 8811 	msr	BASEPRI, r3
 800eca0:	f3bf 8f6f 	isb	sy
 800eca4:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 800eca8:	e7fe      	b.n	800eca8 <xTaskPriorityDisinherit+0x48>
	BaseType_t xReturn = pdFALSE;
 800ecaa:	2000      	movs	r0, #0
	}
 800ecac:	4770      	bx	lr
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800ecae:	1d21      	adds	r1, r4, #4
 800ecb0:	4608      	mov	r0, r1
 800ecb2:	9101      	str	r1, [sp, #4]
 800ecb4:	f7fd ffe4 	bl	800cc80 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800ecb8:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 800ecba:	4a0a      	ldr	r2, [pc, #40]	; (800ece4 <xTaskPriorityDisinherit+0x84>)
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800ecbc:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800ecbe:	f1c3 0038 	rsb	r0, r3, #56	; 0x38
 800ecc2:	61a0      	str	r0, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800ecc4:	6810      	ldr	r0, [r2, #0]
 800ecc6:	9901      	ldr	r1, [sp, #4]
 800ecc8:	4283      	cmp	r3, r0
 800ecca:	4807      	ldr	r0, [pc, #28]	; (800ece8 <xTaskPriorityDisinherit+0x88>)
 800eccc:	bf88      	it	hi
 800ecce:	6013      	strhi	r3, [r2, #0]
 800ecd0:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800ecd4:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800ecd8:	f7fd ffaa 	bl	800cc30 <vListInsertEnd>
					xReturn = pdTRUE;
 800ecdc:	2001      	movs	r0, #1
		return xReturn;
 800ecde:	e7d9      	b.n	800ec94 <xTaskPriorityDisinherit+0x34>
 800ece0:	20013188 	.word	0x20013188
 800ece4:	20013604 	.word	0x20013604
 800ece8:	20013194 	.word	0x20013194

0800ecec <vTaskPriorityDisinheritAfterTimeout>:
		if( pxMutexHolder != NULL )
 800ecec:	2800      	cmp	r0, #0
 800ecee:	d041      	beq.n	800ed74 <vTaskPriorityDisinheritAfterTimeout+0x88>
	{
 800ecf0:	b530      	push	{r4, r5, lr}
			configASSERT( pxTCB->uxMutexesHeld );
 800ecf2:	6d03      	ldr	r3, [r0, #80]	; 0x50
	{
 800ecf4:	b083      	sub	sp, #12
 800ecf6:	4604      	mov	r4, r0
			configASSERT( pxTCB->uxMutexesHeld );
 800ecf8:	b153      	cbz	r3, 800ed10 <vTaskPriorityDisinheritAfterTimeout+0x24>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800ecfa:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
			if( pxTCB->uxPriority != uxPriorityToUse )
 800ecfc:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800ecfe:	4281      	cmp	r1, r0
 800ed00:	bf38      	it	cc
 800ed02:	4601      	movcc	r1, r0
 800ed04:	428a      	cmp	r2, r1
 800ed06:	d001      	beq.n	800ed0c <vTaskPriorityDisinheritAfterTimeout+0x20>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800ed08:	2b01      	cmp	r3, #1
 800ed0a:	d00a      	beq.n	800ed22 <vTaskPriorityDisinheritAfterTimeout+0x36>
	}
 800ed0c:	b003      	add	sp, #12
 800ed0e:	bd30      	pop	{r4, r5, pc}
 800ed10:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ed14:	f383 8811 	msr	BASEPRI, r3
 800ed18:	f3bf 8f6f 	isb	sy
 800ed1c:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 800ed20:	e7fe      	b.n	800ed20 <vTaskPriorityDisinheritAfterTimeout+0x34>
					configASSERT( pxTCB != pxCurrentTCB );
 800ed22:	4b19      	ldr	r3, [pc, #100]	; (800ed88 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
 800ed24:	681b      	ldr	r3, [r3, #0]
 800ed26:	42a3      	cmp	r3, r4
 800ed28:	d025      	beq.n	800ed76 <vTaskPriorityDisinheritAfterTimeout+0x8a>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800ed2a:	69a3      	ldr	r3, [r4, #24]
					pxTCB->uxPriority = uxPriorityToUse;
 800ed2c:	62e1      	str	r1, [r4, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800ed2e:	2b00      	cmp	r3, #0
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800ed30:	bfa8      	it	ge
 800ed32:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800ed36:	4d15      	ldr	r5, [pc, #84]	; (800ed8c <vTaskPriorityDisinheritAfterTimeout+0xa0>)
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800ed38:	bfa8      	it	ge
 800ed3a:	61a1      	strge	r1, [r4, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800ed3c:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800ed40:	6961      	ldr	r1, [r4, #20]
 800ed42:	eb05 0382 	add.w	r3, r5, r2, lsl #2
 800ed46:	4299      	cmp	r1, r3
 800ed48:	d1e0      	bne.n	800ed0c <vTaskPriorityDisinheritAfterTimeout+0x20>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800ed4a:	1d21      	adds	r1, r4, #4
 800ed4c:	4608      	mov	r0, r1
 800ed4e:	9101      	str	r1, [sp, #4]
 800ed50:	f7fd ff96 	bl	800cc80 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 800ed54:	4b0e      	ldr	r3, [pc, #56]	; (800ed90 <vTaskPriorityDisinheritAfterTimeout+0xa4>)
 800ed56:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800ed58:	681a      	ldr	r2, [r3, #0]
 800ed5a:	9901      	ldr	r1, [sp, #4]
 800ed5c:	4290      	cmp	r0, r2
 800ed5e:	bf88      	it	hi
 800ed60:	6018      	strhi	r0, [r3, #0]
 800ed62:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800ed66:	eb05 0080 	add.w	r0, r5, r0, lsl #2
	}
 800ed6a:	b003      	add	sp, #12
 800ed6c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 800ed70:	f7fd bf5e 	b.w	800cc30 <vListInsertEnd>
 800ed74:	4770      	bx	lr
 800ed76:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ed7a:	f383 8811 	msr	BASEPRI, r3
 800ed7e:	f3bf 8f6f 	isb	sy
 800ed82:	f3bf 8f4f 	dsb	sy
					configASSERT( pxTCB != pxCurrentTCB );
 800ed86:	e7fe      	b.n	800ed86 <vTaskPriorityDisinheritAfterTimeout+0x9a>
 800ed88:	20013188 	.word	0x20013188
 800ed8c:	20013194 	.word	0x20013194
 800ed90:	20013604 	.word	0x20013604

0800ed94 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800ed94:	4b04      	ldr	r3, [pc, #16]	; (800eda8 <pvTaskIncrementMutexHeldCount+0x14>)
 800ed96:	681a      	ldr	r2, [r3, #0]
 800ed98:	b11a      	cbz	r2, 800eda2 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800ed9a:	6819      	ldr	r1, [r3, #0]
 800ed9c:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 800ed9e:	3201      	adds	r2, #1
 800eda0:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 800eda2:	6818      	ldr	r0, [r3, #0]
	}
 800eda4:	4770      	bx	lr
 800eda6:	bf00      	nop
 800eda8:	20013188 	.word	0x20013188

0800edac <prvSwitchTimerLists>:
	}
}
/*-----------------------------------------------------------*/

static void prvSwitchTimerLists( void )
{
 800edac:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800edb0:	4e22      	ldr	r6, [pc, #136]	; (800ee3c <prvSwitchTimerLists+0x90>)
	if( xTimerQueue != NULL )
 800edb2:	f8df 9090 	ldr.w	r9, [pc, #144]	; 800ee44 <prvSwitchTimerLists+0x98>
{
 800edb6:	b085      	sub	sp, #20
		xMessage.xMessageID = xCommandID;
 800edb8:	f04f 0800 	mov.w	r8, #0

	/* The tick count has overflowed.  The timer lists must be switched.
	If there are any timers still referenced from the current timer list
	then they must have expired and should be processed before the lists
	are switched. */
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800edbc:	e00d      	b.n	800edda <prvSwitchTimerLists+0x2e>
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800edbe:	68db      	ldr	r3, [r3, #12]

		/* Remove the timer from the list. */
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800edc0:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800edc2:	681f      	ldr	r7, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800edc4:	1d25      	adds	r5, r4, #4
 800edc6:	4628      	mov	r0, r5
 800edc8:	f7fd ff5a 	bl	800cc80 <uxListRemove>
		traceTIMER_EXPIRED( pxTimer );

		/* Execute its callback, then send a command to restart the timer if
		it is an auto-reload timer.  It cannot be restarted here as the lists
		have not yet been switched. */
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800edcc:	6a23      	ldr	r3, [r4, #32]
 800edce:	4620      	mov	r0, r4
 800edd0:	4798      	blx	r3

		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800edd2:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800edd6:	075b      	lsls	r3, r3, #29
 800edd8:	d40a      	bmi.n	800edf0 <prvSwitchTimerLists+0x44>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800edda:	6833      	ldr	r3, [r6, #0]
 800eddc:	681a      	ldr	r2, [r3, #0]
 800edde:	2a00      	cmp	r2, #0
 800ede0:	d1ed      	bne.n	800edbe <prvSwitchTimerLists+0x12>
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxTemp = pxCurrentTimerList;
	pxCurrentTimerList = pxOverflowTimerList;
 800ede2:	4a17      	ldr	r2, [pc, #92]	; (800ee40 <prvSwitchTimerLists+0x94>)
 800ede4:	6811      	ldr	r1, [r2, #0]
 800ede6:	6031      	str	r1, [r6, #0]
	pxOverflowTimerList = pxTemp;
 800ede8:	6013      	str	r3, [r2, #0]
}
 800edea:	b005      	add	sp, #20
 800edec:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800edf0:	69a3      	ldr	r3, [r4, #24]
 800edf2:	443b      	add	r3, r7
			if( xReloadTime > xNextExpireTime )
 800edf4:	429f      	cmp	r7, r3
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800edf6:	4629      	mov	r1, r5
			if( xReloadTime > xNextExpireTime )
 800edf8:	d205      	bcs.n	800ee06 <prvSwitchTimerLists+0x5a>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800edfa:	6830      	ldr	r0, [r6, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800edfc:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800edfe:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800ee00:	f7fd ff26 	bl	800cc50 <vListInsert>
 800ee04:	e7e9      	b.n	800edda <prvSwitchTimerLists+0x2e>
	if( xTimerQueue != NULL )
 800ee06:	f8d9 3000 	ldr.w	r3, [r9]
 800ee0a:	b16b      	cbz	r3, 800ee28 <prvSwitchTimerLists+0x7c>
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800ee0c:	e9cd 8700 	strd	r8, r7, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800ee10:	9402      	str	r4, [sp, #8]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800ee12:	f7ff fecf 	bl	800ebb4 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800ee16:	2300      	movs	r3, #0
 800ee18:	f8d9 0000 	ldr.w	r0, [r9]
 800ee1c:	461a      	mov	r2, r3
 800ee1e:	4669      	mov	r1, sp
 800ee20:	f7fe fa9c 	bl	800d35c <xQueueGenericSend>
				configASSERT( xResult );
 800ee24:	2800      	cmp	r0, #0
 800ee26:	d1d8      	bne.n	800edda <prvSwitchTimerLists+0x2e>
 800ee28:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ee2c:	f383 8811 	msr	BASEPRI, r3
 800ee30:	f3bf 8f6f 	isb	sy
 800ee34:	f3bf 8f4f 	dsb	sy
 800ee38:	e7fe      	b.n	800ee38 <prvSwitchTimerLists+0x8c>
 800ee3a:	bf00      	nop
 800ee3c:	20013684 	.word	0x20013684
 800ee40:	20013688 	.word	0x20013688
 800ee44:	200137a8 	.word	0x200137a8

0800ee48 <prvTimerTask>:
{
 800ee48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ee4c:	4e9b      	ldr	r6, [pc, #620]	; (800f0bc <prvTimerTask+0x274>)
 800ee4e:	4d9c      	ldr	r5, [pc, #624]	; (800f0c0 <prvTimerTask+0x278>)
 800ee50:	4c9c      	ldr	r4, [pc, #624]	; (800f0c4 <prvTimerTask+0x27c>)
 800ee52:	b08b      	sub	sp, #44	; 0x2c
					portYIELD_WITHIN_API();
 800ee54:	f04f 29e0 	mov.w	r9, #3758153728	; 0xe000e000
 800ee58:	f04f 5880 	mov.w	r8, #268435456	; 0x10000000
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800ee5c:	6833      	ldr	r3, [r6, #0]
 800ee5e:	681f      	ldr	r7, [r3, #0]
 800ee60:	2f00      	cmp	r7, #0
 800ee62:	f000 80a8 	beq.w	800efb6 <prvTimerTask+0x16e>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800ee66:	68db      	ldr	r3, [r3, #12]
 800ee68:	681f      	ldr	r7, [r3, #0]
	vTaskSuspendAll();
 800ee6a:	f7ff fcf9 	bl	800e860 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 800ee6e:	f7ff fd0f 	bl	800e890 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800ee72:	682a      	ldr	r2, [r5, #0]
 800ee74:	4290      	cmp	r0, r2
	xTimeNow = xTaskGetTickCount();
 800ee76:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800ee78:	f0c0 80ae 	bcc.w	800efd8 <prvTimerTask+0x190>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800ee7c:	4287      	cmp	r7, r0
	xLastTime = xTimeNow;
 800ee7e:	6028      	str	r0, [r5, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800ee80:	f240 80b4 	bls.w	800efec <prvTimerTask+0x1a4>
 800ee84:	2200      	movs	r2, #0
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800ee86:	6820      	ldr	r0, [r4, #0]
 800ee88:	eba7 010a 	sub.w	r1, r7, sl
 800ee8c:	f7ff f89a 	bl	800dfc4 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800ee90:	f7ff fcee 	bl	800e870 <xTaskResumeAll>
 800ee94:	b928      	cbnz	r0, 800eea2 <prvTimerTask+0x5a>
					portYIELD_WITHIN_API();
 800ee96:	f8c9 8d04 	str.w	r8, [r9, #3332]	; 0xd04
 800ee9a:	f3bf 8f4f 	dsb	sy
 800ee9e:	f3bf 8f6f 	isb	sy
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800eea2:	6820      	ldr	r0, [r4, #0]
 800eea4:	2200      	movs	r2, #0
 800eea6:	a902      	add	r1, sp, #8
 800eea8:	f7fe fc94 	bl	800d7d4 <xQueueReceive>
 800eeac:	2800      	cmp	r0, #0
 800eeae:	d0d5      	beq.n	800ee5c <prvTimerTask+0x14>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800eeb0:	9b02      	ldr	r3, [sp, #8]
 800eeb2:	2b00      	cmp	r3, #0
 800eeb4:	db76      	blt.n	800efa4 <prvTimerTask+0x15c>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800eeb6:	9f04      	ldr	r7, [sp, #16]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800eeb8:	697b      	ldr	r3, [r7, #20]
 800eeba:	b113      	cbz	r3, 800eec2 <prvTimerTask+0x7a>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800eebc:	1d38      	adds	r0, r7, #4
 800eebe:	f7fd fedf 	bl	800cc80 <uxListRemove>
	xTimeNow = xTaskGetTickCount();
 800eec2:	f7ff fce5 	bl	800e890 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800eec6:	682b      	ldr	r3, [r5, #0]
 800eec8:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 800eeca:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800eecc:	f0c0 808b 	bcc.w	800efe6 <prvTimerTask+0x19e>
			switch( xMessage.xMessageID )
 800eed0:	9b02      	ldr	r3, [sp, #8]
	xLastTime = xTimeNow;
 800eed2:	f8c5 a000 	str.w	sl, [r5]
			switch( xMessage.xMessageID )
 800eed6:	2b09      	cmp	r3, #9
 800eed8:	d8e3      	bhi.n	800eea2 <prvTimerTask+0x5a>
 800eeda:	e8df f003 	tbb	[pc, r3]
 800eede:	0505      	.short	0x0505
 800eee0:	5a3d5305 	.word	0x5a3d5305
 800eee4:	3d530505 	.word	0x3d530505
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800eee8:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800eeec:	69ba      	ldr	r2, [r7, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800eeee:	613f      	str	r7, [r7, #16]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800eef0:	f043 0301 	orr.w	r3, r3, #1
 800eef4:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800eef8:	9b03      	ldr	r3, [sp, #12]
 800eefa:	1899      	adds	r1, r3, r2
 800eefc:	bf2c      	ite	cs
 800eefe:	2001      	movcs	r0, #1
 800ef00:	2000      	movcc	r0, #0
	if( xNextExpiryTime <= xTimeNow )
 800ef02:	4551      	cmp	r1, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800ef04:	6079      	str	r1, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
 800ef06:	f200 808c 	bhi.w	800f022 <prvTimerTask+0x1da>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800ef0a:	ebaa 0303 	sub.w	r3, sl, r3
 800ef0e:	429a      	cmp	r2, r3
 800ef10:	d832      	bhi.n	800ef78 <prvTimerTask+0x130>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800ef12:	6a3b      	ldr	r3, [r7, #32]
 800ef14:	4638      	mov	r0, r7
 800ef16:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800ef18:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800ef1c:	075b      	lsls	r3, r3, #29
 800ef1e:	d5c0      	bpl.n	800eea2 <prvTimerTask+0x5a>
	if( xTimerQueue != NULL )
 800ef20:	6822      	ldr	r2, [r4, #0]
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800ef22:	9903      	ldr	r1, [sp, #12]
 800ef24:	69bb      	ldr	r3, [r7, #24]
	if( xTimerQueue != NULL )
 800ef26:	b172      	cbz	r2, 800ef46 <prvTimerTask+0xfe>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800ef28:	440b      	add	r3, r1
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800ef2a:	e9cd 3707 	strd	r3, r7, [sp, #28]
		xMessage.xMessageID = xCommandID;
 800ef2e:	2300      	movs	r3, #0
 800ef30:	9306      	str	r3, [sp, #24]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800ef32:	f7ff fe3f 	bl	800ebb4 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800ef36:	2300      	movs	r3, #0
 800ef38:	6820      	ldr	r0, [r4, #0]
 800ef3a:	461a      	mov	r2, r3
 800ef3c:	a906      	add	r1, sp, #24
 800ef3e:	f7fe fa0d 	bl	800d35c <xQueueGenericSend>
							configASSERT( xResult );
 800ef42:	2800      	cmp	r0, #0
 800ef44:	d1ad      	bne.n	800eea2 <prvTimerTask+0x5a>
 800ef46:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ef4a:	f383 8811 	msr	BASEPRI, r3
 800ef4e:	f3bf 8f6f 	isb	sy
 800ef52:	f3bf 8f4f 	dsb	sy
 800ef56:	e7fe      	b.n	800ef56 <prvTimerTask+0x10e>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800ef58:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800ef5c:	f043 0301 	orr.w	r3, r3, #1
 800ef60:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800ef64:	9b03      	ldr	r3, [sp, #12]
 800ef66:	61bb      	str	r3, [r7, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800ef68:	2b00      	cmp	r3, #0
 800ef6a:	f000 809d 	beq.w	800f0a8 <prvTimerTask+0x260>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800ef6e:	4453      	add	r3, sl
	if( xNextExpiryTime <= xTimeNow )
 800ef70:	4553      	cmp	r3, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800ef72:	607b      	str	r3, [r7, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800ef74:	613f      	str	r7, [r7, #16]
	if( xNextExpiryTime <= xTimeNow )
 800ef76:	d85e      	bhi.n	800f036 <prvTimerTask+0x1ee>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800ef78:	4b53      	ldr	r3, [pc, #332]	; (800f0c8 <prvTimerTask+0x280>)
 800ef7a:	1d39      	adds	r1, r7, #4
 800ef7c:	6818      	ldr	r0, [r3, #0]
 800ef7e:	f7fd fe67 	bl	800cc50 <vListInsert>
	return xProcessTimerNow;
 800ef82:	e78e      	b.n	800eea2 <prvTimerTask+0x5a>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800ef84:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800ef88:	f023 0301 	bic.w	r3, r3, #1
 800ef8c:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					break;
 800ef90:	e787      	b.n	800eea2 <prvTimerTask+0x5a>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800ef92:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800ef96:	079a      	lsls	r2, r3, #30
 800ef98:	d552      	bpl.n	800f040 <prvTimerTask+0x1f8>
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800ef9a:	f023 0301 	bic.w	r3, r3, #1
 800ef9e:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
 800efa2:	e77e      	b.n	800eea2 <prvTimerTask+0x5a>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800efa4:	9b03      	ldr	r3, [sp, #12]
 800efa6:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800efaa:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800efac:	9b02      	ldr	r3, [sp, #8]
 800efae:	2b00      	cmp	r3, #0
 800efb0:	f6ff af77 	blt.w	800eea2 <prvTimerTask+0x5a>
 800efb4:	e77f      	b.n	800eeb6 <prvTimerTask+0x6e>
	vTaskSuspendAll();
 800efb6:	f7ff fc53 	bl	800e860 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 800efba:	f7ff fc69 	bl	800e890 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800efbe:	682a      	ldr	r2, [r5, #0]
 800efc0:	4282      	cmp	r2, r0
	xTimeNow = xTaskGetTickCount();
 800efc2:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800efc4:	d808      	bhi.n	800efd8 <prvTimerTask+0x190>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800efc6:	4b40      	ldr	r3, [pc, #256]	; (800f0c8 <prvTimerTask+0x280>)
	xLastTime = xTimeNow;
 800efc8:	f8c5 a000 	str.w	sl, [r5]
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800efcc:	681a      	ldr	r2, [r3, #0]
 800efce:	6812      	ldr	r2, [r2, #0]
 800efd0:	fab2 f282 	clz	r2, r2
 800efd4:	0952      	lsrs	r2, r2, #5
 800efd6:	e756      	b.n	800ee86 <prvTimerTask+0x3e>
		prvSwitchTimerLists();
 800efd8:	f7ff fee8 	bl	800edac <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 800efdc:	f8c5 a000 	str.w	sl, [r5]
			( void ) xTaskResumeAll();
 800efe0:	f7ff fc46 	bl	800e870 <xTaskResumeAll>
 800efe4:	e75d      	b.n	800eea2 <prvTimerTask+0x5a>
		prvSwitchTimerLists();
 800efe6:	f7ff fee1 	bl	800edac <prvSwitchTimerLists>
		*pxTimerListsWereSwitched = pdTRUE;
 800efea:	e771      	b.n	800eed0 <prvTimerTask+0x88>
				( void ) xTaskResumeAll();
 800efec:	f7ff fc40 	bl	800e870 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800eff0:	6832      	ldr	r2, [r6, #0]
 800eff2:	68d2      	ldr	r2, [r2, #12]
 800eff4:	f8d2 b00c 	ldr.w	fp, [r2, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800eff8:	f10b 0104 	add.w	r1, fp, #4
 800effc:	4608      	mov	r0, r1
 800effe:	9101      	str	r1, [sp, #4]
 800f000:	f7fd fe3e 	bl	800cc80 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800f004:	f89b 0028 	ldrb.w	r0, [fp, #40]	; 0x28
 800f008:	9901      	ldr	r1, [sp, #4]
 800f00a:	f010 0f04 	tst.w	r0, #4
 800f00e:	d11b      	bne.n	800f048 <prvTimerTask+0x200>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800f010:	f020 0001 	bic.w	r0, r0, #1
 800f014:	f88b 0028 	strb.w	r0, [fp, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800f018:	f8db 3020 	ldr.w	r3, [fp, #32]
 800f01c:	4658      	mov	r0, fp
 800f01e:	4798      	blx	r3
}
 800f020:	e73f      	b.n	800eea2 <prvTimerTask+0x5a>
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800f022:	4553      	cmp	r3, sl
 800f024:	d902      	bls.n	800f02c <prvTimerTask+0x1e4>
 800f026:	2800      	cmp	r0, #0
 800f028:	f43f af73 	beq.w	800ef12 <prvTimerTask+0xca>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f02c:	6830      	ldr	r0, [r6, #0]
 800f02e:	1d39      	adds	r1, r7, #4
 800f030:	f7fd fe0e 	bl	800cc50 <vListInsert>
	return xProcessTimerNow;
 800f034:	e735      	b.n	800eea2 <prvTimerTask+0x5a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f036:	6830      	ldr	r0, [r6, #0]
 800f038:	1d39      	adds	r1, r7, #4
 800f03a:	f7fd fe09 	bl	800cc50 <vListInsert>
 800f03e:	e730      	b.n	800eea2 <prvTimerTask+0x5a>
							vPortFree( pxTimer );
 800f040:	4638      	mov	r0, r7
 800f042:	f7fd fd81 	bl	800cb48 <vPortFree>
 800f046:	e72c      	b.n	800eea2 <prvTimerTask+0x5a>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800f048:	f8db 2018 	ldr.w	r2, [fp, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800f04c:	f8cb b010 	str.w	fp, [fp, #16]
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800f050:	18b8      	adds	r0, r7, r2
	if( xNextExpiryTime <= xTimeNow )
 800f052:	4550      	cmp	r0, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800f054:	f8cb 0004 	str.w	r0, [fp, #4]
	if( xNextExpiryTime <= xTimeNow )
 800f058:	d903      	bls.n	800f062 <prvTimerTask+0x21a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f05a:	6830      	ldr	r0, [r6, #0]
 800f05c:	f7fd fdf8 	bl	800cc50 <vListInsert>
	return xProcessTimerNow;
 800f060:	e7da      	b.n	800f018 <prvTimerTask+0x1d0>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f062:	ebaa 0307 	sub.w	r3, sl, r7
 800f066:	429a      	cmp	r2, r3
 800f068:	d819      	bhi.n	800f09e <prvTimerTask+0x256>
	if( xTimerQueue != NULL )
 800f06a:	6823      	ldr	r3, [r4, #0]
 800f06c:	b173      	cbz	r3, 800f08c <prvTimerTask+0x244>
		xMessage.xMessageID = xCommandID;
 800f06e:	2300      	movs	r3, #0
 800f070:	9306      	str	r3, [sp, #24]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800f072:	9707      	str	r7, [sp, #28]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800f074:	f8cd b020 	str.w	fp, [sp, #32]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800f078:	f7ff fd9c 	bl	800ebb4 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800f07c:	2300      	movs	r3, #0
 800f07e:	6820      	ldr	r0, [r4, #0]
 800f080:	461a      	mov	r2, r3
 800f082:	a906      	add	r1, sp, #24
 800f084:	f7fe f96a 	bl	800d35c <xQueueGenericSend>
			configASSERT( xResult );
 800f088:	2800      	cmp	r0, #0
 800f08a:	d1c5      	bne.n	800f018 <prvTimerTask+0x1d0>
 800f08c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f090:	f383 8811 	msr	BASEPRI, r3
 800f094:	f3bf 8f6f 	isb	sy
 800f098:	f3bf 8f4f 	dsb	sy
 800f09c:	e7fe      	b.n	800f09c <prvTimerTask+0x254>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800f09e:	4b0a      	ldr	r3, [pc, #40]	; (800f0c8 <prvTimerTask+0x280>)
 800f0a0:	6818      	ldr	r0, [r3, #0]
 800f0a2:	f7fd fdd5 	bl	800cc50 <vListInsert>
	return xProcessTimerNow;
 800f0a6:	e7b7      	b.n	800f018 <prvTimerTask+0x1d0>
 800f0a8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f0ac:	f383 8811 	msr	BASEPRI, r3
 800f0b0:	f3bf 8f6f 	isb	sy
 800f0b4:	f3bf 8f4f 	dsb	sy
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800f0b8:	e7fe      	b.n	800f0b8 <prvTimerTask+0x270>
 800f0ba:	bf00      	nop
 800f0bc:	20013684 	.word	0x20013684
 800f0c0:	20013754 	.word	0x20013754
 800f0c4:	200137a8 	.word	0x200137a8
 800f0c8:	20013688 	.word	0x20013688

0800f0cc <xTimerCreateTimerTask>:
{
 800f0cc:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 800f0ce:	4c23      	ldr	r4, [pc, #140]	; (800f15c <xTimerCreateTimerTask+0x90>)
{
 800f0d0:	b089      	sub	sp, #36	; 0x24
	taskENTER_CRITICAL();
 800f0d2:	f7fd fe4f 	bl	800cd74 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 800f0d6:	6825      	ldr	r5, [r4, #0]
 800f0d8:	b335      	cbz	r5, 800f128 <xTimerCreateTimerTask+0x5c>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
 800f0da:	f7fd fe6d 	bl	800cdb8 <vPortExitCritical>
	if( xTimerQueue != NULL )
 800f0de:	6823      	ldr	r3, [r4, #0]
 800f0e0:	b1cb      	cbz	r3, 800f116 <xTimerCreateTimerTask+0x4a>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800f0e2:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800f0e4:	aa07      	add	r2, sp, #28
 800f0e6:	a906      	add	r1, sp, #24
 800f0e8:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 800f0ea:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800f0ee:	f7fd fc5f 	bl	800c9b0 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800f0f2:	e9dd 0105 	ldrd	r0, r1, [sp, #20]
 800f0f6:	2302      	movs	r3, #2
 800f0f8:	e9cd 1001 	strd	r1, r0, [sp, #4]
 800f0fc:	9300      	str	r3, [sp, #0]
 800f0fe:	9a07      	ldr	r2, [sp, #28]
 800f100:	4917      	ldr	r1, [pc, #92]	; (800f160 <xTimerCreateTimerTask+0x94>)
 800f102:	4818      	ldr	r0, [pc, #96]	; (800f164 <xTimerCreateTimerTask+0x98>)
 800f104:	4623      	mov	r3, r4
 800f106:	f7ff fa6d 	bl	800e5e4 <xTaskCreateStatic>
 800f10a:	4b17      	ldr	r3, [pc, #92]	; (800f168 <xTimerCreateTimerTask+0x9c>)
 800f10c:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 800f10e:	b110      	cbz	r0, 800f116 <xTimerCreateTimerTask+0x4a>
}
 800f110:	2001      	movs	r0, #1
 800f112:	b009      	add	sp, #36	; 0x24
 800f114:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f116:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f11a:	f383 8811 	msr	BASEPRI, r3
 800f11e:	f3bf 8f6f 	isb	sy
 800f122:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 800f126:	e7fe      	b.n	800f126 <xTimerCreateTimerTask+0x5a>
			vListInitialise( &xActiveTimerList1 );
 800f128:	4f10      	ldr	r7, [pc, #64]	; (800f16c <xTimerCreateTimerTask+0xa0>)
			vListInitialise( &xActiveTimerList2 );
 800f12a:	4e11      	ldr	r6, [pc, #68]	; (800f170 <xTimerCreateTimerTask+0xa4>)
			vListInitialise( &xActiveTimerList1 );
 800f12c:	4638      	mov	r0, r7
 800f12e:	f7fd fd6f 	bl	800cc10 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800f132:	4630      	mov	r0, r6
 800f134:	f7fd fd6c 	bl	800cc10 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 800f138:	4a0e      	ldr	r2, [pc, #56]	; (800f174 <xTimerCreateTimerTask+0xa8>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800f13a:	9500      	str	r5, [sp, #0]
			pxCurrentTimerList = &xActiveTimerList1;
 800f13c:	6017      	str	r7, [r2, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 800f13e:	4a0e      	ldr	r2, [pc, #56]	; (800f178 <xTimerCreateTimerTask+0xac>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800f140:	4b0e      	ldr	r3, [pc, #56]	; (800f17c <xTimerCreateTimerTask+0xb0>)
			pxOverflowTimerList = &xActiveTimerList2;
 800f142:	6016      	str	r6, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800f144:	2110      	movs	r1, #16
 800f146:	4a0e      	ldr	r2, [pc, #56]	; (800f180 <xTimerCreateTimerTask+0xb4>)
 800f148:	200a      	movs	r0, #10
 800f14a:	f7fd ffb1 	bl	800d0b0 <xQueueGenericCreateStatic>
 800f14e:	6020      	str	r0, [r4, #0]
				if( xTimerQueue != NULL )
 800f150:	2800      	cmp	r0, #0
 800f152:	d0c2      	beq.n	800f0da <xTimerCreateTimerTask+0xe>
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800f154:	490b      	ldr	r1, [pc, #44]	; (800f184 <xTimerCreateTimerTask+0xb8>)
 800f156:	f7fe ff0d 	bl	800df74 <vQueueAddToRegistry>
 800f15a:	e7be      	b.n	800f0da <xTimerCreateTimerTask+0xe>
 800f15c:	200137a8 	.word	0x200137a8
 800f160:	0802c22c 	.word	0x0802c22c
 800f164:	0800ee49 	.word	0x0800ee49
 800f168:	200137ac 	.word	0x200137ac
 800f16c:	2001372c 	.word	0x2001372c
 800f170:	20013740 	.word	0x20013740
 800f174:	20013684 	.word	0x20013684
 800f178:	20013688 	.word	0x20013688
 800f17c:	20013758 	.word	0x20013758
 800f180:	2001368c 	.word	0x2001368c
 800f184:	0802c224 	.word	0x0802c224

0800f188 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800f188:	8880      	ldrh	r0, [r0, #4]
 800f18a:	4770      	bx	lr

0800f18c <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800f18c:	b570      	push	{r4, r5, r6, lr}
 800f18e:	6803      	ldr	r3, [r0, #0]
 800f190:	4605      	mov	r5, r0
 800f192:	460c      	mov	r4, r1
 800f194:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f196:	2100      	movs	r1, #0
 800f198:	4798      	blx	r3
 800f19a:	682b      	ldr	r3, [r5, #0]
 800f19c:	4606      	mov	r6, r0
 800f19e:	6a1b      	ldr	r3, [r3, #32]
 800f1a0:	4628      	mov	r0, r5
 800f1a2:	4798      	blx	r3
 800f1a4:	1ba4      	subs	r4, r4, r6
 800f1a6:	b2a4      	uxth	r4, r4
 800f1a8:	fbb4 f0f0 	udiv	r0, r4, r0
 800f1ac:	bd70      	pop	{r4, r5, r6, pc}

0800f1ae <_ZN8touchgfx17AbstractPartition5clearEv>:
 800f1ae:	2300      	movs	r3, #0
 800f1b0:	8083      	strh	r3, [r0, #4]
 800f1b2:	4770      	bx	lr

0800f1b4 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800f1b4:	b510      	push	{r4, lr}
 800f1b6:	6803      	ldr	r3, [r0, #0]
 800f1b8:	8881      	ldrh	r1, [r0, #4]
 800f1ba:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f1bc:	4604      	mov	r4, r0
 800f1be:	4798      	blx	r3
 800f1c0:	88a3      	ldrh	r3, [r4, #4]
 800f1c2:	3301      	adds	r3, #1
 800f1c4:	80a3      	strh	r3, [r4, #4]
 800f1c6:	bd10      	pop	{r4, pc}

0800f1c8 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800f1c8:	6803      	ldr	r3, [r0, #0]
 800f1ca:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f1cc:	4718      	bx	r3

0800f1ce <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800f1ce:	4770      	bx	lr

0800f1d0 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800f1d0:	4a02      	ldr	r2, [pc, #8]	; (800f1dc <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800f1d2:	6002      	str	r2, [r0, #0]
 800f1d4:	2200      	movs	r2, #0
 800f1d6:	8082      	strh	r2, [r0, #4]
 800f1d8:	4770      	bx	lr
 800f1da:	bf00      	nop
 800f1dc:	0802c23c 	.word	0x0802c23c

0800f1e0 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv>:
 800f1e0:	b510      	push	{r4, lr}
 800f1e2:	6803      	ldr	r3, [r0, #0]
 800f1e4:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800f1e8:	4604      	mov	r4, r0
 800f1ea:	4798      	blx	r3
 800f1ec:	b110      	cbz	r0, 800f1f4 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv+0x14>
 800f1ee:	4620      	mov	r0, r4
 800f1f0:	f7f2 f840 	bl	8001274 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 800f1f4:	bd10      	pop	{r4, pc}

0800f1f6 <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorXEv>:
 800f1f6:	f9b0 005c 	ldrsh.w	r0, [r0, #92]	; 0x5c
 800f1fa:	4770      	bx	lr

0800f1fc <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorYEv>:
 800f1fc:	f9b0 005e 	ldrsh.w	r0, [r0, #94]	; 0x5e
 800f200:	4770      	bx	lr

0800f202 <_ZNK8touchgfx25AbstractProgressIndicator25getProgressIndicatorWidthEv>:
 800f202:	f9b0 0060 	ldrsh.w	r0, [r0, #96]	; 0x60
 800f206:	4770      	bx	lr

0800f208 <_ZNK8touchgfx25AbstractProgressIndicator26getProgressIndicatorHeightEv>:
 800f208:	f9b0 0062 	ldrsh.w	r0, [r0, #98]	; 0x62
 800f20c:	4770      	bx	lr

0800f20e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>:
 800f20e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f210:	e9c0 1221 	strd	r1, r2, [r0, #132]	; 0x84
 800f214:	461e      	mov	r6, r3
 800f216:	6803      	ldr	r3, [r0, #0]
 800f218:	460f      	mov	r7, r1
 800f21a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800f21e:	f8d0 108c 	ldr.w	r1, [r0, #140]	; 0x8c
 800f222:	4604      	mov	r4, r0
 800f224:	4615      	mov	r5, r2
 800f226:	4798      	blx	r3
 800f228:	b93e      	cbnz	r6, 800f23a <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x2c>
 800f22a:	1bed      	subs	r5, r5, r7
 800f22c:	f8a4 5090 	strh.w	r5, [r4, #144]	; 0x90
 800f230:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 800f234:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 800f238:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f23a:	f8a4 6090 	strh.w	r6, [r4, #144]	; 0x90
 800f23e:	e7f7      	b.n	800f230 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x22>

0800f240 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_RtS2_>:
 800f240:	b510      	push	{r4, lr}
 800f242:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 800f246:	600c      	str	r4, [r1, #0]
 800f248:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800f24c:	6011      	str	r1, [r2, #0]
 800f24e:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 800f252:	801a      	strh	r2, [r3, #0]
 800f254:	9b02      	ldr	r3, [sp, #8]
 800f256:	f8b0 2092 	ldrh.w	r2, [r0, #146]	; 0x92
 800f25a:	801a      	strh	r2, [r3, #0]
 800f25c:	bd10      	pop	{r4, pc}

0800f25e <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_Rt>:
 800f25e:	b510      	push	{r4, lr}
 800f260:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 800f264:	600c      	str	r4, [r1, #0]
 800f266:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800f26a:	6011      	str	r1, [r2, #0]
 800f26c:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 800f270:	801a      	strh	r2, [r3, #0]
 800f272:	bd10      	pop	{r4, pc}

0800f274 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_>:
 800f274:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 800f278:	600b      	str	r3, [r1, #0]
 800f27a:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 800f27e:	6013      	str	r3, [r2, #0]
 800f280:	4770      	bx	lr

0800f282 <_ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE>:
 800f282:	f8c0 1094 	str.w	r1, [r0, #148]	; 0x94
 800f286:	4770      	bx	lr

0800f288 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>:
 800f288:	f8d0 008c 	ldr.w	r0, [r0, #140]	; 0x8c
 800f28c:	4770      	bx	lr

0800f28e <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>:
 800f28e:	f880 1054 	strb.w	r1, [r0, #84]	; 0x54
 800f292:	4770      	bx	lr

0800f294 <_ZNK8touchgfx25AbstractProgressIndicator8getAlphaEv>:
 800f294:	f890 0054 	ldrb.w	r0, [r0, #84]	; 0x54
 800f298:	4770      	bx	lr

0800f29a <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>:
 800f29a:	4770      	bx	lr

0800f29c <_ZN8touchgfx25AbstractProgressIndicatorD0Ev>:
 800f29c:	b510      	push	{r4, lr}
 800f29e:	21b4      	movs	r1, #180	; 0xb4
 800f2a0:	4604      	mov	r4, r0
 800f2a2:	f018 f96c 	bl	802757e <_ZdlPvj>
 800f2a6:	4620      	mov	r0, r4
 800f2a8:	bd10      	pop	{r4, pc}

0800f2aa <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>:
 800f2aa:	b570      	push	{r4, r5, r6, lr}
 800f2ac:	f8d0 5084 	ldr.w	r5, [r0, #132]	; 0x84
 800f2b0:	428d      	cmp	r5, r1
 800f2b2:	bfb8      	it	lt
 800f2b4:	460d      	movlt	r5, r1
 800f2b6:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800f2ba:	428d      	cmp	r5, r1
 800f2bc:	4604      	mov	r4, r0
 800f2be:	bfa8      	it	ge
 800f2c0:	460d      	movge	r5, r1
 800f2c2:	4616      	mov	r6, r2
 800f2c4:	b99a      	cbnz	r2, 800f2ee <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x44>
 800f2c6:	6803      	ldr	r3, [r0, #0]
 800f2c8:	4629      	mov	r1, r5
 800f2ca:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800f2ce:	4798      	blx	r3
 800f2d0:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800f2d4:	b368      	cbz	r0, 800f332 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 800f2d6:	6803      	ldr	r3, [r0, #0]
 800f2d8:	68db      	ldr	r3, [r3, #12]
 800f2da:	4798      	blx	r3
 800f2dc:	b348      	cbz	r0, 800f332 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 800f2de:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800f2e2:	6803      	ldr	r3, [r0, #0]
 800f2e4:	4621      	mov	r1, r4
 800f2e6:	689b      	ldr	r3, [r3, #8]
 800f2e8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f2ec:	4718      	bx	r3
 800f2ee:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800f2f2:	2b00      	cmp	r3, #0
 800f2f4:	dd08      	ble.n	800f308 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x5e>
 800f2f6:	f005 fbe3 	bl	8014ac0 <_ZN8touchgfx11Application11getInstanceEv>
 800f2fa:	4621      	mov	r1, r4
 800f2fc:	3004      	adds	r0, #4
 800f2fe:	f005 fc2c 	bl	8014b5a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 800f302:	2300      	movs	r3, #0
 800f304:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 800f308:	6823      	ldr	r3, [r4, #0]
 800f30a:	4620      	mov	r0, r4
 800f30c:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800f310:	4798      	blx	r3
 800f312:	2300      	movs	r3, #0
 800f314:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 800f318:	e9c4 0527 	strd	r0, r5, [r4, #156]	; 0x9c
 800f31c:	f8c4 60a4 	str.w	r6, [r4, #164]	; 0xa4
 800f320:	f005 fbce 	bl	8014ac0 <_ZN8touchgfx11Application11getInstanceEv>
 800f324:	4621      	mov	r1, r4
 800f326:	3004      	adds	r0, #4
 800f328:	f005 fcc0 	bl	8014cac <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 800f32c:	2301      	movs	r3, #1
 800f32e:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 800f332:	bd70      	pop	{r4, r5, r6, pc}

0800f334 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>:
 800f334:	b510      	push	{r4, lr}
 800f336:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 800f33a:	4299      	cmp	r1, r3
 800f33c:	bfb8      	it	lt
 800f33e:	4619      	movlt	r1, r3
 800f340:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 800f344:	4299      	cmp	r1, r3
 800f346:	bfa8      	it	ge
 800f348:	4619      	movge	r1, r3
 800f34a:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 800f34e:	428b      	cmp	r3, r1
 800f350:	4604      	mov	r4, r0
 800f352:	d010      	beq.n	800f376 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800f354:	f8c0 108c 	str.w	r1, [r0, #140]	; 0x8c
 800f358:	f8d0 00ac 	ldr.w	r0, [r0, #172]	; 0xac
 800f35c:	b158      	cbz	r0, 800f376 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800f35e:	6803      	ldr	r3, [r0, #0]
 800f360:	68db      	ldr	r3, [r3, #12]
 800f362:	4798      	blx	r3
 800f364:	b138      	cbz	r0, 800f376 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800f366:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
 800f36a:	6803      	ldr	r3, [r0, #0]
 800f36c:	4621      	mov	r1, r4
 800f36e:	689b      	ldr	r3, [r3, #8]
 800f370:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f374:	4718      	bx	r3
 800f376:	bd10      	pop	{r4, pc}

0800f378 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>:
 800f378:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f37a:	4604      	mov	r4, r0
 800f37c:	460d      	mov	r5, r1
 800f37e:	b1a9      	cbz	r1, 800f3ac <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt+0x34>
 800f380:	f8b0 6092 	ldrh.w	r6, [r0, #146]	; 0x92
 800f384:	f8b4 1090 	ldrh.w	r1, [r4, #144]	; 0x90
 800f388:	f8d4 708c 	ldr.w	r7, [r4, #140]	; 0x8c
 800f38c:	e9d0 0221 	ldrd	r0, r2, [r0, #132]	; 0x84
 800f390:	ab01      	add	r3, sp, #4
 800f392:	1a12      	subs	r2, r2, r0
 800f394:	1b89      	subs	r1, r1, r6
 800f396:	1a38      	subs	r0, r7, r0
 800f398:	f006 fe48 	bl	801602c <_ZN8touchgfx6muldivElllRl>
 800f39c:	4629      	mov	r1, r5
 800f39e:	ab01      	add	r3, sp, #4
 800f3a0:	f8b4 2090 	ldrh.w	r2, [r4, #144]	; 0x90
 800f3a4:	4430      	add	r0, r6
 800f3a6:	f006 fe41 	bl	801602c <_ZN8touchgfx6muldivElllRl>
 800f3aa:	b285      	uxth	r5, r0
 800f3ac:	4628      	mov	r0, r5
 800f3ae:	b003      	add	sp, #12
 800f3b0:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800f3b2 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv>:
 800f3b2:	b570      	push	{r4, r5, r6, lr}
 800f3b4:	f890 3098 	ldrb.w	r3, [r0, #152]	; 0x98
 800f3b8:	4604      	mov	r4, r0
 800f3ba:	2b00      	cmp	r3, #0
 800f3bc:	d035      	beq.n	800f42a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800f3be:	e9d4 3227 	ldrd	r3, r2, [r4, #156]	; 0x9c
 800f3c2:	f8d0 00a8 	ldr.w	r0, [r0, #168]	; 0xa8
 800f3c6:	f8d4 5094 	ldr.w	r5, [r4, #148]	; 0x94
 800f3ca:	3001      	adds	r0, #1
 800f3cc:	1ad2      	subs	r2, r2, r3
 800f3ce:	b212      	sxth	r2, r2
 800f3d0:	f8c4 00a8 	str.w	r0, [r4, #168]	; 0xa8
 800f3d4:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 800f3d8:	2100      	movs	r1, #0
 800f3da:	b280      	uxth	r0, r0
 800f3dc:	47a8      	blx	r5
 800f3de:	f8d4 109c 	ldr.w	r1, [r4, #156]	; 0x9c
 800f3e2:	6823      	ldr	r3, [r4, #0]
 800f3e4:	4401      	add	r1, r0
 800f3e6:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800f3ea:	4620      	mov	r0, r4
 800f3ec:	4798      	blx	r3
 800f3ee:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 800f3f2:	429a      	cmp	r2, r3
 800f3f4:	db19      	blt.n	800f42a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800f3f6:	2500      	movs	r5, #0
 800f3f8:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 800f3fc:	f005 fb60 	bl	8014ac0 <_ZN8touchgfx11Application11getInstanceEv>
 800f400:	4621      	mov	r1, r4
 800f402:	3004      	adds	r0, #4
 800f404:	f005 fba9 	bl	8014b5a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 800f408:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800f40c:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 800f410:	b158      	cbz	r0, 800f42a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800f412:	6803      	ldr	r3, [r0, #0]
 800f414:	68db      	ldr	r3, [r3, #12]
 800f416:	4798      	blx	r3
 800f418:	b138      	cbz	r0, 800f42a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800f41a:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800f41e:	6803      	ldr	r3, [r0, #0]
 800f420:	4621      	mov	r1, r4
 800f422:	689b      	ldr	r3, [r3, #8]
 800f424:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f428:	4718      	bx	r3
 800f42a:	bd70      	pop	{r4, r5, r6, pc}

0800f42c <_ZN8touchgfx8DrawableC1Ev>:
 800f42c:	4a0a      	ldr	r2, [pc, #40]	; (800f458 <_ZN8touchgfx8DrawableC1Ev+0x2c>)
 800f42e:	6002      	str	r2, [r0, #0]
 800f430:	2200      	movs	r2, #0
 800f432:	8082      	strh	r2, [r0, #4]
 800f434:	80c2      	strh	r2, [r0, #6]
 800f436:	8102      	strh	r2, [r0, #8]
 800f438:	8142      	strh	r2, [r0, #10]
 800f43a:	8182      	strh	r2, [r0, #12]
 800f43c:	81c2      	strh	r2, [r0, #14]
 800f43e:	8202      	strh	r2, [r0, #16]
 800f440:	8242      	strh	r2, [r0, #18]
 800f442:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800f446:	61c2      	str	r2, [r0, #28]
 800f448:	8402      	strh	r2, [r0, #32]
 800f44a:	8442      	strh	r2, [r0, #34]	; 0x22
 800f44c:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800f450:	2201      	movs	r2, #1
 800f452:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 800f456:	4770      	bx	lr
 800f458:	0802c9dc 	.word	0x0802c9dc

0800f45c <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800f45c:	b570      	push	{r4, r5, r6, lr}
 800f45e:	6803      	ldr	r3, [r0, #0]
 800f460:	4604      	mov	r4, r0
 800f462:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800f464:	4615      	mov	r5, r2
 800f466:	4798      	blx	r3
 800f468:	6823      	ldr	r3, [r4, #0]
 800f46a:	4629      	mov	r1, r5
 800f46c:	4620      	mov	r0, r4
 800f46e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800f470:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f474:	4718      	bx	r3

0800f476 <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>:
 800f476:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f47a:	4604      	mov	r4, r0
 800f47c:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
 800f480:	f8a4 105c 	strh.w	r1, [r4, #92]	; 0x5c
 800f484:	460e      	mov	r6, r1
 800f486:	4615      	mov	r5, r2
 800f488:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 800f48c:	4619      	mov	r1, r3
 800f48e:	463a      	mov	r2, r7
 800f490:	3058      	adds	r0, #88	; 0x58
 800f492:	4698      	mov	r8, r3
 800f494:	f7ff ffe2 	bl	800f45c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800f498:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800f49c:	4446      	add	r6, r8
 800f49e:	42b3      	cmp	r3, r6
 800f4a0:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800f4a4:	bfb8      	it	lt
 800f4a6:	8126      	strhlt	r6, [r4, #8]
 800f4a8:	443d      	add	r5, r7
 800f4aa:	42ab      	cmp	r3, r5
 800f4ac:	bfb8      	it	lt
 800f4ae:	8165      	strhlt	r5, [r4, #10]
 800f4b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800f4b4 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>:
 800f4b4:	b510      	push	{r4, lr}
 800f4b6:	4604      	mov	r4, r0
 800f4b8:	302c      	adds	r0, #44	; 0x2c
 800f4ba:	f002 fdf8 	bl	80120ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800f4be:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 800f4c2:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 800f4c6:	4620      	mov	r0, r4
 800f4c8:	f7ff ffc8 	bl	800f45c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800f4cc:	bd10      	pop	{r4, pc}
	...

0800f4d0 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>:
 800f4d0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f4d2:	4604      	mov	r4, r0
 800f4d4:	4626      	mov	r6, r4
 800f4d6:	2500      	movs	r5, #0
 800f4d8:	f7ff ffa8 	bl	800f42c <_ZN8touchgfx8DrawableC1Ev>
 800f4dc:	4b23      	ldr	r3, [pc, #140]	; (800f56c <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0x9c>)
 800f4de:	62a5      	str	r5, [r4, #40]	; 0x28
 800f4e0:	f846 3b2c 	str.w	r3, [r6], #44
 800f4e4:	2226      	movs	r2, #38	; 0x26
 800f4e6:	4629      	mov	r1, r5
 800f4e8:	f64f 77ff 	movw	r7, #65535	; 0xffff
 800f4ec:	4630      	mov	r0, r6
 800f4ee:	f8ad 7004 	strh.w	r7, [sp, #4]
 800f4f2:	f019 f83a 	bl	802856a <memset>
 800f4f6:	4630      	mov	r0, r6
 800f4f8:	f7ff ff98 	bl	800f42c <_ZN8touchgfx8DrawableC1Ev>
 800f4fc:	a902      	add	r1, sp, #8
 800f4fe:	4b1c      	ldr	r3, [pc, #112]	; (800f570 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa0>)
 800f500:	62e3      	str	r3, [r4, #44]	; 0x2c
 800f502:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 800f506:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800f50a:	f884 7054 	strb.w	r7, [r4, #84]	; 0x54
 800f50e:	4630      	mov	r0, r6
 800f510:	f104 0758 	add.w	r7, r4, #88	; 0x58
 800f514:	f002 fdcb 	bl	80120ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800f518:	4638      	mov	r0, r7
 800f51a:	f7ff ff87 	bl	800f42c <_ZN8touchgfx8DrawableC1Ev>
 800f51e:	4b15      	ldr	r3, [pc, #84]	; (800f574 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa4>)
 800f520:	65a3      	str	r3, [r4, #88]	; 0x58
 800f522:	2364      	movs	r3, #100	; 0x64
 800f524:	e9c4 3522 	strd	r3, r5, [r4, #136]	; 0x88
 800f528:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
 800f52c:	4b12      	ldr	r3, [pc, #72]	; (800f578 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa8>)
 800f52e:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 800f532:	4629      	mov	r1, r5
 800f534:	4630      	mov	r0, r6
 800f536:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
 800f53a:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 800f53e:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
 800f542:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 800f546:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
 800f54a:	f7f1 fdf5 	bl	8001138 <_ZN8touchgfx8Drawable4setXEs>
 800f54e:	4629      	mov	r1, r5
 800f550:	4630      	mov	r0, r6
 800f552:	f7f1 fdf3 	bl	800113c <_ZN8touchgfx8Drawable4setYEs>
 800f556:	4631      	mov	r1, r6
 800f558:	4620      	mov	r0, r4
 800f55a:	f000 f819 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800f55e:	4620      	mov	r0, r4
 800f560:	4639      	mov	r1, r7
 800f562:	f000 f815 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800f566:	4620      	mov	r0, r4
 800f568:	b003      	add	sp, #12
 800f56a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f56c:	0802c270 	.word	0x0802c270
 800f570:	0802c898 	.word	0x0802c898
 800f574:	0802c344 	.word	0x0802c344
 800f578:	0801678b 	.word	0x0801678b

0800f57c <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800f57c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800f57e:	2000      	movs	r0, #0
 800f580:	b12b      	cbz	r3, 800f58e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800f582:	b920      	cbnz	r0, 800f58e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800f584:	1a5a      	subs	r2, r3, r1
 800f586:	4250      	negs	r0, r2
 800f588:	4150      	adcs	r0, r2
 800f58a:	699b      	ldr	r3, [r3, #24]
 800f58c:	e7f8      	b.n	800f580 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800f58e:	4770      	bx	lr

0800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800f590:	2300      	movs	r3, #0
 800f592:	6148      	str	r0, [r1, #20]
 800f594:	618b      	str	r3, [r1, #24]
 800f596:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800f598:	b913      	cbnz	r3, 800f5a0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800f59a:	6281      	str	r1, [r0, #40]	; 0x28
 800f59c:	4770      	bx	lr
 800f59e:	4613      	mov	r3, r2
 800f5a0:	699a      	ldr	r2, [r3, #24]
 800f5a2:	2a00      	cmp	r2, #0
 800f5a4:	d1fb      	bne.n	800f59e <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800f5a6:	6199      	str	r1, [r3, #24]
 800f5a8:	4770      	bx	lr

0800f5aa <_ZN8touchgfx9Container9removeAllEv>:
 800f5aa:	2200      	movs	r2, #0
 800f5ac:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800f5ae:	b123      	cbz	r3, 800f5ba <_ZN8touchgfx9Container9removeAllEv+0x10>
 800f5b0:	6999      	ldr	r1, [r3, #24]
 800f5b2:	6281      	str	r1, [r0, #40]	; 0x28
 800f5b4:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800f5b8:	e7f8      	b.n	800f5ac <_ZN8touchgfx9Container9removeAllEv+0x2>
 800f5ba:	4770      	bx	lr

0800f5bc <_ZN8touchgfx9Container6unlinkEv>:
 800f5bc:	2300      	movs	r3, #0
 800f5be:	6283      	str	r3, [r0, #40]	; 0x28
 800f5c0:	4770      	bx	lr

0800f5c2 <_ZNK8touchgfx9Container12getSolidRectEv>:
 800f5c2:	2200      	movs	r2, #0
 800f5c4:	8002      	strh	r2, [r0, #0]
 800f5c6:	8042      	strh	r2, [r0, #2]
 800f5c8:	8082      	strh	r2, [r0, #4]
 800f5ca:	80c2      	strh	r2, [r0, #6]
 800f5cc:	4770      	bx	lr

0800f5ce <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800f5ce:	b570      	push	{r4, r5, r6, lr}
 800f5d0:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800f5d2:	460d      	mov	r5, r1
 800f5d4:	4616      	mov	r6, r2
 800f5d6:	b13c      	cbz	r4, 800f5e8 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800f5d8:	6823      	ldr	r3, [r4, #0]
 800f5da:	4620      	mov	r0, r4
 800f5dc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800f5de:	4632      	mov	r2, r6
 800f5e0:	4629      	mov	r1, r5
 800f5e2:	4798      	blx	r3
 800f5e4:	69a4      	ldr	r4, [r4, #24]
 800f5e6:	e7f6      	b.n	800f5d6 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800f5e8:	bd70      	pop	{r4, r5, r6, pc}

0800f5ea <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800f5ea:	b538      	push	{r3, r4, r5, lr}
 800f5ec:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800f5ee:	460d      	mov	r5, r1
 800f5f0:	b134      	cbz	r4, 800f600 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800f5f2:	682b      	ldr	r3, [r5, #0]
 800f5f4:	4621      	mov	r1, r4
 800f5f6:	689b      	ldr	r3, [r3, #8]
 800f5f8:	4628      	mov	r0, r5
 800f5fa:	4798      	blx	r3
 800f5fc:	69a4      	ldr	r4, [r4, #24]
 800f5fe:	e7f7      	b.n	800f5f0 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800f600:	bd38      	pop	{r3, r4, r5, pc}

0800f602 <_ZN8touchgfx9ContainerD1Ev>:
 800f602:	4770      	bx	lr

0800f604 <_ZN8touchgfx9ContainerD0Ev>:
 800f604:	b510      	push	{r4, lr}
 800f606:	212c      	movs	r1, #44	; 0x2c
 800f608:	4604      	mov	r4, r0
 800f60a:	f017 ffb8 	bl	802757e <_ZdlPvj>
 800f60e:	4620      	mov	r0, r4
 800f610:	bd10      	pop	{r4, pc}

0800f612 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800f612:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800f614:	b19b      	cbz	r3, 800f63e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800f616:	428b      	cmp	r3, r1
 800f618:	d109      	bne.n	800f62e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800f61a:	699a      	ldr	r2, [r3, #24]
 800f61c:	2100      	movs	r1, #0
 800f61e:	6159      	str	r1, [r3, #20]
 800f620:	6282      	str	r2, [r0, #40]	; 0x28
 800f622:	b902      	cbnz	r2, 800f626 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800f624:	4770      	bx	lr
 800f626:	6199      	str	r1, [r3, #24]
 800f628:	4770      	bx	lr
 800f62a:	4613      	mov	r3, r2
 800f62c:	b13a      	cbz	r2, 800f63e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800f62e:	699a      	ldr	r2, [r3, #24]
 800f630:	428a      	cmp	r2, r1
 800f632:	d1fa      	bne.n	800f62a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800f634:	698a      	ldr	r2, [r1, #24]
 800f636:	619a      	str	r2, [r3, #24]
 800f638:	2300      	movs	r3, #0
 800f63a:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800f63e:	4770      	bx	lr

0800f640 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800f640:	b410      	push	{r4}
 800f642:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800f644:	4604      	mov	r4, r0
 800f646:	b92b      	cbnz	r3, 800f654 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800f648:	6803      	ldr	r3, [r0, #0]
 800f64a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800f64e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800f650:	4611      	mov	r1, r2
 800f652:	4718      	bx	r3
 800f654:	b941      	cbnz	r1, 800f668 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800f656:	6193      	str	r3, [r2, #24]
 800f658:	6282      	str	r2, [r0, #40]	; 0x28
 800f65a:	6154      	str	r4, [r2, #20]
 800f65c:	f85d 4b04 	ldr.w	r4, [sp], #4
 800f660:	4770      	bx	lr
 800f662:	4603      	mov	r3, r0
 800f664:	2800      	cmp	r0, #0
 800f666:	d0f9      	beq.n	800f65c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800f668:	4299      	cmp	r1, r3
 800f66a:	6998      	ldr	r0, [r3, #24]
 800f66c:	d1f9      	bne.n	800f662 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800f66e:	6190      	str	r0, [r2, #24]
 800f670:	618a      	str	r2, [r1, #24]
 800f672:	e7f2      	b.n	800f65a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800f674 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800f674:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f678:	461f      	mov	r7, r3
 800f67a:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800f67e:	460d      	mov	r5, r1
 800f680:	4616      	mov	r6, r2
 800f682:	b103      	cbz	r3, 800f686 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800f684:	6038      	str	r0, [r7, #0]
 800f686:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800f688:	b314      	cbz	r4, 800f6d0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800f68a:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800f68e:	b1eb      	cbz	r3, 800f6cc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800f690:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800f694:	428d      	cmp	r5, r1
 800f696:	db19      	blt.n	800f6cc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800f698:	8923      	ldrh	r3, [r4, #8]
 800f69a:	b289      	uxth	r1, r1
 800f69c:	440b      	add	r3, r1
 800f69e:	b21b      	sxth	r3, r3
 800f6a0:	429d      	cmp	r5, r3
 800f6a2:	da13      	bge.n	800f6cc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800f6a4:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800f6a8:	4296      	cmp	r6, r2
 800f6aa:	db0f      	blt.n	800f6cc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800f6ac:	8963      	ldrh	r3, [r4, #10]
 800f6ae:	b292      	uxth	r2, r2
 800f6b0:	4413      	add	r3, r2
 800f6b2:	b21b      	sxth	r3, r3
 800f6b4:	429e      	cmp	r6, r3
 800f6b6:	da09      	bge.n	800f6cc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800f6b8:	6823      	ldr	r3, [r4, #0]
 800f6ba:	1ab2      	subs	r2, r6, r2
 800f6bc:	1a69      	subs	r1, r5, r1
 800f6be:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 800f6c2:	b212      	sxth	r2, r2
 800f6c4:	463b      	mov	r3, r7
 800f6c6:	b209      	sxth	r1, r1
 800f6c8:	4620      	mov	r0, r4
 800f6ca:	47c0      	blx	r8
 800f6cc:	69a4      	ldr	r4, [r4, #24]
 800f6ce:	e7db      	b.n	800f688 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800f6d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800f6d4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800f6d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f6d8:	4c6e      	ldr	r4, [pc, #440]	; (800f894 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800f6da:	b0a1      	sub	sp, #132	; 0x84
 800f6dc:	6824      	ldr	r4, [r4, #0]
 800f6de:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 800f6e0:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 800f6e4:	9303      	str	r3, [sp, #12]
 800f6e6:	2400      	movs	r4, #0
 800f6e8:	802c      	strh	r4, [r5, #0]
 800f6ea:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 800f6ec:	802c      	strh	r4, [r5, #0]
 800f6ee:	601c      	str	r4, [r3, #0]
 800f6f0:	4606      	mov	r6, r0
 800f6f2:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800f6f6:	f7ff ffbd 	bl	800f674 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800f6fa:	f1b9 0f03 	cmp.w	r9, #3
 800f6fe:	f340 80c2 	ble.w	800f886 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 800f702:	4631      	mov	r1, r6
 800f704:	a80c      	add	r0, sp, #48	; 0x30
 800f706:	f006 fb5f 	bl	8015dc8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f70a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 800f70e:	9306      	str	r3, [sp, #24]
 800f710:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800f714:	9307      	str	r3, [sp, #28]
 800f716:	9b03      	ldr	r3, [sp, #12]
 800f718:	f8d3 a000 	ldr.w	sl, [r3]
 800f71c:	f1ba 0f00 	cmp.w	sl, #0
 800f720:	f000 80b4 	beq.w	800f88c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 800f724:	4651      	mov	r1, sl
 800f726:	a810      	add	r0, sp, #64	; 0x40
 800f728:	f006 fb4e 	bl	8015dc8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f72c:	9b01      	ldr	r3, [sp, #4]
 800f72e:	9a06      	ldr	r2, [sp, #24]
 800f730:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 800f734:	189d      	adds	r5, r3, r2
 800f736:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 800f73a:	9a07      	ldr	r2, [sp, #28]
 800f73c:	2002      	movs	r0, #2
 800f73e:	fb91 f1f0 	sdiv	r1, r1, r0
 800f742:	4419      	add	r1, r3
 800f744:	1a6d      	subs	r5, r5, r1
 800f746:	9b02      	ldr	r3, [sp, #8]
 800f748:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800f74c:	4413      	add	r3, r2
 800f74e:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 800f752:	fb92 f2f0 	sdiv	r2, r2, r0
 800f756:	440a      	add	r2, r1
 800f758:	1a9b      	subs	r3, r3, r2
 800f75a:	435b      	muls	r3, r3
 800f75c:	fb05 3505 	mla	r5, r5, r5, r3
 800f760:	4f4d      	ldr	r7, [pc, #308]	; (800f898 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 800f762:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800f764:	ac10      	add	r4, sp, #64	; 0x40
 800f766:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800f768:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800f76a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800f76c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800f76e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800f770:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800f774:	f1b9 0f0c 	cmp.w	r9, #12
 800f778:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800f77c:	f04f 0303 	mov.w	r3, #3
 800f780:	bfc8      	it	gt
 800f782:	4698      	movgt	r8, r3
 800f784:	f8cd 9000 	str.w	r9, [sp]
 800f788:	f04f 0400 	mov.w	r4, #0
 800f78c:	bfdc      	itt	le
 800f78e:	f109 32ff 	addle.w	r2, r9, #4294967295
 800f792:	fb92 f8f3 	sdivle	r8, r2, r3
 800f796:	1c63      	adds	r3, r4, #1
 800f798:	aa10      	add	r2, sp, #64	; 0x40
 800f79a:	f004 0401 	and.w	r4, r4, #1
 800f79e:	9308      	str	r3, [sp, #32]
 800f7a0:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800f7a4:	9b00      	ldr	r3, [sp, #0]
 800f7a6:	fb93 f3f8 	sdiv	r3, r3, r8
 800f7aa:	b29b      	uxth	r3, r3
 800f7ac:	3404      	adds	r4, #4
 800f7ae:	f04f 0b00 	mov.w	fp, #0
 800f7b2:	9304      	str	r3, [sp, #16]
 800f7b4:	9a04      	ldr	r2, [sp, #16]
 800f7b6:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800f7ba:	fb13 f302 	smulbb	r3, r3, r2
 800f7be:	9a01      	ldr	r2, [sp, #4]
 800f7c0:	b29b      	uxth	r3, r3
 800f7c2:	1899      	adds	r1, r3, r2
 800f7c4:	9305      	str	r3, [sp, #20]
 800f7c6:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800f7ca:	b209      	sxth	r1, r1
 800f7cc:	4299      	cmp	r1, r3
 800f7ce:	db4d      	blt.n	800f86c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f7d0:	8932      	ldrh	r2, [r6, #8]
 800f7d2:	4413      	add	r3, r2
 800f7d4:	b21b      	sxth	r3, r3
 800f7d6:	4299      	cmp	r1, r3
 800f7d8:	da48      	bge.n	800f86c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f7da:	9b04      	ldr	r3, [sp, #16]
 800f7dc:	6827      	ldr	r7, [r4, #0]
 800f7de:	fb17 f703 	smulbb	r7, r7, r3
 800f7e2:	9b02      	ldr	r3, [sp, #8]
 800f7e4:	b2bf      	uxth	r7, r7
 800f7e6:	18fa      	adds	r2, r7, r3
 800f7e8:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800f7ec:	b212      	sxth	r2, r2
 800f7ee:	429a      	cmp	r2, r3
 800f7f0:	db3c      	blt.n	800f86c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f7f2:	8970      	ldrh	r0, [r6, #10]
 800f7f4:	4403      	add	r3, r0
 800f7f6:	b21b      	sxth	r3, r3
 800f7f8:	429a      	cmp	r2, r3
 800f7fa:	da37      	bge.n	800f86c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f7fc:	2300      	movs	r3, #0
 800f7fe:	930b      	str	r3, [sp, #44]	; 0x2c
 800f800:	4630      	mov	r0, r6
 800f802:	ab0b      	add	r3, sp, #44	; 0x2c
 800f804:	f7ff ff36 	bl	800f674 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800f808:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800f80a:	b37a      	cbz	r2, 800f86c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f80c:	4552      	cmp	r2, sl
 800f80e:	d02d      	beq.n	800f86c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f810:	4611      	mov	r1, r2
 800f812:	a80e      	add	r0, sp, #56	; 0x38
 800f814:	9209      	str	r2, [sp, #36]	; 0x24
 800f816:	f006 fad7 	bl	8015dc8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f81a:	9a06      	ldr	r2, [sp, #24]
 800f81c:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 800f820:	9b01      	ldr	r3, [sp, #4]
 800f822:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 800f826:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 800f82a:	4413      	add	r3, r2
 800f82c:	f04f 0e02 	mov.w	lr, #2
 800f830:	fb91 f1fe 	sdiv	r1, r1, lr
 800f834:	4401      	add	r1, r0
 800f836:	1a58      	subs	r0, r3, r1
 800f838:	9a07      	ldr	r2, [sp, #28]
 800f83a:	9b02      	ldr	r3, [sp, #8]
 800f83c:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 800f840:	fb9c fcfe 	sdiv	ip, ip, lr
 800f844:	4413      	add	r3, r2
 800f846:	448c      	add	ip, r1
 800f848:	eba3 030c 	sub.w	r3, r3, ip
 800f84c:	435b      	muls	r3, r3
 800f84e:	fb00 3300 	mla	r3, r0, r0, r3
 800f852:	42ab      	cmp	r3, r5
 800f854:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800f856:	d208      	bcs.n	800f86a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800f858:	9803      	ldr	r0, [sp, #12]
 800f85a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800f85c:	6001      	str	r1, [r0, #0]
 800f85e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 800f860:	9805      	ldr	r0, [sp, #20]
 800f862:	8008      	strh	r0, [r1, #0]
 800f864:	992b      	ldr	r1, [sp, #172]	; 0xac
 800f866:	461d      	mov	r5, r3
 800f868:	800f      	strh	r7, [r1, #0]
 800f86a:	4692      	mov	sl, r2
 800f86c:	f10b 0b01 	add.w	fp, fp, #1
 800f870:	f1bb 0f04 	cmp.w	fp, #4
 800f874:	f104 0408 	add.w	r4, r4, #8
 800f878:	d19c      	bne.n	800f7b4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800f87a:	9b00      	ldr	r3, [sp, #0]
 800f87c:	9c08      	ldr	r4, [sp, #32]
 800f87e:	444b      	add	r3, r9
 800f880:	4544      	cmp	r4, r8
 800f882:	9300      	str	r3, [sp, #0]
 800f884:	d187      	bne.n	800f796 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800f886:	b021      	add	sp, #132	; 0x84
 800f888:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f88c:	f04f 35ff 	mov.w	r5, #4294967295
 800f890:	e766      	b.n	800f760 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800f892:	bf00      	nop
 800f894:	200137bc 	.word	0x200137bc
 800f898:	08029278 	.word	0x08029278

0800f89c <_ZN8touchgfx4RectaNERKS0_>:
 800f89c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f8a0:	f9b1 7000 	ldrsh.w	r7, [r1]
 800f8a4:	888c      	ldrh	r4, [r1, #4]
 800f8a6:	f9b0 9000 	ldrsh.w	r9, [r0]
 800f8aa:	443c      	add	r4, r7
 800f8ac:	b2a4      	uxth	r4, r4
 800f8ae:	fa0f f884 	sxth.w	r8, r4
 800f8b2:	45c1      	cmp	r9, r8
 800f8b4:	da2f      	bge.n	800f916 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800f8b6:	8882      	ldrh	r2, [r0, #4]
 800f8b8:	444a      	add	r2, r9
 800f8ba:	b292      	uxth	r2, r2
 800f8bc:	fa0f fe82 	sxth.w	lr, r2
 800f8c0:	4577      	cmp	r7, lr
 800f8c2:	da28      	bge.n	800f916 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800f8c4:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800f8c8:	88cb      	ldrh	r3, [r1, #6]
 800f8ca:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800f8ce:	442b      	add	r3, r5
 800f8d0:	b21b      	sxth	r3, r3
 800f8d2:	429e      	cmp	r6, r3
 800f8d4:	da1f      	bge.n	800f916 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800f8d6:	88c3      	ldrh	r3, [r0, #6]
 800f8d8:	4433      	add	r3, r6
 800f8da:	b29b      	uxth	r3, r3
 800f8dc:	fa0f fc83 	sxth.w	ip, r3
 800f8e0:	4565      	cmp	r5, ip
 800f8e2:	da18      	bge.n	800f916 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800f8e4:	454f      	cmp	r7, r9
 800f8e6:	bfb8      	it	lt
 800f8e8:	464f      	movlt	r7, r9
 800f8ea:	42b5      	cmp	r5, r6
 800f8ec:	bfb8      	it	lt
 800f8ee:	4635      	movlt	r5, r6
 800f8f0:	45f0      	cmp	r8, lr
 800f8f2:	bfd8      	it	le
 800f8f4:	4622      	movle	r2, r4
 800f8f6:	1bd2      	subs	r2, r2, r7
 800f8f8:	8082      	strh	r2, [r0, #4]
 800f8fa:	884a      	ldrh	r2, [r1, #2]
 800f8fc:	88c9      	ldrh	r1, [r1, #6]
 800f8fe:	8007      	strh	r7, [r0, #0]
 800f900:	440a      	add	r2, r1
 800f902:	b292      	uxth	r2, r2
 800f904:	b211      	sxth	r1, r2
 800f906:	458c      	cmp	ip, r1
 800f908:	bfa8      	it	ge
 800f90a:	4613      	movge	r3, r2
 800f90c:	1b5b      	subs	r3, r3, r5
 800f90e:	80c3      	strh	r3, [r0, #6]
 800f910:	8045      	strh	r5, [r0, #2]
 800f912:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f916:	2300      	movs	r3, #0
 800f918:	8003      	strh	r3, [r0, #0]
 800f91a:	8043      	strh	r3, [r0, #2]
 800f91c:	8083      	strh	r3, [r0, #4]
 800f91e:	80c3      	strh	r3, [r0, #6]
 800f920:	e7f7      	b.n	800f912 <_ZN8touchgfx4RectaNERKS0_+0x76>

0800f922 <_ZNK8touchgfx4Rect7isEmptyEv>:
 800f922:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800f926:	2b00      	cmp	r3, #0
 800f928:	dd06      	ble.n	800f938 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800f92a:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800f92e:	2800      	cmp	r0, #0
 800f930:	bfcc      	ite	gt
 800f932:	2000      	movgt	r0, #0
 800f934:	2001      	movle	r0, #1
 800f936:	4770      	bx	lr
 800f938:	2001      	movs	r0, #1
 800f93a:	4770      	bx	lr

0800f93c <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800f93c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f940:	2300      	movs	r3, #0
 800f942:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800f944:	8003      	strh	r3, [r0, #0]
 800f946:	4604      	mov	r4, r0
 800f948:	8043      	strh	r3, [r0, #2]
 800f94a:	8083      	strh	r3, [r0, #4]
 800f94c:	80c3      	strh	r3, [r0, #6]
 800f94e:	2d00      	cmp	r5, #0
 800f950:	d040      	beq.n	800f9d4 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800f952:	1d28      	adds	r0, r5, #4
 800f954:	f7ff ffe5 	bl	800f922 <_ZNK8touchgfx4Rect7isEmptyEv>
 800f958:	b988      	cbnz	r0, 800f97e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800f95a:	4620      	mov	r0, r4
 800f95c:	f7ff ffe1 	bl	800f922 <_ZNK8touchgfx4Rect7isEmptyEv>
 800f960:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800f964:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800f968:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800f96c:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800f970:	b138      	cbz	r0, 800f982 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800f972:	8022      	strh	r2, [r4, #0]
 800f974:	8063      	strh	r3, [r4, #2]
 800f976:	f8a4 e004 	strh.w	lr, [r4, #4]
 800f97a:	f8a4 c006 	strh.w	ip, [r4, #6]
 800f97e:	69ad      	ldr	r5, [r5, #24]
 800f980:	e7e5      	b.n	800f94e <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800f982:	f9b4 0000 	ldrsh.w	r0, [r4]
 800f986:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800f98a:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800f98e:	4290      	cmp	r0, r2
 800f990:	4607      	mov	r7, r0
 800f992:	bfa8      	it	ge
 800f994:	4617      	movge	r7, r2
 800f996:	4472      	add	r2, lr
 800f998:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800f99c:	8027      	strh	r7, [r4, #0]
 800f99e:	4299      	cmp	r1, r3
 800f9a0:	460e      	mov	r6, r1
 800f9a2:	4440      	add	r0, r8
 800f9a4:	bfa8      	it	ge
 800f9a6:	461e      	movge	r6, r3
 800f9a8:	4471      	add	r1, lr
 800f9aa:	4463      	add	r3, ip
 800f9ac:	b200      	sxth	r0, r0
 800f9ae:	b212      	sxth	r2, r2
 800f9b0:	b209      	sxth	r1, r1
 800f9b2:	b21b      	sxth	r3, r3
 800f9b4:	4290      	cmp	r0, r2
 800f9b6:	bfac      	ite	ge
 800f9b8:	ebc7 0200 	rsbge	r2, r7, r0
 800f9bc:	ebc7 0202 	rsblt	r2, r7, r2
 800f9c0:	4299      	cmp	r1, r3
 800f9c2:	bfac      	ite	ge
 800f9c4:	ebc6 0301 	rsbge	r3, r6, r1
 800f9c8:	ebc6 0303 	rsblt	r3, r6, r3
 800f9cc:	8066      	strh	r6, [r4, #2]
 800f9ce:	80a2      	strh	r2, [r4, #4]
 800f9d0:	80e3      	strh	r3, [r4, #6]
 800f9d2:	e7d4      	b.n	800f97e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800f9d4:	4620      	mov	r0, r4
 800f9d6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800f9da <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800f9da:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800f9de:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800f9e2:	b383      	cbz	r3, 800fa46 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800f9e4:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800f9e6:	b374      	cbz	r4, 800fa46 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800f9e8:	f9b1 5000 	ldrsh.w	r5, [r1]
 800f9ec:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800f9f0:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800f9f4:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800f9f8:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800f9fc:	b303      	cbz	r3, 800fa40 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800f9fe:	4668      	mov	r0, sp
 800fa00:	1d21      	adds	r1, r4, #4
 800fa02:	f8ad 5000 	strh.w	r5, [sp]
 800fa06:	f8ad 6002 	strh.w	r6, [sp, #2]
 800fa0a:	f8ad 7004 	strh.w	r7, [sp, #4]
 800fa0e:	f8ad 8006 	strh.w	r8, [sp, #6]
 800fa12:	f7ff ff43 	bl	800f89c <_ZN8touchgfx4RectaNERKS0_>
 800fa16:	4668      	mov	r0, sp
 800fa18:	f7ff ff83 	bl	800f922 <_ZNK8touchgfx4Rect7isEmptyEv>
 800fa1c:	b980      	cbnz	r0, 800fa40 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800fa1e:	f8bd 3000 	ldrh.w	r3, [sp]
 800fa22:	88a2      	ldrh	r2, [r4, #4]
 800fa24:	1a9b      	subs	r3, r3, r2
 800fa26:	f8ad 3000 	strh.w	r3, [sp]
 800fa2a:	88e2      	ldrh	r2, [r4, #6]
 800fa2c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800fa30:	1a9b      	subs	r3, r3, r2
 800fa32:	f8ad 3002 	strh.w	r3, [sp, #2]
 800fa36:	6823      	ldr	r3, [r4, #0]
 800fa38:	4669      	mov	r1, sp
 800fa3a:	689b      	ldr	r3, [r3, #8]
 800fa3c:	4620      	mov	r0, r4
 800fa3e:	4798      	blx	r3
 800fa40:	69a4      	ldr	r4, [r4, #24]
 800fa42:	2c00      	cmp	r4, #0
 800fa44:	d1d8      	bne.n	800f9f8 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800fa46:	b002      	add	sp, #8
 800fa48:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800fa4c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800fa4c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800fa4e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800fa52:	460d      	mov	r5, r1
 800fa54:	4616      	mov	r6, r2
 800fa56:	b323      	cbz	r3, 800faa2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800fa58:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800fa5a:	b314      	cbz	r4, 800faa2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800fa5c:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800fa60:	b1eb      	cbz	r3, 800fa9e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800fa62:	6828      	ldr	r0, [r5, #0]
 800fa64:	6869      	ldr	r1, [r5, #4]
 800fa66:	466b      	mov	r3, sp
 800fa68:	c303      	stmia	r3!, {r0, r1}
 800fa6a:	4668      	mov	r0, sp
 800fa6c:	1d21      	adds	r1, r4, #4
 800fa6e:	f7ff ff15 	bl	800f89c <_ZN8touchgfx4RectaNERKS0_>
 800fa72:	4668      	mov	r0, sp
 800fa74:	f7ff ff55 	bl	800f922 <_ZNK8touchgfx4Rect7isEmptyEv>
 800fa78:	b988      	cbnz	r0, 800fa9e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800fa7a:	f8bd 3000 	ldrh.w	r3, [sp]
 800fa7e:	88a2      	ldrh	r2, [r4, #4]
 800fa80:	1a9b      	subs	r3, r3, r2
 800fa82:	f8ad 3000 	strh.w	r3, [sp]
 800fa86:	88e2      	ldrh	r2, [r4, #6]
 800fa88:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800fa8c:	1a9b      	subs	r3, r3, r2
 800fa8e:	f8ad 3002 	strh.w	r3, [sp, #2]
 800fa92:	6823      	ldr	r3, [r4, #0]
 800fa94:	4632      	mov	r2, r6
 800fa96:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800fa98:	4669      	mov	r1, sp
 800fa9a:	4620      	mov	r0, r4
 800fa9c:	4798      	blx	r3
 800fa9e:	69a4      	ldr	r4, [r4, #24]
 800faa0:	e7db      	b.n	800fa5a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800faa2:	b002      	add	sp, #8
 800faa4:	bd70      	pop	{r4, r5, r6, pc}

0800faa6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800faa6:	b513      	push	{r0, r1, r4, lr}
 800faa8:	6803      	ldr	r3, [r0, #0]
 800faaa:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 800faae:	2300      	movs	r3, #0
 800fab0:	e9cd 3300 	strd	r3, r3, [sp]
 800fab4:	466b      	mov	r3, sp
 800fab6:	47a0      	blx	r4
 800fab8:	b002      	add	sp, #8
 800faba:	bd10      	pop	{r4, pc}

0800fabc <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800fabc:	2301      	movs	r3, #1
 800fabe:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800fac2:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 800fac6:	4770      	bx	lr

0800fac8 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800fac8:	2301      	movs	r3, #1
 800faca:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800face:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 800fad2:	4770      	bx	lr

0800fad4 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800fad4:	6843      	ldr	r3, [r0, #4]
 800fad6:	2201      	movs	r2, #1
 800fad8:	725a      	strb	r2, [r3, #9]
 800fada:	6840      	ldr	r0, [r0, #4]
 800fadc:	6803      	ldr	r3, [r0, #0]
 800fade:	691b      	ldr	r3, [r3, #16]
 800fae0:	4718      	bx	r3

0800fae2 <_ZN8touchgfx3HAL8flushDMAEv>:
 800fae2:	6840      	ldr	r0, [r0, #4]
 800fae4:	6803      	ldr	r3, [r0, #0]
 800fae6:	689b      	ldr	r3, [r3, #8]
 800fae8:	4718      	bx	r3

0800faea <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800faea:	b530      	push	{r4, r5, lr}
 800faec:	b08b      	sub	sp, #44	; 0x2c
 800faee:	6804      	ldr	r4, [r0, #0]
 800faf0:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 800faf4:	9509      	str	r5, [sp, #36]	; 0x24
 800faf6:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 800fafa:	9508      	str	r5, [sp, #32]
 800fafc:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 800fb00:	9507      	str	r5, [sp, #28]
 800fb02:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 800fb06:	9506      	str	r5, [sp, #24]
 800fb08:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 800fb0c:	9505      	str	r5, [sp, #20]
 800fb0e:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 800fb12:	9504      	str	r5, [sp, #16]
 800fb14:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 800fb18:	9503      	str	r5, [sp, #12]
 800fb1a:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800fb1e:	9502      	str	r5, [sp, #8]
 800fb20:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 800fb24:	e9cd 3500 	strd	r3, r5, [sp]
 800fb28:	4613      	mov	r3, r2
 800fb2a:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 800fb2c:	2200      	movs	r2, #0
 800fb2e:	47a0      	blx	r4
 800fb30:	b00b      	add	sp, #44	; 0x2c
 800fb32:	bd30      	pop	{r4, r5, pc}

0800fb34 <_ZN8touchgfx3HAL10beginFrameEv>:
 800fb34:	4b04      	ldr	r3, [pc, #16]	; (800fb48 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800fb36:	781b      	ldrb	r3, [r3, #0]
 800fb38:	b123      	cbz	r3, 800fb44 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800fb3a:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
 800fb3e:	f080 0001 	eor.w	r0, r0, #1
 800fb42:	4770      	bx	lr
 800fb44:	2001      	movs	r0, #1
 800fb46:	4770      	bx	lr
 800fb48:	200137ba 	.word	0x200137ba

0800fb4c <_ZN8touchgfx3HAL8endFrameEv>:
 800fb4c:	b510      	push	{r4, lr}
 800fb4e:	4604      	mov	r4, r0
 800fb50:	6840      	ldr	r0, [r0, #4]
 800fb52:	6803      	ldr	r3, [r0, #0]
 800fb54:	689b      	ldr	r3, [r3, #8]
 800fb56:	4798      	blx	r3
 800fb58:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
 800fb5c:	b113      	cbz	r3, 800fb64 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800fb5e:	2301      	movs	r3, #1
 800fb60:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 800fb64:	bd10      	pop	{r4, pc}

0800fb66 <_ZN8touchgfx3HAL10initializeEv>:
 800fb66:	b510      	push	{r4, lr}
 800fb68:	4604      	mov	r4, r0
 800fb6a:	f7f0 ff3f 	bl	80009ec <_ZN8touchgfx10OSWrappers10initializeEv>
 800fb6e:	f7f0 fe4b 	bl	8000808 <_ZN8touchgfx4GPIO4initEv>
 800fb72:	6860      	ldr	r0, [r4, #4]
 800fb74:	6803      	ldr	r3, [r0, #0]
 800fb76:	68db      	ldr	r3, [r3, #12]
 800fb78:	4798      	blx	r3
 800fb7a:	68e0      	ldr	r0, [r4, #12]
 800fb7c:	6803      	ldr	r3, [r0, #0]
 800fb7e:	689b      	ldr	r3, [r3, #8]
 800fb80:	4798      	blx	r3
 800fb82:	6823      	ldr	r3, [r4, #0]
 800fb84:	4620      	mov	r0, r4
 800fb86:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800fb88:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800fb8c:	4718      	bx	r3
	...

0800fb90 <_ZN8touchgfx3HAL4tickEv>:
 800fb90:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800fb92:	6803      	ldr	r3, [r0, #0]
 800fb94:	4d5b      	ldr	r5, [pc, #364]	; (800fd04 <_ZN8touchgfx3HAL4tickEv+0x174>)
 800fb96:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800fb9a:	4604      	mov	r4, r0
 800fb9c:	4798      	blx	r3
 800fb9e:	2800      	cmp	r0, #0
 800fba0:	f000 8095 	beq.w	800fcce <_ZN8touchgfx3HAL4tickEv+0x13e>
 800fba4:	2001      	movs	r0, #1
 800fba6:	f7f0 fde1 	bl	800076c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800fbaa:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
 800fbae:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800fbb2:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
 800fbb6:	2600      	movs	r6, #0
 800fbb8:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
 800fbbc:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 800fbc0:	b133      	cbz	r3, 800fbd0 <_ZN8touchgfx3HAL4tickEv+0x40>
 800fbc2:	6823      	ldr	r3, [r4, #0]
 800fbc4:	4620      	mov	r0, r4
 800fbc6:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 800fbca:	4798      	blx	r3
 800fbcc:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
 800fbd0:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800fbd4:	6862      	ldr	r2, [r4, #4]
 800fbd6:	f083 0301 	eor.w	r3, r3, #1
 800fbda:	7253      	strb	r3, [r2, #9]
 800fbdc:	2601      	movs	r6, #1
 800fbde:	702e      	strb	r6, [r5, #0]
 800fbe0:	f004 ff6e 	bl	8014ac0 <_ZN8touchgfx11Application11getInstanceEv>
 800fbe4:	6803      	ldr	r3, [r0, #0]
 800fbe6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800fbe8:	4798      	blx	r3
 800fbea:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 800fbee:	b90b      	cbnz	r3, 800fbf4 <_ZN8touchgfx3HAL4tickEv+0x64>
 800fbf0:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
 800fbf4:	f004 ff64 	bl	8014ac0 <_ZN8touchgfx11Application11getInstanceEv>
 800fbf8:	6803      	ldr	r3, [r0, #0]
 800fbfa:	695b      	ldr	r3, [r3, #20]
 800fbfc:	4798      	blx	r3
 800fbfe:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 800fc00:	6803      	ldr	r3, [r0, #0]
 800fc02:	691b      	ldr	r3, [r3, #16]
 800fc04:	4798      	blx	r3
 800fc06:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 800fc0a:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
 800fc0e:	3b01      	subs	r3, #1
 800fc10:	b2db      	uxtb	r3, r3
 800fc12:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800fc16:	b10a      	cbz	r2, 800fc1c <_ZN8touchgfx3HAL4tickEv+0x8c>
 800fc18:	2b00      	cmp	r3, #0
 800fc1a:	d1eb      	bne.n	800fbf4 <_ZN8touchgfx3HAL4tickEv+0x64>
 800fc1c:	4a3a      	ldr	r2, [pc, #232]	; (800fd08 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800fc1e:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
 800fc22:	7813      	ldrb	r3, [r2, #0]
 800fc24:	3301      	adds	r3, #1
 800fc26:	b25b      	sxtb	r3, r3
 800fc28:	4299      	cmp	r1, r3
 800fc2a:	7013      	strb	r3, [r2, #0]
 800fc2c:	dc10      	bgt.n	800fc50 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800fc2e:	68e0      	ldr	r0, [r4, #12]
 800fc30:	2300      	movs	r3, #0
 800fc32:	7013      	strb	r3, [r2, #0]
 800fc34:	6803      	ldr	r3, [r0, #0]
 800fc36:	aa03      	add	r2, sp, #12
 800fc38:	68db      	ldr	r3, [r3, #12]
 800fc3a:	a902      	add	r1, sp, #8
 800fc3c:	4798      	blx	r3
 800fc3e:	6823      	ldr	r3, [r4, #0]
 800fc40:	2800      	cmp	r0, #0
 800fc42:	d050      	beq.n	800fce6 <_ZN8touchgfx3HAL4tickEv+0x156>
 800fc44:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800fc48:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800fc4c:	4620      	mov	r0, r4
 800fc4e:	4798      	blx	r3
 800fc50:	6960      	ldr	r0, [r4, #20]
 800fc52:	2300      	movs	r3, #0
 800fc54:	f88d 3007 	strb.w	r3, [sp, #7]
 800fc58:	b158      	cbz	r0, 800fc72 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800fc5a:	6803      	ldr	r3, [r0, #0]
 800fc5c:	f10d 0107 	add.w	r1, sp, #7
 800fc60:	68db      	ldr	r3, [r3, #12]
 800fc62:	4798      	blx	r3
 800fc64:	b128      	cbz	r0, 800fc72 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800fc66:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 800fc68:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800fc6c:	6803      	ldr	r3, [r0, #0]
 800fc6e:	68db      	ldr	r3, [r3, #12]
 800fc70:	4798      	blx	r3
 800fc72:	f104 001c 	add.w	r0, r4, #28
 800fc76:	f015 fcc5 	bl	8025604 <_ZN8touchgfx8Gestures4tickEv>
 800fc7a:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
 800fc7e:	b30b      	cbz	r3, 800fcc4 <_ZN8touchgfx3HAL4tickEv+0x134>
 800fc80:	6920      	ldr	r0, [r4, #16]
 800fc82:	6803      	ldr	r3, [r0, #0]
 800fc84:	691b      	ldr	r3, [r3, #16]
 800fc86:	4798      	blx	r3
 800fc88:	6f63      	ldr	r3, [r4, #116]	; 0x74
 800fc8a:	4606      	mov	r6, r0
 800fc8c:	b903      	cbnz	r3, 800fc90 <_ZN8touchgfx3HAL4tickEv+0x100>
 800fc8e:	6760      	str	r0, [r4, #116]	; 0x74
 800fc90:	6f63      	ldr	r3, [r4, #116]	; 0x74
 800fc92:	4a1e      	ldr	r2, [pc, #120]	; (800fd0c <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800fc94:	1af3      	subs	r3, r6, r3
 800fc96:	4293      	cmp	r3, r2
 800fc98:	d914      	bls.n	800fcc4 <_ZN8touchgfx3HAL4tickEv+0x134>
 800fc9a:	6920      	ldr	r0, [r4, #16]
 800fc9c:	6803      	ldr	r3, [r0, #0]
 800fc9e:	699b      	ldr	r3, [r3, #24]
 800fca0:	4798      	blx	r3
 800fca2:	6f63      	ldr	r3, [r4, #116]	; 0x74
 800fca4:	2264      	movs	r2, #100	; 0x64
 800fca6:	1af3      	subs	r3, r6, r3
 800fca8:	fbb3 f3f2 	udiv	r3, r3, r2
 800fcac:	fbb0 f0f3 	udiv	r0, r0, r3
 800fcb0:	2800      	cmp	r0, #0
 800fcb2:	dc1d      	bgt.n	800fcf0 <_ZN8touchgfx3HAL4tickEv+0x160>
 800fcb4:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
 800fcb8:	6920      	ldr	r0, [r4, #16]
 800fcba:	6803      	ldr	r3, [r0, #0]
 800fcbc:	2100      	movs	r1, #0
 800fcbe:	69db      	ldr	r3, [r3, #28]
 800fcc0:	4798      	blx	r3
 800fcc2:	6766      	str	r6, [r4, #116]	; 0x74
 800fcc4:	f004 fefc 	bl	8014ac0 <_ZN8touchgfx11Application11getInstanceEv>
 800fcc8:	6803      	ldr	r3, [r0, #0]
 800fcca:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800fccc:	4798      	blx	r3
 800fcce:	6823      	ldr	r3, [r4, #0]
 800fcd0:	4620      	mov	r0, r4
 800fcd2:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800fcd6:	4798      	blx	r3
 800fcd8:	2001      	movs	r0, #1
 800fcda:	f7f0 fd5f 	bl	800079c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800fcde:	2300      	movs	r3, #0
 800fce0:	702b      	strb	r3, [r5, #0]
 800fce2:	b004      	add	sp, #16
 800fce4:	bd70      	pop	{r4, r5, r6, pc}
 800fce6:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 800fcea:	4620      	mov	r0, r4
 800fcec:	4798      	blx	r3
 800fcee:	e7af      	b.n	800fc50 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800fcf0:	2863      	cmp	r0, #99	; 0x63
 800fcf2:	bfcb      	itete	gt
 800fcf4:	2300      	movgt	r3, #0
 800fcf6:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 800fcfa:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
 800fcfe:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
 800fd02:	e7d9      	b.n	800fcb8 <_ZN8touchgfx3HAL4tickEv+0x128>
 800fd04:	200137c0 	.word	0x200137c0
 800fd08:	200137c1 	.word	0x200137c1
 800fd0c:	05f5e100 	.word	0x05f5e100

0800fd10 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800fd10:	b510      	push	{r4, lr}
 800fd12:	4604      	mov	r4, r0
 800fd14:	f7f0 fe9a 	bl	8000a4c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 800fd18:	6863      	ldr	r3, [r4, #4]
 800fd1a:	2200      	movs	r2, #0
 800fd1c:	729a      	strb	r2, [r3, #10]
 800fd1e:	bd10      	pop	{r4, pc}

0800fd20 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800fd20:	65c1      	str	r1, [r0, #92]	; 0x5c
 800fd22:	301c      	adds	r0, #28
 800fd24:	f015 bc6c 	b.w	8025600 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800fd28 <_ZN8touchgfx3HAL5touchEll>:
 800fd28:	b530      	push	{r4, r5, lr}
 800fd2a:	b087      	sub	sp, #28
 800fd2c:	4604      	mov	r4, r0
 800fd2e:	a804      	add	r0, sp, #16
 800fd30:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800fd34:	f004 fc90 	bl	8014658 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800fd38:	9b04      	ldr	r3, [sp, #16]
 800fd3a:	f8ad 300c 	strh.w	r3, [sp, #12]
 800fd3e:	a906      	add	r1, sp, #24
 800fd40:	9b05      	ldr	r3, [sp, #20]
 800fd42:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800fd46:	a803      	add	r0, sp, #12
 800fd48:	f004 fcd8 	bl	80146fc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800fd4c:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
 800fd50:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800fd54:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800fd58:	f104 001c 	add.w	r0, r4, #28
 800fd5c:	b189      	cbz	r1, 800fd82 <_ZN8touchgfx3HAL5touchEll+0x5a>
 800fd5e:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
 800fd62:	9300      	str	r3, [sp, #0]
 800fd64:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
 800fd68:	4613      	mov	r3, r2
 800fd6a:	462a      	mov	r2, r5
 800fd6c:	f015 fc58 	bl	8025620 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800fd70:	b128      	cbz	r0, 800fd7e <_ZN8touchgfx3HAL5touchEll+0x56>
 800fd72:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800fd76:	6623      	str	r3, [r4, #96]	; 0x60
 800fd78:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800fd7c:	6663      	str	r3, [r4, #100]	; 0x64
 800fd7e:	b007      	add	sp, #28
 800fd80:	bd30      	pop	{r4, r5, pc}
 800fd82:	f015 fc8d 	bl	80256a0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800fd86:	2301      	movs	r3, #1
 800fd88:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 800fd8c:	e7f1      	b.n	800fd72 <_ZN8touchgfx3HAL5touchEll+0x4a>

0800fd8e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800fd8e:	b510      	push	{r4, lr}
 800fd90:	2b00      	cmp	r3, #0
 800fd92:	d046      	beq.n	800fe22 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800fd94:	ea81 0002 	eor.w	r0, r1, r2
 800fd98:	07c4      	lsls	r4, r0, #31
 800fd9a:	d508      	bpl.n	800fdae <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800fd9c:	440b      	add	r3, r1
 800fd9e:	3a01      	subs	r2, #1
 800fda0:	428b      	cmp	r3, r1
 800fda2:	d93e      	bls.n	800fe22 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800fda4:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800fda8:	f801 0b01 	strb.w	r0, [r1], #1
 800fdac:	e7f8      	b.n	800fda0 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800fdae:	07d0      	lsls	r0, r2, #31
 800fdb0:	bf42      	ittt	mi
 800fdb2:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800fdb6:	f801 0b01 	strbmi.w	r0, [r1], #1
 800fdba:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800fdbe:	2b01      	cmp	r3, #1
 800fdc0:	d911      	bls.n	800fde6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800fdc2:	ea81 0402 	eor.w	r4, r1, r2
 800fdc6:	07a4      	lsls	r4, r4, #30
 800fdc8:	4610      	mov	r0, r2
 800fdca:	d022      	beq.n	800fe12 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800fdcc:	f023 0401 	bic.w	r4, r3, #1
 800fdd0:	440c      	add	r4, r1
 800fdd2:	428c      	cmp	r4, r1
 800fdd4:	4602      	mov	r2, r0
 800fdd6:	d904      	bls.n	800fde2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800fdd8:	8812      	ldrh	r2, [r2, #0]
 800fdda:	f821 2b02 	strh.w	r2, [r1], #2
 800fdde:	3002      	adds	r0, #2
 800fde0:	e7f7      	b.n	800fdd2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800fde2:	f003 0301 	and.w	r3, r3, #1
 800fde6:	f023 0003 	bic.w	r0, r3, #3
 800fdea:	4408      	add	r0, r1
 800fdec:	4288      	cmp	r0, r1
 800fdee:	4614      	mov	r4, r2
 800fdf0:	d904      	bls.n	800fdfc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800fdf2:	6824      	ldr	r4, [r4, #0]
 800fdf4:	f841 4b04 	str.w	r4, [r1], #4
 800fdf8:	3204      	adds	r2, #4
 800fdfa:	e7f7      	b.n	800fdec <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800fdfc:	f003 0303 	and.w	r3, r3, #3
 800fe00:	440b      	add	r3, r1
 800fe02:	3a01      	subs	r2, #1
 800fe04:	428b      	cmp	r3, r1
 800fe06:	d90c      	bls.n	800fe22 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800fe08:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800fe0c:	f801 0b01 	strb.w	r0, [r1], #1
 800fe10:	e7f8      	b.n	800fe04 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800fe12:	0790      	lsls	r0, r2, #30
 800fe14:	d0e7      	beq.n	800fde6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800fe16:	f832 0b02 	ldrh.w	r0, [r2], #2
 800fe1a:	f821 0b02 	strh.w	r0, [r1], #2
 800fe1e:	3b02      	subs	r3, #2
 800fe20:	e7e1      	b.n	800fde6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800fe22:	2001      	movs	r0, #1
 800fe24:	bd10      	pop	{r4, pc}

0800fe26 <_ZN8touchgfx3HAL7noTouchEv>:
 800fe26:	b510      	push	{r4, lr}
 800fe28:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
 800fe2c:	4604      	mov	r4, r0
 800fe2e:	b153      	cbz	r3, 800fe46 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800fe30:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
 800fe34:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
 800fe38:	2101      	movs	r1, #1
 800fe3a:	301c      	adds	r0, #28
 800fe3c:	f015 fc30 	bl	80256a0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800fe40:	2300      	movs	r3, #0
 800fe42:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 800fe46:	bd10      	pop	{r4, pc}

0800fe48 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800fe48:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fe4c:	b085      	sub	sp, #20
 800fe4e:	ad04      	add	r5, sp, #16
 800fe50:	4604      	mov	r4, r0
 800fe52:	2000      	movs	r0, #0
 800fe54:	f845 0d04 	str.w	r0, [r5, #-4]!
 800fe58:	69a0      	ldr	r0, [r4, #24]
 800fe5a:	6806      	ldr	r6, [r0, #0]
 800fe5c:	9501      	str	r5, [sp, #4]
 800fe5e:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 800fe62:	9500      	str	r5, [sp, #0]
 800fe64:	6835      	ldr	r5, [r6, #0]
 800fe66:	4699      	mov	r9, r3
 800fe68:	460f      	mov	r7, r1
 800fe6a:	4690      	mov	r8, r2
 800fe6c:	47a8      	blx	r5
 800fe6e:	4d10      	ldr	r5, [pc, #64]	; (800feb0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800fe70:	4606      	mov	r6, r0
 800fe72:	f8a5 9000 	strh.w	r9, [r5]
 800fe76:	f7f3 fbd5 	bl	8003624 <_ZN8touchgfx3HAL3lcdEv>
 800fe7a:	6803      	ldr	r3, [r0, #0]
 800fe7c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fe7e:	4798      	blx	r3
 800fe80:	b128      	cbz	r0, 800fe8e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 800fe82:	2801      	cmp	r0, #1
 800fe84:	d00b      	beq.n	800fe9e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 800fe86:	4630      	mov	r0, r6
 800fe88:	b005      	add	sp, #20
 800fe8a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800fe8e:	882b      	ldrh	r3, [r5, #0]
 800fe90:	fb08 7203 	mla	r2, r8, r3, r7
 800fe94:	9b03      	ldr	r3, [sp, #12]
 800fe96:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800fe9a:	63e3      	str	r3, [r4, #60]	; 0x3c
 800fe9c:	e7f3      	b.n	800fe86 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800fe9e:	882a      	ldrh	r2, [r5, #0]
 800fea0:	9b03      	ldr	r3, [sp, #12]
 800fea2:	fb08 7202 	mla	r2, r8, r2, r7
 800fea6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800feaa:	1a9a      	subs	r2, r3, r2
 800feac:	63e2      	str	r2, [r4, #60]	; 0x3c
 800feae:	e7ea      	b.n	800fe86 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800feb0:	200137b6 	.word	0x200137b6

0800feb4 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800feb4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800feb6:	b08b      	sub	sp, #44	; 0x2c
 800feb8:	4617      	mov	r7, r2
 800feba:	4604      	mov	r4, r0
 800febc:	460e      	mov	r6, r1
 800febe:	461d      	mov	r5, r3
 800fec0:	f7f3 fbb0 	bl	8003624 <_ZN8touchgfx3HAL3lcdEv>
 800fec4:	6803      	ldr	r3, [r0, #0]
 800fec6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fec8:	4798      	blx	r3
 800feca:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800fece:	9007      	str	r0, [sp, #28]
 800fed0:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800fed4:	4b0d      	ldr	r3, [pc, #52]	; (800ff0c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800fed6:	6822      	ldr	r2, [r4, #0]
 800fed8:	881b      	ldrh	r3, [r3, #0]
 800feda:	9306      	str	r3, [sp, #24]
 800fedc:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800fee0:	9305      	str	r3, [sp, #20]
 800fee2:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800fee6:	9304      	str	r3, [sp, #16]
 800fee8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800feec:	9303      	str	r3, [sp, #12]
 800feee:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800fef2:	9302      	str	r3, [sp, #8]
 800fef4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800fef8:	e9cd 5300 	strd	r5, r3, [sp]
 800fefc:	4631      	mov	r1, r6
 800fefe:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 800ff00:	463b      	mov	r3, r7
 800ff02:	2200      	movs	r2, #0
 800ff04:	4620      	mov	r0, r4
 800ff06:	47a8      	blx	r5
 800ff08:	b00b      	add	sp, #44	; 0x2c
 800ff0a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ff0c:	200137b6 	.word	0x200137b6

0800ff10 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800ff10:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ff14:	4698      	mov	r8, r3
 800ff16:	6803      	ldr	r3, [r0, #0]
 800ff18:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 800ff1a:	4b15      	ldr	r3, [pc, #84]	; (800ff70 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800ff1c:	b08b      	sub	sp, #44	; 0x2c
 800ff1e:	4617      	mov	r7, r2
 800ff20:	f8b3 9000 	ldrh.w	r9, [r3]
 800ff24:	460e      	mov	r6, r1
 800ff26:	4604      	mov	r4, r0
 800ff28:	f7f3 fb7c 	bl	8003624 <_ZN8touchgfx3HAL3lcdEv>
 800ff2c:	6803      	ldr	r3, [r0, #0]
 800ff2e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ff30:	4798      	blx	r3
 800ff32:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800ff36:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800ff3a:	2302      	movs	r3, #2
 800ff3c:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800ff40:	2301      	movs	r3, #1
 800ff42:	9305      	str	r3, [sp, #20]
 800ff44:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800ff48:	9304      	str	r3, [sp, #16]
 800ff4a:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800ff4e:	9303      	str	r3, [sp, #12]
 800ff50:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800ff54:	9302      	str	r3, [sp, #8]
 800ff56:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800ff5a:	2200      	movs	r2, #0
 800ff5c:	e9cd 8300 	strd	r8, r3, [sp]
 800ff60:	4631      	mov	r1, r6
 800ff62:	463b      	mov	r3, r7
 800ff64:	4620      	mov	r0, r4
 800ff66:	47a8      	blx	r5
 800ff68:	b00b      	add	sp, #44	; 0x2c
 800ff6a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ff6e:	bf00      	nop
 800ff70:	200137b6 	.word	0x200137b6

0800ff74 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800ff74:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ff78:	4698      	mov	r8, r3
 800ff7a:	6803      	ldr	r3, [r0, #0]
 800ff7c:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 800ff7e:	4b11      	ldr	r3, [pc, #68]	; (800ffc4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800ff80:	b087      	sub	sp, #28
 800ff82:	f8b3 9000 	ldrh.w	r9, [r3]
 800ff86:	460e      	mov	r6, r1
 800ff88:	4617      	mov	r7, r2
 800ff8a:	4604      	mov	r4, r0
 800ff8c:	f7f3 fb4a 	bl	8003624 <_ZN8touchgfx3HAL3lcdEv>
 800ff90:	6803      	ldr	r3, [r0, #0]
 800ff92:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ff94:	4798      	blx	r3
 800ff96:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 800ff9a:	f8cd 900c 	str.w	r9, [sp, #12]
 800ff9e:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800ffa2:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 800ffa6:	9302      	str	r3, [sp, #8]
 800ffa8:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800ffac:	9301      	str	r3, [sp, #4]
 800ffae:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800ffb2:	9300      	str	r3, [sp, #0]
 800ffb4:	463a      	mov	r2, r7
 800ffb6:	4643      	mov	r3, r8
 800ffb8:	4631      	mov	r1, r6
 800ffba:	4620      	mov	r0, r4
 800ffbc:	47a8      	blx	r5
 800ffbe:	b007      	add	sp, #28
 800ffc0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ffc4:	200137b6 	.word	0x200137b6

0800ffc8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800ffc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ffcc:	4604      	mov	r4, r0
 800ffce:	b08f      	sub	sp, #60	; 0x3c
 800ffd0:	4610      	mov	r0, r2
 800ffd2:	460d      	mov	r5, r1
 800ffd4:	4691      	mov	r9, r2
 800ffd6:	461e      	mov	r6, r3
 800ffd8:	f007 fefc 	bl	8017dd4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800ffdc:	2800      	cmp	r0, #0
 800ffde:	f000 809d 	beq.w	801011c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 800ffe2:	6823      	ldr	r3, [r4, #0]
 800ffe4:	f8df b198 	ldr.w	fp, [pc, #408]	; 8010180 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800ffe8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ffea:	f8df a198 	ldr.w	sl, [pc, #408]	; 8010184 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 800ffee:	4f61      	ldr	r7, [pc, #388]	; (8010174 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800fff0:	4620      	mov	r0, r4
 800fff2:	4798      	blx	r3
 800fff4:	6823      	ldr	r3, [r4, #0]
 800fff6:	4620      	mov	r0, r4
 800fff8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fffa:	4798      	blx	r3
 800fffc:	f8bb 3000 	ldrh.w	r3, [fp]
 8010000:	9301      	str	r3, [sp, #4]
 8010002:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 8010006:	f8ba 3000 	ldrh.w	r3, [sl]
 801000a:	9302      	str	r3, [sp, #8]
 801000c:	883b      	ldrh	r3, [r7, #0]
 801000e:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 8010012:	9303      	str	r3, [sp, #12]
 8010014:	4b58      	ldr	r3, [pc, #352]	; (8010178 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8010016:	9305      	str	r3, [sp, #20]
 8010018:	881a      	ldrh	r2, [r3, #0]
 801001a:	9204      	str	r2, [sp, #16]
 801001c:	4640      	mov	r0, r8
 801001e:	f007 ff6d 	bl	8017efc <_ZNK8touchgfx6Bitmap8getWidthEv>
 8010022:	8038      	strh	r0, [r7, #0]
 8010024:	4640      	mov	r0, r8
 8010026:	f007 ff9d 	bl	8017f64 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801002a:	9b05      	ldr	r3, [sp, #20]
 801002c:	b280      	uxth	r0, r0
 801002e:	8018      	strh	r0, [r3, #0]
 8010030:	4b52      	ldr	r3, [pc, #328]	; (801017c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 8010032:	781b      	ldrb	r3, [r3, #0]
 8010034:	2b00      	cmp	r3, #0
 8010036:	d174      	bne.n	8010122 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 8010038:	883b      	ldrh	r3, [r7, #0]
 801003a:	f8ab 3000 	strh.w	r3, [fp]
 801003e:	f8aa 0000 	strh.w	r0, [sl]
 8010042:	4648      	mov	r0, r9
 8010044:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 8010048:	f007 fec4 	bl	8017dd4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 801004c:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 8010050:	2200      	movs	r2, #0
 8010052:	4611      	mov	r1, r2
 8010054:	4628      	mov	r0, r5
 8010056:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 801005a:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 801005e:	f7f2 fa26 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8010062:	2301      	movs	r3, #1
 8010064:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 8010068:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 801006c:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8010070:	2b00      	cmp	r3, #0
 8010072:	dd5c      	ble.n	801012e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8010074:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8010078:	2b00      	cmp	r3, #0
 801007a:	dd58      	ble.n	801012e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 801007c:	462a      	mov	r2, r5
 801007e:	ab0a      	add	r3, sp, #40	; 0x28
 8010080:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8010084:	6851      	ldr	r1, [r2, #4]
 8010086:	c303      	stmia	r3!, {r0, r1}
 8010088:	4631      	mov	r1, r6
 801008a:	a80a      	add	r0, sp, #40	; 0x28
 801008c:	f7ff fc06 	bl	800f89c <_ZN8touchgfx4RectaNERKS0_>
 8010090:	4b38      	ldr	r3, [pc, #224]	; (8010174 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8010092:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010096:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 801009a:	2100      	movs	r1, #0
 801009c:	aa0a      	add	r2, sp, #40	; 0x28
 801009e:	4b36      	ldr	r3, [pc, #216]	; (8010178 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 80100a0:	910c      	str	r1, [sp, #48]	; 0x30
 80100a2:	e892 0003 	ldmia.w	r2, {r0, r1}
 80100a6:	f9b3 3000 	ldrsh.w	r3, [r3]
 80100aa:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80100ae:	ab08      	add	r3, sp, #32
 80100b0:	e883 0003 	stmia.w	r3, {r0, r1}
 80100b4:	4618      	mov	r0, r3
 80100b6:	a90c      	add	r1, sp, #48	; 0x30
 80100b8:	f7ff fbf0 	bl	800f89c <_ZN8touchgfx4RectaNERKS0_>
 80100bc:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 80100be:	2b00      	cmp	r3, #0
 80100c0:	d13c      	bne.n	801013c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 80100c2:	2000      	movs	r0, #0
 80100c4:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
 80100c8:	2600      	movs	r6, #0
 80100ca:	682a      	ldr	r2, [r5, #0]
 80100cc:	696b      	ldr	r3, [r5, #20]
 80100ce:	616e      	str	r6, [r5, #20]
 80100d0:	9305      	str	r3, [sp, #20]
 80100d2:	6892      	ldr	r2, [r2, #8]
 80100d4:	a908      	add	r1, sp, #32
 80100d6:	4628      	mov	r0, r5
 80100d8:	4790      	blx	r2
 80100da:	9b05      	ldr	r3, [sp, #20]
 80100dc:	616b      	str	r3, [r5, #20]
 80100de:	4652      	mov	r2, sl
 80100e0:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
 80100e4:	4649      	mov	r1, r9
 80100e6:	4628      	mov	r0, r5
 80100e8:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 80100ec:	f7f2 f9df 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 80100f0:	4b23      	ldr	r3, [pc, #140]	; (8010180 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 80100f2:	9a01      	ldr	r2, [sp, #4]
 80100f4:	801a      	strh	r2, [r3, #0]
 80100f6:	4b23      	ldr	r3, [pc, #140]	; (8010184 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 80100f8:	9a02      	ldr	r2, [sp, #8]
 80100fa:	801a      	strh	r2, [r3, #0]
 80100fc:	4b1d      	ldr	r3, [pc, #116]	; (8010174 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 80100fe:	9a03      	ldr	r2, [sp, #12]
 8010100:	801a      	strh	r2, [r3, #0]
 8010102:	4b1d      	ldr	r3, [pc, #116]	; (8010178 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8010104:	9a04      	ldr	r2, [sp, #16]
 8010106:	801a      	strh	r2, [r3, #0]
 8010108:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 801010c:	6823      	ldr	r3, [r4, #0]
 801010e:	4620      	mov	r0, r4
 8010110:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010112:	4798      	blx	r3
 8010114:	6823      	ldr	r3, [r4, #0]
 8010116:	4620      	mov	r0, r4
 8010118:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801011a:	4798      	blx	r3
 801011c:	b00f      	add	sp, #60	; 0x3c
 801011e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010122:	883b      	ldrh	r3, [r7, #0]
 8010124:	f8ab 0000 	strh.w	r0, [fp]
 8010128:	f8aa 3000 	strh.w	r3, [sl]
 801012c:	e789      	b.n	8010042 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 801012e:	462a      	mov	r2, r5
 8010130:	ab0a      	add	r3, sp, #40	; 0x28
 8010132:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8010136:	6851      	ldr	r1, [r2, #4]
 8010138:	c303      	stmia	r3!, {r0, r1}
 801013a:	e7a9      	b.n	8010090 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 801013c:	a807      	add	r0, sp, #28
 801013e:	f008 f84d 	bl	80181dc <_ZNK8touchgfx6Bitmap9getFormatEv>
 8010142:	4606      	mov	r6, r0
 8010144:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 8010146:	6803      	ldr	r3, [r0, #0]
 8010148:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801014a:	4798      	blx	r3
 801014c:	4286      	cmp	r6, r0
 801014e:	d1b8      	bne.n	80100c2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 8010150:	f7f3 fa68 	bl	8003624 <_ZN8touchgfx3HAL3lcdEv>
 8010154:	6803      	ldr	r3, [r0, #0]
 8010156:	4606      	mov	r6, r0
 8010158:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801015a:	9305      	str	r3, [sp, #20]
 801015c:	a807      	add	r0, sp, #28
 801015e:	f008 f83d 	bl	80181dc <_ZNK8touchgfx6Bitmap9getFormatEv>
 8010162:	9b05      	ldr	r3, [sp, #20]
 8010164:	4601      	mov	r1, r0
 8010166:	4630      	mov	r0, r6
 8010168:	4798      	blx	r3
 801016a:	f080 0001 	eor.w	r0, r0, #1
 801016e:	b2c0      	uxtb	r0, r0
 8010170:	e7a8      	b.n	80100c4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 8010172:	bf00      	nop
 8010174:	200137b0 	.word	0x200137b0
 8010178:	200137b2 	.word	0x200137b2
 801017c:	200137b4 	.word	0x200137b4
 8010180:	200137b6 	.word	0x200137b6
 8010184:	200137b8 	.word	0x200137b8

08010188 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8010188:	b510      	push	{r4, lr}
 801018a:	4b07      	ldr	r3, [pc, #28]	; (80101a8 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 801018c:	781b      	ldrb	r3, [r3, #0]
 801018e:	4604      	mov	r4, r0
 8010190:	b13b      	cbz	r3, 80101a2 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8010192:	6803      	ldr	r3, [r0, #0]
 8010194:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010196:	4798      	blx	r3
 8010198:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 801019a:	4283      	cmp	r3, r0
 801019c:	d101      	bne.n	80101a2 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 801019e:	6c20      	ldr	r0, [r4, #64]	; 0x40
 80101a0:	bd10      	pop	{r4, pc}
 80101a2:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 80101a4:	e7fc      	b.n	80101a0 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 80101a6:	bf00      	nop
 80101a8:	200137ba 	.word	0x200137ba

080101ac <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 80101ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80101b0:	b08a      	sub	sp, #40	; 0x28
 80101b2:	461d      	mov	r5, r3
 80101b4:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80101b8:	e9cd 3101 	strd	r3, r1, [sp, #4]
 80101bc:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80101c0:	f8ad 3018 	strh.w	r3, [sp, #24]
 80101c4:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80101c8:	f8ad 301a 	strh.w	r3, [sp, #26]
 80101cc:	2400      	movs	r4, #0
 80101ce:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80101d2:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 80101d6:	f8ad 301c 	strh.w	r3, [sp, #28]
 80101da:	4690      	mov	r8, r2
 80101dc:	4607      	mov	r7, r0
 80101de:	9404      	str	r4, [sp, #16]
 80101e0:	f88d 4020 	strb.w	r4, [sp, #32]
 80101e4:	f7ff ffd0 	bl	8010188 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80101e8:	fb06 8505 	mla	r5, r6, r5, r8
 80101ec:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80101f0:	6878      	ldr	r0, [r7, #4]
 80101f2:	9505      	str	r5, [sp, #20]
 80101f4:	f8ad 601e 	strh.w	r6, [sp, #30]
 80101f8:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 80101fc:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 8010200:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8010204:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8010208:	6803      	ldr	r3, [r0, #0]
 801020a:	a901      	add	r1, sp, #4
 801020c:	685b      	ldr	r3, [r3, #4]
 801020e:	4798      	blx	r3
 8010210:	b00a      	add	sp, #40	; 0x28
 8010212:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010216 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 8010216:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801021a:	b08b      	sub	sp, #44	; 0x2c
 801021c:	2400      	movs	r4, #0
 801021e:	461d      	mov	r5, r3
 8010220:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8010224:	4688      	mov	r8, r1
 8010226:	4691      	mov	r9, r2
 8010228:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 801022c:	9404      	str	r4, [sp, #16]
 801022e:	4607      	mov	r7, r0
 8010230:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8010234:	f7ff ffa8 	bl	8010188 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010238:	fb06 9505 	mla	r5, r6, r5, r9
 801023c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8010240:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010244:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8010248:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 801024c:	6878      	ldr	r0, [r7, #4]
 801024e:	9505      	str	r5, [sp, #20]
 8010250:	f8ad 301a 	strh.w	r3, [sp, #26]
 8010254:	f8ad 401c 	strh.w	r4, [sp, #28]
 8010258:	f8ad 601e 	strh.w	r6, [sp, #30]
 801025c:	f8cd 8010 	str.w	r8, [sp, #16]
 8010260:	f8ad 4020 	strh.w	r4, [sp, #32]
 8010264:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8010268:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 801026c:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8010270:	6803      	ldr	r3, [r0, #0]
 8010272:	a901      	add	r1, sp, #4
 8010274:	685b      	ldr	r3, [r3, #4]
 8010276:	4798      	blx	r3
 8010278:	b00b      	add	sp, #44	; 0x2c
 801027a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

08010280 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 8010280:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010284:	b08a      	sub	sp, #40	; 0x28
 8010286:	4698      	mov	r8, r3
 8010288:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 801028c:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 8010290:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 8010294:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 8010298:	2300      	movs	r3, #0
 801029a:	2d0b      	cmp	r5, #11
 801029c:	4606      	mov	r6, r0
 801029e:	9304      	str	r3, [sp, #16]
 80102a0:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 80102a4:	d138      	bne.n	8010318 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 80102a6:	2380      	movs	r3, #128	; 0x80
 80102a8:	e9cd 3101 	strd	r3, r1, [sp, #4]
 80102ac:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80102b0:	f8ad 3018 	strh.w	r3, [sp, #24]
 80102b4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80102b8:	f8ad 301a 	strh.w	r3, [sp, #26]
 80102bc:	f88d 0020 	strb.w	r0, [sp, #32]
 80102c0:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 80102c4:	f8ad 301c 	strh.w	r3, [sp, #28]
 80102c8:	4630      	mov	r0, r6
 80102ca:	9203      	str	r2, [sp, #12]
 80102cc:	f7ff ff5c 	bl	8010188 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80102d0:	2c0b      	cmp	r4, #11
 80102d2:	bf98      	it	ls
 80102d4:	4b1b      	ldrls	r3, [pc, #108]	; (8010344 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 80102d6:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 80102da:	bf98      	it	ls
 80102dc:	5d19      	ldrbls	r1, [r3, r4]
 80102de:	f8ad 701e 	strh.w	r7, [sp, #30]
 80102e2:	bf88      	it	hi
 80102e4:	2100      	movhi	r1, #0
 80102e6:	fb02 8307 	mla	r3, r2, r7, r8
 80102ea:	10c9      	asrs	r1, r1, #3
 80102ec:	fb01 0003 	mla	r0, r1, r3, r0
 80102f0:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 80102f4:	9005      	str	r0, [sp, #20]
 80102f6:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 80102fa:	6870      	ldr	r0, [r6, #4]
 80102fc:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 8010300:	2300      	movs	r3, #0
 8010302:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8010306:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 801030a:	6803      	ldr	r3, [r0, #0]
 801030c:	a901      	add	r1, sp, #4
 801030e:	685b      	ldr	r3, [r3, #4]
 8010310:	4798      	blx	r3
 8010312:	b00a      	add	sp, #40	; 0x28
 8010314:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010318:	2d02      	cmp	r5, #2
 801031a:	d109      	bne.n	8010330 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 801031c:	28ff      	cmp	r0, #255	; 0xff
 801031e:	d105      	bne.n	801032c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 8010320:	f1bc 0f00 	cmp.w	ip, #0
 8010324:	bf14      	ite	ne
 8010326:	2340      	movne	r3, #64	; 0x40
 8010328:	2320      	moveq	r3, #32
 801032a:	e7bd      	b.n	80102a8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 801032c:	2340      	movs	r3, #64	; 0x40
 801032e:	e7bb      	b.n	80102a8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8010330:	28ff      	cmp	r0, #255	; 0xff
 8010332:	d105      	bne.n	8010340 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 8010334:	f1bc 0f00 	cmp.w	ip, #0
 8010338:	bf14      	ite	ne
 801033a:	2304      	movne	r3, #4
 801033c:	2301      	moveq	r3, #1
 801033e:	e7b3      	b.n	80102a8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8010340:	2304      	movs	r3, #4
 8010342:	e7b1      	b.n	80102a8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8010344:	0802c3cc 	.word	0x0802c3cc

08010348 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 8010348:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801034c:	b08b      	sub	sp, #44	; 0x2c
 801034e:	461d      	mov	r5, r3
 8010350:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 8010354:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 8010358:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 801035c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8010360:	bf14      	ite	ne
 8010362:	2308      	movne	r3, #8
 8010364:	2302      	moveq	r3, #2
 8010366:	2400      	movs	r4, #0
 8010368:	e9cd 3401 	strd	r3, r4, [sp, #4]
 801036c:	4688      	mov	r8, r1
 801036e:	4693      	mov	fp, r2
 8010370:	9404      	str	r4, [sp, #16]
 8010372:	4607      	mov	r7, r0
 8010374:	f7ff ff08 	bl	8010188 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010378:	2e0b      	cmp	r6, #11
 801037a:	bf98      	it	ls
 801037c:	4b15      	ldrls	r3, [pc, #84]	; (80103d4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 801037e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8010382:	bf98      	it	ls
 8010384:	5d9c      	ldrbls	r4, [r3, r6]
 8010386:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 801038a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801038e:	fb05 b50a 	mla	r5, r5, sl, fp
 8010392:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8010396:	f8ad 301a 	strh.w	r3, [sp, #26]
 801039a:	10e4      	asrs	r4, r4, #3
 801039c:	fb04 0405 	mla	r4, r4, r5, r0
 80103a0:	2300      	movs	r3, #0
 80103a2:	6878      	ldr	r0, [r7, #4]
 80103a4:	9405      	str	r4, [sp, #20]
 80103a6:	f8ad 301c 	strh.w	r3, [sp, #28]
 80103aa:	f8ad a01e 	strh.w	sl, [sp, #30]
 80103ae:	f8cd 8010 	str.w	r8, [sp, #16]
 80103b2:	f88d 9020 	strb.w	r9, [sp, #32]
 80103b6:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 80103ba:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 80103be:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 80103c2:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 80103c6:	6803      	ldr	r3, [r0, #0]
 80103c8:	a901      	add	r1, sp, #4
 80103ca:	685b      	ldr	r3, [r3, #4]
 80103cc:	4798      	blx	r3
 80103ce:	b00b      	add	sp, #44	; 0x2c
 80103d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80103d4:	0802c3cc 	.word	0x0802c3cc

080103d8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 80103d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80103dc:	461e      	mov	r6, r3
 80103de:	4b0a      	ldr	r3, [pc, #40]	; (8010408 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 80103e0:	460f      	mov	r7, r1
 80103e2:	881d      	ldrh	r5, [r3, #0]
 80103e4:	4690      	mov	r8, r2
 80103e6:	f7f3 f91d 	bl	8003624 <_ZN8touchgfx3HAL3lcdEv>
 80103ea:	6803      	ldr	r3, [r0, #0]
 80103ec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80103ee:	4798      	blx	r3
 80103f0:	280b      	cmp	r0, #11
 80103f2:	bf9a      	itte	ls
 80103f4:	4b05      	ldrls	r3, [pc, #20]	; (801040c <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 80103f6:	5c1c      	ldrbls	r4, [r3, r0]
 80103f8:	2400      	movhi	r4, #0
 80103fa:	fb08 7005 	mla	r0, r8, r5, r7
 80103fe:	10e4      	asrs	r4, r4, #3
 8010400:	fb04 6000 	mla	r0, r4, r0, r6
 8010404:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010408:	200137b6 	.word	0x200137b6
 801040c:	0802c3cc 	.word	0x0802c3cc

08010410 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 8010410:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010412:	b08b      	sub	sp, #44	; 0x2c
 8010414:	461f      	mov	r7, r3
 8010416:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801041a:	e9cd 3101 	strd	r3, r1, [sp, #4]
 801041e:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8010422:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010426:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 801042a:	f8ad 301a 	strh.w	r3, [sp, #26]
 801042e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8010432:	f8ad 301c 	strh.w	r3, [sp, #28]
 8010436:	2500      	movs	r5, #0
 8010438:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 801043c:	f88d 3020 	strb.w	r3, [sp, #32]
 8010440:	4604      	mov	r4, r0
 8010442:	4616      	mov	r6, r2
 8010444:	9504      	str	r5, [sp, #16]
 8010446:	f7ff fe9f 	bl	8010188 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 801044a:	463a      	mov	r2, r7
 801044c:	4631      	mov	r1, r6
 801044e:	4603      	mov	r3, r0
 8010450:	4620      	mov	r0, r4
 8010452:	f7ff ffc1 	bl	80103d8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8010456:	4b0e      	ldr	r3, [pc, #56]	; (8010490 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 8010458:	9005      	str	r0, [sp, #20]
 801045a:	881b      	ldrh	r3, [r3, #0]
 801045c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8010460:	f7f3 f8e0 	bl	8003624 <_ZN8touchgfx3HAL3lcdEv>
 8010464:	6803      	ldr	r3, [r0, #0]
 8010466:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010468:	4798      	blx	r3
 801046a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801046c:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 8010470:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8010474:	9304      	str	r3, [sp, #16]
 8010476:	6860      	ldr	r0, [r4, #4]
 8010478:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 801047c:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8010480:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 8010484:	6803      	ldr	r3, [r0, #0]
 8010486:	a901      	add	r1, sp, #4
 8010488:	685b      	ldr	r3, [r3, #4]
 801048a:	4798      	blx	r3
 801048c:	b00b      	add	sp, #44	; 0x2c
 801048e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010490:	200137b6 	.word	0x200137b6

08010494 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 8010494:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010496:	b08d      	sub	sp, #52	; 0x34
 8010498:	466b      	mov	r3, sp
 801049a:	e883 0006 	stmia.w	r3, {r1, r2}
 801049e:	2300      	movs	r3, #0
 80104a0:	9306      	str	r3, [sp, #24]
 80104a2:	6803      	ldr	r3, [r0, #0]
 80104a4:	f8bd 6000 	ldrh.w	r6, [sp]
 80104a8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80104aa:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 80104ae:	2501      	movs	r5, #1
 80104b0:	9503      	str	r5, [sp, #12]
 80104b2:	4604      	mov	r4, r0
 80104b4:	4798      	blx	r3
 80104b6:	463a      	mov	r2, r7
 80104b8:	4631      	mov	r1, r6
 80104ba:	4603      	mov	r3, r0
 80104bc:	4620      	mov	r0, r4
 80104be:	f7ff ff8b 	bl	80103d8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80104c2:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80104c4:	9307      	str	r3, [sp, #28]
 80104c6:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80104ca:	f8ad 3020 	strh.w	r3, [sp, #32]
 80104ce:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80104d2:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80104d6:	4b0f      	ldr	r3, [pc, #60]	; (8010514 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 80104d8:	9004      	str	r0, [sp, #16]
 80104da:	881b      	ldrh	r3, [r3, #0]
 80104dc:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80104e0:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 80104e4:	f7f3 f89e 	bl	8003624 <_ZN8touchgfx3HAL3lcdEv>
 80104e8:	6803      	ldr	r3, [r0, #0]
 80104ea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80104ec:	4798      	blx	r3
 80104ee:	23ff      	movs	r3, #255	; 0xff
 80104f0:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 80104f4:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 80104f8:	6860      	ldr	r0, [r4, #4]
 80104fa:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 80104fe:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 8010502:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 8010506:	6803      	ldr	r3, [r0, #0]
 8010508:	a903      	add	r1, sp, #12
 801050a:	685b      	ldr	r3, [r3, #4]
 801050c:	4798      	blx	r3
 801050e:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8010510:	b00d      	add	sp, #52	; 0x34
 8010512:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010514:	200137b6 	.word	0x200137b6

08010518 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 8010518:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801051c:	b08c      	sub	sp, #48	; 0x30
 801051e:	461e      	mov	r6, r3
 8010520:	466d      	mov	r5, sp
 8010522:	2300      	movs	r3, #0
 8010524:	e885 0006 	stmia.w	r5, {r1, r2}
 8010528:	9306      	str	r3, [sp, #24]
 801052a:	6803      	ldr	r3, [r0, #0]
 801052c:	f8bd 7000 	ldrh.w	r7, [sp]
 8010530:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010532:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 8010536:	2501      	movs	r5, #1
 8010538:	9503      	str	r5, [sp, #12]
 801053a:	4604      	mov	r4, r0
 801053c:	4798      	blx	r3
 801053e:	4642      	mov	r2, r8
 8010540:	4639      	mov	r1, r7
 8010542:	4603      	mov	r3, r0
 8010544:	4620      	mov	r0, r4
 8010546:	f7ff ff47 	bl	80103d8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 801054a:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 801054e:	f8ad 3020 	strh.w	r3, [sp, #32]
 8010552:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8010556:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801055a:	4b11      	ldr	r3, [pc, #68]	; (80105a0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 801055c:	9004      	str	r0, [sp, #16]
 801055e:	881b      	ldrh	r3, [r3, #0]
 8010560:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8010564:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8010566:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 801056a:	9607      	str	r6, [sp, #28]
 801056c:	f7f3 f85a 	bl	8003624 <_ZN8touchgfx3HAL3lcdEv>
 8010570:	6803      	ldr	r3, [r0, #0]
 8010572:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010574:	4798      	blx	r3
 8010576:	23ff      	movs	r3, #255	; 0xff
 8010578:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 801057c:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8010580:	6860      	ldr	r0, [r4, #4]
 8010582:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8010586:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 801058a:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 801058e:	6803      	ldr	r3, [r0, #0]
 8010590:	a903      	add	r1, sp, #12
 8010592:	685b      	ldr	r3, [r3, #4]
 8010594:	4798      	blx	r3
 8010596:	4630      	mov	r0, r6
 8010598:	b00c      	add	sp, #48	; 0x30
 801059a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801059e:	bf00      	nop
 80105a0:	200137b6 	.word	0x200137b6

080105a4 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 80105a4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80105a6:	b085      	sub	sp, #20
 80105a8:	ac02      	add	r4, sp, #8
 80105aa:	e884 0006 	stmia.w	r4, {r1, r2}
 80105ae:	4605      	mov	r5, r0
 80105b0:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 80105b4:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 80105b8:	f7ff fde6 	bl	8010188 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80105bc:	463a      	mov	r2, r7
 80105be:	4603      	mov	r3, r0
 80105c0:	4631      	mov	r1, r6
 80105c2:	4628      	mov	r0, r5
 80105c4:	f7ff ff08 	bl	80103d8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80105c8:	4a05      	ldr	r2, [pc, #20]	; (80105e0 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 80105ca:	682b      	ldr	r3, [r5, #0]
 80105cc:	8812      	ldrh	r2, [r2, #0]
 80105ce:	9200      	str	r2, [sp, #0]
 80105d0:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 80105d2:	e894 0006 	ldmia.w	r4, {r1, r2}
 80105d6:	4603      	mov	r3, r0
 80105d8:	4628      	mov	r0, r5
 80105da:	47b0      	blx	r6
 80105dc:	b005      	add	sp, #20
 80105de:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80105e0:	200137b6 	.word	0x200137b6

080105e4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 80105e4:	b570      	push	{r4, r5, r6, lr}
 80105e6:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
 80105ea:	4604      	mov	r4, r0
 80105ec:	b19b      	cbz	r3, 8010616 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 80105ee:	2002      	movs	r0, #2
 80105f0:	f7f0 f8ec 	bl	80007cc <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 80105f4:	2300      	movs	r3, #0
 80105f6:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 80105fa:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 80105fe:	6823      	ldr	r3, [r4, #0]
 8010600:	4620      	mov	r0, r4
 8010602:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 8010606:	f7ff fdbf 	bl	8010188 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 801060a:	462b      	mov	r3, r5
 801060c:	4601      	mov	r1, r0
 801060e:	4620      	mov	r0, r4
 8010610:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010614:	4718      	bx	r3
 8010616:	bd70      	pop	{r4, r5, r6, pc}

08010618 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 8010618:	b538      	push	{r3, r4, r5, lr}
 801061a:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
 801061e:	428b      	cmp	r3, r1
 8010620:	4604      	mov	r4, r0
 8010622:	460d      	mov	r5, r1
 8010624:	d006      	beq.n	8010634 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 8010626:	6803      	ldr	r3, [r0, #0]
 8010628:	b929      	cbnz	r1, 8010636 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 801062a:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 801062e:	4798      	blx	r3
 8010630:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
 8010634:	bd38      	pop	{r3, r4, r5, pc}
 8010636:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 801063a:	e7f8      	b.n	801062e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0801063c <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 801063c:	b510      	push	{r4, lr}
 801063e:	4b0d      	ldr	r3, [pc, #52]	; (8010674 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 8010640:	781b      	ldrb	r3, [r3, #0]
 8010642:	4604      	mov	r4, r0
 8010644:	b95b      	cbnz	r3, 801065e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8010646:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 801064a:	2b02      	cmp	r3, #2
 801064c:	d007      	beq.n	801065e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 801064e:	6840      	ldr	r0, [r0, #4]
 8010650:	f000 f92c 	bl	80108ac <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 8010654:	b118      	cbz	r0, 801065e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8010656:	6862      	ldr	r2, [r4, #4]
 8010658:	7a53      	ldrb	r3, [r2, #9]
 801065a:	2b00      	cmp	r3, #0
 801065c:	d0fc      	beq.n	8010658 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 801065e:	f7f0 f9ed 	bl	8000a3c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8010662:	4620      	mov	r0, r4
 8010664:	2100      	movs	r1, #0
 8010666:	f7ff ffd7 	bl	8010618 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 801066a:	4620      	mov	r0, r4
 801066c:	f7ff fd8c 	bl	8010188 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010670:	bd10      	pop	{r4, pc}
 8010672:	bf00      	nop
 8010674:	200137ba 	.word	0x200137ba

08010678 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 8010678:	b570      	push	{r4, r5, r6, lr}
 801067a:	4604      	mov	r4, r0
 801067c:	6803      	ldr	r3, [r0, #0]
 801067e:	b919      	cbnz	r1, 8010688 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 8010680:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010682:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010686:	4718      	bx	r3
 8010688:	2200      	movs	r2, #0
 801068a:	f890 607b 	ldrb.w	r6, [r0, #123]	; 0x7b
 801068e:	f880 207b 	strb.w	r2, [r0, #123]	; 0x7b
 8010692:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010694:	4798      	blx	r3
 8010696:	6863      	ldr	r3, [r4, #4]
 8010698:	2101      	movs	r1, #1
 801069a:	4605      	mov	r5, r0
 801069c:	7299      	strb	r1, [r3, #10]
 801069e:	4620      	mov	r0, r4
 80106a0:	f884 607b 	strb.w	r6, [r4, #123]	; 0x7b
 80106a4:	f7ff ffb8 	bl	8010618 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 80106a8:	4628      	mov	r0, r5
 80106aa:	bd70      	pop	{r4, r5, r6, pc}

080106ac <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 80106ac:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 80106b0:	1a13      	subs	r3, r2, r0
 80106b2:	4258      	negs	r0, r3
 80106b4:	4158      	adcs	r0, r3
 80106b6:	4770      	bx	lr

080106b8 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 80106b8:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 80106bc:	1a9b      	subs	r3, r3, r2
 80106be:	2b00      	cmp	r3, #0
 80106c0:	bfdc      	itt	le
 80106c2:	6882      	ldrle	r2, [r0, #8]
 80106c4:	189b      	addle	r3, r3, r2
 80106c6:	2b01      	cmp	r3, #1
 80106c8:	bfcc      	ite	gt
 80106ca:	2000      	movgt	r0, #0
 80106cc:	2001      	movle	r0, #1
 80106ce:	4770      	bx	lr

080106d0 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 80106d0:	6902      	ldr	r2, [r0, #16]
 80106d2:	6843      	ldr	r3, [r0, #4]
 80106d4:	2024      	movs	r0, #36	; 0x24
 80106d6:	fb00 3002 	mla	r0, r0, r2, r3
 80106da:	4770      	bx	lr

080106dc <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 80106dc:	6803      	ldr	r3, [r0, #0]
 80106de:	691b      	ldr	r3, [r3, #16]
 80106e0:	4718      	bx	r3

080106e2 <_ZN8touchgfx13DMA_Interface7executeEv>:
 80106e2:	b570      	push	{r4, r5, r6, lr}
 80106e4:	2301      	movs	r3, #1
 80106e6:	7203      	strb	r3, [r0, #8]
 80106e8:	4604      	mov	r4, r0
 80106ea:	6840      	ldr	r0, [r0, #4]
 80106ec:	6803      	ldr	r3, [r0, #0]
 80106ee:	699b      	ldr	r3, [r3, #24]
 80106f0:	4798      	blx	r3
 80106f2:	6803      	ldr	r3, [r0, #0]
 80106f4:	2b40      	cmp	r3, #64	; 0x40
 80106f6:	4605      	mov	r5, r0
 80106f8:	d00c      	beq.n	8010714 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80106fa:	d810      	bhi.n	801071e <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 80106fc:	2b04      	cmp	r3, #4
 80106fe:	d01d      	beq.n	801073c <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 8010700:	d804      	bhi.n	801070c <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 8010702:	2b01      	cmp	r3, #1
 8010704:	d006      	beq.n	8010714 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8010706:	2b02      	cmp	r3, #2
 8010708:	d02c      	beq.n	8010764 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 801070a:	bd70      	pop	{r4, r5, r6, pc}
 801070c:	2b08      	cmp	r3, #8
 801070e:	d01d      	beq.n	801074c <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 8010710:	2b20      	cmp	r3, #32
 8010712:	d1fa      	bne.n	801070a <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 8010714:	6823      	ldr	r3, [r4, #0]
 8010716:	4620      	mov	r0, r4
 8010718:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801071a:	4798      	blx	r3
 801071c:	e013      	b.n	8010746 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 801071e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8010722:	d0f7      	beq.n	8010714 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8010724:	d804      	bhi.n	8010730 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 8010726:	2b80      	cmp	r3, #128	; 0x80
 8010728:	d0f4      	beq.n	8010714 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801072a:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 801072e:	e7f0      	b.n	8010712 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 8010730:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8010734:	d0ee      	beq.n	8010714 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8010736:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 801073a:	e7e5      	b.n	8010708 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 801073c:	6823      	ldr	r3, [r4, #0]
 801073e:	7f01      	ldrb	r1, [r0, #28]
 8010740:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010742:	4620      	mov	r0, r4
 8010744:	4798      	blx	r3
 8010746:	6823      	ldr	r3, [r4, #0]
 8010748:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801074a:	e006      	b.n	801075a <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 801074c:	6823      	ldr	r3, [r4, #0]
 801074e:	7f01      	ldrb	r1, [r0, #28]
 8010750:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010752:	4620      	mov	r0, r4
 8010754:	4798      	blx	r3
 8010756:	6823      	ldr	r3, [r4, #0]
 8010758:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801075a:	4629      	mov	r1, r5
 801075c:	4620      	mov	r0, r4
 801075e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010762:	4718      	bx	r3
 8010764:	6823      	ldr	r3, [r4, #0]
 8010766:	4620      	mov	r0, r4
 8010768:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801076a:	4798      	blx	r3
 801076c:	e7f3      	b.n	8010756 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0801076e <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 801076e:	4770      	bx	lr

08010770 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 8010770:	4770      	bx	lr

08010772 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 8010772:	4770      	bx	lr

08010774 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 8010774:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 8010778:	1ad2      	subs	r2, r2, r3
 801077a:	2a00      	cmp	r2, #0
 801077c:	b510      	push	{r4, lr}
 801077e:	bfdc      	itt	le
 8010780:	6884      	ldrle	r4, [r0, #8]
 8010782:	1912      	addle	r2, r2, r4
 8010784:	2a01      	cmp	r2, #1
 8010786:	dd16      	ble.n	80107b6 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 8010788:	6842      	ldr	r2, [r0, #4]
 801078a:	2424      	movs	r4, #36	; 0x24
 801078c:	fb04 2303 	mla	r3, r4, r3, r2
 8010790:	f101 0220 	add.w	r2, r1, #32
 8010794:	f851 4b04 	ldr.w	r4, [r1], #4
 8010798:	f843 4b04 	str.w	r4, [r3], #4
 801079c:	4291      	cmp	r1, r2
 801079e:	d1f9      	bne.n	8010794 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 80107a0:	780a      	ldrb	r2, [r1, #0]
 80107a2:	701a      	strb	r2, [r3, #0]
 80107a4:	68c3      	ldr	r3, [r0, #12]
 80107a6:	6882      	ldr	r2, [r0, #8]
 80107a8:	f3bf 8f5b 	dmb	ish
 80107ac:	3301      	adds	r3, #1
 80107ae:	429a      	cmp	r2, r3
 80107b0:	bfd8      	it	le
 80107b2:	1a9b      	suble	r3, r3, r2
 80107b4:	60c3      	str	r3, [r0, #12]
 80107b6:	bd10      	pop	{r4, pc}

080107b8 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 80107b8:	6903      	ldr	r3, [r0, #16]
 80107ba:	6882      	ldr	r2, [r0, #8]
 80107bc:	f3bf 8f5b 	dmb	ish
 80107c0:	3301      	adds	r3, #1
 80107c2:	429a      	cmp	r2, r3
 80107c4:	bfd8      	it	le
 80107c6:	1a9b      	suble	r3, r3, r2
 80107c8:	6103      	str	r3, [r0, #16]
 80107ca:	4770      	bx	lr

080107cc <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 80107cc:	b570      	push	{r4, r5, r6, lr}
 80107ce:	4604      	mov	r4, r0
 80107d0:	460e      	mov	r6, r1
 80107d2:	6860      	ldr	r0, [r4, #4]
 80107d4:	6803      	ldr	r3, [r0, #0]
 80107d6:	685b      	ldr	r3, [r3, #4]
 80107d8:	4798      	blx	r3
 80107da:	2800      	cmp	r0, #0
 80107dc:	d1f9      	bne.n	80107d2 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 80107de:	4d0d      	ldr	r5, [pc, #52]	; (8010814 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 80107e0:	6828      	ldr	r0, [r5, #0]
 80107e2:	6803      	ldr	r3, [r0, #0]
 80107e4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80107e6:	4798      	blx	r3
 80107e8:	f7f0 f936 	bl	8000a58 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 80107ec:	6828      	ldr	r0, [r5, #0]
 80107ee:	2101      	movs	r1, #1
 80107f0:	f7ff ff12 	bl	8010618 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 80107f4:	6860      	ldr	r0, [r4, #4]
 80107f6:	6803      	ldr	r3, [r0, #0]
 80107f8:	4631      	mov	r1, r6
 80107fa:	689b      	ldr	r3, [r3, #8]
 80107fc:	4798      	blx	r3
 80107fe:	6823      	ldr	r3, [r4, #0]
 8010800:	4620      	mov	r0, r4
 8010802:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010804:	4798      	blx	r3
 8010806:	6828      	ldr	r0, [r5, #0]
 8010808:	6803      	ldr	r3, [r0, #0]
 801080a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801080e:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8010810:	4718      	bx	r3
 8010812:	bf00      	nop
 8010814:	200137bc 	.word	0x200137bc

08010818 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 8010818:	b508      	push	{r3, lr}
 801081a:	f7f0 f90f 	bl	8000a3c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 801081e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8010822:	f7f0 b913 	b.w	8000a4c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08010826 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 8010826:	b510      	push	{r4, lr}
 8010828:	2114      	movs	r1, #20
 801082a:	4604      	mov	r4, r0
 801082c:	f016 fea7 	bl	802757e <_ZdlPvj>
 8010830:	4620      	mov	r0, r4
 8010832:	bd10      	pop	{r4, pc}

08010834 <_ZN8touchgfx13DMA_Interface5startEv>:
 8010834:	b510      	push	{r4, lr}
 8010836:	4604      	mov	r4, r0
 8010838:	6840      	ldr	r0, [r0, #4]
 801083a:	6803      	ldr	r3, [r0, #0]
 801083c:	681b      	ldr	r3, [r3, #0]
 801083e:	4798      	blx	r3
 8010840:	b948      	cbnz	r0, 8010856 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8010842:	7a63      	ldrb	r3, [r4, #9]
 8010844:	b13b      	cbz	r3, 8010856 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8010846:	7a23      	ldrb	r3, [r4, #8]
 8010848:	b92b      	cbnz	r3, 8010856 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 801084a:	6823      	ldr	r3, [r4, #0]
 801084c:	4620      	mov	r0, r4
 801084e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010850:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010854:	4718      	bx	r3
 8010856:	bd10      	pop	{r4, pc}

08010858 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 8010858:	b570      	push	{r4, r5, r6, lr}
 801085a:	4604      	mov	r4, r0
 801085c:	6840      	ldr	r0, [r0, #4]
 801085e:	6803      	ldr	r3, [r0, #0]
 8010860:	681b      	ldr	r3, [r3, #0]
 8010862:	4798      	blx	r3
 8010864:	4605      	mov	r5, r0
 8010866:	b930      	cbnz	r0, 8010876 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8010868:	7a23      	ldrb	r3, [r4, #8]
 801086a:	b123      	cbz	r3, 8010876 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 801086c:	6860      	ldr	r0, [r4, #4]
 801086e:	6803      	ldr	r3, [r0, #0]
 8010870:	695b      	ldr	r3, [r3, #20]
 8010872:	4798      	blx	r3
 8010874:	7225      	strb	r5, [r4, #8]
 8010876:	6860      	ldr	r0, [r4, #4]
 8010878:	6803      	ldr	r3, [r0, #0]
 801087a:	681b      	ldr	r3, [r3, #0]
 801087c:	4798      	blx	r3
 801087e:	b928      	cbnz	r0, 801088c <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 8010880:	6823      	ldr	r3, [r4, #0]
 8010882:	4620      	mov	r0, r4
 8010884:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010886:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801088a:	4718      	bx	r3
 801088c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010890:	f7f0 b8ea 	b.w	8000a68 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

08010894 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 8010894:	b510      	push	{r4, lr}
 8010896:	4c04      	ldr	r4, [pc, #16]	; (80108a8 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 8010898:	6082      	str	r2, [r0, #8]
 801089a:	2200      	movs	r2, #0
 801089c:	e9c0 4100 	strd	r4, r1, [r0]
 80108a0:	e9c0 2203 	strd	r2, r2, [r0, #12]
 80108a4:	bd10      	pop	{r4, pc}
 80108a6:	bf00      	nop
 80108a8:	0802c3e0 	.word	0x0802c3e0

080108ac <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 80108ac:	6840      	ldr	r0, [r0, #4]
 80108ae:	6803      	ldr	r3, [r0, #0]
 80108b0:	681b      	ldr	r3, [r3, #0]
 80108b2:	4718      	bx	r3

080108b4 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 80108b4:	4b06      	ldr	r3, [pc, #24]	; (80108d0 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 80108b6:	60c1      	str	r1, [r0, #12]
 80108b8:	094a      	lsrs	r2, r1, #5
 80108ba:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 80108be:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80108c2:	4313      	orrs	r3, r2
 80108c4:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80108c8:	4319      	orrs	r1, r3
 80108ca:	8201      	strh	r1, [r0, #16]
 80108cc:	4770      	bx	lr
 80108ce:	bf00      	nop
 80108d0:	fffff800 	.word	0xfffff800

080108d4 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 80108d4:	f1a0 0008 	sub.w	r0, r0, #8
 80108d8:	e7ec      	b.n	80108b4 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 80108da:	bf00      	nop

080108dc <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 80108dc:	b508      	push	{r3, lr}
 80108de:	4b05      	ldr	r3, [pc, #20]	; (80108f4 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 80108e0:	6818      	ldr	r0, [r3, #0]
 80108e2:	6803      	ldr	r3, [r0, #0]
 80108e4:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 80108e8:	4798      	blx	r3
 80108ea:	1e43      	subs	r3, r0, #1
 80108ec:	4258      	negs	r0, r3
 80108ee:	4158      	adcs	r0, r3
 80108f0:	bd08      	pop	{r3, pc}
 80108f2:	bf00      	nop
 80108f4:	200137bc 	.word	0x200137bc

080108f8 <_ZN8touchgfx13PainterRGB565D1Ev>:
 80108f8:	4770      	bx	lr

080108fa <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 80108fa:	3808      	subs	r0, #8
 80108fc:	4770      	bx	lr

080108fe <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 80108fe:	b430      	push	{r4, r5}
 8010900:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 8010904:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 8010908:	8a02      	ldrh	r2, [r0, #16]
 801090a:	9202      	str	r2, [sp, #8]
 801090c:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8010910:	68c2      	ldr	r2, [r0, #12]
 8010912:	4629      	mov	r1, r5
 8010914:	4620      	mov	r0, r4
 8010916:	bc30      	pop	{r4, r5}
 8010918:	f7f0 ba6a 	b.w	8000df0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

0801091c <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 801091c:	f7f0 ba5e 	b.w	8000ddc <_ZN8touchgfx5paint8tearDownEv>

08010920 <_ZN8touchgfx13PainterRGB565D0Ev>:
 8010920:	b510      	push	{r4, lr}
 8010922:	2114      	movs	r1, #20
 8010924:	4604      	mov	r4, r0
 8010926:	f016 fe2a 	bl	802757e <_ZdlPvj>
 801092a:	4620      	mov	r0, r4
 801092c:	bd10      	pop	{r4, pc}

0801092e <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 801092e:	f1a0 0008 	sub.w	r0, r0, #8
 8010932:	e7f5      	b.n	8010920 <_ZN8touchgfx13PainterRGB565D0Ev>

08010934 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 8010934:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8010936:	6803      	ldr	r3, [r0, #0]
 8010938:	460d      	mov	r5, r1
 801093a:	4604      	mov	r4, r0
 801093c:	4601      	mov	r1, r0
 801093e:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8010940:	a802      	add	r0, sp, #8
 8010942:	4798      	blx	r3
 8010944:	6828      	ldr	r0, [r5, #0]
 8010946:	6869      	ldr	r1, [r5, #4]
 8010948:	466b      	mov	r3, sp
 801094a:	c303      	stmia	r3!, {r0, r1}
 801094c:	4668      	mov	r0, sp
 801094e:	4619      	mov	r1, r3
 8010950:	f7fe ffa4 	bl	800f89c <_ZN8touchgfx4RectaNERKS0_>
 8010954:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8010956:	b188      	cbz	r0, 801097c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8010958:	6803      	ldr	r3, [r0, #0]
 801095a:	1d21      	adds	r1, r4, #4
 801095c:	68db      	ldr	r3, [r3, #12]
 801095e:	4798      	blx	r3
 8010960:	b160      	cbz	r0, 801097c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8010962:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8010966:	2b00      	cmp	r3, #0
 8010968:	dd08      	ble.n	801097c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 801096a:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 801096e:	2d00      	cmp	r5, #0
 8010970:	dd04      	ble.n	801097c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8010972:	4a2b      	ldr	r2, [pc, #172]	; (8010a20 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 8010974:	7812      	ldrb	r2, [r2, #0]
 8010976:	b11a      	cbz	r2, 8010980 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 8010978:	2a01      	cmp	r2, #1
 801097a:	d029      	beq.n	80109d0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 801097c:	b004      	add	sp, #16
 801097e:	bd70      	pop	{r4, r5, r6, pc}
 8010980:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010984:	441d      	add	r5, r3
 8010986:	b2ad      	uxth	r5, r5
 8010988:	b22e      	sxth	r6, r5
 801098a:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 801098e:	42b3      	cmp	r3, r6
 8010990:	daf4      	bge.n	801097c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8010992:	6823      	ldr	r3, [r4, #0]
 8010994:	4669      	mov	r1, sp
 8010996:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8010998:	4620      	mov	r0, r4
 801099a:	4798      	blx	r3
 801099c:	b940      	cbnz	r0, 80109b0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 801099e:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 80109a2:	2b01      	cmp	r3, #1
 80109a4:	d004      	beq.n	80109b0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 80109a6:	3301      	adds	r3, #1
 80109a8:	105b      	asrs	r3, r3, #1
 80109aa:	f8ad 3006 	strh.w	r3, [sp, #6]
 80109ae:	e7f0      	b.n	8010992 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 80109b0:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 80109b4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80109b8:	4413      	add	r3, r2
 80109ba:	b29b      	uxth	r3, r3
 80109bc:	441a      	add	r2, r3
 80109be:	b212      	sxth	r2, r2
 80109c0:	4296      	cmp	r6, r2
 80109c2:	f8ad 3002 	strh.w	r3, [sp, #2]
 80109c6:	dae0      	bge.n	801098a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 80109c8:	1aeb      	subs	r3, r5, r3
 80109ca:	f8ad 3006 	strh.w	r3, [sp, #6]
 80109ce:	e7dc      	b.n	801098a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 80109d0:	f8bd 5000 	ldrh.w	r5, [sp]
 80109d4:	441d      	add	r5, r3
 80109d6:	b2ad      	uxth	r5, r5
 80109d8:	b22e      	sxth	r6, r5
 80109da:	f9bd 3000 	ldrsh.w	r3, [sp]
 80109de:	42b3      	cmp	r3, r6
 80109e0:	dacc      	bge.n	801097c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80109e2:	6823      	ldr	r3, [r4, #0]
 80109e4:	4669      	mov	r1, sp
 80109e6:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80109e8:	4620      	mov	r0, r4
 80109ea:	4798      	blx	r3
 80109ec:	b940      	cbnz	r0, 8010a00 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 80109ee:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80109f2:	2b01      	cmp	r3, #1
 80109f4:	d004      	beq.n	8010a00 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 80109f6:	3301      	adds	r3, #1
 80109f8:	105b      	asrs	r3, r3, #1
 80109fa:	f8ad 3004 	strh.w	r3, [sp, #4]
 80109fe:	e7f0      	b.n	80109e2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 8010a00:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 8010a04:	f8bd 3000 	ldrh.w	r3, [sp]
 8010a08:	4413      	add	r3, r2
 8010a0a:	b29b      	uxth	r3, r3
 8010a0c:	441a      	add	r2, r3
 8010a0e:	b212      	sxth	r2, r2
 8010a10:	4296      	cmp	r6, r2
 8010a12:	f8ad 3000 	strh.w	r3, [sp]
 8010a16:	dae0      	bge.n	80109da <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8010a18:	1aeb      	subs	r3, r5, r3
 8010a1a:	f8ad 3004 	strh.w	r3, [sp, #4]
 8010a1e:	e7dc      	b.n	80109da <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8010a20:	200137b4 	.word	0x200137b4

08010a24 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 8010a24:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8010a26:	6803      	ldr	r3, [r0, #0]
 8010a28:	4604      	mov	r4, r0
 8010a2a:	4601      	mov	r1, r0
 8010a2c:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8010a2e:	4668      	mov	r0, sp
 8010a30:	4798      	blx	r3
 8010a32:	2100      	movs	r1, #0
 8010a34:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8010a38:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8010a3c:	9102      	str	r1, [sp, #8]
 8010a3e:	4668      	mov	r0, sp
 8010a40:	a902      	add	r1, sp, #8
 8010a42:	f8ad 200c 	strh.w	r2, [sp, #12]
 8010a46:	f8ad 300e 	strh.w	r3, [sp, #14]
 8010a4a:	f7fe ff27 	bl	800f89c <_ZN8touchgfx4RectaNERKS0_>
 8010a4e:	6823      	ldr	r3, [r4, #0]
 8010a50:	4669      	mov	r1, sp
 8010a52:	691b      	ldr	r3, [r3, #16]
 8010a54:	4620      	mov	r0, r4
 8010a56:	4798      	blx	r3
 8010a58:	b004      	add	sp, #16
 8010a5a:	bd10      	pop	{r4, pc}

08010a5c <_ZN8touchgfx12CanvasWidgetC1Ev>:
 8010a5c:	2101      	movs	r1, #1
 8010a5e:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8010a62:	490b      	ldr	r1, [pc, #44]	; (8010a90 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 8010a64:	6001      	str	r1, [r0, #0]
 8010a66:	2200      	movs	r2, #0
 8010a68:	21ff      	movs	r1, #255	; 0xff
 8010a6a:	8082      	strh	r2, [r0, #4]
 8010a6c:	80c2      	strh	r2, [r0, #6]
 8010a6e:	8102      	strh	r2, [r0, #8]
 8010a70:	8142      	strh	r2, [r0, #10]
 8010a72:	8182      	strh	r2, [r0, #12]
 8010a74:	81c2      	strh	r2, [r0, #14]
 8010a76:	8202      	strh	r2, [r0, #16]
 8010a78:	8242      	strh	r2, [r0, #18]
 8010a7a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8010a7e:	61c2      	str	r2, [r0, #28]
 8010a80:	8402      	strh	r2, [r0, #32]
 8010a82:	8442      	strh	r2, [r0, #34]	; 0x22
 8010a84:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8010a88:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 8010a8c:	6282      	str	r2, [r0, #40]	; 0x28
 8010a8e:	4770      	bx	lr
 8010a90:	0802c43c 	.word	0x0802c43c

08010a94 <_ZNK8touchgfx4Line14getMinimalRectEv>:
 8010a94:	f101 0364 	add.w	r3, r1, #100	; 0x64
 8010a98:	4602      	mov	r2, r0
 8010a9a:	cb03      	ldmia	r3!, {r0, r1}
 8010a9c:	6010      	str	r0, [r2, #0]
 8010a9e:	6051      	str	r1, [r2, #4]
 8010aa0:	4610      	mov	r0, r2
 8010aa2:	4770      	bx	lr

08010aa4 <_ZN8touchgfx4LineD1Ev>:
 8010aa4:	4770      	bx	lr

08010aa6 <_ZN8touchgfx4LineD0Ev>:
 8010aa6:	b510      	push	{r4, lr}
 8010aa8:	2170      	movs	r1, #112	; 0x70
 8010aaa:	4604      	mov	r4, r0
 8010aac:	f016 fd67 	bl	802757e <_ZdlPvj>
 8010ab0:	4620      	mov	r0, r4
 8010ab2:	bd10      	pop	{r4, pc}

08010ab4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 8010ab4:	b507      	push	{r0, r1, r2, lr}
 8010ab6:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8010aba:	ab01      	add	r3, sp, #4
 8010abc:	6809      	ldr	r1, [r1, #0]
 8010abe:	6800      	ldr	r0, [r0, #0]
 8010ac0:	f005 fab4 	bl	801602c <_ZN8touchgfx6muldivElllRl>
 8010ac4:	b003      	add	sp, #12
 8010ac6:	f85d fb04 	ldr.w	pc, [sp], #4

08010aca <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 8010aca:	6800      	ldr	r0, [r0, #0]
 8010acc:	2800      	cmp	r0, #0
 8010ace:	bfb9      	ittee	lt
 8010ad0:	2320      	movlt	r3, #32
 8010ad2:	fb90 f0f3 	sdivlt	r0, r0, r3
 8010ad6:	301f      	addge	r0, #31
 8010ad8:	1140      	asrge	r0, r0, #5
 8010ada:	4770      	bx	lr

08010adc <_ZNK8touchgfx4Line17invalidateContentEv>:
 8010adc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010ae0:	f890 3026 	ldrb.w	r3, [r0, #38]	; 0x26
 8010ae4:	b089      	sub	sp, #36	; 0x24
 8010ae6:	4604      	mov	r4, r0
 8010ae8:	b353      	cbz	r3, 8010b40 <_ZNK8touchgfx4Line17invalidateContentEv+0x64>
 8010aea:	6803      	ldr	r3, [r0, #0]
 8010aec:	4601      	mov	r1, r0
 8010aee:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8010af0:	a802      	add	r0, sp, #8
 8010af2:	4798      	blx	r3
 8010af4:	2220      	movs	r2, #32
 8010af6:	f8d4 a02c 	ldr.w	sl, [r4, #44]	; 0x2c
 8010afa:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8010afc:	fb9a f0f2 	sdiv	r0, sl, r2
 8010b00:	fb91 f5f2 	sdiv	r5, r1, r2
 8010b04:	1b40      	subs	r0, r0, r5
 8010b06:	2800      	cmp	r0, #0
 8010b08:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8010b0a:	fb93 f6f2 	sdiv	r6, r3, r2
 8010b0e:	bfb8      	it	lt
 8010b10:	4240      	neglt	r0, r0
 8010b12:	0076      	lsls	r6, r6, #1
 8010b14:	4286      	cmp	r6, r0
 8010b16:	f8d4 b000 	ldr.w	fp, [r4]
 8010b1a:	dc0c      	bgt.n	8010b36 <_ZNK8touchgfx4Line17invalidateContentEv+0x5a>
 8010b1c:	6b25      	ldr	r5, [r4, #48]	; 0x30
 8010b1e:	f8d4 8038 	ldr.w	r8, [r4, #56]	; 0x38
 8010b22:	fb95 f0f2 	sdiv	r0, r5, r2
 8010b26:	fb98 f7f2 	sdiv	r7, r8, r2
 8010b2a:	1bc0      	subs	r0, r0, r7
 8010b2c:	2800      	cmp	r0, #0
 8010b2e:	bfb8      	it	lt
 8010b30:	4240      	neglt	r0, r0
 8010b32:	4286      	cmp	r6, r0
 8010b34:	dd07      	ble.n	8010b46 <_ZNK8touchgfx4Line17invalidateContentEv+0x6a>
 8010b36:	f8db 3010 	ldr.w	r3, [fp, #16]
 8010b3a:	a902      	add	r1, sp, #8
 8010b3c:	4620      	mov	r0, r4
 8010b3e:	4798      	blx	r3
 8010b40:	b009      	add	sp, #36	; 0x24
 8010b42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010b46:	3301      	adds	r3, #1
 8010b48:	2002      	movs	r0, #2
 8010b4a:	f10d 0920 	add.w	r9, sp, #32
 8010b4e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8010b52:	4103      	asrs	r3, r0
 8010b54:	f849 3d08 	str.w	r3, [r9, #-8]!
 8010b58:	eb01 060a 	add.w	r6, r1, sl
 8010b5c:	eb08 0705 	add.w	r7, r8, r5
 8010b60:	fb96 f6f0 	sdiv	r6, r6, r0
 8010b64:	fb97 f7f0 	sdiv	r7, r7, r0
 8010b68:	4648      	mov	r0, r9
 8010b6a:	9101      	str	r1, [sp, #4]
 8010b6c:	b236      	sxth	r6, r6
 8010b6e:	b23f      	sxth	r7, r7
 8010b70:	fb96 f6f2 	sdiv	r6, r6, r2
 8010b74:	fb97 f7f2 	sdiv	r7, r7, r2
 8010b78:	f7ff ffa7 	bl	8010aca <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8010b7c:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8010b80:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 8010b84:	9901      	ldr	r1, [sp, #4]
 8010b86:	4293      	cmp	r3, r2
 8010b88:	fa1f fe87 	uxth.w	lr, r7
 8010b8c:	fa1f fc86 	uxth.w	ip, r6
 8010b90:	eba1 0a0a 	sub.w	sl, r1, sl
 8010b94:	b280      	uxth	r0, r0
 8010b96:	da54      	bge.n	8010c42 <_ZNK8touchgfx4Line17invalidateContentEv+0x166>
 8010b98:	ebac 0100 	sub.w	r1, ip, r0
 8010b9c:	b289      	uxth	r1, r1
 8010b9e:	4460      	add	r0, ip
 8010ba0:	f1ba 0f00 	cmp.w	sl, #0
 8010ba4:	b20e      	sxth	r6, r1
 8010ba6:	b280      	uxth	r0, r0
 8010ba8:	f9bd a008 	ldrsh.w	sl, [sp, #8]
 8010bac:	f9bd c00a 	ldrsh.w	ip, [sp, #10]
 8010bb0:	da29      	bge.n	8010c06 <_ZNK8touchgfx4Line17invalidateContentEv+0x12a>
 8010bb2:	eba8 0505 	sub.w	r5, r8, r5
 8010bb6:	2d00      	cmp	r5, #0
 8010bb8:	da2a      	bge.n	8010c10 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 8010bba:	fa1f f88a 	uxth.w	r8, sl
 8010bbe:	eba0 0008 	sub.w	r0, r0, r8
 8010bc2:	fa1f f58c 	uxth.w	r5, ip
 8010bc6:	4443      	add	r3, r8
 8010bc8:	f8ad 0014 	strh.w	r0, [sp, #20]
 8010bcc:	1a59      	subs	r1, r3, r1
 8010bce:	ebae 0005 	sub.w	r0, lr, r5
 8010bd2:	f8ad a010 	strh.w	sl, [sp, #16]
 8010bd6:	f8ad c012 	strh.w	ip, [sp, #18]
 8010bda:	f8ad 0016 	strh.w	r0, [sp, #22]
 8010bde:	f8ad 6018 	strh.w	r6, [sp, #24]
 8010be2:	f8ad 701a 	strh.w	r7, [sp, #26]
 8010be6:	f8ad 101c 	strh.w	r1, [sp, #28]
 8010bea:	442a      	add	r2, r5
 8010bec:	eba2 0e0e 	sub.w	lr, r2, lr
 8010bf0:	f8ad e01e 	strh.w	lr, [sp, #30]
 8010bf4:	f8db 3010 	ldr.w	r3, [fp, #16]
 8010bf8:	a904      	add	r1, sp, #16
 8010bfa:	4620      	mov	r0, r4
 8010bfc:	4798      	blx	r3
 8010bfe:	6823      	ldr	r3, [r4, #0]
 8010c00:	4649      	mov	r1, r9
 8010c02:	691b      	ldr	r3, [r3, #16]
 8010c04:	e79a      	b.n	8010b3c <_ZNK8touchgfx4Line17invalidateContentEv+0x60>
 8010c06:	d003      	beq.n	8010c10 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 8010c08:	eba8 0505 	sub.w	r5, r8, r5
 8010c0c:	2d00      	cmp	r5, #0
 8010c0e:	dcd4      	bgt.n	8010bba <_ZNK8touchgfx4Line17invalidateContentEv+0xde>
 8010c10:	fa1f f88a 	uxth.w	r8, sl
 8010c14:	4443      	add	r3, r8
 8010c16:	fa1f f58c 	uxth.w	r5, ip
 8010c1a:	1a59      	subs	r1, r3, r1
 8010c1c:	eba0 0008 	sub.w	r0, r0, r8
 8010c20:	ebae 0305 	sub.w	r3, lr, r5
 8010c24:	f8ad 6010 	strh.w	r6, [sp, #16]
 8010c28:	f8ad c012 	strh.w	ip, [sp, #18]
 8010c2c:	f8ad 1014 	strh.w	r1, [sp, #20]
 8010c30:	f8ad 3016 	strh.w	r3, [sp, #22]
 8010c34:	f8ad a018 	strh.w	sl, [sp, #24]
 8010c38:	f8ad 701a 	strh.w	r7, [sp, #26]
 8010c3c:	f8ad 001c 	strh.w	r0, [sp, #28]
 8010c40:	e7d3      	b.n	8010bea <_ZNK8touchgfx4Line17invalidateContentEv+0x10e>
 8010c42:	ebae 0100 	sub.w	r1, lr, r0
 8010c46:	b289      	uxth	r1, r1
 8010c48:	4470      	add	r0, lr
 8010c4a:	f1ba 0f00 	cmp.w	sl, #0
 8010c4e:	b20f      	sxth	r7, r1
 8010c50:	b280      	uxth	r0, r0
 8010c52:	f9bd e008 	ldrsh.w	lr, [sp, #8]
 8010c56:	f9bd a00a 	ldrsh.w	sl, [sp, #10]
 8010c5a:	da20      	bge.n	8010c9e <_ZNK8touchgfx4Line17invalidateContentEv+0x1c2>
 8010c5c:	eba8 0505 	sub.w	r5, r8, r5
 8010c60:	2d00      	cmp	r5, #0
 8010c62:	da21      	bge.n	8010ca8 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 8010c64:	fa1f f88e 	uxth.w	r8, lr
 8010c68:	fa1f f58a 	uxth.w	r5, sl
 8010c6c:	4443      	add	r3, r8
 8010c6e:	442a      	add	r2, r5
 8010c70:	f8ad e010 	strh.w	lr, [sp, #16]
 8010c74:	1b40      	subs	r0, r0, r5
 8010c76:	ebac 0e08 	sub.w	lr, ip, r8
 8010c7a:	1a51      	subs	r1, r2, r1
 8010c7c:	eba3 0c0c 	sub.w	ip, r3, ip
 8010c80:	f8ad a012 	strh.w	sl, [sp, #18]
 8010c84:	f8ad e014 	strh.w	lr, [sp, #20]
 8010c88:	f8ad 0016 	strh.w	r0, [sp, #22]
 8010c8c:	f8ad 6018 	strh.w	r6, [sp, #24]
 8010c90:	f8ad 701a 	strh.w	r7, [sp, #26]
 8010c94:	f8ad c01c 	strh.w	ip, [sp, #28]
 8010c98:	f8ad 101e 	strh.w	r1, [sp, #30]
 8010c9c:	e7aa      	b.n	8010bf4 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>
 8010c9e:	d003      	beq.n	8010ca8 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 8010ca0:	eba8 0505 	sub.w	r5, r8, r5
 8010ca4:	2d00      	cmp	r5, #0
 8010ca6:	dcdd      	bgt.n	8010c64 <_ZNK8touchgfx4Line17invalidateContentEv+0x188>
 8010ca8:	fa1f f58e 	uxth.w	r5, lr
 8010cac:	fa1f f88a 	uxth.w	r8, sl
 8010cb0:	4442      	add	r2, r8
 8010cb2:	442b      	add	r3, r5
 8010cb4:	f8ad 7012 	strh.w	r7, [sp, #18]
 8010cb8:	1a51      	subs	r1, r2, r1
 8010cba:	ebac 0705 	sub.w	r7, ip, r5
 8010cbe:	eba0 0008 	sub.w	r0, r0, r8
 8010cc2:	eba3 0c0c 	sub.w	ip, r3, ip
 8010cc6:	f8ad e010 	strh.w	lr, [sp, #16]
 8010cca:	f8ad 7014 	strh.w	r7, [sp, #20]
 8010cce:	f8ad 1016 	strh.w	r1, [sp, #22]
 8010cd2:	f8ad 6018 	strh.w	r6, [sp, #24]
 8010cd6:	f8ad a01a 	strh.w	sl, [sp, #26]
 8010cda:	f8ad c01c 	strh.w	ip, [sp, #28]
 8010cde:	f8ad 001e 	strh.w	r0, [sp, #30]
 8010ce2:	e787      	b.n	8010bf4 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>

08010ce4 <_ZN8touchgfx7CWRUtil4sineEi>:
 8010ce4:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8010ce8:	fb90 f2f3 	sdiv	r2, r0, r3
 8010cec:	fb02 0013 	mls	r0, r2, r3, r0
 8010cf0:	2800      	cmp	r0, #0
 8010cf2:	bfb8      	it	lt
 8010cf4:	18c0      	addlt	r0, r0, r3
 8010cf6:	285a      	cmp	r0, #90	; 0x5a
 8010cf8:	4b09      	ldr	r3, [pc, #36]	; (8010d20 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
 8010cfa:	dc02      	bgt.n	8010d02 <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
 8010cfc:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8010d00:	4770      	bx	lr
 8010d02:	28b4      	cmp	r0, #180	; 0xb4
 8010d04:	dc02      	bgt.n	8010d0c <_ZN8touchgfx7CWRUtil4sineEi+0x28>
 8010d06:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
 8010d0a:	e7f7      	b.n	8010cfc <_ZN8touchgfx7CWRUtil4sineEi+0x18>
 8010d0c:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
 8010d10:	bfd4      	ite	le
 8010d12:	38b4      	suble	r0, #180	; 0xb4
 8010d14:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
 8010d18:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8010d1c:	4240      	negs	r0, r0
 8010d1e:	4770      	bx	lr
 8010d20:	0802c508 	.word	0x0802c508

08010d24 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
 8010d24:	f44f 5334 	mov.w	r3, #11520	; 0x2d00
 8010d28:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8010d2a:	fb90 f2f3 	sdiv	r2, r0, r3
 8010d2e:	fb02 0013 	mls	r0, r2, r3, r0
 8010d32:	2800      	cmp	r0, #0
 8010d34:	bfb8      	it	lt
 8010d36:	18c0      	addlt	r0, r0, r3
 8010d38:	1144      	asrs	r4, r0, #5
 8010d3a:	f000 061f 	and.w	r6, r0, #31
 8010d3e:	4620      	mov	r0, r4
 8010d40:	f7ff ffd0 	bl	8010ce4 <_ZN8touchgfx7CWRUtil4sineEi>
 8010d44:	4605      	mov	r5, r0
 8010d46:	b90e      	cbnz	r6, 8010d4c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
 8010d48:	b002      	add	sp, #8
 8010d4a:	bd70      	pop	{r4, r5, r6, pc}
 8010d4c:	1c60      	adds	r0, r4, #1
 8010d4e:	f7ff ffc9 	bl	8010ce4 <_ZN8touchgfx7CWRUtil4sineEi>
 8010d52:	ab01      	add	r3, sp, #4
 8010d54:	2220      	movs	r2, #32
 8010d56:	4631      	mov	r1, r6
 8010d58:	1b40      	subs	r0, r0, r5
 8010d5a:	f005 f967 	bl	801602c <_ZN8touchgfx6muldivElllRl>
 8010d5e:	4428      	add	r0, r5
 8010d60:	e7f2      	b.n	8010d48 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

08010d62 <_ZN8touchgfx7CWRUtil5isqrtEm>:
 8010d62:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
 8010d66:	bf2c      	ite	cs
 8010d68:	f04f 4280 	movcs.w	r2, #1073741824	; 0x40000000
 8010d6c:	f44f 4280 	movcc.w	r2, #16384	; 0x4000
 8010d70:	2300      	movs	r3, #0
 8010d72:	1899      	adds	r1, r3, r2
 8010d74:	4288      	cmp	r0, r1
 8010d76:	bf24      	itt	cs
 8010d78:	1853      	addcs	r3, r2, r1
 8010d7a:	1a40      	subcs	r0, r0, r1
 8010d7c:	0892      	lsrs	r2, r2, #2
 8010d7e:	ea4f 0353 	mov.w	r3, r3, lsr #1
 8010d82:	d1f6      	bne.n	8010d72 <_ZN8touchgfx7CWRUtil5isqrtEm+0x10>
 8010d84:	4618      	mov	r0, r3
 8010d86:	4770      	bx	lr

08010d88 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 8010d88:	b510      	push	{r4, lr}
 8010d8a:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 8010d8e:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 8010d92:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 8010d96:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 8010d9a:	13a4      	asrs	r4, r4, #14
 8010d9c:	139b      	asrs	r3, r3, #14
 8010d9e:	429c      	cmp	r4, r3
 8010da0:	bfb8      	it	lt
 8010da2:	461c      	movlt	r4, r3
 8010da4:	2c01      	cmp	r4, #1
 8010da6:	dd07      	ble.n	8010db8 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 8010da8:	fb91 f1f4 	sdiv	r1, r1, r4
 8010dac:	fb90 f0f4 	sdiv	r0, r0, r4
 8010db0:	f7ff ffea 	bl	8010d88 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8010db4:	4360      	muls	r0, r4
 8010db6:	bd10      	pop	{r4, pc}
 8010db8:	4340      	muls	r0, r0
 8010dba:	fb01 0001 	mla	r0, r1, r1, r0
 8010dbe:	f7ff ffd0 	bl	8010d62 <_ZN8touchgfx7CWRUtil5isqrtEm>
 8010dc2:	e7f8      	b.n	8010db6 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

08010dc4 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>:
 8010dc4:	2800      	cmp	r0, #0
 8010dc6:	b508      	push	{r3, lr}
 8010dc8:	da05      	bge.n	8010dd6 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x12>
 8010dca:	4240      	negs	r0, r0
 8010dcc:	f7ff fffa 	bl	8010dc4 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8010dd0:	4240      	negs	r0, r0
 8010dd2:	b240      	sxtb	r0, r0
 8010dd4:	bd08      	pop	{r3, pc}
 8010dd6:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 8010dda:	dc11      	bgt.n	8010e00 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x3c>
 8010ddc:	f5b0 7f35 	cmp.w	r0, #724	; 0x2d4
 8010de0:	dd09      	ble.n	8010df6 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x32>
 8010de2:	4340      	muls	r0, r0
 8010de4:	f5c0 1080 	rsb	r0, r0, #1048576	; 0x100000
 8010de8:	f7ff ffbb 	bl	8010d62 <_ZN8touchgfx7CWRUtil5isqrtEm>
 8010dec:	f7ff ffea 	bl	8010dc4 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8010df0:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8010df4:	e7ed      	b.n	8010dd2 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0xe>
 8010df6:	3003      	adds	r0, #3
 8010df8:	10c0      	asrs	r0, r0, #3
 8010dfa:	4b02      	ldr	r3, [pc, #8]	; (8010e04 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x40>)
 8010dfc:	5618      	ldrsb	r0, [r3, r0]
 8010dfe:	e7e9      	b.n	8010dd4 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 8010e00:	2000      	movs	r0, #0
 8010e02:	e7e7      	b.n	8010dd4 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 8010e04:	0802c4ac 	.word	0x0802c4ac

08010e08 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>:
 8010e08:	4281      	cmp	r1, r0
 8010e0a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8010e0c:	460c      	mov	r4, r1
 8010e0e:	4615      	mov	r5, r2
 8010e10:	dd07      	ble.n	8010e22 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x1a>
 8010e12:	4601      	mov	r1, r0
 8010e14:	4620      	mov	r0, r4
 8010e16:	f7ff fff7 	bl	8010e08 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8010e1a:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8010e1e:	b003      	add	sp, #12
 8010e20:	bd30      	pop	{r4, r5, pc}
 8010e22:	f7ff ffb1 	bl	8010d88 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8010e26:	6028      	str	r0, [r5, #0]
 8010e28:	2800      	cmp	r0, #0
 8010e2a:	d0f8      	beq.n	8010e1e <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>
 8010e2c:	4602      	mov	r2, r0
 8010e2e:	ab01      	add	r3, sp, #4
 8010e30:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8010e34:	4620      	mov	r0, r4
 8010e36:	f005 f8f9 	bl	801602c <_ZN8touchgfx6muldivElllRl>
 8010e3a:	f7ff ffc3 	bl	8010dc4 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8010e3e:	e7ee      	b.n	8010e1e <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>

08010e40 <_ZN8touchgfx4LineC1Ev>:
 8010e40:	b510      	push	{r4, lr}
 8010e42:	4604      	mov	r4, r0
 8010e44:	f7ff fe0a 	bl	8010a5c <_ZN8touchgfx12CanvasWidgetC1Ev>
 8010e48:	4b0c      	ldr	r3, [pc, #48]	; (8010e7c <_ZN8touchgfx4LineC1Ev+0x3c>)
 8010e4a:	6023      	str	r3, [r4, #0]
 8010e4c:	2220      	movs	r2, #32
 8010e4e:	2300      	movs	r3, #0
 8010e50:	63e2      	str	r2, [r4, #60]	; 0x3c
 8010e52:	2212      	movs	r2, #18
 8010e54:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 8010e58:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 8010e5c:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8010e60:	e9c4 3311 	strd	r3, r3, [r4, #68]	; 0x44
 8010e64:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
 8010e68:	e9c4 3315 	strd	r3, r3, [r4, #84]	; 0x54
 8010e6c:	e9c4 3317 	strd	r3, r3, [r4, #92]	; 0x5c
 8010e70:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
 8010e74:	66e2      	str	r2, [r4, #108]	; 0x6c
 8010e76:	60a3      	str	r3, [r4, #8]
 8010e78:	4620      	mov	r0, r4
 8010e7a:	bd10      	pop	{r4, pc}
 8010e7c:	0802c5c8 	.word	0x0802c5c8

08010e80 <_ZN8touchgfx4Line17updateCachedShapeEv>:
 8010e80:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8010e84:	6b47      	ldr	r7, [r0, #52]	; 0x34
 8010e86:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8010e88:	6b85      	ldr	r5, [r0, #56]	; 0x38
 8010e8a:	6b02      	ldr	r2, [r0, #48]	; 0x30
 8010e8c:	1aff      	subs	r7, r7, r3
 8010e8e:	4604      	mov	r4, r0
 8010e90:	eba5 0502 	sub.w	r5, r5, r2
 8010e94:	d142      	bne.n	8010f1c <_ZN8touchgfx4Line17updateCachedShapeEv+0x9c>
 8010e96:	b955      	cbnz	r5, 8010eae <_ZN8touchgfx4Line17updateCachedShapeEv+0x2e>
 8010e98:	e9c0 3313 	strd	r3, r3, [r0, #76]	; 0x4c
 8010e9c:	e9c0 3311 	strd	r3, r3, [r0, #68]	; 0x44
 8010ea0:	e9c0 2217 	strd	r2, r2, [r0, #92]	; 0x5c
 8010ea4:	e9c0 2215 	strd	r2, r2, [r0, #84]	; 0x54
 8010ea8:	b002      	add	sp, #8
 8010eaa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8010eae:	ea85 78e5 	eor.w	r8, r5, r5, asr #31
 8010eb2:	eba8 78e5 	sub.w	r8, r8, r5, asr #31
 8010eb6:	4629      	mov	r1, r5
 8010eb8:	4642      	mov	r2, r8
 8010eba:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8010ebc:	f005 f8d5 	bl	801606a <_ZN8touchgfx6muldivElll>
 8010ec0:	2502      	movs	r5, #2
 8010ec2:	4642      	mov	r2, r8
 8010ec4:	fb90 f6f5 	sdiv	r6, r0, r5
 8010ec8:	4639      	mov	r1, r7
 8010eca:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8010ecc:	f005 f8cd 	bl	801606a <_ZN8touchgfx6muldivElll>
 8010ed0:	f894 9040 	ldrb.w	r9, [r4, #64]	; 0x40
 8010ed4:	fb90 f5f5 	sdiv	r5, r0, r5
 8010ed8:	f1b9 0f00 	cmp.w	r9, #0
 8010edc:	d067      	beq.n	8010fae <_ZN8touchgfx4Line17updateCachedShapeEv+0x12e>
 8010ede:	f1b9 0f02 	cmp.w	r9, #2
 8010ee2:	d878      	bhi.n	8010fd6 <_ZN8touchgfx4Line17updateCachedShapeEv+0x156>
 8010ee4:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8010ee6:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8010ee8:	1b93      	subs	r3, r2, r6
 8010eea:	1b5b      	subs	r3, r3, r5
 8010eec:	6463      	str	r3, [r4, #68]	; 0x44
 8010eee:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8010ef0:	18e9      	adds	r1, r5, r3
 8010ef2:	1b89      	subs	r1, r1, r6
 8010ef4:	6561      	str	r1, [r4, #84]	; 0x54
 8010ef6:	1b81      	subs	r1, r0, r6
 8010ef8:	4429      	add	r1, r5
 8010efa:	64a1      	str	r1, [r4, #72]	; 0x48
 8010efc:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8010efe:	4430      	add	r0, r6
 8010f00:	186f      	adds	r7, r5, r1
 8010f02:	4432      	add	r2, r6
 8010f04:	1b49      	subs	r1, r1, r5
 8010f06:	4437      	add	r7, r6
 8010f08:	4428      	add	r0, r5
 8010f0a:	4431      	add	r1, r6
 8010f0c:	1b52      	subs	r2, r2, r5
 8010f0e:	1b5b      	subs	r3, r3, r5
 8010f10:	65a7      	str	r7, [r4, #88]	; 0x58
 8010f12:	64e0      	str	r0, [r4, #76]	; 0x4c
 8010f14:	65e1      	str	r1, [r4, #92]	; 0x5c
 8010f16:	6522      	str	r2, [r4, #80]	; 0x50
 8010f18:	1b9b      	subs	r3, r3, r6
 8010f1a:	e05b      	b.n	8010fd4 <_ZN8touchgfx4Line17updateCachedShapeEv+0x154>
 8010f1c:	ea87 78e7 	eor.w	r8, r7, r7, asr #31
 8010f20:	eba8 78e7 	sub.w	r8, r8, r7, asr #31
 8010f24:	2d00      	cmp	r5, #0
 8010f26:	d0c6      	beq.n	8010eb6 <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8010f28:	ea85 73e5 	eor.w	r3, r5, r5, asr #31
 8010f2c:	eba3 73e5 	sub.w	r3, r3, r5, asr #31
 8010f30:	fb93 f2f8 	sdiv	r2, r3, r8
 8010f34:	fb08 3312 	mls	r3, r8, r2, r3
 8010f38:	b353      	cbz	r3, 8010f90 <_ZN8touchgfx4Line17updateCachedShapeEv+0x110>
 8010f3a:	fb98 f2f3 	sdiv	r2, r8, r3
 8010f3e:	fb03 8812 	mls	r8, r3, r2, r8
 8010f42:	f1b8 0f00 	cmp.w	r8, #0
 8010f46:	d1f3      	bne.n	8010f30 <_ZN8touchgfx4Line17updateCachedShapeEv+0xb0>
 8010f48:	2b01      	cmp	r3, #1
 8010f4a:	bf1c      	itt	ne
 8010f4c:	fb95 f5f3 	sdivne	r5, r5, r3
 8010f50:	fb97 f7f3 	sdivne	r7, r7, r3
 8010f54:	ea87 73e7 	eor.w	r3, r7, r7, asr #31
 8010f58:	f24b 5104 	movw	r1, #46340	; 0xb504
 8010f5c:	eba3 73e7 	sub.w	r3, r3, r7, asr #31
 8010f60:	ea85 72e5 	eor.w	r2, r5, r5, asr #31
 8010f64:	428b      	cmp	r3, r1
 8010f66:	eba2 72e5 	sub.w	r2, r2, r5, asr #31
 8010f6a:	4608      	mov	r0, r1
 8010f6c:	dd01      	ble.n	8010f72 <_ZN8touchgfx4Line17updateCachedShapeEv+0xf2>
 8010f6e:	428a      	cmp	r2, r1
 8010f70:	dc10      	bgt.n	8010f94 <_ZN8touchgfx4Line17updateCachedShapeEv+0x114>
 8010f72:	fb90 f3f3 	sdiv	r3, r0, r3
 8010f76:	fb90 f2f2 	sdiv	r2, r0, r2
 8010f7a:	4293      	cmp	r3, r2
 8010f7c:	bfa8      	it	ge
 8010f7e:	4613      	movge	r3, r2
 8010f80:	435f      	muls	r7, r3
 8010f82:	435d      	muls	r5, r3
 8010f84:	4629      	mov	r1, r5
 8010f86:	4638      	mov	r0, r7
 8010f88:	f7ff fefe 	bl	8010d88 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8010f8c:	4680      	mov	r8, r0
 8010f8e:	e792      	b.n	8010eb6 <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8010f90:	4643      	mov	r3, r8
 8010f92:	e7d9      	b.n	8010f48 <_ZN8touchgfx4Line17updateCachedShapeEv+0xc8>
 8010f94:	fb93 f3f1 	sdiv	r3, r3, r1
 8010f98:	fb92 f2f1 	sdiv	r2, r2, r1
 8010f9c:	4293      	cmp	r3, r2
 8010f9e:	bfcc      	ite	gt
 8010fa0:	3301      	addgt	r3, #1
 8010fa2:	1c53      	addle	r3, r2, #1
 8010fa4:	fb97 f7f3 	sdiv	r7, r7, r3
 8010fa8:	fb95 f5f3 	sdiv	r5, r5, r3
 8010fac:	e7ea      	b.n	8010f84 <_ZN8touchgfx4Line17updateCachedShapeEv+0x104>
 8010fae:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8010fb0:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8010fb2:	1b93      	subs	r3, r2, r6
 8010fb4:	6463      	str	r3, [r4, #68]	; 0x44
 8010fb6:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8010fb8:	18e9      	adds	r1, r5, r3
 8010fba:	6561      	str	r1, [r4, #84]	; 0x54
 8010fbc:	1b81      	subs	r1, r0, r6
 8010fbe:	64a1      	str	r1, [r4, #72]	; 0x48
 8010fc0:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8010fc2:	4430      	add	r0, r6
 8010fc4:	186f      	adds	r7, r5, r1
 8010fc6:	4432      	add	r2, r6
 8010fc8:	1b49      	subs	r1, r1, r5
 8010fca:	65a7      	str	r7, [r4, #88]	; 0x58
 8010fcc:	64e0      	str	r0, [r4, #76]	; 0x4c
 8010fce:	65e1      	str	r1, [r4, #92]	; 0x5c
 8010fd0:	6522      	str	r2, [r4, #80]	; 0x50
 8010fd2:	1b5b      	subs	r3, r3, r5
 8010fd4:	6623      	str	r3, [r4, #96]	; 0x60
 8010fd6:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8010fd8:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8010fda:	9200      	str	r2, [sp, #0]
 8010fdc:	9301      	str	r3, [sp, #4]
 8010fde:	f104 0148 	add.w	r1, r4, #72	; 0x48
 8010fe2:	f104 0c54 	add.w	ip, r4, #84	; 0x54
 8010fe6:	680f      	ldr	r7, [r1, #0]
 8010fe8:	9800      	ldr	r0, [sp, #0]
 8010fea:	42ba      	cmp	r2, r7
 8010fec:	bfa8      	it	ge
 8010fee:	463a      	movge	r2, r7
 8010ff0:	4287      	cmp	r7, r0
 8010ff2:	bfc8      	it	gt
 8010ff4:	9700      	strgt	r7, [sp, #0]
 8010ff6:	690f      	ldr	r7, [r1, #16]
 8010ff8:	9801      	ldr	r0, [sp, #4]
 8010ffa:	42bb      	cmp	r3, r7
 8010ffc:	bfa8      	it	ge
 8010ffe:	463b      	movge	r3, r7
 8011000:	3104      	adds	r1, #4
 8011002:	4287      	cmp	r7, r0
 8011004:	bfc8      	it	gt
 8011006:	9701      	strgt	r7, [sp, #4]
 8011008:	458c      	cmp	ip, r1
 801100a:	d1ec      	bne.n	8010fe6 <_ZN8touchgfx4Line17updateCachedShapeEv+0x166>
 801100c:	4668      	mov	r0, sp
 801100e:	2720      	movs	r7, #32
 8011010:	fb92 f8f7 	sdiv	r8, r2, r7
 8011014:	fb93 f7f7 	sdiv	r7, r3, r7
 8011018:	f7ff fd57 	bl	8010aca <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 801101c:	4682      	mov	sl, r0
 801101e:	a801      	add	r0, sp, #4
 8011020:	f7ff fd53 	bl	8010aca <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8011024:	ebaa 0208 	sub.w	r2, sl, r8
 8011028:	1bc0      	subs	r0, r0, r7
 801102a:	f1b9 0f01 	cmp.w	r9, #1
 801102e:	f8a4 8064 	strh.w	r8, [r4, #100]	; 0x64
 8011032:	f8a4 7066 	strh.w	r7, [r4, #102]	; 0x66
 8011036:	f8a4 2068 	strh.w	r2, [r4, #104]	; 0x68
 801103a:	f8a4 006a 	strh.w	r0, [r4, #106]	; 0x6a
 801103e:	f47f af33 	bne.w	8010ea8 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>
 8011042:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8011044:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8011046:	1b83      	subs	r3, r0, r6
 8011048:	6463      	str	r3, [r4, #68]	; 0x44
 801104a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 801104c:	18ea      	adds	r2, r5, r3
 801104e:	6562      	str	r2, [r4, #84]	; 0x54
 8011050:	1b8a      	subs	r2, r1, r6
 8011052:	64a2      	str	r2, [r4, #72]	; 0x48
 8011054:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8011056:	4431      	add	r1, r6
 8011058:	18af      	adds	r7, r5, r2
 801105a:	4406      	add	r6, r0
 801105c:	1b52      	subs	r2, r2, r5
 801105e:	1b5d      	subs	r5, r3, r5
 8011060:	65a7      	str	r7, [r4, #88]	; 0x58
 8011062:	64e1      	str	r1, [r4, #76]	; 0x4c
 8011064:	65e2      	str	r2, [r4, #92]	; 0x5c
 8011066:	6526      	str	r6, [r4, #80]	; 0x50
 8011068:	6625      	str	r5, [r4, #96]	; 0x60
 801106a:	e71d      	b.n	8010ea8 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>

0801106c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>:
 801106c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 801106e:	428b      	cmp	r3, r1
 8011070:	d102      	bne.n	8011078 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0xc>
 8011072:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8011074:	4293      	cmp	r3, r2
 8011076:	d003      	beq.n	8011080 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0x14>
 8011078:	e9c0 120b 	strd	r1, r2, [r0, #44]	; 0x2c
 801107c:	f7ff bf00 	b.w	8010e80 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8011080:	4770      	bx	lr

08011082 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>:
 8011082:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8011084:	428b      	cmp	r3, r1
 8011086:	d102      	bne.n	801108e <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0xc>
 8011088:	6b83      	ldr	r3, [r0, #56]	; 0x38
 801108a:	4293      	cmp	r3, r2
 801108c:	d003      	beq.n	8011096 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0x14>
 801108e:	e9c0 120d 	strd	r1, r2, [r0, #52]	; 0x34
 8011092:	f7ff bef5 	b.w	8010e80 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8011096:	4770      	bx	lr

08011098 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>:
 8011098:	f880 1040 	strb.w	r1, [r0, #64]	; 0x40
 801109c:	f7ff bef0 	b.w	8010e80 <_ZN8touchgfx4Line17updateCachedShapeEv>

080110a0 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE>:
 80110a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80110a4:	b0a0      	sub	sp, #128	; 0x80
 80110a6:	4604      	mov	r4, r0
 80110a8:	460a      	mov	r2, r1
 80110aa:	4601      	mov	r1, r0
 80110ac:	a804      	add	r0, sp, #16
 80110ae:	f014 fc47 	bl	8025940 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 80110b2:	2300      	movs	r3, #0
 80110b4:	9301      	str	r3, [sp, #4]
 80110b6:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 80110ba:	2b01      	cmp	r3, #1
 80110bc:	d17c      	bne.n	80111b8 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x118>
 80110be:	6c60      	ldr	r0, [r4, #68]	; 0x44
 80110c0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80110c2:	6d61      	ldr	r1, [r4, #84]	; 0x54
 80110c4:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80110c6:	1ac0      	subs	r0, r0, r3
 80110c8:	eba1 0102 	sub.w	r1, r1, r2
 80110cc:	d437      	bmi.n	801113e <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x9e>
 80110ce:	2900      	cmp	r1, #0
 80110d0:	aa01      	add	r2, sp, #4
 80110d2:	db2e      	blt.n	8011132 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x92>
 80110d4:	f7ff fe98 	bl	8010e08 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 80110d8:	f100 065a 	add.w	r6, r0, #90	; 0x5a
 80110dc:	6d62      	ldr	r2, [r4, #84]	; 0x54
 80110de:	6c61      	ldr	r1, [r4, #68]	; 0x44
 80110e0:	a804      	add	r0, sp, #16
 80110e2:	f014 fdad 	bl	8025c40 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 80110e6:	6da2      	ldr	r2, [r4, #88]	; 0x58
 80110e8:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 80110ea:	a804      	add	r0, sp, #16
 80110ec:	f014 fdf5 	bl	8025cda <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80110f0:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 80110f2:	2db3      	cmp	r5, #179	; 0xb3
 80110f4:	dc33      	bgt.n	801115e <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xbe>
 80110f6:	eba6 0805 	sub.w	r8, r6, r5
 80110fa:	4640      	mov	r0, r8
 80110fc:	f7ff fdf2 	bl	8010ce4 <_ZN8touchgfx7CWRUtil4sineEi>
 8011100:	a902      	add	r1, sp, #8
 8011102:	9002      	str	r0, [sp, #8]
 8011104:	a801      	add	r0, sp, #4
 8011106:	f7ff fcd5 	bl	8010ab4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 801110a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801110c:	1847      	adds	r7, r0, r1
 801110e:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 8011112:	f7ff fde7 	bl	8010ce4 <_ZN8touchgfx7CWRUtil4sineEi>
 8011116:	a903      	add	r1, sp, #12
 8011118:	9003      	str	r0, [sp, #12]
 801111a:	a801      	add	r0, sp, #4
 801111c:	f7ff fcca 	bl	8010ab4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8011120:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8011122:	4639      	mov	r1, r7
 8011124:	1a12      	subs	r2, r2, r0
 8011126:	a804      	add	r0, sp, #16
 8011128:	f014 fdd7 	bl	8025cda <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 801112c:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 801112e:	441d      	add	r5, r3
 8011130:	e7df      	b.n	80110f2 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x52>
 8011132:	4249      	negs	r1, r1
 8011134:	f7ff fe68 	bl	8010e08 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8011138:	f1c0 065a 	rsb	r6, r0, #90	; 0x5a
 801113c:	e7ce      	b.n	80110dc <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 801113e:	2900      	cmp	r1, #0
 8011140:	f1c0 0000 	rsb	r0, r0, #0
 8011144:	aa01      	add	r2, sp, #4
 8011146:	db04      	blt.n	8011152 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xb2>
 8011148:	f7ff fe5e 	bl	8010e08 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 801114c:	f5c0 7687 	rsb	r6, r0, #270	; 0x10e
 8011150:	e7c4      	b.n	80110dc <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8011152:	4249      	negs	r1, r1
 8011154:	f7ff fe58 	bl	8010e08 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8011158:	f500 7687 	add.w	r6, r0, #270	; 0x10e
 801115c:	e7be      	b.n	80110dc <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 801115e:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8011160:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8011162:	a804      	add	r0, sp, #16
 8011164:	f014 fdb9 	bl	8025cda <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8011168:	6e22      	ldr	r2, [r4, #96]	; 0x60
 801116a:	6d21      	ldr	r1, [r4, #80]	; 0x50
 801116c:	a804      	add	r0, sp, #16
 801116e:	f014 fdb4 	bl	8025cda <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8011172:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 8011174:	f1c5 05b4 	rsb	r5, r5, #180	; 0xb4
 8011178:	2d00      	cmp	r5, #0
 801117a:	dd31      	ble.n	80111e0 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x140>
 801117c:	eb05 0806 	add.w	r8, r5, r6
 8011180:	4640      	mov	r0, r8
 8011182:	f7ff fdaf 	bl	8010ce4 <_ZN8touchgfx7CWRUtil4sineEi>
 8011186:	a902      	add	r1, sp, #8
 8011188:	9002      	str	r0, [sp, #8]
 801118a:	a801      	add	r0, sp, #4
 801118c:	f7ff fc92 	bl	8010ab4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8011190:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8011192:	1847      	adds	r7, r0, r1
 8011194:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 8011198:	f7ff fda4 	bl	8010ce4 <_ZN8touchgfx7CWRUtil4sineEi>
 801119c:	a903      	add	r1, sp, #12
 801119e:	9003      	str	r0, [sp, #12]
 80111a0:	a801      	add	r0, sp, #4
 80111a2:	f7ff fc87 	bl	8010ab4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80111a6:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80111a8:	4639      	mov	r1, r7
 80111aa:	1a12      	subs	r2, r2, r0
 80111ac:	a804      	add	r0, sp, #16
 80111ae:	f014 fd94 	bl	8025cda <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80111b2:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 80111b4:	1aed      	subs	r5, r5, r3
 80111b6:	e7df      	b.n	8011178 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xd8>
 80111b8:	6d62      	ldr	r2, [r4, #84]	; 0x54
 80111ba:	6c61      	ldr	r1, [r4, #68]	; 0x44
 80111bc:	a804      	add	r0, sp, #16
 80111be:	f014 fd3f 	bl	8025c40 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 80111c2:	6da2      	ldr	r2, [r4, #88]	; 0x58
 80111c4:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 80111c6:	a804      	add	r0, sp, #16
 80111c8:	f014 fd87 	bl	8025cda <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80111cc:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 80111ce:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 80111d0:	a804      	add	r0, sp, #16
 80111d2:	f014 fd82 	bl	8025cda <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80111d6:	6e22      	ldr	r2, [r4, #96]	; 0x60
 80111d8:	6d21      	ldr	r1, [r4, #80]	; 0x50
 80111da:	a804      	add	r0, sp, #16
 80111dc:	f014 fd7d 	bl	8025cda <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80111e0:	21ff      	movs	r1, #255	; 0xff
 80111e2:	a804      	add	r0, sp, #16
 80111e4:	f014 fc68 	bl	8025ab8 <_ZN8touchgfx6Canvas6renderEh>
 80111e8:	4b04      	ldr	r3, [pc, #16]	; (80111fc <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x15c>)
 80111ea:	9304      	str	r3, [sp, #16]
 80111ec:	4604      	mov	r4, r0
 80111ee:	a80c      	add	r0, sp, #48	; 0x30
 80111f0:	f001 f8cc 	bl	801238c <_ZN8touchgfx7OutlineD1Ev>
 80111f4:	4620      	mov	r0, r4
 80111f6:	b020      	add	sp, #128	; 0x80
 80111f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80111fc:	0802cdf0 	.word	0x0802cdf0

08011200 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 8011200:	2000      	movs	r0, #0
 8011202:	4770      	bx	lr

08011204 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 8011204:	4b07      	ldr	r3, [pc, #28]	; (8011224 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 8011206:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8011208:	881b      	ldrh	r3, [r3, #0]
 801120a:	4293      	cmp	r3, r2
 801120c:	bf81      	itttt	hi
 801120e:	4b06      	ldrhi	r3, [pc, #24]	; (8011228 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 8011210:	681b      	ldrhi	r3, [r3, #0]
 8011212:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 8011216:	7858      	ldrbhi	r0, [r3, #1]
 8011218:	bf8c      	ite	hi
 801121a:	f000 0003 	andhi.w	r0, r0, #3
 801121e:	2000      	movls	r0, #0
 8011220:	4770      	bx	lr
 8011222:	bf00      	nop
 8011224:	20013818 	.word	0x20013818
 8011228:	20013814 	.word	0x20013814

0801122c <_ZN8touchgfx8TextAreaD1Ev>:
 801122c:	4770      	bx	lr
	...

08011230 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 8011230:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011234:	4b10      	ldr	r3, [pc, #64]	; (8011278 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 8011236:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8011238:	881b      	ldrh	r3, [r3, #0]
 801123a:	428b      	cmp	r3, r1
 801123c:	4604      	mov	r4, r0
 801123e:	d918      	bls.n	8011272 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 8011240:	6803      	ldr	r3, [r0, #0]
 8011242:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 8011244:	4b0d      	ldr	r3, [pc, #52]	; (801127c <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 8011246:	6818      	ldr	r0, [r3, #0]
 8011248:	f7f6 fc76 	bl	8007b38 <_ZNK8touchgfx5Texts7getTextEt>
 801124c:	6823      	ldr	r3, [r4, #0]
 801124e:	4606      	mov	r6, r0
 8011250:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011252:	4620      	mov	r0, r4
 8011254:	4798      	blx	r3
 8011256:	6823      	ldr	r3, [r4, #0]
 8011258:	4607      	mov	r7, r0
 801125a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 801125e:	4620      	mov	r0, r4
 8011260:	4798      	blx	r3
 8011262:	463a      	mov	r2, r7
 8011264:	4603      	mov	r3, r0
 8011266:	4631      	mov	r1, r6
 8011268:	4620      	mov	r0, r4
 801126a:	46ac      	mov	ip, r5
 801126c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8011270:	4760      	bx	ip
 8011272:	2000      	movs	r0, #0
 8011274:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011278:	20013818 	.word	0x20013818
 801127c:	20013820 	.word	0x20013820

08011280 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 8011280:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8011284:	4b17      	ldr	r3, [pc, #92]	; (80112e4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 8011286:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8011288:	881b      	ldrh	r3, [r3, #0]
 801128a:	428b      	cmp	r3, r1
 801128c:	4604      	mov	r4, r0
 801128e:	d926      	bls.n	80112de <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 8011290:	4b15      	ldr	r3, [pc, #84]	; (80112e8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 8011292:	681b      	ldr	r3, [r3, #0]
 8011294:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 8011298:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 801129c:	4b13      	ldr	r3, [pc, #76]	; (80112ec <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 801129e:	7855      	ldrb	r5, [r2, #1]
 80112a0:	681b      	ldr	r3, [r3, #0]
 80112a2:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 80112a6:	6833      	ldr	r3, [r6, #0]
 80112a8:	69df      	ldr	r7, [r3, #28]
 80112aa:	4b11      	ldr	r3, [pc, #68]	; (80112f0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 80112ac:	6818      	ldr	r0, [r3, #0]
 80112ae:	f7f6 fc43 	bl	8007b38 <_ZNK8touchgfx5Texts7getTextEt>
 80112b2:	6823      	ldr	r3, [r4, #0]
 80112b4:	4680      	mov	r8, r0
 80112b6:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80112b8:	4620      	mov	r0, r4
 80112ba:	4798      	blx	r3
 80112bc:	6823      	ldr	r3, [r4, #0]
 80112be:	4681      	mov	r9, r0
 80112c0:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80112c4:	4620      	mov	r0, r4
 80112c6:	4798      	blx	r3
 80112c8:	f3c5 0581 	ubfx	r5, r5, #2, #2
 80112cc:	9000      	str	r0, [sp, #0]
 80112ce:	464b      	mov	r3, r9
 80112d0:	4642      	mov	r2, r8
 80112d2:	4629      	mov	r1, r5
 80112d4:	4630      	mov	r0, r6
 80112d6:	47b8      	blx	r7
 80112d8:	b003      	add	sp, #12
 80112da:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80112de:	2000      	movs	r0, #0
 80112e0:	e7fa      	b.n	80112d8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 80112e2:	bf00      	nop
 80112e4:	20013818 	.word	0x20013818
 80112e8:	20013814 	.word	0x20013814
 80112ec:	2001381c 	.word	0x2001381c
 80112f0:	20013820 	.word	0x20013820

080112f4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 80112f4:	b40e      	push	{r1, r2, r3}
 80112f6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80112fa:	4b2f      	ldr	r3, [pc, #188]	; (80113b8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 80112fc:	881a      	ldrh	r2, [r3, #0]
 80112fe:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 8011300:	429a      	cmp	r2, r3
 8011302:	b09d      	sub	sp, #116	; 0x74
 8011304:	4604      	mov	r4, r0
 8011306:	d954      	bls.n	80113b2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 8011308:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 80113bc <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 801130c:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 80113c0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 8011310:	aa26      	add	r2, sp, #152	; 0x98
 8011312:	9202      	str	r2, [sp, #8]
 8011314:	f8d9 2000 	ldr.w	r2, [r9]
 8011318:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 801131c:	f8d8 3000 	ldr.w	r3, [r8]
 8011320:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8011324:	682b      	ldr	r3, [r5, #0]
 8011326:	4628      	mov	r0, r5
 8011328:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801132a:	4798      	blx	r3
 801132c:	b207      	sxth	r7, r0
 801132e:	4606      	mov	r6, r0
 8011330:	a803      	add	r0, sp, #12
 8011332:	f005 fa57 	bl	80167e4 <_ZN8touchgfx12TextProviderC1Ev>
 8011336:	682b      	ldr	r3, [r5, #0]
 8011338:	4628      	mov	r0, r5
 801133a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801133c:	4798      	blx	r3
 801133e:	682b      	ldr	r3, [r5, #0]
 8011340:	4682      	mov	sl, r0
 8011342:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8011344:	4628      	mov	r0, r5
 8011346:	4798      	blx	r3
 8011348:	4653      	mov	r3, sl
 801134a:	9000      	str	r0, [sp, #0]
 801134c:	9a02      	ldr	r2, [sp, #8]
 801134e:	9925      	ldr	r1, [sp, #148]	; 0x94
 8011350:	a803      	add	r0, sp, #12
 8011352:	f005 faa2 	bl	801689a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011356:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8011358:	f8d9 3000 	ldr.w	r3, [r9]
 801135c:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 8011360:	8925      	ldrh	r5, [r4, #8]
 8011362:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 8011366:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 801136a:	eba5 050c 	sub.w	r5, r5, ip
 801136e:	784a      	ldrb	r2, [r1, #1]
 8011370:	f8d8 3000 	ldr.w	r3, [r8]
 8011374:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 8011378:	b22d      	sxth	r5, r5
 801137a:	9500      	str	r5, [sp, #0]
 801137c:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8011380:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8011384:	a803      	add	r0, sp, #12
 8011386:	f002 feed 	bl	8014164 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 801138a:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 801138e:	18b9      	adds	r1, r7, r2
 8011390:	2900      	cmp	r1, #0
 8011392:	b203      	sxth	r3, r0
 8011394:	dd0b      	ble.n	80113ae <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 8011396:	3b01      	subs	r3, #1
 8011398:	fb13 f302 	smulbb	r3, r3, r2
 801139c:	fb16 3300 	smlabb	r3, r6, r0, r3
 80113a0:	b21f      	sxth	r7, r3
 80113a2:	4638      	mov	r0, r7
 80113a4:	b01d      	add	sp, #116	; 0x74
 80113a6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80113aa:	b003      	add	sp, #12
 80113ac:	4770      	bx	lr
 80113ae:	2b00      	cmp	r3, #0
 80113b0:	dcf7      	bgt.n	80113a2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 80113b2:	2700      	movs	r7, #0
 80113b4:	e7f5      	b.n	80113a2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 80113b6:	bf00      	nop
 80113b8:	20013818 	.word	0x20013818
 80113bc:	20013814 	.word	0x20013814
 80113c0:	2001381c 	.word	0x2001381c

080113c4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 80113c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80113c8:	4bbc      	ldr	r3, [pc, #752]	; (80116bc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 80113ca:	460c      	mov	r4, r1
 80113cc:	881b      	ldrh	r3, [r3, #0]
 80113ce:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 80113d0:	428b      	cmp	r3, r1
 80113d2:	b0a9      	sub	sp, #164	; 0xa4
 80113d4:	4680      	mov	r8, r0
 80113d6:	d809      	bhi.n	80113ec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 80113d8:	2300      	movs	r3, #0
 80113da:	f04f 32ff 	mov.w	r2, #4294967295
 80113de:	e9c0 3200 	strd	r3, r2, [r0]
 80113e2:	6083      	str	r3, [r0, #8]
 80113e4:	4640      	mov	r0, r8
 80113e6:	b029      	add	sp, #164	; 0xa4
 80113e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80113ec:	4eb4      	ldr	r6, [pc, #720]	; (80116c0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 80113ee:	6833      	ldr	r3, [r6, #0]
 80113f0:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 80113f4:	4bb3      	ldr	r3, [pc, #716]	; (80116c4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 80113f6:	681b      	ldr	r3, [r3, #0]
 80113f8:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 80113fc:	4bb2      	ldr	r3, [pc, #712]	; (80116c8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 80113fe:	6818      	ldr	r0, [r3, #0]
 8011400:	f7f6 fb9a 	bl	8007b38 <_ZNK8touchgfx5Texts7getTextEt>
 8011404:	682b      	ldr	r3, [r5, #0]
 8011406:	4681      	mov	r9, r0
 8011408:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801140a:	4628      	mov	r0, r5
 801140c:	4798      	blx	r3
 801140e:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 8011410:	b203      	sxth	r3, r0
 8011412:	4407      	add	r7, r0
 8011414:	9304      	str	r3, [sp, #16]
 8011416:	b2bb      	uxth	r3, r7
 8011418:	9303      	str	r3, [sp, #12]
 801141a:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 801141e:	4682      	mov	sl, r0
 8011420:	a80f      	add	r0, sp, #60	; 0x3c
 8011422:	2b00      	cmp	r3, #0
 8011424:	f040 80a6 	bne.w	8011574 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 8011428:	f005 f9dc 	bl	80167e4 <_ZN8touchgfx12TextProviderC1Ev>
 801142c:	682b      	ldr	r3, [r5, #0]
 801142e:	4628      	mov	r0, r5
 8011430:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8011432:	4798      	blx	r3
 8011434:	682b      	ldr	r3, [r5, #0]
 8011436:	4606      	mov	r6, r0
 8011438:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801143a:	4628      	mov	r0, r5
 801143c:	4798      	blx	r3
 801143e:	6823      	ldr	r3, [r4, #0]
 8011440:	4607      	mov	r7, r0
 8011442:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011444:	4620      	mov	r0, r4
 8011446:	4798      	blx	r3
 8011448:	6823      	ldr	r3, [r4, #0]
 801144a:	4683      	mov	fp, r0
 801144c:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8011450:	4620      	mov	r0, r4
 8011452:	4798      	blx	r3
 8011454:	463b      	mov	r3, r7
 8011456:	e9cd b000 	strd	fp, r0, [sp]
 801145a:	4649      	mov	r1, r9
 801145c:	4632      	mov	r2, r6
 801145e:	a80f      	add	r0, sp, #60	; 0x3c
 8011460:	f005 fa30 	bl	80168c4 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8011464:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8011468:	f8df b254 	ldr.w	fp, [pc, #596]	; 80116c0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 801146c:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8011470:	f04f 0600 	mov.w	r6, #0
 8011474:	bf0c      	ite	eq
 8011476:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 801147a:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 801147e:	4637      	mov	r7, r6
 8011480:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8011482:	f8db 3000 	ldr.w	r3, [fp]
 8011486:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 801148a:	4629      	mov	r1, r5
 801148c:	785b      	ldrb	r3, [r3, #1]
 801148e:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8011492:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8011496:	a80f      	add	r0, sp, #60	; 0x3c
 8011498:	f002 fb7f 	bl	8013b9a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 801149c:	9b03      	ldr	r3, [sp, #12]
 801149e:	4286      	cmp	r6, r0
 80114a0:	bfb8      	it	lt
 80114a2:	4606      	movlt	r6, r0
 80114a4:	3701      	adds	r7, #1
 80114a6:	eba9 0903 	sub.w	r9, r9, r3
 80114aa:	a80f      	add	r0, sp, #60	; 0x3c
 80114ac:	b236      	sxth	r6, r6
 80114ae:	b2bf      	uxth	r7, r7
 80114b0:	fa0f f989 	sxth.w	r9, r9
 80114b4:	f005 f9bd 	bl	8016832 <_ZN8touchgfx12TextProvider11endOfStringEv>
 80114b8:	b918      	cbnz	r0, 80114c2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 80114ba:	7a2b      	ldrb	r3, [r5, #8]
 80114bc:	444b      	add	r3, r9
 80114be:	2b00      	cmp	r3, #0
 80114c0:	dcde      	bgt.n	8011480 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 80114c2:	9b03      	ldr	r3, [sp, #12]
 80114c4:	9a04      	ldr	r2, [sp, #16]
 80114c6:	f895 9009 	ldrb.w	r9, [r5, #9]
 80114ca:	fb13 f707 	smulbb	r7, r3, r7
 80114ce:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 80114d0:	1aff      	subs	r7, r7, r3
 80114d2:	b2bf      	uxth	r7, r7
 80114d4:	b23b      	sxth	r3, r7
 80114d6:	429a      	cmp	r2, r3
 80114d8:	bfa8      	it	ge
 80114da:	4657      	movge	r7, sl
 80114dc:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80114e0:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 80114e4:	6823      	ldr	r3, [r4, #0]
 80114e6:	bf08      	it	eq
 80114e8:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 80114ec:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80114ee:	bf18      	it	ne
 80114f0:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 80114f4:	4620      	mov	r0, r4
 80114f6:	4798      	blx	r3
 80114f8:	444f      	add	r7, r9
 80114fa:	fa1f f987 	uxth.w	r9, r7
 80114fe:	2801      	cmp	r0, #1
 8011500:	fa0f f789 	sxth.w	r7, r9
 8011504:	b2b3      	uxth	r3, r6
 8011506:	f000 80e1 	beq.w	80116cc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 801150a:	2802      	cmp	r0, #2
 801150c:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
 8011510:	f000 80e2 	beq.w	80116d8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 8011514:	7aea      	ldrb	r2, [r5, #11]
 8011516:	7b2d      	ldrb	r5, [r5, #12]
 8011518:	b236      	sxth	r6, r6
 801151a:	1ab6      	subs	r6, r6, r2
 801151c:	442a      	add	r2, r5
 801151e:	4413      	add	r3, r2
 8011520:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 8011524:	fa1f fa86 	uxth.w	sl, r6
 8011528:	b29b      	uxth	r3, r3
 801152a:	2a02      	cmp	r2, #2
 801152c:	fa0f fb8a 	sxth.w	fp, sl
 8011530:	b21e      	sxth	r6, r3
 8011532:	f000 80d5 	beq.w	80116e0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 8011536:	2a03      	cmp	r2, #3
 8011538:	f000 80dd 	beq.w	80116f6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 801153c:	2a01      	cmp	r2, #1
 801153e:	f040 80e5 	bne.w	801170c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 8011542:	8925      	ldrh	r5, [r4, #8]
 8011544:	4633      	mov	r3, r6
 8011546:	eba5 0909 	sub.w	r9, r5, r9
 801154a:	463e      	mov	r6, r7
 801154c:	465d      	mov	r5, fp
 801154e:	461f      	mov	r7, r3
 8011550:	fa0f fb89 	sxth.w	fp, r9
 8011554:	4b5c      	ldr	r3, [pc, #368]	; (80116c8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8011556:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8011558:	6818      	ldr	r0, [r3, #0]
 801155a:	f7f6 faed 	bl	8007b38 <_ZNK8touchgfx5Texts7getTextEt>
 801155e:	f8a8 b000 	strh.w	fp, [r8]
 8011562:	f8a8 5002 	strh.w	r5, [r8, #2]
 8011566:	f8a8 6004 	strh.w	r6, [r8, #4]
 801156a:	f8a8 7006 	strh.w	r7, [r8, #6]
 801156e:	f8c8 0008 	str.w	r0, [r8, #8]
 8011572:	e737      	b.n	80113e4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 8011574:	f005 f936 	bl	80167e4 <_ZN8touchgfx12TextProviderC1Ev>
 8011578:	682b      	ldr	r3, [r5, #0]
 801157a:	4628      	mov	r0, r5
 801157c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801157e:	4798      	blx	r3
 8011580:	682b      	ldr	r3, [r5, #0]
 8011582:	4607      	mov	r7, r0
 8011584:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8011586:	4628      	mov	r0, r5
 8011588:	4798      	blx	r3
 801158a:	6823      	ldr	r3, [r4, #0]
 801158c:	4683      	mov	fp, r0
 801158e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011590:	4620      	mov	r0, r4
 8011592:	4798      	blx	r3
 8011594:	6822      	ldr	r2, [r4, #0]
 8011596:	9005      	str	r0, [sp, #20]
 8011598:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 801159c:	4620      	mov	r0, r4
 801159e:	4790      	blx	r2
 80115a0:	9b05      	ldr	r3, [sp, #20]
 80115a2:	9001      	str	r0, [sp, #4]
 80115a4:	463a      	mov	r2, r7
 80115a6:	4649      	mov	r1, r9
 80115a8:	9300      	str	r3, [sp, #0]
 80115aa:	a80f      	add	r0, sp, #60	; 0x3c
 80115ac:	465b      	mov	r3, fp
 80115ae:	f005 f989 	bl	80168c4 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 80115b2:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80115b6:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 80115ba:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 80115bc:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 80115c0:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 80115c4:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 80115c8:	bf0a      	itet	eq
 80115ca:	464a      	moveq	r2, r9
 80115cc:	461a      	movne	r2, r3
 80115ce:	4699      	moveq	r9, r3
 80115d0:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 80115d4:	1ad2      	subs	r2, r2, r3
 80115d6:	6833      	ldr	r3, [r6, #0]
 80115d8:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
 80115dc:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 80115e0:	af0f      	add	r7, sp, #60	; 0x3c
 80115e2:	7859      	ldrb	r1, [r3, #1]
 80115e4:	9707      	str	r7, [sp, #28]
 80115e6:	2300      	movs	r3, #0
 80115e8:	f3c1 0181 	ubfx	r1, r1, #2, #2
 80115ec:	f8ad 3018 	strh.w	r3, [sp, #24]
 80115f0:	f88d 1020 	strb.w	r1, [sp, #32]
 80115f4:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 80115f8:	9509      	str	r5, [sp, #36]	; 0x24
 80115fa:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80115fe:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 8011602:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 8011606:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 801160a:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 801160e:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8011612:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8011616:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801161a:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 801161e:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 8011622:	b350      	cbz	r0, 801167a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8011624:	682b      	ldr	r3, [r5, #0]
 8011626:	4628      	mov	r0, r5
 8011628:	695b      	ldr	r3, [r3, #20]
 801162a:	4798      	blx	r3
 801162c:	4607      	mov	r7, r0
 801162e:	b320      	cbz	r0, 801167a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8011630:	9809      	ldr	r0, [sp, #36]	; 0x24
 8011632:	6803      	ldr	r3, [r0, #0]
 8011634:	4639      	mov	r1, r7
 8011636:	68db      	ldr	r3, [r3, #12]
 8011638:	4798      	blx	r3
 801163a:	4606      	mov	r6, r0
 801163c:	b1e8      	cbz	r0, 801167a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 801163e:	7b43      	ldrb	r3, [r0, #13]
 8011640:	7a82      	ldrb	r2, [r0, #10]
 8011642:	005b      	lsls	r3, r3, #1
 8011644:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8011648:	4313      	orrs	r3, r2
 801164a:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 801164e:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 8011652:	2b06      	cmp	r3, #6
 8011654:	d111      	bne.n	801167a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8011656:	9809      	ldr	r0, [sp, #36]	; 0x24
 8011658:	6803      	ldr	r3, [r0, #0]
 801165a:	4632      	mov	r2, r6
 801165c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801165e:	4639      	mov	r1, r7
 8011660:	4798      	blx	r3
 8011662:	7b73      	ldrb	r3, [r6, #13]
 8011664:	005b      	lsls	r3, r3, #1
 8011666:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801166a:	7ab3      	ldrb	r3, [r6, #10]
 801166c:	4313      	orrs	r3, r2
 801166e:	4418      	add	r0, r3
 8011670:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8011674:	4418      	add	r0, r3
 8011676:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 801167a:	2600      	movs	r6, #0
 801167c:	4637      	mov	r7, r6
 801167e:	a806      	add	r0, sp, #24
 8011680:	f002 fc6c 	bl	8013f5c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8011684:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
 8011688:	9b03      	ldr	r3, [sp, #12]
 801168a:	4286      	cmp	r6, r0
 801168c:	eba9 0903 	sub.w	r9, r9, r3
 8011690:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 8011694:	bfb8      	it	lt
 8011696:	4606      	movlt	r6, r0
 8011698:	3701      	adds	r7, #1
 801169a:	b236      	sxth	r6, r6
 801169c:	b2bf      	uxth	r7, r7
 801169e:	fa0f f989 	sxth.w	r9, r9
 80116a2:	2b00      	cmp	r3, #0
 80116a4:	f43f af0d 	beq.w	80114c2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 80116a8:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
 80116ac:	2b00      	cmp	r3, #0
 80116ae:	f47f af08 	bne.w	80114c2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 80116b2:	7a2b      	ldrb	r3, [r5, #8]
 80116b4:	444b      	add	r3, r9
 80116b6:	2b00      	cmp	r3, #0
 80116b8:	dce1      	bgt.n	801167e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 80116ba:	e702      	b.n	80114c2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 80116bc:	20013818 	.word	0x20013818
 80116c0:	20013814 	.word	0x20013814
 80116c4:	2001381c 	.word	0x2001381c
 80116c8:	20013820 	.word	0x20013820
 80116cc:	ebaa 0606 	sub.w	r6, sl, r6
 80116d0:	2002      	movs	r0, #2
 80116d2:	fb96 f6f0 	sdiv	r6, r6, r0
 80116d6:	e71d      	b.n	8011514 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 80116d8:	441e      	add	r6, r3
 80116da:	ebaa 0606 	sub.w	r6, sl, r6
 80116de:	e719      	b.n	8011514 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 80116e0:	8925      	ldrh	r5, [r4, #8]
 80116e2:	1aed      	subs	r5, r5, r3
 80116e4:	eba5 050a 	sub.w	r5, r5, sl
 80116e8:	fa0f fb85 	sxth.w	fp, r5
 80116ec:	8965      	ldrh	r5, [r4, #10]
 80116ee:	eba5 0509 	sub.w	r5, r5, r9
 80116f2:	b22d      	sxth	r5, r5
 80116f4:	e72e      	b.n	8011554 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 80116f6:	8965      	ldrh	r5, [r4, #10]
 80116f8:	1aed      	subs	r5, r5, r3
 80116fa:	eba5 050a 	sub.w	r5, r5, sl
 80116fe:	4633      	mov	r3, r6
 8011700:	b22d      	sxth	r5, r5
 8011702:	463e      	mov	r6, r7
 8011704:	f04f 0b00 	mov.w	fp, #0
 8011708:	461f      	mov	r7, r3
 801170a:	e723      	b.n	8011554 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 801170c:	2500      	movs	r5, #0
 801170e:	e721      	b.n	8011554 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

08011710 <_ZN8touchgfx8TextAreaD0Ev>:
 8011710:	b510      	push	{r4, lr}
 8011712:	2148      	movs	r1, #72	; 0x48
 8011714:	4604      	mov	r4, r0
 8011716:	f015 ff32 	bl	802757e <_ZdlPvj>
 801171a:	4620      	mov	r0, r4
 801171c:	bd10      	pop	{r4, pc}
	...

08011720 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 8011720:	b513      	push	{r0, r1, r4, lr}
 8011722:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 8011726:	4604      	mov	r4, r0
 8011728:	b1fb      	cbz	r3, 801176a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 801172a:	4b16      	ldr	r3, [pc, #88]	; (8011784 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 801172c:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 801172e:	881b      	ldrh	r3, [r3, #0]
 8011730:	428b      	cmp	r3, r1
 8011732:	d91a      	bls.n	801176a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8011734:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8011738:	2b00      	cmp	r3, #0
 801173a:	dd16      	ble.n	801176a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 801173c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8011740:	2b00      	cmp	r3, #0
 8011742:	dd12      	ble.n	801176a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8011744:	4b10      	ldr	r3, [pc, #64]	; (8011788 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 8011746:	6818      	ldr	r0, [r3, #0]
 8011748:	f7f6 f9f6 	bl	8007b38 <_ZNK8touchgfx5Texts7getTextEt>
 801174c:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8011750:	6822      	ldr	r2, [r4, #0]
 8011752:	2b00      	cmp	r3, #0
 8011754:	db06      	blt.n	8011764 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8011756:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 801175a:	2b00      	cmp	r3, #0
 801175c:	db02      	blt.n	8011764 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 801175e:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8011760:	4298      	cmp	r0, r3
 8011762:	d004      	beq.n	801176e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 8011764:	6953      	ldr	r3, [r2, #20]
 8011766:	4620      	mov	r0, r4
 8011768:	4798      	blx	r3
 801176a:	b002      	add	sp, #8
 801176c:	bd10      	pop	{r4, pc}
 801176e:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 8011772:	c903      	ldmia	r1, {r0, r1}
 8011774:	466b      	mov	r3, sp
 8011776:	e883 0003 	stmia.w	r3, {r0, r1}
 801177a:	6912      	ldr	r2, [r2, #16]
 801177c:	4619      	mov	r1, r3
 801177e:	4620      	mov	r0, r4
 8011780:	4790      	blx	r2
 8011782:	e7f2      	b.n	801176a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8011784:	20013818 	.word	0x20013818
 8011788:	20013820 	.word	0x20013820

0801178c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 801178c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011790:	4b44      	ldr	r3, [pc, #272]	; (80118a4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 8011792:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8011794:	881b      	ldrh	r3, [r3, #0]
 8011796:	4293      	cmp	r3, r2
 8011798:	b08e      	sub	sp, #56	; 0x38
 801179a:	4604      	mov	r4, r0
 801179c:	d97e      	bls.n	801189c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 801179e:	6808      	ldr	r0, [r1, #0]
 80117a0:	4d41      	ldr	r5, [pc, #260]	; (80118a8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 80117a2:	6849      	ldr	r1, [r1, #4]
 80117a4:	ab05      	add	r3, sp, #20
 80117a6:	c303      	stmia	r3!, {r0, r1}
 80117a8:	4611      	mov	r1, r2
 80117aa:	6828      	ldr	r0, [r5, #0]
 80117ac:	f7f6 f9c4 	bl	8007b38 <_ZNK8touchgfx5Texts7getTextEt>
 80117b0:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 80117b4:	2b00      	cmp	r3, #0
 80117b6:	db11      	blt.n	80117dc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 80117b8:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 80117bc:	2b00      	cmp	r3, #0
 80117be:	db0d      	blt.n	80117dc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 80117c0:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80117c2:	4298      	cmp	r0, r3
 80117c4:	d10a      	bne.n	80117dc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 80117c6:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 80117ca:	e892 0003 	ldmia.w	r2, {r0, r1}
 80117ce:	ab09      	add	r3, sp, #36	; 0x24
 80117d0:	e883 0003 	stmia.w	r3, {r0, r1}
 80117d4:	4619      	mov	r1, r3
 80117d6:	a805      	add	r0, sp, #20
 80117d8:	f7fe f860 	bl	800f89c <_ZN8touchgfx4RectaNERKS0_>
 80117dc:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80117e0:	2b00      	cmp	r3, #0
 80117e2:	dd5b      	ble.n	801189c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80117e4:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 80117e8:	2b00      	cmp	r3, #0
 80117ea:	dd57      	ble.n	801189c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80117ec:	4f2f      	ldr	r7, [pc, #188]	; (80118ac <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 80117ee:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 80117f0:	683b      	ldr	r3, [r7, #0]
 80117f2:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 80117f6:	4b2e      	ldr	r3, [pc, #184]	; (80118b0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 80117f8:	681b      	ldr	r3, [r3, #0]
 80117fa:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 80117fe:	2e00      	cmp	r6, #0
 8011800:	d04c      	beq.n	801189c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8011802:	6823      	ldr	r3, [r4, #0]
 8011804:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 8011808:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 801180a:	4620      	mov	r0, r4
 801180c:	4798      	blx	r3
 801180e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8011810:	683b      	ldr	r3, [r7, #0]
 8011812:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 8011816:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 801181a:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 801181e:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8011820:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8011824:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 8011828:	785b      	ldrb	r3, [r3, #1]
 801182a:	9609      	str	r6, [sp, #36]	; 0x24
 801182c:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8011830:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8011834:	4b1f      	ldr	r3, [pc, #124]	; (80118b4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 8011836:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 801183a:	681b      	ldr	r3, [r3, #0]
 801183c:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 8011840:	910b      	str	r1, [sp, #44]	; 0x2c
 8011842:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 8011846:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 801184a:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 801184e:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 8011852:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8011856:	b10a      	cbz	r2, 801185c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 8011858:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 801185a:	b906      	cbnz	r6, 801185e <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 801185c:	689e      	ldr	r6, [r3, #8]
 801185e:	af07      	add	r7, sp, #28
 8011860:	4621      	mov	r1, r4
 8011862:	4638      	mov	r0, r7
 8011864:	f004 fab0 	bl	8015dc8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011868:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 801186a:	6828      	ldr	r0, [r5, #0]
 801186c:	f7f6 f964 	bl	8007b38 <_ZNK8touchgfx5Texts7getTextEt>
 8011870:	6823      	ldr	r3, [r4, #0]
 8011872:	4605      	mov	r5, r0
 8011874:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011876:	4620      	mov	r0, r4
 8011878:	4798      	blx	r3
 801187a:	6823      	ldr	r3, [r4, #0]
 801187c:	4680      	mov	r8, r0
 801187e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8011882:	4620      	mov	r0, r4
 8011884:	4798      	blx	r3
 8011886:	e9cd 8002 	strd	r8, r0, [sp, #8]
 801188a:	ab09      	add	r3, sp, #36	; 0x24
 801188c:	9300      	str	r3, [sp, #0]
 801188e:	9501      	str	r5, [sp, #4]
 8011890:	ab05      	add	r3, sp, #20
 8011892:	e897 0006 	ldmia.w	r7, {r1, r2}
 8011896:	4630      	mov	r0, r6
 8011898:	f7f6 f900 	bl	8007a9c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 801189c:	b00e      	add	sp, #56	; 0x38
 801189e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80118a2:	bf00      	nop
 80118a4:	20013818 	.word	0x20013818
 80118a8:	20013820 	.word	0x20013820
 80118ac:	20013814 	.word	0x20013814
 80118b0:	2001381c 	.word	0x2001381c
 80118b4:	200137bc 	.word	0x200137bc

080118b8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 80118b8:	b538      	push	{r3, r4, r5, lr}
 80118ba:	4b0e      	ldr	r3, [pc, #56]	; (80118f4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 80118bc:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 80118be:	881b      	ldrh	r3, [r3, #0]
 80118c0:	429a      	cmp	r2, r3
 80118c2:	4604      	mov	r4, r0
 80118c4:	d214      	bcs.n	80118f0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 80118c6:	6803      	ldr	r3, [r0, #0]
 80118c8:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80118ca:	4798      	blx	r3
 80118cc:	6823      	ldr	r3, [r4, #0]
 80118ce:	4605      	mov	r5, r0
 80118d0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80118d2:	4620      	mov	r0, r4
 80118d4:	4798      	blx	r3
 80118d6:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80118da:	b22d      	sxth	r5, r5
 80118dc:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 80118e0:	4601      	mov	r1, r0
 80118e2:	bf06      	itte	eq
 80118e4:	4602      	moveq	r2, r0
 80118e6:	4629      	moveq	r1, r5
 80118e8:	462a      	movne	r2, r5
 80118ea:	4620      	mov	r0, r4
 80118ec:	f7fd fdb6 	bl	800f45c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80118f0:	bd38      	pop	{r3, r4, r5, pc}
 80118f2:	bf00      	nop
 80118f4:	20013818 	.word	0x20013818

080118f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 80118f8:	b530      	push	{r4, r5, lr}
 80118fa:	888b      	ldrh	r3, [r1, #4]
 80118fc:	8583      	strh	r3, [r0, #44]	; 0x2c
 80118fe:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8011902:	b085      	sub	sp, #20
 8011904:	4604      	mov	r4, r0
 8011906:	b923      	cbnz	r3, 8011912 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8011908:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 801190c:	b90b      	cbnz	r3, 8011912 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 801190e:	f7ff ffd3 	bl	80118b8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 8011912:	6823      	ldr	r3, [r4, #0]
 8011914:	466d      	mov	r5, sp
 8011916:	4621      	mov	r1, r4
 8011918:	4628      	mov	r0, r5
 801191a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 801191e:	4798      	blx	r3
 8011920:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8011924:	343c      	adds	r4, #60	; 0x3c
 8011926:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 801192a:	b005      	add	sp, #20
 801192c:	bd30      	pop	{r4, r5, pc}

0801192e <_ZNK8touchgfx3Box12getSolidRectEv>:
 801192e:	2300      	movs	r3, #0
 8011930:	8083      	strh	r3, [r0, #4]
 8011932:	80c3      	strh	r3, [r0, #6]
 8011934:	8003      	strh	r3, [r0, #0]
 8011936:	8043      	strh	r3, [r0, #2]
 8011938:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 801193c:	2bff      	cmp	r3, #255	; 0xff
 801193e:	bf01      	itttt	eq
 8011940:	890b      	ldrheq	r3, [r1, #8]
 8011942:	8083      	strheq	r3, [r0, #4]
 8011944:	894b      	ldrheq	r3, [r1, #10]
 8011946:	80c3      	strheq	r3, [r0, #6]
 8011948:	4770      	bx	lr
	...

0801194c <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 801194c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801194e:	4604      	mov	r4, r0
 8011950:	6808      	ldr	r0, [r1, #0]
 8011952:	6849      	ldr	r1, [r1, #4]
 8011954:	466b      	mov	r3, sp
 8011956:	c303      	stmia	r3!, {r0, r1}
 8011958:	6823      	ldr	r3, [r4, #0]
 801195a:	4669      	mov	r1, sp
 801195c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801195e:	4620      	mov	r0, r4
 8011960:	4798      	blx	r3
 8011962:	4b08      	ldr	r3, [pc, #32]	; (8011984 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 8011964:	681b      	ldr	r3, [r3, #0]
 8011966:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801196a:	b10a      	cbz	r2, 8011970 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 801196c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 801196e:	b900      	cbnz	r0, 8011972 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 8011970:	6898      	ldr	r0, [r3, #8]
 8011972:	6803      	ldr	r3, [r0, #0]
 8011974:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8011976:	6a1d      	ldr	r5, [r3, #32]
 8011978:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 801197c:	4669      	mov	r1, sp
 801197e:	47a8      	blx	r5
 8011980:	b003      	add	sp, #12
 8011982:	bd30      	pop	{r4, r5, pc}
 8011984:	200137bc 	.word	0x200137bc

08011988 <_ZN8touchgfx3BoxD1Ev>:
 8011988:	4770      	bx	lr

0801198a <_ZN8touchgfx3BoxD0Ev>:
 801198a:	b510      	push	{r4, lr}
 801198c:	212c      	movs	r1, #44	; 0x2c
 801198e:	4604      	mov	r4, r0
 8011990:	f015 fdf5 	bl	802757e <_ZdlPvj>
 8011994:	4620      	mov	r0, r4
 8011996:	bd10      	pop	{r4, pc}

08011998 <_ZNK8touchgfx3Box17invalidateContentEv>:
 8011998:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 801199c:	b12a      	cbz	r2, 80119aa <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 801199e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80119a2:	b112      	cbz	r2, 80119aa <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 80119a4:	6803      	ldr	r3, [r0, #0]
 80119a6:	695b      	ldr	r3, [r3, #20]
 80119a8:	4718      	bx	r3
 80119aa:	4770      	bx	lr

080119ac <_ZNK8touchgfx5Gauge9getCenterERiS1_>:
 80119ac:	f9b0 3150 	ldrsh.w	r3, [r0, #336]	; 0x150
 80119b0:	600b      	str	r3, [r1, #0]
 80119b2:	f9b0 3152 	ldrsh.w	r3, [r0, #338]	; 0x152
 80119b6:	6013      	str	r3, [r2, #0]
 80119b8:	4770      	bx	lr

080119ba <_ZN8touchgfx5Gauge8setWidthEs>:
 80119ba:	8101      	strh	r1, [r0, #8]
 80119bc:	f8a0 10bc 	strh.w	r1, [r0, #188]	; 0xbc
 80119c0:	f8a0 1160 	strh.w	r1, [r0, #352]	; 0x160
 80119c4:	4770      	bx	lr

080119c6 <_ZN8touchgfx5Gauge9setHeightEs>:
 80119c6:	8141      	strh	r1, [r0, #10]
 80119c8:	f8a0 10be 	strh.w	r1, [r0, #190]	; 0xbe
 80119cc:	f8a0 1162 	strh.w	r1, [r0, #354]	; 0x162
 80119d0:	4770      	bx	lr

080119d2 <_ZNK8touchgfx5Gauge13getStartAngleEv>:
 80119d2:	f8d0 0148 	ldr.w	r0, [r0, #328]	; 0x148
 80119d6:	4770      	bx	lr

080119d8 <_ZNK8touchgfx5Gauge11getEndAngleEv>:
 80119d8:	f8d0 014c 	ldr.w	r0, [r0, #332]	; 0x14c
 80119dc:	4770      	bx	lr

080119de <_ZN8touchgfx5Gauge28setProgressIndicatorPositionEssss>:
 80119de:	4770      	bx	lr

080119e0 <_ZN8touchgfx5GaugeD1Ev>:
 80119e0:	4770      	bx	lr

080119e2 <_ZN8touchgfx5Gauge8setAlphaEh>:
 80119e2:	b538      	push	{r3, r4, r5, lr}
 80119e4:	4604      	mov	r4, r0
 80119e6:	460d      	mov	r5, r1
 80119e8:	f7fd fc51 	bl	800f28e <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>
 80119ec:	f884 50dc 	strb.w	r5, [r4, #220]	; 0xdc
 80119f0:	f884 517e 	strb.w	r5, [r4, #382]	; 0x17e
 80119f4:	bd38      	pop	{r3, r4, r5, pc}

080119f6 <_ZN8touchgfx5GaugeD0Ev>:
 80119f6:	b510      	push	{r4, lr}
 80119f8:	f44f 71d0 	mov.w	r1, #416	; 0x1a0
 80119fc:	4604      	mov	r4, r0
 80119fe:	f015 fdbe 	bl	802757e <_ZdlPvj>
 8011a02:	4620      	mov	r0, r4
 8011a04:	bd10      	pop	{r4, pc}

08011a06 <_ZNK8touchgfx5Gauge17invalidateContentEv>:
 8011a06:	b510      	push	{r4, lr}
 8011a08:	6803      	ldr	r3, [r0, #0]
 8011a0a:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8011a0e:	4604      	mov	r4, r0
 8011a10:	4798      	blx	r3
 8011a12:	b170      	cbz	r0, 8011a32 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8011a14:	6823      	ldr	r3, [r4, #0]
 8011a16:	4620      	mov	r0, r4
 8011a18:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8011a1c:	4798      	blx	r3
 8011a1e:	b140      	cbz	r0, 8011a32 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8011a20:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8011a24:	b12b      	cbz	r3, 8011a32 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8011a26:	6823      	ldr	r3, [r4, #0]
 8011a28:	4620      	mov	r0, r4
 8011a2a:	695b      	ldr	r3, [r3, #20]
 8011a2c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011a30:	4718      	bx	r3
 8011a32:	bd10      	pop	{r4, pc}

08011a34 <_ZN8touchgfx5GaugeC1Ev>:
 8011a34:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8011a36:	4604      	mov	r4, r0
 8011a38:	4626      	mov	r6, r4
 8011a3a:	f7fd fd49 	bl	800f4d0 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>
 8011a3e:	4b18      	ldr	r3, [pc, #96]	; (8011aa0 <_ZN8touchgfx5GaugeC1Ev+0x6c>)
 8011a40:	f846 3bb4 	str.w	r3, [r6], #180
 8011a44:	a902      	add	r1, sp, #8
 8011a46:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8011a4a:	f821 3d04 	strh.w	r3, [r1, #-4]!
 8011a4e:	4630      	mov	r0, r6
 8011a50:	f014 ff7c 	bl	802694c <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>
 8011a54:	2500      	movs	r5, #0
 8011a56:	2301      	movs	r3, #1
 8011a58:	f504 77ac 	add.w	r7, r4, #344	; 0x158
 8011a5c:	f884 3144 	strb.w	r3, [r4, #324]	; 0x144
 8011a60:	f884 3145 	strb.w	r3, [r4, #325]	; 0x145
 8011a64:	f8c4 5148 	str.w	r5, [r4, #328]	; 0x148
 8011a68:	f8c4 514c 	str.w	r5, [r4, #332]	; 0x14c
 8011a6c:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
 8011a70:	f8c4 5154 	str.w	r5, [r4, #340]	; 0x154
 8011a74:	4638      	mov	r0, r7
 8011a76:	f014 f9ad 	bl	8025dd4 <_ZN8touchgfx6CircleC1Ev>
 8011a7a:	f104 0158 	add.w	r1, r4, #88	; 0x58
 8011a7e:	4620      	mov	r0, r4
 8011a80:	f7fd fdc7 	bl	800f612 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8011a84:	4639      	mov	r1, r7
 8011a86:	4620      	mov	r0, r4
 8011a88:	f7fd fd82 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8011a8c:	4620      	mov	r0, r4
 8011a8e:	4631      	mov	r1, r6
 8011a90:	f7fd fd7e 	bl	800f590 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8011a94:	4620      	mov	r0, r4
 8011a96:	f884 517d 	strb.w	r5, [r4, #381]	; 0x17d
 8011a9a:	b003      	add	sp, #12
 8011a9c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011a9e:	bf00      	nop
 8011aa0:	0802c738 	.word	0x0802c738

08011aa4 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 8011aa4:	f880 1144 	strb.w	r1, [r0, #324]	; 0x144
 8011aa8:	4770      	bx	lr

08011aaa <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 8011aaa:	f880 1145 	strb.w	r1, [r0, #325]	; 0x145
 8011aae:	4770      	bx	lr

08011ab0 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>:
 8011ab0:	b538      	push	{r3, r4, r5, lr}
 8011ab2:	8902      	ldrh	r2, [r0, #8]
 8011ab4:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8011ab8:	f8a0 20bc 	strh.w	r2, [r0, #188]	; 0xbc
 8011abc:	4604      	mov	r4, r0
 8011abe:	f100 05b4 	add.w	r5, r0, #180	; 0xb4
 8011ac2:	2200      	movs	r2, #0
 8011ac4:	4611      	mov	r1, r2
 8011ac6:	f8a0 30be 	strh.w	r3, [r0, #190]	; 0xbe
 8011aca:	4628      	mov	r0, r5
 8011acc:	f7f0 fcef 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8011ad0:	f9b4 2156 	ldrsh.w	r2, [r4, #342]	; 0x156
 8011ad4:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 8011ad8:	1a9b      	subs	r3, r3, r2
 8011ada:	ee07 3a90 	vmov	s15, r3
 8011ade:	f9b4 2154 	ldrsh.w	r2, [r4, #340]	; 0x154
 8011ae2:	f9b4 3150 	ldrsh.w	r3, [r4, #336]	; 0x150
 8011ae6:	1a9b      	subs	r3, r3, r2
 8011ae8:	ee07 3a10 	vmov	s14, r3
 8011aec:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011af0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8011af4:	edc4 7a39 	vstr	s15, [r4, #228]	; 0xe4
 8011af8:	ed84 7a38 	vstr	s14, [r4, #224]	; 0xe0
 8011afc:	4628      	mov	r0, r5
 8011afe:	f014 ff71 	bl	80269e4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8011b02:	4b16      	ldr	r3, [pc, #88]	; (8011b5c <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv+0xac>)
 8011b04:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
 8011b08:	4628      	mov	r0, r5
 8011b0a:	f014 ff6b 	bl	80269e4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8011b0e:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 8011b12:	f9b4 2150 	ldrsh.w	r2, [r4, #336]	; 0x150
 8011b16:	ee07 3a90 	vmov	s15, r3
 8011b1a:	ee07 2a10 	vmov	s14, r2
 8011b1e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011b22:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8011b26:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 8011b2a:	ed84 7a3e 	vstr	s14, [r4, #248]	; 0xf8
 8011b2e:	edc4 7a3f 	vstr	s15, [r4, #252]	; 0xfc
 8011b32:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8011b36:	4628      	mov	r0, r5
 8011b38:	f014 ff54 	bl	80269e4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8011b3c:	f8d4 30fc 	ldr.w	r3, [r4, #252]	; 0xfc
 8011b40:	f8d4 20f8 	ldr.w	r2, [r4, #248]	; 0xf8
 8011b44:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 8011b48:	f8c4 2104 	str.w	r2, [r4, #260]	; 0x104
 8011b4c:	4628      	mov	r0, r5
 8011b4e:	f014 ff49 	bl	80269e4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8011b52:	2301      	movs	r3, #1
 8011b54:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8011b58:	bd38      	pop	{r3, r4, r5, pc}
 8011b5a:	bf00      	nop
 8011b5c:	43960000 	.word	0x43960000

08011b60 <_ZN8touchgfx5Gauge9setNeedleEtss>:
 8011b60:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8011b62:	4604      	mov	r4, r0
 8011b64:	a802      	add	r0, sp, #8
 8011b66:	4616      	mov	r6, r2
 8011b68:	f820 1d04 	strh.w	r1, [r0, #-4]!
 8011b6c:	461d      	mov	r5, r3
 8011b6e:	4601      	mov	r1, r0
 8011b70:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8011b74:	f015 f88c 	bl	8026c90 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>
 8011b78:	f8a4 6154 	strh.w	r6, [r4, #340]	; 0x154
 8011b7c:	f8a4 5156 	strh.w	r5, [r4, #342]	; 0x156
 8011b80:	4620      	mov	r0, r4
 8011b82:	f7ff ff95 	bl	8011ab0 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 8011b86:	b002      	add	sp, #8
 8011b88:	bd70      	pop	{r4, r5, r6, pc}

08011b8a <_ZN8touchgfx5Gauge9setCenterEii>:
 8011b8a:	b570      	push	{r4, r5, r6, lr}
 8011b8c:	4606      	mov	r6, r0
 8011b8e:	460d      	mov	r5, r1
 8011b90:	f8a6 1150 	strh.w	r1, [r6, #336]	; 0x150
 8011b94:	f8a6 2152 	strh.w	r2, [r6, #338]	; 0x152
 8011b98:	4614      	mov	r4, r2
 8011b9a:	f7ff ff89 	bl	8011ab0 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 8011b9e:	f9b6 215e 	ldrsh.w	r2, [r6, #350]	; 0x15e
 8011ba2:	f9b6 115c 	ldrsh.w	r1, [r6, #348]	; 0x15c
 8011ba6:	1aa4      	subs	r4, r4, r2
 8011ba8:	1a6d      	subs	r5, r5, r1
 8011baa:	0164      	lsls	r4, r4, #5
 8011bac:	016d      	lsls	r5, r5, #5
 8011bae:	3410      	adds	r4, #16
 8011bb0:	3510      	adds	r5, #16
 8011bb2:	f8c6 5184 	str.w	r5, [r6, #388]	; 0x184
 8011bb6:	f8c6 4188 	str.w	r4, [r6, #392]	; 0x188
 8011bba:	bd70      	pop	{r4, r5, r6, pc}

08011bbc <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>:
 8011bbc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8011bbe:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 8011bc0:	0149      	lsls	r1, r1, #5
 8011bc2:	4299      	cmp	r1, r3
 8011bc4:	4604      	mov	r4, r0
 8011bc6:	9101      	str	r1, [sp, #4]
 8011bc8:	d00b      	beq.n	8011be2 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_+0x26>
 8011bca:	4601      	mov	r1, r0
 8011bcc:	aa01      	add	r2, sp, #4
 8011bce:	a802      	add	r0, sp, #8
 8011bd0:	f014 fafe 	bl	80261d0 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>
 8011bd4:	9b01      	ldr	r3, [sp, #4]
 8011bd6:	63e3      	str	r3, [r4, #60]	; 0x3c
 8011bd8:	6823      	ldr	r3, [r4, #0]
 8011bda:	a902      	add	r1, sp, #8
 8011bdc:	691b      	ldr	r3, [r3, #16]
 8011bde:	4620      	mov	r0, r4
 8011be0:	4798      	blx	r3
 8011be2:	b004      	add	sp, #16
 8011be4:	bd10      	pop	{r4, pc}
	...

08011be8 <_ZN8touchgfx5Gauge8setValueEi>:
 8011be8:	b570      	push	{r4, r5, r6, lr}
 8011bea:	4604      	mov	r4, r0
 8011bec:	f7fd fba2 	bl	800f334 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>
 8011bf0:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 8011bf4:	429a      	cmp	r2, r3
 8011bf6:	bfac      	ite	ge
 8011bf8:	f894 3145 	ldrbge.w	r3, [r4, #325]	; 0x145
 8011bfc:	f894 3144 	ldrblt.w	r3, [r4, #324]	; 0x144
 8011c00:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8011c04:	f8d4 114c 	ldr.w	r1, [r4, #332]	; 0x14c
 8011c08:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8011c0c:	1ac9      	subs	r1, r1, r3
 8011c0e:	2900      	cmp	r1, #0
 8011c10:	bfb8      	it	lt
 8011c12:	4249      	neglt	r1, r1
 8011c14:	b289      	uxth	r1, r1
 8011c16:	4620      	mov	r0, r4
 8011c18:	f7fd fbae 	bl	800f378 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>
 8011c1c:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8011c20:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 8011c24:	eddf 6a19 	vldr	s13, [pc, #100]	; 8011c8c <_ZN8touchgfx5Gauge8setValueEi+0xa4>
 8011c28:	ed9f 7a19 	vldr	s14, [pc, #100]	; 8011c90 <_ZN8touchgfx5Gauge8setValueEi+0xa8>
 8011c2c:	429a      	cmp	r2, r3
 8011c2e:	4605      	mov	r5, r0
 8011c30:	f504 76ac 	add.w	r6, r4, #344	; 0x158
 8011c34:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8011c38:	da15      	bge.n	8011c66 <_ZN8touchgfx5Gauge8setValueEi+0x7e>
 8011c3a:	1b5b      	subs	r3, r3, r5
 8011c3c:	ee07 3a90 	vmov	s15, r3
 8011c40:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011c44:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8011c48:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 8011c4c:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 8011c50:	ee21 1a07 	vmul.f32	s2, s2, s14
 8011c54:	f014 fe35 	bl	80268c2 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8011c58:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 8011c5c:	1b49      	subs	r1, r1, r5
 8011c5e:	4630      	mov	r0, r6
 8011c60:	f7ff ffac 	bl	8011bbc <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>
 8011c64:	bd70      	pop	{r4, r5, r6, pc}
 8011c66:	442b      	add	r3, r5
 8011c68:	ee07 3a90 	vmov	s15, r3
 8011c6c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011c70:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8011c74:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 8011c78:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 8011c7c:	ee21 1a07 	vmul.f32	s2, s2, s14
 8011c80:	f014 fe1f 	bl	80268c2 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8011c84:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 8011c88:	4429      	add	r1, r5
 8011c8a:	e7e8      	b.n	8011c5e <_ZN8touchgfx5Gauge8setValueEi+0x76>
 8011c8c:	43340000 	.word	0x43340000
 8011c90:	40490fdb 	.word	0x40490fdb

08011c94 <_ZN8touchgfx5Gauge16setStartEndAngleEii>:
 8011c94:	b510      	push	{r4, lr}
 8011c96:	f8c0 1148 	str.w	r1, [r0, #328]	; 0x148
 8011c9a:	f8c0 214c 	str.w	r2, [r0, #332]	; 0x14c
 8011c9e:	0149      	lsls	r1, r1, #5
 8011ca0:	0152      	lsls	r2, r2, #5
 8011ca2:	f8c0 1190 	str.w	r1, [r0, #400]	; 0x190
 8011ca6:	f8c0 2194 	str.w	r2, [r0, #404]	; 0x194
 8011caa:	4604      	mov	r4, r0
 8011cac:	f7fd faec 	bl	800f288 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>
 8011cb0:	4601      	mov	r1, r0
 8011cb2:	4620      	mov	r0, r4
 8011cb4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011cb8:	f7ff bf96 	b.w	8011be8 <_ZN8touchgfx5Gauge8setValueEi>

08011cbc <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 8011cbc:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8011cc0:	4770      	bx	lr

08011cc2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 8011cc2:	b570      	push	{r4, r5, r6, lr}
 8011cc4:	880b      	ldrh	r3, [r1, #0]
 8011cc6:	85c3      	strh	r3, [r0, #46]	; 0x2e
 8011cc8:	4605      	mov	r5, r0
 8011cca:	8813      	ldrh	r3, [r2, #0]
 8011ccc:	f825 3f30 	strh.w	r3, [r5, #48]!
 8011cd0:	4604      	mov	r4, r0
 8011cd2:	4628      	mov	r0, r5
 8011cd4:	f006 f912 	bl	8017efc <_ZNK8touchgfx6Bitmap8getWidthEv>
 8011cd8:	4606      	mov	r6, r0
 8011cda:	4628      	mov	r0, r5
 8011cdc:	f006 f942 	bl	8017f64 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8011ce0:	6823      	ldr	r3, [r4, #0]
 8011ce2:	4605      	mov	r5, r0
 8011ce4:	4631      	mov	r1, r6
 8011ce6:	4620      	mov	r0, r4
 8011ce8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011cea:	4798      	blx	r3
 8011cec:	6823      	ldr	r3, [r4, #0]
 8011cee:	4629      	mov	r1, r5
 8011cf0:	4620      	mov	r0, r4
 8011cf2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8011cf4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011cf8:	4718      	bx	r3

08011cfa <_ZN8touchgfx14AbstractButton13executeActionEv>:
 8011cfa:	b510      	push	{r4, lr}
 8011cfc:	4604      	mov	r4, r0
 8011cfe:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8011d00:	b150      	cbz	r0, 8011d18 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8011d02:	6803      	ldr	r3, [r0, #0]
 8011d04:	68db      	ldr	r3, [r3, #12]
 8011d06:	4798      	blx	r3
 8011d08:	b130      	cbz	r0, 8011d18 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8011d0a:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8011d0c:	6803      	ldr	r3, [r0, #0]
 8011d0e:	4621      	mov	r1, r4
 8011d10:	689b      	ldr	r3, [r3, #8]
 8011d12:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011d16:	4718      	bx	r3
 8011d18:	bd10      	pop	{r4, pc}

08011d1a <_ZNK8touchgfx6Button12getSolidRectEv>:
 8011d1a:	b510      	push	{r4, lr}
 8011d1c:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 8011d20:	2bff      	cmp	r3, #255	; 0xff
 8011d22:	4604      	mov	r4, r0
 8011d24:	d006      	beq.n	8011d34 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 8011d26:	2300      	movs	r3, #0
 8011d28:	8003      	strh	r3, [r0, #0]
 8011d2a:	8043      	strh	r3, [r0, #2]
 8011d2c:	8083      	strh	r3, [r0, #4]
 8011d2e:	80c3      	strh	r3, [r0, #6]
 8011d30:	4620      	mov	r0, r4
 8011d32:	bd10      	pop	{r4, pc}
 8011d34:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 8011d38:	b11b      	cbz	r3, 8011d42 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 8011d3a:	3130      	adds	r1, #48	; 0x30
 8011d3c:	f006 f946 	bl	8017fcc <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8011d40:	e7f6      	b.n	8011d30 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 8011d42:	312e      	adds	r1, #46	; 0x2e
 8011d44:	e7fa      	b.n	8011d3c <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

08011d48 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 8011d48:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011d4c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8011d50:	b08a      	sub	sp, #40	; 0x28
 8011d52:	4604      	mov	r4, r0
 8011d54:	4688      	mov	r8, r1
 8011d56:	2b00      	cmp	r3, #0
 8011d58:	d066      	beq.n	8011e28 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 8011d5a:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8011d5c:	f8ad 3014 	strh.w	r3, [sp, #20]
 8011d60:	a805      	add	r0, sp, #20
 8011d62:	f006 f8cb 	bl	8017efc <_ZNK8touchgfx6Bitmap8getWidthEv>
 8011d66:	4607      	mov	r7, r0
 8011d68:	a805      	add	r0, sp, #20
 8011d6a:	f006 f8fb 	bl	8017f64 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8011d6e:	f9b8 6000 	ldrsh.w	r6, [r8]
 8011d72:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 8011d76:	4432      	add	r2, r6
 8011d78:	b292      	uxth	r2, r2
 8011d7a:	2300      	movs	r3, #0
 8011d7c:	fa0f fc82 	sxth.w	ip, r2
 8011d80:	459c      	cmp	ip, r3
 8011d82:	9306      	str	r3, [sp, #24]
 8011d84:	dd52      	ble.n	8011e2c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8011d86:	42b7      	cmp	r7, r6
 8011d88:	dd50      	ble.n	8011e2c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8011d8a:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 8011d8e:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8011d92:	442b      	add	r3, r5
 8011d94:	b29b      	uxth	r3, r3
 8011d96:	b219      	sxth	r1, r3
 8011d98:	2900      	cmp	r1, #0
 8011d9a:	dd47      	ble.n	8011e2c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8011d9c:	42a8      	cmp	r0, r5
 8011d9e:	dd45      	ble.n	8011e2c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8011da0:	4567      	cmp	r7, ip
 8011da2:	bfb8      	it	lt
 8011da4:	b2ba      	uxthlt	r2, r7
 8011da6:	4288      	cmp	r0, r1
 8011da8:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 8011dac:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8011db0:	bfb8      	it	lt
 8011db2:	b283      	uxthlt	r3, r0
 8011db4:	1b92      	subs	r2, r2, r6
 8011db6:	1b5b      	subs	r3, r3, r5
 8011db8:	f8ad 201c 	strh.w	r2, [sp, #28]
 8011dbc:	f8ad 301e 	strh.w	r3, [sp, #30]
 8011dc0:	f8ad 6018 	strh.w	r6, [sp, #24]
 8011dc4:	f8ad 501a 	strh.w	r5, [sp, #26]
 8011dc8:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8011dcc:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8011dd0:	429a      	cmp	r2, r3
 8011dd2:	d026      	beq.n	8011e22 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8011dd4:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8011dd8:	2b00      	cmp	r3, #0
 8011dda:	dd22      	ble.n	8011e22 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8011ddc:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8011de0:	2b00      	cmp	r3, #0
 8011de2:	dd1e      	ble.n	8011e22 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8011de4:	2300      	movs	r3, #0
 8011de6:	e9cd 3308 	strd	r3, r3, [sp, #32]
 8011dea:	6823      	ldr	r3, [r4, #0]
 8011dec:	a908      	add	r1, sp, #32
 8011dee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011df0:	4620      	mov	r0, r4
 8011df2:	4798      	blx	r3
 8011df4:	4b0f      	ldr	r3, [pc, #60]	; (8011e34 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 8011df6:	681b      	ldr	r3, [r3, #0]
 8011df8:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8011dfc:	b10a      	cbz	r2, 8011e02 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 8011dfe:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8011e00:	b900      	cbnz	r0, 8011e04 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 8011e02:	6898      	ldr	r0, [r3, #8]
 8011e04:	6801      	ldr	r1, [r0, #0]
 8011e06:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8011e0a:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8011e0e:	2501      	movs	r5, #1
 8011e10:	9502      	str	r5, [sp, #8]
 8011e12:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 8011e16:	9401      	str	r4, [sp, #4]
 8011e18:	ac06      	add	r4, sp, #24
 8011e1a:	9400      	str	r4, [sp, #0]
 8011e1c:	688c      	ldr	r4, [r1, #8]
 8011e1e:	a905      	add	r1, sp, #20
 8011e20:	47a0      	blx	r4
 8011e22:	b00a      	add	sp, #40	; 0x28
 8011e24:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011e28:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 8011e2a:	e797      	b.n	8011d5c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 8011e2c:	2300      	movs	r3, #0
 8011e2e:	9307      	str	r3, [sp, #28]
 8011e30:	e7ca      	b.n	8011dc8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 8011e32:	bf00      	nop
 8011e34:	200137bc 	.word	0x200137bc

08011e38 <_ZNK8touchgfx6Button17invalidateContentEv>:
 8011e38:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 8011e3c:	b12a      	cbz	r2, 8011e4a <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8011e3e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8011e42:	b112      	cbz	r2, 8011e4a <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8011e44:	6803      	ldr	r3, [r0, #0]
 8011e46:	695b      	ldr	r3, [r3, #20]
 8011e48:	4718      	bx	r3
 8011e4a:	4770      	bx	lr

08011e4c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 8011e4c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011e50:	4b2f      	ldr	r3, [pc, #188]	; (8011f10 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 8011e52:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8011e54:	881b      	ldrh	r3, [r3, #0]
 8011e56:	4293      	cmp	r3, r2
 8011e58:	b08d      	sub	sp, #52	; 0x34
 8011e5a:	4604      	mov	r4, r0
 8011e5c:	460f      	mov	r7, r1
 8011e5e:	d954      	bls.n	8011f0a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8011e60:	4b2c      	ldr	r3, [pc, #176]	; (8011f14 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 8011e62:	6819      	ldr	r1, [r3, #0]
 8011e64:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 8011e68:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 8011e6c:	4a2a      	ldr	r2, [pc, #168]	; (8011f18 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 8011e6e:	6812      	ldr	r2, [r2, #0]
 8011e70:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 8011e74:	2900      	cmp	r1, #0
 8011e76:	d048      	beq.n	8011f0a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8011e78:	785a      	ldrb	r2, [r3, #1]
 8011e7a:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 8011e7e:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 8011e82:	4b26      	ldr	r3, [pc, #152]	; (8011f1c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 8011e84:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 8011e88:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 8011e8c:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 8011e90:	6b26      	ldr	r6, [r4, #48]	; 0x30
 8011e92:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 8011e96:	9107      	str	r1, [sp, #28]
 8011e98:	f3c2 0801 	ubfx	r8, r2, #0, #2
 8011e9c:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8011ea0:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 8011ea4:	681a      	ldr	r2, [r3, #0]
 8011ea6:	f88d 8020 	strb.w	r8, [sp, #32]
 8011eaa:	f892 3058 	ldrb.w	r3, [r2, #88]	; 0x58
 8011eae:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 8011eb2:	9609      	str	r6, [sp, #36]	; 0x24
 8011eb4:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 8011eb8:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 8011ebc:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 8011ec0:	b10b      	cbz	r3, 8011ec6 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 8011ec2:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 8011ec4:	b905      	cbnz	r5, 8011ec8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 8011ec6:	6895      	ldr	r5, [r2, #8]
 8011ec8:	ae05      	add	r6, sp, #20
 8011eca:	4621      	mov	r1, r4
 8011ecc:	4630      	mov	r0, r6
 8011ece:	f003 ff7b 	bl	8015dc8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011ed2:	4b13      	ldr	r3, [pc, #76]	; (8011f20 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 8011ed4:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8011ed6:	6818      	ldr	r0, [r3, #0]
 8011ed8:	f7f5 fe2e 	bl	8007b38 <_ZNK8touchgfx5Texts7getTextEt>
 8011edc:	6823      	ldr	r3, [r4, #0]
 8011ede:	4680      	mov	r8, r0
 8011ee0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011ee2:	4620      	mov	r0, r4
 8011ee4:	4798      	blx	r3
 8011ee6:	6823      	ldr	r3, [r4, #0]
 8011ee8:	4681      	mov	r9, r0
 8011eea:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8011eee:	4620      	mov	r0, r4
 8011ef0:	4798      	blx	r3
 8011ef2:	e9cd 9002 	strd	r9, r0, [sp, #8]
 8011ef6:	ab07      	add	r3, sp, #28
 8011ef8:	9300      	str	r3, [sp, #0]
 8011efa:	f8cd 8004 	str.w	r8, [sp, #4]
 8011efe:	463b      	mov	r3, r7
 8011f00:	e896 0006 	ldmia.w	r6, {r1, r2}
 8011f04:	4628      	mov	r0, r5
 8011f06:	f7f5 fdc9 	bl	8007a9c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8011f0a:	b00d      	add	sp, #52	; 0x34
 8011f0c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011f10:	20013818 	.word	0x20013818
 8011f14:	20013814 	.word	0x20013814
 8011f18:	2001381c 	.word	0x2001381c
 8011f1c:	200137bc 	.word	0x200137bc
 8011f20:	20013820 	.word	0x20013820

08011f24 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_>:
 8011f24:	4770      	bx	lr

08011f26 <_ZN8touchgfx14ButtonWithIconD1Ev>:
 8011f26:	4770      	bx	lr

08011f28 <_ZN8touchgfx14ButtonWithIconD0Ev>:
 8011f28:	b510      	push	{r4, lr}
 8011f2a:	213c      	movs	r1, #60	; 0x3c
 8011f2c:	4604      	mov	r4, r0
 8011f2e:	f015 fb26 	bl	802757e <_ZdlPvj>
 8011f32:	4620      	mov	r0, r4
 8011f34:	bd10      	pop	{r4, pc}

08011f36 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
 8011f36:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011f3a:	461c      	mov	r4, r3
 8011f3c:	4606      	mov	r6, r0
 8011f3e:	9f06      	ldr	r7, [sp, #24]
 8011f40:	f7ff febf 	bl	8011cc2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8011f44:	8823      	ldrh	r3, [r4, #0]
 8011f46:	86b3      	strh	r3, [r6, #52]	; 0x34
 8011f48:	883b      	ldrh	r3, [r7, #0]
 8011f4a:	86f3      	strh	r3, [r6, #54]	; 0x36
 8011f4c:	4638      	mov	r0, r7
 8011f4e:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
 8011f52:	f005 ffd3 	bl	8017efc <_ZNK8touchgfx6Bitmap8getWidthEv>
 8011f56:	f04f 0802 	mov.w	r8, #2
 8011f5a:	fb95 f5f8 	sdiv	r5, r5, r8
 8011f5e:	b2ad      	uxth	r5, r5
 8011f60:	fb90 f0f8 	sdiv	r0, r0, r8
 8011f64:	1a2d      	subs	r5, r5, r0
 8011f66:	8735      	strh	r5, [r6, #56]	; 0x38
 8011f68:	4638      	mov	r0, r7
 8011f6a:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
 8011f6e:	fb94 f4f8 	sdiv	r4, r4, r8
 8011f72:	f005 fff7 	bl	8017f64 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8011f76:	b2a4      	uxth	r4, r4
 8011f78:	fb90 f0f8 	sdiv	r0, r0, r8
 8011f7c:	1a24      	subs	r4, r4, r0
 8011f7e:	8774      	strh	r4, [r6, #58]	; 0x3a
 8011f80:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08011f84 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
 8011f84:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011f88:	4604      	mov	r4, r0
 8011f8a:	b08c      	sub	sp, #48	; 0x30
 8011f8c:	460d      	mov	r5, r1
 8011f8e:	f7ff fedb 	bl	8011d48 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 8011f92:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8011f96:	2b00      	cmp	r3, #0
 8011f98:	d05d      	beq.n	8012056 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd2>
 8011f9a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8011f9c:	f8ad 3014 	strh.w	r3, [sp, #20]
 8011fa0:	a805      	add	r0, sp, #20
 8011fa2:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	; 0x38
 8011fa6:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	; 0x3a
 8011faa:	f005 ffa7 	bl	8017efc <_ZNK8touchgfx6Bitmap8getWidthEv>
 8011fae:	4606      	mov	r6, r0
 8011fb0:	a805      	add	r0, sp, #20
 8011fb2:	f005 ffd7 	bl	8017f64 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8011fb6:	6869      	ldr	r1, [r5, #4]
 8011fb8:	f8ad 001e 	strh.w	r0, [sp, #30]
 8011fbc:	6828      	ldr	r0, [r5, #0]
 8011fbe:	f8ad 8018 	strh.w	r8, [sp, #24]
 8011fc2:	ab08      	add	r3, sp, #32
 8011fc4:	ad08      	add	r5, sp, #32
 8011fc6:	c303      	stmia	r3!, {r0, r1}
 8011fc8:	a906      	add	r1, sp, #24
 8011fca:	4628      	mov	r0, r5
 8011fcc:	f8ad 701a 	strh.w	r7, [sp, #26]
 8011fd0:	f8ad 601c 	strh.w	r6, [sp, #28]
 8011fd4:	f7fd fc62 	bl	800f89c <_ZN8touchgfx4RectaNERKS0_>
 8011fd8:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8011fdc:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8011fe0:	429a      	cmp	r2, r3
 8011fe2:	d035      	beq.n	8012050 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8011fe4:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8011fe8:	2b00      	cmp	r3, #0
 8011fea:	dd31      	ble.n	8012050 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8011fec:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	; 0x26
 8011ff0:	2b00      	cmp	r3, #0
 8011ff2:	dd2d      	ble.n	8012050 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8011ff4:	2300      	movs	r3, #0
 8011ff6:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
 8011ffa:	6823      	ldr	r3, [r4, #0]
 8011ffc:	a90a      	add	r1, sp, #40	; 0x28
 8011ffe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012000:	4620      	mov	r0, r4
 8012002:	4798      	blx	r3
 8012004:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8012008:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 801200a:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 801200e:	1a9b      	subs	r3, r3, r2
 8012010:	f8ad 3020 	strh.w	r3, [sp, #32]
 8012014:	8f63      	ldrh	r3, [r4, #58]	; 0x3a
 8012016:	1ac9      	subs	r1, r1, r3
 8012018:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
 801201c:	490f      	ldr	r1, [pc, #60]	; (801205c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd8>)
 801201e:	6809      	ldr	r1, [r1, #0]
 8012020:	f891 0058 	ldrb.w	r0, [r1, #88]	; 0x58
 8012024:	b108      	cbz	r0, 801202a <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa6>
 8012026:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
 8012028:	b900      	cbnz	r0, 801202c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa8>
 801202a:	6888      	ldr	r0, [r1, #8]
 801202c:	f8bd 102a 	ldrh.w	r1, [sp, #42]	; 0x2a
 8012030:	440b      	add	r3, r1
 8012032:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 8012036:	2601      	movs	r6, #1
 8012038:	440a      	add	r2, r1
 801203a:	6801      	ldr	r1, [r0, #0]
 801203c:	9602      	str	r6, [sp, #8]
 801203e:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 8012042:	e9cd 5400 	strd	r5, r4, [sp]
 8012046:	b21b      	sxth	r3, r3
 8012048:	688c      	ldr	r4, [r1, #8]
 801204a:	b212      	sxth	r2, r2
 801204c:	a905      	add	r1, sp, #20
 801204e:	47a0      	blx	r4
 8012050:	b00c      	add	sp, #48	; 0x30
 8012052:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012056:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8012058:	e7a0      	b.n	8011f9c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x18>
 801205a:	bf00      	nop
 801205c:	200137bc 	.word	0x200137bc

08012060 <_ZN8touchgfx14ButtonWithIconC1Ev>:
 8012060:	b510      	push	{r4, lr}
 8012062:	2101      	movs	r1, #1
 8012064:	2200      	movs	r2, #0
 8012066:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 801206a:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 801206e:	4c0e      	ldr	r4, [pc, #56]	; (80120a8 <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
 8012070:	8082      	strh	r2, [r0, #4]
 8012072:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8012076:	80c2      	strh	r2, [r0, #6]
 8012078:	8102      	strh	r2, [r0, #8]
 801207a:	8142      	strh	r2, [r0, #10]
 801207c:	8182      	strh	r2, [r0, #12]
 801207e:	81c2      	strh	r2, [r0, #14]
 8012080:	8202      	strh	r2, [r0, #16]
 8012082:	8242      	strh	r2, [r0, #18]
 8012084:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8012088:	61c2      	str	r2, [r0, #28]
 801208a:	8402      	strh	r2, [r0, #32]
 801208c:	8442      	strh	r2, [r0, #34]	; 0x22
 801208e:	6282      	str	r2, [r0, #40]	; 0x28
 8012090:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 8012094:	85c1      	strh	r1, [r0, #46]	; 0x2e
 8012096:	8601      	strh	r1, [r0, #48]	; 0x30
 8012098:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 801209c:	6004      	str	r4, [r0, #0]
 801209e:	8681      	strh	r1, [r0, #52]	; 0x34
 80120a0:	86c1      	strh	r1, [r0, #54]	; 0x36
 80120a2:	8702      	strh	r2, [r0, #56]	; 0x38
 80120a4:	8742      	strh	r2, [r0, #58]	; 0x3a
 80120a6:	bd10      	pop	{r4, pc}
 80120a8:	0802c820 	.word	0x0802c820

080120ac <_ZN8touchgfx5ImageD1Ev>:
 80120ac:	4770      	bx	lr

080120ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 80120ae:	b570      	push	{r4, r5, r6, lr}
 80120b0:	880b      	ldrh	r3, [r1, #0]
 80120b2:	84c3      	strh	r3, [r0, #38]	; 0x26
 80120b4:	4604      	mov	r4, r0
 80120b6:	4608      	mov	r0, r1
 80120b8:	460d      	mov	r5, r1
 80120ba:	f005 ff1f 	bl	8017efc <_ZNK8touchgfx6Bitmap8getWidthEv>
 80120be:	4606      	mov	r6, r0
 80120c0:	4628      	mov	r0, r5
 80120c2:	f005 ff4f 	bl	8017f64 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80120c6:	6823      	ldr	r3, [r4, #0]
 80120c8:	4605      	mov	r5, r0
 80120ca:	4631      	mov	r1, r6
 80120cc:	4620      	mov	r0, r4
 80120ce:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80120d0:	4798      	blx	r3
 80120d2:	6823      	ldr	r3, [r4, #0]
 80120d4:	4629      	mov	r1, r5
 80120d6:	4620      	mov	r0, r4
 80120d8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80120da:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80120de:	4718      	bx	r3

080120e0 <_ZN8touchgfx5ImageD0Ev>:
 80120e0:	b510      	push	{r4, lr}
 80120e2:	212c      	movs	r1, #44	; 0x2c
 80120e4:	4604      	mov	r4, r0
 80120e6:	f015 fa4a 	bl	802757e <_ZdlPvj>
 80120ea:	4620      	mov	r0, r4
 80120ec:	bd10      	pop	{r4, pc}

080120ee <_ZNK8touchgfx5Image12getSolidRectEv>:
 80120ee:	b510      	push	{r4, lr}
 80120f0:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 80120f4:	2bff      	cmp	r3, #255	; 0xff
 80120f6:	4604      	mov	r4, r0
 80120f8:	d006      	beq.n	8012108 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 80120fa:	2300      	movs	r3, #0
 80120fc:	8003      	strh	r3, [r0, #0]
 80120fe:	8043      	strh	r3, [r0, #2]
 8012100:	8083      	strh	r3, [r0, #4]
 8012102:	80c3      	strh	r3, [r0, #6]
 8012104:	4620      	mov	r0, r4
 8012106:	bd10      	pop	{r4, pc}
 8012108:	3126      	adds	r1, #38	; 0x26
 801210a:	f005 ff5f 	bl	8017fcc <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801210e:	e7f9      	b.n	8012104 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

08012110 <_ZNK8touchgfx5Image17invalidateContentEv>:
 8012110:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 8012114:	b12a      	cbz	r2, 8012122 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 8012116:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 801211a:	b112      	cbz	r2, 8012122 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 801211c:	6803      	ldr	r3, [r0, #0]
 801211e:	695b      	ldr	r3, [r3, #20]
 8012120:	4718      	bx	r3
 8012122:	4770      	bx	lr

08012124 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 8012124:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012128:	4604      	mov	r4, r0
 801212a:	b088      	sub	sp, #32
 801212c:	f854 3b26 	ldr.w	r3, [r4], #38
 8012130:	2500      	movs	r5, #0
 8012132:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012134:	460f      	mov	r7, r1
 8012136:	e9cd 5504 	strd	r5, r5, [sp, #16]
 801213a:	a904      	add	r1, sp, #16
 801213c:	4606      	mov	r6, r0
 801213e:	4798      	blx	r3
 8012140:	4620      	mov	r0, r4
 8012142:	f005 fedb 	bl	8017efc <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012146:	4680      	mov	r8, r0
 8012148:	4620      	mov	r0, r4
 801214a:	f005 ff0b 	bl	8017f64 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801214e:	9506      	str	r5, [sp, #24]
 8012150:	ad06      	add	r5, sp, #24
 8012152:	f8ad 001e 	strh.w	r0, [sp, #30]
 8012156:	4639      	mov	r1, r7
 8012158:	4628      	mov	r0, r5
 801215a:	f8ad 801c 	strh.w	r8, [sp, #28]
 801215e:	f7fd fb9d 	bl	800f89c <_ZN8touchgfx4RectaNERKS0_>
 8012162:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8012166:	2b00      	cmp	r3, #0
 8012168:	dd19      	ble.n	801219e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 801216a:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 801216e:	2b00      	cmp	r3, #0
 8012170:	dd15      	ble.n	801219e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8012172:	4b0c      	ldr	r3, [pc, #48]	; (80121a4 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 8012174:	681b      	ldr	r3, [r3, #0]
 8012176:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801217a:	b10a      	cbz	r2, 8012180 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 801217c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 801217e:	b900      	cbnz	r0, 8012182 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 8012180:	6898      	ldr	r0, [r3, #8]
 8012182:	6801      	ldr	r1, [r0, #0]
 8012184:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8012188:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801218c:	2701      	movs	r7, #1
 801218e:	9702      	str	r7, [sp, #8]
 8012190:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 8012194:	e9cd 5600 	strd	r5, r6, [sp]
 8012198:	688d      	ldr	r5, [r1, #8]
 801219a:	4621      	mov	r1, r4
 801219c:	47a8      	blx	r5
 801219e:	b008      	add	sp, #32
 80121a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80121a4:	200137bc 	.word	0x200137bc

080121a8 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 80121a8:	4770      	bx	lr

080121aa <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 80121aa:	b510      	push	{r4, lr}
 80121ac:	2148      	movs	r1, #72	; 0x48
 80121ae:	4604      	mov	r4, r0
 80121b0:	f015 f9e5 	bl	802757e <_ZdlPvj>
 80121b4:	4620      	mov	r0, r4
 80121b6:	bd10      	pop	{r4, pc}

080121b8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 80121b8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80121bc:	b08d      	sub	sp, #52	; 0x34
 80121be:	4604      	mov	r4, r0
 80121c0:	460f      	mov	r7, r1
 80121c2:	f7ff fdc1 	bl	8011d48 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 80121c6:	4a55      	ldr	r2, [pc, #340]	; (801231c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
 80121c8:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80121ca:	8812      	ldrh	r2, [r2, #0]
 80121cc:	429a      	cmp	r2, r3
 80121ce:	f240 8082 	bls.w	80122d6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 80121d2:	4d53      	ldr	r5, [pc, #332]	; (8012320 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
 80121d4:	682a      	ldr	r2, [r5, #0]
 80121d6:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 80121da:	4b52      	ldr	r3, [pc, #328]	; (8012324 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 80121dc:	681b      	ldr	r3, [r3, #0]
 80121de:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 80121e2:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	; 0x46
 80121e6:	2200      	movs	r2, #0
 80121e8:	e9cd 2203 	strd	r2, r2, [sp, #12]
 80121ec:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 80121f0:	2a03      	cmp	r2, #3
 80121f2:	d811      	bhi.n	8012218 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 80121f4:	e8df f002 	tbb	[pc, r2]
 80121f8:	89727902 	.word	0x89727902
 80121fc:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8012200:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8012204:	1ad2      	subs	r2, r2, r3
 8012206:	2002      	movs	r0, #2
 8012208:	f8ad 1010 	strh.w	r1, [sp, #16]
 801220c:	fb92 f2f0 	sdiv	r2, r2, r0
 8012210:	f8ad 3012 	strh.w	r3, [sp, #18]
 8012214:	f8ad 200e 	strh.w	r2, [sp, #14]
 8012218:	f10d 080c 	add.w	r8, sp, #12
 801221c:	e898 0003 	ldmia.w	r8, {r0, r1}
 8012220:	f10d 0914 	add.w	r9, sp, #20
 8012224:	e889 0003 	stmia.w	r9, {r0, r1}
 8012228:	4639      	mov	r1, r7
 801222a:	4648      	mov	r0, r9
 801222c:	f7fd fb36 	bl	800f89c <_ZN8touchgfx4RectaNERKS0_>
 8012230:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8012234:	2b00      	cmp	r3, #0
 8012236:	dd4e      	ble.n	80122d6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8012238:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 801223c:	2b00      	cmp	r3, #0
 801223e:	dd4a      	ble.n	80122d6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8012240:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8012244:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8012248:	1a9b      	subs	r3, r3, r2
 801224a:	f8ad 3014 	strh.w	r3, [sp, #20]
 801224e:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 8012252:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 8012256:	1a9b      	subs	r3, r3, r2
 8012258:	f8ad 3016 	strh.w	r3, [sp, #22]
 801225c:	6823      	ldr	r3, [r4, #0]
 801225e:	4641      	mov	r1, r8
 8012260:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012262:	4620      	mov	r0, r4
 8012264:	4798      	blx	r3
 8012266:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 801226a:	2b00      	cmp	r3, #0
 801226c:	d053      	beq.n	8012316 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
 801226e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8012270:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 8012272:	682b      	ldr	r3, [r5, #0]
 8012274:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 8012278:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 801227c:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8012280:	785b      	ldrb	r3, [r3, #1]
 8012282:	9209      	str	r2, [sp, #36]	; 0x24
 8012284:	f3c3 0501 	ubfx	r5, r3, #0, #2
 8012288:	f3c3 0381 	ubfx	r3, r3, #2, #2
 801228c:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 8012290:	2300      	movs	r3, #0
 8012292:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8012296:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 801229a:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 801229e:	4b22      	ldr	r3, [pc, #136]	; (8012328 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 80122a0:	9607      	str	r6, [sp, #28]
 80122a2:	681b      	ldr	r3, [r3, #0]
 80122a4:	f88d 5020 	strb.w	r5, [sp, #32]
 80122a8:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80122ac:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 80122b0:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 80122b4:	b10a      	cbz	r2, 80122ba <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 80122b6:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 80122b8:	b904      	cbnz	r4, 80122bc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
 80122ba:	689c      	ldr	r4, [r3, #8]
 80122bc:	4b1b      	ldr	r3, [pc, #108]	; (801232c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 80122be:	6818      	ldr	r0, [r3, #0]
 80122c0:	f7f5 fc3a 	bl	8007b38 <_ZNK8touchgfx5Texts7getTextEt>
 80122c4:	ab07      	add	r3, sp, #28
 80122c6:	9001      	str	r0, [sp, #4]
 80122c8:	9300      	str	r3, [sp, #0]
 80122ca:	e898 0006 	ldmia.w	r8, {r1, r2}
 80122ce:	464b      	mov	r3, r9
 80122d0:	4620      	mov	r0, r4
 80122d2:	f7f5 fbe3 	bl	8007a9c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 80122d6:	b00d      	add	sp, #52	; 0x34
 80122d8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80122dc:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 80122e0:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 80122e4:	1ad2      	subs	r2, r2, r3
 80122e6:	3201      	adds	r2, #1
 80122e8:	e78d      	b.n	8012206 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
 80122ea:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 80122ee:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 80122f2:	1ad2      	subs	r2, r2, r3
 80122f4:	3201      	adds	r2, #1
 80122f6:	2002      	movs	r0, #2
 80122f8:	f8ad 3010 	strh.w	r3, [sp, #16]
 80122fc:	fb92 f2f0 	sdiv	r2, r2, r0
 8012300:	f8ad 1012 	strh.w	r1, [sp, #18]
 8012304:	f8ad 200c 	strh.w	r2, [sp, #12]
 8012308:	e786      	b.n	8012218 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 801230a:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 801230e:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 8012312:	1ad2      	subs	r2, r2, r3
 8012314:	e7ef      	b.n	80122f6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
 8012316:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8012318:	e7aa      	b.n	8012270 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
 801231a:	bf00      	nop
 801231c:	20013818 	.word	0x20013818
 8012320:	20013814 	.word	0x20013814
 8012324:	2001381c 	.word	0x2001381c
 8012328:	200137bc 	.word	0x200137bc
 801232c:	20013820 	.word	0x20013820

08012330 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 8012330:	b510      	push	{r4, lr}
 8012332:	2101      	movs	r1, #1
 8012334:	4c13      	ldr	r4, [pc, #76]	; (8012384 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 8012336:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 801233a:	2200      	movs	r2, #0
 801233c:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 8012340:	6004      	str	r4, [r0, #0]
 8012342:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8012346:	4c10      	ldr	r4, [pc, #64]	; (8012388 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 8012348:	8082      	strh	r2, [r0, #4]
 801234a:	80c2      	strh	r2, [r0, #6]
 801234c:	8102      	strh	r2, [r0, #8]
 801234e:	8142      	strh	r2, [r0, #10]
 8012350:	8182      	strh	r2, [r0, #12]
 8012352:	81c2      	strh	r2, [r0, #14]
 8012354:	8202      	strh	r2, [r0, #16]
 8012356:	8242      	strh	r2, [r0, #18]
 8012358:	e9c0 2205 	strd	r2, r2, [r0, #20]
 801235c:	61c2      	str	r2, [r0, #28]
 801235e:	8402      	strh	r2, [r0, #32]
 8012360:	8442      	strh	r2, [r0, #34]	; 0x22
 8012362:	6282      	str	r2, [r0, #40]	; 0x28
 8012364:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 8012368:	85c1      	strh	r1, [r0, #46]	; 0x2e
 801236a:	8601      	strh	r1, [r0, #48]	; 0x30
 801236c:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 8012370:	6344      	str	r4, [r0, #52]	; 0x34
 8012372:	8701      	strh	r1, [r0, #56]	; 0x38
 8012374:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 8012378:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 801237c:	f8a0 2046 	strh.w	r2, [r0, #70]	; 0x46
 8012380:	bd10      	pop	{r4, pc}
 8012382:	bf00      	nop
 8012384:	0802c904 	.word	0x0802c904
 8012388:	08029d88 	.word	0x08029d88

0801238c <_ZN8touchgfx7OutlineD1Ev>:
 801238c:	4770      	bx	lr

0801238e <_ZN8touchgfx7OutlineD0Ev>:
 801238e:	b510      	push	{r4, lr}
 8012390:	2130      	movs	r1, #48	; 0x30
 8012392:	4604      	mov	r4, r0
 8012394:	f015 f8f3 	bl	802757e <_ZdlPvj>
 8012398:	4620      	mov	r0, r4
 801239a:	bd10      	pop	{r4, pc}

0801239c <_ZN8touchgfx7Outline5resetEv>:
 801239c:	b510      	push	{r4, lr}
 801239e:	4604      	mov	r4, r0
 80123a0:	f000 fe96 	bl	80130d0 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 80123a4:	60e0      	str	r0, [r4, #12]
 80123a6:	f000 fe99 	bl	80130dc <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 80123aa:	68e3      	ldr	r3, [r4, #12]
 80123ac:	6123      	str	r3, [r4, #16]
 80123ae:	08c0      	lsrs	r0, r0, #3
 80123b0:	2200      	movs	r2, #0
 80123b2:	f647 71ff 	movw	r1, #32767	; 0x7fff
 80123b6:	3801      	subs	r0, #1
 80123b8:	6060      	str	r0, [r4, #4]
 80123ba:	60a2      	str	r2, [r4, #8]
 80123bc:	8019      	strh	r1, [r3, #0]
 80123be:	8059      	strh	r1, [r3, #2]
 80123c0:	809a      	strh	r2, [r3, #4]
 80123c2:	80da      	strh	r2, [r3, #6]
 80123c4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80123c6:	f023 0301 	bic.w	r3, r3, #1
 80123ca:	f043 0302 	orr.w	r3, r3, #2
 80123ce:	6263      	str	r3, [r4, #36]	; 0x24
 80123d0:	bd10      	pop	{r4, pc}
	...

080123d4 <_ZN8touchgfx7OutlineC1Ev>:
 80123d4:	b510      	push	{r4, lr}
 80123d6:	4b0a      	ldr	r3, [pc, #40]	; (8012400 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 80123d8:	6003      	str	r3, [r0, #0]
 80123da:	2300      	movs	r3, #0
 80123dc:	e9c0 3301 	strd	r3, r3, [r0, #4]
 80123e0:	e9c0 3303 	strd	r3, r3, [r0, #12]
 80123e4:	e9c0 3305 	strd	r3, r3, [r0, #20]
 80123e8:	e9c0 3307 	strd	r3, r3, [r0, #28]
 80123ec:	6243      	str	r3, [r0, #36]	; 0x24
 80123ee:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 80123f2:	4604      	mov	r4, r0
 80123f4:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 80123f8:	f7ff ffd0 	bl	801239c <_ZN8touchgfx7Outline5resetEv>
 80123fc:	4620      	mov	r0, r4
 80123fe:	bd10      	pop	{r4, pc}
 8012400:	0802c978 	.word	0x0802c978

08012404 <_ZN8touchgfx7Outline10renderLineEiiii>:
 8012404:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012408:	b093      	sub	sp, #76	; 0x4c
 801240a:	1156      	asrs	r6, r2, #5
 801240c:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 801240e:	9305      	str	r3, [sp, #20]
 8012410:	f004 051f 	and.w	r5, r4, #31
 8012414:	1153      	asrs	r3, r2, #5
 8012416:	9504      	str	r5, [sp, #16]
 8012418:	1165      	asrs	r5, r4, #5
 801241a:	9303      	str	r3, [sp, #12]
 801241c:	42ae      	cmp	r6, r5
 801241e:	ea4f 1364 	mov.w	r3, r4, asr #5
 8012422:	9306      	str	r3, [sp, #24]
 8012424:	f002 031f 	and.w	r3, r2, #31
 8012428:	f040 80f8 	bne.w	801261c <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 801242c:	9c04      	ldr	r4, [sp, #16]
 801242e:	9a05      	ldr	r2, [sp, #20]
 8012430:	42a3      	cmp	r3, r4
 8012432:	ea4f 1e62 	mov.w	lr, r2, asr #5
 8012436:	6902      	ldr	r2, [r0, #16]
 8012438:	d125      	bne.n	8012486 <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 801243a:	f9b2 3000 	ldrsh.w	r3, [r2]
 801243e:	459e      	cmp	lr, r3
 8012440:	d103      	bne.n	801244a <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 8012442:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8012446:	429e      	cmp	r6, r3
 8012448:	d035      	beq.n	80124b6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801244a:	88d1      	ldrh	r1, [r2, #6]
 801244c:	8893      	ldrh	r3, [r2, #4]
 801244e:	430b      	orrs	r3, r1
 8012450:	d010      	beq.n	8012474 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8012452:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8012456:	2b00      	cmp	r3, #0
 8012458:	db0c      	blt.n	8012474 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 801245a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 801245c:	428b      	cmp	r3, r1
 801245e:	da09      	bge.n	8012474 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8012460:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8012464:	428b      	cmp	r3, r1
 8012466:	bf38      	it	cc
 8012468:	3208      	addcc	r2, #8
 801246a:	f103 0301 	add.w	r3, r3, #1
 801246e:	bf38      	it	cc
 8012470:	6102      	strcc	r2, [r0, #16]
 8012472:	6083      	str	r3, [r0, #8]
 8012474:	6903      	ldr	r3, [r0, #16]
 8012476:	9a03      	ldr	r2, [sp, #12]
 8012478:	f8a3 e000 	strh.w	lr, [r3]
 801247c:	805a      	strh	r2, [r3, #2]
 801247e:	2200      	movs	r2, #0
 8012480:	809a      	strh	r2, [r3, #4]
 8012482:	80da      	strh	r2, [r3, #6]
 8012484:	e017      	b.n	80124b6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8012486:	9c05      	ldr	r4, [sp, #20]
 8012488:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 801248c:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 8012490:	f004 041f 	and.w	r4, r4, #31
 8012494:	114e      	asrs	r6, r1, #5
 8012496:	9402      	str	r4, [sp, #8]
 8012498:	9c04      	ldr	r4, [sp, #16]
 801249a:	4576      	cmp	r6, lr
 801249c:	f001 0c1f 	and.w	ip, r1, #31
 80124a0:	eba4 0403 	sub.w	r4, r4, r3
 80124a4:	d10a      	bne.n	80124bc <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 80124a6:	9b02      	ldr	r3, [sp, #8]
 80124a8:	449c      	add	ip, r3
 80124aa:	44a0      	add	r8, r4
 80124ac:	fb04 a40c 	mla	r4, r4, ip, sl
 80124b0:	f8a2 8004 	strh.w	r8, [r2, #4]
 80124b4:	80d4      	strh	r4, [r2, #6]
 80124b6:	b013      	add	sp, #76	; 0x4c
 80124b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80124bc:	9d05      	ldr	r5, [sp, #20]
 80124be:	1a69      	subs	r1, r5, r1
 80124c0:	bf5b      	ittet	pl
 80124c2:	f1cc 0520 	rsbpl	r5, ip, #32
 80124c6:	436c      	mulpl	r4, r5
 80124c8:	2500      	movmi	r5, #0
 80124ca:	2520      	movpl	r5, #32
 80124cc:	bf44      	itt	mi
 80124ce:	fb04 f40c 	mulmi.w	r4, r4, ip
 80124d2:	4249      	negmi	r1, r1
 80124d4:	9501      	str	r5, [sp, #4]
 80124d6:	9f01      	ldr	r7, [sp, #4]
 80124d8:	fb94 f5f1 	sdiv	r5, r4, r1
 80124dc:	fb01 4415 	mls	r4, r1, r5, r4
 80124e0:	bf54      	ite	pl
 80124e2:	f04f 0901 	movpl.w	r9, #1
 80124e6:	f04f 39ff 	movmi.w	r9, #4294967295
 80124ea:	2c00      	cmp	r4, #0
 80124ec:	bfb8      	it	lt
 80124ee:	f105 35ff 	addlt.w	r5, r5, #4294967295
 80124f2:	44bc      	add	ip, r7
 80124f4:	44a8      	add	r8, r5
 80124f6:	fb05 ac0c 	mla	ip, r5, ip, sl
 80124fa:	f8a2 8004 	strh.w	r8, [r2, #4]
 80124fe:	f8a2 c006 	strh.w	ip, [r2, #6]
 8012502:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012506:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 801250a:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 801250e:	bfb8      	it	lt
 8012510:	1864      	addlt	r4, r4, r1
 8012512:	ea58 0202 	orrs.w	r2, r8, r2
 8012516:	444e      	add	r6, r9
 8012518:	d011      	beq.n	801253e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 801251a:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 801251e:	f1b8 0f00 	cmp.w	r8, #0
 8012522:	db0c      	blt.n	801253e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8012524:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8012526:	4590      	cmp	r8, r2
 8012528:	da09      	bge.n	801253e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 801252a:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 801252e:	4590      	cmp	r8, r2
 8012530:	bf3c      	itt	cc
 8012532:	f10c 0208 	addcc.w	r2, ip, #8
 8012536:	6102      	strcc	r2, [r0, #16]
 8012538:	f108 0201 	add.w	r2, r8, #1
 801253c:	6082      	str	r2, [r0, #8]
 801253e:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012542:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8012546:	f8ac 6000 	strh.w	r6, [ip]
 801254a:	2700      	movs	r7, #0
 801254c:	45b6      	cmp	lr, r6
 801254e:	f8ac 2002 	strh.w	r2, [ip, #2]
 8012552:	f8ac 7004 	strh.w	r7, [ip, #4]
 8012556:	f8ac 7006 	strh.w	r7, [ip, #6]
 801255a:	442b      	add	r3, r5
 801255c:	d04d      	beq.n	80125fa <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 801255e:	9f04      	ldr	r7, [sp, #16]
 8012560:	1aff      	subs	r7, r7, r3
 8012562:	443d      	add	r5, r7
 8012564:	016d      	lsls	r5, r5, #5
 8012566:	fb95 f8f1 	sdiv	r8, r5, r1
 801256a:	fb01 5518 	mls	r5, r1, r8, r5
 801256e:	2d00      	cmp	r5, #0
 8012570:	bfb8      	it	lt
 8012572:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8012576:	f108 0701 	add.w	r7, r8, #1
 801257a:	bfb8      	it	lt
 801257c:	186d      	addlt	r5, r5, r1
 801257e:	1a64      	subs	r4, r4, r1
 8012580:	9703      	str	r7, [sp, #12]
 8012582:	f04f 0a00 	mov.w	sl, #0
 8012586:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801258a:	1964      	adds	r4, r4, r5
 801258c:	bf58      	it	pl
 801258e:	9f03      	ldrpl	r7, [sp, #12]
 8012590:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8012594:	bf48      	it	mi
 8012596:	4647      	movmi	r7, r8
 8012598:	44bb      	add	fp, r7
 801259a:	f8ac b004 	strh.w	fp, [ip, #4]
 801259e:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80125a2:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 80125a6:	f8ac b006 	strh.w	fp, [ip, #6]
 80125aa:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80125ae:	443b      	add	r3, r7
 80125b0:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80125b4:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 80125b8:	bf58      	it	pl
 80125ba:	1a64      	subpl	r4, r4, r1
 80125bc:	ea5b 0707 	orrs.w	r7, fp, r7
 80125c0:	444e      	add	r6, r9
 80125c2:	d011      	beq.n	80125e8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 80125c4:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 80125c8:	f1bb 0f00 	cmp.w	fp, #0
 80125cc:	db0c      	blt.n	80125e8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 80125ce:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80125d0:	45bb      	cmp	fp, r7
 80125d2:	da09      	bge.n	80125e8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 80125d4:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 80125d8:	45bb      	cmp	fp, r7
 80125da:	bf3c      	itt	cc
 80125dc:	f10c 0708 	addcc.w	r7, ip, #8
 80125e0:	6107      	strcc	r7, [r0, #16]
 80125e2:	f10b 0701 	add.w	r7, fp, #1
 80125e6:	6087      	str	r7, [r0, #8]
 80125e8:	6907      	ldr	r7, [r0, #16]
 80125ea:	45b6      	cmp	lr, r6
 80125ec:	803e      	strh	r6, [r7, #0]
 80125ee:	807a      	strh	r2, [r7, #2]
 80125f0:	f8a7 a004 	strh.w	sl, [r7, #4]
 80125f4:	f8a7 a006 	strh.w	sl, [r7, #6]
 80125f8:	d1c5      	bne.n	8012586 <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 80125fa:	9a04      	ldr	r2, [sp, #16]
 80125fc:	1ad3      	subs	r3, r2, r3
 80125fe:	6902      	ldr	r2, [r0, #16]
 8012600:	8891      	ldrh	r1, [r2, #4]
 8012602:	88d6      	ldrh	r6, [r2, #6]
 8012604:	4419      	add	r1, r3
 8012606:	8091      	strh	r1, [r2, #4]
 8012608:	9902      	ldr	r1, [sp, #8]
 801260a:	f101 0c20 	add.w	ip, r1, #32
 801260e:	9901      	ldr	r1, [sp, #4]
 8012610:	ebac 0c01 	sub.w	ip, ip, r1
 8012614:	fb03 630c 	mla	r3, r3, ip, r6
 8012618:	80d3      	strh	r3, [r2, #6]
 801261a:	e74c      	b.n	80124b6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801261c:	9d05      	ldr	r5, [sp, #20]
 801261e:	1aa2      	subs	r2, r4, r2
 8012620:	eba5 0501 	sub.w	r5, r5, r1
 8012624:	9508      	str	r5, [sp, #32]
 8012626:	9202      	str	r2, [sp, #8]
 8012628:	f140 8128 	bpl.w	801287c <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 801262c:	9a03      	ldr	r2, [sp, #12]
 801262e:	2a00      	cmp	r2, #0
 8012630:	f6ff af41 	blt.w	80124b6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8012634:	9a02      	ldr	r2, [sp, #8]
 8012636:	4252      	negs	r2, r2
 8012638:	9202      	str	r2, [sp, #8]
 801263a:	9a06      	ldr	r2, [sp, #24]
 801263c:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 8012640:	f04f 34ff 	mov.w	r4, #4294967295
 8012644:	9206      	str	r2, [sp, #24]
 8012646:	462a      	mov	r2, r5
 8012648:	940b      	str	r4, [sp, #44]	; 0x2c
 801264a:	435a      	muls	r2, r3
 801264c:	2400      	movs	r4, #0
 801264e:	9d02      	ldr	r5, [sp, #8]
 8012650:	9401      	str	r4, [sp, #4]
 8012652:	9c02      	ldr	r4, [sp, #8]
 8012654:	fb92 f4f4 	sdiv	r4, r2, r4
 8012658:	fb05 2214 	mls	r2, r5, r4, r2
 801265c:	2a00      	cmp	r2, #0
 801265e:	9207      	str	r2, [sp, #28]
 8012660:	bfbc      	itt	lt
 8012662:	1952      	addlt	r2, r2, r5
 8012664:	9207      	strlt	r2, [sp, #28]
 8012666:	9a01      	ldr	r2, [sp, #4]
 8012668:	6905      	ldr	r5, [r0, #16]
 801266a:	bfb8      	it	lt
 801266c:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8012670:	eb04 0901 	add.w	r9, r4, r1
 8012674:	429a      	cmp	r2, r3
 8012676:	ea4f 1669 	mov.w	r6, r9, asr #5
 801267a:	f040 8112 	bne.w	80128a2 <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 801267e:	f9b5 3000 	ldrsh.w	r3, [r5]
 8012682:	429e      	cmp	r6, r3
 8012684:	d104      	bne.n	8012690 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 8012686:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801268a:	9a03      	ldr	r2, [sp, #12]
 801268c:	429a      	cmp	r2, r3
 801268e:	d01b      	beq.n	80126c8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8012690:	88ea      	ldrh	r2, [r5, #6]
 8012692:	88ab      	ldrh	r3, [r5, #4]
 8012694:	4313      	orrs	r3, r2
 8012696:	d010      	beq.n	80126ba <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8012698:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801269c:	2a00      	cmp	r2, #0
 801269e:	db0c      	blt.n	80126ba <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 80126a0:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80126a2:	429a      	cmp	r2, r3
 80126a4:	da09      	bge.n	80126ba <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 80126a6:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 80126aa:	429a      	cmp	r2, r3
 80126ac:	bf38      	it	cc
 80126ae:	3508      	addcc	r5, #8
 80126b0:	f102 0201 	add.w	r2, r2, #1
 80126b4:	bf38      	it	cc
 80126b6:	6105      	strcc	r5, [r0, #16]
 80126b8:	6082      	str	r2, [r0, #8]
 80126ba:	6903      	ldr	r3, [r0, #16]
 80126bc:	9a03      	ldr	r2, [sp, #12]
 80126be:	805a      	strh	r2, [r3, #2]
 80126c0:	2200      	movs	r2, #0
 80126c2:	801e      	strh	r6, [r3, #0]
 80126c4:	809a      	strh	r2, [r3, #4]
 80126c6:	80da      	strh	r2, [r3, #6]
 80126c8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80126ca:	9a03      	ldr	r2, [sp, #12]
 80126cc:	6901      	ldr	r1, [r0, #16]
 80126ce:	441a      	add	r2, r3
 80126d0:	f9b1 3000 	ldrsh.w	r3, [r1]
 80126d4:	42b3      	cmp	r3, r6
 80126d6:	d103      	bne.n	80126e0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 80126d8:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 80126dc:	429a      	cmp	r2, r3
 80126de:	d01a      	beq.n	8012716 <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 80126e0:	88cc      	ldrh	r4, [r1, #6]
 80126e2:	888b      	ldrh	r3, [r1, #4]
 80126e4:	4323      	orrs	r3, r4
 80126e6:	d010      	beq.n	801270a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80126e8:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 80126ec:	2c00      	cmp	r4, #0
 80126ee:	db0c      	blt.n	801270a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80126f0:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80126f2:	429c      	cmp	r4, r3
 80126f4:	da09      	bge.n	801270a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80126f6:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 80126fa:	429c      	cmp	r4, r3
 80126fc:	bf38      	it	cc
 80126fe:	3108      	addcc	r1, #8
 8012700:	f104 0401 	add.w	r4, r4, #1
 8012704:	bf38      	it	cc
 8012706:	6101      	strcc	r1, [r0, #16]
 8012708:	6084      	str	r4, [r0, #8]
 801270a:	6903      	ldr	r3, [r0, #16]
 801270c:	2100      	movs	r1, #0
 801270e:	801e      	strh	r6, [r3, #0]
 8012710:	805a      	strh	r2, [r3, #2]
 8012712:	8099      	strh	r1, [r3, #4]
 8012714:	80d9      	strh	r1, [r3, #6]
 8012716:	9b06      	ldr	r3, [sp, #24]
 8012718:	4293      	cmp	r3, r2
 801271a:	f000 8082 	beq.w	8012822 <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 801271e:	9b08      	ldr	r3, [sp, #32]
 8012720:	9c02      	ldr	r4, [sp, #8]
 8012722:	9902      	ldr	r1, [sp, #8]
 8012724:	015b      	lsls	r3, r3, #5
 8012726:	fb93 f1f1 	sdiv	r1, r3, r1
 801272a:	fb04 3311 	mls	r3, r4, r1, r3
 801272e:	2b00      	cmp	r3, #0
 8012730:	9103      	str	r1, [sp, #12]
 8012732:	9308      	str	r3, [sp, #32]
 8012734:	da04      	bge.n	8012740 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 8012736:	1e4b      	subs	r3, r1, #1
 8012738:	9303      	str	r3, [sp, #12]
 801273a:	9b08      	ldr	r3, [sp, #32]
 801273c:	4423      	add	r3, r4
 801273e:	9308      	str	r3, [sp, #32]
 8012740:	9b07      	ldr	r3, [sp, #28]
 8012742:	9902      	ldr	r1, [sp, #8]
 8012744:	1a5b      	subs	r3, r3, r1
 8012746:	9307      	str	r3, [sp, #28]
 8012748:	9b01      	ldr	r3, [sp, #4]
 801274a:	f1c3 0320 	rsb	r3, r3, #32
 801274e:	930e      	str	r3, [sp, #56]	; 0x38
 8012750:	990e      	ldr	r1, [sp, #56]	; 0x38
 8012752:	9b01      	ldr	r3, [sp, #4]
 8012754:	1a5b      	subs	r3, r3, r1
 8012756:	464f      	mov	r7, r9
 8012758:	930a      	str	r3, [sp, #40]	; 0x28
 801275a:	2600      	movs	r6, #0
 801275c:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 8012760:	185b      	adds	r3, r3, r1
 8012762:	bf58      	it	pl
 8012764:	9902      	ldrpl	r1, [sp, #8]
 8012766:	9307      	str	r3, [sp, #28]
 8012768:	bf5d      	ittte	pl
 801276a:	1a5b      	subpl	r3, r3, r1
 801276c:	9307      	strpl	r3, [sp, #28]
 801276e:	9b03      	ldrpl	r3, [sp, #12]
 8012770:	9903      	ldrmi	r1, [sp, #12]
 8012772:	bf58      	it	pl
 8012774:	1c59      	addpl	r1, r3, #1
 8012776:	4489      	add	r9, r1
 8012778:	2a00      	cmp	r2, #0
 801277a:	ea4f 1a69 	mov.w	sl, r9, asr #5
 801277e:	db2e      	blt.n	80127de <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8012780:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8012782:	4293      	cmp	r3, r2
 8012784:	dd2b      	ble.n	80127de <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8012786:	9c01      	ldr	r4, [sp, #4]
 8012788:	6905      	ldr	r5, [r0, #16]
 801278a:	46a0      	mov	r8, r4
 801278c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801278e:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 8012792:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 8012796:	45a0      	cmp	r8, r4
 8012798:	f040 814f 	bne.w	8012a3a <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 801279c:	f9b5 1000 	ldrsh.w	r1, [r5]
 80127a0:	4551      	cmp	r1, sl
 80127a2:	d103      	bne.n	80127ac <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 80127a4:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 80127a8:	4291      	cmp	r1, r2
 80127aa:	d018      	beq.n	80127de <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 80127ac:	ea5c 010e 	orrs.w	r1, ip, lr
 80127b0:	d00f      	beq.n	80127d2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 80127b2:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 80127b6:	2900      	cmp	r1, #0
 80127b8:	db0b      	blt.n	80127d2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 80127ba:	428b      	cmp	r3, r1
 80127bc:	dd09      	ble.n	80127d2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 80127be:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 80127c2:	4299      	cmp	r1, r3
 80127c4:	bf38      	it	cc
 80127c6:	3508      	addcc	r5, #8
 80127c8:	f101 0101 	add.w	r1, r1, #1
 80127cc:	bf38      	it	cc
 80127ce:	6105      	strcc	r5, [r0, #16]
 80127d0:	6081      	str	r1, [r0, #8]
 80127d2:	6903      	ldr	r3, [r0, #16]
 80127d4:	f8a3 a000 	strh.w	sl, [r3]
 80127d8:	805a      	strh	r2, [r3, #2]
 80127da:	809e      	strh	r6, [r3, #4]
 80127dc:	80de      	strh	r6, [r3, #6]
 80127de:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80127e0:	6901      	ldr	r1, [r0, #16]
 80127e2:	441a      	add	r2, r3
 80127e4:	88cc      	ldrh	r4, [r1, #6]
 80127e6:	888b      	ldrh	r3, [r1, #4]
 80127e8:	4323      	orrs	r3, r4
 80127ea:	d010      	beq.n	801280e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 80127ec:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 80127f0:	2c00      	cmp	r4, #0
 80127f2:	db0c      	blt.n	801280e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 80127f4:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80127f6:	429c      	cmp	r4, r3
 80127f8:	da09      	bge.n	801280e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 80127fa:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 80127fe:	429c      	cmp	r4, r3
 8012800:	bf38      	it	cc
 8012802:	3108      	addcc	r1, #8
 8012804:	f104 0401 	add.w	r4, r4, #1
 8012808:	bf38      	it	cc
 801280a:	6101      	strcc	r1, [r0, #16]
 801280c:	6084      	str	r4, [r0, #8]
 801280e:	6903      	ldr	r3, [r0, #16]
 8012810:	f8a3 a000 	strh.w	sl, [r3]
 8012814:	805a      	strh	r2, [r3, #2]
 8012816:	809e      	strh	r6, [r3, #4]
 8012818:	80de      	strh	r6, [r3, #6]
 801281a:	9b06      	ldr	r3, [sp, #24]
 801281c:	4293      	cmp	r3, r2
 801281e:	464f      	mov	r7, r9
 8012820:	d19c      	bne.n	801275c <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 8012822:	9b01      	ldr	r3, [sp, #4]
 8012824:	6907      	ldr	r7, [r0, #16]
 8012826:	f1c3 0620 	rsb	r6, r3, #32
 801282a:	9b05      	ldr	r3, [sp, #20]
 801282c:	ea4f 1e63 	mov.w	lr, r3, asr #5
 8012830:	9b04      	ldr	r3, [sp, #16]
 8012832:	429e      	cmp	r6, r3
 8012834:	f040 81cc 	bne.w	8012bd0 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 8012838:	f9b7 3000 	ldrsh.w	r3, [r7]
 801283c:	459e      	cmp	lr, r3
 801283e:	d104      	bne.n	801284a <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 8012840:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8012844:	429a      	cmp	r2, r3
 8012846:	f43f ae36 	beq.w	80124b6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801284a:	88f9      	ldrh	r1, [r7, #6]
 801284c:	88bb      	ldrh	r3, [r7, #4]
 801284e:	430b      	orrs	r3, r1
 8012850:	d010      	beq.n	8012874 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8012852:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8012856:	2b00      	cmp	r3, #0
 8012858:	db0c      	blt.n	8012874 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 801285a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 801285c:	428b      	cmp	r3, r1
 801285e:	da09      	bge.n	8012874 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8012860:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8012864:	428b      	cmp	r3, r1
 8012866:	bf38      	it	cc
 8012868:	3708      	addcc	r7, #8
 801286a:	f103 0301 	add.w	r3, r3, #1
 801286e:	bf38      	it	cc
 8012870:	6107      	strcc	r7, [r0, #16]
 8012872:	6083      	str	r3, [r0, #8]
 8012874:	6903      	ldr	r3, [r0, #16]
 8012876:	f8a3 e000 	strh.w	lr, [r3]
 801287a:	e5ff      	b.n	801247c <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 801287c:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 801287e:	9c03      	ldr	r4, [sp, #12]
 8012880:	42a2      	cmp	r2, r4
 8012882:	f6ff ae18 	blt.w	80124b6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8012886:	9c06      	ldr	r4, [sp, #24]
 8012888:	42a2      	cmp	r2, r4
 801288a:	bfb8      	it	lt
 801288c:	3201      	addlt	r2, #1
 801288e:	9c08      	ldr	r4, [sp, #32]
 8012890:	bfb8      	it	lt
 8012892:	9206      	strlt	r2, [sp, #24]
 8012894:	f1c3 0220 	rsb	r2, r3, #32
 8012898:	4362      	muls	r2, r4
 801289a:	2401      	movs	r4, #1
 801289c:	940b      	str	r4, [sp, #44]	; 0x2c
 801289e:	2420      	movs	r4, #32
 80128a0:	e6d5      	b.n	801264e <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 80128a2:	f009 021f 	and.w	r2, r9, #31
 80128a6:	ea4f 1861 	mov.w	r8, r1, asr #5
 80128aa:	920c      	str	r2, [sp, #48]	; 0x30
 80128ac:	9a01      	ldr	r2, [sp, #4]
 80128ae:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 80128b2:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 80128b6:	45b0      	cmp	r8, r6
 80128b8:	f001 011f 	and.w	r1, r1, #31
 80128bc:	eba2 0203 	sub.w	r2, r2, r3
 80128c0:	d108      	bne.n	80128d4 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 80128c2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80128c4:	4419      	add	r1, r3
 80128c6:	4496      	add	lr, r2
 80128c8:	fb02 a101 	mla	r1, r2, r1, sl
 80128cc:	f8a5 e004 	strh.w	lr, [r5, #4]
 80128d0:	80e9      	strh	r1, [r5, #6]
 80128d2:	e6f9      	b.n	80126c8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 80128d4:	2c00      	cmp	r4, #0
 80128d6:	f2c0 80a9 	blt.w	8012a2c <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 80128da:	2701      	movs	r7, #1
 80128dc:	f1c1 0c20 	rsb	ip, r1, #32
 80128e0:	970a      	str	r7, [sp, #40]	; 0x28
 80128e2:	fb02 f20c 	mul.w	r2, r2, ip
 80128e6:	2720      	movs	r7, #32
 80128e8:	9709      	str	r7, [sp, #36]	; 0x24
 80128ea:	fb92 fcf4 	sdiv	ip, r2, r4
 80128ee:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80128f0:	fb04 221c 	mls	r2, r4, ip, r2
 80128f4:	2a00      	cmp	r2, #0
 80128f6:	bfb8      	it	lt
 80128f8:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 80128fc:	4439      	add	r1, r7
 80128fe:	fb0c a101 	mla	r1, ip, r1, sl
 8012902:	80e9      	strh	r1, [r5, #6]
 8012904:	44e6      	add	lr, ip
 8012906:	990a      	ldr	r1, [sp, #40]	; 0x28
 8012908:	f8a5 e004 	strh.w	lr, [r5, #4]
 801290c:	eb08 0501 	add.w	r5, r8, r1
 8012910:	6901      	ldr	r1, [r0, #16]
 8012912:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 8012916:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 801291a:	bfb8      	it	lt
 801291c:	1912      	addlt	r2, r2, r4
 801291e:	ea58 070e 	orrs.w	r7, r8, lr
 8012922:	d010      	beq.n	8012946 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8012924:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 8012928:	f1be 0f00 	cmp.w	lr, #0
 801292c:	db0b      	blt.n	8012946 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 801292e:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8012930:	45be      	cmp	lr, r7
 8012932:	da08      	bge.n	8012946 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8012934:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8012938:	45be      	cmp	lr, r7
 801293a:	bf3c      	itt	cc
 801293c:	3108      	addcc	r1, #8
 801293e:	6101      	strcc	r1, [r0, #16]
 8012940:	f10e 0101 	add.w	r1, lr, #1
 8012944:	6081      	str	r1, [r0, #8]
 8012946:	6901      	ldr	r1, [r0, #16]
 8012948:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801294c:	800d      	strh	r5, [r1, #0]
 801294e:	f04f 0e00 	mov.w	lr, #0
 8012952:	42ae      	cmp	r6, r5
 8012954:	f8a1 8002 	strh.w	r8, [r1, #2]
 8012958:	f8a1 e004 	strh.w	lr, [r1, #4]
 801295c:	f8a1 e006 	strh.w	lr, [r1, #6]
 8012960:	4463      	add	r3, ip
 8012962:	d054      	beq.n	8012a0e <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 8012964:	9901      	ldr	r1, [sp, #4]
 8012966:	1ac9      	subs	r1, r1, r3
 8012968:	4461      	add	r1, ip
 801296a:	0149      	lsls	r1, r1, #5
 801296c:	fb91 fef4 	sdiv	lr, r1, r4
 8012970:	fb04 111e 	mls	r1, r4, lr, r1
 8012974:	2900      	cmp	r1, #0
 8012976:	bfb8      	it	lt
 8012978:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 801297c:	f10e 0701 	add.w	r7, lr, #1
 8012980:	bfb8      	it	lt
 8012982:	1909      	addlt	r1, r1, r4
 8012984:	1b12      	subs	r2, r2, r4
 8012986:	970d      	str	r7, [sp, #52]	; 0x34
 8012988:	f8d0 a010 	ldr.w	sl, [r0, #16]
 801298c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801298e:	f8ba b004 	ldrh.w	fp, [sl, #4]
 8012992:	1852      	adds	r2, r2, r1
 8012994:	bf54      	ite	pl
 8012996:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
 801299a:	46f4      	movmi	ip, lr
 801299c:	44e3      	add	fp, ip
 801299e:	f8aa b004 	strh.w	fp, [sl, #4]
 80129a2:	f8ba b006 	ldrh.w	fp, [sl, #6]
 80129a6:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 80129aa:	f8aa b006 	strh.w	fp, [sl, #6]
 80129ae:	4463      	add	r3, ip
 80129b0:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80129b4:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80129b8:	f8bc a004 	ldrh.w	sl, [ip, #4]
 80129bc:	bf58      	it	pl
 80129be:	1b12      	subpl	r2, r2, r4
 80129c0:	443d      	add	r5, r7
 80129c2:	ea5b 070a 	orrs.w	r7, fp, sl
 80129c6:	d014      	beq.n	80129f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 80129c8:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 80129cc:	f1ba 0f00 	cmp.w	sl, #0
 80129d0:	db0f      	blt.n	80129f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 80129d2:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80129d4:	45ba      	cmp	sl, r7
 80129d6:	da0c      	bge.n	80129f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 80129d8:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 80129dc:	45ba      	cmp	sl, r7
 80129de:	bf38      	it	cc
 80129e0:	f10c 0c08 	addcc.w	ip, ip, #8
 80129e4:	f10a 0a01 	add.w	sl, sl, #1
 80129e8:	bf38      	it	cc
 80129ea:	f8c0 c010 	strcc.w	ip, [r0, #16]
 80129ee:	f8c0 a008 	str.w	sl, [r0, #8]
 80129f2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80129f6:	f04f 0700 	mov.w	r7, #0
 80129fa:	42ae      	cmp	r6, r5
 80129fc:	f8ac 5000 	strh.w	r5, [ip]
 8012a00:	f8ac 8002 	strh.w	r8, [ip, #2]
 8012a04:	f8ac 7004 	strh.w	r7, [ip, #4]
 8012a08:	f8ac 7006 	strh.w	r7, [ip, #6]
 8012a0c:	d1bc      	bne.n	8012988 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 8012a0e:	6904      	ldr	r4, [r0, #16]
 8012a10:	9a01      	ldr	r2, [sp, #4]
 8012a12:	990c      	ldr	r1, [sp, #48]	; 0x30
 8012a14:	1ad3      	subs	r3, r2, r3
 8012a16:	88a2      	ldrh	r2, [r4, #4]
 8012a18:	441a      	add	r2, r3
 8012a1a:	80a2      	strh	r2, [r4, #4]
 8012a1c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8012a1e:	3120      	adds	r1, #32
 8012a20:	1a89      	subs	r1, r1, r2
 8012a22:	88e2      	ldrh	r2, [r4, #6]
 8012a24:	fb03 2301 	mla	r3, r3, r1, r2
 8012a28:	80e3      	strh	r3, [r4, #6]
 8012a2a:	e64d      	b.n	80126c8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8012a2c:	f04f 37ff 	mov.w	r7, #4294967295
 8012a30:	970a      	str	r7, [sp, #40]	; 0x28
 8012a32:	434a      	muls	r2, r1
 8012a34:	4264      	negs	r4, r4
 8012a36:	2700      	movs	r7, #0
 8012a38:	e756      	b.n	80128e8 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 8012a3a:	ea4f 1867 	mov.w	r8, r7, asr #5
 8012a3e:	f009 031f 	and.w	r3, r9, #31
 8012a42:	45d0      	cmp	r8, sl
 8012a44:	f007 071f 	and.w	r7, r7, #31
 8012a48:	930f      	str	r3, [sp, #60]	; 0x3c
 8012a4a:	fa1f fc8c 	uxth.w	ip, ip
 8012a4e:	fa1f fe8e 	uxth.w	lr, lr
 8012a52:	d10a      	bne.n	8012a6a <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 8012a54:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8012a56:	449c      	add	ip, r3
 8012a58:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8012a5a:	f8a5 c004 	strh.w	ip, [r5, #4]
 8012a5e:	441f      	add	r7, r3
 8012a60:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8012a62:	fb03 e707 	mla	r7, r3, r7, lr
 8012a66:	80ef      	strh	r7, [r5, #6]
 8012a68:	e6b9      	b.n	80127de <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8012a6a:	2900      	cmp	r1, #0
 8012a6c:	f2c0 80a8 	blt.w	8012bc0 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 8012a70:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8012a72:	f1c7 0320 	rsb	r3, r7, #32
 8012a76:	4363      	muls	r3, r4
 8012a78:	2401      	movs	r4, #1
 8012a7a:	940d      	str	r4, [sp, #52]	; 0x34
 8012a7c:	2420      	movs	r4, #32
 8012a7e:	940c      	str	r4, [sp, #48]	; 0x30
 8012a80:	fb93 f4f1 	sdiv	r4, r3, r1
 8012a84:	fb01 3b14 	mls	fp, r1, r4, r3
 8012a88:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8012a8a:	f1bb 0f00 	cmp.w	fp, #0
 8012a8e:	bfb8      	it	lt
 8012a90:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8012a94:	441f      	add	r7, r3
 8012a96:	fb04 e707 	mla	r7, r4, r7, lr
 8012a9a:	44a4      	add	ip, r4
 8012a9c:	f8a5 c004 	strh.w	ip, [r5, #4]
 8012aa0:	80ef      	strh	r7, [r5, #6]
 8012aa2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012aa6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012aa8:	f8bc e006 	ldrh.w	lr, [ip, #6]
 8012aac:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8012ab0:	bfb8      	it	lt
 8012ab2:	448b      	addlt	fp, r1
 8012ab4:	eb08 0503 	add.w	r5, r8, r3
 8012ab8:	ea5e 0307 	orrs.w	r3, lr, r7
 8012abc:	d011      	beq.n	8012ae2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8012abe:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 8012ac2:	f1be 0f00 	cmp.w	lr, #0
 8012ac6:	db0c      	blt.n	8012ae2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8012ac8:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8012aca:	45be      	cmp	lr, r7
 8012acc:	da09      	bge.n	8012ae2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8012ace:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8012ad2:	45be      	cmp	lr, r7
 8012ad4:	bf3c      	itt	cc
 8012ad6:	f10c 0708 	addcc.w	r7, ip, #8
 8012ada:	6107      	strcc	r7, [r0, #16]
 8012adc:	f10e 0701 	add.w	r7, lr, #1
 8012ae0:	6087      	str	r7, [r0, #8]
 8012ae2:	6907      	ldr	r7, [r0, #16]
 8012ae4:	b213      	sxth	r3, r2
 8012ae6:	9310      	str	r3, [sp, #64]	; 0x40
 8012ae8:	807b      	strh	r3, [r7, #2]
 8012aea:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012aec:	803d      	strh	r5, [r7, #0]
 8012aee:	4555      	cmp	r5, sl
 8012af0:	80be      	strh	r6, [r7, #4]
 8012af2:	80fe      	strh	r6, [r7, #6]
 8012af4:	eb04 0c03 	add.w	ip, r4, r3
 8012af8:	d051      	beq.n	8012b9e <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 8012afa:	9b01      	ldr	r3, [sp, #4]
 8012afc:	eba3 070c 	sub.w	r7, r3, ip
 8012b00:	443c      	add	r4, r7
 8012b02:	0164      	lsls	r4, r4, #5
 8012b04:	fb94 f8f1 	sdiv	r8, r4, r1
 8012b08:	fb01 4418 	mls	r4, r1, r8, r4
 8012b0c:	2c00      	cmp	r4, #0
 8012b0e:	bfb8      	it	lt
 8012b10:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8012b14:	ebab 0301 	sub.w	r3, fp, r1
 8012b18:	f108 0701 	add.w	r7, r8, #1
 8012b1c:	bfb8      	it	lt
 8012b1e:	1864      	addlt	r4, r4, r1
 8012b20:	9309      	str	r3, [sp, #36]	; 0x24
 8012b22:	9711      	str	r7, [sp, #68]	; 0x44
 8012b24:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012b26:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8012b2a:	191b      	adds	r3, r3, r4
 8012b2c:	bf58      	it	pl
 8012b2e:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
 8012b30:	f8be b004 	ldrh.w	fp, [lr, #4]
 8012b34:	9309      	str	r3, [sp, #36]	; 0x24
 8012b36:	bf48      	it	mi
 8012b38:	4647      	movmi	r7, r8
 8012b3a:	44bb      	add	fp, r7
 8012b3c:	f8ae b004 	strh.w	fp, [lr, #4]
 8012b40:	f8be b006 	ldrh.w	fp, [lr, #6]
 8012b44:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8012b48:	f8ae b006 	strh.w	fp, [lr, #6]
 8012b4c:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8012b50:	44bc      	add	ip, r7
 8012b52:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8012b54:	f8be b006 	ldrh.w	fp, [lr, #6]
 8012b58:	443d      	add	r5, r7
 8012b5a:	f8be 7004 	ldrh.w	r7, [lr, #4]
 8012b5e:	bf5c      	itt	pl
 8012b60:	1a5b      	subpl	r3, r3, r1
 8012b62:	9309      	strpl	r3, [sp, #36]	; 0x24
 8012b64:	ea5b 0307 	orrs.w	r3, fp, r7
 8012b68:	d011      	beq.n	8012b8e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8012b6a:	f9be b002 	ldrsh.w	fp, [lr, #2]
 8012b6e:	f1bb 0f00 	cmp.w	fp, #0
 8012b72:	db0c      	blt.n	8012b8e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8012b74:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8012b76:	45bb      	cmp	fp, r7
 8012b78:	da09      	bge.n	8012b8e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8012b7a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8012b7e:	45bb      	cmp	fp, r7
 8012b80:	bf3c      	itt	cc
 8012b82:	f10e 0708 	addcc.w	r7, lr, #8
 8012b86:	6107      	strcc	r7, [r0, #16]
 8012b88:	f10b 0701 	add.w	r7, fp, #1
 8012b8c:	6087      	str	r7, [r0, #8]
 8012b8e:	6907      	ldr	r7, [r0, #16]
 8012b90:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012b92:	803d      	strh	r5, [r7, #0]
 8012b94:	4555      	cmp	r5, sl
 8012b96:	807b      	strh	r3, [r7, #2]
 8012b98:	80be      	strh	r6, [r7, #4]
 8012b9a:	80fe      	strh	r6, [r7, #6]
 8012b9c:	d1c2      	bne.n	8012b24 <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 8012b9e:	9b01      	ldr	r3, [sp, #4]
 8012ba0:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8012ba2:	eba3 0c0c 	sub.w	ip, r3, ip
 8012ba6:	6903      	ldr	r3, [r0, #16]
 8012ba8:	8899      	ldrh	r1, [r3, #4]
 8012baa:	4461      	add	r1, ip
 8012bac:	8099      	strh	r1, [r3, #4]
 8012bae:	990c      	ldr	r1, [sp, #48]	; 0x30
 8012bb0:	3720      	adds	r7, #32
 8012bb2:	1a7f      	subs	r7, r7, r1
 8012bb4:	88d9      	ldrh	r1, [r3, #6]
 8012bb6:	fb0c 1c07 	mla	ip, ip, r7, r1
 8012bba:	f8a3 c006 	strh.w	ip, [r3, #6]
 8012bbe:	e60e      	b.n	80127de <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8012bc0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8012bc2:	f04f 34ff 	mov.w	r4, #4294967295
 8012bc6:	940d      	str	r4, [sp, #52]	; 0x34
 8012bc8:	437b      	muls	r3, r7
 8012bca:	4249      	negs	r1, r1
 8012bcc:	2400      	movs	r4, #0
 8012bce:	e756      	b.n	8012a7e <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 8012bd0:	9905      	ldr	r1, [sp, #20]
 8012bd2:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 8012bd6:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 8012bda:	f001 011f 	and.w	r1, r1, #31
 8012bde:	ea4f 1b69 	mov.w	fp, r9, asr #5
 8012be2:	9102      	str	r1, [sp, #8]
 8012be4:	9904      	ldr	r1, [sp, #16]
 8012be6:	45f3      	cmp	fp, lr
 8012be8:	f009 0c1f 	and.w	ip, r9, #31
 8012bec:	eba1 0406 	sub.w	r4, r1, r6
 8012bf0:	d108      	bne.n	8012c04 <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 8012bf2:	9b02      	ldr	r3, [sp, #8]
 8012bf4:	449c      	add	ip, r3
 8012bf6:	44a0      	add	r8, r4
 8012bf8:	fb04 a40c 	mla	r4, r4, ip, sl
 8012bfc:	f8a7 8004 	strh.w	r8, [r7, #4]
 8012c00:	80fc      	strh	r4, [r7, #6]
 8012c02:	e458      	b.n	80124b6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8012c04:	9905      	ldr	r1, [sp, #20]
 8012c06:	ebb1 0109 	subs.w	r1, r1, r9
 8012c0a:	bf5b      	ittet	pl
 8012c0c:	f1cc 0520 	rsbpl	r5, ip, #32
 8012c10:	436c      	mulpl	r4, r5
 8012c12:	2500      	movmi	r5, #0
 8012c14:	2520      	movpl	r5, #32
 8012c16:	bf44      	itt	mi
 8012c18:	fb04 f40c 	mulmi.w	r4, r4, ip
 8012c1c:	4249      	negmi	r1, r1
 8012c1e:	9501      	str	r5, [sp, #4]
 8012c20:	9b01      	ldr	r3, [sp, #4]
 8012c22:	fb94 f5f1 	sdiv	r5, r4, r1
 8012c26:	fb01 4415 	mls	r4, r1, r5, r4
 8012c2a:	bf54      	ite	pl
 8012c2c:	f04f 0901 	movpl.w	r9, #1
 8012c30:	f04f 39ff 	movmi.w	r9, #4294967295
 8012c34:	2c00      	cmp	r4, #0
 8012c36:	bfb8      	it	lt
 8012c38:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8012c3c:	449c      	add	ip, r3
 8012c3e:	44a8      	add	r8, r5
 8012c40:	fb05 ac0c 	mla	ip, r5, ip, sl
 8012c44:	f8a7 8004 	strh.w	r8, [r7, #4]
 8012c48:	f8a7 c006 	strh.w	ip, [r7, #6]
 8012c4c:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012c50:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 8012c54:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8012c58:	bfb8      	it	lt
 8012c5a:	1864      	addlt	r4, r4, r1
 8012c5c:	ea58 0707 	orrs.w	r7, r8, r7
 8012c60:	eb0b 0309 	add.w	r3, fp, r9
 8012c64:	d011      	beq.n	8012c8a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8012c66:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 8012c6a:	f1b8 0f00 	cmp.w	r8, #0
 8012c6e:	db0c      	blt.n	8012c8a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8012c70:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8012c72:	45b8      	cmp	r8, r7
 8012c74:	da09      	bge.n	8012c8a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8012c76:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 8012c7a:	45b8      	cmp	r8, r7
 8012c7c:	bf3c      	itt	cc
 8012c7e:	f10c 0708 	addcc.w	r7, ip, #8
 8012c82:	6107      	strcc	r7, [r0, #16]
 8012c84:	f108 0701 	add.w	r7, r8, #1
 8012c88:	6087      	str	r7, [r0, #8]
 8012c8a:	6907      	ldr	r7, [r0, #16]
 8012c8c:	f04f 0c00 	mov.w	ip, #0
 8012c90:	b212      	sxth	r2, r2
 8012c92:	459e      	cmp	lr, r3
 8012c94:	803b      	strh	r3, [r7, #0]
 8012c96:	807a      	strh	r2, [r7, #2]
 8012c98:	f8a7 c004 	strh.w	ip, [r7, #4]
 8012c9c:	f8a7 c006 	strh.w	ip, [r7, #6]
 8012ca0:	442e      	add	r6, r5
 8012ca2:	d04d      	beq.n	8012d40 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 8012ca4:	9f04      	ldr	r7, [sp, #16]
 8012ca6:	1bbf      	subs	r7, r7, r6
 8012ca8:	443d      	add	r5, r7
 8012caa:	016d      	lsls	r5, r5, #5
 8012cac:	fb95 f8f1 	sdiv	r8, r5, r1
 8012cb0:	fb01 5518 	mls	r5, r1, r8, r5
 8012cb4:	4565      	cmp	r5, ip
 8012cb6:	bfb8      	it	lt
 8012cb8:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8012cbc:	f108 0701 	add.w	r7, r8, #1
 8012cc0:	bfb8      	it	lt
 8012cc2:	186d      	addlt	r5, r5, r1
 8012cc4:	1a64      	subs	r4, r4, r1
 8012cc6:	9703      	str	r7, [sp, #12]
 8012cc8:	f04f 0a00 	mov.w	sl, #0
 8012ccc:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012cd0:	1964      	adds	r4, r4, r5
 8012cd2:	bf58      	it	pl
 8012cd4:	9f03      	ldrpl	r7, [sp, #12]
 8012cd6:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8012cda:	bf48      	it	mi
 8012cdc:	4647      	movmi	r7, r8
 8012cde:	44bb      	add	fp, r7
 8012ce0:	f8ac b004 	strh.w	fp, [ip, #4]
 8012ce4:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8012ce8:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8012cec:	f8ac b006 	strh.w	fp, [ip, #6]
 8012cf0:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012cf4:	443e      	add	r6, r7
 8012cf6:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8012cfa:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8012cfe:	bf58      	it	pl
 8012d00:	1a64      	subpl	r4, r4, r1
 8012d02:	ea5b 0707 	orrs.w	r7, fp, r7
 8012d06:	444b      	add	r3, r9
 8012d08:	d011      	beq.n	8012d2e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8012d0a:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8012d0e:	f1bb 0f00 	cmp.w	fp, #0
 8012d12:	db0c      	blt.n	8012d2e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8012d14:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8012d16:	45bb      	cmp	fp, r7
 8012d18:	da09      	bge.n	8012d2e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8012d1a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8012d1e:	45bb      	cmp	fp, r7
 8012d20:	bf3c      	itt	cc
 8012d22:	f10c 0708 	addcc.w	r7, ip, #8
 8012d26:	6107      	strcc	r7, [r0, #16]
 8012d28:	f10b 0701 	add.w	r7, fp, #1
 8012d2c:	6087      	str	r7, [r0, #8]
 8012d2e:	6907      	ldr	r7, [r0, #16]
 8012d30:	459e      	cmp	lr, r3
 8012d32:	803b      	strh	r3, [r7, #0]
 8012d34:	807a      	strh	r2, [r7, #2]
 8012d36:	f8a7 a004 	strh.w	sl, [r7, #4]
 8012d3a:	f8a7 a006 	strh.w	sl, [r7, #6]
 8012d3e:	d1c5      	bne.n	8012ccc <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 8012d40:	9b04      	ldr	r3, [sp, #16]
 8012d42:	1b9e      	subs	r6, r3, r6
 8012d44:	6903      	ldr	r3, [r0, #16]
 8012d46:	889a      	ldrh	r2, [r3, #4]
 8012d48:	4432      	add	r2, r6
 8012d4a:	809a      	strh	r2, [r3, #4]
 8012d4c:	9a02      	ldr	r2, [sp, #8]
 8012d4e:	f102 0c20 	add.w	ip, r2, #32
 8012d52:	9a01      	ldr	r2, [sp, #4]
 8012d54:	ebac 0c02 	sub.w	ip, ip, r2
 8012d58:	88da      	ldrh	r2, [r3, #6]
 8012d5a:	fb06 260c 	mla	r6, r6, ip, r2
 8012d5e:	80de      	strh	r6, [r3, #6]
 8012d60:	f7ff bba9 	b.w	80124b6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

08012d64 <_ZN8touchgfx7Outline6lineToEii>:
 8012d64:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8012d66:	079b      	lsls	r3, r3, #30
 8012d68:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8012d6a:	460e      	mov	r6, r1
 8012d6c:	4615      	mov	r5, r2
 8012d6e:	d511      	bpl.n	8012d94 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8012d70:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 8012d74:	ea86 0701 	eor.w	r7, r6, r1
 8012d78:	ea85 0302 	eor.w	r3, r5, r2
 8012d7c:	433b      	orrs	r3, r7
 8012d7e:	d009      	beq.n	8012d94 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8012d80:	4633      	mov	r3, r6
 8012d82:	9500      	str	r5, [sp, #0]
 8012d84:	f7ff fb3e 	bl	8012404 <_ZN8touchgfx7Outline10renderLineEiiii>
 8012d88:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8012d8a:	e9c0 6505 	strd	r6, r5, [r0, #20]
 8012d8e:	f043 0301 	orr.w	r3, r3, #1
 8012d92:	6243      	str	r3, [r0, #36]	; 0x24
 8012d94:	b003      	add	sp, #12
 8012d96:	bdf0      	pop	{r4, r5, r6, r7, pc}

08012d98 <_ZN8touchgfx7Outline6moveToEii>:
 8012d98:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8012d9a:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8012d9c:	4615      	mov	r5, r2
 8012d9e:	079a      	lsls	r2, r3, #30
 8012da0:	4604      	mov	r4, r0
 8012da2:	460e      	mov	r6, r1
 8012da4:	d401      	bmi.n	8012daa <_ZN8touchgfx7Outline6moveToEii+0x12>
 8012da6:	f7ff faf9 	bl	801239c <_ZN8touchgfx7Outline5resetEv>
 8012daa:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8012dac:	07db      	lsls	r3, r3, #31
 8012dae:	d504      	bpl.n	8012dba <_ZN8touchgfx7Outline6moveToEii+0x22>
 8012db0:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 8012db4:	4620      	mov	r0, r4
 8012db6:	f7ff ffd5 	bl	8012d64 <_ZN8touchgfx7Outline6lineToEii>
 8012dba:	6923      	ldr	r3, [r4, #16]
 8012dbc:	f9b3 2000 	ldrsh.w	r2, [r3]
 8012dc0:	1170      	asrs	r0, r6, #5
 8012dc2:	4290      	cmp	r0, r2
 8012dc4:	ea4f 1165 	mov.w	r1, r5, asr #5
 8012dc8:	d103      	bne.n	8012dd2 <_ZN8touchgfx7Outline6moveToEii+0x3a>
 8012dca:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8012dce:	4291      	cmp	r1, r2
 8012dd0:	d01a      	beq.n	8012e08 <_ZN8touchgfx7Outline6moveToEii+0x70>
 8012dd2:	88df      	ldrh	r7, [r3, #6]
 8012dd4:	889a      	ldrh	r2, [r3, #4]
 8012dd6:	433a      	orrs	r2, r7
 8012dd8:	d010      	beq.n	8012dfc <_ZN8touchgfx7Outline6moveToEii+0x64>
 8012dda:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8012dde:	2a00      	cmp	r2, #0
 8012de0:	db0c      	blt.n	8012dfc <_ZN8touchgfx7Outline6moveToEii+0x64>
 8012de2:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8012de4:	42ba      	cmp	r2, r7
 8012de6:	da09      	bge.n	8012dfc <_ZN8touchgfx7Outline6moveToEii+0x64>
 8012de8:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 8012dec:	42ba      	cmp	r2, r7
 8012dee:	bf38      	it	cc
 8012df0:	3308      	addcc	r3, #8
 8012df2:	f102 0201 	add.w	r2, r2, #1
 8012df6:	bf38      	it	cc
 8012df8:	6123      	strcc	r3, [r4, #16]
 8012dfa:	60a2      	str	r2, [r4, #8]
 8012dfc:	6923      	ldr	r3, [r4, #16]
 8012dfe:	2200      	movs	r2, #0
 8012e00:	8018      	strh	r0, [r3, #0]
 8012e02:	8059      	strh	r1, [r3, #2]
 8012e04:	809a      	strh	r2, [r3, #4]
 8012e06:	80da      	strh	r2, [r3, #6]
 8012e08:	6166      	str	r6, [r4, #20]
 8012e0a:	e9c4 5606 	strd	r5, r6, [r4, #24]
 8012e0e:	6225      	str	r5, [r4, #32]
 8012e10:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08012e12 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 8012e12:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012e16:	b0d0      	sub	sp, #320	; 0x140
 8012e18:	466c      	mov	r4, sp
 8012e1a:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 8012e1e:	4627      	mov	r7, r4
 8012e20:	1a0d      	subs	r5, r1, r0
 8012e22:	2d48      	cmp	r5, #72	; 0x48
 8012e24:	f100 0308 	add.w	r3, r0, #8
 8012e28:	f340 80d5 	ble.w	8012fd6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 8012e2c:	112d      	asrs	r5, r5, #4
 8012e2e:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 8012e32:	f9b0 9000 	ldrsh.w	r9, [r0]
 8012e36:	6816      	ldr	r6, [r2, #0]
 8012e38:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 8012e3c:	6006      	str	r6, [r0, #0]
 8012e3e:	6856      	ldr	r6, [r2, #4]
 8012e40:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8012e44:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8012e48:	6046      	str	r6, [r0, #4]
 8012e4a:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8012e4e:	f8a2 8002 	strh.w	r8, [r2, #2]
 8012e52:	f8a2 e004 	strh.w	lr, [r2, #4]
 8012e56:	f8a2 c006 	strh.w	ip, [r2, #6]
 8012e5a:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8012e5e:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 8012e62:	4565      	cmp	r5, ip
 8012e64:	f1a1 0208 	sub.w	r2, r1, #8
 8012e68:	db06      	blt.n	8012e78 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 8012e6a:	d119      	bne.n	8012ea0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8012e6c:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 8012e70:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 8012e74:	42ae      	cmp	r6, r5
 8012e76:	dd13      	ble.n	8012ea0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8012e78:	460e      	mov	r6, r1
 8012e7a:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 8012e7e:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8012e82:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 8012e86:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 8012e8a:	601d      	str	r5, [r3, #0]
 8012e8c:	6875      	ldr	r5, [r6, #4]
 8012e8e:	605d      	str	r5, [r3, #4]
 8012e90:	f821 9c08 	strh.w	r9, [r1, #-8]
 8012e94:	f821 cc06 	strh.w	ip, [r1, #-6]
 8012e98:	f821 8c04 	strh.w	r8, [r1, #-4]
 8012e9c:	f821 ec02 	strh.w	lr, [r1, #-2]
 8012ea0:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8012ea4:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 8012ea8:	42ae      	cmp	r6, r5
 8012eaa:	db06      	blt.n	8012eba <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 8012eac:	d116      	bne.n	8012edc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 8012eae:	f9b0 c000 	ldrsh.w	ip, [r0]
 8012eb2:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 8012eb6:	45ac      	cmp	ip, r5
 8012eb8:	da10      	bge.n	8012edc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 8012eba:	681d      	ldr	r5, [r3, #0]
 8012ebc:	f9b0 8000 	ldrsh.w	r8, [r0]
 8012ec0:	6005      	str	r5, [r0, #0]
 8012ec2:	685d      	ldr	r5, [r3, #4]
 8012ec4:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8012ec8:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8012ecc:	f8a0 8008 	strh.w	r8, [r0, #8]
 8012ed0:	6045      	str	r5, [r0, #4]
 8012ed2:	8146      	strh	r6, [r0, #10]
 8012ed4:	f8a0 e00c 	strh.w	lr, [r0, #12]
 8012ed8:	f8a0 c00e 	strh.w	ip, [r0, #14]
 8012edc:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8012ee0:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8012ee4:	4565      	cmp	r5, ip
 8012ee6:	db06      	blt.n	8012ef6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 8012ee8:	d119      	bne.n	8012f1e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8012eea:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 8012eee:	f9b0 5000 	ldrsh.w	r5, [r0]
 8012ef2:	42ae      	cmp	r6, r5
 8012ef4:	da13      	bge.n	8012f1e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8012ef6:	460e      	mov	r6, r1
 8012ef8:	f9b0 9000 	ldrsh.w	r9, [r0]
 8012efc:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8012f00:	6005      	str	r5, [r0, #0]
 8012f02:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 8012f06:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 8012f0a:	6875      	ldr	r5, [r6, #4]
 8012f0c:	6045      	str	r5, [r0, #4]
 8012f0e:	f821 9c08 	strh.w	r9, [r1, #-8]
 8012f12:	f821 cc06 	strh.w	ip, [r1, #-6]
 8012f16:	f821 8c04 	strh.w	r8, [r1, #-4]
 8012f1a:	f821 ec02 	strh.w	lr, [r1, #-2]
 8012f1e:	3308      	adds	r3, #8
 8012f20:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8012f24:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 8012f28:	45e6      	cmp	lr, ip
 8012f2a:	dbf8      	blt.n	8012f1e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8012f2c:	d105      	bne.n	8012f3a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8012f2e:	f9b3 6000 	ldrsh.w	r6, [r3]
 8012f32:	f9b0 5000 	ldrsh.w	r5, [r0]
 8012f36:	42ae      	cmp	r6, r5
 8012f38:	dbf1      	blt.n	8012f1e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8012f3a:	4615      	mov	r5, r2
 8012f3c:	3a08      	subs	r2, #8
 8012f3e:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 8012f42:	45b4      	cmp	ip, r6
 8012f44:	dbf9      	blt.n	8012f3a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8012f46:	d105      	bne.n	8012f54 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 8012f48:	f9b0 8000 	ldrsh.w	r8, [r0]
 8012f4c:	f9b2 6000 	ldrsh.w	r6, [r2]
 8012f50:	45b0      	cmp	r8, r6
 8012f52:	dbf2      	blt.n	8012f3a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8012f54:	4293      	cmp	r3, r2
 8012f56:	f1a5 0608 	sub.w	r6, r5, #8
 8012f5a:	d816      	bhi.n	8012f8a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 8012f5c:	f8d6 c000 	ldr.w	ip, [r6]
 8012f60:	f9b3 a000 	ldrsh.w	sl, [r3]
 8012f64:	f8c3 c000 	str.w	ip, [r3]
 8012f68:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 8012f6c:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 8012f70:	f8d6 c004 	ldr.w	ip, [r6, #4]
 8012f74:	f8c3 c004 	str.w	ip, [r3, #4]
 8012f78:	f825 ac08 	strh.w	sl, [r5, #-8]
 8012f7c:	f825 ec06 	strh.w	lr, [r5, #-6]
 8012f80:	f825 9c04 	strh.w	r9, [r5, #-4]
 8012f84:	f825 8c02 	strh.w	r8, [r5, #-2]
 8012f88:	e7c9      	b.n	8012f1e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8012f8a:	f8d6 e000 	ldr.w	lr, [r6]
 8012f8e:	f9b0 a000 	ldrsh.w	sl, [r0]
 8012f92:	f8c0 e000 	str.w	lr, [r0]
 8012f96:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 8012f9a:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 8012f9e:	f8d6 e004 	ldr.w	lr, [r6, #4]
 8012fa2:	f8c0 e004 	str.w	lr, [r0, #4]
 8012fa6:	f825 ac08 	strh.w	sl, [r5, #-8]
 8012faa:	f825 cc06 	strh.w	ip, [r5, #-6]
 8012fae:	f825 9c04 	strh.w	r9, [r5, #-4]
 8012fb2:	f825 8c02 	strh.w	r8, [r5, #-2]
 8012fb6:	1acd      	subs	r5, r1, r3
 8012fb8:	1a16      	subs	r6, r2, r0
 8012fba:	10ed      	asrs	r5, r5, #3
 8012fbc:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 8012fc0:	bfb5      	itete	lt
 8012fc2:	e9c4 0200 	strdlt	r0, r2, [r4]
 8012fc6:	e9c4 3100 	strdge	r3, r1, [r4]
 8012fca:	460a      	movlt	r2, r1
 8012fcc:	4603      	movge	r3, r0
 8012fce:	3408      	adds	r4, #8
 8012fd0:	4618      	mov	r0, r3
 8012fd2:	4611      	mov	r1, r2
 8012fd4:	e724      	b.n	8012e20 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8012fd6:	4299      	cmp	r1, r3
 8012fd8:	d928      	bls.n	801302c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 8012fda:	f1a3 0210 	sub.w	r2, r3, #16
 8012fde:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 8012fe2:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 8012fe6:	45ac      	cmp	ip, r5
 8012fe8:	db06      	blt.n	8012ff8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 8012fea:	d11d      	bne.n	8013028 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 8012fec:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 8012ff0:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 8012ff4:	42ae      	cmp	r6, r5
 8012ff6:	da17      	bge.n	8013028 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 8012ff8:	4615      	mov	r5, r2
 8012ffa:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 8012ffe:	f855 6f08 	ldr.w	r6, [r5, #8]!
 8013002:	6116      	str	r6, [r2, #16]
 8013004:	686e      	ldr	r6, [r5, #4]
 8013006:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 801300a:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 801300e:	f8a2 9008 	strh.w	r9, [r2, #8]
 8013012:	42a8      	cmp	r0, r5
 8013014:	6156      	str	r6, [r2, #20]
 8013016:	f8a2 c00a 	strh.w	ip, [r2, #10]
 801301a:	f8a2 800c 	strh.w	r8, [r2, #12]
 801301e:	f8a2 e00e 	strh.w	lr, [r2, #14]
 8013022:	f1a2 0208 	sub.w	r2, r2, #8
 8013026:	d1da      	bne.n	8012fde <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 8013028:	3308      	adds	r3, #8
 801302a:	e7d4      	b.n	8012fd6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 801302c:	42bc      	cmp	r4, r7
 801302e:	d903      	bls.n	8013038 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 8013030:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 8013034:	3c08      	subs	r4, #8
 8013036:	e6f3      	b.n	8012e20 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8013038:	b050      	add	sp, #320	; 0x140
 801303a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801303e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 801303e:	b510      	push	{r4, lr}
 8013040:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8013042:	07da      	lsls	r2, r3, #31
 8013044:	4604      	mov	r4, r0
 8013046:	d507      	bpl.n	8013058 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 8013048:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 801304c:	f7ff fe8a 	bl	8012d64 <_ZN8touchgfx7Outline6lineToEii>
 8013050:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8013052:	f023 0301 	bic.w	r3, r3, #1
 8013056:	6243      	str	r3, [r0, #36]	; 0x24
 8013058:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801305a:	079b      	lsls	r3, r3, #30
 801305c:	d521      	bpl.n	80130a2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 801305e:	6923      	ldr	r3, [r4, #16]
 8013060:	88d9      	ldrh	r1, [r3, #6]
 8013062:	889a      	ldrh	r2, [r3, #4]
 8013064:	430a      	orrs	r2, r1
 8013066:	d010      	beq.n	801308a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8013068:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 801306c:	2a00      	cmp	r2, #0
 801306e:	db0c      	blt.n	801308a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8013070:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8013072:	428a      	cmp	r2, r1
 8013074:	da09      	bge.n	801308a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8013076:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 801307a:	4291      	cmp	r1, r2
 801307c:	bf88      	it	hi
 801307e:	3308      	addhi	r3, #8
 8013080:	f102 0201 	add.w	r2, r2, #1
 8013084:	bf88      	it	hi
 8013086:	6123      	strhi	r3, [r4, #16]
 8013088:	60a2      	str	r2, [r4, #8]
 801308a:	68a1      	ldr	r1, [r4, #8]
 801308c:	b129      	cbz	r1, 801309a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 801308e:	6863      	ldr	r3, [r4, #4]
 8013090:	4299      	cmp	r1, r3
 8013092:	d802      	bhi.n	801309a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 8013094:	68e0      	ldr	r0, [r4, #12]
 8013096:	f7ff febc 	bl	8012e12 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 801309a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801309c:	f023 0302 	bic.w	r3, r3, #2
 80130a0:	6263      	str	r3, [r4, #36]	; 0x24
 80130a2:	68e0      	ldr	r0, [r4, #12]
 80130a4:	bd10      	pop	{r4, pc}
	...

080130a8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 80130a8:	4b02      	ldr	r3, [pc, #8]	; (80130b4 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 80130aa:	6018      	str	r0, [r3, #0]
 80130ac:	4b02      	ldr	r3, [pc, #8]	; (80130b8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 80130ae:	6019      	str	r1, [r3, #0]
 80130b0:	4770      	bx	lr
 80130b2:	bf00      	nop
 80130b4:	200137c4 	.word	0x200137c4
 80130b8:	200137c8 	.word	0x200137c8

080130bc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
 80130bc:	4a02      	ldr	r2, [pc, #8]	; (80130c8 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
 80130be:	2300      	movs	r3, #0
 80130c0:	6013      	str	r3, [r2, #0]
 80130c2:	4a02      	ldr	r2, [pc, #8]	; (80130cc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
 80130c4:	6013      	str	r3, [r2, #0]
 80130c6:	4770      	bx	lr
 80130c8:	200137c4 	.word	0x200137c4
 80130cc:	200137c8 	.word	0x200137c8

080130d0 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 80130d0:	4b01      	ldr	r3, [pc, #4]	; (80130d8 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 80130d2:	6818      	ldr	r0, [r3, #0]
 80130d4:	4770      	bx	lr
 80130d6:	bf00      	nop
 80130d8:	200137c4 	.word	0x200137c4

080130dc <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 80130dc:	4b01      	ldr	r3, [pc, #4]	; (80130e4 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 80130de:	6818      	ldr	r0, [r3, #0]
 80130e0:	4770      	bx	lr
 80130e2:	bf00      	nop
 80130e4:	200137c8 	.word	0x200137c8

080130e8 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 80130e8:	b510      	push	{r4, lr}
 80130ea:	6803      	ldr	r3, [r0, #0]
 80130ec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80130ee:	460c      	mov	r4, r1
 80130f0:	4798      	blx	r3
 80130f2:	1b03      	subs	r3, r0, r4
 80130f4:	4258      	negs	r0, r3
 80130f6:	4158      	adcs	r0, r3
 80130f8:	bd10      	pop	{r4, pc}
	...

080130fc <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 80130fc:	4b01      	ldr	r3, [pc, #4]	; (8013104 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 80130fe:	6019      	str	r1, [r3, #0]
 8013100:	4770      	bx	lr
 8013102:	bf00      	nop
 8013104:	200137cc 	.word	0x200137cc

08013108 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8013108:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801310c:	4696      	mov	lr, r2
 801310e:	4605      	mov	r5, r0
 8013110:	4614      	mov	r4, r2
 8013112:	460e      	mov	r6, r1
 8013114:	461f      	mov	r7, r3
 8013116:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801311a:	b097      	sub	sp, #92	; 0x5c
 801311c:	f10d 0c1c 	add.w	ip, sp, #28
 8013120:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8013124:	f8de 3000 	ldr.w	r3, [lr]
 8013128:	f8cc 3000 	str.w	r3, [ip]
 801312c:	f104 0e14 	add.w	lr, r4, #20
 8013130:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8013134:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8013138:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801313c:	f8de 3000 	ldr.w	r3, [lr]
 8013140:	f8cc 3000 	str.w	r3, [ip]
 8013144:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8013148:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801314c:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8013150:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8013154:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 8013158:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 801315c:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 8013160:	f8de 3000 	ldr.w	r3, [lr]
 8013164:	f8cc 3000 	str.w	r3, [ip]
 8013168:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801316a:	682b      	ldr	r3, [r5, #0]
 801316c:	9201      	str	r2, [sp, #4]
 801316e:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8013172:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8013174:	9200      	str	r2, [sp, #0]
 8013176:	f8cd 8008 	str.w	r8, [sp, #8]
 801317a:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 801317e:	aa07      	add	r2, sp, #28
 8013180:	463b      	mov	r3, r7
 8013182:	4631      	mov	r1, r6
 8013184:	4628      	mov	r0, r5
 8013186:	47d8      	blx	fp
 8013188:	46a6      	mov	lr, r4
 801318a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801318e:	f10d 0c1c 	add.w	ip, sp, #28
 8013192:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8013196:	f8de 3000 	ldr.w	r3, [lr]
 801319a:	f8cc 3000 	str.w	r3, [ip]
 801319e:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 80131a2:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80131a6:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 80131aa:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80131ae:	343c      	adds	r4, #60	; 0x3c
 80131b0:	f8de 3000 	ldr.w	r3, [lr]
 80131b4:	f8cc 3000 	str.w	r3, [ip]
 80131b8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80131ba:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 80131be:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80131c2:	6823      	ldr	r3, [r4, #0]
 80131c4:	f8cc 3000 	str.w	r3, [ip]
 80131c8:	682b      	ldr	r3, [r5, #0]
 80131ca:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 80131ce:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80131d0:	9201      	str	r2, [sp, #4]
 80131d2:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80131d4:	9200      	str	r2, [sp, #0]
 80131d6:	f8cd 8008 	str.w	r8, [sp, #8]
 80131da:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 80131dc:	aa07      	add	r2, sp, #28
 80131de:	463b      	mov	r3, r7
 80131e0:	4631      	mov	r1, r6
 80131e2:	4628      	mov	r0, r5
 80131e4:	47a0      	blx	r4
 80131e6:	b017      	add	sp, #92	; 0x5c
 80131e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080131ec <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 80131ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80131f0:	b08d      	sub	sp, #52	; 0x34
 80131f2:	4688      	mov	r8, r1
 80131f4:	9916      	ldr	r1, [sp, #88]	; 0x58
 80131f6:	f8d3 c000 	ldr.w	ip, [r3]
 80131fa:	680f      	ldr	r7, [r1, #0]
 80131fc:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 8013200:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 8013204:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 8013208:	edd3 6a07 	vldr	s13, [r3, #28]
 801320c:	9918      	ldr	r1, [sp, #96]	; 0x60
 801320e:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 8013212:	f9b1 9000 	ldrsh.w	r9, [r1]
 8013216:	f9ba 1000 	ldrsh.w	r1, [sl]
 801321a:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 801321e:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 8013222:	eba7 070c 	sub.w	r7, r7, ip
 8013226:	42bc      	cmp	r4, r7
 8013228:	bfa8      	it	ge
 801322a:	463c      	movge	r4, r7
 801322c:	ee07 4a90 	vmov	s15, r4
 8013230:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8013234:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 8013238:	ee25 4a04 	vmul.f32	s8, s10, s8
 801323c:	ee65 4a24 	vmul.f32	s9, s10, s9
 8013240:	ee25 5a27 	vmul.f32	s10, s10, s15
 8013244:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8013248:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 801324c:	eb09 0e0c 	add.w	lr, r9, ip
 8013250:	4571      	cmp	r1, lr
 8013252:	ee71 0aa4 	vadd.f32	s1, s3, s9
 8013256:	ee32 1a05 	vadd.f32	s2, s4, s10
 801325a:	ee36 0a84 	vadd.f32	s0, s13, s8
 801325e:	ee61 1a87 	vmul.f32	s3, s3, s14
 8013262:	ee22 2a07 	vmul.f32	s4, s4, s14
 8013266:	f340 808d 	ble.w	8013384 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 801326a:	eba1 060e 	sub.w	r6, r1, lr
 801326e:	fb96 f5f4 	sdiv	r5, r6, r4
 8013272:	ee07 5a10 	vmov	s14, r5
 8013276:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801327a:	2d00      	cmp	r5, #0
 801327c:	fb04 6615 	mls	r6, r4, r5, r6
 8013280:	eea7 0a04 	vfma.f32	s0, s14, s8
 8013284:	eee7 0a24 	vfma.f32	s1, s14, s9
 8013288:	eea7 1a05 	vfma.f32	s2, s14, s10
 801328c:	dd13      	ble.n	80132b6 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 801328e:	ee70 6a44 	vsub.f32	s13, s0, s8
 8013292:	ee70 1ae4 	vsub.f32	s3, s1, s9
 8013296:	eef5 6a40 	vcmp.f32	s13, #0.0
 801329a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801329e:	bf18      	it	ne
 80132a0:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 80132a4:	ee31 2a45 	vsub.f32	s4, s2, s10
 80132a8:	bf08      	it	eq
 80132aa:	eeb0 7a67 	vmoveq.f32	s14, s15
 80132ae:	ee61 1a87 	vmul.f32	s3, s3, s14
 80132b2:	ee22 2a07 	vmul.f32	s4, s4, s14
 80132b6:	fb05 f204 	mul.w	r2, r5, r4
 80132ba:	1abf      	subs	r7, r7, r2
 80132bc:	4494      	add	ip, r2
 80132be:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 80132c2:	4411      	add	r1, r2
 80132c4:	eb09 020c 	add.w	r2, r9, ip
 80132c8:	443a      	add	r2, r7
 80132ca:	b209      	sxth	r1, r1
 80132cc:	428a      	cmp	r2, r1
 80132ce:	bfc4      	itt	gt
 80132d0:	eba1 0209 	subgt.w	r2, r1, r9
 80132d4:	eba2 070c 	subgt.w	r7, r2, ip
 80132d8:	2f00      	cmp	r7, #0
 80132da:	dd50      	ble.n	801337e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 80132dc:	fb97 f1f4 	sdiv	r1, r7, r4
 80132e0:	fb04 7211 	mls	r2, r4, r1, r7
 80132e4:	b90a      	cbnz	r2, 80132ea <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 80132e6:	3901      	subs	r1, #1
 80132e8:	4622      	mov	r2, r4
 80132ea:	eec7 3a80 	vdiv.f32	s7, s15, s0
 80132ee:	6840      	ldr	r0, [r0, #4]
 80132f0:	900b      	str	r0, [sp, #44]	; 0x2c
 80132f2:	f8d0 a000 	ldr.w	sl, [r0]
 80132f6:	9817      	ldr	r0, [sp, #92]	; 0x5c
 80132f8:	9008      	str	r0, [sp, #32]
 80132fa:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 80132fe:	9818      	ldr	r0, [sp, #96]	; 0x60
 8013300:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 8013304:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 8013308:	695b      	ldr	r3, [r3, #20]
 801330a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801330c:	445b      	add	r3, fp
 801330e:	eef0 6a42 	vmov.f32	s13, s4
 8013312:	ee60 2aa3 	vmul.f32	s5, s1, s7
 8013316:	ee21 3a23 	vmul.f32	s6, s2, s7
 801331a:	ee72 7ae1 	vsub.f32	s15, s5, s3
 801331e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013322:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8013326:	9307      	str	r3, [sp, #28]
 8013328:	ee17 7a90 	vmov	r7, s15
 801332c:	ee73 7a42 	vsub.f32	s15, s6, s4
 8013330:	eeb0 7a61 	vmov.f32	s14, s3
 8013334:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8013338:	ee16 3a90 	vmov	r3, s13
 801333c:	fb97 f7f4 	sdiv	r7, r7, r4
 8013340:	ee17 ca90 	vmov	ip, s15
 8013344:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8013348:	fb9c fcf4 	sdiv	ip, ip, r4
 801334c:	fb0c 3306 	mla	r3, ip, r6, r3
 8013350:	9302      	str	r3, [sp, #8]
 8013352:	ee17 3a10 	vmov	r3, s14
 8013356:	44b6      	add	lr, r6
 8013358:	fb04 e505 	mla	r5, r4, r5, lr
 801335c:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 8013360:	fb07 3706 	mla	r7, r7, r6, r3
 8013364:	e9cd 8505 	strd	r8, r5, [sp, #20]
 8013368:	e9cd 4700 	strd	r4, r7, [sp]
 801336c:	2900      	cmp	r1, #0
 801336e:	bfcc      	ite	gt
 8013370:	46a1      	movgt	r9, r4
 8013372:	4691      	movle	r9, r2
 8013374:	eba9 0306 	sub.w	r3, r9, r6
 8013378:	f8da 4008 	ldr.w	r4, [sl, #8]
 801337c:	47a0      	blx	r4
 801337e:	b00d      	add	sp, #52	; 0x34
 8013380:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013384:	2500      	movs	r5, #0
 8013386:	462e      	mov	r6, r5
 8013388:	e799      	b.n	80132be <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0801338c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 801338c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013390:	b0db      	sub	sp, #364	; 0x16c
 8013392:	461d      	mov	r5, r3
 8013394:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 8013398:	930a      	str	r3, [sp, #40]	; 0x28
 801339a:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 801339e:	930b      	str	r3, [sp, #44]	; 0x2c
 80133a0:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 80133a4:	9310      	str	r3, [sp, #64]	; 0x40
 80133a6:	6803      	ldr	r3, [r0, #0]
 80133a8:	910f      	str	r1, [sp, #60]	; 0x3c
 80133aa:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 80133ac:	9009      	str	r0, [sp, #36]	; 0x24
 80133ae:	4614      	mov	r4, r2
 80133b0:	4629      	mov	r1, r5
 80133b2:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 80133b6:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 80133ba:	47b8      	blx	r7
 80133bc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80133be:	6058      	str	r0, [r3, #4]
 80133c0:	2800      	cmp	r0, #0
 80133c2:	f000 83a1 	beq.w	8013b08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80133c6:	682b      	ldr	r3, [r5, #0]
 80133c8:	9314      	str	r3, [sp, #80]	; 0x50
 80133ca:	686b      	ldr	r3, [r5, #4]
 80133cc:	9315      	str	r3, [sp, #84]	; 0x54
 80133ce:	4bc4      	ldr	r3, [pc, #784]	; (80136e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 80133d0:	ed94 7a02 	vldr	s14, [r4, #8]
 80133d4:	7819      	ldrb	r1, [r3, #0]
 80133d6:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 80133da:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 80133de:	2900      	cmp	r1, #0
 80133e0:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80133e4:	bf16      	itet	ne
 80133e6:	4619      	movne	r1, r3
 80133e8:	4611      	moveq	r1, r2
 80133ea:	4613      	movne	r3, r2
 80133ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80133f0:	9116      	str	r1, [sp, #88]	; 0x58
 80133f2:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 80133f6:	f240 8387 	bls.w	8013b08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80133fa:	ed94 7a07 	vldr	s14, [r4, #28]
 80133fe:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8013402:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013406:	f240 837f 	bls.w	8013b08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801340a:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 801340e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8013412:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013416:	f240 8377 	bls.w	8013b08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801341a:	6822      	ldr	r2, [r4, #0]
 801341c:	4bb1      	ldr	r3, [pc, #708]	; (80136e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 801341e:	429a      	cmp	r2, r3
 8013420:	f2c0 8372 	blt.w	8013b08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013424:	49b0      	ldr	r1, [pc, #704]	; (80136e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 8013426:	6963      	ldr	r3, [r4, #20]
 8013428:	428a      	cmp	r2, r1
 801342a:	f300 836d 	bgt.w	8013b08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801342e:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8013432:	48ae      	ldr	r0, [pc, #696]	; (80136ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 8013434:	33ff      	adds	r3, #255	; 0xff
 8013436:	4283      	cmp	r3, r0
 8013438:	f200 8366 	bhi.w	8013b08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801343c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 801343e:	4dac      	ldr	r5, [pc, #688]	; (80136f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 8013440:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8013444:	33ff      	adds	r3, #255	; 0xff
 8013446:	42ab      	cmp	r3, r5
 8013448:	f200 835e 	bhi.w	8013b08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801344c:	6862      	ldr	r2, [r4, #4]
 801344e:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 8013452:	33ff      	adds	r3, #255	; 0xff
 8013454:	4283      	cmp	r3, r0
 8013456:	f200 8357 	bhi.w	8013b08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801345a:	69a1      	ldr	r1, [r4, #24]
 801345c:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 8013460:	33ff      	adds	r3, #255	; 0xff
 8013462:	4283      	cmp	r3, r0
 8013464:	f200 8350 	bhi.w	8013b08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013468:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 801346a:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 801346e:	30ff      	adds	r0, #255	; 0xff
 8013470:	42a8      	cmp	r0, r5
 8013472:	f200 8349 	bhi.w	8013b08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013476:	428a      	cmp	r2, r1
 8013478:	f280 8110 	bge.w	801369c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 801347c:	429a      	cmp	r2, r3
 801347e:	f300 8119 	bgt.w	80136b4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 8013482:	4299      	cmp	r1, r3
 8013484:	f280 811d 	bge.w	80136c2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 8013488:	2502      	movs	r5, #2
 801348a:	2701      	movs	r7, #1
 801348c:	46a9      	mov	r9, r5
 801348e:	46b8      	mov	r8, r7
 8013490:	f04f 0a00 	mov.w	sl, #0
 8013494:	4621      	mov	r1, r4
 8013496:	a849      	add	r0, sp, #292	; 0x124
 8013498:	f003 feec 	bl	8017274 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 801349c:	4622      	mov	r2, r4
 801349e:	4653      	mov	r3, sl
 80134a0:	a949      	add	r1, sp, #292	; 0x124
 80134a2:	f8cd 9000 	str.w	r9, [sp]
 80134a6:	a819      	add	r0, sp, #100	; 0x64
 80134a8:	f004 f814 	bl	80174d4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 80134ac:	4622      	mov	r2, r4
 80134ae:	4653      	mov	r3, sl
 80134b0:	a949      	add	r1, sp, #292	; 0x124
 80134b2:	f8cd 8000 	str.w	r8, [sp]
 80134b6:	a829      	add	r0, sp, #164	; 0xa4
 80134b8:	f004 f80c 	bl	80174d4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 80134bc:	4643      	mov	r3, r8
 80134be:	4622      	mov	r2, r4
 80134c0:	a949      	add	r1, sp, #292	; 0x124
 80134c2:	f8cd 9000 	str.w	r9, [sp]
 80134c6:	a839      	add	r0, sp, #228	; 0xe4
 80134c8:	f004 f804 	bl	80174d4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 80134cc:	42af      	cmp	r7, r5
 80134ce:	bfb5      	itete	lt
 80134d0:	2300      	movlt	r3, #0
 80134d2:	2301      	movge	r3, #1
 80134d4:	930e      	strlt	r3, [sp, #56]	; 0x38
 80134d6:	930e      	strge	r3, [sp, #56]	; 0x38
 80134d8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80134da:	e893 0003 	ldmia.w	r3, {r0, r1}
 80134de:	af12      	add	r7, sp, #72	; 0x48
 80134e0:	bfb9      	ittee	lt
 80134e2:	ad29      	addlt	r5, sp, #164	; 0xa4
 80134e4:	ac19      	addlt	r4, sp, #100	; 0x64
 80134e6:	ad19      	addge	r5, sp, #100	; 0x64
 80134e8:	ac29      	addge	r4, sp, #164	; 0xa4
 80134ea:	e887 0003 	stmia.w	r7, {r0, r1}
 80134ee:	b928      	cbnz	r0, 80134fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 80134f0:	4b80      	ldr	r3, [pc, #512]	; (80136f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 80134f2:	6818      	ldr	r0, [r3, #0]
 80134f4:	6803      	ldr	r3, [r0, #0]
 80134f6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80134f8:	4798      	blx	r3
 80134fa:	6038      	str	r0, [r7, #0]
 80134fc:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80134fe:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8013502:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8013506:	930c      	str	r3, [sp, #48]	; 0x30
 8013508:	990c      	ldr	r1, [sp, #48]	; 0x30
 801350a:	6963      	ldr	r3, [r4, #20]
 801350c:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 801350e:	440b      	add	r3, r1
 8013510:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8013514:	4408      	add	r0, r1
 8013516:	b200      	sxth	r0, r0
 8013518:	4283      	cmp	r3, r0
 801351a:	900d      	str	r0, [sp, #52]	; 0x34
 801351c:	f280 80dd 	bge.w	80136da <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 8013520:	428b      	cmp	r3, r1
 8013522:	da08      	bge.n	8013536 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8013524:	2a00      	cmp	r2, #0
 8013526:	dd06      	ble.n	8013536 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8013528:	1acb      	subs	r3, r1, r3
 801352a:	429a      	cmp	r2, r3
 801352c:	f2c0 80e4 	blt.w	80136f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 8013530:	2b00      	cmp	r3, #0
 8013532:	f300 80e2 	bgt.w	80136fa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 8013536:	6967      	ldr	r7, [r4, #20]
 8013538:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801353a:	443b      	add	r3, r7
 801353c:	461f      	mov	r7, r3
 801353e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013540:	1bdf      	subs	r7, r3, r7
 8013542:	4297      	cmp	r7, r2
 8013544:	bfa8      	it	ge
 8013546:	4617      	movge	r7, r2
 8013548:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 801354c:	2f00      	cmp	r7, #0
 801354e:	f340 8166 	ble.w	801381e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 8013552:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8013554:	6829      	ldr	r1, [r5, #0]
 8013556:	f9b3 2000 	ldrsh.w	r2, [r3]
 801355a:	f9bb 3000 	ldrsh.w	r3, [fp]
 801355e:	6820      	ldr	r0, [r4, #0]
 8013560:	4411      	add	r1, r2
 8013562:	4299      	cmp	r1, r3
 8013564:	dd1a      	ble.n	801359c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8013566:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 801356a:	440b      	add	r3, r1
 801356c:	4402      	add	r2, r0
 801356e:	b21b      	sxth	r3, r3
 8013570:	429a      	cmp	r2, r3
 8013572:	dc13      	bgt.n	801359c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8013574:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013576:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8013578:	681b      	ldr	r3, [r3, #0]
 801357a:	9206      	str	r2, [sp, #24]
 801357c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801357e:	9205      	str	r2, [sp, #20]
 8013580:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8013582:	9500      	str	r5, [sp, #0]
 8013584:	e9cd b203 	strd	fp, r2, [sp, #12]
 8013588:	9a64      	ldr	r2, [sp, #400]	; 0x190
 801358a:	9809      	ldr	r0, [sp, #36]	; 0x24
 801358c:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8013590:	a912      	add	r1, sp, #72	; 0x48
 8013592:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8013596:	aa49      	add	r2, sp, #292	; 0x124
 8013598:	4623      	mov	r3, r4
 801359a:	47c8      	blx	r9
 801359c:	e9d4 2300 	ldrd	r2, r3, [r4]
 80135a0:	441a      	add	r2, r3
 80135a2:	6963      	ldr	r3, [r4, #20]
 80135a4:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 80135a8:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 80135ac:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 80135b0:	68a1      	ldr	r1, [r4, #8]
 80135b2:	ed94 6a08 	vldr	s12, [r4, #32]
 80135b6:	6022      	str	r2, [r4, #0]
 80135b8:	3301      	adds	r3, #1
 80135ba:	6163      	str	r3, [r4, #20]
 80135bc:	69a3      	ldr	r3, [r4, #24]
 80135be:	ee37 7a27 	vadd.f32	s14, s14, s15
 80135c2:	3b01      	subs	r3, #1
 80135c4:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 80135c8:	61a3      	str	r3, [r4, #24]
 80135ca:	6923      	ldr	r3, [r4, #16]
 80135cc:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80135d0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80135d4:	edd4 6a07 	vldr	s13, [r4, #28]
 80135d8:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80135dc:	440b      	add	r3, r1
 80135de:	68e1      	ldr	r1, [r4, #12]
 80135e0:	6123      	str	r3, [r4, #16]
 80135e2:	ee76 6a86 	vadd.f32	s13, s13, s12
 80135e6:	428b      	cmp	r3, r1
 80135e8:	edc4 6a07 	vstr	s13, [r4, #28]
 80135ec:	db15      	blt.n	801361a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 80135ee:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 80135f2:	ee76 6a26 	vadd.f32	s13, s12, s13
 80135f6:	3201      	adds	r2, #1
 80135f8:	edc4 6a07 	vstr	s13, [r4, #28]
 80135fc:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8013600:	6022      	str	r2, [r4, #0]
 8013602:	ee36 7a87 	vadd.f32	s14, s13, s14
 8013606:	1a5b      	subs	r3, r3, r1
 8013608:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801360c:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8013610:	6123      	str	r3, [r4, #16]
 8013612:	ee77 7a27 	vadd.f32	s15, s14, s15
 8013616:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801361a:	e9d5 2300 	ldrd	r2, r3, [r5]
 801361e:	441a      	add	r2, r3
 8013620:	696b      	ldr	r3, [r5, #20]
 8013622:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8013626:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 801362a:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 801362e:	68a9      	ldr	r1, [r5, #8]
 8013630:	ed95 6a08 	vldr	s12, [r5, #32]
 8013634:	602a      	str	r2, [r5, #0]
 8013636:	3301      	adds	r3, #1
 8013638:	616b      	str	r3, [r5, #20]
 801363a:	69ab      	ldr	r3, [r5, #24]
 801363c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8013640:	3b01      	subs	r3, #1
 8013642:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8013646:	61ab      	str	r3, [r5, #24]
 8013648:	692b      	ldr	r3, [r5, #16]
 801364a:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801364e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8013652:	edd5 6a07 	vldr	s13, [r5, #28]
 8013656:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 801365a:	440b      	add	r3, r1
 801365c:	68e9      	ldr	r1, [r5, #12]
 801365e:	612b      	str	r3, [r5, #16]
 8013660:	ee76 6a86 	vadd.f32	s13, s13, s12
 8013664:	428b      	cmp	r3, r1
 8013666:	edc5 6a07 	vstr	s13, [r5, #28]
 801366a:	db15      	blt.n	8013698 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 801366c:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8013670:	ee76 6a26 	vadd.f32	s13, s12, s13
 8013674:	3201      	adds	r2, #1
 8013676:	edc5 6a07 	vstr	s13, [r5, #28]
 801367a:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 801367e:	602a      	str	r2, [r5, #0]
 8013680:	ee36 7a87 	vadd.f32	s14, s13, s14
 8013684:	1a5b      	subs	r3, r3, r1
 8013686:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801368a:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 801368e:	612b      	str	r3, [r5, #16]
 8013690:	ee77 7a27 	vadd.f32	s15, s14, s15
 8013694:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8013698:	3f01      	subs	r7, #1
 801369a:	e757      	b.n	801354c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 801369c:	4299      	cmp	r1, r3
 801369e:	dc13      	bgt.n	80136c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 80136a0:	429a      	cmp	r2, r3
 80136a2:	da14      	bge.n	80136ce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 80136a4:	2502      	movs	r5, #2
 80136a6:	2703      	movs	r7, #3
 80136a8:	46a9      	mov	r9, r5
 80136aa:	f04f 0800 	mov.w	r8, #0
 80136ae:	f04f 0a01 	mov.w	sl, #1
 80136b2:	e6ef      	b.n	8013494 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 80136b4:	2501      	movs	r5, #1
 80136b6:	2700      	movs	r7, #0
 80136b8:	46a9      	mov	r9, r5
 80136ba:	46b8      	mov	r8, r7
 80136bc:	f04f 0a02 	mov.w	sl, #2
 80136c0:	e6e8      	b.n	8013494 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 80136c2:	2501      	movs	r5, #1
 80136c4:	2702      	movs	r7, #2
 80136c6:	e6e1      	b.n	801348c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 80136c8:	2500      	movs	r5, #0
 80136ca:	2701      	movs	r7, #1
 80136cc:	e7f4      	b.n	80136b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 80136ce:	2702      	movs	r7, #2
 80136d0:	2503      	movs	r5, #3
 80136d2:	f04f 0900 	mov.w	r9, #0
 80136d6:	46b8      	mov	r8, r7
 80136d8:	e7e9      	b.n	80136ae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 80136da:	4613      	mov	r3, r2
 80136dc:	e728      	b.n	8013530 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 80136de:	bf00      	nop
 80136e0:	200137b4 	.word	0x200137b4
 80136e4:	fffd8f01 	.word	0xfffd8f01
 80136e8:	00027100 	.word	0x00027100
 80136ec:	0004e1ff 	.word	0x0004e1ff
 80136f0:	0004e1fe 	.word	0x0004e1fe
 80136f4:	200137bc 	.word	0x200137bc
 80136f8:	4613      	mov	r3, r2
 80136fa:	992b      	ldr	r1, [sp, #172]	; 0xac
 80136fc:	9111      	str	r1, [sp, #68]	; 0x44
 80136fe:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 8013702:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 8013706:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 8013708:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 801370c:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 8013710:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 8013714:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 8013718:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 801371c:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 8013720:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 8013724:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 8013728:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 801372c:	469e      	mov	lr, r3
 801372e:	469c      	mov	ip, r3
 8013730:	f04f 0900 	mov.w	r9, #0
 8013734:	f1bc 0f00 	cmp.w	ip, #0
 8013738:	d147      	bne.n	80137ca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 801373a:	eb03 0c07 	add.w	ip, r3, r7
 801373e:	1ad7      	subs	r7, r2, r3
 8013740:	f1b9 0f00 	cmp.w	r9, #0
 8013744:	d009      	beq.n	801375a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 8013746:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 801374a:	9029      	str	r0, [sp, #164]	; 0xa4
 801374c:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 8013750:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 8013754:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 8013758:	912d      	str	r1, [sp, #180]	; 0xb4
 801375a:	991b      	ldr	r1, [sp, #108]	; 0x6c
 801375c:	9111      	str	r1, [sp, #68]	; 0x44
 801375e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8013762:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8013766:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 801376a:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 801376e:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8013772:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8013776:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 801377a:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 801377e:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8013782:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8013786:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 801378a:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 801378e:	f04f 0800 	mov.w	r8, #0
 8013792:	f1be 0f00 	cmp.w	lr, #0
 8013796:	d031      	beq.n	80137fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 8013798:	9e11      	ldr	r6, [sp, #68]	; 0x44
 801379a:	4431      	add	r1, r6
 801379c:	4549      	cmp	r1, r9
 801379e:	4450      	add	r0, sl
 80137a0:	ee76 6aa4 	vadd.f32	s13, s13, s9
 80137a4:	ee37 7a04 	vadd.f32	s14, s14, s8
 80137a8:	ee77 7aa3 	vadd.f32	s15, s15, s7
 80137ac:	db08      	blt.n	80137c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 80137ae:	ee77 7a85 	vadd.f32	s15, s15, s10
 80137b2:	ee76 6aa5 	vadd.f32	s13, s13, s11
 80137b6:	ee37 7a06 	vadd.f32	s14, s14, s12
 80137ba:	3001      	adds	r0, #1
 80137bc:	eba1 0109 	sub.w	r1, r1, r9
 80137c0:	f10e 3eff 	add.w	lr, lr, #4294967295
 80137c4:	f04f 0801 	mov.w	r8, #1
 80137c8:	e7e3      	b.n	8013792 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 80137ca:	9e11      	ldr	r6, [sp, #68]	; 0x44
 80137cc:	4431      	add	r1, r6
 80137ce:	4541      	cmp	r1, r8
 80137d0:	4450      	add	r0, sl
 80137d2:	ee37 7a24 	vadd.f32	s14, s14, s9
 80137d6:	ee77 7a84 	vadd.f32	s15, s15, s8
 80137da:	ee76 6aa3 	vadd.f32	s13, s13, s7
 80137de:	db08      	blt.n	80137f2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 80137e0:	ee76 6a85 	vadd.f32	s13, s13, s10
 80137e4:	ee37 7a25 	vadd.f32	s14, s14, s11
 80137e8:	ee77 7a86 	vadd.f32	s15, s15, s12
 80137ec:	3001      	adds	r0, #1
 80137ee:	eba1 0108 	sub.w	r1, r1, r8
 80137f2:	f10c 3cff 	add.w	ip, ip, #4294967295
 80137f6:	f04f 0901 	mov.w	r9, #1
 80137fa:	e79b      	b.n	8013734 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 80137fc:	449c      	add	ip, r3
 80137fe:	1aff      	subs	r7, r7, r3
 8013800:	f1b8 0f00 	cmp.w	r8, #0
 8013804:	d009      	beq.n	801381a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 8013806:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 801380a:	9019      	str	r0, [sp, #100]	; 0x64
 801380c:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8013810:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8013814:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8013818:	911d      	str	r1, [sp, #116]	; 0x74
 801381a:	1ad2      	subs	r2, r2, r3
 801381c:	e68b      	b.n	8013536 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 801381e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013820:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 8013822:	2b00      	cmp	r3, #0
 8013824:	f000 80d1 	beq.w	80139ca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 8013828:	ad19      	add	r5, sp, #100	; 0x64
 801382a:	ac39      	add	r4, sp, #228	; 0xe4
 801382c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 801382e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8013832:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8013836:	930c      	str	r3, [sp, #48]	; 0x30
 8013838:	990c      	ldr	r1, [sp, #48]	; 0x30
 801383a:	6963      	ldr	r3, [r4, #20]
 801383c:	440b      	add	r3, r1
 801383e:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8013842:	4408      	add	r0, r1
 8013844:	b200      	sxth	r0, r0
 8013846:	4283      	cmp	r3, r0
 8013848:	900d      	str	r0, [sp, #52]	; 0x34
 801384a:	f280 80c1 	bge.w	80139d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 801384e:	428b      	cmp	r3, r1
 8013850:	da08      	bge.n	8013864 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8013852:	2a00      	cmp	r2, #0
 8013854:	dd06      	ble.n	8013864 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8013856:	1acb      	subs	r3, r1, r3
 8013858:	429a      	cmp	r2, r3
 801385a:	f2c0 80bb 	blt.w	80139d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 801385e:	2b00      	cmp	r3, #0
 8013860:	f300 80b9 	bgt.w	80139d6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 8013864:	6967      	ldr	r7, [r4, #20]
 8013866:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013868:	443b      	add	r3, r7
 801386a:	461f      	mov	r7, r3
 801386c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801386e:	1bdf      	subs	r7, r3, r7
 8013870:	4297      	cmp	r7, r2
 8013872:	bfa8      	it	ge
 8013874:	4617      	movge	r7, r2
 8013876:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 801387a:	2f00      	cmp	r7, #0
 801387c:	f340 813c 	ble.w	8013af8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 8013880:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8013882:	6829      	ldr	r1, [r5, #0]
 8013884:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013888:	f9bb 3000 	ldrsh.w	r3, [fp]
 801388c:	6820      	ldr	r0, [r4, #0]
 801388e:	4411      	add	r1, r2
 8013890:	4299      	cmp	r1, r3
 8013892:	dd1a      	ble.n	80138ca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8013894:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8013898:	440b      	add	r3, r1
 801389a:	4402      	add	r2, r0
 801389c:	b21b      	sxth	r3, r3
 801389e:	429a      	cmp	r2, r3
 80138a0:	dc13      	bgt.n	80138ca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 80138a2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80138a4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80138a6:	681b      	ldr	r3, [r3, #0]
 80138a8:	9206      	str	r2, [sp, #24]
 80138aa:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80138ac:	9205      	str	r2, [sp, #20]
 80138ae:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80138b0:	9500      	str	r5, [sp, #0]
 80138b2:	e9cd b203 	strd	fp, r2, [sp, #12]
 80138b6:	9a64      	ldr	r2, [sp, #400]	; 0x190
 80138b8:	9809      	ldr	r0, [sp, #36]	; 0x24
 80138ba:	e9cd 8201 	strd	r8, r2, [sp, #4]
 80138be:	a912      	add	r1, sp, #72	; 0x48
 80138c0:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 80138c4:	aa49      	add	r2, sp, #292	; 0x124
 80138c6:	4623      	mov	r3, r4
 80138c8:	47c8      	blx	r9
 80138ca:	e9d4 2300 	ldrd	r2, r3, [r4]
 80138ce:	441a      	add	r2, r3
 80138d0:	6963      	ldr	r3, [r4, #20]
 80138d2:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 80138d6:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 80138da:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 80138de:	68a1      	ldr	r1, [r4, #8]
 80138e0:	ed94 6a08 	vldr	s12, [r4, #32]
 80138e4:	6022      	str	r2, [r4, #0]
 80138e6:	3301      	adds	r3, #1
 80138e8:	6163      	str	r3, [r4, #20]
 80138ea:	69a3      	ldr	r3, [r4, #24]
 80138ec:	ee37 7a27 	vadd.f32	s14, s14, s15
 80138f0:	3b01      	subs	r3, #1
 80138f2:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 80138f6:	61a3      	str	r3, [r4, #24]
 80138f8:	6923      	ldr	r3, [r4, #16]
 80138fa:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80138fe:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8013902:	edd4 6a07 	vldr	s13, [r4, #28]
 8013906:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801390a:	440b      	add	r3, r1
 801390c:	68e1      	ldr	r1, [r4, #12]
 801390e:	6123      	str	r3, [r4, #16]
 8013910:	ee76 6a86 	vadd.f32	s13, s13, s12
 8013914:	428b      	cmp	r3, r1
 8013916:	edc4 6a07 	vstr	s13, [r4, #28]
 801391a:	db15      	blt.n	8013948 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 801391c:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8013920:	ee76 6a26 	vadd.f32	s13, s12, s13
 8013924:	3201      	adds	r2, #1
 8013926:	edc4 6a07 	vstr	s13, [r4, #28]
 801392a:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 801392e:	6022      	str	r2, [r4, #0]
 8013930:	ee36 7a87 	vadd.f32	s14, s13, s14
 8013934:	1a5b      	subs	r3, r3, r1
 8013936:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801393a:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 801393e:	6123      	str	r3, [r4, #16]
 8013940:	ee77 7a27 	vadd.f32	s15, s14, s15
 8013944:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8013948:	e9d5 2300 	ldrd	r2, r3, [r5]
 801394c:	441a      	add	r2, r3
 801394e:	696b      	ldr	r3, [r5, #20]
 8013950:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8013954:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8013958:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 801395c:	68a9      	ldr	r1, [r5, #8]
 801395e:	ed95 6a08 	vldr	s12, [r5, #32]
 8013962:	602a      	str	r2, [r5, #0]
 8013964:	3301      	adds	r3, #1
 8013966:	616b      	str	r3, [r5, #20]
 8013968:	69ab      	ldr	r3, [r5, #24]
 801396a:	ee37 7a27 	vadd.f32	s14, s14, s15
 801396e:	3b01      	subs	r3, #1
 8013970:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8013974:	61ab      	str	r3, [r5, #24]
 8013976:	692b      	ldr	r3, [r5, #16]
 8013978:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801397c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8013980:	edd5 6a07 	vldr	s13, [r5, #28]
 8013984:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8013988:	440b      	add	r3, r1
 801398a:	68e9      	ldr	r1, [r5, #12]
 801398c:	612b      	str	r3, [r5, #16]
 801398e:	ee76 6a86 	vadd.f32	s13, s13, s12
 8013992:	428b      	cmp	r3, r1
 8013994:	edc5 6a07 	vstr	s13, [r5, #28]
 8013998:	db15      	blt.n	80139c6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 801399a:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 801399e:	ee76 6a26 	vadd.f32	s13, s12, s13
 80139a2:	3201      	adds	r2, #1
 80139a4:	edc5 6a07 	vstr	s13, [r5, #28]
 80139a8:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 80139ac:	602a      	str	r2, [r5, #0]
 80139ae:	ee36 7a87 	vadd.f32	s14, s13, s14
 80139b2:	1a5b      	subs	r3, r3, r1
 80139b4:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 80139b8:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 80139bc:	612b      	str	r3, [r5, #16]
 80139be:	ee77 7a27 	vadd.f32	s15, s14, s15
 80139c2:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 80139c6:	3f01      	subs	r7, #1
 80139c8:	e757      	b.n	801387a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 80139ca:	ad39      	add	r5, sp, #228	; 0xe4
 80139cc:	ac19      	add	r4, sp, #100	; 0x64
 80139ce:	e72d      	b.n	801382c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 80139d0:	4613      	mov	r3, r2
 80139d2:	e744      	b.n	801385e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 80139d4:	4613      	mov	r3, r2
 80139d6:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 80139da:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 80139dc:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 80139e0:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 80139e4:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 80139e8:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 80139ec:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 80139f0:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 80139f4:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 80139f8:	993d      	ldr	r1, [sp, #244]	; 0xf4
 80139fa:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 80139fe:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 8013a02:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 8013a06:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 8013a0a:	960e      	str	r6, [sp, #56]	; 0x38
 8013a0c:	469e      	mov	lr, r3
 8013a0e:	461f      	mov	r7, r3
 8013a10:	f04f 0900 	mov.w	r9, #0
 8013a14:	2f00      	cmp	r7, #0
 8013a16:	d146      	bne.n	8013aa6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 8013a18:	449c      	add	ip, r3
 8013a1a:	1ad7      	subs	r7, r2, r3
 8013a1c:	f1b9 0f00 	cmp.w	r9, #0
 8013a20:	d009      	beq.n	8013a36 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 8013a22:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 8013a26:	9039      	str	r0, [sp, #228]	; 0xe4
 8013a28:	913d      	str	r1, [sp, #244]	; 0xf4
 8013a2a:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 8013a2e:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 8013a32:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 8013a36:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8013a38:	910e      	str	r1, [sp, #56]	; 0x38
 8013a3a:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8013a3e:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8013a42:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8013a46:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 8013a4a:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8013a4e:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8013a52:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8013a56:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 8013a5a:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8013a5e:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8013a62:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8013a66:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 8013a6a:	f04f 0800 	mov.w	r8, #0
 8013a6e:	f1be 0f00 	cmp.w	lr, #0
 8013a72:	d030      	beq.n	8013ad6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 8013a74:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8013a76:	4431      	add	r1, r6
 8013a78:	4549      	cmp	r1, r9
 8013a7a:	4450      	add	r0, sl
 8013a7c:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8013a80:	ee37 7a04 	vadd.f32	s14, s14, s8
 8013a84:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8013a88:	db08      	blt.n	8013a9c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 8013a8a:	ee77 7a85 	vadd.f32	s15, s15, s10
 8013a8e:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8013a92:	ee37 7a06 	vadd.f32	s14, s14, s12
 8013a96:	3001      	adds	r0, #1
 8013a98:	eba1 0109 	sub.w	r1, r1, r9
 8013a9c:	f10e 3eff 	add.w	lr, lr, #4294967295
 8013aa0:	f04f 0801 	mov.w	r8, #1
 8013aa4:	e7e3      	b.n	8013a6e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 8013aa6:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8013aa8:	4431      	add	r1, r6
 8013aaa:	4541      	cmp	r1, r8
 8013aac:	4450      	add	r0, sl
 8013aae:	ee37 7a24 	vadd.f32	s14, s14, s9
 8013ab2:	ee77 7a84 	vadd.f32	s15, s15, s8
 8013ab6:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8013aba:	db08      	blt.n	8013ace <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 8013abc:	ee76 6a85 	vadd.f32	s13, s13, s10
 8013ac0:	ee37 7a25 	vadd.f32	s14, s14, s11
 8013ac4:	ee77 7a86 	vadd.f32	s15, s15, s12
 8013ac8:	3001      	adds	r0, #1
 8013aca:	eba1 0108 	sub.w	r1, r1, r8
 8013ace:	3f01      	subs	r7, #1
 8013ad0:	f04f 0901 	mov.w	r9, #1
 8013ad4:	e79e      	b.n	8013a14 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 8013ad6:	449c      	add	ip, r3
 8013ad8:	1aff      	subs	r7, r7, r3
 8013ada:	f1b8 0f00 	cmp.w	r8, #0
 8013ade:	d009      	beq.n	8013af4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 8013ae0:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8013ae4:	9019      	str	r0, [sp, #100]	; 0x64
 8013ae6:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8013aea:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8013aee:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8013af2:	911d      	str	r1, [sp, #116]	; 0x74
 8013af4:	1ad2      	subs	r2, r2, r3
 8013af6:	e6b5      	b.n	8013864 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8013af8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8013afa:	681b      	ldr	r3, [r3, #0]
 8013afc:	b923      	cbnz	r3, 8013b08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013afe:	4b04      	ldr	r3, [pc, #16]	; (8013b10 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8013b00:	6818      	ldr	r0, [r3, #0]
 8013b02:	6803      	ldr	r3, [r0, #0]
 8013b04:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013b06:	4798      	blx	r3
 8013b08:	b05b      	add	sp, #364	; 0x16c
 8013b0a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013b0e:	bf00      	nop
 8013b10:	200137bc 	.word	0x200137bc

08013b14 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 8013b14:	b570      	push	{r4, r5, r6, lr}
 8013b16:	4604      	mov	r4, r0
 8013b18:	f89d 601c 	ldrb.w	r6, [sp, #28]
 8013b1c:	9805      	ldr	r0, [sp, #20]
 8013b1e:	6061      	str	r1, [r4, #4]
 8013b20:	2500      	movs	r5, #0
 8013b22:	f89d 1010 	ldrb.w	r1, [sp, #16]
 8013b26:	8263      	strh	r3, [r4, #18]
 8013b28:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8013b2c:	8025      	strh	r5, [r4, #0]
 8013b2e:	7221      	strb	r1, [r4, #8]
 8013b30:	7266      	strb	r6, [r4, #9]
 8013b32:	60e0      	str	r0, [r4, #12]
 8013b34:	8222      	strh	r2, [r4, #16]
 8013b36:	82a3      	strh	r3, [r4, #20]
 8013b38:	82e5      	strh	r5, [r4, #22]
 8013b3a:	8325      	strh	r5, [r4, #24]
 8013b3c:	8365      	strh	r5, [r4, #26]
 8013b3e:	83a5      	strh	r5, [r4, #28]
 8013b40:	83e5      	strh	r5, [r4, #30]
 8013b42:	8425      	strh	r5, [r4, #32]
 8013b44:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8013b48:	b32e      	cbz	r6, 8013b96 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8013b4a:	6803      	ldr	r3, [r0, #0]
 8013b4c:	695b      	ldr	r3, [r3, #20]
 8013b4e:	4798      	blx	r3
 8013b50:	4606      	mov	r6, r0
 8013b52:	b300      	cbz	r0, 8013b96 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8013b54:	68e0      	ldr	r0, [r4, #12]
 8013b56:	6803      	ldr	r3, [r0, #0]
 8013b58:	4631      	mov	r1, r6
 8013b5a:	68db      	ldr	r3, [r3, #12]
 8013b5c:	4798      	blx	r3
 8013b5e:	4605      	mov	r5, r0
 8013b60:	b1c8      	cbz	r0, 8013b96 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8013b62:	7b43      	ldrb	r3, [r0, #13]
 8013b64:	7a82      	ldrb	r2, [r0, #10]
 8013b66:	005b      	lsls	r3, r3, #1
 8013b68:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8013b6c:	4313      	orrs	r3, r2
 8013b6e:	8423      	strh	r3, [r4, #32]
 8013b70:	7a63      	ldrb	r3, [r4, #9]
 8013b72:	2b06      	cmp	r3, #6
 8013b74:	d10f      	bne.n	8013b96 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8013b76:	68e0      	ldr	r0, [r4, #12]
 8013b78:	6803      	ldr	r3, [r0, #0]
 8013b7a:	462a      	mov	r2, r5
 8013b7c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8013b7e:	4631      	mov	r1, r6
 8013b80:	4798      	blx	r3
 8013b82:	7b6b      	ldrb	r3, [r5, #13]
 8013b84:	005b      	lsls	r3, r3, #1
 8013b86:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8013b8a:	7aab      	ldrb	r3, [r5, #10]
 8013b8c:	4313      	orrs	r3, r2
 8013b8e:	4418      	add	r0, r3
 8013b90:	8c23      	ldrh	r3, [r4, #32]
 8013b92:	4418      	add	r0, r3
 8013b94:	8420      	strh	r0, [r4, #32]
 8013b96:	4620      	mov	r0, r4
 8013b98:	bd70      	pop	{r4, r5, r6, pc}

08013b9a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 8013b9a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013b9e:	2400      	movs	r4, #0
 8013ba0:	b085      	sub	sp, #20
 8013ba2:	4681      	mov	r9, r0
 8013ba4:	4688      	mov	r8, r1
 8013ba6:	4692      	mov	sl, r2
 8013ba8:	469b      	mov	fp, r3
 8013baa:	4627      	mov	r7, r4
 8013bac:	4625      	mov	r5, r4
 8013bae:	4626      	mov	r6, r4
 8013bb0:	4554      	cmp	r4, sl
 8013bb2:	da2a      	bge.n	8013c0a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8013bb4:	2300      	movs	r3, #0
 8013bb6:	9303      	str	r3, [sp, #12]
 8013bb8:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8013bbc:	429d      	cmp	r5, r3
 8013bbe:	d004      	beq.n	8013bca <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 8013bc0:	f242 030b 	movw	r3, #8203	; 0x200b
 8013bc4:	429d      	cmp	r5, r3
 8013bc6:	bf18      	it	ne
 8013bc8:	462f      	movne	r7, r5
 8013bca:	ab03      	add	r3, sp, #12
 8013bcc:	4642      	mov	r2, r8
 8013bce:	4659      	mov	r1, fp
 8013bd0:	4648      	mov	r0, r9
 8013bd2:	f003 f965 	bl	8016ea0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8013bd6:	4605      	mov	r5, r0
 8013bd8:	b1b8      	cbz	r0, 8013c0a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8013bda:	280a      	cmp	r0, #10
 8013bdc:	d015      	beq.n	8013c0a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8013bde:	9a03      	ldr	r2, [sp, #12]
 8013be0:	b18a      	cbz	r2, 8013c06 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 8013be2:	7b50      	ldrb	r0, [r2, #13]
 8013be4:	7a93      	ldrb	r3, [r2, #10]
 8013be6:	8895      	ldrh	r5, [r2, #4]
 8013be8:	0040      	lsls	r0, r0, #1
 8013bea:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8013bee:	4303      	orrs	r3, r0
 8013bf0:	9301      	str	r3, [sp, #4]
 8013bf2:	f8d8 3000 	ldr.w	r3, [r8]
 8013bf6:	4639      	mov	r1, r7
 8013bf8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8013bfa:	4640      	mov	r0, r8
 8013bfc:	4798      	blx	r3
 8013bfe:	9b01      	ldr	r3, [sp, #4]
 8013c00:	4418      	add	r0, r3
 8013c02:	4406      	add	r6, r0
 8013c04:	b2b6      	uxth	r6, r6
 8013c06:	3401      	adds	r4, #1
 8013c08:	e7d2      	b.n	8013bb0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 8013c0a:	4630      	mov	r0, r6
 8013c0c:	b005      	add	sp, #20
 8013c0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013c12 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 8013c12:	2a02      	cmp	r2, #2
 8013c14:	b530      	push	{r4, r5, lr}
 8013c16:	d011      	beq.n	8013c3c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 8013c18:	2a03      	cmp	r2, #3
 8013c1a:	d01c      	beq.n	8013c56 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 8013c1c:	2a01      	cmp	r2, #1
 8013c1e:	d10c      	bne.n	8013c3a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8013c20:	888b      	ldrh	r3, [r1, #4]
 8013c22:	8801      	ldrh	r1, [r0, #0]
 8013c24:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8013c28:	8844      	ldrh	r4, [r0, #2]
 8013c2a:	8004      	strh	r4, [r0, #0]
 8013c2c:	1a5b      	subs	r3, r3, r1
 8013c2e:	1a9b      	subs	r3, r3, r2
 8013c30:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8013c34:	8043      	strh	r3, [r0, #2]
 8013c36:	8081      	strh	r1, [r0, #4]
 8013c38:	80c2      	strh	r2, [r0, #6]
 8013c3a:	bd30      	pop	{r4, r5, pc}
 8013c3c:	88cb      	ldrh	r3, [r1, #6]
 8013c3e:	8842      	ldrh	r2, [r0, #2]
 8013c40:	1a9b      	subs	r3, r3, r2
 8013c42:	88c2      	ldrh	r2, [r0, #6]
 8013c44:	1a9b      	subs	r3, r3, r2
 8013c46:	888a      	ldrh	r2, [r1, #4]
 8013c48:	8801      	ldrh	r1, [r0, #0]
 8013c4a:	8043      	strh	r3, [r0, #2]
 8013c4c:	1a52      	subs	r2, r2, r1
 8013c4e:	8881      	ldrh	r1, [r0, #4]
 8013c50:	1a52      	subs	r2, r2, r1
 8013c52:	8002      	strh	r2, [r0, #0]
 8013c54:	e7f1      	b.n	8013c3a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8013c56:	88cb      	ldrh	r3, [r1, #6]
 8013c58:	8841      	ldrh	r1, [r0, #2]
 8013c5a:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8013c5e:	f9b0 5000 	ldrsh.w	r5, [r0]
 8013c62:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8013c66:	8045      	strh	r5, [r0, #2]
 8013c68:	1a5b      	subs	r3, r3, r1
 8013c6a:	1a9b      	subs	r3, r3, r2
 8013c6c:	8003      	strh	r3, [r0, #0]
 8013c6e:	8082      	strh	r2, [r0, #4]
 8013c70:	80c4      	strh	r4, [r0, #6]
 8013c72:	e7e2      	b.n	8013c3a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

08013c74 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 8013c74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013c78:	b09f      	sub	sp, #124	; 0x7c
 8013c7a:	9116      	str	r1, [sp, #88]	; 0x58
 8013c7c:	9317      	str	r3, [sp, #92]	; 0x5c
 8013c7e:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8013c80:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8013c82:	8809      	ldrh	r1, [r1, #0]
 8013c84:	889b      	ldrh	r3, [r3, #4]
 8013c86:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 8013c8a:	9212      	str	r2, [sp, #72]	; 0x48
 8013c8c:	440b      	add	r3, r1
 8013c8e:	b21b      	sxth	r3, r3
 8013c90:	9310      	str	r3, [sp, #64]	; 0x40
 8013c92:	f8d8 3000 	ldr.w	r3, [r8]
 8013c96:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 8013c9a:	7b19      	ldrb	r1, [r3, #12]
 8013c9c:	7adb      	ldrb	r3, [r3, #11]
 8013c9e:	9011      	str	r0, [sp, #68]	; 0x44
 8013ca0:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 8013ca4:	9114      	str	r1, [sp, #80]	; 0x50
 8013ca6:	9315      	str	r3, [sp, #84]	; 0x54
 8013ca8:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
 8013cac:	2a00      	cmp	r2, #0
 8013cae:	d06a      	beq.n	8013d86 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 8013cb0:	f898 3010 	ldrb.w	r3, [r8, #16]
 8013cb4:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8013cb6:	2b06      	cmp	r3, #6
 8013cb8:	bf14      	ite	ne
 8013cba:	2301      	movne	r3, #1
 8013cbc:	2302      	moveq	r3, #2
 8013cbe:	4413      	add	r3, r2
 8013cc0:	f04f 0900 	mov.w	r9, #0
 8013cc4:	930f      	str	r3, [sp, #60]	; 0x3c
 8013cc6:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 8013cca:	464c      	mov	r4, r9
 8013ccc:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8013cd0:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 8013cd4:	4293      	cmp	r3, r2
 8013cd6:	f280 808f 	bge.w	8013df8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8013cda:	2300      	movs	r3, #0
 8013cdc:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 8013ce0:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 8013ce4:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8013ce8:	429c      	cmp	r4, r3
 8013cea:	d006      	beq.n	8013cfa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 8013cec:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013cee:	f242 020b 	movw	r2, #8203	; 0x200b
 8013cf2:	4294      	cmp	r4, r2
 8013cf4:	bf18      	it	ne
 8013cf6:	4623      	movne	r3, r4
 8013cf8:	930d      	str	r3, [sp, #52]	; 0x34
 8013cfa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013cfc:	992d      	ldr	r1, [sp, #180]	; 0xb4
 8013cfe:	f8d8 2000 	ldr.w	r2, [r8]
 8013d02:	428b      	cmp	r3, r1
 8013d04:	db41      	blt.n	8013d8a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 8013d06:	6813      	ldr	r3, [r2, #0]
 8013d08:	4610      	mov	r0, r2
 8013d0a:	695b      	ldr	r3, [r3, #20]
 8013d0c:	4798      	blx	r3
 8013d0e:	4604      	mov	r4, r0
 8013d10:	f8d8 0000 	ldr.w	r0, [r8]
 8013d14:	6803      	ldr	r3, [r0, #0]
 8013d16:	aa1d      	add	r2, sp, #116	; 0x74
 8013d18:	689d      	ldr	r5, [r3, #8]
 8013d1a:	4621      	mov	r1, r4
 8013d1c:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8013d20:	47a8      	blx	r5
 8013d22:	901c      	str	r0, [sp, #112]	; 0x70
 8013d24:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8013d28:	429c      	cmp	r4, r3
 8013d2a:	f000 80eb 	beq.w	8013f04 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8013d2e:	f242 030b 	movw	r3, #8203	; 0x200b
 8013d32:	429c      	cmp	r4, r3
 8013d34:	f000 80e6 	beq.w	8013f04 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8013d38:	2c00      	cmp	r4, #0
 8013d3a:	f000 80f8 	beq.w	8013f2e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8013d3e:	2c0a      	cmp	r4, #10
 8013d40:	d060      	beq.n	8013e04 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8013d42:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8013d44:	b36a      	cbz	r2, 8013da2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 8013d46:	8894      	ldrh	r4, [r2, #4]
 8013d48:	f1bb 0f00 	cmp.w	fp, #0
 8013d4c:	d03b      	beq.n	8013dc6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 8013d4e:	f892 900d 	ldrb.w	r9, [r2, #13]
 8013d52:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8013d56:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8013d5a:	f892 900a 	ldrb.w	r9, [r2, #10]
 8013d5e:	f1bb 0f01 	cmp.w	fp, #1
 8013d62:	ea49 0903 	orr.w	r9, r9, r3
 8013d66:	d134      	bne.n	8013dd2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 8013d68:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013d6a:	eba6 0609 	sub.w	r6, r6, r9
 8013d6e:	2b00      	cmp	r3, #0
 8013d70:	d14f      	bne.n	8013e12 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8013d72:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8013d74:	eb09 0306 	add.w	r3, r9, r6
 8013d78:	4413      	add	r3, r2
 8013d7a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8013d7c:	f9b2 2000 	ldrsh.w	r2, [r2]
 8013d80:	4293      	cmp	r3, r2
 8013d82:	da51      	bge.n	8013e28 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8013d84:	e038      	b.n	8013df8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8013d86:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8013d88:	e79a      	b.n	8013cc0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 8013d8a:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8013d8e:	9301      	str	r3, [sp, #4]
 8013d90:	ab1d      	add	r3, sp, #116	; 0x74
 8013d92:	9300      	str	r3, [sp, #0]
 8013d94:	4659      	mov	r1, fp
 8013d96:	ab1c      	add	r3, sp, #112	; 0x70
 8013d98:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8013d9a:	f003 f8ca 	bl	8016f32 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 8013d9e:	4604      	mov	r4, r0
 8013da0:	e7c0      	b.n	8013d24 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 8013da2:	f8d8 0000 	ldr.w	r0, [r8]
 8013da6:	6803      	ldr	r3, [r0, #0]
 8013da8:	691b      	ldr	r3, [r3, #16]
 8013daa:	4798      	blx	r3
 8013dac:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8013db0:	4298      	cmp	r0, r3
 8013db2:	f000 80a7 	beq.w	8013f04 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8013db6:	f242 030b 	movw	r3, #8203	; 0x200b
 8013dba:	4298      	cmp	r0, r3
 8013dbc:	f000 80a2 	beq.w	8013f04 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8013dc0:	f1bb 0f00 	cmp.w	fp, #0
 8013dc4:	d100      	bne.n	8013dc8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 8013dc6:	444e      	add	r6, r9
 8013dc8:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8013dca:	2a00      	cmp	r2, #0
 8013dcc:	d1bf      	bne.n	8013d4e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 8013dce:	4691      	mov	r9, r2
 8013dd0:	e098      	b.n	8013f04 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8013dd2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013dd4:	2b00      	cmp	r3, #0
 8013dd6:	f000 80ac 	beq.w	8013f32 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2be>
 8013dda:	f1bb 0f00 	cmp.w	fp, #0
 8013dde:	d118      	bne.n	8013e12 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8013de0:	f8d8 0000 	ldr.w	r0, [r8]
 8013de4:	990d      	ldr	r1, [sp, #52]	; 0x34
 8013de6:	6803      	ldr	r3, [r0, #0]
 8013de8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8013dea:	4798      	blx	r3
 8013dec:	4406      	add	r6, r0
 8013dee:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8013df0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8013df2:	1af3      	subs	r3, r6, r3
 8013df4:	4293      	cmp	r3, r2
 8013df6:	dd17      	ble.n	8013e28 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8013df8:	2c00      	cmp	r4, #0
 8013dfa:	f000 8098 	beq.w	8013f2e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8013dfe:	2c0a      	cmp	r4, #10
 8013e00:	f040 8086 	bne.w	8013f10 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
 8013e04:	240a      	movs	r4, #10
 8013e06:	fab4 f084 	clz	r0, r4
 8013e0a:	0940      	lsrs	r0, r0, #5
 8013e0c:	b01f      	add	sp, #124	; 0x7c
 8013e0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013e12:	f8d8 0000 	ldr.w	r0, [r8]
 8013e16:	990d      	ldr	r1, [sp, #52]	; 0x34
 8013e18:	6803      	ldr	r3, [r0, #0]
 8013e1a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8013e1c:	4798      	blx	r3
 8013e1e:	f1bb 0f01 	cmp.w	fp, #1
 8013e22:	eba6 0600 	sub.w	r6, r6, r0
 8013e26:	d0a4      	beq.n	8013d72 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 8013e28:	981c      	ldr	r0, [sp, #112]	; 0x70
 8013e2a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8013e2c:	f990 1009 	ldrsb.w	r1, [r0, #9]
 8013e30:	f9b3 7000 	ldrsh.w	r7, [r3]
 8013e34:	7b43      	ldrb	r3, [r0, #13]
 8013e36:	015b      	lsls	r3, r3, #5
 8013e38:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8013e3c:	7983      	ldrb	r3, [r0, #6]
 8013e3e:	4431      	add	r1, r6
 8013e40:	4313      	orrs	r3, r2
 8013e42:	440b      	add	r3, r1
 8013e44:	42bb      	cmp	r3, r7
 8013e46:	db5d      	blt.n	8013f04 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8013e48:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013e4a:	4299      	cmp	r1, r3
 8013e4c:	da5a      	bge.n	8013f04 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8013e4e:	f8d8 0000 	ldr.w	r0, [r8]
 8013e52:	6803      	ldr	r3, [r0, #0]
 8013e54:	42b7      	cmp	r7, r6
 8013e56:	bfc8      	it	gt
 8013e58:	1bbf      	subgt	r7, r7, r6
 8013e5a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013e5c:	bfcc      	ite	gt
 8013e5e:	b2bf      	uxthgt	r7, r7
 8013e60:	2700      	movle	r7, #0
 8013e62:	4798      	blx	r3
 8013e64:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8013e66:	7b5a      	ldrb	r2, [r3, #13]
 8013e68:	00d1      	lsls	r1, r2, #3
 8013e6a:	f401 7580 	and.w	r5, r1, #256	; 0x100
 8013e6e:	7a19      	ldrb	r1, [r3, #8]
 8013e70:	4329      	orrs	r1, r5
 8013e72:	0655      	lsls	r5, r2, #25
 8013e74:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 8013e76:	bf44      	itt	mi
 8013e78:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 8013e7c:	b209      	sxthmi	r1, r1
 8013e7e:	1945      	adds	r5, r0, r5
 8013e80:	1a6d      	subs	r5, r5, r1
 8013e82:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8013e84:	b2ad      	uxth	r5, r5
 8013e86:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 8013e8a:	fa0f fa85 	sxth.w	sl, r5
 8013e8e:	4551      	cmp	r1, sl
 8013e90:	dd3c      	ble.n	8013f0c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 8013e92:	0112      	lsls	r2, r2, #4
 8013e94:	79d8      	ldrb	r0, [r3, #7]
 8013e96:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8013e9a:	4302      	orrs	r2, r0
 8013e9c:	4492      	add	sl, r2
 8013e9e:	4551      	cmp	r1, sl
 8013ea0:	dc30      	bgt.n	8013f04 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8013ea2:	1b4d      	subs	r5, r1, r5
 8013ea4:	b22d      	sxth	r5, r5
 8013ea6:	468a      	mov	sl, r1
 8013ea8:	9319      	str	r3, [sp, #100]	; 0x64
 8013eaa:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8013eac:	f8d8 0000 	ldr.w	r0, [r8]
 8013eb0:	681a      	ldr	r2, [r3, #0]
 8013eb2:	6801      	ldr	r1, [r0, #0]
 8013eb4:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8013eb6:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8013eb8:	9313      	str	r3, [sp, #76]	; 0x4c
 8013eba:	9218      	str	r2, [sp, #96]	; 0x60
 8013ebc:	6c09      	ldr	r1, [r1, #64]	; 0x40
 8013ebe:	4788      	blx	r1
 8013ec0:	f898 1006 	ldrb.w	r1, [r8, #6]
 8013ec4:	910b      	str	r1, [sp, #44]	; 0x2c
 8013ec6:	f898 100e 	ldrb.w	r1, [r8, #14]
 8013eca:	910a      	str	r1, [sp, #40]	; 0x28
 8013ecc:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 8013ed0:	9109      	str	r1, [sp, #36]	; 0x24
 8013ed2:	f8d8 1008 	ldr.w	r1, [r8, #8]
 8013ed6:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8013ed8:	9305      	str	r3, [sp, #20]
 8013eda:	b2ad      	uxth	r5, r5
 8013edc:	e9cd 0107 	strd	r0, r1, [sp, #28]
 8013ee0:	e9cd 7502 	strd	r7, r5, [sp, #8]
 8013ee4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8013ee6:	9304      	str	r3, [sp, #16]
 8013ee8:	4437      	add	r7, r6
 8013eea:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8013eec:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8013eee:	9206      	str	r2, [sp, #24]
 8013ef0:	b23f      	sxth	r7, r7
 8013ef2:	f8cd a004 	str.w	sl, [sp, #4]
 8013ef6:	9700      	str	r7, [sp, #0]
 8013ef8:	681a      	ldr	r2, [r3, #0]
 8013efa:	9916      	ldr	r1, [sp, #88]	; 0x58
 8013efc:	685b      	ldr	r3, [r3, #4]
 8013efe:	9811      	ldr	r0, [sp, #68]	; 0x44
 8013f00:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8013f02:	47a8      	blx	r5
 8013f04:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013f06:	3301      	adds	r3, #1
 8013f08:	930e      	str	r3, [sp, #56]	; 0x38
 8013f0a:	e6e1      	b.n	8013cd0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 8013f0c:	2500      	movs	r5, #0
 8013f0e:	e7cb      	b.n	8013ea8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 8013f10:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8013f12:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8013f14:	3501      	adds	r5, #1
 8013f16:	429d      	cmp	r5, r3
 8013f18:	f6bf af75 	bge.w	8013e06 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8013f1c:	4659      	mov	r1, fp
 8013f1e:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8013f20:	f7f3 fd78 	bl	8007a14 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8013f24:	4604      	mov	r4, r0
 8013f26:	b110      	cbz	r0, 8013f2e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8013f28:	280a      	cmp	r0, #10
 8013f2a:	d1f2      	bne.n	8013f12 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
 8013f2c:	e76a      	b.n	8013e04 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8013f2e:	2400      	movs	r4, #0
 8013f30:	e769      	b.n	8013e06 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8013f32:	f1bb 0f00 	cmp.w	fp, #0
 8013f36:	f43f af5a 	beq.w	8013dee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 8013f3a:	e775      	b.n	8013e28 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

08013f3c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 8013f3c:	b530      	push	{r4, r5, lr}
 8013f3e:	8ac4      	ldrh	r4, [r0, #22]
 8013f40:	8b45      	ldrh	r5, [r0, #26]
 8013f42:	8343      	strh	r3, [r0, #26]
 8013f44:	442c      	add	r4, r5
 8013f46:	1ae4      	subs	r4, r4, r3
 8013f48:	82c4      	strh	r4, [r0, #22]
 8013f4a:	8b83      	ldrh	r3, [r0, #28]
 8013f4c:	8b04      	ldrh	r4, [r0, #24]
 8013f4e:	4422      	add	r2, r4
 8013f50:	440c      	add	r4, r1
 8013f52:	1a59      	subs	r1, r3, r1
 8013f54:	83c2      	strh	r2, [r0, #30]
 8013f56:	8304      	strh	r4, [r0, #24]
 8013f58:	8381      	strh	r1, [r0, #28]
 8013f5a:	bd30      	pop	{r4, r5, pc}

08013f5c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 8013f5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013f60:	4604      	mov	r4, r0
 8013f62:	8a47      	ldrh	r7, [r0, #18]
 8013f64:	68c0      	ldr	r0, [r0, #12]
 8013f66:	6803      	ldr	r3, [r0, #0]
 8013f68:	b085      	sub	sp, #20
 8013f6a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013f6c:	4798      	blx	r3
 8013f6e:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 8013f72:	7a63      	ldrb	r3, [r4, #9]
 8013f74:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 8013f78:	42b7      	cmp	r7, r6
 8013f7a:	f103 33ff 	add.w	r3, r3, #4294967295
 8013f7e:	bfac      	ite	ge
 8013f80:	f04f 0900 	movge.w	r9, #0
 8013f84:	f04f 0901 	movlt.w	r9, #1
 8013f88:	2b05      	cmp	r3, #5
 8013f8a:	d804      	bhi.n	8013f96 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 8013f8c:	e8df f003 	tbb	[pc, r3]
 8013f90:	470e0854 	.word	0x470e0854
 8013f94:	4c4c      	.short	0x4c4c
 8013f96:	2500      	movs	r5, #0
 8013f98:	46a9      	mov	r9, r5
 8013f9a:	462e      	mov	r6, r5
 8013f9c:	462f      	mov	r7, r5
 8013f9e:	e00d      	b.n	8013fbc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8013fa0:	42b7      	cmp	r7, r6
 8013fa2:	bfb4      	ite	lt
 8013fa4:	2600      	movlt	r6, #0
 8013fa6:	2601      	movge	r6, #1
 8013fa8:	2500      	movs	r5, #0
 8013faa:	e7f7      	b.n	8013f9c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8013fac:	42b7      	cmp	r7, r6
 8013fae:	464d      	mov	r5, r9
 8013fb0:	f04f 0900 	mov.w	r9, #0
 8013fb4:	bfb4      	ite	lt
 8013fb6:	2600      	movlt	r6, #0
 8013fb8:	2601      	movge	r6, #1
 8013fba:	464f      	mov	r7, r9
 8013fbc:	f04f 0800 	mov.w	r8, #0
 8013fc0:	f8a4 8016 	strh.w	r8, [r4, #22]
 8013fc4:	f8a4 8018 	strh.w	r8, [r4, #24]
 8013fc8:	f8cd 8004 	str.w	r8, [sp, #4]
 8013fcc:	2300      	movs	r3, #0
 8013fce:	9303      	str	r3, [sp, #12]
 8013fd0:	8823      	ldrh	r3, [r4, #0]
 8013fd2:	2b20      	cmp	r3, #32
 8013fd4:	d034      	beq.n	8014040 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 8013fd6:	f242 010b 	movw	r1, #8203	; 0x200b
 8013fda:	1a5a      	subs	r2, r3, r1
 8013fdc:	f1d2 0a00 	rsbs	sl, r2, #0
 8013fe0:	eb4a 0a02 	adc.w	sl, sl, r2
 8013fe4:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8013fe8:	4293      	cmp	r3, r2
 8013fea:	d009      	beq.n	8014000 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8013fec:	428b      	cmp	r3, r1
 8013fee:	9a01      	ldr	r2, [sp, #4]
 8013ff0:	bf18      	it	ne
 8013ff2:	461a      	movne	r2, r3
 8013ff4:	9201      	str	r2, [sp, #4]
 8013ff6:	bf0c      	ite	eq
 8013ff8:	f04f 0a01 	moveq.w	sl, #1
 8013ffc:	f04f 0a00 	movne.w	sl, #0
 8014000:	ab03      	add	r3, sp, #12
 8014002:	68e2      	ldr	r2, [r4, #12]
 8014004:	7a21      	ldrb	r1, [r4, #8]
 8014006:	6860      	ldr	r0, [r4, #4]
 8014008:	f002 ff4a 	bl	8016ea0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801400c:	8020      	strh	r0, [r4, #0]
 801400e:	b9d8      	cbnz	r0, 8014048 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 8014010:	8ba2      	ldrh	r2, [r4, #28]
 8014012:	2300      	movs	r3, #0
 8014014:	4611      	mov	r1, r2
 8014016:	4620      	mov	r0, r4
 8014018:	f7ff ff90 	bl	8013f3c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 801401c:	e06e      	b.n	80140fc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 801401e:	2500      	movs	r5, #0
 8014020:	46a9      	mov	r9, r5
 8014022:	462e      	mov	r6, r5
 8014024:	2701      	movs	r7, #1
 8014026:	e7c9      	b.n	8013fbc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8014028:	42b7      	cmp	r7, r6
 801402a:	f04f 0500 	mov.w	r5, #0
 801402e:	bfb4      	ite	lt
 8014030:	2700      	movlt	r7, #0
 8014032:	2701      	movge	r7, #1
 8014034:	462e      	mov	r6, r5
 8014036:	e7c1      	b.n	8013fbc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8014038:	2500      	movs	r5, #0
 801403a:	46a9      	mov	r9, r5
 801403c:	2601      	movs	r6, #1
 801403e:	e7ad      	b.n	8013f9c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8014040:	9301      	str	r3, [sp, #4]
 8014042:	f04f 0a01 	mov.w	sl, #1
 8014046:	e7db      	b.n	8014000 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8014048:	8b63      	ldrh	r3, [r4, #26]
 801404a:	280a      	cmp	r0, #10
 801404c:	f103 0301 	add.w	r3, r3, #1
 8014050:	8363      	strh	r3, [r4, #26]
 8014052:	d0dd      	beq.n	8014010 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 8014054:	9a03      	ldr	r2, [sp, #12]
 8014056:	bb62      	cbnz	r2, 80140b2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 8014058:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801405c:	4298      	cmp	r0, r3
 801405e:	d003      	beq.n	8014068 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8014060:	f242 030b 	movw	r3, #8203	; 0x200b
 8014064:	4298      	cmp	r0, r3
 8014066:	d1b1      	bne.n	8013fcc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014068:	8823      	ldrh	r3, [r4, #0]
 801406a:	8ba1      	ldrh	r1, [r4, #28]
 801406c:	2b20      	cmp	r3, #32
 801406e:	d003      	beq.n	8014078 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 8014070:	f242 000b 	movw	r0, #8203	; 0x200b
 8014074:	4283      	cmp	r3, r0
 8014076:	d131      	bne.n	80140dc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 8014078:	f1ba 0f00 	cmp.w	sl, #0
 801407c:	bf0a      	itet	eq
 801407e:	4688      	moveq	r8, r1
 8014080:	4650      	movne	r0, sl
 8014082:	2001      	moveq	r0, #1
 8014084:	440a      	add	r2, r1
 8014086:	8b23      	ldrh	r3, [r4, #24]
 8014088:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 801408c:	b292      	uxth	r2, r2
 801408e:	83a2      	strh	r2, [r4, #28]
 8014090:	4413      	add	r3, r2
 8014092:	f1b9 0f00 	cmp.w	r9, #0
 8014096:	d102      	bne.n	801409e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 8014098:	2d00      	cmp	r5, #0
 801409a:	d042      	beq.n	8014122 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 801409c:	b300      	cbz	r0, 80140e0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 801409e:	8c21      	ldrh	r1, [r4, #32]
 80140a0:	4419      	add	r1, r3
 80140a2:	458c      	cmp	ip, r1
 80140a4:	da37      	bge.n	8014116 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 80140a6:	8ae1      	ldrh	r1, [r4, #22]
 80140a8:	2900      	cmp	r1, #0
 80140aa:	d034      	beq.n	8014116 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 80140ac:	4563      	cmp	r3, ip
 80140ae:	dd8d      	ble.n	8013fcc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80140b0:	e01d      	b.n	80140ee <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 80140b2:	8893      	ldrh	r3, [r2, #4]
 80140b4:	8023      	strh	r3, [r4, #0]
 80140b6:	f892 b00d 	ldrb.w	fp, [r2, #13]
 80140ba:	9901      	ldr	r1, [sp, #4]
 80140bc:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 80140c0:	f40b 7080 	and.w	r0, fp, #256	; 0x100
 80140c4:	f892 b00a 	ldrb.w	fp, [r2, #10]
 80140c8:	ea4b 0b00 	orr.w	fp, fp, r0
 80140cc:	68e0      	ldr	r0, [r4, #12]
 80140ce:	6803      	ldr	r3, [r0, #0]
 80140d0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80140d2:	4798      	blx	r3
 80140d4:	eb0b 0200 	add.w	r2, fp, r0
 80140d8:	b292      	uxth	r2, r2
 80140da:	e7c5      	b.n	8014068 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 80140dc:	2000      	movs	r0, #0
 80140de:	e7d1      	b.n	8014084 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 80140e0:	4563      	cmp	r3, ip
 80140e2:	f77f af73 	ble.w	8013fcc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80140e6:	8ae3      	ldrh	r3, [r4, #22]
 80140e8:	2b00      	cmp	r3, #0
 80140ea:	f43f af6f 	beq.w	8013fcc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80140ee:	2301      	movs	r3, #1
 80140f0:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 80140f4:	8c22      	ldrh	r2, [r4, #32]
 80140f6:	8be3      	ldrh	r3, [r4, #30]
 80140f8:	4413      	add	r3, r2
 80140fa:	83e3      	strh	r3, [r4, #30]
 80140fc:	68e0      	ldr	r0, [r4, #12]
 80140fe:	6803      	ldr	r3, [r0, #0]
 8014100:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014102:	4798      	blx	r3
 8014104:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 8014108:	4418      	add	r0, r3
 801410a:	8a63      	ldrh	r3, [r4, #18]
 801410c:	1a18      	subs	r0, r3, r0
 801410e:	8260      	strh	r0, [r4, #18]
 8014110:	b005      	add	sp, #20
 8014112:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014116:	2300      	movs	r3, #0
 8014118:	4611      	mov	r1, r2
 801411a:	4620      	mov	r0, r4
 801411c:	f7ff ff0e 	bl	8013f3c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8014120:	e754      	b.n	8013fcc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014122:	4563      	cmp	r3, ip
 8014124:	dd14      	ble.n	8014150 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 8014126:	b117      	cbz	r7, 801412e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 8014128:	2301      	movs	r3, #1
 801412a:	460a      	mov	r2, r1
 801412c:	e772      	b.n	8014014 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 801412e:	2e00      	cmp	r6, #0
 8014130:	f43f af4c 	beq.w	8013fcc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014134:	2800      	cmp	r0, #0
 8014136:	f47f af49 	bne.w	8013fcc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801413a:	f1ba 0f00 	cmp.w	sl, #0
 801413e:	d002      	beq.n	8014146 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 8014140:	2301      	movs	r3, #1
 8014142:	4642      	mov	r2, r8
 8014144:	e767      	b.n	8014016 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 8014146:	8ae3      	ldrh	r3, [r4, #22]
 8014148:	2b00      	cmp	r3, #0
 801414a:	f43f af3f 	beq.w	8013fcc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801414e:	e7d5      	b.n	80140fc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8014150:	2800      	cmp	r0, #0
 8014152:	f47f af3b 	bne.w	8013fcc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014156:	f1ba 0f00 	cmp.w	sl, #0
 801415a:	f43f af37 	beq.w	8013fcc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801415e:	2301      	movs	r3, #1
 8014160:	4642      	mov	r2, r8
 8014162:	e7da      	b.n	801411a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

08014164 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 8014164:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014166:	4605      	mov	r5, r0
 8014168:	b08f      	sub	sp, #60	; 0x3c
 801416a:	4617      	mov	r7, r2
 801416c:	461c      	mov	r4, r3
 801416e:	460e      	mov	r6, r1
 8014170:	b1d1      	cbz	r1, 80141a8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 8014172:	681b      	ldr	r3, [r3, #0]
 8014174:	4620      	mov	r0, r4
 8014176:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014178:	4798      	blx	r3
 801417a:	4240      	negs	r0, r0
 801417c:	b200      	sxth	r0, r0
 801417e:	e9cd 4001 	strd	r4, r0, [sp, #4]
 8014182:	9603      	str	r6, [sp, #12]
 8014184:	9700      	str	r7, [sp, #0]
 8014186:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801418a:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 801418e:	4629      	mov	r1, r5
 8014190:	a805      	add	r0, sp, #20
 8014192:	f7ff fcbf 	bl	8013b14 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8014196:	2401      	movs	r4, #1
 8014198:	a805      	add	r0, sp, #20
 801419a:	f7ff fedf 	bl	8013f5c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 801419e:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 80141a2:	b163      	cbz	r3, 80141be <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 80141a4:	3401      	adds	r4, #1
 80141a6:	e7f7      	b.n	8014198 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 80141a8:	f002 ff48 	bl	801703c <_ZN8touchgfx12TextProvider11getNextCharEv>
 80141ac:	2401      	movs	r4, #1
 80141ae:	280a      	cmp	r0, #10
 80141b0:	4628      	mov	r0, r5
 80141b2:	bf08      	it	eq
 80141b4:	3401      	addeq	r4, #1
 80141b6:	f002 ff41 	bl	801703c <_ZN8touchgfx12TextProvider11getNextCharEv>
 80141ba:	2800      	cmp	r0, #0
 80141bc:	d1f7      	bne.n	80141ae <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 80141be:	b2a0      	uxth	r0, r4
 80141c0:	b00f      	add	sp, #60	; 0x3c
 80141c2:	bdf0      	pop	{r4, r5, r6, r7, pc}

080141c4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 80141c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80141c8:	b0e3      	sub	sp, #396	; 0x18c
 80141ca:	461c      	mov	r4, r3
 80141cc:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
 80141ce:	4683      	mov	fp, r0
 80141d0:	4688      	mov	r8, r1
 80141d2:	2b00      	cmp	r3, #0
 80141d4:	f000 8112 	beq.w	80143fc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80141d8:	6823      	ldr	r3, [r4, #0]
 80141da:	2b00      	cmp	r3, #0
 80141dc:	f000 810e 	beq.w	80143fc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80141e0:	7ba3      	ldrb	r3, [r4, #14]
 80141e2:	2b00      	cmp	r3, #0
 80141e4:	f000 810a 	beq.w	80143fc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80141e8:	6810      	ldr	r0, [r2, #0]
 80141ea:	6851      	ldr	r1, [r2, #4]
 80141ec:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 80141f0:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 80141f4:	ad0a      	add	r5, sp, #40	; 0x28
 80141f6:	462b      	mov	r3, r5
 80141f8:	c303      	stmia	r3!, {r0, r1}
 80141fa:	2100      	movs	r1, #0
 80141fc:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 8014200:	910c      	str	r1, [sp, #48]	; 0x30
 8014202:	79a2      	ldrb	r2, [r4, #6]
 8014204:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8014208:	a90c      	add	r1, sp, #48	; 0x30
 801420a:	4628      	mov	r0, r5
 801420c:	f7ff fd01 	bl	8013c12 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8014210:	a90c      	add	r1, sp, #48	; 0x30
 8014212:	4608      	mov	r0, r1
 8014214:	79a2      	ldrb	r2, [r4, #6]
 8014216:	f7ff fcfc 	bl	8013c12 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 801421a:	a817      	add	r0, sp, #92	; 0x5c
 801421c:	f002 fae2 	bl	80167e4 <_ZN8touchgfx12TextProviderC1Ev>
 8014220:	6820      	ldr	r0, [r4, #0]
 8014222:	6803      	ldr	r3, [r0, #0]
 8014224:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8014226:	4798      	blx	r3
 8014228:	4606      	mov	r6, r0
 801422a:	6820      	ldr	r0, [r4, #0]
 801422c:	6803      	ldr	r3, [r0, #0]
 801422e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8014230:	4798      	blx	r3
 8014232:	4633      	mov	r3, r6
 8014234:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 8014236:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 8014238:	9000      	str	r0, [sp, #0]
 801423a:	a817      	add	r0, sp, #92	; 0x5c
 801423c:	f002 fb2d 	bl	801689a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8014240:	6820      	ldr	r0, [r4, #0]
 8014242:	f894 a004 	ldrb.w	sl, [r4, #4]
 8014246:	6803      	ldr	r3, [r0, #0]
 8014248:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801424a:	4798      	blx	r3
 801424c:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 8014250:	6823      	ldr	r3, [r4, #0]
 8014252:	4607      	mov	r7, r0
 8014254:	4406      	add	r6, r0
 8014256:	a830      	add	r0, sp, #192	; 0xc0
 8014258:	f893 9009 	ldrb.w	r9, [r3, #9]
 801425c:	f002 fac2 	bl	80167e4 <_ZN8touchgfx12TextProviderC1Ev>
 8014260:	7c23      	ldrb	r3, [r4, #16]
 8014262:	b17b      	cbz	r3, 8014284 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 8014264:	6820      	ldr	r0, [r4, #0]
 8014266:	6803      	ldr	r3, [r0, #0]
 8014268:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801426a:	4798      	blx	r3
 801426c:	9009      	str	r0, [sp, #36]	; 0x24
 801426e:	6820      	ldr	r0, [r4, #0]
 8014270:	6802      	ldr	r2, [r0, #0]
 8014272:	6d12      	ldr	r2, [r2, #80]	; 0x50
 8014274:	4790      	blx	r2
 8014276:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014278:	9000      	str	r0, [sp, #0]
 801427a:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 801427c:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 801427e:	a830      	add	r0, sp, #192	; 0xc0
 8014280:	f002 fb0b 	bl	801689a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8014284:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8014288:	7be2      	ldrb	r2, [r4, #15]
 801428a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 801428e:	1a8a      	subs	r2, r1, r2
 8014290:	7c21      	ldrb	r1, [r4, #16]
 8014292:	9103      	str	r1, [sp, #12]
 8014294:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8014298:	9102      	str	r1, [sp, #8]
 801429a:	6821      	ldr	r1, [r4, #0]
 801429c:	9101      	str	r1, [sp, #4]
 801429e:	7961      	ldrb	r1, [r4, #5]
 80142a0:	9100      	str	r1, [sp, #0]
 80142a2:	b292      	uxth	r2, r2
 80142a4:	a930      	add	r1, sp, #192	; 0xc0
 80142a6:	a80e      	add	r0, sp, #56	; 0x38
 80142a8:	f7ff fc34 	bl	8013b14 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 80142ac:	2e00      	cmp	r6, #0
 80142ae:	dc5b      	bgt.n	8014368 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 80142b0:	af17      	add	r7, sp, #92	; 0x5c
 80142b2:	f04f 0900 	mov.w	r9, #0
 80142b6:	7c23      	ldrb	r3, [r4, #16]
 80142b8:	2b00      	cmp	r3, #0
 80142ba:	f000 80b1 	beq.w	8014420 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 80142be:	a80e      	add	r0, sp, #56	; 0x38
 80142c0:	f7ff fe4c 	bl	8013f5c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80142c4:	f1ba 0f00 	cmp.w	sl, #0
 80142c8:	f000 80a5 	beq.w	8014416 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 80142cc:	7c23      	ldrb	r3, [r4, #16]
 80142ce:	9309      	str	r3, [sp, #36]	; 0x24
 80142d0:	2264      	movs	r2, #100	; 0x64
 80142d2:	4639      	mov	r1, r7
 80142d4:	a849      	add	r0, sp, #292	; 0x124
 80142d6:	f014 fa6e 	bl	80287b6 <memcpy>
 80142da:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80142dc:	2b00      	cmp	r3, #0
 80142de:	f000 80a7 	beq.w	8014430 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 80142e2:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 80142e6:	7922      	ldrb	r2, [r4, #4]
 80142e8:	2a01      	cmp	r2, #1
 80142ea:	f040 808a 	bne.w	8014402 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 80142ee:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
 80142f2:	1ac0      	subs	r0, r0, r3
 80142f4:	2302      	movs	r3, #2
 80142f6:	fb90 f0f3 	sdiv	r0, r0, r3
 80142fa:	b200      	sxth	r0, r0
 80142fc:	7c23      	ldrb	r3, [r4, #16]
 80142fe:	2b00      	cmp	r3, #0
 8014300:	f000 808b 	beq.w	801441a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8014304:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
 8014308:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
 801430c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8014310:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8014314:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 8014318:	4410      	add	r0, r2
 801431a:	b200      	sxth	r0, r0
 801431c:	9000      	str	r0, [sp, #0]
 801431e:	e9cd 9703 	strd	r9, r7, [sp, #12]
 8014322:	e9cd 5401 	strd	r5, r4, [sp, #4]
 8014326:	4642      	mov	r2, r8
 8014328:	2100      	movs	r1, #0
 801432a:	4658      	mov	r0, fp
 801432c:	f7ff fca2 	bl	8013c74 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 8014330:	2800      	cmp	r0, #0
 8014332:	d163      	bne.n	80143fc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014334:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8014338:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 801433c:	b2b2      	uxth	r2, r6
 801433e:	4413      	add	r3, r2
 8014340:	1a8a      	subs	r2, r1, r2
 8014342:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
 8014346:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
 801434a:	b21b      	sxth	r3, r3
 801434c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8014350:	2a00      	cmp	r2, #0
 8014352:	d153      	bne.n	80143fc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014354:	6822      	ldr	r2, [r4, #0]
 8014356:	8869      	ldrh	r1, [r5, #2]
 8014358:	7a12      	ldrb	r2, [r2, #8]
 801435a:	1a9b      	subs	r3, r3, r2
 801435c:	88ea      	ldrh	r2, [r5, #6]
 801435e:	440a      	add	r2, r1
 8014360:	b212      	sxth	r2, r2
 8014362:	4293      	cmp	r3, r2
 8014364:	dda7      	ble.n	80142b6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 8014366:	e049      	b.n	80143fc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014368:	7c23      	ldrb	r3, [r4, #16]
 801436a:	444f      	add	r7, r9
 801436c:	b1c3      	cbz	r3, 80143a0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 801436e:	f64f 79ff 	movw	r9, #65535	; 0xffff
 8014372:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8014376:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801437a:	443b      	add	r3, r7
 801437c:	4293      	cmp	r3, r2
 801437e:	da97      	bge.n	80142b0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8014380:	a80e      	add	r0, sp, #56	; 0x38
 8014382:	f7ff fdeb 	bl	8013f5c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8014386:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
 801438a:	3b01      	subs	r3, #1
 801438c:	b29b      	uxth	r3, r3
 801438e:	454b      	cmp	r3, r9
 8014390:	9309      	str	r3, [sp, #36]	; 0x24
 8014392:	d021      	beq.n	80143d8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 8014394:	7961      	ldrb	r1, [r4, #5]
 8014396:	a817      	add	r0, sp, #92	; 0x5c
 8014398:	f7f3 fb3c 	bl	8007a14 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801439c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801439e:	e7f4      	b.n	801438a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 80143a0:	fa1f f986 	uxth.w	r9, r6
 80143a4:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80143a8:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80143ac:	443b      	add	r3, r7
 80143ae:	4293      	cmp	r3, r2
 80143b0:	f6bf af7e 	bge.w	80142b0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 80143b4:	a817      	add	r0, sp, #92	; 0x5c
 80143b6:	f002 fe41 	bl	801703c <_ZN8touchgfx12TextProvider11getNextCharEv>
 80143ba:	b1f8      	cbz	r0, 80143fc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80143bc:	280a      	cmp	r0, #10
 80143be:	d1f1      	bne.n	80143a4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 80143c0:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 80143c4:	444b      	add	r3, r9
 80143c6:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80143ca:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 80143ce:	eba3 0309 	sub.w	r3, r3, r9
 80143d2:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80143d6:	e7e5      	b.n	80143a4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 80143d8:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 80143dc:	b2b3      	uxth	r3, r6
 80143de:	441a      	add	r2, r3
 80143e0:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 80143e4:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
 80143e8:	1ad3      	subs	r3, r2, r3
 80143ea:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80143ee:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80143f2:	b11b      	cbz	r3, 80143fc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80143f4:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
 80143f8:	2b00      	cmp	r3, #0
 80143fa:	d0ba      	beq.n	8014372 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 80143fc:	b063      	add	sp, #396	; 0x18c
 80143fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014402:	2a02      	cmp	r2, #2
 8014404:	d105      	bne.n	8014412 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 8014406:	7be2      	ldrb	r2, [r4, #15]
 8014408:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 801440c:	1a80      	subs	r0, r0, r2
 801440e:	1ac0      	subs	r0, r0, r3
 8014410:	e773      	b.n	80142fa <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 8014412:	2000      	movs	r0, #0
 8014414:	e772      	b.n	80142fc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8014416:	7be0      	ldrb	r0, [r4, #15]
 8014418:	e770      	b.n	80142fc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 801441a:	f647 72ff 	movw	r2, #32767	; 0x7fff
 801441e:	e773      	b.n	8014308 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 8014420:	f1ba 0f00 	cmp.w	sl, #0
 8014424:	d0f7      	beq.n	8014416 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8014426:	2264      	movs	r2, #100	; 0x64
 8014428:	4639      	mov	r1, r7
 801442a:	a849      	add	r0, sp, #292	; 0x124
 801442c:	f014 f9c3 	bl	80287b6 <memcpy>
 8014430:	2300      	movs	r3, #0
 8014432:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8014436:	6821      	ldr	r1, [r4, #0]
 8014438:	a849      	add	r0, sp, #292	; 0x124
 801443a:	f7ff fbae 	bl	8013b9a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 801443e:	b203      	sxth	r3, r0
 8014440:	e751      	b.n	80142e6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

08014442 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 8014442:	2b03      	cmp	r3, #3
 8014444:	d818      	bhi.n	8014478 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 8014446:	e8df f003 	tbb	[pc, r3]
 801444a:	0602      	.short	0x0602
 801444c:	130d      	.short	0x130d
 801444e:	f9b0 2000 	ldrsh.w	r2, [r0]
 8014452:	1850      	adds	r0, r2, r1
 8014454:	4770      	bx	lr
 8014456:	8803      	ldrh	r3, [r0, #0]
 8014458:	8880      	ldrh	r0, [r0, #4]
 801445a:	4418      	add	r0, r3
 801445c:	b200      	sxth	r0, r0
 801445e:	1a80      	subs	r0, r0, r2
 8014460:	3801      	subs	r0, #1
 8014462:	4770      	bx	lr
 8014464:	8803      	ldrh	r3, [r0, #0]
 8014466:	8880      	ldrh	r0, [r0, #4]
 8014468:	4418      	add	r0, r3
 801446a:	b200      	sxth	r0, r0
 801446c:	1a40      	subs	r0, r0, r1
 801446e:	e7f7      	b.n	8014460 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8014470:	f9b0 0000 	ldrsh.w	r0, [r0]
 8014474:	4410      	add	r0, r2
 8014476:	4770      	bx	lr
 8014478:	2000      	movs	r0, #0
 801447a:	4770      	bx	lr

0801447c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 801447c:	2b03      	cmp	r3, #3
 801447e:	d817      	bhi.n	80144b0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8014480:	e8df f003 	tbb	[pc, r3]
 8014484:	10090602 	.word	0x10090602
 8014488:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 801448c:	1850      	adds	r0, r2, r1
 801448e:	4770      	bx	lr
 8014490:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8014494:	e7fa      	b.n	801448c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 8014496:	8843      	ldrh	r3, [r0, #2]
 8014498:	88c0      	ldrh	r0, [r0, #6]
 801449a:	4418      	add	r0, r3
 801449c:	b200      	sxth	r0, r0
 801449e:	1a80      	subs	r0, r0, r2
 80144a0:	3801      	subs	r0, #1
 80144a2:	4770      	bx	lr
 80144a4:	8843      	ldrh	r3, [r0, #2]
 80144a6:	88c0      	ldrh	r0, [r0, #6]
 80144a8:	4418      	add	r0, r3
 80144aa:	b200      	sxth	r0, r0
 80144ac:	1a40      	subs	r0, r0, r1
 80144ae:	e7f7      	b.n	80144a0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 80144b0:	2000      	movs	r0, #0
 80144b2:	4770      	bx	lr

080144b4 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 80144b4:	4b01      	ldr	r3, [pc, #4]	; (80144bc <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 80144b6:	2200      	movs	r2, #0
 80144b8:	601a      	str	r2, [r3, #0]
 80144ba:	4770      	bx	lr
 80144bc:	200137cc 	.word	0x200137cc

080144c0 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 80144c0:	4603      	mov	r3, r0
 80144c2:	b1c8      	cbz	r0, 80144f8 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 80144c4:	0c02      	lsrs	r2, r0, #16
 80144c6:	0412      	lsls	r2, r2, #16
 80144c8:	b9a2      	cbnz	r2, 80144f4 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 80144ca:	0403      	lsls	r3, r0, #16
 80144cc:	2010      	movs	r0, #16
 80144ce:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 80144d2:	bf04      	itt	eq
 80144d4:	021b      	lsleq	r3, r3, #8
 80144d6:	3008      	addeq	r0, #8
 80144d8:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 80144dc:	bf04      	itt	eq
 80144de:	011b      	lsleq	r3, r3, #4
 80144e0:	3004      	addeq	r0, #4
 80144e2:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 80144e6:	bf04      	itt	eq
 80144e8:	009b      	lsleq	r3, r3, #2
 80144ea:	3002      	addeq	r0, #2
 80144ec:	2b00      	cmp	r3, #0
 80144ee:	db04      	blt.n	80144fa <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 80144f0:	3001      	adds	r0, #1
 80144f2:	4770      	bx	lr
 80144f4:	2000      	movs	r0, #0
 80144f6:	e7ea      	b.n	80144ce <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 80144f8:	2020      	movs	r0, #32
 80144fa:	4770      	bx	lr

080144fc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 80144fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014500:	b087      	sub	sp, #28
 8014502:	460d      	mov	r5, r1
 8014504:	4616      	mov	r6, r2
 8014506:	4698      	mov	r8, r3
 8014508:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 801450c:	4601      	mov	r1, r0
 801450e:	b120      	cbz	r0, 801451a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8014510:	b11a      	cbz	r2, 801451a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8014512:	2d1f      	cmp	r5, #31
 8014514:	d801      	bhi.n	801451a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8014516:	2b1f      	cmp	r3, #31
 8014518:	d904      	bls.n	8014524 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 801451a:	2000      	movs	r0, #0
 801451c:	6038      	str	r0, [r7, #0]
 801451e:	b007      	add	sp, #28
 8014520:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014524:	b97d      	cbnz	r5, 8014546 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 8014526:	b143      	cbz	r3, 801453a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 8014528:	4602      	mov	r2, r0
 801452a:	e9cd 4700 	strd	r4, r7, [sp]
 801452e:	462b      	mov	r3, r5
 8014530:	4641      	mov	r1, r8
 8014532:	4630      	mov	r0, r6
 8014534:	f7ff ffe2 	bl	80144fc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8014538:	e7f1      	b.n	801451e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801453a:	f04f 33ff 	mov.w	r3, #4294967295
 801453e:	603b      	str	r3, [r7, #0]
 8014540:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8014544:	e7eb      	b.n	801451e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8014546:	fa32 fa05 	lsrs.w	sl, r2, r5
 801454a:	d106      	bne.n	801455a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 801454c:	4346      	muls	r6, r0
 801454e:	fbb6 f0f4 	udiv	r0, r6, r4
 8014552:	fb04 6610 	mls	r6, r4, r0, r6
 8014556:	603e      	str	r6, [r7, #0]
 8014558:	e7e1      	b.n	801451e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801455a:	2201      	movs	r2, #1
 801455c:	40aa      	lsls	r2, r5
 801455e:	3a01      	subs	r2, #1
 8014560:	4016      	ands	r6, r2
 8014562:	fa00 fb05 	lsl.w	fp, r0, r5
 8014566:	4630      	mov	r0, r6
 8014568:	fbbb f9f4 	udiv	r9, fp, r4
 801456c:	fb0a f309 	mul.w	r3, sl, r9
 8014570:	9303      	str	r3, [sp, #12]
 8014572:	f7ff ffa5 	bl	80144c0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8014576:	462b      	mov	r3, r5
 8014578:	460a      	mov	r2, r1
 801457a:	e9cd 4700 	strd	r4, r7, [sp]
 801457e:	4601      	mov	r1, r0
 8014580:	4630      	mov	r0, r6
 8014582:	f7ff ffbb 	bl	80144fc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8014586:	fb04 b919 	mls	r9, r4, r9, fp
 801458a:	4606      	mov	r6, r0
 801458c:	4648      	mov	r0, r9
 801458e:	eb05 0108 	add.w	r1, r5, r8
 8014592:	f7ff ff95 	bl	80144c0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8014596:	ab05      	add	r3, sp, #20
 8014598:	e9cd 4300 	strd	r4, r3, [sp]
 801459c:	464a      	mov	r2, r9
 801459e:	4603      	mov	r3, r0
 80145a0:	4650      	mov	r0, sl
 80145a2:	f7ff ffab 	bl	80144fc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80145a6:	6839      	ldr	r1, [r7, #0]
 80145a8:	9a05      	ldr	r2, [sp, #20]
 80145aa:	9b03      	ldr	r3, [sp, #12]
 80145ac:	4411      	add	r1, r2
 80145ae:	fbb1 f2f4 	udiv	r2, r1, r4
 80145b2:	18d3      	adds	r3, r2, r3
 80145b4:	441e      	add	r6, r3
 80145b6:	fb04 1412 	mls	r4, r4, r2, r1
 80145ba:	4430      	add	r0, r6
 80145bc:	603c      	str	r4, [r7, #0]
 80145be:	e7ae      	b.n	801451e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

080145c0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 80145c0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80145c4:	b085      	sub	sp, #20
 80145c6:	f1b0 0900 	subs.w	r9, r0, #0
 80145ca:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80145cc:	461d      	mov	r5, r3
 80145ce:	bfbf      	itttt	lt
 80145d0:	6823      	ldrlt	r3, [r4, #0]
 80145d2:	425b      	neglt	r3, r3
 80145d4:	f1c9 0900 	rsblt	r9, r9, #0
 80145d8:	6023      	strlt	r3, [r4, #0]
 80145da:	bfb4      	ite	lt
 80145dc:	f04f 36ff 	movlt.w	r6, #4294967295
 80145e0:	2601      	movge	r6, #1
 80145e2:	2a00      	cmp	r2, #0
 80145e4:	4617      	mov	r7, r2
 80145e6:	da04      	bge.n	80145f2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 80145e8:	6823      	ldr	r3, [r4, #0]
 80145ea:	425b      	negs	r3, r3
 80145ec:	4257      	negs	r7, r2
 80145ee:	4276      	negs	r6, r6
 80145f0:	6023      	str	r3, [r4, #0]
 80145f2:	2d00      	cmp	r5, #0
 80145f4:	4638      	mov	r0, r7
 80145f6:	bfba      	itte	lt
 80145f8:	426d      	neglt	r5, r5
 80145fa:	f04f 38ff 	movlt.w	r8, #4294967295
 80145fe:	f04f 0801 	movge.w	r8, #1
 8014602:	f7ff ff5d 	bl	80144c0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8014606:	ab03      	add	r3, sp, #12
 8014608:	e9cd 5300 	strd	r5, r3, [sp]
 801460c:	463a      	mov	r2, r7
 801460e:	4603      	mov	r3, r0
 8014610:	4648      	mov	r0, r9
 8014612:	f7ff ff73 	bl	80144fc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8014616:	6823      	ldr	r3, [r4, #0]
 8014618:	9a03      	ldr	r2, [sp, #12]
 801461a:	4546      	cmp	r6, r8
 801461c:	441a      	add	r2, r3
 801461e:	fb92 f3f5 	sdiv	r3, r2, r5
 8014622:	4418      	add	r0, r3
 8014624:	bf18      	it	ne
 8014626:	4240      	negne	r0, r0
 8014628:	fb05 2313 	mls	r3, r5, r3, r2
 801462c:	1c72      	adds	r2, r6, #1
 801462e:	6023      	str	r3, [r4, #0]
 8014630:	d105      	bne.n	801463e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 8014632:	2b00      	cmp	r3, #0
 8014634:	f1c3 0200 	rsb	r2, r3, #0
 8014638:	db0b      	blt.n	8014652 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 801463a:	6022      	str	r2, [r4, #0]
 801463c:	e006      	b.n	801464c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 801463e:	2e01      	cmp	r6, #1
 8014640:	d104      	bne.n	801464c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8014642:	2b00      	cmp	r3, #0
 8014644:	da02      	bge.n	801464c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8014646:	442b      	add	r3, r5
 8014648:	3801      	subs	r0, #1
 801464a:	6023      	str	r3, [r4, #0]
 801464c:	b005      	add	sp, #20
 801464e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8014652:	3801      	subs	r0, #1
 8014654:	1b52      	subs	r2, r2, r5
 8014656:	e7f0      	b.n	801463a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

08014658 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8014658:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801465c:	4c1c      	ldr	r4, [pc, #112]	; (80146d0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 801465e:	6807      	ldr	r7, [r0, #0]
 8014660:	69a3      	ldr	r3, [r4, #24]
 8014662:	4605      	mov	r5, r0
 8014664:	b92b      	cbnz	r3, 8014672 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 8014666:	6840      	ldr	r0, [r0, #4]
 8014668:	e9c5 7000 	strd	r7, r0, [r5]
 801466c:	b004      	add	sp, #16
 801466e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014672:	68a2      	ldr	r2, [r4, #8]
 8014674:	6820      	ldr	r0, [r4, #0]
 8014676:	ae04      	add	r6, sp, #16
 8014678:	f04f 0802 	mov.w	r8, #2
 801467c:	fb93 f1f8 	sdiv	r1, r3, r8
 8014680:	440a      	add	r2, r1
 8014682:	f846 2d04 	str.w	r2, [r6, #-4]!
 8014686:	69e1      	ldr	r1, [r4, #28]
 8014688:	9600      	str	r6, [sp, #0]
 801468a:	463a      	mov	r2, r7
 801468c:	f7ff ff98 	bl	80145c0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8014690:	69a3      	ldr	r3, [r4, #24]
 8014692:	686a      	ldr	r2, [r5, #4]
 8014694:	6a21      	ldr	r1, [r4, #32]
 8014696:	9600      	str	r6, [sp, #0]
 8014698:	4607      	mov	r7, r0
 801469a:	6860      	ldr	r0, [r4, #4]
 801469c:	f7ff ff90 	bl	80145c0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80146a0:	6962      	ldr	r2, [r4, #20]
 80146a2:	69a3      	ldr	r3, [r4, #24]
 80146a4:	fb93 f8f8 	sdiv	r8, r3, r8
 80146a8:	4442      	add	r2, r8
 80146aa:	9203      	str	r2, [sp, #12]
 80146ac:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80146ae:	682a      	ldr	r2, [r5, #0]
 80146b0:	9600      	str	r6, [sp, #0]
 80146b2:	4407      	add	r7, r0
 80146b4:	68e0      	ldr	r0, [r4, #12]
 80146b6:	f7ff ff83 	bl	80145c0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80146ba:	9600      	str	r6, [sp, #0]
 80146bc:	4680      	mov	r8, r0
 80146be:	69a3      	ldr	r3, [r4, #24]
 80146c0:	686a      	ldr	r2, [r5, #4]
 80146c2:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 80146c4:	6920      	ldr	r0, [r4, #16]
 80146c6:	f7ff ff7b 	bl	80145c0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80146ca:	4440      	add	r0, r8
 80146cc:	e7cc      	b.n	8014668 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 80146ce:	bf00      	nop
 80146d0:	200137d0 	.word	0x200137d0

080146d4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 80146d4:	4b07      	ldr	r3, [pc, #28]	; (80146f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 80146d6:	781b      	ldrb	r3, [r3, #0]
 80146d8:	2b01      	cmp	r3, #1
 80146da:	d109      	bne.n	80146f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 80146dc:	f9b1 3000 	ldrsh.w	r3, [r1]
 80146e0:	f9b0 2000 	ldrsh.w	r2, [r0]
 80146e4:	8003      	strh	r3, [r0, #0]
 80146e6:	4b04      	ldr	r3, [pc, #16]	; (80146f8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 80146e8:	881b      	ldrh	r3, [r3, #0]
 80146ea:	3b01      	subs	r3, #1
 80146ec:	1a9b      	subs	r3, r3, r2
 80146ee:	800b      	strh	r3, [r1, #0]
 80146f0:	4770      	bx	lr
 80146f2:	bf00      	nop
 80146f4:	200137b4 	.word	0x200137b4
 80146f8:	200137b0 	.word	0x200137b0

080146fc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 80146fc:	b510      	push	{r4, lr}
 80146fe:	4b07      	ldr	r3, [pc, #28]	; (801471c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 8014700:	781b      	ldrb	r3, [r3, #0]
 8014702:	2b01      	cmp	r3, #1
 8014704:	d108      	bne.n	8014718 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 8014706:	4b06      	ldr	r3, [pc, #24]	; (8014720 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 8014708:	880c      	ldrh	r4, [r1, #0]
 801470a:	881b      	ldrh	r3, [r3, #0]
 801470c:	f9b0 2000 	ldrsh.w	r2, [r0]
 8014710:	3b01      	subs	r3, #1
 8014712:	1b1b      	subs	r3, r3, r4
 8014714:	8003      	strh	r3, [r0, #0]
 8014716:	800a      	strh	r2, [r1, #0]
 8014718:	bd10      	pop	{r4, pc}
 801471a:	bf00      	nop
 801471c:	200137b4 	.word	0x200137b4
 8014720:	200137b0 	.word	0x200137b0

08014724 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8014724:	b510      	push	{r4, lr}
 8014726:	4b0a      	ldr	r3, [pc, #40]	; (8014750 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8014728:	781b      	ldrb	r3, [r3, #0]
 801472a:	2b01      	cmp	r3, #1
 801472c:	d10e      	bne.n	801474c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 801472e:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8014732:	8843      	ldrh	r3, [r0, #2]
 8014734:	f9b0 4000 	ldrsh.w	r4, [r0]
 8014738:	8044      	strh	r4, [r0, #2]
 801473a:	18ca      	adds	r2, r1, r3
 801473c:	4b05      	ldr	r3, [pc, #20]	; (8014754 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 801473e:	881b      	ldrh	r3, [r3, #0]
 8014740:	1a9b      	subs	r3, r3, r2
 8014742:	8003      	strh	r3, [r0, #0]
 8014744:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8014748:	80c3      	strh	r3, [r0, #6]
 801474a:	8081      	strh	r1, [r0, #4]
 801474c:	bd10      	pop	{r4, pc}
 801474e:	bf00      	nop
 8014750:	200137b4 	.word	0x200137b4
 8014754:	200137b0 	.word	0x200137b0

08014758 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8014758:	4b08      	ldr	r3, [pc, #32]	; (801477c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 801475a:	781b      	ldrb	r3, [r3, #0]
 801475c:	2b01      	cmp	r3, #1
 801475e:	d10c      	bne.n	801477a <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8014760:	8803      	ldrh	r3, [r0, #0]
 8014762:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8014766:	8842      	ldrh	r2, [r0, #2]
 8014768:	8002      	strh	r2, [r0, #0]
 801476a:	185a      	adds	r2, r3, r1
 801476c:	4b04      	ldr	r3, [pc, #16]	; (8014780 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 801476e:	881b      	ldrh	r3, [r3, #0]
 8014770:	1a9b      	subs	r3, r3, r2
 8014772:	8043      	strh	r3, [r0, #2]
 8014774:	88c3      	ldrh	r3, [r0, #6]
 8014776:	8083      	strh	r3, [r0, #4]
 8014778:	80c1      	strh	r1, [r0, #6]
 801477a:	4770      	bx	lr
 801477c:	200137b4 	.word	0x200137b4
 8014780:	200137b0 	.word	0x200137b0

08014784 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8014784:	b510      	push	{r4, lr}
 8014786:	4b07      	ldr	r3, [pc, #28]	; (80147a4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8014788:	781b      	ldrb	r3, [r3, #0]
 801478a:	2b01      	cmp	r3, #1
 801478c:	d108      	bne.n	80147a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 801478e:	f9b1 3000 	ldrsh.w	r3, [r1]
 8014792:	f9b0 4000 	ldrsh.w	r4, [r0]
 8014796:	8003      	strh	r3, [r0, #0]
 8014798:	8893      	ldrh	r3, [r2, #4]
 801479a:	3b01      	subs	r3, #1
 801479c:	1b1b      	subs	r3, r3, r4
 801479e:	800b      	strh	r3, [r1, #0]
 80147a0:	bd10      	pop	{r4, pc}
 80147a2:	bf00      	nop
 80147a4:	200137b4 	.word	0x200137b4

080147a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 80147a8:	4b0b      	ldr	r3, [pc, #44]	; (80147d8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 80147aa:	781b      	ldrb	r3, [r3, #0]
 80147ac:	2b01      	cmp	r3, #1
 80147ae:	d111      	bne.n	80147d4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 80147b0:	680b      	ldr	r3, [r1, #0]
 80147b2:	ed90 7a00 	vldr	s14, [r0]
 80147b6:	6003      	str	r3, [r0, #0]
 80147b8:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 80147bc:	eddf 6a07 	vldr	s13, [pc, #28]	; 80147dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 80147c0:	ee07 3a90 	vmov	s15, r3
 80147c4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80147c8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80147cc:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80147d0:	edc1 7a00 	vstr	s15, [r1]
 80147d4:	4770      	bx	lr
 80147d6:	bf00      	nop
 80147d8:	200137b4 	.word	0x200137b4
 80147dc:	38d1b717 	.word	0x38d1b717

080147e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 80147e0:	b510      	push	{r4, lr}
 80147e2:	4b0a      	ldr	r3, [pc, #40]	; (801480c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 80147e4:	781b      	ldrb	r3, [r3, #0]
 80147e6:	2b01      	cmp	r3, #1
 80147e8:	460a      	mov	r2, r1
 80147ea:	d10d      	bne.n	8014808 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 80147ec:	8881      	ldrh	r1, [r0, #4]
 80147ee:	8803      	ldrh	r3, [r0, #0]
 80147f0:	440b      	add	r3, r1
 80147f2:	4601      	mov	r1, r0
 80147f4:	3b01      	subs	r3, #1
 80147f6:	f821 3b02 	strh.w	r3, [r1], #2
 80147fa:	f7ff ffc3 	bl	8014784 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 80147fe:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8014802:	88c2      	ldrh	r2, [r0, #6]
 8014804:	8082      	strh	r2, [r0, #4]
 8014806:	80c3      	strh	r3, [r0, #6]
 8014808:	bd10      	pop	{r4, pc}
 801480a:	bf00      	nop
 801480c:	200137b4 	.word	0x200137b4

08014810 <_ZN8touchgfx11Application13requestRedrawEv>:
 8014810:	4b06      	ldr	r3, [pc, #24]	; (801482c <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 8014812:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014816:	4b06      	ldr	r3, [pc, #24]	; (8014830 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 8014818:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
 801481c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8014820:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
 8014824:	2100      	movs	r1, #0
 8014826:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
 801482a:	4770      	bx	lr
 801482c:	200137b0 	.word	0x200137b0
 8014830:	200137b2 	.word	0x200137b2

08014834 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8014834:	4b03      	ldr	r3, [pc, #12]	; (8014844 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 8014836:	6818      	ldr	r0, [r3, #0]
 8014838:	b110      	cbz	r0, 8014840 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 801483a:	6803      	ldr	r3, [r0, #0]
 801483c:	699b      	ldr	r3, [r3, #24]
 801483e:	4718      	bx	r3
 8014840:	4770      	bx	lr
 8014842:	bf00      	nop
 8014844:	20013800 	.word	0x20013800

08014848 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8014848:	4770      	bx	lr
	...

0801484c <_ZN8touchgfx11Application4drawEv>:
 801484c:	b507      	push	{r0, r1, r2, lr}
 801484e:	4b09      	ldr	r3, [pc, #36]	; (8014874 <_ZN8touchgfx11Application4drawEv+0x28>)
 8014850:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014854:	4b08      	ldr	r3, [pc, #32]	; (8014878 <_ZN8touchgfx11Application4drawEv+0x2c>)
 8014856:	f8ad 2004 	strh.w	r2, [sp, #4]
 801485a:	f9b3 3000 	ldrsh.w	r3, [r3]
 801485e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8014862:	6803      	ldr	r3, [r0, #0]
 8014864:	2100      	movs	r1, #0
 8014866:	9100      	str	r1, [sp, #0]
 8014868:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801486a:	4669      	mov	r1, sp
 801486c:	4798      	blx	r3
 801486e:	b003      	add	sp, #12
 8014870:	f85d fb04 	ldr.w	pc, [sp], #4
 8014874:	200137b0 	.word	0x200137b0
 8014878:	200137b2 	.word	0x200137b2

0801487c <_ZN8touchgfx11Application10invalidateEv>:
 801487c:	4b09      	ldr	r3, [pc, #36]	; (80148a4 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 801487e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014882:	4b09      	ldr	r3, [pc, #36]	; (80148a8 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8014884:	b082      	sub	sp, #8
 8014886:	f9b3 3000 	ldrsh.w	r3, [r3]
 801488a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801488e:	2100      	movs	r1, #0
 8014890:	f8ad 3006 	strh.w	r3, [sp, #6]
 8014894:	9100      	str	r1, [sp, #0]
 8014896:	6803      	ldr	r3, [r0, #0]
 8014898:	aa02      	add	r2, sp, #8
 801489a:	e912 0006 	ldmdb	r2, {r1, r2}
 801489e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80148a0:	b002      	add	sp, #8
 80148a2:	4718      	bx	r3
 80148a4:	200137b0 	.word	0x200137b0
 80148a8:	200137b2 	.word	0x200137b2

080148ac <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 80148ac:	4b03      	ldr	r3, [pc, #12]	; (80148bc <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 80148ae:	6818      	ldr	r0, [r3, #0]
 80148b0:	b110      	cbz	r0, 80148b8 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 80148b2:	6803      	ldr	r3, [r0, #0]
 80148b4:	69db      	ldr	r3, [r3, #28]
 80148b6:	4718      	bx	r3
 80148b8:	4770      	bx	lr
 80148ba:	bf00      	nop
 80148bc:	20013800 	.word	0x20013800

080148c0 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 80148c0:	4b03      	ldr	r3, [pc, #12]	; (80148d0 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 80148c2:	6818      	ldr	r0, [r3, #0]
 80148c4:	b110      	cbz	r0, 80148cc <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 80148c6:	6803      	ldr	r3, [r0, #0]
 80148c8:	6a1b      	ldr	r3, [r3, #32]
 80148ca:	4718      	bx	r3
 80148cc:	4770      	bx	lr
 80148ce:	bf00      	nop
 80148d0:	20013800 	.word	0x20013800

080148d4 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 80148d4:	2300      	movs	r3, #0
 80148d6:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
 80148da:	4770      	bx	lr

080148dc <_ZN8touchgfx11Application14handleKeyEventEh>:
 80148dc:	4b03      	ldr	r3, [pc, #12]	; (80148ec <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 80148de:	6818      	ldr	r0, [r3, #0]
 80148e0:	b110      	cbz	r0, 80148e8 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 80148e2:	6803      	ldr	r3, [r0, #0]
 80148e4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80148e6:	4718      	bx	r3
 80148e8:	4770      	bx	lr
 80148ea:	bf00      	nop
 80148ec:	20013800 	.word	0x20013800

080148f0 <_ZN8touchgfx11ApplicationD1Ev>:
 80148f0:	4770      	bx	lr

080148f2 <_ZN8touchgfx11ApplicationD0Ev>:
 80148f2:	b510      	push	{r4, lr}
 80148f4:	f44f 719e 	mov.w	r1, #316	; 0x13c
 80148f8:	4604      	mov	r4, r0
 80148fa:	f012 fe40 	bl	802757e <_ZdlPvj>
 80148fe:	4620      	mov	r0, r4
 8014900:	bd10      	pop	{r4, pc}

08014902 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 8014902:	b510      	push	{r4, lr}
 8014904:	f9b1 4000 	ldrsh.w	r4, [r1]
 8014908:	888a      	ldrh	r2, [r1, #4]
 801490a:	f9b0 3000 	ldrsh.w	r3, [r0]
 801490e:	4422      	add	r2, r4
 8014910:	b212      	sxth	r2, r2
 8014912:	4293      	cmp	r3, r2
 8014914:	da15      	bge.n	8014942 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8014916:	8882      	ldrh	r2, [r0, #4]
 8014918:	4413      	add	r3, r2
 801491a:	b21b      	sxth	r3, r3
 801491c:	429c      	cmp	r4, r3
 801491e:	da10      	bge.n	8014942 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8014920:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8014924:	88c9      	ldrh	r1, [r1, #6]
 8014926:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 801492a:	4419      	add	r1, r3
 801492c:	b209      	sxth	r1, r1
 801492e:	428a      	cmp	r2, r1
 8014930:	da07      	bge.n	8014942 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8014932:	88c0      	ldrh	r0, [r0, #6]
 8014934:	4410      	add	r0, r2
 8014936:	b200      	sxth	r0, r0
 8014938:	4283      	cmp	r3, r0
 801493a:	bfac      	ite	ge
 801493c:	2000      	movge	r0, #0
 801493e:	2001      	movlt	r0, #1
 8014940:	bd10      	pop	{r4, pc}
 8014942:	2000      	movs	r0, #0
 8014944:	e7fc      	b.n	8014940 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

08014946 <_ZN8touchgfx4Rect10restrictToEss>:
 8014946:	f9b0 3000 	ldrsh.w	r3, [r0]
 801494a:	2b00      	cmp	r3, #0
 801494c:	b510      	push	{r4, lr}
 801494e:	da04      	bge.n	801495a <_ZN8touchgfx4Rect10restrictToEss+0x14>
 8014950:	8884      	ldrh	r4, [r0, #4]
 8014952:	4423      	add	r3, r4
 8014954:	8083      	strh	r3, [r0, #4]
 8014956:	2300      	movs	r3, #0
 8014958:	8003      	strh	r3, [r0, #0]
 801495a:	f9b0 4000 	ldrsh.w	r4, [r0]
 801495e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8014962:	1b09      	subs	r1, r1, r4
 8014964:	428b      	cmp	r3, r1
 8014966:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 801496a:	bfc8      	it	gt
 801496c:	8081      	strhgt	r1, [r0, #4]
 801496e:	2b00      	cmp	r3, #0
 8014970:	da04      	bge.n	801497c <_ZN8touchgfx4Rect10restrictToEss+0x36>
 8014972:	88c1      	ldrh	r1, [r0, #6]
 8014974:	440b      	add	r3, r1
 8014976:	80c3      	strh	r3, [r0, #6]
 8014978:	2300      	movs	r3, #0
 801497a:	8043      	strh	r3, [r0, #2]
 801497c:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8014980:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8014984:	1a52      	subs	r2, r2, r1
 8014986:	4293      	cmp	r3, r2
 8014988:	bfc8      	it	gt
 801498a:	80c2      	strhgt	r2, [r0, #6]
 801498c:	bd10      	pop	{r4, pc}
	...

08014990 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8014990:	b510      	push	{r4, lr}
 8014992:	4b10      	ldr	r3, [pc, #64]	; (80149d4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 8014994:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014998:	4b0f      	ldr	r3, [pc, #60]	; (80149d8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 801499a:	460c      	mov	r4, r1
 801499c:	4620      	mov	r0, r4
 801499e:	f9b3 1000 	ldrsh.w	r1, [r3]
 80149a2:	f7ff ffd0 	bl	8014946 <_ZN8touchgfx4Rect10restrictToEss>
 80149a6:	4b0d      	ldr	r3, [pc, #52]	; (80149dc <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 80149a8:	6818      	ldr	r0, [r3, #0]
 80149aa:	b190      	cbz	r0, 80149d2 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 80149ac:	6803      	ldr	r3, [r0, #0]
 80149ae:	4621      	mov	r1, r4
 80149b0:	689b      	ldr	r3, [r3, #8]
 80149b2:	4798      	blx	r3
 80149b4:	4b0a      	ldr	r3, [pc, #40]	; (80149e0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 80149b6:	6818      	ldr	r0, [r3, #0]
 80149b8:	b118      	cbz	r0, 80149c2 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 80149ba:	6803      	ldr	r3, [r0, #0]
 80149bc:	4621      	mov	r1, r4
 80149be:	689b      	ldr	r3, [r3, #8]
 80149c0:	4798      	blx	r3
 80149c2:	4b08      	ldr	r3, [pc, #32]	; (80149e4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 80149c4:	6818      	ldr	r0, [r3, #0]
 80149c6:	6803      	ldr	r3, [r0, #0]
 80149c8:	4621      	mov	r1, r4
 80149ca:	69db      	ldr	r3, [r3, #28]
 80149cc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80149d0:	4718      	bx	r3
 80149d2:	bd10      	pop	{r4, pc}
 80149d4:	200137b2 	.word	0x200137b2
 80149d8:	200137b0 	.word	0x200137b0
 80149dc:	20013800 	.word	0x20013800
 80149e0:	200137fc 	.word	0x200137fc
 80149e4:	200137bc 	.word	0x200137bc

080149e8 <_ZNK8touchgfx4Rect8includesERKS0_>:
 80149e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80149ea:	4606      	mov	r6, r0
 80149ec:	4608      	mov	r0, r1
 80149ee:	460f      	mov	r7, r1
 80149f0:	f7fa ff97 	bl	800f922 <_ZNK8touchgfx4Rect7isEmptyEv>
 80149f4:	b9e8      	cbnz	r0, 8014a32 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80149f6:	f9b7 5000 	ldrsh.w	r5, [r7]
 80149fa:	f9b6 4000 	ldrsh.w	r4, [r6]
 80149fe:	42a5      	cmp	r5, r4
 8014a00:	db17      	blt.n	8014a32 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8014a02:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8014a06:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 8014a0a:	429a      	cmp	r2, r3
 8014a0c:	db11      	blt.n	8014a32 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8014a0e:	88b9      	ldrh	r1, [r7, #4]
 8014a10:	440d      	add	r5, r1
 8014a12:	88b1      	ldrh	r1, [r6, #4]
 8014a14:	440c      	add	r4, r1
 8014a16:	b22d      	sxth	r5, r5
 8014a18:	b224      	sxth	r4, r4
 8014a1a:	42a5      	cmp	r5, r4
 8014a1c:	dc09      	bgt.n	8014a32 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8014a1e:	88f8      	ldrh	r0, [r7, #6]
 8014a20:	4410      	add	r0, r2
 8014a22:	88f2      	ldrh	r2, [r6, #6]
 8014a24:	4413      	add	r3, r2
 8014a26:	b200      	sxth	r0, r0
 8014a28:	b21b      	sxth	r3, r3
 8014a2a:	4298      	cmp	r0, r3
 8014a2c:	bfcc      	ite	gt
 8014a2e:	2000      	movgt	r0, #0
 8014a30:	2001      	movle	r0, #1
 8014a32:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08014a34 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 8014a34:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014a36:	4604      	mov	r4, r0
 8014a38:	4608      	mov	r0, r1
 8014a3a:	460d      	mov	r5, r1
 8014a3c:	f7fa ff71 	bl	800f922 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014a40:	b978      	cbnz	r0, 8014a62 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 8014a42:	4620      	mov	r0, r4
 8014a44:	f7fa ff6d 	bl	800f922 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014a48:	f9b5 6000 	ldrsh.w	r6, [r5]
 8014a4c:	b150      	cbz	r0, 8014a64 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 8014a4e:	8026      	strh	r6, [r4, #0]
 8014a50:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8014a54:	8063      	strh	r3, [r4, #2]
 8014a56:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 8014a5a:	80a3      	strh	r3, [r4, #4]
 8014a5c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8014a60:	80e3      	strh	r3, [r4, #6]
 8014a62:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8014a64:	f9b4 1000 	ldrsh.w	r1, [r4]
 8014a68:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8014a6c:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8014a70:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 8014a74:	88ed      	ldrh	r5, [r5, #6]
 8014a76:	42b1      	cmp	r1, r6
 8014a78:	460f      	mov	r7, r1
 8014a7a:	bfa8      	it	ge
 8014a7c:	4637      	movge	r7, r6
 8014a7e:	4293      	cmp	r3, r2
 8014a80:	4618      	mov	r0, r3
 8014a82:	4466      	add	r6, ip
 8014a84:	bfa8      	it	ge
 8014a86:	4610      	movge	r0, r2
 8014a88:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8014a8c:	8027      	strh	r7, [r4, #0]
 8014a8e:	442a      	add	r2, r5
 8014a90:	88e5      	ldrh	r5, [r4, #6]
 8014a92:	8060      	strh	r0, [r4, #2]
 8014a94:	4461      	add	r1, ip
 8014a96:	442b      	add	r3, r5
 8014a98:	b236      	sxth	r6, r6
 8014a9a:	b209      	sxth	r1, r1
 8014a9c:	b212      	sxth	r2, r2
 8014a9e:	b21b      	sxth	r3, r3
 8014aa0:	428e      	cmp	r6, r1
 8014aa2:	bfac      	ite	ge
 8014aa4:	ebc7 0106 	rsbge	r1, r7, r6
 8014aa8:	ebc7 0101 	rsblt	r1, r7, r1
 8014aac:	429a      	cmp	r2, r3
 8014aae:	bfac      	ite	ge
 8014ab0:	ebc0 0202 	rsbge	r2, r0, r2
 8014ab4:	ebc0 0203 	rsblt	r2, r0, r3
 8014ab8:	80a1      	strh	r1, [r4, #4]
 8014aba:	80e2      	strh	r2, [r4, #6]
 8014abc:	e7d1      	b.n	8014a62 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

08014ac0 <_ZN8touchgfx11Application11getInstanceEv>:
 8014ac0:	4b01      	ldr	r3, [pc, #4]	; (8014ac8 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 8014ac2:	6818      	ldr	r0, [r3, #0]
 8014ac4:	4770      	bx	lr
 8014ac6:	bf00      	nop
 8014ac8:	20013810 	.word	0x20013810

08014acc <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>:
 8014acc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014ace:	4b10      	ldr	r3, [pc, #64]	; (8014b10 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x44>)
 8014ad0:	781b      	ldrb	r3, [r3, #0]
 8014ad2:	4605      	mov	r5, r0
 8014ad4:	b1d3      	cbz	r3, 8014b0c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x40>
 8014ad6:	4b0f      	ldr	r3, [pc, #60]	; (8014b14 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x48>)
 8014ad8:	4f0f      	ldr	r7, [pc, #60]	; (8014b18 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x4c>)
 8014ada:	881c      	ldrh	r4, [r3, #0]
 8014adc:	f100 06ee 	add.w	r6, r0, #238	; 0xee
 8014ae0:	f8b5 312e 	ldrh.w	r3, [r5, #302]	; 0x12e
 8014ae4:	42a3      	cmp	r3, r4
 8014ae6:	d90e      	bls.n	8014b06 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x3a>
 8014ae8:	683b      	ldr	r3, [r7, #0]
 8014aea:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8014aee:	b10a      	cbz	r2, 8014af4 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x28>
 8014af0:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8014af2:	b900      	cbnz	r0, 8014af6 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x2a>
 8014af4:	6898      	ldr	r0, [r3, #8]
 8014af6:	6803      	ldr	r3, [r0, #0]
 8014af8:	eb06 01c4 	add.w	r1, r6, r4, lsl #3
 8014afc:	69db      	ldr	r3, [r3, #28]
 8014afe:	3401      	adds	r4, #1
 8014b00:	4798      	blx	r3
 8014b02:	b2a4      	uxth	r4, r4
 8014b04:	e7ec      	b.n	8014ae0 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x14>
 8014b06:	2300      	movs	r3, #0
 8014b08:	f8a5 312e 	strh.w	r3, [r5, #302]	; 0x12e
 8014b0c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8014b0e:	bf00      	nop
 8014b10:	200137ba 	.word	0x200137ba
 8014b14:	20000088 	.word	0x20000088
 8014b18:	200137bc 	.word	0x200137bc

08014b1c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 8014b1c:	b510      	push	{r4, lr}
 8014b1e:	2300      	movs	r3, #0
 8014b20:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
 8014b24:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8014b28:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8014b2c:	4604      	mov	r4, r0
 8014b2e:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8014b32:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
 8014b36:	429a      	cmp	r2, r3
 8014b38:	d90e      	bls.n	8014b58 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 8014b3a:	18e2      	adds	r2, r4, r3
 8014b3c:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
 8014b40:	b122      	cbz	r2, 8014b4c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 8014b42:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8014b46:	6803      	ldr	r3, [r0, #0]
 8014b48:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8014b4a:	4798      	blx	r3
 8014b4c:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8014b50:	3301      	adds	r3, #1
 8014b52:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8014b56:	e7ea      	b.n	8014b2e <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 8014b58:	bd10      	pop	{r4, pc}

08014b5a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>:
 8014b5a:	b530      	push	{r4, r5, lr}
 8014b5c:	f8b0 5080 	ldrh.w	r5, [r0, #128]	; 0x80
 8014b60:	2200      	movs	r2, #0
 8014b62:	b293      	uxth	r3, r2
 8014b64:	429d      	cmp	r5, r3
 8014b66:	d90e      	bls.n	8014b86 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8014b68:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
 8014b6c:	428b      	cmp	r3, r1
 8014b6e:	d10b      	bne.n	8014b88 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8014b70:	1884      	adds	r4, r0, r2
 8014b72:	f894 3084 	ldrb.w	r3, [r4, #132]	; 0x84
 8014b76:	b13b      	cbz	r3, 8014b88 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8014b78:	3b01      	subs	r3, #1
 8014b7a:	b2db      	uxtb	r3, r3
 8014b7c:	f884 3084 	strb.w	r3, [r4, #132]	; 0x84
 8014b80:	b90b      	cbnz	r3, 8014b86 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8014b82:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 8014b86:	bd30      	pop	{r4, r5, pc}
 8014b88:	3201      	adds	r2, #1
 8014b8a:	e7ea      	b.n	8014b62 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x8>

08014b8c <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 8014b8c:	2300      	movs	r3, #0
 8014b8e:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8014b92:	f100 0284 	add.w	r2, r0, #132	; 0x84
 8014b96:	30a4      	adds	r0, #164	; 0xa4
 8014b98:	f802 3b01 	strb.w	r3, [r2], #1
 8014b9c:	4282      	cmp	r2, r0
 8014b9e:	d1fb      	bne.n	8014b98 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 8014ba0:	4770      	bx	lr
	...

08014ba4 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8014ba4:	b570      	push	{r4, r5, r6, lr}
 8014ba6:	4c0b      	ldr	r4, [pc, #44]	; (8014bd4 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 8014ba8:	4605      	mov	r5, r0
 8014baa:	6820      	ldr	r0, [r4, #0]
 8014bac:	460e      	mov	r6, r1
 8014bae:	b110      	cbz	r0, 8014bb6 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 8014bb0:	6803      	ldr	r3, [r0, #0]
 8014bb2:	695b      	ldr	r3, [r3, #20]
 8014bb4:	4798      	blx	r3
 8014bb6:	1d28      	adds	r0, r5, #4
 8014bb8:	f7ff ffe8 	bl	8014b8c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8014bbc:	6026      	str	r6, [r4, #0]
 8014bbe:	6833      	ldr	r3, [r6, #0]
 8014bc0:	4630      	mov	r0, r6
 8014bc2:	68db      	ldr	r3, [r3, #12]
 8014bc4:	4798      	blx	r3
 8014bc6:	682b      	ldr	r3, [r5, #0]
 8014bc8:	4628      	mov	r0, r5
 8014bca:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8014bcc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014bd0:	4718      	bx	r3
 8014bd2:	bf00      	nop
 8014bd4:	20013800 	.word	0x20013800

08014bd8 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 8014bd8:	2300      	movs	r3, #0
 8014bda:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
 8014bde:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
 8014be2:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014be4:	461a      	mov	r2, r3
 8014be6:	461c      	mov	r4, r3
 8014be8:	461d      	mov	r5, r3
 8014bea:	459c      	cmp	ip, r3
 8014bec:	dd1a      	ble.n	8014c24 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 8014bee:	18c6      	adds	r6, r0, r3
 8014bf0:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
 8014bf4:	b16e      	cbz	r6, 8014c12 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 8014bf6:	429a      	cmp	r2, r3
 8014bf8:	d008      	beq.n	8014c0c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 8014bfa:	fa1f fe82 	uxth.w	lr, r2
 8014bfe:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 8014c02:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 8014c06:	1887      	adds	r7, r0, r2
 8014c08:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
 8014c0c:	3201      	adds	r2, #1
 8014c0e:	3301      	adds	r3, #1
 8014c10:	e7eb      	b.n	8014bea <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 8014c12:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
 8014c16:	4299      	cmp	r1, r3
 8014c18:	bfa8      	it	ge
 8014c1a:	3501      	addge	r5, #1
 8014c1c:	429e      	cmp	r6, r3
 8014c1e:	bfc8      	it	gt
 8014c20:	3401      	addgt	r4, #1
 8014c22:	e7f4      	b.n	8014c0e <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 8014c24:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
 8014c28:	1b49      	subs	r1, r1, r5
 8014c2a:	1b1b      	subs	r3, r3, r4
 8014c2c:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
 8014c30:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8014c34:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8014c38:	4293      	cmp	r3, r2
 8014c3a:	dd03      	ble.n	8014c44 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 8014c3c:	3b01      	subs	r3, #1
 8014c3e:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8014c42:	e7f7      	b.n	8014c34 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 8014c44:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08014c48 <_ZN8touchgfx11Application15handleTickEventEv>:
 8014c48:	b570      	push	{r4, r5, r6, lr}
 8014c4a:	4d16      	ldr	r5, [pc, #88]	; (8014ca4 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 8014c4c:	4604      	mov	r4, r0
 8014c4e:	6828      	ldr	r0, [r5, #0]
 8014c50:	b140      	cbz	r0, 8014c64 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8014c52:	7a03      	ldrb	r3, [r0, #8]
 8014c54:	b933      	cbnz	r3, 8014c64 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8014c56:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 8014c5a:	6803      	ldr	r3, [r0, #0]
 8014c5c:	689b      	ldr	r3, [r3, #8]
 8014c5e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014c62:	4718      	bx	r3
 8014c64:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
 8014c68:	4e0f      	ldr	r6, [pc, #60]	; (8014ca8 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 8014c6a:	b973      	cbnz	r3, 8014c8a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8014c6c:	b168      	cbz	r0, 8014c8a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8014c6e:	7a03      	ldrb	r3, [r0, #8]
 8014c70:	b15b      	cbz	r3, 8014c8a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8014c72:	6830      	ldr	r0, [r6, #0]
 8014c74:	b110      	cbz	r0, 8014c7c <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 8014c76:	6803      	ldr	r3, [r0, #0]
 8014c78:	691b      	ldr	r3, [r3, #16]
 8014c7a:	4798      	blx	r3
 8014c7c:	6828      	ldr	r0, [r5, #0]
 8014c7e:	6803      	ldr	r3, [r0, #0]
 8014c80:	68db      	ldr	r3, [r3, #12]
 8014c82:	4798      	blx	r3
 8014c84:	2301      	movs	r3, #1
 8014c86:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 8014c8a:	3404      	adds	r4, #4
 8014c8c:	4620      	mov	r0, r4
 8014c8e:	f7ff ff45 	bl	8014b1c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 8014c92:	4620      	mov	r0, r4
 8014c94:	f7ff ffa0 	bl	8014bd8 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8014c98:	6830      	ldr	r0, [r6, #0]
 8014c9a:	b110      	cbz	r0, 8014ca2 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 8014c9c:	6803      	ldr	r3, [r0, #0]
 8014c9e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8014ca0:	e7dd      	b.n	8014c5e <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 8014ca2:	bd70      	pop	{r4, r5, r6, pc}
 8014ca4:	20013804 	.word	0x20013804
 8014ca8:	20013800 	.word	0x20013800

08014cac <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>:
 8014cac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014cae:	2300      	movs	r3, #0
 8014cb0:	4604      	mov	r4, r0
 8014cb2:	460d      	mov	r5, r1
 8014cb4:	f8b0 1080 	ldrh.w	r1, [r0, #128]	; 0x80
 8014cb8:	4618      	mov	r0, r3
 8014cba:	b29a      	uxth	r2, r3
 8014cbc:	4291      	cmp	r1, r2
 8014cbe:	d911      	bls.n	8014ce4 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x38>
 8014cc0:	f854 7023 	ldr.w	r7, [r4, r3, lsl #2]
 8014cc4:	18e6      	adds	r6, r4, r3
 8014cc6:	42af      	cmp	r7, r5
 8014cc8:	f896 2084 	ldrb.w	r2, [r6, #132]	; 0x84
 8014ccc:	d105      	bne.n	8014cda <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2e>
 8014cce:	2aff      	cmp	r2, #255	; 0xff
 8014cd0:	d002      	beq.n	8014cd8 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8014cd2:	3201      	adds	r2, #1
 8014cd4:	f886 2084 	strb.w	r2, [r6, #132]	; 0x84
 8014cd8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8014cda:	2a00      	cmp	r2, #0
 8014cdc:	bf08      	it	eq
 8014cde:	2001      	moveq	r0, #1
 8014ce0:	3301      	adds	r3, #1
 8014ce2:	e7ea      	b.n	8014cba <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0xe>
 8014ce4:	b120      	cbz	r0, 8014cf0 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8014ce6:	2920      	cmp	r1, #32
 8014ce8:	d102      	bne.n	8014cf0 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8014cea:	4620      	mov	r0, r4
 8014cec:	f7ff ff74 	bl	8014bd8 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8014cf0:	f8b4 3080 	ldrh.w	r3, [r4, #128]	; 0x80
 8014cf4:	2b1f      	cmp	r3, #31
 8014cf6:	d8ef      	bhi.n	8014cd8 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8014cf8:	18e2      	adds	r2, r4, r3
 8014cfa:	2101      	movs	r1, #1
 8014cfc:	f882 1084 	strb.w	r1, [r2, #132]	; 0x84
 8014d00:	185a      	adds	r2, r3, r1
 8014d02:	f8a4 2080 	strh.w	r2, [r4, #128]	; 0x80
 8014d06:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8014d0a:	e7e5      	b.n	8014cd8 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>

08014d0c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 8014d0c:	4603      	mov	r3, r0
 8014d0e:	f100 0140 	add.w	r1, r0, #64	; 0x40
 8014d12:	2200      	movs	r2, #0
 8014d14:	801a      	strh	r2, [r3, #0]
 8014d16:	805a      	strh	r2, [r3, #2]
 8014d18:	809a      	strh	r2, [r3, #4]
 8014d1a:	80da      	strh	r2, [r3, #6]
 8014d1c:	3308      	adds	r3, #8
 8014d1e:	428b      	cmp	r3, r1
 8014d20:	d1f8      	bne.n	8014d14 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 8014d22:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 8014d26:	4770      	bx	lr

08014d28 <_ZN8touchgfx11ApplicationC1Ev>:
 8014d28:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014d2a:	4606      	mov	r6, r0
 8014d2c:	4b1c      	ldr	r3, [pc, #112]	; (8014da0 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 8014d2e:	f846 3b04 	str.w	r3, [r6], #4
 8014d32:	4604      	mov	r4, r0
 8014d34:	2500      	movs	r5, #0
 8014d36:	22a8      	movs	r2, #168	; 0xa8
 8014d38:	2100      	movs	r1, #0
 8014d3a:	4630      	mov	r0, r6
 8014d3c:	f013 fc15 	bl	802856a <memset>
 8014d40:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
 8014d44:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8014d48:	f7ff ffe0 	bl	8014d0c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8014d4c:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8014d50:	f7ff ffdc 	bl	8014d0c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8014d54:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 8014d58:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 8014d5c:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
 8014d60:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
 8014d64:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
 8014d68:	490e      	ldr	r1, [pc, #56]	; (8014da4 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 8014d6a:	480f      	ldr	r0, [pc, #60]	; (8014da8 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 8014d6c:	4f0f      	ldr	r7, [pc, #60]	; (8014dac <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 8014d6e:	f010 fbf5 	bl	802555c <CRC_Lock>
 8014d72:	4b0f      	ldr	r3, [pc, #60]	; (8014db0 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 8014d74:	b158      	cbz	r0, 8014d8e <_ZN8touchgfx11ApplicationC1Ev+0x66>
 8014d76:	801d      	strh	r5, [r3, #0]
 8014d78:	4a0e      	ldr	r2, [pc, #56]	; (8014db4 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 8014d7a:	2300      	movs	r3, #0
 8014d7c:	6013      	str	r3, [r2, #0]
 8014d7e:	4a0e      	ldr	r2, [pc, #56]	; (8014db8 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 8014d80:	603b      	str	r3, [r7, #0]
 8014d82:	4630      	mov	r0, r6
 8014d84:	6013      	str	r3, [r2, #0]
 8014d86:	f7ff ff01 	bl	8014b8c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8014d8a:	4620      	mov	r0, r4
 8014d8c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8014d8e:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8014d92:	2002      	movs	r0, #2
 8014d94:	801a      	strh	r2, [r3, #0]
 8014d96:	6038      	str	r0, [r7, #0]
 8014d98:	f001 fb4a 	bl	8016430 <_ZN8touchgfx6Screen4drawEv>
 8014d9c:	e7ec      	b.n	8014d78 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 8014d9e:	bf00      	nop
 8014da0:	0802c988 	.word	0x0802c988
 8014da4:	b5e8b5cd 	.word	0xb5e8b5cd
 8014da8:	f407a5c2 	.word	0xf407a5c2
 8014dac:	20013800 	.word	0x20013800
 8014db0:	20000088 	.word	0x20000088
 8014db4:	20013810 	.word	0x20013810
 8014db8:	20013804 	.word	0x20013804

08014dbc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 8014dbc:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8014dc0:	3b01      	subs	r3, #1
 8014dc2:	b29b      	uxth	r3, r3
 8014dc4:	428b      	cmp	r3, r1
 8014dc6:	b510      	push	{r4, lr}
 8014dc8:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 8014dcc:	d908      	bls.n	8014de0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 8014dce:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8014dd2:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 8014dd6:	681a      	ldr	r2, [r3, #0]
 8014dd8:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 8014ddc:	685a      	ldr	r2, [r3, #4]
 8014dde:	6062      	str	r2, [r4, #4]
 8014de0:	bd10      	pop	{r4, pc}
	...

08014de4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 8014de4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014de8:	4b8f      	ldr	r3, [pc, #572]	; (8015028 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 8014dea:	b08f      	sub	sp, #60	; 0x3c
 8014dec:	ac0a      	add	r4, sp, #40	; 0x28
 8014dee:	e884 0006 	stmia.w	r4, {r1, r2}
 8014df2:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014df6:	4b8d      	ldr	r3, [pc, #564]	; (801502c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 8014df8:	4683      	mov	fp, r0
 8014dfa:	f9b3 1000 	ldrsh.w	r1, [r3]
 8014dfe:	4620      	mov	r0, r4
 8014e00:	f7ff fda1 	bl	8014946 <_ZN8touchgfx4Rect10restrictToEss>
 8014e04:	4620      	mov	r0, r4
 8014e06:	f7fa fd8c 	bl	800f922 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014e0a:	2800      	cmp	r0, #0
 8014e0c:	d16a      	bne.n	8014ee4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8014e0e:	9403      	str	r4, [sp, #12]
 8014e10:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8014e14:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8014e18:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 8014e1c:	35a4      	adds	r5, #164	; 0xa4
 8014e1e:	9301      	str	r3, [sp, #4]
 8014e20:	b15c      	cbz	r4, 8014e3a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 8014e22:	4629      	mov	r1, r5
 8014e24:	9803      	ldr	r0, [sp, #12]
 8014e26:	f7ff fddf 	bl	80149e8 <_ZNK8touchgfx4Rect8includesERKS0_>
 8014e2a:	3c01      	subs	r4, #1
 8014e2c:	b118      	cbz	r0, 8014e36 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 8014e2e:	b2a1      	uxth	r1, r4
 8014e30:	9801      	ldr	r0, [sp, #4]
 8014e32:	f7ff ffc3 	bl	8014dbc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8014e36:	3d08      	subs	r5, #8
 8014e38:	e7f2      	b.n	8014e20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 8014e3a:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
 8014e3e:	f8cd a010 	str.w	sl, [sp, #16]
 8014e42:	f10a 33ff 	add.w	r3, sl, #4294967295
 8014e46:	9302      	str	r3, [sp, #8]
 8014e48:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 8014e4c:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
 8014e50:	9306      	str	r3, [sp, #24]
 8014e52:	445c      	add	r4, fp
 8014e54:	2500      	movs	r5, #0
 8014e56:	4626      	mov	r6, r4
 8014e58:	f8cd a014 	str.w	sl, [sp, #20]
 8014e5c:	462f      	mov	r7, r5
 8014e5e:	9b05      	ldr	r3, [sp, #20]
 8014e60:	2b00      	cmp	r3, #0
 8014e62:	d073      	beq.n	8014f4c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8014e64:	9903      	ldr	r1, [sp, #12]
 8014e66:	4630      	mov	r0, r6
 8014e68:	f7ff fd4b 	bl	8014902 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8014e6c:	b350      	cbz	r0, 8014ec4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8014e6e:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 8014e72:	f9b6 c000 	ldrsh.w	ip, [r6]
 8014e76:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
 8014e7a:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 8014e7e:	45e6      	cmp	lr, ip
 8014e80:	db33      	blt.n	8014eea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8014e82:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8014e86:	88b3      	ldrh	r3, [r6, #4]
 8014e88:	4472      	add	r2, lr
 8014e8a:	4463      	add	r3, ip
 8014e8c:	b212      	sxth	r2, r2
 8014e8e:	b21b      	sxth	r3, r3
 8014e90:	429a      	cmp	r2, r3
 8014e92:	dc2a      	bgt.n	8014eea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8014e94:	88f3      	ldrh	r3, [r6, #6]
 8014e96:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8014e9a:	fa1f f289 	uxth.w	r2, r9
 8014e9e:	4413      	add	r3, r2
 8014ea0:	b29b      	uxth	r3, r3
 8014ea2:	45c8      	cmp	r8, r9
 8014ea4:	fa1f fc88 	uxth.w	ip, r8
 8014ea8:	fa0f fe83 	sxth.w	lr, r3
 8014eac:	db0f      	blt.n	8014ece <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 8014eae:	eba3 030c 	sub.w	r3, r3, ip
 8014eb2:	1ac9      	subs	r1, r1, r3
 8014eb4:	b209      	sxth	r1, r1
 8014eb6:	2900      	cmp	r1, #0
 8014eb8:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8014ebc:	dd12      	ble.n	8014ee4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8014ebe:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 8014ec2:	4605      	mov	r5, r0
 8014ec4:	9b05      	ldr	r3, [sp, #20]
 8014ec6:	3b01      	subs	r3, #1
 8014ec8:	9305      	str	r3, [sp, #20]
 8014eca:	3e08      	subs	r6, #8
 8014ecc:	e7c7      	b.n	8014e5e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 8014ece:	4461      	add	r1, ip
 8014ed0:	b209      	sxth	r1, r1
 8014ed2:	4571      	cmp	r1, lr
 8014ed4:	dc38      	bgt.n	8014f48 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8014ed6:	eba2 020c 	sub.w	r2, r2, ip
 8014eda:	b212      	sxth	r2, r2
 8014edc:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8014ee0:	2a00      	cmp	r2, #0
 8014ee2:	dcee      	bgt.n	8014ec2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8014ee4:	b00f      	add	sp, #60	; 0x3c
 8014ee6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014eea:	45c8      	cmp	r8, r9
 8014eec:	db2c      	blt.n	8014f48 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8014eee:	88f3      	ldrh	r3, [r6, #6]
 8014ef0:	4499      	add	r9, r3
 8014ef2:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 8014ef6:	4498      	add	r8, r3
 8014ef8:	fa0f f989 	sxth.w	r9, r9
 8014efc:	fa0f f888 	sxth.w	r8, r8
 8014f00:	45c1      	cmp	r9, r8
 8014f02:	db21      	blt.n	8014f48 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8014f04:	88b3      	ldrh	r3, [r6, #4]
 8014f06:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8014f0a:	fa1f f28c 	uxth.w	r2, ip
 8014f0e:	4413      	add	r3, r2
 8014f10:	b29b      	uxth	r3, r3
 8014f12:	45e6      	cmp	lr, ip
 8014f14:	fa1f f88e 	uxth.w	r8, lr
 8014f18:	fa0f f983 	sxth.w	r9, r3
 8014f1c:	db0a      	blt.n	8014f34 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 8014f1e:	eba3 0308 	sub.w	r3, r3, r8
 8014f22:	1ac9      	subs	r1, r1, r3
 8014f24:	b209      	sxth	r1, r1
 8014f26:	2900      	cmp	r1, #0
 8014f28:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 8014f2c:	ddda      	ble.n	8014ee4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8014f2e:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8014f32:	e7c6      	b.n	8014ec2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8014f34:	4441      	add	r1, r8
 8014f36:	b209      	sxth	r1, r1
 8014f38:	4549      	cmp	r1, r9
 8014f3a:	dc05      	bgt.n	8014f48 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8014f3c:	eba2 0208 	sub.w	r2, r2, r8
 8014f40:	b212      	sxth	r2, r2
 8014f42:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8014f46:	e7cb      	b.n	8014ee0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 8014f48:	4607      	mov	r7, r0
 8014f4a:	e7bb      	b.n	8014ec4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8014f4c:	2d00      	cmp	r5, #0
 8014f4e:	d181      	bne.n	8014e54 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 8014f50:	2f00      	cmp	r7, #0
 8014f52:	f000 81dd 	beq.w	8015310 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8014f56:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 8014f5a:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 8014f5e:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
 8014f62:	b2b3      	uxth	r3, r6
 8014f64:	9305      	str	r3, [sp, #20]
 8014f66:	9a05      	ldr	r2, [sp, #20]
 8014f68:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8014f6c:	4413      	add	r3, r2
 8014f6e:	b2ba      	uxth	r2, r7
 8014f70:	4492      	add	sl, r2
 8014f72:	b29b      	uxth	r3, r3
 8014f74:	fa1f fa8a 	uxth.w	sl, sl
 8014f78:	fa0f f883 	sxth.w	r8, r3
 8014f7c:	fa0f f98a 	sxth.w	r9, sl
 8014f80:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8014f84:	9b04      	ldr	r3, [sp, #16]
 8014f86:	2b00      	cmp	r3, #0
 8014f88:	d052      	beq.n	8015030 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 8014f8a:	9903      	ldr	r1, [sp, #12]
 8014f8c:	4620      	mov	r0, r4
 8014f8e:	f7ff fcb8 	bl	8014902 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8014f92:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8014f96:	b1c0      	cbz	r0, 8014fca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8014f98:	f9b4 e000 	ldrsh.w	lr, [r4]
 8014f9c:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8014fa0:	4576      	cmp	r6, lr
 8014fa2:	dc22      	bgt.n	8014fea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8014fa4:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8014fa8:	44f4      	add	ip, lr
 8014faa:	fa0f fc8c 	sxth.w	ip, ip
 8014fae:	45e0      	cmp	r8, ip
 8014fb0:	db1b      	blt.n	8014fea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8014fb2:	428f      	cmp	r7, r1
 8014fb4:	fa1f fc81 	uxth.w	ip, r1
 8014fb8:	88e1      	ldrh	r1, [r4, #6]
 8014fba:	dc0d      	bgt.n	8014fd8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 8014fbc:	ebaa 0c0c 	sub.w	ip, sl, ip
 8014fc0:	eba1 010c 	sub.w	r1, r1, ip
 8014fc4:	f8a4 9002 	strh.w	r9, [r4, #2]
 8014fc8:	80e1      	strh	r1, [r4, #6]
 8014fca:	4628      	mov	r0, r5
 8014fcc:	9904      	ldr	r1, [sp, #16]
 8014fce:	3901      	subs	r1, #1
 8014fd0:	9104      	str	r1, [sp, #16]
 8014fd2:	3c08      	subs	r4, #8
 8014fd4:	4605      	mov	r5, r0
 8014fd6:	e7d3      	b.n	8014f80 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 8014fd8:	4461      	add	r1, ip
 8014fda:	b209      	sxth	r1, r1
 8014fdc:	4549      	cmp	r1, r9
 8014fde:	dcf5      	bgt.n	8014fcc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8014fe0:	eba2 0c0c 	sub.w	ip, r2, ip
 8014fe4:	f8a4 c006 	strh.w	ip, [r4, #6]
 8014fe8:	e7ef      	b.n	8014fca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8014fea:	428f      	cmp	r7, r1
 8014fec:	dcee      	bgt.n	8014fcc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8014fee:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 8014ff2:	4461      	add	r1, ip
 8014ff4:	b209      	sxth	r1, r1
 8014ff6:	4589      	cmp	r9, r1
 8014ff8:	dbe8      	blt.n	8014fcc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8014ffa:	4576      	cmp	r6, lr
 8014ffc:	fa1f fc8e 	uxth.w	ip, lr
 8015000:	88a1      	ldrh	r1, [r4, #4]
 8015002:	dc07      	bgt.n	8015014 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 8015004:	eba3 0c0c 	sub.w	ip, r3, ip
 8015008:	eba1 010c 	sub.w	r1, r1, ip
 801500c:	f8a4 8000 	strh.w	r8, [r4]
 8015010:	80a1      	strh	r1, [r4, #4]
 8015012:	e7da      	b.n	8014fca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8015014:	4461      	add	r1, ip
 8015016:	b209      	sxth	r1, r1
 8015018:	4588      	cmp	r8, r1
 801501a:	dbd7      	blt.n	8014fcc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 801501c:	9905      	ldr	r1, [sp, #20]
 801501e:	eba1 0c0c 	sub.w	ip, r1, ip
 8015022:	f8a4 c004 	strh.w	ip, [r4, #4]
 8015026:	e7d0      	b.n	8014fca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8015028:	200137b2 	.word	0x200137b2
 801502c:	200137b0 	.word	0x200137b0
 8015030:	2d00      	cmp	r5, #0
 8015032:	f000 816d 	beq.w	8015310 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8015036:	9b06      	ldr	r3, [sp, #24]
 8015038:	445b      	add	r3, fp
 801503a:	461c      	mov	r4, r3
 801503c:	9b02      	ldr	r3, [sp, #8]
 801503e:	3301      	adds	r3, #1
 8015040:	f000 8166 	beq.w	8015310 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8015044:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
 8015048:	4629      	mov	r1, r5
 801504a:	9803      	ldr	r0, [sp, #12]
 801504c:	f7ff fccc 	bl	80149e8 <_ZNK8touchgfx4Rect8includesERKS0_>
 8015050:	b120      	cbz	r0, 801505c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 8015052:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8015056:	9801      	ldr	r0, [sp, #4]
 8015058:	f7ff feb0 	bl	8014dbc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801505c:	9903      	ldr	r1, [sp, #12]
 801505e:	4628      	mov	r0, r5
 8015060:	f7ff fc4f 	bl	8014902 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8015064:	2800      	cmp	r0, #0
 8015066:	f000 809c 	beq.w	80151a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 801506a:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
 801506e:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8015072:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8015076:	9309      	str	r3, [sp, #36]	; 0x24
 8015078:	fa1f f189 	uxth.w	r1, r9
 801507c:	eb01 0c03 	add.w	ip, r1, r3
 8015080:	fa1f fa8c 	uxth.w	sl, ip
 8015084:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 8015088:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 801508c:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
 8015090:	b283      	uxth	r3, r0
 8015092:	eb03 050c 	add.w	r5, r3, ip
 8015096:	b2ad      	uxth	r5, r5
 8015098:	9505      	str	r5, [sp, #20]
 801509a:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 801509e:	9504      	str	r5, [sp, #16]
 80150a0:	4548      	cmp	r0, r9
 80150a2:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
 80150a6:	f340 8099 	ble.w	80151dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 80150aa:	1a5b      	subs	r3, r3, r1
 80150ac:	b29b      	uxth	r3, r3
 80150ae:	4596      	cmp	lr, r2
 80150b0:	fa0f f08a 	sxth.w	r0, sl
 80150b4:	b21e      	sxth	r6, r3
 80150b6:	dd2e      	ble.n	8015116 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 80150b8:	9f02      	ldr	r7, [sp, #8]
 80150ba:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 80150be:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 80150c2:	9f04      	ldr	r7, [sp, #16]
 80150c4:	1a3f      	subs	r7, r7, r0
 80150c6:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
 80150ca:	fa1f fe8e 	uxth.w	lr, lr
 80150ce:	b292      	uxth	r2, r2
 80150d0:	ebae 0102 	sub.w	r1, lr, r2
 80150d4:	44a6      	add	lr, r4
 80150d6:	4402      	add	r2, r0
 80150d8:	b289      	uxth	r1, r1
 80150da:	fa0f fe8e 	sxth.w	lr, lr
 80150de:	b212      	sxth	r2, r2
 80150e0:	b20d      	sxth	r5, r1
 80150e2:	ebae 0202 	sub.w	r2, lr, r2
 80150e6:	436f      	muls	r7, r5
 80150e8:	4372      	muls	r2, r6
 80150ea:	4297      	cmp	r7, r2
 80150ec:	db09      	blt.n	8015102 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 80150ee:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
 80150f2:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
 80150f6:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80150fa:	449c      	add	ip, r3
 80150fc:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8015100:	e686      	b.n	8014e10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8015102:	4421      	add	r1, r4
 8015104:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 8015108:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
 801510c:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8015110:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8015114:	e67c      	b.n	8014e10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8015116:	9f04      	ldr	r7, [sp, #16]
 8015118:	42b8      	cmp	r0, r7
 801511a:	da27      	bge.n	801516c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 801511c:	9902      	ldr	r1, [sp, #8]
 801511e:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
 8015122:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 8015126:	eb05 010e 	add.w	r1, r5, lr
 801512a:	fa1f f881 	uxth.w	r8, r1
 801512e:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
 8015132:	4411      	add	r1, r2
 8015134:	eba1 0108 	sub.w	r1, r1, r8
 8015138:	b289      	uxth	r1, r1
 801513a:	fa0f f988 	sxth.w	r9, r8
 801513e:	eba2 020e 	sub.w	r2, r2, lr
 8015142:	fa0f f881 	sxth.w	r8, r1
 8015146:	1a3f      	subs	r7, r7, r0
 8015148:	4372      	muls	r2, r6
 801514a:	fb08 f707 	mul.w	r7, r8, r7
 801514e:	42ba      	cmp	r2, r7
 8015150:	dc06      	bgt.n	8015160 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 8015152:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
 8015156:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
 801515a:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
 801515e:	e7ca      	b.n	80150f6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 8015160:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 8015164:	4429      	add	r1, r5
 8015166:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801516a:	e651      	b.n	8014e10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801516c:	9805      	ldr	r0, [sp, #20]
 801516e:	ebaa 0000 	sub.w	r0, sl, r0
 8015172:	b280      	uxth	r0, r0
 8015174:	2d06      	cmp	r5, #6
 8015176:	fa0f fe80 	sxth.w	lr, r0
 801517a:	d817      	bhi.n	80151ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 801517c:	9b04      	ldr	r3, [sp, #16]
 801517e:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8015182:	1c6b      	adds	r3, r5, #1
 8015184:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
 8015188:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
 801518c:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8015190:	9b01      	ldr	r3, [sp, #4]
 8015192:	9801      	ldr	r0, [sp, #4]
 8015194:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8015198:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 801519c:	805a      	strh	r2, [r3, #2]
 801519e:	809e      	strh	r6, [r3, #4]
 80151a0:	80d9      	strh	r1, [r3, #6]
 80151a2:	9b02      	ldr	r3, [sp, #8]
 80151a4:	3b01      	subs	r3, #1
 80151a6:	9302      	str	r3, [sp, #8]
 80151a8:	3c08      	subs	r4, #8
 80151aa:	e747      	b.n	801503c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 80151ac:	9a02      	ldr	r2, [sp, #8]
 80151ae:	45b6      	cmp	lr, r6
 80151b0:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80151b4:	db0d      	blt.n	80151d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 80151b6:	449c      	add	ip, r3
 80151b8:	fa1f fc8c 	uxth.w	ip, ip
 80151bc:	445a      	add	r2, fp
 80151be:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 80151c2:	448c      	add	ip, r1
 80151c4:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 80151c8:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
 80151cc:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
 80151d0:	e61e      	b.n	8014e10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80151d2:	445a      	add	r2, fp
 80151d4:	4484      	add	ip, r0
 80151d6:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
 80151da:	e78f      	b.n	80150fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 80151dc:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 80151e0:	fa1f f18e 	uxth.w	r1, lr
 80151e4:	eb01 0806 	add.w	r8, r1, r6
 80151e8:	b293      	uxth	r3, r2
 80151ea:	fa1f f888 	uxth.w	r8, r8
 80151ee:	9306      	str	r3, [sp, #24]
 80151f0:	fa0f f388 	sxth.w	r3, r8
 80151f4:	9307      	str	r3, [sp, #28]
 80151f6:	9f06      	ldr	r7, [sp, #24]
 80151f8:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 80151fc:	443b      	add	r3, r7
 80151fe:	b29b      	uxth	r3, r3
 8015200:	4596      	cmp	lr, r2
 8015202:	9308      	str	r3, [sp, #32]
 8015204:	da24      	bge.n	8015250 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 8015206:	9905      	ldr	r1, [sp, #20]
 8015208:	eba3 0308 	sub.w	r3, r3, r8
 801520c:	ebaa 0401 	sub.w	r4, sl, r1
 8015210:	b2a4      	uxth	r4, r4
 8015212:	b29b      	uxth	r3, r3
 8015214:	b225      	sxth	r5, r4
 8015216:	b219      	sxth	r1, r3
 8015218:	eba2 020e 	sub.w	r2, r2, lr
 801521c:	eba9 0000 	sub.w	r0, r9, r0
 8015220:	436a      	muls	r2, r5
 8015222:	4348      	muls	r0, r1
 8015224:	4282      	cmp	r2, r0
 8015226:	9a02      	ldr	r2, [sp, #8]
 8015228:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 801522c:	445a      	add	r2, fp
 801522e:	dc06      	bgt.n	801523e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 8015230:	9b07      	ldr	r3, [sp, #28]
 8015232:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
 8015236:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
 801523a:	44a4      	add	ip, r4
 801523c:	e75e      	b.n	80150fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 801523e:	9904      	ldr	r1, [sp, #16]
 8015240:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
 8015244:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
 8015248:	4433      	add	r3, r6
 801524a:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 801524e:	e5df      	b.n	8014e10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8015250:	9f06      	ldr	r7, [sp, #24]
 8015252:	9b04      	ldr	r3, [sp, #16]
 8015254:	1bc9      	subs	r1, r1, r7
 8015256:	fa0f f78a 	sxth.w	r7, sl
 801525a:	b289      	uxth	r1, r1
 801525c:	429f      	cmp	r7, r3
 801525e:	fa0f fe81 	sxth.w	lr, r1
 8015262:	dd23      	ble.n	80152ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 8015264:	9a05      	ldr	r2, [sp, #20]
 8015266:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 801526a:	9d07      	ldr	r5, [sp, #28]
 801526c:	ebaa 0202 	sub.w	r2, sl, r2
 8015270:	b292      	uxth	r2, r2
 8015272:	eba5 0a03 	sub.w	sl, r5, r3
 8015276:	b214      	sxth	r4, r2
 8015278:	eba9 0000 	sub.w	r0, r9, r0
 801527c:	9b02      	ldr	r3, [sp, #8]
 801527e:	fb0e f000 	mul.w	r0, lr, r0
 8015282:	fb04 fa0a 	mul.w	sl, r4, sl
 8015286:	00db      	lsls	r3, r3, #3
 8015288:	4550      	cmp	r0, sl
 801528a:	445b      	add	r3, fp
 801528c:	db03      	blt.n	8015296 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 801528e:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
 8015292:	4494      	add	ip, r2
 8015294:	e732      	b.n	80150fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8015296:	9a04      	ldr	r2, [sp, #16]
 8015298:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
 801529c:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
 80152a0:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
 80152a4:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80152a8:	4431      	add	r1, r6
 80152aa:	e75c      	b.n	8015166 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 80152ac:	9b08      	ldr	r3, [sp, #32]
 80152ae:	eba3 0308 	sub.w	r3, r3, r8
 80152b2:	b29b      	uxth	r3, r3
 80152b4:	2d06      	cmp	r5, #6
 80152b6:	b218      	sxth	r0, r3
 80152b8:	d813      	bhi.n	80152e2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 80152ba:	9b07      	ldr	r3, [sp, #28]
 80152bc:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
 80152c0:	1c6b      	adds	r3, r5, #1
 80152c2:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
 80152c6:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 80152ca:	9b01      	ldr	r3, [sp, #4]
 80152cc:	9901      	ldr	r1, [sp, #4]
 80152ce:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 80152d2:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 80152d6:	805a      	strh	r2, [r3, #2]
 80152d8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80152da:	809a      	strh	r2, [r3, #4]
 80152dc:	f8a3 e006 	strh.w	lr, [r3, #6]
 80152e0:	e75f      	b.n	80151a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 80152e2:	9c02      	ldr	r4, [sp, #8]
 80152e4:	4570      	cmp	r0, lr
 80152e6:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 80152ea:	db0d      	blt.n	8015308 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 80152ec:	4431      	add	r1, r6
 80152ee:	9b06      	ldr	r3, [sp, #24]
 80152f0:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 80152f4:	b289      	uxth	r1, r1
 80152f6:	445c      	add	r4, fp
 80152f8:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80152fc:	4419      	add	r1, r3
 80152fe:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
 8015302:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
 8015306:	e583      	b.n	8014e10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8015308:	445c      	add	r4, fp
 801530a:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
 801530e:	e79b      	b.n	8015248 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 8015310:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8015314:	1e65      	subs	r5, r4, #1
 8015316:	b2ad      	uxth	r5, r5
 8015318:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 801531c:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8015320:	42b5      	cmp	r5, r6
 8015322:	d044      	beq.n	80153ae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 8015324:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8015328:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
 801532c:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8015330:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
 8015334:	4282      	cmp	r2, r0
 8015336:	d11f      	bne.n	8015378 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8015338:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 801533c:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8015340:	459c      	cmp	ip, r3
 8015342:	d119      	bne.n	8015378 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8015344:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
 8015348:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801534c:	19d8      	adds	r0, r3, r7
 801534e:	b200      	sxth	r0, r0
 8015350:	4288      	cmp	r0, r1
 8015352:	d109      	bne.n	8015368 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 8015354:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 8015358:	4413      	add	r3, r2
 801535a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801535e:	4629      	mov	r1, r5
 8015360:	9801      	ldr	r0, [sp, #4]
 8015362:	f7ff fd2b 	bl	8014dbc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8015366:	e003      	b.n	8015370 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8015368:	4411      	add	r1, r2
 801536a:	b209      	sxth	r1, r1
 801536c:	42b9      	cmp	r1, r7
 801536e:	d0f3      	beq.n	8015358 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 8015370:	3d01      	subs	r5, #1
 8015372:	b2ad      	uxth	r5, r5
 8015374:	3c08      	subs	r4, #8
 8015376:	e7d3      	b.n	8015320 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 8015378:	42b9      	cmp	r1, r7
 801537a:	d1f9      	bne.n	8015370 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 801537c:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
 8015380:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8015384:	4299      	cmp	r1, r3
 8015386:	d1f3      	bne.n	8015370 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8015388:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 801538c:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8015390:	181f      	adds	r7, r3, r0
 8015392:	b23f      	sxth	r7, r7
 8015394:	42ba      	cmp	r2, r7
 8015396:	d105      	bne.n	80153a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 8015398:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
 801539c:	440b      	add	r3, r1
 801539e:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 80153a2:	e7dc      	b.n	801535e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 80153a4:	440a      	add	r2, r1
 80153a6:	b212      	sxth	r2, r2
 80153a8:	4290      	cmp	r0, r2
 80153aa:	d1e1      	bne.n	8015370 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 80153ac:	e7f6      	b.n	801539c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 80153ae:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
 80153b2:	2e07      	cmp	r6, #7
 80153b4:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 80153b8:	d812      	bhi.n	80153e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 80153ba:	1c75      	adds	r5, r6, #1
 80153bc:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
 80153c0:	9d01      	ldr	r5, [sp, #4]
 80153c2:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 80153c6:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 80153ca:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 80153ce:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 80153d2:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 80153d6:	442c      	add	r4, r5
 80153d8:	8061      	strh	r1, [r4, #2]
 80153da:	80a2      	strh	r2, [r4, #4]
 80153dc:	80e3      	strh	r3, [r4, #6]
 80153de:	e581      	b.n	8014ee4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80153e0:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 80153e4:	3e01      	subs	r6, #1
 80153e6:	445c      	add	r4, fp
 80153e8:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 80153ec:	f04f 37ff 	mov.w	r7, #4294967295
 80153f0:	2500      	movs	r5, #0
 80153f2:	9305      	str	r3, [sp, #20]
 80153f4:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 80153f8:	9302      	str	r3, [sp, #8]
 80153fa:	1e72      	subs	r2, r6, #1
 80153fc:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8015400:	9304      	str	r3, [sp, #16]
 8015402:	4691      	mov	r9, r2
 8015404:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
 8015408:	f1b9 3fff 	cmp.w	r9, #4294967295
 801540c:	bf14      	ite	ne
 801540e:	9905      	ldrne	r1, [sp, #20]
 8015410:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 8015414:	6818      	ldr	r0, [r3, #0]
 8015416:	9207      	str	r2, [sp, #28]
 8015418:	bf18      	it	ne
 801541a:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 801541e:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8015422:	f8be 1006 	ldrh.w	r1, [lr, #6]
 8015426:	f8be 8004 	ldrh.w	r8, [lr, #4]
 801542a:	9306      	str	r3, [sp, #24]
 801542c:	fb18 f801 	smulbb	r8, r8, r1
 8015430:	6859      	ldr	r1, [r3, #4]
 8015432:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8015436:	4671      	mov	r1, lr
 8015438:	a80c      	add	r0, sp, #48	; 0x30
 801543a:	f7ff fafb 	bl	8014a34 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801543e:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8015442:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 8015446:	9b04      	ldr	r3, [sp, #16]
 8015448:	9a02      	ldr	r2, [sp, #8]
 801544a:	fb10 f001 	smulbb	r0, r0, r1
 801544e:	fb02 8803 	mla	r8, r2, r3, r8
 8015452:	eba0 0108 	sub.w	r1, r0, r8
 8015456:	f04f 0c08 	mov.w	ip, #8
 801545a:	fb90 f0fc 	sdiv	r0, r0, ip
 801545e:	4288      	cmp	r0, r1
 8015460:	dc20      	bgt.n	80154a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 8015462:	4551      	cmp	r1, sl
 8015464:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8015468:	da03      	bge.n	8015472 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 801546a:	b1d9      	cbz	r1, 80154a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 801546c:	468a      	mov	sl, r1
 801546e:	464f      	mov	r7, r9
 8015470:	4635      	mov	r5, r6
 8015472:	f109 39ff 	add.w	r9, r9, #4294967295
 8015476:	f119 0f02 	cmn.w	r9, #2
 801547a:	d1c5      	bne.n	8015408 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 801547c:	4616      	mov	r6, r2
 801547e:	3201      	adds	r2, #1
 8015480:	f1a4 0408 	sub.w	r4, r4, #8
 8015484:	d1b6      	bne.n	80153f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 8015486:	9b01      	ldr	r3, [sp, #4]
 8015488:	b2ac      	uxth	r4, r5
 801548a:	00ed      	lsls	r5, r5, #3
 801548c:	1958      	adds	r0, r3, r5
 801548e:	1c7b      	adds	r3, r7, #1
 8015490:	d10b      	bne.n	80154aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 8015492:	4601      	mov	r1, r0
 8015494:	9803      	ldr	r0, [sp, #12]
 8015496:	f7ff facd 	bl	8014a34 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801549a:	4621      	mov	r1, r4
 801549c:	9801      	ldr	r0, [sp, #4]
 801549e:	f7ff fc8d 	bl	8014dbc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80154a2:	e4b5      	b.n	8014e10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80154a4:	464f      	mov	r7, r9
 80154a6:	4635      	mov	r5, r6
 80154a8:	e7ed      	b.n	8015486 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 80154aa:	9b01      	ldr	r3, [sp, #4]
 80154ac:	00ff      	lsls	r7, r7, #3
 80154ae:	19d9      	adds	r1, r3, r7
 80154b0:	f7ff fac0 	bl	8014a34 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80154b4:	9b03      	ldr	r3, [sp, #12]
 80154b6:	cb03      	ldmia	r3!, {r0, r1}
 80154b8:	445f      	add	r7, fp
 80154ba:	445d      	add	r5, fp
 80154bc:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
 80154c0:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
 80154c4:	f855 0fac 	ldr.w	r0, [r5, #172]!
 80154c8:	9b03      	ldr	r3, [sp, #12]
 80154ca:	6869      	ldr	r1, [r5, #4]
 80154cc:	c303      	stmia	r3!, {r0, r1}
 80154ce:	e7e4      	b.n	801549a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

080154d0 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 80154d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80154d4:	f500 7698 	add.w	r6, r0, #304	; 0x130
 80154d8:	b09b      	sub	sp, #108	; 0x6c
 80154da:	4604      	mov	r4, r0
 80154dc:	4630      	mov	r0, r6
 80154de:	f7fa fa20 	bl	800f922 <_ZNK8touchgfx4Rect7isEmptyEv>
 80154e2:	4605      	mov	r5, r0
 80154e4:	b948      	cbnz	r0, 80154fa <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 80154e6:	6823      	ldr	r3, [r4, #0]
 80154e8:	e896 0006 	ldmia.w	r6, {r1, r2}
 80154ec:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80154ee:	4620      	mov	r0, r4
 80154f0:	4798      	blx	r3
 80154f2:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 80154f6:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 80154fa:	4bc6      	ldr	r3, [pc, #792]	; (8015814 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 80154fc:	681b      	ldr	r3, [r3, #0]
 80154fe:	2b00      	cmp	r3, #0
 8015500:	d03f      	beq.n	8015582 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8015502:	4dc5      	ldr	r5, [pc, #788]	; (8015818 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 8015504:	4628      	mov	r0, r5
 8015506:	f7fa fa0c 	bl	800f922 <_ZNK8touchgfx4Rect7isEmptyEv>
 801550a:	4606      	mov	r6, r0
 801550c:	2800      	cmp	r0, #0
 801550e:	d138      	bne.n	8015582 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8015510:	4628      	mov	r0, r5
 8015512:	f7ff f907 	bl	8014724 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8015516:	6823      	ldr	r3, [r4, #0]
 8015518:	6829      	ldr	r1, [r5, #0]
 801551a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801551c:	686a      	ldr	r2, [r5, #4]
 801551e:	4620      	mov	r0, r4
 8015520:	4798      	blx	r3
 8015522:	802e      	strh	r6, [r5, #0]
 8015524:	806e      	strh	r6, [r5, #2]
 8015526:	80ae      	strh	r6, [r5, #4]
 8015528:	80ee      	strh	r6, [r5, #6]
 801552a:	f10d 0824 	add.w	r8, sp, #36	; 0x24
 801552e:	4dbb      	ldr	r5, [pc, #748]	; (801581c <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8015530:	4640      	mov	r0, r8
 8015532:	f7ff fbeb 	bl	8014d0c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8015536:	882e      	ldrh	r6, [r5, #0]
 8015538:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 801553c:	4633      	mov	r3, r6
 801553e:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8015542:	42bb      	cmp	r3, r7
 8015544:	d224      	bcs.n	8015590 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8015546:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 801554a:	2907      	cmp	r1, #7
 801554c:	d816      	bhi.n	801557c <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 801554e:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8015552:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 8015556:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 801555a:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 801555e:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 8015562:	1c4a      	adds	r2, r1, #1
 8015564:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 8015568:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 801556c:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 8015570:	f8a2 a002 	strh.w	sl, [r2, #2]
 8015574:	f8a2 e004 	strh.w	lr, [r2, #4]
 8015578:	f8a2 c006 	strh.w	ip, [r2, #6]
 801557c:	3301      	adds	r3, #1
 801557e:	b29b      	uxth	r3, r3
 8015580:	e7df      	b.n	8015542 <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 8015582:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8015586:	2b00      	cmp	r3, #0
 8015588:	d1cf      	bne.n	801552a <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 801558a:	b01b      	add	sp, #108	; 0x6c
 801558c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015590:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
 8015594:	42b3      	cmp	r3, r6
 8015596:	d90c      	bls.n	80155b2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 8015598:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 801559c:	6822      	ldr	r2, [r4, #0]
 801559e:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
 80155a2:	6c17      	ldr	r7, [r2, #64]	; 0x40
 80155a4:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
 80155a8:	4620      	mov	r0, r4
 80155aa:	3601      	adds	r6, #1
 80155ac:	47b8      	blx	r7
 80155ae:	b2b6      	uxth	r6, r6
 80155b0:	e7ee      	b.n	8015590 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 80155b2:	4a9b      	ldr	r2, [pc, #620]	; (8015820 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 80155b4:	6813      	ldr	r3, [r2, #0]
 80155b6:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 80155ba:	2b01      	cmp	r3, #1
 80155bc:	4691      	mov	r9, r2
 80155be:	f040 80e2 	bne.w	8015786 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 80155c2:	8829      	ldrh	r1, [r5, #0]
 80155c4:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 80155c8:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 80155cc:	33ae      	adds	r3, #174	; 0xae
 80155ce:	2600      	movs	r6, #0
 80155d0:	428f      	cmp	r7, r1
 80155d2:	f103 0308 	add.w	r3, r3, #8
 80155d6:	dd0a      	ble.n	80155ee <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 80155d8:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 80155dc:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 80155e0:	4402      	add	r2, r0
 80155e2:	b212      	sxth	r2, r2
 80155e4:	4296      	cmp	r6, r2
 80155e6:	bfb8      	it	lt
 80155e8:	4616      	movlt	r6, r2
 80155ea:	3101      	adds	r1, #1
 80155ec:	e7f0      	b.n	80155d0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 80155ee:	4b8d      	ldr	r3, [pc, #564]	; (8015824 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 80155f0:	f8df 922c 	ldr.w	r9, [pc, #556]	; 8015820 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 80155f4:	881b      	ldrh	r3, [r3, #0]
 80155f6:	2b0f      	cmp	r3, #15
 80155f8:	bf88      	it	hi
 80155fa:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 80155fe:	f04f 0300 	mov.w	r3, #0
 8015602:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8015606:	bf98      	it	ls
 8015608:	f04f 0b01 	movls.w	fp, #1
 801560c:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 8015610:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 8015614:	4b82      	ldr	r3, [pc, #520]	; (8015820 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8015616:	4438      	add	r0, r7
 8015618:	b207      	sxth	r7, r0
 801561a:	6818      	ldr	r0, [r3, #0]
 801561c:	42b7      	cmp	r7, r6
 801561e:	6803      	ldr	r3, [r0, #0]
 8015620:	f280 8083 	bge.w	801572a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8015624:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8015628:	4798      	blx	r3
 801562a:	eb07 030b 	add.w	r3, r7, fp
 801562e:	4298      	cmp	r0, r3
 8015630:	da07      	bge.n	8015642 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8015632:	42b0      	cmp	r0, r6
 8015634:	da05      	bge.n	8015642 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8015636:	4287      	cmp	r7, r0
 8015638:	dd6c      	ble.n	8015714 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 801563a:	2f00      	cmp	r7, #0
 801563c:	dd6a      	ble.n	8015714 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 801563e:	4630      	mov	r0, r6
 8015640:	e004      	b.n	801564c <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 8015642:	4287      	cmp	r7, r0
 8015644:	dcfb      	bgt.n	801563e <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 8015646:	42b0      	cmp	r0, r6
 8015648:	bfa8      	it	ge
 801564a:	4630      	movge	r0, r6
 801564c:	4b76      	ldr	r3, [pc, #472]	; (8015828 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 801564e:	f8ad 7016 	strh.w	r7, [sp, #22]
 8015652:	1bc0      	subs	r0, r0, r7
 8015654:	f9b3 3000 	ldrsh.w	r3, [r3]
 8015658:	882f      	ldrh	r7, [r5, #0]
 801565a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801565e:	2200      	movs	r2, #0
 8015660:	f8ad 2014 	strh.w	r2, [sp, #20]
 8015664:	f8ad 001a 	strh.w	r0, [sp, #26]
 8015668:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 801566c:	42bb      	cmp	r3, r7
 801566e:	d9cd      	bls.n	801560c <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8015670:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 8015674:	ab07      	add	r3, sp, #28
 8015676:	f852 0fac 	ldr.w	r0, [r2, #172]!
 801567a:	6851      	ldr	r1, [r2, #4]
 801567c:	c303      	stmia	r3!, {r0, r1}
 801567e:	a905      	add	r1, sp, #20
 8015680:	a807      	add	r0, sp, #28
 8015682:	f7ff f93e 	bl	8014902 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8015686:	2800      	cmp	r0, #0
 8015688:	d04c      	beq.n	8015724 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 801568a:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 801568e:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8015692:	f8bd a020 	ldrh.w	sl, [sp, #32]
 8015696:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 801569a:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 801569e:	9302      	str	r3, [sp, #8]
 80156a0:	4686      	mov	lr, r0
 80156a2:	4290      	cmp	r0, r2
 80156a4:	4450      	add	r0, sl
 80156a6:	f8bd a018 	ldrh.w	sl, [sp, #24]
 80156aa:	bfb8      	it	lt
 80156ac:	4696      	movlt	lr, r2
 80156ae:	4452      	add	r2, sl
 80156b0:	4299      	cmp	r1, r3
 80156b2:	b280      	uxth	r0, r0
 80156b4:	b292      	uxth	r2, r2
 80156b6:	468c      	mov	ip, r1
 80156b8:	fa0f fa82 	sxth.w	sl, r2
 80156bc:	bfb8      	it	lt
 80156be:	469c      	movlt	ip, r3
 80156c0:	b203      	sxth	r3, r0
 80156c2:	4553      	cmp	r3, sl
 80156c4:	bfb8      	it	lt
 80156c6:	4602      	movlt	r2, r0
 80156c8:	eba2 020e 	sub.w	r2, r2, lr
 80156cc:	f8ad 2020 	strh.w	r2, [sp, #32]
 80156d0:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 80156d4:	9b02      	ldr	r3, [sp, #8]
 80156d6:	f8ad e01c 	strh.w	lr, [sp, #28]
 80156da:	4411      	add	r1, r2
 80156dc:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 80156e0:	f8ad c01e 	strh.w	ip, [sp, #30]
 80156e4:	4413      	add	r3, r2
 80156e6:	b289      	uxth	r1, r1
 80156e8:	b29b      	uxth	r3, r3
 80156ea:	b208      	sxth	r0, r1
 80156ec:	b21a      	sxth	r2, r3
 80156ee:	4290      	cmp	r0, r2
 80156f0:	bfb8      	it	lt
 80156f2:	460b      	movlt	r3, r1
 80156f4:	eba3 030c 	sub.w	r3, r3, ip
 80156f8:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80156fc:	a807      	add	r0, sp, #28
 80156fe:	f7fa f910 	bl	800f922 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015702:	b920      	cbnz	r0, 801570e <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 8015704:	6823      	ldr	r3, [r4, #0]
 8015706:	a907      	add	r1, sp, #28
 8015708:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801570a:	4620      	mov	r0, r4
 801570c:	4798      	blx	r3
 801570e:	3701      	adds	r7, #1
 8015710:	b2bf      	uxth	r7, r7
 8015712:	e7a9      	b.n	8015668 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 8015714:	f8d9 0000 	ldr.w	r0, [r9]
 8015718:	6803      	ldr	r3, [r0, #0]
 801571a:	2101      	movs	r1, #1
 801571c:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8015720:	4798      	blx	r3
 8015722:	e773      	b.n	801560c <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8015724:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8015728:	e7e8      	b.n	80156fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 801572a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801572c:	4798      	blx	r3
 801572e:	4b3f      	ldr	r3, [pc, #252]	; (801582c <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 8015730:	781b      	ldrb	r3, [r3, #0]
 8015732:	2b00      	cmp	r3, #0
 8015734:	f43f af29 	beq.w	801558a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8015738:	2300      	movs	r3, #0
 801573a:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
 801573e:	882b      	ldrh	r3, [r5, #0]
 8015740:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 8015744:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8015748:	42ab      	cmp	r3, r5
 801574a:	f4bf af1e 	bcs.w	801558a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 801574e:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
 8015752:	2907      	cmp	r1, #7
 8015754:	d814      	bhi.n	8015780 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 8015756:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 801575a:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 801575e:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 8015762:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 8015766:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 801576a:	1c4a      	adds	r2, r1, #1
 801576c:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
 8015770:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 8015774:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 8015778:	f8a2 c002 	strh.w	ip, [r2, #2]
 801577c:	8097      	strh	r7, [r2, #4]
 801577e:	80d6      	strh	r6, [r2, #6]
 8015780:	3301      	adds	r3, #1
 8015782:	b29b      	uxth	r3, r3
 8015784:	e7e0      	b.n	8015748 <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 8015786:	2b02      	cmp	r3, #2
 8015788:	f040 8133 	bne.w	80159f2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 801578c:	4b28      	ldr	r3, [pc, #160]	; (8015830 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 801578e:	781b      	ldrb	r3, [r3, #0]
 8015790:	2b01      	cmp	r3, #1
 8015792:	f104 0aac 	add.w	sl, r4, #172	; 0xac
 8015796:	f000 8098 	beq.w	80158ca <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 801579a:	882a      	ldrh	r2, [r5, #0]
 801579c:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
 80157a0:	3201      	adds	r2, #1
 80157a2:	b292      	uxth	r2, r2
 80157a4:	2900      	cmp	r1, #0
 80157a6:	d0c2      	beq.n	801572e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 80157a8:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
 80157ac:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
 80157b0:	441e      	add	r6, r3
 80157b2:	b236      	sxth	r6, r6
 80157b4:	4694      	mov	ip, r2
 80157b6:	f04f 0900 	mov.w	r9, #0
 80157ba:	fa1f f38c 	uxth.w	r3, ip
 80157be:	4299      	cmp	r1, r3
 80157c0:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 80157c4:	f240 80bf 	bls.w	8015946 <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 80157c8:	4427      	add	r7, r4
 80157ca:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 80157ce:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
 80157d2:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
 80157d6:	4283      	cmp	r3, r0
 80157d8:	f340 80a1 	ble.w	801591e <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 80157dc:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
 80157e0:	4406      	add	r6, r0
 80157e2:	b236      	sxth	r6, r6
 80157e4:	429e      	cmp	r6, r3
 80157e6:	bfa8      	it	ge
 80157e8:	461e      	movge	r6, r3
 80157ea:	46e1      	mov	r9, ip
 80157ec:	f10c 0c01 	add.w	ip, ip, #1
 80157f0:	e7e3      	b.n	80157ba <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 80157f2:	d10a      	bne.n	801580a <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 80157f4:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
 80157f8:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
 80157fc:	4562      	cmp	r2, ip
 80157fe:	bfb8      	it	lt
 8015800:	4662      	movlt	r2, ip
 8015802:	4288      	cmp	r0, r1
 8015804:	bfb8      	it	lt
 8015806:	461f      	movlt	r7, r3
 8015808:	e087      	b.n	801591a <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 801580a:	428a      	cmp	r2, r1
 801580c:	bfb8      	it	lt
 801580e:	460a      	movlt	r2, r1
 8015810:	e083      	b.n	801591a <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8015812:	bf00      	nop
 8015814:	200137fc 	.word	0x200137fc
 8015818:	20013808 	.word	0x20013808
 801581c:	20000088 	.word	0x20000088
 8015820:	200137bc 	.word	0x200137bc
 8015824:	200137b2 	.word	0x200137b2
 8015828:	200137b0 	.word	0x200137b0
 801582c:	200137ba 	.word	0x200137ba
 8015830:	200137b4 	.word	0x200137b4
 8015834:	19a1      	adds	r1, r4, r6
 8015836:	ab07      	add	r3, sp, #28
 8015838:	f851 0fac 	ldr.w	r0, [r1, #172]!
 801583c:	6849      	ldr	r1, [r1, #4]
 801583e:	c303      	stmia	r3!, {r0, r1}
 8015840:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8015844:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8015848:	2b13      	cmp	r3, #19
 801584a:	bfd8      	it	le
 801584c:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8015850:	f8ad 201c 	strh.w	r2, [sp, #28]
 8015854:	440b      	add	r3, r1
 8015856:	1a9b      	subs	r3, r3, r2
 8015858:	a807      	add	r0, sp, #28
 801585a:	f8ad 3020 	strh.w	r3, [sp, #32]
 801585e:	f7fe ff7b 	bl	8014758 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015862:	a807      	add	r0, sp, #28
 8015864:	f7fa f85d 	bl	800f922 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015868:	bb78      	cbnz	r0, 80158ca <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 801586a:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 801586e:	f8d9 0000 	ldr.w	r0, [r9]
 8015872:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8015876:	f8d0 e000 	ldr.w	lr, [r0]
 801587a:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 801587e:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8015882:	f1bc 0f14 	cmp.w	ip, #20
 8015886:	bfa8      	it	ge
 8015888:	f04f 0c14 	movge.w	ip, #20
 801588c:	fa1f fc8c 	uxth.w	ip, ip
 8015890:	f8cd c000 	str.w	ip, [sp]
 8015894:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
 8015898:	47d8      	blx	fp
 801589a:	4683      	mov	fp, r0
 801589c:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 80158a0:	a807      	add	r0, sp, #28
 80158a2:	f7fe ff3f 	bl	8014724 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 80158a6:	6823      	ldr	r3, [r4, #0]
 80158a8:	4426      	add	r6, r4
 80158aa:	4620      	mov	r0, r4
 80158ac:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80158ae:	a907      	add	r1, sp, #28
 80158b0:	4798      	blx	r3
 80158b2:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 80158b6:	eba0 000b 	sub.w	r0, r0, fp
 80158ba:	b200      	sxth	r0, r0
 80158bc:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
 80158c0:	b918      	cbnz	r0, 80158ca <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 80158c2:	b2b9      	uxth	r1, r7
 80158c4:	4650      	mov	r0, sl
 80158c6:	f7ff fa79 	bl	8014dbc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80158ca:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
 80158ce:	f1bb 0f00 	cmp.w	fp, #0
 80158d2:	f43f af2c 	beq.w	801572e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 80158d6:	882b      	ldrh	r3, [r5, #0]
 80158d8:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
 80158dc:	3301      	adds	r3, #1
 80158de:	b29b      	uxth	r3, r3
 80158e0:	2700      	movs	r7, #0
 80158e2:	b299      	uxth	r1, r3
 80158e4:	458b      	cmp	fp, r1
 80158e6:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 80158ea:	d9a3      	bls.n	8015834 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 80158ec:	4426      	add	r6, r4
 80158ee:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 80158f2:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
 80158f6:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 80158fa:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
 80158fe:	4408      	add	r0, r1
 8015900:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
 8015904:	4461      	add	r1, ip
 8015906:	b200      	sxth	r0, r0
 8015908:	b209      	sxth	r1, r1
 801590a:	4288      	cmp	r0, r1
 801590c:	f6bf af71 	bge.w	80157f2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 8015910:	4584      	cmp	ip, r0
 8015912:	4662      	mov	r2, ip
 8015914:	461f      	mov	r7, r3
 8015916:	bfb8      	it	lt
 8015918:	4602      	movlt	r2, r0
 801591a:	3301      	adds	r3, #1
 801591c:	e7e1      	b.n	80158e2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 801591e:	d10e      	bne.n	801593e <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 8015920:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
 8015924:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
 8015928:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
 801592c:	4473      	add	r3, lr
 801592e:	b21b      	sxth	r3, r3
 8015930:	429e      	cmp	r6, r3
 8015932:	bfa8      	it	ge
 8015934:	461e      	movge	r6, r3
 8015936:	4287      	cmp	r7, r0
 8015938:	bfb8      	it	lt
 801593a:	46e1      	movlt	r9, ip
 801593c:	e756      	b.n	80157ec <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 801593e:	4286      	cmp	r6, r0
 8015940:	bfa8      	it	ge
 8015942:	4606      	movge	r6, r0
 8015944:	e752      	b.n	80157ec <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8015946:	eb0a 0007 	add.w	r0, sl, r7
 801594a:	4427      	add	r7, r4
 801594c:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8015950:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
 8015954:	f1bb 0f13 	cmp.w	fp, #19
 8015958:	bfde      	ittt	le
 801595a:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
 801595e:	445e      	addle	r6, fp
 8015960:	b236      	sxthle	r6, r6
 8015962:	f7f9 ffde 	bl	800f922 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015966:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 801596a:	2800      	cmp	r0, #0
 801596c:	f47f af1a 	bne.w	80157a4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 8015970:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
 8015974:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8015978:	482a      	ldr	r0, [pc, #168]	; (8015a24 <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 801597a:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
 801597e:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
 8015982:	6800      	ldr	r0, [r0, #0]
 8015984:	f8ad 101c 	strh.w	r1, [sp, #28]
 8015988:	1ab6      	subs	r6, r6, r2
 801598a:	2e14      	cmp	r6, #20
 801598c:	f8ad 201e 	strh.w	r2, [sp, #30]
 8015990:	f8ad 3020 	strh.w	r3, [sp, #32]
 8015994:	bfa8      	it	ge
 8015996:	2614      	movge	r6, #20
 8015998:	f8d0 c000 	ldr.w	ip, [r0]
 801599c:	b2b6      	uxth	r6, r6
 801599e:	fa1f fb8b 	uxth.w	fp, fp
 80159a2:	455e      	cmp	r6, fp
 80159a4:	bf94      	ite	ls
 80159a6:	9600      	strls	r6, [sp, #0]
 80159a8:	f8cd b000 	strhi.w	fp, [sp]
 80159ac:	b292      	uxth	r2, r2
 80159ae:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
 80159b2:	b29b      	uxth	r3, r3
 80159b4:	b289      	uxth	r1, r1
 80159b6:	47b0      	blx	r6
 80159b8:	6823      	ldr	r3, [r4, #0]
 80159ba:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 80159be:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80159c0:	a907      	add	r1, sp, #28
 80159c2:	4620      	mov	r0, r4
 80159c4:	4798      	blx	r3
 80159c6:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 80159ca:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
 80159ce:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
 80159d2:	1a5b      	subs	r3, r3, r1
 80159d4:	440a      	add	r2, r1
 80159d6:	b21b      	sxth	r3, r3
 80159d8:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
 80159dc:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
 80159e0:	2b00      	cmp	r3, #0
 80159e2:	f47f aeda 	bne.w	801579a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 80159e6:	fa1f f189 	uxth.w	r1, r9
 80159ea:	4650      	mov	r0, sl
 80159ec:	f7ff f9e6 	bl	8014dbc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80159f0:	e6d3      	b.n	801579a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 80159f2:	882e      	ldrh	r6, [r5, #0]
 80159f4:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 80159f8:	42b3      	cmp	r3, r6
 80159fa:	f67f ae98 	bls.w	801572e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 80159fe:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 8015a02:	ab07      	add	r3, sp, #28
 8015a04:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8015a08:	6851      	ldr	r1, [r2, #4]
 8015a0a:	c303      	stmia	r3!, {r0, r1}
 8015a0c:	a807      	add	r0, sp, #28
 8015a0e:	f7f9 ff88 	bl	800f922 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015a12:	b920      	cbnz	r0, 8015a1e <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 8015a14:	6823      	ldr	r3, [r4, #0]
 8015a16:	a907      	add	r1, sp, #28
 8015a18:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8015a1a:	4620      	mov	r0, r4
 8015a1c:	4798      	blx	r3
 8015a1e:	3601      	adds	r6, #1
 8015a20:	b2b6      	uxth	r6, r6
 8015a22:	e7e7      	b.n	80159f4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 8015a24:	200137bc 	.word	0x200137bc

08015a28 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8015a28:	4b03      	ldr	r3, [pc, #12]	; (8015a38 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8015a2a:	2200      	movs	r2, #0
 8015a2c:	801a      	strh	r2, [r3, #0]
 8015a2e:	805a      	strh	r2, [r3, #2]
 8015a30:	809a      	strh	r2, [r3, #4]
 8015a32:	80da      	strh	r2, [r3, #6]
 8015a34:	4770      	bx	lr
 8015a36:	bf00      	nop
 8015a38:	20013808 	.word	0x20013808

08015a3c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 8015a3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015a40:	4606      	mov	r6, r0
 8015a42:	b09d      	sub	sp, #116	; 0x74
 8015a44:	a803      	add	r0, sp, #12
 8015a46:	4614      	mov	r4, r2
 8015a48:	468a      	mov	sl, r1
 8015a4a:	461d      	mov	r5, r3
 8015a4c:	f000 feca 	bl	80167e4 <_ZN8touchgfx12TextProviderC1Ev>
 8015a50:	6833      	ldr	r3, [r6, #0]
 8015a52:	4630      	mov	r0, r6
 8015a54:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8015a56:	4798      	blx	r3
 8015a58:	6833      	ldr	r3, [r6, #0]
 8015a5a:	4607      	mov	r7, r0
 8015a5c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8015a5e:	4630      	mov	r0, r6
 8015a60:	4798      	blx	r3
 8015a62:	462a      	mov	r2, r5
 8015a64:	9000      	str	r0, [sp, #0]
 8015a66:	4621      	mov	r1, r4
 8015a68:	463b      	mov	r3, r7
 8015a6a:	a803      	add	r0, sp, #12
 8015a6c:	f000 ff15 	bl	801689a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015a70:	2500      	movs	r5, #0
 8015a72:	462c      	mov	r4, r5
 8015a74:	46a9      	mov	r9, r5
 8015a76:	46a8      	mov	r8, r5
 8015a78:	f242 0b0b 	movw	fp, #8203	; 0x200b
 8015a7c:	2300      	movs	r3, #0
 8015a7e:	9302      	str	r3, [sp, #8]
 8015a80:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8015a84:	429c      	cmp	r4, r3
 8015a86:	d002      	beq.n	8015a8e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8015a88:	455c      	cmp	r4, fp
 8015a8a:	bf18      	it	ne
 8015a8c:	4625      	movne	r5, r4
 8015a8e:	ab02      	add	r3, sp, #8
 8015a90:	4632      	mov	r2, r6
 8015a92:	4651      	mov	r1, sl
 8015a94:	a803      	add	r0, sp, #12
 8015a96:	f001 fa03 	bl	8016ea0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8015a9a:	4604      	mov	r4, r0
 8015a9c:	b108      	cbz	r0, 8015aa2 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 8015a9e:	280a      	cmp	r0, #10
 8015aa0:	d10a      	bne.n	8015ab8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8015aa2:	45c1      	cmp	r9, r8
 8015aa4:	bf38      	it	cc
 8015aa6:	46c1      	movcc	r9, r8
 8015aa8:	f04f 0800 	mov.w	r8, #0
 8015aac:	2c00      	cmp	r4, #0
 8015aae:	d1e5      	bne.n	8015a7c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8015ab0:	4648      	mov	r0, r9
 8015ab2:	b01d      	add	sp, #116	; 0x74
 8015ab4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015ab8:	9a02      	ldr	r2, [sp, #8]
 8015aba:	2a00      	cmp	r2, #0
 8015abc:	d0de      	beq.n	8015a7c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8015abe:	7b57      	ldrb	r7, [r2, #13]
 8015ac0:	6833      	ldr	r3, [r6, #0]
 8015ac2:	8894      	ldrh	r4, [r2, #4]
 8015ac4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015ac6:	007f      	lsls	r7, r7, #1
 8015ac8:	f407 7080 	and.w	r0, r7, #256	; 0x100
 8015acc:	7a97      	ldrb	r7, [r2, #10]
 8015ace:	4629      	mov	r1, r5
 8015ad0:	4307      	orrs	r7, r0
 8015ad2:	4630      	mov	r0, r6
 8015ad4:	4798      	blx	r3
 8015ad6:	4438      	add	r0, r7
 8015ad8:	4480      	add	r8, r0
 8015ada:	fa1f f888 	uxth.w	r8, r8
 8015ade:	e7e5      	b.n	8015aac <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08015ae0 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8015ae0:	b508      	push	{r3, lr}
 8015ae2:	6803      	ldr	r3, [r0, #0]
 8015ae4:	68db      	ldr	r3, [r3, #12]
 8015ae6:	4798      	blx	r3
 8015ae8:	b128      	cbz	r0, 8015af6 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 8015aea:	7b43      	ldrb	r3, [r0, #13]
 8015aec:	7a80      	ldrb	r0, [r0, #10]
 8015aee:	005b      	lsls	r3, r3, #1
 8015af0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8015af4:	4318      	orrs	r0, r3
 8015af6:	bd08      	pop	{r3, pc}

08015af8 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8015af8:	b40e      	push	{r1, r2, r3}
 8015afa:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015afc:	b09e      	sub	sp, #120	; 0x78
 8015afe:	ab23      	add	r3, sp, #140	; 0x8c
 8015b00:	4605      	mov	r5, r0
 8015b02:	f853 4b04 	ldr.w	r4, [r3], #4
 8015b06:	9303      	str	r3, [sp, #12]
 8015b08:	a805      	add	r0, sp, #20
 8015b0a:	f000 fe6b 	bl	80167e4 <_ZN8touchgfx12TextProviderC1Ev>
 8015b0e:	682b      	ldr	r3, [r5, #0]
 8015b10:	4628      	mov	r0, r5
 8015b12:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8015b14:	4798      	blx	r3
 8015b16:	682b      	ldr	r3, [r5, #0]
 8015b18:	4606      	mov	r6, r0
 8015b1a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8015b1c:	4628      	mov	r0, r5
 8015b1e:	4798      	blx	r3
 8015b20:	4633      	mov	r3, r6
 8015b22:	ae1e      	add	r6, sp, #120	; 0x78
 8015b24:	4621      	mov	r1, r4
 8015b26:	9000      	str	r0, [sp, #0]
 8015b28:	9a03      	ldr	r2, [sp, #12]
 8015b2a:	2400      	movs	r4, #0
 8015b2c:	a805      	add	r0, sp, #20
 8015b2e:	f000 feb4 	bl	801689a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015b32:	f846 4d68 	str.w	r4, [r6, #-104]!
 8015b36:	462a      	mov	r2, r5
 8015b38:	4633      	mov	r3, r6
 8015b3a:	4621      	mov	r1, r4
 8015b3c:	a805      	add	r0, sp, #20
 8015b3e:	f001 f9af 	bl	8016ea0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8015b42:	b1f0      	cbz	r0, 8015b82 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8015b44:	280a      	cmp	r0, #10
 8015b46:	d018      	beq.n	8015b7a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8015b48:	9f04      	ldr	r7, [sp, #16]
 8015b4a:	b1b7      	cbz	r7, 8015b7a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8015b4c:	7b78      	ldrb	r0, [r7, #13]
 8015b4e:	7a3b      	ldrb	r3, [r7, #8]
 8015b50:	88ea      	ldrh	r2, [r5, #6]
 8015b52:	00c1      	lsls	r1, r0, #3
 8015b54:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8015b58:	4319      	orrs	r1, r3
 8015b5a:	0643      	lsls	r3, r0, #25
 8015b5c:	bf44      	itt	mi
 8015b5e:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 8015b62:	b219      	sxthmi	r1, r3
 8015b64:	0100      	lsls	r0, r0, #4
 8015b66:	79fb      	ldrb	r3, [r7, #7]
 8015b68:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8015b6c:	4303      	orrs	r3, r0
 8015b6e:	4413      	add	r3, r2
 8015b70:	1a5b      	subs	r3, r3, r1
 8015b72:	b21b      	sxth	r3, r3
 8015b74:	429c      	cmp	r4, r3
 8015b76:	bfb8      	it	lt
 8015b78:	461c      	movlt	r4, r3
 8015b7a:	4633      	mov	r3, r6
 8015b7c:	462a      	mov	r2, r5
 8015b7e:	2100      	movs	r1, #0
 8015b80:	e7dc      	b.n	8015b3c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8015b82:	b2a0      	uxth	r0, r4
 8015b84:	b01e      	add	sp, #120	; 0x78
 8015b86:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8015b8a:	b003      	add	sp, #12
 8015b8c:	4770      	bx	lr

08015b8e <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 8015b8e:	7a43      	ldrb	r3, [r0, #9]
 8015b90:	8880      	ldrh	r0, [r0, #4]
 8015b92:	4418      	add	r0, r3
 8015b94:	b280      	uxth	r0, r0
 8015b96:	4770      	bx	lr

08015b98 <_ZNK8touchgfx4Font13getFontHeightEv>:
 8015b98:	6803      	ldr	r3, [r0, #0]
 8015b9a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8015b9c:	4718      	bx	r3

08015b9e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 8015b9e:	b40e      	push	{r1, r2, r3}
 8015ba0:	b570      	push	{r4, r5, r6, lr}
 8015ba2:	b09d      	sub	sp, #116	; 0x74
 8015ba4:	ab21      	add	r3, sp, #132	; 0x84
 8015ba6:	4604      	mov	r4, r0
 8015ba8:	f853 5b04 	ldr.w	r5, [r3], #4
 8015bac:	9302      	str	r3, [sp, #8]
 8015bae:	a803      	add	r0, sp, #12
 8015bb0:	f000 fe18 	bl	80167e4 <_ZN8touchgfx12TextProviderC1Ev>
 8015bb4:	6823      	ldr	r3, [r4, #0]
 8015bb6:	4620      	mov	r0, r4
 8015bb8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8015bba:	4798      	blx	r3
 8015bbc:	6823      	ldr	r3, [r4, #0]
 8015bbe:	4606      	mov	r6, r0
 8015bc0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8015bc2:	4620      	mov	r0, r4
 8015bc4:	4798      	blx	r3
 8015bc6:	4633      	mov	r3, r6
 8015bc8:	9000      	str	r0, [sp, #0]
 8015bca:	9a02      	ldr	r2, [sp, #8]
 8015bcc:	4629      	mov	r1, r5
 8015bce:	a803      	add	r0, sp, #12
 8015bd0:	f000 fe63 	bl	801689a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015bd4:	a803      	add	r0, sp, #12
 8015bd6:	f001 fa31 	bl	801703c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8015bda:	2401      	movs	r4, #1
 8015bdc:	b2a3      	uxth	r3, r4
 8015bde:	b140      	cbz	r0, 8015bf2 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 8015be0:	280a      	cmp	r0, #10
 8015be2:	bf08      	it	eq
 8015be4:	3301      	addeq	r3, #1
 8015be6:	a803      	add	r0, sp, #12
 8015be8:	bf08      	it	eq
 8015bea:	b21c      	sxtheq	r4, r3
 8015bec:	f001 fa26 	bl	801703c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8015bf0:	e7f4      	b.n	8015bdc <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8015bf2:	4618      	mov	r0, r3
 8015bf4:	b01d      	add	sp, #116	; 0x74
 8015bf6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015bfa:	b003      	add	sp, #12
 8015bfc:	4770      	bx	lr

08015bfe <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 8015bfe:	b40e      	push	{r1, r2, r3}
 8015c00:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015c02:	b09e      	sub	sp, #120	; 0x78
 8015c04:	ab23      	add	r3, sp, #140	; 0x8c
 8015c06:	4604      	mov	r4, r0
 8015c08:	f853 5b04 	ldr.w	r5, [r3], #4
 8015c0c:	9303      	str	r3, [sp, #12]
 8015c0e:	a805      	add	r0, sp, #20
 8015c10:	f000 fde8 	bl	80167e4 <_ZN8touchgfx12TextProviderC1Ev>
 8015c14:	6823      	ldr	r3, [r4, #0]
 8015c16:	4620      	mov	r0, r4
 8015c18:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8015c1a:	4798      	blx	r3
 8015c1c:	6823      	ldr	r3, [r4, #0]
 8015c1e:	4606      	mov	r6, r0
 8015c20:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8015c22:	4620      	mov	r0, r4
 8015c24:	4798      	blx	r3
 8015c26:	4633      	mov	r3, r6
 8015c28:	4629      	mov	r1, r5
 8015c2a:	9000      	str	r0, [sp, #0]
 8015c2c:	9a03      	ldr	r2, [sp, #12]
 8015c2e:	a805      	add	r0, sp, #20
 8015c30:	ad1e      	add	r5, sp, #120	; 0x78
 8015c32:	f000 fe32 	bl	801689a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015c36:	2100      	movs	r1, #0
 8015c38:	f845 1d68 	str.w	r1, [r5, #-104]!
 8015c3c:	4622      	mov	r2, r4
 8015c3e:	462b      	mov	r3, r5
 8015c40:	a805      	add	r0, sp, #20
 8015c42:	f001 f92d 	bl	8016ea0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8015c46:	f647 76ff 	movw	r6, #32767	; 0x7fff
 8015c4a:	b1d8      	cbz	r0, 8015c84 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 8015c4c:	280a      	cmp	r0, #10
 8015c4e:	d012      	beq.n	8015c76 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8015c50:	9804      	ldr	r0, [sp, #16]
 8015c52:	b180      	cbz	r0, 8015c76 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8015c54:	7b47      	ldrb	r7, [r0, #13]
 8015c56:	88e2      	ldrh	r2, [r4, #6]
 8015c58:	00fb      	lsls	r3, r7, #3
 8015c5a:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8015c5e:	7a03      	ldrb	r3, [r0, #8]
 8015c60:	430b      	orrs	r3, r1
 8015c62:	0679      	lsls	r1, r7, #25
 8015c64:	bf44      	itt	mi
 8015c66:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8015c6a:	b21b      	sxthmi	r3, r3
 8015c6c:	1ad3      	subs	r3, r2, r3
 8015c6e:	b21b      	sxth	r3, r3
 8015c70:	429e      	cmp	r6, r3
 8015c72:	bfa8      	it	ge
 8015c74:	461e      	movge	r6, r3
 8015c76:	462b      	mov	r3, r5
 8015c78:	4622      	mov	r2, r4
 8015c7a:	2100      	movs	r1, #0
 8015c7c:	a805      	add	r0, sp, #20
 8015c7e:	f001 f90f 	bl	8016ea0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8015c82:	e7e2      	b.n	8015c4a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 8015c84:	4630      	mov	r0, r6
 8015c86:	b01e      	add	sp, #120	; 0x78
 8015c88:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8015c8c:	b003      	add	sp, #12
 8015c8e:	4770      	bx	lr

08015c90 <_ZNK8touchgfx8Drawable10invalidateEv>:
 8015c90:	b513      	push	{r0, r1, r4, lr}
 8015c92:	6803      	ldr	r3, [r0, #0]
 8015c94:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8015c98:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8015c9c:	f8ad 1004 	strh.w	r1, [sp, #4]
 8015ca0:	2400      	movs	r4, #0
 8015ca2:	9400      	str	r4, [sp, #0]
 8015ca4:	f8ad 2006 	strh.w	r2, [sp, #6]
 8015ca8:	691b      	ldr	r3, [r3, #16]
 8015caa:	4669      	mov	r1, sp
 8015cac:	4798      	blx	r3
 8015cae:	b002      	add	sp, #8
 8015cb0:	bd10      	pop	{r4, pc}

08015cb2 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8015cb2:	b538      	push	{r3, r4, r5, lr}
 8015cb4:	680b      	ldr	r3, [r1, #0]
 8015cb6:	460c      	mov	r4, r1
 8015cb8:	68db      	ldr	r3, [r3, #12]
 8015cba:	4605      	mov	r5, r0
 8015cbc:	4798      	blx	r3
 8015cbe:	6823      	ldr	r3, [r4, #0]
 8015cc0:	4620      	mov	r0, r4
 8015cc2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015cc4:	4629      	mov	r1, r5
 8015cc6:	4798      	blx	r3
 8015cc8:	4628      	mov	r0, r5
 8015cca:	bd38      	pop	{r3, r4, r5, pc}

08015ccc <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 8015ccc:	b410      	push	{r4}
 8015cce:	880a      	ldrh	r2, [r1, #0]
 8015cd0:	8884      	ldrh	r4, [r0, #4]
 8015cd2:	4422      	add	r2, r4
 8015cd4:	800a      	strh	r2, [r1, #0]
 8015cd6:	88c4      	ldrh	r4, [r0, #6]
 8015cd8:	884a      	ldrh	r2, [r1, #2]
 8015cda:	4422      	add	r2, r4
 8015cdc:	804a      	strh	r2, [r1, #2]
 8015cde:	6940      	ldr	r0, [r0, #20]
 8015ce0:	b120      	cbz	r0, 8015cec <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8015ce2:	6803      	ldr	r3, [r0, #0]
 8015ce4:	f85d 4b04 	ldr.w	r4, [sp], #4
 8015ce8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015cea:	4718      	bx	r3
 8015cec:	f85d 4b04 	ldr.w	r4, [sp], #4
 8015cf0:	4770      	bx	lr

08015cf2 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8015cf2:	b570      	push	{r4, r5, r6, lr}
 8015cf4:	8882      	ldrh	r2, [r0, #4]
 8015cf6:	880b      	ldrh	r3, [r1, #0]
 8015cf8:	4413      	add	r3, r2
 8015cfa:	800b      	strh	r3, [r1, #0]
 8015cfc:	88c2      	ldrh	r2, [r0, #6]
 8015cfe:	884b      	ldrh	r3, [r1, #2]
 8015d00:	460c      	mov	r4, r1
 8015d02:	4413      	add	r3, r2
 8015d04:	804b      	strh	r3, [r1, #2]
 8015d06:	4605      	mov	r5, r0
 8015d08:	1d01      	adds	r1, r0, #4
 8015d0a:	4620      	mov	r0, r4
 8015d0c:	f7f9 fdc6 	bl	800f89c <_ZN8touchgfx4RectaNERKS0_>
 8015d10:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8015d14:	2b00      	cmp	r3, #0
 8015d16:	dd0b      	ble.n	8015d30 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8015d18:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8015d1c:	2b00      	cmp	r3, #0
 8015d1e:	dd07      	ble.n	8015d30 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8015d20:	6968      	ldr	r0, [r5, #20]
 8015d22:	b128      	cbz	r0, 8015d30 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8015d24:	6803      	ldr	r3, [r0, #0]
 8015d26:	4621      	mov	r1, r4
 8015d28:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8015d2a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015d2e:	4718      	bx	r3
 8015d30:	bd70      	pop	{r4, r5, r6, pc}
	...

08015d34 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8015d34:	b570      	push	{r4, r5, r6, lr}
 8015d36:	8882      	ldrh	r2, [r0, #4]
 8015d38:	880b      	ldrh	r3, [r1, #0]
 8015d3a:	4413      	add	r3, r2
 8015d3c:	800b      	strh	r3, [r1, #0]
 8015d3e:	88c2      	ldrh	r2, [r0, #6]
 8015d40:	884b      	ldrh	r3, [r1, #2]
 8015d42:	460c      	mov	r4, r1
 8015d44:	4413      	add	r3, r2
 8015d46:	804b      	strh	r3, [r1, #2]
 8015d48:	4605      	mov	r5, r0
 8015d4a:	1d01      	adds	r1, r0, #4
 8015d4c:	4620      	mov	r0, r4
 8015d4e:	f7f9 fda5 	bl	800f89c <_ZN8touchgfx4RectaNERKS0_>
 8015d52:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8015d56:	2b00      	cmp	r3, #0
 8015d58:	dd19      	ble.n	8015d8e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8015d5a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8015d5e:	2b00      	cmp	r3, #0
 8015d60:	dd15      	ble.n	8015d8e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8015d62:	6968      	ldr	r0, [r5, #20]
 8015d64:	b128      	cbz	r0, 8015d72 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8015d66:	6803      	ldr	r3, [r0, #0]
 8015d68:	4621      	mov	r1, r4
 8015d6a:	691b      	ldr	r3, [r3, #16]
 8015d6c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015d70:	4718      	bx	r3
 8015d72:	4b07      	ldr	r3, [pc, #28]	; (8015d90 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8015d74:	681b      	ldr	r3, [r3, #0]
 8015d76:	3304      	adds	r3, #4
 8015d78:	429d      	cmp	r5, r3
 8015d7a:	d108      	bne.n	8015d8e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8015d7c:	f7fe fea0 	bl	8014ac0 <_ZN8touchgfx11Application11getInstanceEv>
 8015d80:	6803      	ldr	r3, [r0, #0]
 8015d82:	6821      	ldr	r1, [r4, #0]
 8015d84:	6862      	ldr	r2, [r4, #4]
 8015d86:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8015d88:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015d8c:	4718      	bx	r3
 8015d8e:	bd70      	pop	{r4, r5, r6, pc}
 8015d90:	20013800 	.word	0x20013800

08015d94 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8015d94:	b570      	push	{r4, r5, r6, lr}
 8015d96:	4604      	mov	r4, r0
 8015d98:	4616      	mov	r6, r2
 8015d9a:	460d      	mov	r5, r1
 8015d9c:	b901      	cbnz	r1, 8015da0 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 8015d9e:	b192      	cbz	r2, 8015dc6 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8015da0:	6823      	ldr	r3, [r4, #0]
 8015da2:	4620      	mov	r0, r4
 8015da4:	699b      	ldr	r3, [r3, #24]
 8015da6:	4798      	blx	r3
 8015da8:	88e2      	ldrh	r2, [r4, #6]
 8015daa:	88a1      	ldrh	r1, [r4, #4]
 8015dac:	4432      	add	r2, r6
 8015dae:	4429      	add	r1, r5
 8015db0:	4620      	mov	r0, r4
 8015db2:	b212      	sxth	r2, r2
 8015db4:	b209      	sxth	r1, r1
 8015db6:	f7ec fb7a 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8015dba:	6823      	ldr	r3, [r4, #0]
 8015dbc:	4620      	mov	r0, r4
 8015dbe:	699b      	ldr	r3, [r3, #24]
 8015dc0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015dc4:	4718      	bx	r3
 8015dc6:	bd70      	pop	{r4, r5, r6, pc}

08015dc8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8015dc8:	b510      	push	{r4, lr}
 8015dca:	4604      	mov	r4, r0
 8015dcc:	4608      	mov	r0, r1
 8015dce:	2300      	movs	r3, #0
 8015dd0:	8023      	strh	r3, [r4, #0]
 8015dd2:	8063      	strh	r3, [r4, #2]
 8015dd4:	6803      	ldr	r3, [r0, #0]
 8015dd6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8015dda:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8015dde:	80a1      	strh	r1, [r4, #4]
 8015de0:	80e2      	strh	r2, [r4, #6]
 8015de2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015de4:	4621      	mov	r1, r4
 8015de6:	4798      	blx	r3
 8015de8:	4620      	mov	r0, r4
 8015dea:	bd10      	pop	{r4, pc}

08015dec <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 8015dec:	b530      	push	{r4, r5, lr}
 8015dee:	8083      	strh	r3, [r0, #4]
 8015df0:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8015df4:	80c3      	strh	r3, [r0, #6]
 8015df6:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8015dfa:	7203      	strb	r3, [r0, #8]
 8015dfc:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8015e00:	f89d 5018 	ldrb.w	r5, [sp, #24]
 8015e04:	7243      	strb	r3, [r0, #9]
 8015e06:	7a83      	ldrb	r3, [r0, #10]
 8015e08:	6141      	str	r1, [r0, #20]
 8015e0a:	f365 0306 	bfi	r3, r5, #0, #7
 8015e0e:	f89d 501c 	ldrb.w	r5, [sp, #28]
 8015e12:	8302      	strh	r2, [r0, #24]
 8015e14:	f365 13c7 	bfi	r3, r5, #7, #1
 8015e18:	7283      	strb	r3, [r0, #10]
 8015e1a:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8015e1e:	72c3      	strb	r3, [r0, #11]
 8015e20:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 8015e24:	7303      	strb	r3, [r0, #12]
 8015e26:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8015e2a:	81c3      	strh	r3, [r0, #14]
 8015e2c:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8015e30:	8203      	strh	r3, [r0, #16]
 8015e32:	4b01      	ldr	r3, [pc, #4]	; (8015e38 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 8015e34:	6003      	str	r3, [r0, #0]
 8015e36:	bd30      	pop	{r4, r5, pc}
 8015e38:	0802ca44 	.word	0x0802ca44

08015e3c <_ZNK8touchgfx9ConstFont4findEt>:
 8015e3c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015e3e:	6944      	ldr	r4, [r0, #20]
 8015e40:	b3bc      	cbz	r4, 8015eb2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015e42:	88a3      	ldrh	r3, [r4, #4]
 8015e44:	8b02      	ldrh	r2, [r0, #24]
 8015e46:	1acb      	subs	r3, r1, r3
 8015e48:	f102 32ff 	add.w	r2, r2, #4294967295
 8015e4c:	d431      	bmi.n	8015eb2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015e4e:	4293      	cmp	r3, r2
 8015e50:	dd0c      	ble.n	8015e6c <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8015e52:	230e      	movs	r3, #14
 8015e54:	fb03 4302 	mla	r3, r3, r2, r4
 8015e58:	889b      	ldrh	r3, [r3, #4]
 8015e5a:	1a5b      	subs	r3, r3, r1
 8015e5c:	1ad3      	subs	r3, r2, r3
 8015e5e:	429a      	cmp	r2, r3
 8015e60:	db27      	blt.n	8015eb2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015e62:	2b00      	cmp	r3, #0
 8015e64:	bfbc      	itt	lt
 8015e66:	2302      	movlt	r3, #2
 8015e68:	fb92 f3f3 	sdivlt	r3, r2, r3
 8015e6c:	2500      	movs	r5, #0
 8015e6e:	260e      	movs	r6, #14
 8015e70:	4295      	cmp	r5, r2
 8015e72:	dc1e      	bgt.n	8015eb2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015e74:	fb06 4003 	mla	r0, r6, r3, r4
 8015e78:	8887      	ldrh	r7, [r0, #4]
 8015e7a:	42b9      	cmp	r1, r7
 8015e7c:	d01a      	beq.n	8015eb4 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 8015e7e:	d20d      	bcs.n	8015e9c <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8015e80:	1e5a      	subs	r2, r3, #1
 8015e82:	4295      	cmp	r5, r2
 8015e84:	dc15      	bgt.n	8015eb2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015e86:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 8015e8a:	1a5b      	subs	r3, r3, r1
 8015e8c:	1ad3      	subs	r3, r2, r3
 8015e8e:	429a      	cmp	r2, r3
 8015e90:	db0f      	blt.n	8015eb2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015e92:	429d      	cmp	r5, r3
 8015e94:	ddec      	ble.n	8015e70 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8015e96:	1953      	adds	r3, r2, r5
 8015e98:	105b      	asrs	r3, r3, #1
 8015e9a:	e7e9      	b.n	8015e70 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8015e9c:	1c5d      	adds	r5, r3, #1
 8015e9e:	42aa      	cmp	r2, r5
 8015ea0:	db07      	blt.n	8015eb2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015ea2:	8a43      	ldrh	r3, [r0, #18]
 8015ea4:	1acb      	subs	r3, r1, r3
 8015ea6:	442b      	add	r3, r5
 8015ea8:	429d      	cmp	r5, r3
 8015eaa:	dc02      	bgt.n	8015eb2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015eac:	429a      	cmp	r2, r3
 8015eae:	dadf      	bge.n	8015e70 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8015eb0:	e7f1      	b.n	8015e96 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8015eb2:	2000      	movs	r0, #0
 8015eb4:	bdf0      	pop	{r4, r5, r6, r7, pc}

08015eb6 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8015eb6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015eb8:	4604      	mov	r4, r0
 8015eba:	4617      	mov	r7, r2
 8015ebc:	461e      	mov	r6, r3
 8015ebe:	b911      	cbnz	r1, 8015ec6 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8015ec0:	2500      	movs	r5, #0
 8015ec2:	4628      	mov	r0, r5
 8015ec4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015ec6:	290a      	cmp	r1, #10
 8015ec8:	d0fa      	beq.n	8015ec0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8015eca:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8015ece:	4291      	cmp	r1, r2
 8015ed0:	d0f6      	beq.n	8015ec0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8015ed2:	f242 020b 	movw	r2, #8203	; 0x200b
 8015ed6:	4291      	cmp	r1, r2
 8015ed8:	d0f2      	beq.n	8015ec0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8015eda:	f7ff ffaf 	bl	8015e3c <_ZNK8touchgfx9ConstFont4findEt>
 8015ede:	4605      	mov	r5, r0
 8015ee0:	b950      	cbnz	r0, 8015ef8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 8015ee2:	6823      	ldr	r3, [r4, #0]
 8015ee4:	4620      	mov	r0, r4
 8015ee6:	691b      	ldr	r3, [r3, #16]
 8015ee8:	4798      	blx	r3
 8015eea:	4601      	mov	r1, r0
 8015eec:	4620      	mov	r0, r4
 8015eee:	f7ff ffa5 	bl	8015e3c <_ZNK8touchgfx9ConstFont4findEt>
 8015ef2:	4605      	mov	r5, r0
 8015ef4:	2800      	cmp	r0, #0
 8015ef6:	d0e3      	beq.n	8015ec0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8015ef8:	6823      	ldr	r3, [r4, #0]
 8015efa:	4629      	mov	r1, r5
 8015efc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8015efe:	4620      	mov	r0, r4
 8015f00:	4798      	blx	r3
 8015f02:	6038      	str	r0, [r7, #0]
 8015f04:	6823      	ldr	r3, [r4, #0]
 8015f06:	4620      	mov	r0, r4
 8015f08:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8015f0a:	4798      	blx	r3
 8015f0c:	7030      	strb	r0, [r6, #0]
 8015f0e:	e7d8      	b.n	8015ec2 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08015f10 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 8015f10:	b538      	push	{r3, r4, r5, lr}
 8015f12:	4605      	mov	r5, r0
 8015f14:	f002 f962 	bl	80181dc <_ZNK8touchgfx6Bitmap9getFormatEv>
 8015f18:	4604      	mov	r4, r0
 8015f1a:	4628      	mov	r0, r5
 8015f1c:	f002 f8a2 	bl	8018064 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8015f20:	2800      	cmp	r0, #0
 8015f22:	bf14      	ite	ne
 8015f24:	2002      	movne	r0, #2
 8015f26:	2000      	moveq	r0, #0
 8015f28:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 8015f2c:	b280      	uxth	r0, r0
 8015f2e:	bd38      	pop	{r3, r4, r5, pc}

08015f30 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 8015f30:	b538      	push	{r3, r4, r5, lr}
 8015f32:	4605      	mov	r5, r0
 8015f34:	f002 f952 	bl	80181dc <_ZNK8touchgfx6Bitmap9getFormatEv>
 8015f38:	4604      	mov	r4, r0
 8015f3a:	4628      	mov	r0, r5
 8015f3c:	f002 f892 	bl	8018064 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8015f40:	2800      	cmp	r0, #0
 8015f42:	bf14      	ite	ne
 8015f44:	2002      	movne	r0, #2
 8015f46:	2000      	moveq	r0, #0
 8015f48:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 8015f4c:	f040 0001 	orr.w	r0, r0, #1
 8015f50:	b280      	uxth	r0, r0
 8015f52:	bd38      	pop	{r3, r4, r5, pc}

08015f54 <_ZN8touchgfx4clzuEm>:
 8015f54:	4603      	mov	r3, r0
 8015f56:	b1c8      	cbz	r0, 8015f8c <_ZN8touchgfx4clzuEm+0x38>
 8015f58:	0c02      	lsrs	r2, r0, #16
 8015f5a:	0412      	lsls	r2, r2, #16
 8015f5c:	b9a2      	cbnz	r2, 8015f88 <_ZN8touchgfx4clzuEm+0x34>
 8015f5e:	0403      	lsls	r3, r0, #16
 8015f60:	2010      	movs	r0, #16
 8015f62:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8015f66:	bf04      	itt	eq
 8015f68:	021b      	lsleq	r3, r3, #8
 8015f6a:	3008      	addeq	r0, #8
 8015f6c:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8015f70:	bf04      	itt	eq
 8015f72:	011b      	lsleq	r3, r3, #4
 8015f74:	3004      	addeq	r0, #4
 8015f76:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8015f7a:	bf04      	itt	eq
 8015f7c:	009b      	lsleq	r3, r3, #2
 8015f7e:	3002      	addeq	r0, #2
 8015f80:	2b00      	cmp	r3, #0
 8015f82:	db04      	blt.n	8015f8e <_ZN8touchgfx4clzuEm+0x3a>
 8015f84:	3001      	adds	r0, #1
 8015f86:	4770      	bx	lr
 8015f88:	2000      	movs	r0, #0
 8015f8a:	e7ea      	b.n	8015f62 <_ZN8touchgfx4clzuEm+0xe>
 8015f8c:	2020      	movs	r0, #32
 8015f8e:	4770      	bx	lr

08015f90 <_ZN8touchgfx7muldivuEmmmRm>:
 8015f90:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8015f94:	460f      	mov	r7, r1
 8015f96:	4615      	mov	r5, r2
 8015f98:	461e      	mov	r6, r3
 8015f9a:	4601      	mov	r1, r0
 8015f9c:	b100      	cbz	r0, 8015fa0 <_ZN8touchgfx7muldivuEmmmRm+0x10>
 8015f9e:	b927      	cbnz	r7, 8015faa <_ZN8touchgfx7muldivuEmmmRm+0x1a>
 8015fa0:	2000      	movs	r0, #0
 8015fa2:	6030      	str	r0, [r6, #0]
 8015fa4:	b002      	add	sp, #8
 8015fa6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8015faa:	f7ff ffd3 	bl	8015f54 <_ZN8touchgfx4clzuEm>
 8015fae:	b980      	cbnz	r0, 8015fd2 <_ZN8touchgfx7muldivuEmmmRm+0x42>
 8015fb0:	4638      	mov	r0, r7
 8015fb2:	f7ff ffcf 	bl	8015f54 <_ZN8touchgfx4clzuEm>
 8015fb6:	2800      	cmp	r0, #0
 8015fb8:	dd05      	ble.n	8015fc6 <_ZN8touchgfx7muldivuEmmmRm+0x36>
 8015fba:	4633      	mov	r3, r6
 8015fbc:	462a      	mov	r2, r5
 8015fbe:	4638      	mov	r0, r7
 8015fc0:	f7ff ffe6 	bl	8015f90 <_ZN8touchgfx7muldivuEmmmRm>
 8015fc4:	e7ee      	b.n	8015fa4 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8015fc6:	f04f 33ff 	mov.w	r3, #4294967295
 8015fca:	6033      	str	r3, [r6, #0]
 8015fcc:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8015fd0:	e7e8      	b.n	8015fa4 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8015fd2:	fa37 f800 	lsrs.w	r8, r7, r0
 8015fd6:	fb07 f301 	mul.w	r3, r7, r1
 8015fda:	d105      	bne.n	8015fe8 <_ZN8touchgfx7muldivuEmmmRm+0x58>
 8015fdc:	fbb3 f0f5 	udiv	r0, r3, r5
 8015fe0:	fb05 3510 	mls	r5, r5, r0, r3
 8015fe4:	6035      	str	r5, [r6, #0]
 8015fe6:	e7dd      	b.n	8015fa4 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8015fe8:	2301      	movs	r3, #1
 8015fea:	fa01 fa00 	lsl.w	sl, r1, r0
 8015fee:	fa03 f000 	lsl.w	r0, r3, r0
 8015ff2:	3801      	subs	r0, #1
 8015ff4:	462a      	mov	r2, r5
 8015ff6:	4633      	mov	r3, r6
 8015ff8:	4038      	ands	r0, r7
 8015ffa:	f7ff ffc9 	bl	8015f90 <_ZN8touchgfx7muldivuEmmmRm>
 8015ffe:	fbba f9f5 	udiv	r9, sl, r5
 8016002:	462a      	mov	r2, r5
 8016004:	4607      	mov	r7, r0
 8016006:	ab01      	add	r3, sp, #4
 8016008:	fb05 a119 	mls	r1, r5, r9, sl
 801600c:	4640      	mov	r0, r8
 801600e:	f7ff ffbf 	bl	8015f90 <_ZN8touchgfx7muldivuEmmmRm>
 8016012:	9b01      	ldr	r3, [sp, #4]
 8016014:	6832      	ldr	r2, [r6, #0]
 8016016:	fb08 f409 	mul.w	r4, r8, r9
 801601a:	441a      	add	r2, r3
 801601c:	fbb2 f3f5 	udiv	r3, r2, r5
 8016020:	441c      	add	r4, r3
 8016022:	443c      	add	r4, r7
 8016024:	4420      	add	r0, r4
 8016026:	fb05 2513 	mls	r5, r5, r3, r2
 801602a:	e7db      	b.n	8015fe4 <_ZN8touchgfx7muldivuEmmmRm+0x54>

0801602c <_ZN8touchgfx6muldivElllRl>:
 801602c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801602e:	2800      	cmp	r0, #0
 8016030:	bfba      	itte	lt
 8016032:	4240      	neglt	r0, r0
 8016034:	f04f 34ff 	movlt.w	r4, #4294967295
 8016038:	2401      	movge	r4, #1
 801603a:	2900      	cmp	r1, #0
 801603c:	bfbc      	itt	lt
 801603e:	4249      	neglt	r1, r1
 8016040:	4264      	neglt	r4, r4
 8016042:	2a00      	cmp	r2, #0
 8016044:	bfb6      	itet	lt
 8016046:	4265      	neglt	r5, r4
 8016048:	4625      	movge	r5, r4
 801604a:	4252      	neglt	r2, r2
 801604c:	4288      	cmp	r0, r1
 801604e:	461e      	mov	r6, r3
 8016050:	bfc2      	ittt	gt
 8016052:	4603      	movgt	r3, r0
 8016054:	4608      	movgt	r0, r1
 8016056:	4619      	movgt	r1, r3
 8016058:	ab01      	add	r3, sp, #4
 801605a:	f7ff ff99 	bl	8015f90 <_ZN8touchgfx7muldivuEmmmRm>
 801605e:	9b01      	ldr	r3, [sp, #4]
 8016060:	4368      	muls	r0, r5
 8016062:	435c      	muls	r4, r3
 8016064:	6034      	str	r4, [r6, #0]
 8016066:	b002      	add	sp, #8
 8016068:	bd70      	pop	{r4, r5, r6, pc}

0801606a <_ZN8touchgfx6muldivElll>:
 801606a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801606c:	4606      	mov	r6, r0
 801606e:	ab01      	add	r3, sp, #4
 8016070:	460d      	mov	r5, r1
 8016072:	4614      	mov	r4, r2
 8016074:	f7ff ffda 	bl	801602c <_ZN8touchgfx6muldivElllRl>
 8016078:	2e00      	cmp	r6, #0
 801607a:	db20      	blt.n	80160be <_ZN8touchgfx6muldivElll+0x54>
 801607c:	bf14      	ite	ne
 801607e:	2301      	movne	r3, #1
 8016080:	2300      	moveq	r3, #0
 8016082:	2d00      	cmp	r5, #0
 8016084:	db1e      	blt.n	80160c4 <_ZN8touchgfx6muldivElll+0x5a>
 8016086:	bf14      	ite	ne
 8016088:	2201      	movne	r2, #1
 801608a:	2200      	moveq	r2, #0
 801608c:	2c00      	cmp	r4, #0
 801608e:	fb03 f202 	mul.w	r2, r3, r2
 8016092:	db1a      	blt.n	80160ca <_ZN8touchgfx6muldivElll+0x60>
 8016094:	bf14      	ite	ne
 8016096:	2301      	movne	r3, #1
 8016098:	2300      	moveq	r3, #0
 801609a:	4353      	muls	r3, r2
 801609c:	2b01      	cmp	r3, #1
 801609e:	d117      	bne.n	80160d0 <_ZN8touchgfx6muldivElll+0x66>
 80160a0:	9b01      	ldr	r3, [sp, #4]
 80160a2:	2c00      	cmp	r4, #0
 80160a4:	bfb8      	it	lt
 80160a6:	4264      	neglt	r4, r4
 80160a8:	2b00      	cmp	r3, #0
 80160aa:	f104 0401 	add.w	r4, r4, #1
 80160ae:	bfb8      	it	lt
 80160b0:	425b      	neglt	r3, r3
 80160b2:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 80160b6:	db00      	blt.n	80160ba <_ZN8touchgfx6muldivElll+0x50>
 80160b8:	3001      	adds	r0, #1
 80160ba:	b002      	add	sp, #8
 80160bc:	bd70      	pop	{r4, r5, r6, pc}
 80160be:	f04f 33ff 	mov.w	r3, #4294967295
 80160c2:	e7de      	b.n	8016082 <_ZN8touchgfx6muldivElll+0x18>
 80160c4:	f04f 32ff 	mov.w	r2, #4294967295
 80160c8:	e7e0      	b.n	801608c <_ZN8touchgfx6muldivElll+0x22>
 80160ca:	f04f 33ff 	mov.w	r3, #4294967295
 80160ce:	e7e4      	b.n	801609a <_ZN8touchgfx6muldivElll+0x30>
 80160d0:	3301      	adds	r3, #1
 80160d2:	d1f2      	bne.n	80160ba <_ZN8touchgfx6muldivElll+0x50>
 80160d4:	9b01      	ldr	r3, [sp, #4]
 80160d6:	2c00      	cmp	r4, #0
 80160d8:	bfb8      	it	lt
 80160da:	4264      	neglt	r4, r4
 80160dc:	2b00      	cmp	r3, #0
 80160de:	bfb8      	it	lt
 80160e0:	425b      	neglt	r3, r3
 80160e2:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 80160e6:	bfc8      	it	gt
 80160e8:	f100 30ff 	addgt.w	r0, r0, #4294967295
 80160ec:	e7e5      	b.n	80160ba <_ZN8touchgfx6muldivElll+0x50>

080160ee <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 80160ee:	2000      	movs	r0, #0
 80160f0:	4770      	bx	lr

080160f2 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 80160f2:	2001      	movs	r0, #1
 80160f4:	4770      	bx	lr

080160f6 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 80160f6:	2002      	movs	r0, #2
 80160f8:	4770      	bx	lr

080160fa <_ZN8touchgfx6ScreenD1Ev>:
 80160fa:	4770      	bx	lr

080160fc <_ZN8touchgfx12GestureEventD1Ev>:
 80160fc:	4770      	bx	lr

080160fe <_ZN8touchgfx9DragEventD1Ev>:
 80160fe:	4770      	bx	lr

08016100 <_ZN8touchgfx10ClickEventD1Ev>:
 8016100:	4770      	bx	lr

08016102 <_ZN8touchgfx10ClickEventD0Ev>:
 8016102:	b510      	push	{r4, lr}
 8016104:	210c      	movs	r1, #12
 8016106:	4604      	mov	r4, r0
 8016108:	f011 fa39 	bl	802757e <_ZdlPvj>
 801610c:	4620      	mov	r0, r4
 801610e:	bd10      	pop	{r4, pc}

08016110 <_ZN8touchgfx9DragEventD0Ev>:
 8016110:	b510      	push	{r4, lr}
 8016112:	2110      	movs	r1, #16
 8016114:	4604      	mov	r4, r0
 8016116:	f011 fa32 	bl	802757e <_ZdlPvj>
 801611a:	4620      	mov	r0, r4
 801611c:	bd10      	pop	{r4, pc}

0801611e <_ZN8touchgfx12GestureEventD0Ev>:
 801611e:	b510      	push	{r4, lr}
 8016120:	210c      	movs	r1, #12
 8016122:	4604      	mov	r4, r0
 8016124:	f011 fa2b 	bl	802757e <_ZdlPvj>
 8016128:	4620      	mov	r0, r4
 801612a:	bd10      	pop	{r4, pc}

0801612c <_ZN8touchgfx6ScreenD0Ev>:
 801612c:	b510      	push	{r4, lr}
 801612e:	213c      	movs	r1, #60	; 0x3c
 8016130:	4604      	mov	r4, r0
 8016132:	f011 fa24 	bl	802757e <_ZdlPvj>
 8016136:	4620      	mov	r0, r4
 8016138:	bd10      	pop	{r4, pc}
	...

0801613c <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 801613c:	b530      	push	{r4, r5, lr}
 801613e:	460d      	mov	r5, r1
 8016140:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8016142:	b087      	sub	sp, #28
 8016144:	4604      	mov	r4, r0
 8016146:	b301      	cbz	r1, 801618a <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8016148:	a801      	add	r0, sp, #4
 801614a:	f7ff fe3d 	bl	8015dc8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801614e:	892a      	ldrh	r2, [r5, #8]
 8016150:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8016154:	7928      	ldrb	r0, [r5, #4]
 8016156:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 801615a:	f88d 0010 	strb.w	r0, [sp, #16]
 801615e:	1ad2      	subs	r2, r2, r3
 8016160:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8016162:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8016164:	f8ad 1012 	strh.w	r1, [sp, #18]
 8016168:	441a      	add	r2, r3
 801616a:	896b      	ldrh	r3, [r5, #10]
 801616c:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8016170:	f8ad 2014 	strh.w	r2, [sp, #20]
 8016174:	1b5b      	subs	r3, r3, r5
 8016176:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 8016178:	442b      	add	r3, r5
 801617a:	4d05      	ldr	r5, [pc, #20]	; (8016190 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 801617c:	9503      	str	r5, [sp, #12]
 801617e:	f8ad 3016 	strh.w	r3, [sp, #22]
 8016182:	6803      	ldr	r3, [r0, #0]
 8016184:	a903      	add	r1, sp, #12
 8016186:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8016188:	4798      	blx	r3
 801618a:	b007      	add	sp, #28
 801618c:	bd30      	pop	{r4, r5, pc}
 801618e:	bf00      	nop
 8016190:	0802cacc 	.word	0x0802cacc

08016194 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8016194:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016198:	6b03      	ldr	r3, [r0, #48]	; 0x30
 801619a:	b08a      	sub	sp, #40	; 0x28
 801619c:	4604      	mov	r4, r0
 801619e:	460d      	mov	r5, r1
 80161a0:	b113      	cbz	r3, 80161a8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 80161a2:	790b      	ldrb	r3, [r1, #4]
 80161a4:	2b00      	cmp	r3, #0
 80161a6:	d044      	beq.n	8016232 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80161a8:	f104 0804 	add.w	r8, r4, #4
 80161ac:	4641      	mov	r1, r8
 80161ae:	a803      	add	r0, sp, #12
 80161b0:	f7ff fe0a 	bl	8015dc8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80161b4:	792b      	ldrb	r3, [r5, #4]
 80161b6:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 80161ba:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 80161be:	b983      	cbnz	r3, 80161e2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 80161c0:	892a      	ldrh	r2, [r5, #8]
 80161c2:	88e9      	ldrh	r1, [r5, #6]
 80161c4:	f104 0336 	add.w	r3, r4, #54	; 0x36
 80161c8:	1b92      	subs	r2, r2, r6
 80161ca:	1bc9      	subs	r1, r1, r7
 80161cc:	9301      	str	r3, [sp, #4]
 80161ce:	f104 0334 	add.w	r3, r4, #52	; 0x34
 80161d2:	9300      	str	r3, [sp, #0]
 80161d4:	b212      	sxth	r2, r2
 80161d6:	f104 0330 	add.w	r3, r4, #48	; 0x30
 80161da:	b209      	sxth	r1, r1
 80161dc:	4640      	mov	r0, r8
 80161de:	f7f9 fa79 	bl	800f6d4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 80161e2:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80161e4:	b329      	cbz	r1, 8016232 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80161e6:	a805      	add	r0, sp, #20
 80161e8:	f7ff fdee 	bl	8015dc8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80161ec:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 80161f0:	792b      	ldrb	r3, [r5, #4]
 80161f2:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80161f4:	f88d 3020 	strb.w	r3, [sp, #32]
 80161f8:	1abf      	subs	r7, r7, r2
 80161fa:	88ea      	ldrh	r2, [r5, #6]
 80161fc:	4417      	add	r7, r2
 80161fe:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 8016200:	4417      	add	r7, r2
 8016202:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8016206:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 801620a:	1ab6      	subs	r6, r6, r2
 801620c:	892a      	ldrh	r2, [r5, #8]
 801620e:	4416      	add	r6, r2
 8016210:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8016212:	4416      	add	r6, r2
 8016214:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 8016218:	4a07      	ldr	r2, [pc, #28]	; (8016238 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 801621a:	9207      	str	r2, [sp, #28]
 801621c:	2600      	movs	r6, #0
 801621e:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 8016222:	6803      	ldr	r3, [r0, #0]
 8016224:	a907      	add	r1, sp, #28
 8016226:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8016228:	4798      	blx	r3
 801622a:	792b      	ldrb	r3, [r5, #4]
 801622c:	b10b      	cbz	r3, 8016232 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801622e:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 8016232:	b00a      	add	sp, #40	; 0x28
 8016234:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016238:	0802caa4 	.word	0x0802caa4

0801623c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 801623c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016240:	460c      	mov	r4, r1
 8016242:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8016244:	b088      	sub	sp, #32
 8016246:	4605      	mov	r5, r0
 8016248:	2900      	cmp	r1, #0
 801624a:	d06d      	beq.n	8016328 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 801624c:	4668      	mov	r0, sp
 801624e:	f7ff fdbb 	bl	8015dc8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016252:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 8016254:	88e3      	ldrh	r3, [r4, #6]
 8016256:	f9bd 8000 	ldrsh.w	r8, [sp]
 801625a:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 801625e:	440b      	add	r3, r1
 8016260:	b21b      	sxth	r3, r3
 8016262:	4543      	cmp	r3, r8
 8016264:	db31      	blt.n	80162ca <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8016266:	f8bd c004 	ldrh.w	ip, [sp, #4]
 801626a:	44c4      	add	ip, r8
 801626c:	fa0f fc8c 	sxth.w	ip, ip
 8016270:	4563      	cmp	r3, ip
 8016272:	da2a      	bge.n	80162ca <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8016274:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 8016276:	8926      	ldrh	r6, [r4, #8]
 8016278:	4416      	add	r6, r2
 801627a:	b236      	sxth	r6, r6
 801627c:	42be      	cmp	r6, r7
 801627e:	db24      	blt.n	80162ca <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8016280:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8016284:	4438      	add	r0, r7
 8016286:	b200      	sxth	r0, r0
 8016288:	4286      	cmp	r6, r0
 801628a:	da1e      	bge.n	80162ca <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801628c:	8963      	ldrh	r3, [r4, #10]
 801628e:	4419      	add	r1, r3
 8016290:	b209      	sxth	r1, r1
 8016292:	4541      	cmp	r1, r8
 8016294:	db08      	blt.n	80162a8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8016296:	4561      	cmp	r1, ip
 8016298:	da06      	bge.n	80162a8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801629a:	89a3      	ldrh	r3, [r4, #12]
 801629c:	441a      	add	r2, r3
 801629e:	b212      	sxth	r2, r2
 80162a0:	42ba      	cmp	r2, r7
 80162a2:	db01      	blt.n	80162a8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 80162a4:	4282      	cmp	r2, r0
 80162a6:	db10      	blt.n	80162ca <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80162a8:	4b21      	ldr	r3, [pc, #132]	; (8016330 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 80162aa:	9304      	str	r3, [sp, #16]
 80162ac:	2302      	movs	r3, #2
 80162ae:	f88d 3014 	strb.w	r3, [sp, #20]
 80162b2:	6b28      	ldr	r0, [r5, #48]	; 0x30
 80162b4:	2300      	movs	r3, #0
 80162b6:	f8ad 3016 	strh.w	r3, [sp, #22]
 80162ba:	f8ad 3018 	strh.w	r3, [sp, #24]
 80162be:	f8ad 301a 	strh.w	r3, [sp, #26]
 80162c2:	6803      	ldr	r3, [r0, #0]
 80162c4:	a904      	add	r1, sp, #16
 80162c6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80162c8:	4798      	blx	r3
 80162ca:	1d29      	adds	r1, r5, #4
 80162cc:	a802      	add	r0, sp, #8
 80162ce:	f7ff fd7b 	bl	8015dc8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80162d2:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80162d6:	88e0      	ldrh	r0, [r4, #6]
 80162d8:	7921      	ldrb	r1, [r4, #4]
 80162da:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 80162de:	8922      	ldrh	r2, [r4, #8]
 80162e0:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 80162e2:	f88d 1014 	strb.w	r1, [sp, #20]
 80162e6:	eba3 0808 	sub.w	r8, r3, r8
 80162ea:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80162ee:	1bdf      	subs	r7, r3, r7
 80162f0:	b2bb      	uxth	r3, r7
 80162f2:	fa1f f888 	uxth.w	r8, r8
 80162f6:	8967      	ldrh	r7, [r4, #10]
 80162f8:	89a4      	ldrh	r4, [r4, #12]
 80162fa:	4440      	add	r0, r8
 80162fc:	4460      	add	r0, ip
 80162fe:	441a      	add	r2, r3
 8016300:	44b8      	add	r8, r7
 8016302:	4423      	add	r3, r4
 8016304:	f8ad 0016 	strh.w	r0, [sp, #22]
 8016308:	4433      	add	r3, r6
 801630a:	4432      	add	r2, r6
 801630c:	44e0      	add	r8, ip
 801630e:	4c09      	ldr	r4, [pc, #36]	; (8016334 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8016310:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8016312:	9404      	str	r4, [sp, #16]
 8016314:	f8ad 2018 	strh.w	r2, [sp, #24]
 8016318:	f8ad 801a 	strh.w	r8, [sp, #26]
 801631c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8016320:	6803      	ldr	r3, [r0, #0]
 8016322:	a904      	add	r1, sp, #16
 8016324:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8016326:	4798      	blx	r3
 8016328:	b008      	add	sp, #32
 801632a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801632e:	bf00      	nop
 8016330:	0802caa4 	.word	0x0802caa4
 8016334:	0802cab8 	.word	0x0802cab8

08016338 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8016338:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801633a:	4604      	mov	r4, r0
 801633c:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8016340:	3201      	adds	r2, #1
 8016342:	d112      	bne.n	801636a <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8016344:	6803      	ldr	r3, [r0, #0]
 8016346:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 801634a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801634e:	f8ad 1004 	strh.w	r1, [sp, #4]
 8016352:	2500      	movs	r5, #0
 8016354:	9500      	str	r5, [sp, #0]
 8016356:	466d      	mov	r5, sp
 8016358:	4629      	mov	r1, r5
 801635a:	f8ad 2006 	strh.w	r2, [sp, #6]
 801635e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016360:	4798      	blx	r3
 8016362:	e895 0003 	ldmia.w	r5, {r0, r1}
 8016366:	e884 0003 	stmia.w	r4, {r0, r1}
 801636a:	4620      	mov	r0, r4
 801636c:	b003      	add	sp, #12
 801636e:	bd30      	pop	{r4, r5, pc}

08016370 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8016370:	b513      	push	{r0, r1, r4, lr}
 8016372:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8016376:	3301      	adds	r3, #1
 8016378:	4604      	mov	r4, r0
 801637a:	d109      	bne.n	8016390 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 801637c:	4601      	mov	r1, r0
 801637e:	4668      	mov	r0, sp
 8016380:	f7ff fd22 	bl	8015dc8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016384:	f8bd 3000 	ldrh.w	r3, [sp]
 8016388:	8423      	strh	r3, [r4, #32]
 801638a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801638e:	8463      	strh	r3, [r4, #34]	; 0x22
 8016390:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8016394:	b002      	add	sp, #8
 8016396:	bd10      	pop	{r4, pc}

08016398 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8016398:	b513      	push	{r0, r1, r4, lr}
 801639a:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 801639e:	3301      	adds	r3, #1
 80163a0:	4604      	mov	r4, r0
 80163a2:	d109      	bne.n	80163b8 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 80163a4:	4601      	mov	r1, r0
 80163a6:	4668      	mov	r0, sp
 80163a8:	f7ff fd0e 	bl	8015dc8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80163ac:	f8bd 3000 	ldrh.w	r3, [sp]
 80163b0:	8423      	strh	r3, [r4, #32]
 80163b2:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80163b6:	8463      	strh	r3, [r4, #34]	; 0x22
 80163b8:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 80163bc:	b002      	add	sp, #8
 80163be:	bd10      	pop	{r4, pc}

080163c0 <_ZN8touchgfx6ScreenC1Ev>:
 80163c0:	b570      	push	{r4, r5, r6, lr}
 80163c2:	4605      	mov	r5, r0
 80163c4:	4b16      	ldr	r3, [pc, #88]	; (8016420 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 80163c6:	f845 3b04 	str.w	r3, [r5], #4
 80163ca:	2300      	movs	r3, #0
 80163cc:	8103      	strh	r3, [r0, #8]
 80163ce:	8143      	strh	r3, [r0, #10]
 80163d0:	8183      	strh	r3, [r0, #12]
 80163d2:	81c3      	strh	r3, [r0, #14]
 80163d4:	8203      	strh	r3, [r0, #16]
 80163d6:	8243      	strh	r3, [r0, #18]
 80163d8:	8283      	strh	r3, [r0, #20]
 80163da:	82c3      	strh	r3, [r0, #22]
 80163dc:	e9c0 3306 	strd	r3, r3, [r0, #24]
 80163e0:	6203      	str	r3, [r0, #32]
 80163e2:	8483      	strh	r3, [r0, #36]	; 0x24
 80163e4:	84c3      	strh	r3, [r0, #38]	; 0x26
 80163e6:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 80163ea:	4a0e      	ldr	r2, [pc, #56]	; (8016424 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 80163ec:	6343      	str	r3, [r0, #52]	; 0x34
 80163ee:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 80163f2:	4b0d      	ldr	r3, [pc, #52]	; (8016428 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 80163f4:	6042      	str	r2, [r0, #4]
 80163f6:	f9b3 6000 	ldrsh.w	r6, [r3]
 80163fa:	6b93      	ldr	r3, [r2, #56]	; 0x38
 80163fc:	4a0b      	ldr	r2, [pc, #44]	; (801642c <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 80163fe:	4604      	mov	r4, r0
 8016400:	2101      	movs	r1, #1
 8016402:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8016406:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 801640a:	f9b2 1000 	ldrsh.w	r1, [r2]
 801640e:	4628      	mov	r0, r5
 8016410:	4798      	blx	r3
 8016412:	6863      	ldr	r3, [r4, #4]
 8016414:	4628      	mov	r0, r5
 8016416:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8016418:	4631      	mov	r1, r6
 801641a:	4798      	blx	r3
 801641c:	4620      	mov	r0, r4
 801641e:	bd70      	pop	{r4, r5, r6, pc}
 8016420:	0802cae0 	.word	0x0802cae0
 8016424:	0802c344 	.word	0x0802c344
 8016428:	200137b2 	.word	0x200137b2
 801642c:	200137b0 	.word	0x200137b0

08016430 <_ZN8touchgfx6Screen4drawEv>:
 8016430:	b507      	push	{r0, r1, r2, lr}
 8016432:	4b09      	ldr	r3, [pc, #36]	; (8016458 <_ZN8touchgfx6Screen4drawEv+0x28>)
 8016434:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016438:	4b08      	ldr	r3, [pc, #32]	; (801645c <_ZN8touchgfx6Screen4drawEv+0x2c>)
 801643a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801643e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8016442:	f8ad 3006 	strh.w	r3, [sp, #6]
 8016446:	6803      	ldr	r3, [r0, #0]
 8016448:	2100      	movs	r1, #0
 801644a:	9100      	str	r1, [sp, #0]
 801644c:	689b      	ldr	r3, [r3, #8]
 801644e:	4669      	mov	r1, sp
 8016450:	4798      	blx	r3
 8016452:	b003      	add	sp, #12
 8016454:	f85d fb04 	ldr.w	pc, [sp], #4
 8016458:	200137b0 	.word	0x200137b0
 801645c:	200137b2 	.word	0x200137b2

08016460 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8016460:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016464:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8016468:	2b00      	cmp	r3, #0
 801646a:	b089      	sub	sp, #36	; 0x24
 801646c:	4680      	mov	r8, r0
 801646e:	460c      	mov	r4, r1
 8016470:	4615      	mov	r5, r2
 8016472:	dd0e      	ble.n	8016492 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8016474:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8016478:	2b00      	cmp	r3, #0
 801647a:	dd0a      	ble.n	8016492 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801647c:	4628      	mov	r0, r5
 801647e:	f7ff ff5b 	bl	8016338 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8016482:	4621      	mov	r1, r4
 8016484:	f7fe fa3d 	bl	8014902 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8016488:	69eb      	ldr	r3, [r5, #28]
 801648a:	b928      	cbnz	r0, 8016498 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 801648c:	461d      	mov	r5, r3
 801648e:	2b00      	cmp	r3, #0
 8016490:	d1f4      	bne.n	801647c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8016492:	b009      	add	sp, #36	; 0x24
 8016494:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016498:	ae04      	add	r6, sp, #16
 801649a:	2b00      	cmp	r3, #0
 801649c:	f000 80b5 	beq.w	801660a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80164a0:	682b      	ldr	r3, [r5, #0]
 80164a2:	4629      	mov	r1, r5
 80164a4:	68db      	ldr	r3, [r3, #12]
 80164a6:	a802      	add	r0, sp, #8
 80164a8:	4798      	blx	r3
 80164aa:	4628      	mov	r0, r5
 80164ac:	f7ff ff60 	bl	8016370 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 80164b0:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 80164b4:	4407      	add	r7, r0
 80164b6:	4628      	mov	r0, r5
 80164b8:	f7ff ff6e 	bl	8016398 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 80164bc:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80164c0:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 80164c4:	f8ad 2014 	strh.w	r2, [sp, #20]
 80164c8:	4418      	add	r0, r3
 80164ca:	4621      	mov	r1, r4
 80164cc:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 80164d0:	f8ad 0012 	strh.w	r0, [sp, #18]
 80164d4:	b23f      	sxth	r7, r7
 80164d6:	4630      	mov	r0, r6
 80164d8:	f8ad 3016 	strh.w	r3, [sp, #22]
 80164dc:	f8ad 7010 	strh.w	r7, [sp, #16]
 80164e0:	f7f9 f9dc 	bl	800f89c <_ZN8touchgfx4RectaNERKS0_>
 80164e4:	4628      	mov	r0, r5
 80164e6:	f7ff ff27 	bl	8016338 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80164ea:	4602      	mov	r2, r0
 80164ec:	e896 0003 	ldmia.w	r6, {r0, r1}
 80164f0:	ab06      	add	r3, sp, #24
 80164f2:	e883 0003 	stmia.w	r3, {r0, r1}
 80164f6:	4611      	mov	r1, r2
 80164f8:	4618      	mov	r0, r3
 80164fa:	f7f9 f9cf 	bl	800f89c <_ZN8touchgfx4RectaNERKS0_>
 80164fe:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8016502:	f9b4 1000 	ldrsh.w	r1, [r4]
 8016506:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 801650a:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 801650e:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 8016512:	4299      	cmp	r1, r3
 8016514:	d10b      	bne.n	801652e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8016516:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801651a:	4552      	cmp	r2, sl
 801651c:	d107      	bne.n	801652e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801651e:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8016522:	455a      	cmp	r2, fp
 8016524:	d103      	bne.n	801652e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8016526:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 801652a:	454a      	cmp	r2, r9
 801652c:	d06d      	beq.n	801660a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801652e:	f1bb 0f00 	cmp.w	fp, #0
 8016532:	dd65      	ble.n	8016600 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8016534:	f1b9 0f00 	cmp.w	r9, #0
 8016538:	dd62      	ble.n	8016600 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801653a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801653e:	fa1f f08a 	uxth.w	r0, sl
 8016542:	4552      	cmp	r2, sl
 8016544:	9000      	str	r0, [sp, #0]
 8016546:	da12      	bge.n	801656e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8016548:	9301      	str	r3, [sp, #4]
 801654a:	9b00      	ldr	r3, [sp, #0]
 801654c:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8016550:	f8ad 2012 	strh.w	r2, [sp, #18]
 8016554:	1a9a      	subs	r2, r3, r2
 8016556:	f8ad 1010 	strh.w	r1, [sp, #16]
 801655a:	f8ad 0014 	strh.w	r0, [sp, #20]
 801655e:	f8ad 2016 	strh.w	r2, [sp, #22]
 8016562:	69ea      	ldr	r2, [r5, #28]
 8016564:	4631      	mov	r1, r6
 8016566:	4640      	mov	r0, r8
 8016568:	f7ff ff7a 	bl	8016460 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801656c:	9b01      	ldr	r3, [sp, #4]
 801656e:	f9b4 2000 	ldrsh.w	r2, [r4]
 8016572:	429a      	cmp	r2, r3
 8016574:	b29f      	uxth	r7, r3
 8016576:	da0d      	bge.n	8016594 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8016578:	f8ad 2010 	strh.w	r2, [sp, #16]
 801657c:	1aba      	subs	r2, r7, r2
 801657e:	f8ad a012 	strh.w	sl, [sp, #18]
 8016582:	f8ad 2014 	strh.w	r2, [sp, #20]
 8016586:	f8ad 9016 	strh.w	r9, [sp, #22]
 801658a:	69ea      	ldr	r2, [r5, #28]
 801658c:	4631      	mov	r1, r6
 801658e:	4640      	mov	r0, r8
 8016590:	f7ff ff66 	bl	8016460 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8016594:	8822      	ldrh	r2, [r4, #0]
 8016596:	88a3      	ldrh	r3, [r4, #4]
 8016598:	445f      	add	r7, fp
 801659a:	4413      	add	r3, r2
 801659c:	b29b      	uxth	r3, r3
 801659e:	b2bf      	uxth	r7, r7
 80165a0:	b23a      	sxth	r2, r7
 80165a2:	b219      	sxth	r1, r3
 80165a4:	4291      	cmp	r1, r2
 80165a6:	dd0d      	ble.n	80165c4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 80165a8:	1bdb      	subs	r3, r3, r7
 80165aa:	f8ad 2010 	strh.w	r2, [sp, #16]
 80165ae:	f8ad a012 	strh.w	sl, [sp, #18]
 80165b2:	f8ad 3014 	strh.w	r3, [sp, #20]
 80165b6:	f8ad 9016 	strh.w	r9, [sp, #22]
 80165ba:	69ea      	ldr	r2, [r5, #28]
 80165bc:	4631      	mov	r1, r6
 80165be:	4640      	mov	r0, r8
 80165c0:	f7ff ff4e 	bl	8016460 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80165c4:	88e2      	ldrh	r2, [r4, #6]
 80165c6:	8863      	ldrh	r3, [r4, #2]
 80165c8:	4413      	add	r3, r2
 80165ca:	9a00      	ldr	r2, [sp, #0]
 80165cc:	444a      	add	r2, r9
 80165ce:	b29b      	uxth	r3, r3
 80165d0:	fa1f f982 	uxth.w	r9, r2
 80165d4:	fa0f f289 	sxth.w	r2, r9
 80165d8:	b219      	sxth	r1, r3
 80165da:	428a      	cmp	r2, r1
 80165dc:	da15      	bge.n	801660a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80165de:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80165e2:	f9b4 0000 	ldrsh.w	r0, [r4]
 80165e6:	f8ad 1014 	strh.w	r1, [sp, #20]
 80165ea:	eba3 0309 	sub.w	r3, r3, r9
 80165ee:	f8ad 0010 	strh.w	r0, [sp, #16]
 80165f2:	f8ad 2012 	strh.w	r2, [sp, #18]
 80165f6:	f8ad 3016 	strh.w	r3, [sp, #22]
 80165fa:	69ea      	ldr	r2, [r5, #28]
 80165fc:	4631      	mov	r1, r6
 80165fe:	e001      	b.n	8016604 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8016600:	69ea      	ldr	r2, [r5, #28]
 8016602:	4621      	mov	r1, r4
 8016604:	4640      	mov	r0, r8
 8016606:	f7ff ff2b 	bl	8016460 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801660a:	4628      	mov	r0, r5
 801660c:	f7ff fe94 	bl	8016338 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8016610:	6861      	ldr	r1, [r4, #4]
 8016612:	4602      	mov	r2, r0
 8016614:	6820      	ldr	r0, [r4, #0]
 8016616:	4633      	mov	r3, r6
 8016618:	c303      	stmia	r3!, {r0, r1}
 801661a:	4611      	mov	r1, r2
 801661c:	4630      	mov	r0, r6
 801661e:	f7f9 f93d 	bl	800f89c <_ZN8touchgfx4RectaNERKS0_>
 8016622:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8016626:	2b00      	cmp	r3, #0
 8016628:	f77f af33 	ble.w	8016492 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801662c:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8016630:	2b00      	cmp	r3, #0
 8016632:	f77f af2e 	ble.w	8016492 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8016636:	4628      	mov	r0, r5
 8016638:	f7ff fe9a 	bl	8016370 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 801663c:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8016640:	1a18      	subs	r0, r3, r0
 8016642:	f8ad 0010 	strh.w	r0, [sp, #16]
 8016646:	4628      	mov	r0, r5
 8016648:	f7ff fea6 	bl	8016398 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801664c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8016650:	1a18      	subs	r0, r3, r0
 8016652:	f8ad 0012 	strh.w	r0, [sp, #18]
 8016656:	682b      	ldr	r3, [r5, #0]
 8016658:	4631      	mov	r1, r6
 801665a:	689b      	ldr	r3, [r3, #8]
 801665c:	4628      	mov	r0, r5
 801665e:	4798      	blx	r3
 8016660:	e717      	b.n	8016492 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08016662 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8016662:	b570      	push	{r4, r5, r6, lr}
 8016664:	460c      	mov	r4, r1
 8016666:	b086      	sub	sp, #24
 8016668:	1d06      	adds	r6, r0, #4
 801666a:	2300      	movs	r3, #0
 801666c:	4631      	mov	r1, r6
 801666e:	4605      	mov	r5, r0
 8016670:	a802      	add	r0, sp, #8
 8016672:	9301      	str	r3, [sp, #4]
 8016674:	f7ff fba8 	bl	8015dc8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016678:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801667c:	8822      	ldrh	r2, [r4, #0]
 801667e:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8016682:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8016686:	f8ad 0014 	strh.w	r0, [sp, #20]
 801668a:	1ad2      	subs	r2, r2, r3
 801668c:	8863      	ldrh	r3, [r4, #2]
 801668e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8016692:	1a5b      	subs	r3, r3, r1
 8016694:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8016698:	f8ad 1016 	strh.w	r1, [sp, #22]
 801669c:	aa01      	add	r2, sp, #4
 801669e:	a904      	add	r1, sp, #16
 80166a0:	4630      	mov	r0, r6
 80166a2:	f8ad 3012 	strh.w	r3, [sp, #18]
 80166a6:	f7f9 f9d1 	bl	800fa4c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 80166aa:	9a01      	ldr	r2, [sp, #4]
 80166ac:	b11a      	cbz	r2, 80166b6 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 80166ae:	4621      	mov	r1, r4
 80166b0:	4628      	mov	r0, r5
 80166b2:	f7ff fed5 	bl	8016460 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80166b6:	b006      	add	sp, #24
 80166b8:	bd70      	pop	{r4, r5, r6, pc}

080166ba <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 80166ba:	b530      	push	{r4, r5, lr}
 80166bc:	4602      	mov	r2, r0
 80166be:	4604      	mov	r4, r0
 80166c0:	f852 0f08 	ldr.w	r0, [r2, #8]!
 80166c4:	b085      	sub	sp, #20
 80166c6:	460d      	mov	r5, r1
 80166c8:	6851      	ldr	r1, [r2, #4]
 80166ca:	466b      	mov	r3, sp
 80166cc:	c303      	stmia	r3!, {r0, r1}
 80166ce:	4629      	mov	r1, r5
 80166d0:	4668      	mov	r0, sp
 80166d2:	f7f9 f8e3 	bl	800f89c <_ZN8touchgfx4RectaNERKS0_>
 80166d6:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80166da:	b12b      	cbz	r3, 80166e8 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 80166dc:	4669      	mov	r1, sp
 80166de:	4620      	mov	r0, r4
 80166e0:	f7ff ffbf 	bl	8016662 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 80166e4:	b005      	add	sp, #20
 80166e6:	bd30      	pop	{r4, r5, pc}
 80166e8:	3404      	adds	r4, #4
 80166ea:	4621      	mov	r1, r4
 80166ec:	a802      	add	r0, sp, #8
 80166ee:	f7ff fb6b 	bl	8015dc8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80166f2:	f8bd 3000 	ldrh.w	r3, [sp]
 80166f6:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 80166fa:	1a9b      	subs	r3, r3, r2
 80166fc:	f8ad 3000 	strh.w	r3, [sp]
 8016700:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8016704:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8016708:	4669      	mov	r1, sp
 801670a:	1a9b      	subs	r3, r3, r2
 801670c:	4620      	mov	r0, r4
 801670e:	f8ad 3002 	strh.w	r3, [sp, #2]
 8016712:	f7f9 f962 	bl	800f9da <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 8016716:	e7e5      	b.n	80166e4 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08016718 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8016718:	680a      	ldr	r2, [r1, #0]
 801671a:	460b      	mov	r3, r1
 801671c:	6992      	ldr	r2, [r2, #24]
 801671e:	1d01      	adds	r1, r0, #4
 8016720:	4618      	mov	r0, r3
 8016722:	4710      	bx	r2

08016724 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 8016724:	4298      	cmp	r0, r3
 8016726:	d200      	bcs.n	801672a <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 8016728:	b913      	cbnz	r3, 8016730 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 801672a:	440a      	add	r2, r1
 801672c:	b210      	sxth	r0, r2
 801672e:	4770      	bx	lr
 8016730:	ee07 0a90 	vmov	s15, r0
 8016734:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8016738:	ee07 3a90 	vmov	s15, r3
 801673c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8016740:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8016744:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8016748:	ee37 7a66 	vsub.f32	s14, s14, s13
 801674c:	ee07 2a90 	vmov	s15, r2
 8016750:	ee67 5a07 	vmul.f32	s11, s14, s14
 8016754:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8016758:	eee5 6a87 	vfma.f32	s13, s11, s14
 801675c:	ee07 1a90 	vmov	s15, r1
 8016760:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8016764:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8016768:	eee6 7a26 	vfma.f32	s15, s12, s13
 801676c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016770:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016774:	bfcc      	ite	gt
 8016776:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 801677a:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 801677e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8016782:	ee17 3a90 	vmov	r3, s15
 8016786:	b218      	sxth	r0, r3
 8016788:	4770      	bx	lr

0801678a <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 801678a:	4298      	cmp	r0, r3
 801678c:	d200      	bcs.n	8016790 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x6>
 801678e:	b913      	cbnz	r3, 8016796 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0xc>
 8016790:	440a      	add	r2, r1
 8016792:	b210      	sxth	r0, r2
 8016794:	4770      	bx	lr
 8016796:	ee07 2a90 	vmov	s15, r2
 801679a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 801679e:	ee07 0a90 	vmov	s15, r0
 80167a2:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80167a6:	ee67 7a27 	vmul.f32	s15, s14, s15
 80167aa:	ee07 3a10 	vmov	s14, r3
 80167ae:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80167b2:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 80167b6:	ee07 1a90 	vmov	s15, r1
 80167ba:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80167be:	ee77 7a27 	vadd.f32	s15, s14, s15
 80167c2:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80167c6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80167ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80167ce:	bfcc      	ite	gt
 80167d0:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 80167d4:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 80167d8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80167dc:	ee17 3a90 	vmov	r3, s15
 80167e0:	b218      	sxth	r0, r3
 80167e2:	4770      	bx	lr

080167e4 <_ZN8touchgfx12TextProviderC1Ev>:
 80167e4:	b538      	push	{r3, r4, r5, lr}
 80167e6:	2500      	movs	r5, #0
 80167e8:	2302      	movs	r3, #2
 80167ea:	4604      	mov	r4, r0
 80167ec:	e9c0 5500 	strd	r5, r5, [r0]
 80167f0:	7403      	strb	r3, [r0, #16]
 80167f2:	6145      	str	r5, [r0, #20]
 80167f4:	7605      	strb	r5, [r0, #24]
 80167f6:	83c5      	strh	r5, [r0, #30]
 80167f8:	8405      	strh	r5, [r0, #32]
 80167fa:	86c5      	strh	r5, [r0, #54]	; 0x36
 80167fc:	8705      	strh	r5, [r0, #56]	; 0x38
 80167fe:	87c5      	strh	r5, [r0, #62]	; 0x3e
 8016800:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 8016804:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 8016808:	220e      	movs	r2, #14
 801680a:	4629      	mov	r1, r5
 801680c:	304c      	adds	r0, #76	; 0x4c
 801680e:	f011 feac 	bl	802856a <memset>
 8016812:	2301      	movs	r3, #1
 8016814:	4620      	mov	r0, r4
 8016816:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 801681a:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801681e:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 8016822:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 8016826:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 801682a:	f7f1 f935 	bl	8007a98 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 801682e:	4620      	mov	r0, r4
 8016830:	bd38      	pop	{r3, r4, r5, pc}

08016832 <_ZN8touchgfx12TextProvider11endOfStringEv>:
 8016832:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8016834:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016838:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 801683a:	fab0 f080 	clz	r0, r0
 801683e:	0940      	lsrs	r0, r0, #5
 8016840:	4770      	bx	lr

08016842 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8016842:	b530      	push	{r4, r5, lr}
 8016844:	2500      	movs	r5, #0
 8016846:	2401      	movs	r4, #1
 8016848:	6843      	ldr	r3, [r0, #4]
 801684a:	b913      	cbnz	r3, 8016852 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 801684c:	6803      	ldr	r3, [r0, #0]
 801684e:	b313      	cbz	r3, 8016896 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8016850:	6043      	str	r3, [r0, #4]
 8016852:	7e03      	ldrb	r3, [r0, #24]
 8016854:	b143      	cbz	r3, 8016868 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8016856:	6943      	ldr	r3, [r0, #20]
 8016858:	b12b      	cbz	r3, 8016866 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801685a:	881a      	ldrh	r2, [r3, #0]
 801685c:	b11a      	cbz	r2, 8016866 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801685e:	1c9a      	adds	r2, r3, #2
 8016860:	6142      	str	r2, [r0, #20]
 8016862:	8818      	ldrh	r0, [r3, #0]
 8016864:	bd30      	pop	{r4, r5, pc}
 8016866:	7605      	strb	r5, [r0, #24]
 8016868:	6843      	ldr	r3, [r0, #4]
 801686a:	8819      	ldrh	r1, [r3, #0]
 801686c:	b199      	cbz	r1, 8016896 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 801686e:	1c9a      	adds	r2, r3, #2
 8016870:	2902      	cmp	r1, #2
 8016872:	6042      	str	r2, [r0, #4]
 8016874:	d1f5      	bne.n	8016862 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8016876:	7c03      	ldrb	r3, [r0, #16]
 8016878:	2b01      	cmp	r3, #1
 801687a:	d8e5      	bhi.n	8016848 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801687c:	1c5a      	adds	r2, r3, #1
 801687e:	3302      	adds	r3, #2
 8016880:	7402      	strb	r2, [r0, #16]
 8016882:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8016886:	6143      	str	r3, [r0, #20]
 8016888:	2b00      	cmp	r3, #0
 801688a:	d0dd      	beq.n	8016848 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801688c:	881b      	ldrh	r3, [r3, #0]
 801688e:	2b00      	cmp	r3, #0
 8016890:	d0da      	beq.n	8016848 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8016892:	7604      	strb	r4, [r0, #24]
 8016894:	e7d8      	b.n	8016848 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8016896:	2000      	movs	r0, #0
 8016898:	e7e4      	b.n	8016864 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0801689a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 801689a:	b430      	push	{r4, r5}
 801689c:	6001      	str	r1, [r0, #0]
 801689e:	2100      	movs	r1, #0
 80168a0:	6041      	str	r1, [r0, #4]
 80168a2:	6815      	ldr	r5, [r2, #0]
 80168a4:	6085      	str	r5, [r0, #8]
 80168a6:	6852      	ldr	r2, [r2, #4]
 80168a8:	6443      	str	r3, [r0, #68]	; 0x44
 80168aa:	9b02      	ldr	r3, [sp, #8]
 80168ac:	60c2      	str	r2, [r0, #12]
 80168ae:	7401      	strb	r1, [r0, #16]
 80168b0:	6141      	str	r1, [r0, #20]
 80168b2:	7601      	strb	r1, [r0, #24]
 80168b4:	8701      	strh	r1, [r0, #56]	; 0x38
 80168b6:	8401      	strh	r1, [r0, #32]
 80168b8:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 80168bc:	6483      	str	r3, [r0, #72]	; 0x48
 80168be:	bc30      	pop	{r4, r5}
 80168c0:	f7f1 b8ea 	b.w	8007a98 <_ZN8touchgfx12TextProvider18initializeInternalEv>

080168c4 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 80168c4:	b408      	push	{r3}
 80168c6:	b510      	push	{r4, lr}
 80168c8:	b085      	sub	sp, #20
 80168ca:	ac07      	add	r4, sp, #28
 80168cc:	f854 3b04 	ldr.w	r3, [r4], #4
 80168d0:	9300      	str	r3, [sp, #0]
 80168d2:	4613      	mov	r3, r2
 80168d4:	4622      	mov	r2, r4
 80168d6:	9403      	str	r4, [sp, #12]
 80168d8:	f7ff ffdf 	bl	801689a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80168dc:	b005      	add	sp, #20
 80168de:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80168e2:	b001      	add	sp, #4
 80168e4:	4770      	bx	lr

080168e6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 80168e6:	b5f0      	push	{r4, r5, r6, r7, lr}
 80168e8:	4605      	mov	r5, r0
 80168ea:	4608      	mov	r0, r1
 80168ec:	b1e9      	cbz	r1, 801692a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 80168ee:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 80168f2:	460b      	mov	r3, r1
 80168f4:	f101 0708 	add.w	r7, r1, #8
 80168f8:	4622      	mov	r2, r4
 80168fa:	6818      	ldr	r0, [r3, #0]
 80168fc:	6859      	ldr	r1, [r3, #4]
 80168fe:	4626      	mov	r6, r4
 8016900:	c603      	stmia	r6!, {r0, r1}
 8016902:	3308      	adds	r3, #8
 8016904:	42bb      	cmp	r3, r7
 8016906:	4634      	mov	r4, r6
 8016908:	d1f7      	bne.n	80168fa <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 801690a:	6818      	ldr	r0, [r3, #0]
 801690c:	6030      	str	r0, [r6, #0]
 801690e:	889b      	ldrh	r3, [r3, #4]
 8016910:	80b3      	strh	r3, [r6, #4]
 8016912:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 8016916:	015b      	lsls	r3, r3, #5
 8016918:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801691c:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 8016920:	430b      	orrs	r3, r1
 8016922:	425b      	negs	r3, r3
 8016924:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 8016928:	4610      	mov	r0, r2
 801692a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801692c <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 801692c:	b538      	push	{r3, r4, r5, lr}
 801692e:	460c      	mov	r4, r1
 8016930:	6811      	ldr	r1, [r2, #0]
 8016932:	4610      	mov	r0, r2
 8016934:	68cd      	ldr	r5, [r1, #12]
 8016936:	4619      	mov	r1, r3
 8016938:	47a8      	blx	r5
 801693a:	2800      	cmp	r0, #0
 801693c:	bf08      	it	eq
 801693e:	4620      	moveq	r0, r4
 8016940:	bd38      	pop	{r3, r4, r5, pc}
	...

08016944 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8016944:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016946:	4604      	mov	r4, r0
 8016948:	4615      	mov	r5, r2
 801694a:	4608      	mov	r0, r1
 801694c:	b93a      	cbnz	r2, 801695e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 801694e:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8016952:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 8016956:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 801695a:	4628      	mov	r0, r5
 801695c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801695e:	f892 c00d 	ldrb.w	ip, [r2, #13]
 8016962:	8893      	ldrh	r3, [r2, #4]
 8016964:	ea4f 160c 	mov.w	r6, ip, lsl #4
 8016968:	f406 7280 	and.w	r2, r6, #256	; 0x100
 801696c:	79ee      	ldrb	r6, [r5, #7]
 801696e:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 8016972:	4316      	orrs	r6, r2
 8016974:	19da      	adds	r2, r3, r7
 8016976:	b291      	uxth	r1, r2
 8016978:	291d      	cmp	r1, #29
 801697a:	b2b7      	uxth	r7, r6
 801697c:	d87a      	bhi.n	8016a74 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 801697e:	2201      	movs	r2, #1
 8016980:	408a      	lsls	r2, r1
 8016982:	4975      	ldr	r1, [pc, #468]	; (8016b58 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 8016984:	420a      	tst	r2, r1
 8016986:	ea4f 06e6 	mov.w	r6, r6, asr #3
 801698a:	d12d      	bne.n	80169e8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 801698c:	f412 7f60 	tst.w	r2, #896	; 0x380
 8016990:	d070      	beq.n	8016a74 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8016992:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 8016996:	462b      	mov	r3, r5
 8016998:	f105 0e08 	add.w	lr, r5, #8
 801699c:	4615      	mov	r5, r2
 801699e:	6818      	ldr	r0, [r3, #0]
 80169a0:	6859      	ldr	r1, [r3, #4]
 80169a2:	4694      	mov	ip, r2
 80169a4:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 80169a8:	3308      	adds	r3, #8
 80169aa:	4573      	cmp	r3, lr
 80169ac:	4662      	mov	r2, ip
 80169ae:	d1f6      	bne.n	801699e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 80169b0:	6818      	ldr	r0, [r3, #0]
 80169b2:	f8cc 0000 	str.w	r0, [ip]
 80169b6:	889b      	ldrh	r3, [r3, #4]
 80169b8:	f8ac 3004 	strh.w	r3, [ip, #4]
 80169bc:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 80169c0:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 80169c4:	b2b3      	uxth	r3, r6
 80169c6:	1aca      	subs	r2, r1, r3
 80169c8:	b292      	uxth	r2, r2
 80169ca:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 80169ce:	10d2      	asrs	r2, r2, #3
 80169d0:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 80169d4:	f002 0260 	and.w	r2, r2, #96	; 0x60
 80169d8:	4302      	orrs	r2, r0
 80169da:	1bcf      	subs	r7, r1, r7
 80169dc:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 80169e0:	1afb      	subs	r3, r7, r3
 80169e2:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 80169e6:	e7b8      	b.n	801695a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 80169e8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80169ea:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80169ee:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 80169f0:	f640 6333 	movw	r3, #3635	; 0xe33
 80169f4:	4299      	cmp	r1, r3
 80169f6:	d110      	bne.n	8016a1a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 80169f8:	6803      	ldr	r3, [r0, #0]
 80169fa:	68db      	ldr	r3, [r3, #12]
 80169fc:	4798      	blx	r3
 80169fe:	7b41      	ldrb	r1, [r0, #13]
 8016a00:	00cb      	lsls	r3, r1, #3
 8016a02:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8016a06:	7a03      	ldrb	r3, [r0, #8]
 8016a08:	0648      	lsls	r0, r1, #25
 8016a0a:	ea43 0302 	orr.w	r3, r3, r2
 8016a0e:	bf44      	itt	mi
 8016a10:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016a14:	b21b      	sxthmi	r3, r3
 8016a16:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8016a1a:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 8016a1e:	443b      	add	r3, r7
 8016a20:	4433      	add	r3, r6
 8016a22:	b29b      	uxth	r3, r3
 8016a24:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 8016a28:	462a      	mov	r2, r5
 8016a2a:	f105 0c08 	add.w	ip, r5, #8
 8016a2e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8016a32:	4635      	mov	r5, r6
 8016a34:	6810      	ldr	r0, [r2, #0]
 8016a36:	6851      	ldr	r1, [r2, #4]
 8016a38:	4637      	mov	r7, r6
 8016a3a:	c703      	stmia	r7!, {r0, r1}
 8016a3c:	3208      	adds	r2, #8
 8016a3e:	4562      	cmp	r2, ip
 8016a40:	463e      	mov	r6, r7
 8016a42:	d1f7      	bne.n	8016a34 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 8016a44:	6810      	ldr	r0, [r2, #0]
 8016a46:	6038      	str	r0, [r7, #0]
 8016a48:	8892      	ldrh	r2, [r2, #4]
 8016a4a:	80ba      	strh	r2, [r7, #4]
 8016a4c:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8016a50:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8016a54:	10db      	asrs	r3, r3, #3
 8016a56:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8016a5a:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8016a5e:	4313      	orrs	r3, r2
 8016a60:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8016a64:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 8016a68:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 8016a6c:	1a9b      	subs	r3, r3, r2
 8016a6e:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 8016a72:	e772      	b.n	801695a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8016a74:	f023 0204 	bic.w	r2, r3, #4
 8016a78:	f640 611b 	movw	r1, #3611	; 0xe1b
 8016a7c:	428a      	cmp	r2, r1
 8016a7e:	d003      	beq.n	8016a88 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 8016a80:	f640 621d 	movw	r2, #3613	; 0xe1d
 8016a84:	4293      	cmp	r3, r2
 8016a86:	d120      	bne.n	8016aca <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 8016a88:	3b01      	subs	r3, #1
 8016a8a:	4602      	mov	r2, r0
 8016a8c:	b29b      	uxth	r3, r3
 8016a8e:	4629      	mov	r1, r5
 8016a90:	4620      	mov	r0, r4
 8016a92:	f7ff ff4b 	bl	801692c <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8016a96:	7b41      	ldrb	r1, [r0, #13]
 8016a98:	00cb      	lsls	r3, r1, #3
 8016a9a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8016a9e:	7a03      	ldrb	r3, [r0, #8]
 8016aa0:	0649      	lsls	r1, r1, #25
 8016aa2:	ea43 0302 	orr.w	r3, r3, r2
 8016aa6:	bf44      	itt	mi
 8016aa8:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016aac:	b21b      	sxthmi	r3, r3
 8016aae:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8016ab2:	7b6b      	ldrb	r3, [r5, #13]
 8016ab4:	7aaa      	ldrb	r2, [r5, #10]
 8016ab6:	005b      	lsls	r3, r3, #1
 8016ab8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8016abc:	4313      	orrs	r3, r2
 8016abe:	115a      	asrs	r2, r3, #5
 8016ac0:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8016ac4:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8016ac8:	e036      	b.n	8016b38 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 8016aca:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 8016ace:	f402 7180 	and.w	r1, r2, #256	; 0x100
 8016ad2:	7a2a      	ldrb	r2, [r5, #8]
 8016ad4:	f01c 0f40 	tst.w	ip, #64	; 0x40
 8016ad8:	ea42 0201 	orr.w	r2, r2, r1
 8016adc:	bf1c      	itt	ne
 8016ade:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 8016ae2:	b212      	sxthne	r2, r2
 8016ae4:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8016ae8:	f640 6109 	movw	r1, #3593	; 0xe09
 8016aec:	f023 0210 	bic.w	r2, r3, #16
 8016af0:	428a      	cmp	r2, r1
 8016af2:	d003      	beq.n	8016afc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 8016af4:	f640 6213 	movw	r2, #3603	; 0xe13
 8016af8:	4293      	cmp	r3, r2
 8016afa:	d12a      	bne.n	8016b52 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 8016afc:	7b6e      	ldrb	r6, [r5, #13]
 8016afe:	0076      	lsls	r6, r6, #1
 8016b00:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8016b04:	7aae      	ldrb	r6, [r5, #10]
 8016b06:	4316      	orrs	r6, r2
 8016b08:	f640 6213 	movw	r2, #3603	; 0xe13
 8016b0c:	4293      	cmp	r3, r2
 8016b0e:	bf18      	it	ne
 8016b10:	f103 33ff 	addne.w	r3, r3, #4294967295
 8016b14:	4602      	mov	r2, r0
 8016b16:	bf14      	ite	ne
 8016b18:	b29b      	uxthne	r3, r3
 8016b1a:	f640 630c 	movweq	r3, #3596	; 0xe0c
 8016b1e:	4629      	mov	r1, r5
 8016b20:	4620      	mov	r0, r4
 8016b22:	f7ff ff03 	bl	801692c <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8016b26:	7b43      	ldrb	r3, [r0, #13]
 8016b28:	7a82      	ldrb	r2, [r0, #10]
 8016b2a:	005b      	lsls	r3, r3, #1
 8016b2c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8016b30:	4313      	orrs	r3, r2
 8016b32:	1af6      	subs	r6, r6, r3
 8016b34:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 8016b38:	7b69      	ldrb	r1, [r5, #13]
 8016b3a:	00cb      	lsls	r3, r1, #3
 8016b3c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8016b40:	7a2b      	ldrb	r3, [r5, #8]
 8016b42:	4313      	orrs	r3, r2
 8016b44:	064a      	lsls	r2, r1, #25
 8016b46:	bf44      	itt	mi
 8016b48:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016b4c:	b21b      	sxthmi	r3, r3
 8016b4e:	1bdb      	subs	r3, r3, r7
 8016b50:	e747      	b.n	80169e2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8016b52:	2300      	movs	r3, #0
 8016b54:	e7b6      	b.n	8016ac4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 8016b56:	bf00      	nop
 8016b58:	3fc00079 	.word	0x3fc00079

08016b5c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8016b5c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8016b60:	4604      	mov	r4, r0
 8016b62:	b942      	cbnz	r2, 8016b76 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8016b64:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8016b68:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 8016b6c:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 8016b70:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8016b74:	e047      	b.n	8016c06 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8016b76:	7b51      	ldrb	r1, [r2, #13]
 8016b78:	8893      	ldrh	r3, [r2, #4]
 8016b7a:	010d      	lsls	r5, r1, #4
 8016b7c:	f405 7080 	and.w	r0, r5, #256	; 0x100
 8016b80:	79d5      	ldrb	r5, [r2, #7]
 8016b82:	4305      	orrs	r5, r0
 8016b84:	2d04      	cmp	r5, #4
 8016b86:	bfcc      	ite	gt
 8016b88:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8016b8c:	f04f 0e01 	movle.w	lr, #1
 8016b90:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 8016b94:	f200 80ab 	bhi.w	8016cee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8016b98:	f240 60e7 	movw	r0, #1767	; 0x6e7
 8016b9c:	4283      	cmp	r3, r0
 8016b9e:	d216      	bcs.n	8016bce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016ba0:	f240 605b 	movw	r0, #1627	; 0x65b
 8016ba4:	4283      	cmp	r3, r0
 8016ba6:	d859      	bhi.n	8016c5c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8016ba8:	f240 6057 	movw	r0, #1623	; 0x657
 8016bac:	4283      	cmp	r3, r0
 8016bae:	d20e      	bcs.n	8016bce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016bb0:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8016bb4:	d24a      	bcs.n	8016c4c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8016bb6:	f240 604e 	movw	r0, #1614	; 0x64e
 8016bba:	4283      	cmp	r3, r0
 8016bbc:	d207      	bcs.n	8016bce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016bbe:	f240 601a 	movw	r0, #1562	; 0x61a
 8016bc2:	4283      	cmp	r3, r0
 8016bc4:	d02a      	beq.n	8016c1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016bc6:	d821      	bhi.n	8016c0c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8016bc8:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 8016bcc:	d35b      	bcc.n	8016c86 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8016bce:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 8016bd2:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8016bd6:	f040 80d0 	bne.w	8016d7a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8016bda:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 8016bde:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8016be2:	f040 80ca 	bne.w	8016d7a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8016be6:	00cb      	lsls	r3, r1, #3
 8016be8:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8016bec:	7a13      	ldrb	r3, [r2, #8]
 8016bee:	0649      	lsls	r1, r1, #25
 8016bf0:	ea43 0300 	orr.w	r3, r3, r0
 8016bf4:	bf44      	itt	mi
 8016bf6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016bfa:	b21b      	sxthmi	r3, r3
 8016bfc:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8016c00:	1b5d      	subs	r5, r3, r5
 8016c02:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8016c06:	4610      	mov	r0, r2
 8016c08:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8016c0c:	f240 604b 	movw	r0, #1611	; 0x64b
 8016c10:	4283      	cmp	r3, r0
 8016c12:	d338      	bcc.n	8016c86 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8016c14:	f240 604c 	movw	r0, #1612	; 0x64c
 8016c18:	4283      	cmp	r3, r0
 8016c1a:	d9d8      	bls.n	8016bce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016c1c:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 8016c20:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 8016c24:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8016c28:	f040 80f2 	bne.w	8016e10 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8016c2c:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8016c30:	f040 80ee 	bne.w	8016e10 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8016c34:	00cb      	lsls	r3, r1, #3
 8016c36:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8016c3a:	7a13      	ldrb	r3, [r2, #8]
 8016c3c:	064e      	lsls	r6, r1, #25
 8016c3e:	ea43 0300 	orr.w	r3, r3, r0
 8016c42:	bf44      	itt	mi
 8016c44:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016c48:	b21b      	sxthmi	r3, r3
 8016c4a:	e7d9      	b.n	8016c00 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 8016c4c:	f240 6054 	movw	r0, #1620	; 0x654
 8016c50:	4283      	cmp	r3, r0
 8016c52:	d8e3      	bhi.n	8016c1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016c54:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8016c58:	d9e0      	bls.n	8016c1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016c5a:	e7b8      	b.n	8016bce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016c5c:	f240 6074 	movw	r0, #1652	; 0x674
 8016c60:	4283      	cmp	r3, r0
 8016c62:	d0b4      	beq.n	8016bce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016c64:	d82d      	bhi.n	8016cc2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 8016c66:	f240 605e 	movw	r0, #1630	; 0x65e
 8016c6a:	4283      	cmp	r3, r0
 8016c6c:	d804      	bhi.n	8016c78 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 8016c6e:	f240 605d 	movw	r0, #1629	; 0x65d
 8016c72:	4283      	cmp	r3, r0
 8016c74:	d3d2      	bcc.n	8016c1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016c76:	e7aa      	b.n	8016bce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016c78:	f240 605f 	movw	r0, #1631	; 0x65f
 8016c7c:	4283      	cmp	r3, r0
 8016c7e:	d0cd      	beq.n	8016c1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016c80:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 8016c84:	d0a3      	beq.n	8016bce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016c86:	00cb      	lsls	r3, r1, #3
 8016c88:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8016c8c:	7a13      	ldrb	r3, [r2, #8]
 8016c8e:	0649      	lsls	r1, r1, #25
 8016c90:	ea43 0300 	orr.w	r3, r3, r0
 8016c94:	bf44      	itt	mi
 8016c96:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016c9a:	b21b      	sxthmi	r3, r3
 8016c9c:	1b5d      	subs	r5, r3, r5
 8016c9e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8016ca2:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8016ca6:	7b53      	ldrb	r3, [r2, #13]
 8016ca8:	015b      	lsls	r3, r3, #5
 8016caa:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8016cae:	7993      	ldrb	r3, [r2, #6]
 8016cb0:	430b      	orrs	r3, r1
 8016cb2:	005b      	lsls	r3, r3, #1
 8016cb4:	2105      	movs	r1, #5
 8016cb6:	fb93 f3f1 	sdiv	r3, r3, r1
 8016cba:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8016cbe:	440b      	add	r3, r1
 8016cc0:	e756      	b.n	8016b70 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8016cc2:	f240 60e2 	movw	r0, #1762	; 0x6e2
 8016cc6:	4283      	cmp	r3, r0
 8016cc8:	d809      	bhi.n	8016cde <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 8016cca:	f240 60df 	movw	r0, #1759	; 0x6df
 8016cce:	4283      	cmp	r3, r0
 8016cd0:	f4bf af7d 	bcs.w	8016bce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016cd4:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 8016cd8:	2b05      	cmp	r3, #5
 8016cda:	d8d4      	bhi.n	8016c86 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8016cdc:	e777      	b.n	8016bce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016cde:	f240 60e3 	movw	r0, #1763	; 0x6e3
 8016ce2:	4283      	cmp	r3, r0
 8016ce4:	d09a      	beq.n	8016c1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016ce6:	f240 60e4 	movw	r0, #1764	; 0x6e4
 8016cea:	4283      	cmp	r3, r0
 8016cec:	e7ca      	b.n	8016c84 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8016cee:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 8016cf2:	d22b      	bcs.n	8016d4c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8016cf4:	f640 00ed 	movw	r0, #2285	; 0x8ed
 8016cf8:	4283      	cmp	r3, r0
 8016cfa:	d28f      	bcs.n	8016c1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016cfc:	f640 00e5 	movw	r0, #2277	; 0x8e5
 8016d00:	4283      	cmp	r3, r0
 8016d02:	d816      	bhi.n	8016d32 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8016d04:	f640 00e4 	movw	r0, #2276	; 0x8e4
 8016d08:	4283      	cmp	r3, r0
 8016d0a:	f4bf af60 	bcs.w	8016bce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016d0e:	f240 60ec 	movw	r0, #1772	; 0x6ec
 8016d12:	4283      	cmp	r3, r0
 8016d14:	d80a      	bhi.n	8016d2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 8016d16:	f240 60eb 	movw	r0, #1771	; 0x6eb
 8016d1a:	4283      	cmp	r3, r0
 8016d1c:	f4bf af57 	bcs.w	8016bce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016d20:	f240 60ea 	movw	r0, #1770	; 0x6ea
 8016d24:	4283      	cmp	r3, r0
 8016d26:	f43f af79 	beq.w	8016c1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016d2a:	e7ac      	b.n	8016c86 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8016d2c:	f240 60ed 	movw	r0, #1773	; 0x6ed
 8016d30:	e7f8      	b.n	8016d24 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 8016d32:	f640 00e8 	movw	r0, #2280	; 0x8e8
 8016d36:	4283      	cmp	r3, r0
 8016d38:	d802      	bhi.n	8016d40 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 8016d3a:	f640 00e7 	movw	r0, #2279	; 0x8e7
 8016d3e:	e798      	b.n	8016c72 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8016d40:	f640 00e9 	movw	r0, #2281	; 0x8e9
 8016d44:	4283      	cmp	r3, r0
 8016d46:	f47f af42 	bne.w	8016bce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016d4a:	e767      	b.n	8016c1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016d4c:	f640 00f6 	movw	r0, #2294	; 0x8f6
 8016d50:	4283      	cmp	r3, r0
 8016d52:	f43f af63 	beq.w	8016c1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016d56:	d802      	bhi.n	8016d5e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8016d58:	f640 00f2 	movw	r0, #2290	; 0x8f2
 8016d5c:	e7f2      	b.n	8016d44 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 8016d5e:	f640 00fa 	movw	r0, #2298	; 0x8fa
 8016d62:	4283      	cmp	r3, r0
 8016d64:	d805      	bhi.n	8016d72 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 8016d66:	f640 00f9 	movw	r0, #2297	; 0x8f9
 8016d6a:	4283      	cmp	r3, r0
 8016d6c:	f4ff af2f 	bcc.w	8016bce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016d70:	e754      	b.n	8016c1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016d72:	f640 00fe 	movw	r0, #2302	; 0x8fe
 8016d76:	4283      	cmp	r3, r0
 8016d78:	e7af      	b.n	8016cda <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 8016d7a:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8016d7e:	4617      	mov	r7, r2
 8016d80:	f102 0808 	add.w	r8, r2, #8
 8016d84:	4666      	mov	r6, ip
 8016d86:	6838      	ldr	r0, [r7, #0]
 8016d88:	6879      	ldr	r1, [r7, #4]
 8016d8a:	46e6      	mov	lr, ip
 8016d8c:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8016d90:	3708      	adds	r7, #8
 8016d92:	4547      	cmp	r7, r8
 8016d94:	46f4      	mov	ip, lr
 8016d96:	d1f6      	bne.n	8016d86 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8016d98:	6838      	ldr	r0, [r7, #0]
 8016d9a:	f8ce 0000 	str.w	r0, [lr]
 8016d9e:	88b9      	ldrh	r1, [r7, #4]
 8016da0:	f8ae 1004 	strh.w	r1, [lr, #4]
 8016da4:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8016da8:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8016dac:	d009      	beq.n	8016dc2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 8016dae:	7b51      	ldrb	r1, [r2, #13]
 8016db0:	7992      	ldrb	r2, [r2, #6]
 8016db2:	0149      	lsls	r1, r1, #5
 8016db4:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8016db8:	4311      	orrs	r1, r2
 8016dba:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8016dbe:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8016dc2:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8016dc6:	b2ad      	uxth	r5, r5
 8016dc8:	d00d      	beq.n	8016de6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 8016dca:	442b      	add	r3, r5
 8016dcc:	b29b      	uxth	r3, r3
 8016dce:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8016dd2:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8016dd6:	10db      	asrs	r3, r3, #3
 8016dd8:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8016ddc:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8016de0:	4313      	orrs	r3, r2
 8016de2:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8016de6:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8016dea:	00cb      	lsls	r3, r1, #3
 8016dec:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8016df0:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8016df4:	064f      	lsls	r7, r1, #25
 8016df6:	ea43 0302 	orr.w	r3, r3, r2
 8016dfa:	bf44      	itt	mi
 8016dfc:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016e00:	b21b      	sxthmi	r3, r3
 8016e02:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8016e06:	1b5b      	subs	r3, r3, r5
 8016e08:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8016e0c:	4632      	mov	r2, r6
 8016e0e:	e6fa      	b.n	8016c06 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8016e10:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8016e14:	4617      	mov	r7, r2
 8016e16:	f102 0908 	add.w	r9, r2, #8
 8016e1a:	4666      	mov	r6, ip
 8016e1c:	6838      	ldr	r0, [r7, #0]
 8016e1e:	6879      	ldr	r1, [r7, #4]
 8016e20:	46e0      	mov	r8, ip
 8016e22:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 8016e26:	3708      	adds	r7, #8
 8016e28:	454f      	cmp	r7, r9
 8016e2a:	46c4      	mov	ip, r8
 8016e2c:	d1f6      	bne.n	8016e1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 8016e2e:	6838      	ldr	r0, [r7, #0]
 8016e30:	f8c8 0000 	str.w	r0, [r8]
 8016e34:	88b9      	ldrh	r1, [r7, #4]
 8016e36:	f8a8 1004 	strh.w	r1, [r8, #4]
 8016e3a:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8016e3e:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8016e42:	d009      	beq.n	8016e58 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 8016e44:	7b51      	ldrb	r1, [r2, #13]
 8016e46:	7992      	ldrb	r2, [r2, #6]
 8016e48:	0149      	lsls	r1, r1, #5
 8016e4a:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8016e4e:	4311      	orrs	r1, r2
 8016e50:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8016e54:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8016e58:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8016e5c:	d00e      	beq.n	8016e7c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 8016e5e:	eba3 030e 	sub.w	r3, r3, lr
 8016e62:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8016e66:	b29b      	uxth	r3, r3
 8016e68:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8016e6c:	10db      	asrs	r3, r3, #3
 8016e6e:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8016e72:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8016e76:	4313      	orrs	r3, r2
 8016e78:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8016e7c:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8016e80:	00cb      	lsls	r3, r1, #3
 8016e82:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8016e86:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8016e8a:	0648      	lsls	r0, r1, #25
 8016e8c:	ea43 0302 	orr.w	r3, r3, r2
 8016e90:	bf44      	itt	mi
 8016e92:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016e96:	b21b      	sxthmi	r3, r3
 8016e98:	1b5d      	subs	r5, r3, r5
 8016e9a:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8016e9e:	e7b5      	b.n	8016e0c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

08016ea0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8016ea0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016ea4:	461e      	mov	r6, r3
 8016ea6:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8016ea8:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8016eac:	4604      	mov	r4, r0
 8016eae:	4617      	mov	r7, r2
 8016eb0:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8016eb4:	f7f0 fdae 	bl	8007a14 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8016eb8:	4605      	mov	r5, r0
 8016eba:	b918      	cbnz	r0, 8016ec4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 8016ebc:	6030      	str	r0, [r6, #0]
 8016ebe:	4628      	mov	r0, r5
 8016ec0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016ec4:	683b      	ldr	r3, [r7, #0]
 8016ec6:	4601      	mov	r1, r0
 8016ec8:	68db      	ldr	r3, [r3, #12]
 8016eca:	4638      	mov	r0, r7
 8016ecc:	4798      	blx	r3
 8016ece:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8016ed2:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8016ed6:	4602      	mov	r2, r0
 8016ed8:	6030      	str	r0, [r6, #0]
 8016eda:	d213      	bcs.n	8016f04 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 8016edc:	4643      	mov	r3, r8
 8016ede:	4639      	mov	r1, r7
 8016ee0:	4620      	mov	r0, r4
 8016ee2:	f7ff fe3b 	bl	8016b5c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8016ee6:	6030      	str	r0, [r6, #0]
 8016ee8:	6833      	ldr	r3, [r6, #0]
 8016eea:	b143      	cbz	r3, 8016efe <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 8016eec:	7b5a      	ldrb	r2, [r3, #13]
 8016eee:	7a9b      	ldrb	r3, [r3, #10]
 8016ef0:	0052      	lsls	r2, r2, #1
 8016ef2:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8016ef6:	4313      	orrs	r3, r2
 8016ef8:	bf0c      	ite	eq
 8016efa:	2301      	moveq	r3, #1
 8016efc:	2300      	movne	r3, #0
 8016efe:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8016f02:	e7dc      	b.n	8016ebe <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 8016f04:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8016f08:	b29b      	uxth	r3, r3
 8016f0a:	2b7f      	cmp	r3, #127	; 0x7f
 8016f0c:	d804      	bhi.n	8016f18 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 8016f0e:	4639      	mov	r1, r7
 8016f10:	4620      	mov	r0, r4
 8016f12:	f7ff fd17 	bl	8016944 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8016f16:	e7e6      	b.n	8016ee6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 8016f18:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8016f1c:	2b00      	cmp	r3, #0
 8016f1e:	d0e3      	beq.n	8016ee8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8016f20:	f640 1302 	movw	r3, #2306	; 0x902
 8016f24:	429d      	cmp	r5, r3
 8016f26:	d1df      	bne.n	8016ee8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8016f28:	4601      	mov	r1, r0
 8016f2a:	4620      	mov	r0, r4
 8016f2c:	f7ff fcdb 	bl	80168e6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8016f30:	e7d9      	b.n	8016ee6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

08016f32 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 8016f32:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8016f36:	461e      	mov	r6, r3
 8016f38:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8016f3a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8016f3e:	4604      	mov	r4, r0
 8016f40:	4617      	mov	r7, r2
 8016f42:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8016f46:	f7f0 fd65 	bl	8007a14 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8016f4a:	4605      	mov	r5, r0
 8016f4c:	b918      	cbnz	r0, 8016f56 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 8016f4e:	6030      	str	r0, [r6, #0]
 8016f50:	4628      	mov	r0, r5
 8016f52:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8016f56:	683b      	ldr	r3, [r7, #0]
 8016f58:	4601      	mov	r1, r0
 8016f5a:	f8d3 9008 	ldr.w	r9, [r3, #8]
 8016f5e:	4638      	mov	r0, r7
 8016f60:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8016f64:	47c8      	blx	r9
 8016f66:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8016f6a:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8016f6e:	4602      	mov	r2, r0
 8016f70:	6030      	str	r0, [r6, #0]
 8016f72:	d213      	bcs.n	8016f9c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 8016f74:	4643      	mov	r3, r8
 8016f76:	4639      	mov	r1, r7
 8016f78:	4620      	mov	r0, r4
 8016f7a:	f7ff fdef 	bl	8016b5c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8016f7e:	6030      	str	r0, [r6, #0]
 8016f80:	6833      	ldr	r3, [r6, #0]
 8016f82:	b143      	cbz	r3, 8016f96 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 8016f84:	7b5a      	ldrb	r2, [r3, #13]
 8016f86:	7a9b      	ldrb	r3, [r3, #10]
 8016f88:	0052      	lsls	r2, r2, #1
 8016f8a:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8016f8e:	4313      	orrs	r3, r2
 8016f90:	bf0c      	ite	eq
 8016f92:	2301      	moveq	r3, #1
 8016f94:	2300      	movne	r3, #0
 8016f96:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8016f9a:	e7d9      	b.n	8016f50 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 8016f9c:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8016fa0:	b29b      	uxth	r3, r3
 8016fa2:	2b7f      	cmp	r3, #127	; 0x7f
 8016fa4:	d804      	bhi.n	8016fb0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 8016fa6:	4639      	mov	r1, r7
 8016fa8:	4620      	mov	r0, r4
 8016faa:	f7ff fccb 	bl	8016944 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8016fae:	e7e6      	b.n	8016f7e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 8016fb0:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8016fb4:	2b00      	cmp	r3, #0
 8016fb6:	d0e3      	beq.n	8016f80 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8016fb8:	f640 1302 	movw	r3, #2306	; 0x902
 8016fbc:	429d      	cmp	r5, r3
 8016fbe:	d1df      	bne.n	8016f80 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8016fc0:	4601      	mov	r1, r0
 8016fc2:	4620      	mov	r0, r4
 8016fc4:	f7ff fc8f 	bl	80168e6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8016fc8:	e7d9      	b.n	8016f7e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

08016fca <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 8016fca:	b510      	push	{r4, lr}
 8016fcc:	4604      	mov	r4, r0
 8016fce:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 8016fd2:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8016fd4:	b1f1      	cbz	r1, 8017014 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8016fd6:	2b0a      	cmp	r3, #10
 8016fd8:	d02f      	beq.n	801703a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8016fda:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 8016fdc:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8016fe0:	3901      	subs	r1, #1
 8016fe2:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 8016fe4:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 8016fe8:	1c51      	adds	r1, r2, #1
 8016fea:	b289      	uxth	r1, r1
 8016fec:	2901      	cmp	r1, #1
 8016fee:	bf84      	itt	hi
 8016ff0:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8016ff4:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 8016ff6:	f103 0201 	add.w	r2, r3, #1
 8016ffa:	8722      	strh	r2, [r4, #56]	; 0x38
 8016ffc:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8016ffe:	bf98      	it	ls
 8017000:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 8017002:	4413      	add	r3, r2
 8017004:	b29b      	uxth	r3, r3
 8017006:	2b09      	cmp	r3, #9
 8017008:	bf88      	it	hi
 801700a:	3b0a      	subhi	r3, #10
 801700c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8017010:	8458      	strh	r0, [r3, #34]	; 0x22
 8017012:	e7dc      	b.n	8016fce <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8017014:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8017016:	2b0a      	cmp	r3, #10
 8017018:	d00f      	beq.n	801703a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801701a:	4620      	mov	r0, r4
 801701c:	f7ff fc11 	bl	8016842 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8017020:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8017022:	1c5a      	adds	r2, r3, #1
 8017024:	8722      	strh	r2, [r4, #56]	; 0x38
 8017026:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8017028:	4413      	add	r3, r2
 801702a:	b29b      	uxth	r3, r3
 801702c:	2b09      	cmp	r3, #9
 801702e:	bf88      	it	hi
 8017030:	3b0a      	subhi	r3, #10
 8017032:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8017036:	8458      	strh	r0, [r3, #34]	; 0x22
 8017038:	e7ec      	b.n	8017014 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801703a:	bd10      	pop	{r4, pc}

0801703c <_ZN8touchgfx12TextProvider11getNextCharEv>:
 801703c:	b538      	push	{r3, r4, r5, lr}
 801703e:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8017040:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 8017044:	4604      	mov	r4, r0
 8017046:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 8017048:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 801704a:	3a01      	subs	r2, #1
 801704c:	8702      	strh	r2, [r0, #56]	; 0x38
 801704e:	1c5a      	adds	r2, r3, #1
 8017050:	b292      	uxth	r2, r2
 8017052:	2a09      	cmp	r2, #9
 8017054:	bf86      	itte	hi
 8017056:	3b09      	subhi	r3, #9
 8017058:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 801705a:	86c2      	strhls	r2, [r0, #54]	; 0x36
 801705c:	f7ff ffb5 	bl	8016fca <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8017060:	8c23      	ldrh	r3, [r4, #32]
 8017062:	2b01      	cmp	r3, #1
 8017064:	bf9c      	itt	ls
 8017066:	3301      	addls	r3, #1
 8017068:	8423      	strhls	r3, [r4, #32]
 801706a:	8be3      	ldrh	r3, [r4, #30]
 801706c:	b90b      	cbnz	r3, 8017072 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 801706e:	2302      	movs	r3, #2
 8017070:	83e3      	strh	r3, [r4, #30]
 8017072:	8be3      	ldrh	r3, [r4, #30]
 8017074:	3b01      	subs	r3, #1
 8017076:	b29b      	uxth	r3, r3
 8017078:	83e3      	strh	r3, [r4, #30]
 801707a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801707e:	4628      	mov	r0, r5
 8017080:	8365      	strh	r5, [r4, #26]
 8017082:	bd38      	pop	{r3, r4, r5, pc}

08017084 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8017084:	428a      	cmp	r2, r1
 8017086:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801708a:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 801708c:	d931      	bls.n	80170f2 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 801708e:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 8017090:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 8017094:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 8017098:	19ee      	adds	r6, r5, r7
 801709a:	1a54      	subs	r4, r2, r1
 801709c:	3e01      	subs	r6, #1
 801709e:	fa1f fe84 	uxth.w	lr, r4
 80170a2:	b2b4      	uxth	r4, r6
 80170a4:	eba4 090e 	sub.w	r9, r4, lr
 80170a8:	fa1f f989 	uxth.w	r9, r9
 80170ac:	2c09      	cmp	r4, #9
 80170ae:	4626      	mov	r6, r4
 80170b0:	bf88      	it	hi
 80170b2:	f1a4 060a 	subhi.w	r6, r4, #10
 80170b6:	f1bc 0f00 	cmp.w	ip, #0
 80170ba:	bf08      	it	eq
 80170bc:	f04f 0c02 	moveq.w	ip, #2
 80170c0:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 80170c4:	f10c 3cff 	add.w	ip, ip, #4294967295
 80170c8:	fa1f fc8c 	uxth.w	ip, ip
 80170cc:	3c01      	subs	r4, #1
 80170ce:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 80170d2:	b2a4      	uxth	r4, r4
 80170d4:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 80170d8:	454c      	cmp	r4, r9
 80170da:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 80170de:	d1e5      	bne.n	80170ac <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 80170e0:	eba5 050e 	sub.w	r5, r5, lr
 80170e4:	eb0e 0408 	add.w	r4, lr, r8
 80170e8:	8705      	strh	r5, [r0, #56]	; 0x38
 80170ea:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 80170ee:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 80170f2:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 80170f4:	1a64      	subs	r4, r4, r1
 80170f6:	4439      	add	r1, r7
 80170f8:	b289      	uxth	r1, r1
 80170fa:	2909      	cmp	r1, #9
 80170fc:	bf88      	it	hi
 80170fe:	390a      	subhi	r1, #10
 8017100:	8704      	strh	r4, [r0, #56]	; 0x38
 8017102:	86c1      	strh	r1, [r0, #54]	; 0x36
 8017104:	250a      	movs	r5, #10
 8017106:	b18a      	cbz	r2, 801712c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 8017108:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 801710a:	3a01      	subs	r2, #1
 801710c:	b292      	uxth	r2, r2
 801710e:	3101      	adds	r1, #1
 8017110:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 8017114:	8701      	strh	r1, [r0, #56]	; 0x38
 8017116:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8017118:	b901      	cbnz	r1, 801711c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 801711a:	86c5      	strh	r5, [r0, #54]	; 0x36
 801711c:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 801711e:	3901      	subs	r1, #1
 8017120:	b289      	uxth	r1, r1
 8017122:	86c1      	strh	r1, [r0, #54]	; 0x36
 8017124:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8017128:	844c      	strh	r4, [r1, #34]	; 0x22
 801712a:	e7ec      	b.n	8017106 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 801712c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017130:	f7ff bf4b 	b.w	8016fca <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08017134 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 8017134:	b570      	push	{r4, r5, r6, lr}
 8017136:	2500      	movs	r5, #0
 8017138:	4295      	cmp	r5, r2
 801713a:	d011      	beq.n	8017160 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 801713c:	8bc4      	ldrh	r4, [r0, #30]
 801713e:	f831 6b02 	ldrh.w	r6, [r1], #2
 8017142:	4414      	add	r4, r2
 8017144:	3c01      	subs	r4, #1
 8017146:	1b64      	subs	r4, r4, r5
 8017148:	b2a4      	uxth	r4, r4
 801714a:	2c01      	cmp	r4, #1
 801714c:	bf88      	it	hi
 801714e:	3c02      	subhi	r4, #2
 8017150:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8017154:	8b64      	ldrh	r4, [r4, #26]
 8017156:	42b4      	cmp	r4, r6
 8017158:	d117      	bne.n	801718a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 801715a:	3501      	adds	r5, #1
 801715c:	b2ad      	uxth	r5, r5
 801715e:	e7eb      	b.n	8017138 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 8017160:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8017164:	2400      	movs	r4, #0
 8017166:	4413      	add	r3, r2
 8017168:	b2a2      	uxth	r2, r4
 801716a:	429a      	cmp	r2, r3
 801716c:	da0f      	bge.n	801718e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 801716e:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 8017170:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 8017174:	4432      	add	r2, r6
 8017176:	b292      	uxth	r2, r2
 8017178:	2a09      	cmp	r2, #9
 801717a:	bf88      	it	hi
 801717c:	3a0a      	subhi	r2, #10
 801717e:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8017182:	3401      	adds	r4, #1
 8017184:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 8017186:	42aa      	cmp	r2, r5
 8017188:	d0ee      	beq.n	8017168 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 801718a:	2000      	movs	r0, #0
 801718c:	bd70      	pop	{r4, r5, r6, pc}
 801718e:	2001      	movs	r0, #1
 8017190:	e7fc      	b.n	801718c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

08017192 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 8017192:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017196:	4605      	mov	r5, r0
 8017198:	4616      	mov	r6, r2
 801719a:	1c8c      	adds	r4, r1, #2
 801719c:	8809      	ldrh	r1, [r1, #0]
 801719e:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 80171a2:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 80171a6:	42b3      	cmp	r3, r6
 80171a8:	d124      	bne.n	80171f4 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 80171aa:	f3c1 2903 	ubfx	r9, r1, #8, #4
 80171ae:	f3c1 1803 	ubfx	r8, r1, #4, #4
 80171b2:	f001 070f 	and.w	r7, r1, #15
 80171b6:	f8cd 8000 	str.w	r8, [sp]
 80171ba:	464b      	mov	r3, r9
 80171bc:	4652      	mov	r2, sl
 80171be:	4621      	mov	r1, r4
 80171c0:	4628      	mov	r0, r5
 80171c2:	f7ff ffb7 	bl	8017134 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 80171c6:	4683      	mov	fp, r0
 80171c8:	b168      	cbz	r0, 80171e6 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 80171ca:	eb0a 0109 	add.w	r1, sl, r9
 80171ce:	4441      	add	r1, r8
 80171d0:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 80171d4:	463a      	mov	r2, r7
 80171d6:	4649      	mov	r1, r9
 80171d8:	4628      	mov	r0, r5
 80171da:	f7ff ff53 	bl	8017084 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 80171de:	4658      	mov	r0, fp
 80171e0:	b003      	add	sp, #12
 80171e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80171e6:	eb07 010a 	add.w	r1, r7, sl
 80171ea:	4449      	add	r1, r9
 80171ec:	4441      	add	r1, r8
 80171ee:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 80171f2:	e7d2      	b.n	801719a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 80171f4:	f04f 0b00 	mov.w	fp, #0
 80171f8:	e7f1      	b.n	80171de <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

080171fa <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 80171fa:	b570      	push	{r4, r5, r6, lr}
 80171fc:	8810      	ldrh	r0, [r2, #0]
 80171fe:	4298      	cmp	r0, r3
 8017200:	d817      	bhi.n	8017232 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8017202:	1e48      	subs	r0, r1, #1
 8017204:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8017208:	4298      	cmp	r0, r3
 801720a:	d312      	bcc.n	8017232 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801720c:	2400      	movs	r4, #0
 801720e:	428c      	cmp	r4, r1
 8017210:	d20f      	bcs.n	8017232 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8017212:	1860      	adds	r0, r4, r1
 8017214:	1040      	asrs	r0, r0, #1
 8017216:	0085      	lsls	r5, r0, #2
 8017218:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 801721c:	42b3      	cmp	r3, r6
 801721e:	d902      	bls.n	8017226 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8017220:	3001      	adds	r0, #1
 8017222:	b284      	uxth	r4, r0
 8017224:	e7f3      	b.n	801720e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8017226:	d201      	bcs.n	801722c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8017228:	b281      	uxth	r1, r0
 801722a:	e7f0      	b.n	801720e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801722c:	442a      	add	r2, r5
 801722e:	8850      	ldrh	r0, [r2, #2]
 8017230:	bd70      	pop	{r4, r5, r6, pc}
 8017232:	2000      	movs	r0, #0
 8017234:	e7fc      	b.n	8017230 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

08017236 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 8017236:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801723a:	6c45      	ldr	r5, [r0, #68]	; 0x44
 801723c:	886f      	ldrh	r7, [r5, #2]
 801723e:	4604      	mov	r4, r0
 8017240:	087f      	lsrs	r7, r7, #1
 8017242:	260b      	movs	r6, #11
 8017244:	3e01      	subs	r6, #1
 8017246:	d013      	beq.n	8017270 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8017248:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801724a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801724e:	462a      	mov	r2, r5
 8017250:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8017254:	4639      	mov	r1, r7
 8017256:	4643      	mov	r3, r8
 8017258:	4620      	mov	r0, r4
 801725a:	f7ff ffce 	bl	80171fa <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 801725e:	b138      	cbz	r0, 8017270 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8017260:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 8017264:	4642      	mov	r2, r8
 8017266:	4620      	mov	r0, r4
 8017268:	f7ff ff93 	bl	8017192 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 801726c:	2800      	cmp	r0, #0
 801726e:	d1e9      	bne.n	8017244 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8017270:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08017274 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8017274:	b570      	push	{r4, r5, r6, lr}
 8017276:	694a      	ldr	r2, [r1, #20]
 8017278:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 801727a:	684b      	ldr	r3, [r1, #4]
 801727c:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 801727e:	1b54      	subs	r4, r2, r5
 8017280:	f000 8106 	beq.w	8017490 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8017284:	1b9b      	subs	r3, r3, r6
 8017286:	d003      	beq.n	8017290 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8017288:	4363      	muls	r3, r4
 801728a:	2210      	movs	r2, #16
 801728c:	fb93 f3f2 	sdiv	r3, r3, r2
 8017290:	680c      	ldr	r4, [r1, #0]
 8017292:	698a      	ldr	r2, [r1, #24]
 8017294:	1b65      	subs	r5, r4, r5
 8017296:	f000 80fd 	beq.w	8017494 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 801729a:	1b92      	subs	r2, r2, r6
 801729c:	d003      	beq.n	80172a6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801729e:	436a      	muls	r2, r5
 80172a0:	2410      	movs	r4, #16
 80172a2:	fb92 f2f4 	sdiv	r2, r2, r4
 80172a6:	1a9b      	subs	r3, r3, r2
 80172a8:	ee07 3a90 	vmov	s15, r3
 80172ac:	ed9f 4a88 	vldr	s8, [pc, #544]	; 80174d0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 80172b0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80172b4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80172b8:	ee67 7a84 	vmul.f32	s15, s15, s8
 80172bc:	460a      	mov	r2, r1
 80172be:	ee87 3a27 	vdiv.f32	s6, s14, s15
 80172c2:	4603      	mov	r3, r0
 80172c4:	f100 040c 	add.w	r4, r0, #12
 80172c8:	eeb1 6a43 	vneg.f32	s12, s6
 80172cc:	edd2 7a02 	vldr	s15, [r2, #8]
 80172d0:	eec7 6a27 	vdiv.f32	s13, s14, s15
 80172d4:	3214      	adds	r2, #20
 80172d6:	ece3 6a01 	vstmia	r3!, {s13}
 80172da:	ed52 7a02 	vldr	s15, [r2, #-8]
 80172de:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80172e2:	429c      	cmp	r4, r3
 80172e4:	edc3 7a02 	vstr	s15, [r3, #8]
 80172e8:	ed52 7a01 	vldr	s15, [r2, #-4]
 80172ec:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80172f0:	edc3 7a05 	vstr	s15, [r3, #20]
 80172f4:	d1ea      	bne.n	80172cc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 80172f6:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80172f8:	698b      	ldr	r3, [r1, #24]
 80172fa:	edd0 4a02 	vldr	s9, [r0, #8]
 80172fe:	edd0 3a00 	vldr	s7, [r0]
 8017302:	edd0 6a01 	vldr	s13, [r0, #4]
 8017306:	ed90 5a05 	vldr	s10, [r0, #20]
 801730a:	ed90 2a03 	vldr	s4, [r0, #12]
 801730e:	edd0 5a04 	vldr	s11, [r0, #16]
 8017312:	ed90 1a07 	vldr	s2, [r0, #28]
 8017316:	edd0 2a06 	vldr	s5, [r0, #24]
 801731a:	1a9b      	subs	r3, r3, r2
 801731c:	ee07 3a90 	vmov	s15, r3
 8017320:	684b      	ldr	r3, [r1, #4]
 8017322:	1a9b      	subs	r3, r3, r2
 8017324:	ee07 3a10 	vmov	s14, r3
 8017328:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801732c:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8017330:	ee67 7a84 	vmul.f32	s15, s15, s8
 8017334:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8017338:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801733c:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8017340:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017344:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8017348:	eee6 7a87 	vfma.f32	s15, s13, s14
 801734c:	ee32 5a45 	vsub.f32	s10, s4, s10
 8017350:	ee67 7a83 	vmul.f32	s15, s15, s6
 8017354:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 8017358:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801735a:	694a      	ldr	r2, [r1, #20]
 801735c:	1b13      	subs	r3, r2, r4
 801735e:	ee07 3a10 	vmov	s14, r3
 8017362:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017366:	680b      	ldr	r3, [r1, #0]
 8017368:	ee27 7a04 	vmul.f32	s14, s14, s8
 801736c:	1b1b      	subs	r3, r3, r4
 801736e:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 8017372:	ee07 3a10 	vmov	s14, r3
 8017376:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801737a:	ee27 7a04 	vmul.f32	s14, s14, s8
 801737e:	eee6 4a87 	vfma.f32	s9, s13, s14
 8017382:	ee64 4a86 	vmul.f32	s9, s9, s12
 8017386:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 801738a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801738c:	698b      	ldr	r3, [r1, #24]
 801738e:	1a9b      	subs	r3, r3, r2
 8017390:	ee06 3a90 	vmov	s13, r3
 8017394:	684b      	ldr	r3, [r1, #4]
 8017396:	1a9b      	subs	r3, r3, r2
 8017398:	ee07 3a10 	vmov	s14, r3
 801739c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80173a0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80173a4:	ee66 6a84 	vmul.f32	s13, s13, s8
 80173a8:	ee27 7a04 	vmul.f32	s14, s14, s8
 80173ac:	ee65 6a66 	vnmul.f32	s13, s10, s13
 80173b0:	eee5 6a87 	vfma.f32	s13, s11, s14
 80173b4:	ee66 6a83 	vmul.f32	s13, s13, s6
 80173b8:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 80173bc:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 80173be:	694a      	ldr	r2, [r1, #20]
 80173c0:	1b13      	subs	r3, r2, r4
 80173c2:	ee07 3a10 	vmov	s14, r3
 80173c6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80173ca:	680b      	ldr	r3, [r1, #0]
 80173cc:	ee27 7a04 	vmul.f32	s14, s14, s8
 80173d0:	1b1b      	subs	r3, r3, r4
 80173d2:	ee25 5a47 	vnmul.f32	s10, s10, s14
 80173d6:	ee07 3a10 	vmov	s14, r3
 80173da:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80173de:	ee27 7a04 	vmul.f32	s14, s14, s8
 80173e2:	eea5 5a87 	vfma.f32	s10, s11, s14
 80173e6:	edd0 5a08 	vldr	s11, [r0, #32]
 80173ea:	ee25 5a06 	vmul.f32	s10, s10, s12
 80173ee:	ee31 1a65 	vsub.f32	s2, s2, s11
 80173f2:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 80173f6:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80173f8:	698b      	ldr	r3, [r1, #24]
 80173fa:	1a9b      	subs	r3, r3, r2
 80173fc:	ee07 3a10 	vmov	s14, r3
 8017400:	684b      	ldr	r3, [r1, #4]
 8017402:	1a9b      	subs	r3, r3, r2
 8017404:	ee01 3a90 	vmov	s3, r3
 8017408:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801740c:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8017410:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017414:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8017418:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 801741c:	ee61 1a84 	vmul.f32	s3, s3, s8
 8017420:	eea1 7a21 	vfma.f32	s14, s2, s3
 8017424:	ee27 7a03 	vmul.f32	s14, s14, s6
 8017428:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 801742c:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801742e:	694a      	ldr	r2, [r1, #20]
 8017430:	1b13      	subs	r3, r2, r4
 8017432:	ee03 3a10 	vmov	s6, r3
 8017436:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801743a:	680b      	ldr	r3, [r1, #0]
 801743c:	ee23 3a04 	vmul.f32	s6, s6, s8
 8017440:	1b1b      	subs	r3, r3, r4
 8017442:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 8017446:	ee03 3a10 	vmov	s6, r3
 801744a:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801744e:	ee23 4a04 	vmul.f32	s8, s6, s8
 8017452:	eee1 5a04 	vfma.f32	s11, s2, s8
 8017456:	ee25 6a86 	vmul.f32	s12, s11, s12
 801745a:	ee62 5a67 	vnmul.f32	s11, s4, s15
 801745e:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 8017462:	eee3 5aa6 	vfma.f32	s11, s7, s13
 8017466:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 801746a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801746e:	dd13      	ble.n	8017498 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 8017470:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8017474:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8017478:	63c3      	str	r3, [r0, #60]	; 0x3c
 801747a:	eee3 7a87 	vfma.f32	s15, s7, s14
 801747e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8017482:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017486:	dd15      	ble.n	80174b4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8017488:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801748c:	6403      	str	r3, [r0, #64]	; 0x40
 801748e:	bd70      	pop	{r4, r5, r6, pc}
 8017490:	4623      	mov	r3, r4
 8017492:	e6fd      	b.n	8017290 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8017494:	462a      	mov	r2, r5
 8017496:	e706      	b.n	80172a6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8017498:	d502      	bpl.n	80174a0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 801749a:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801749e:	e7e9      	b.n	8017474 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 80174a0:	ee22 2a64 	vnmul.f32	s4, s4, s9
 80174a4:	eea3 2a85 	vfma.f32	s4, s7, s10
 80174a8:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 80174ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80174b0:	dade      	bge.n	8017470 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 80174b2:	e7f2      	b.n	801749a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 80174b4:	d502      	bpl.n	80174bc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 80174b6:	f647 73ff 	movw	r3, #32767	; 0x7fff
 80174ba:	e7e7      	b.n	801748c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 80174bc:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 80174c0:	eee3 4a86 	vfma.f32	s9, s7, s12
 80174c4:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 80174c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80174cc:	dadc      	bge.n	8017488 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 80174ce:	e7f2      	b.n	80174b6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 80174d0:	3d800000 	.word	0x3d800000

080174d4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 80174d4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80174d8:	2714      	movs	r7, #20
 80174da:	435f      	muls	r7, r3
 80174dc:	eb02 0c07 	add.w	ip, r2, r7
 80174e0:	f8dc 5004 	ldr.w	r5, [ip, #4]
 80174e4:	f115 0e0f 	adds.w	lr, r5, #15
 80174e8:	f100 80a2 	bmi.w	8017630 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 80174ec:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 80174f0:	9c08      	ldr	r4, [sp, #32]
 80174f2:	f8c0 e014 	str.w	lr, [r0, #20]
 80174f6:	2614      	movs	r6, #20
 80174f8:	4366      	muls	r6, r4
 80174fa:	eb02 0806 	add.w	r8, r2, r6
 80174fe:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8017502:	f115 040f 	adds.w	r4, r5, #15
 8017506:	f100 809f 	bmi.w	8017648 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 801750a:	1124      	asrs	r4, r4, #4
 801750c:	eba4 040e 	sub.w	r4, r4, lr
 8017510:	6184      	str	r4, [r0, #24]
 8017512:	2c00      	cmp	r4, #0
 8017514:	f000 808a 	beq.w	801762c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 8017518:	f8dc 9004 	ldr.w	r9, [ip, #4]
 801751c:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8017520:	5995      	ldr	r5, [r2, r6]
 8017522:	eba4 0809 	sub.w	r8, r4, r9
 8017526:	59d4      	ldr	r4, [r2, r7]
 8017528:	eba5 0a04 	sub.w	sl, r5, r4
 801752c:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8017530:	fb0e fe05 	mul.w	lr, lr, r5
 8017534:	fb0a ee19 	mls	lr, sl, r9, lr
 8017538:	fb08 e404 	mla	r4, r8, r4, lr
 801753c:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8017540:	3c01      	subs	r4, #1
 8017542:	19a4      	adds	r4, r4, r6
 8017544:	f100 808c 	bmi.w	8017660 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 8017548:	fb94 fef6 	sdiv	lr, r4, r6
 801754c:	f8c0 e000 	str.w	lr, [r0]
 8017550:	fb06 441e 	mls	r4, r6, lr, r4
 8017554:	6104      	str	r4, [r0, #16]
 8017556:	2d00      	cmp	r5, #0
 8017558:	f2c0 8095 	blt.w	8017686 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 801755c:	fb95 f4f6 	sdiv	r4, r5, r6
 8017560:	6044      	str	r4, [r0, #4]
 8017562:	fb06 5514 	mls	r5, r6, r4, r5
 8017566:	6085      	str	r5, [r0, #8]
 8017568:	60c6      	str	r6, [r0, #12]
 801756a:	f8dc 4004 	ldr.w	r4, [ip, #4]
 801756e:	6945      	ldr	r5, [r0, #20]
 8017570:	59d2      	ldr	r2, [r2, r7]
 8017572:	eddf 6a4d 	vldr	s13, [pc, #308]	; 80176a8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 8017576:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 801757a:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 801757e:	ee07 4a10 	vmov	s14, r4
 8017582:	6804      	ldr	r4, [r0, #0]
 8017584:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8017588:	ee07 2a90 	vmov	s15, r2
 801758c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017590:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017594:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8017598:	ee27 7a26 	vmul.f32	s14, s14, s13
 801759c:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80175a0:	edd3 6a00 	vldr	s13, [r3]
 80175a4:	eee6 6a07 	vfma.f32	s13, s12, s14
 80175a8:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 80175ac:	eee6 6a27 	vfma.f32	s13, s12, s15
 80175b0:	edc0 6a07 	vstr	s13, [r0, #28]
 80175b4:	edd0 6a01 	vldr	s13, [r0, #4]
 80175b8:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 80175bc:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 80175c0:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80175c4:	eea6 6aa5 	vfma.f32	s12, s13, s11
 80175c8:	ed80 6a08 	vstr	s12, [r0, #32]
 80175cc:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 80175ce:	6242      	str	r2, [r0, #36]	; 0x24
 80175d0:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 80175d4:	ed93 6a03 	vldr	s12, [r3, #12]
 80175d8:	eea5 6a87 	vfma.f32	s12, s11, s14
 80175dc:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 80175e0:	eea5 6aa7 	vfma.f32	s12, s11, s15
 80175e4:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 80175e8:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 80175ec:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 80175f0:	eea6 6aa5 	vfma.f32	s12, s13, s11
 80175f4:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 80175f8:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80175fa:	6302      	str	r2, [r0, #48]	; 0x30
 80175fc:	ed93 6a06 	vldr	s12, [r3, #24]
 8017600:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 8017604:	eea5 6a87 	vfma.f32	s12, s11, s14
 8017608:	eeb0 7a46 	vmov.f32	s14, s12
 801760c:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 8017610:	eea6 7a27 	vfma.f32	s14, s12, s15
 8017614:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8017618:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 801761c:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 8017620:	eee6 7a87 	vfma.f32	s15, s13, s14
 8017624:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 8017628:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 801762a:	63c3      	str	r3, [r0, #60]	; 0x3c
 801762c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017630:	f1c5 0501 	rsb	r5, r5, #1
 8017634:	f015 050f 	ands.w	r5, r5, #15
 8017638:	bf18      	it	ne
 801763a:	2501      	movne	r5, #1
 801763c:	2410      	movs	r4, #16
 801763e:	fb9e fef4 	sdiv	lr, lr, r4
 8017642:	ebae 0e05 	sub.w	lr, lr, r5
 8017646:	e753      	b.n	80174f0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8017648:	f1c5 0501 	rsb	r5, r5, #1
 801764c:	f015 050f 	ands.w	r5, r5, #15
 8017650:	bf18      	it	ne
 8017652:	2501      	movne	r5, #1
 8017654:	f04f 0910 	mov.w	r9, #16
 8017658:	fb94 f4f9 	sdiv	r4, r4, r9
 801765c:	1b64      	subs	r4, r4, r5
 801765e:	e755      	b.n	801750c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 8017660:	4264      	negs	r4, r4
 8017662:	fb94 fef6 	sdiv	lr, r4, r6
 8017666:	f1ce 0800 	rsb	r8, lr, #0
 801766a:	fb06 441e 	mls	r4, r6, lr, r4
 801766e:	f8c0 8000 	str.w	r8, [r0]
 8017672:	6104      	str	r4, [r0, #16]
 8017674:	2c00      	cmp	r4, #0
 8017676:	f43f af6e 	beq.w	8017556 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 801767a:	ea6f 0e0e 	mvn.w	lr, lr
 801767e:	f8c0 e000 	str.w	lr, [r0]
 8017682:	1b34      	subs	r4, r6, r4
 8017684:	e766      	b.n	8017554 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 8017686:	426d      	negs	r5, r5
 8017688:	fb95 f4f6 	sdiv	r4, r5, r6
 801768c:	f1c4 0e00 	rsb	lr, r4, #0
 8017690:	fb06 5514 	mls	r5, r6, r4, r5
 8017694:	f8c0 e004 	str.w	lr, [r0, #4]
 8017698:	6085      	str	r5, [r0, #8]
 801769a:	2d00      	cmp	r5, #0
 801769c:	f43f af64 	beq.w	8017568 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 80176a0:	43e4      	mvns	r4, r4
 80176a2:	6044      	str	r4, [r0, #4]
 80176a4:	1b75      	subs	r5, r6, r5
 80176a6:	e75e      	b.n	8017566 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 80176a8:	3d800000 	.word	0x3d800000

080176ac <_ZN8touchgfx7Unicode6strlenEPKt>:
 80176ac:	4602      	mov	r2, r0
 80176ae:	b148      	cbz	r0, 80176c4 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 80176b0:	2300      	movs	r3, #0
 80176b2:	b298      	uxth	r0, r3
 80176b4:	3301      	adds	r3, #1
 80176b6:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 80176ba:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 80176be:	2900      	cmp	r1, #0
 80176c0:	d1f7      	bne.n	80176b2 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 80176c2:	4770      	bx	lr
 80176c4:	4770      	bx	lr

080176c6 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 80176c6:	b530      	push	{r4, r5, lr}
 80176c8:	4604      	mov	r4, r0
 80176ca:	b159      	cbz	r1, 80176e4 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 80176cc:	b148      	cbz	r0, 80176e2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 80176ce:	2300      	movs	r3, #0
 80176d0:	b298      	uxth	r0, r3
 80176d2:	4282      	cmp	r2, r0
 80176d4:	d905      	bls.n	80176e2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 80176d6:	5ccd      	ldrb	r5, [r1, r3]
 80176d8:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 80176dc:	3301      	adds	r3, #1
 80176de:	2d00      	cmp	r5, #0
 80176e0:	d1f6      	bne.n	80176d0 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 80176e2:	bd30      	pop	{r4, r5, pc}
 80176e4:	4608      	mov	r0, r1
 80176e6:	e7fc      	b.n	80176e2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

080176e8 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 80176e8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80176ea:	b08b      	sub	sp, #44	; 0x2c
 80176ec:	468c      	mov	ip, r1
 80176ee:	2100      	movs	r1, #0
 80176f0:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 80176f4:	4604      	mov	r4, r0
 80176f6:	261f      	movs	r6, #31
 80176f8:	af01      	add	r7, sp, #4
 80176fa:	fb94 fef3 	sdiv	lr, r4, r3
 80176fe:	fb03 441e 	mls	r4, r3, lr, r4
 8017702:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 8017706:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 801770a:	b2ec      	uxtb	r4, r5
 801770c:	2d09      	cmp	r5, #9
 801770e:	bfd4      	ite	le
 8017710:	3430      	addle	r4, #48	; 0x30
 8017712:	3457      	addgt	r4, #87	; 0x57
 8017714:	b2e4      	uxtb	r4, r4
 8017716:	55bc      	strb	r4, [r7, r6]
 8017718:	4674      	mov	r4, lr
 801771a:	1e71      	subs	r1, r6, #1
 801771c:	b974      	cbnz	r4, 801773c <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 801771e:	2800      	cmp	r0, #0
 8017720:	da05      	bge.n	801772e <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 8017722:	ab0a      	add	r3, sp, #40	; 0x28
 8017724:	4419      	add	r1, r3
 8017726:	232d      	movs	r3, #45	; 0x2d
 8017728:	f801 3c24 	strb.w	r3, [r1, #-36]
 801772c:	1eb1      	subs	r1, r6, #2
 801772e:	3101      	adds	r1, #1
 8017730:	4439      	add	r1, r7
 8017732:	4660      	mov	r0, ip
 8017734:	f7ff ffc7 	bl	80176c6 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8017738:	b00b      	add	sp, #44	; 0x2c
 801773a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801773c:	460e      	mov	r6, r1
 801773e:	e7dc      	b.n	80176fa <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

08017740 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 8017740:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017742:	b08b      	sub	sp, #44	; 0x2c
 8017744:	468c      	mov	ip, r1
 8017746:	2100      	movs	r1, #0
 8017748:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 801774c:	ae01      	add	r6, sp, #4
 801774e:	211f      	movs	r1, #31
 8017750:	fbb0 f7f3 	udiv	r7, r0, r3
 8017754:	fb03 0517 	mls	r5, r3, r7, r0
 8017758:	b2ec      	uxtb	r4, r5
 801775a:	2d09      	cmp	r5, #9
 801775c:	bfd4      	ite	le
 801775e:	3430      	addle	r4, #48	; 0x30
 8017760:	3457      	addgt	r4, #87	; 0x57
 8017762:	b2e4      	uxtb	r4, r4
 8017764:	558c      	strb	r4, [r1, r6]
 8017766:	4638      	mov	r0, r7
 8017768:	1e4c      	subs	r4, r1, #1
 801776a:	b92f      	cbnz	r7, 8017778 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 801776c:	4431      	add	r1, r6
 801776e:	4660      	mov	r0, ip
 8017770:	f7ff ffa9 	bl	80176c6 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8017774:	b00b      	add	sp, #44	; 0x2c
 8017776:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8017778:	4621      	mov	r1, r4
 801777a:	e7e9      	b.n	8017750 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

0801777c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 801777c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017780:	4691      	mov	r9, r2
 8017782:	b085      	sub	sp, #20
 8017784:	6802      	ldr	r2, [r0, #0]
 8017786:	9201      	str	r2, [sp, #4]
 8017788:	4688      	mov	r8, r1
 801778a:	4683      	mov	fp, r0
 801778c:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 8017790:	9103      	str	r1, [sp, #12]
 8017792:	4610      	mov	r0, r2
 8017794:	461c      	mov	r4, r3
 8017796:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 801779a:	9302      	str	r3, [sp, #8]
 801779c:	f7ff ff86 	bl	80176ac <_ZN8touchgfx7Unicode6strlenEPKt>
 80177a0:	f1b8 0f00 	cmp.w	r8, #0
 80177a4:	bf0c      	ite	eq
 80177a6:	4684      	moveq	ip, r0
 80177a8:	f100 0c01 	addne.w	ip, r0, #1
 80177ac:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 80177b0:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 80177b4:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 80177b6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80177b8:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 80177bc:	9903      	ldr	r1, [sp, #12]
 80177be:	fa1f fc8c 	uxth.w	ip, ip
 80177c2:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 80177c6:	d041      	beq.n	801784c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 80177c8:	d834      	bhi.n	8017834 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 80177ca:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 80177ce:	d059      	beq.n	8017884 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 80177d0:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 80177d4:	d03a      	beq.n	801784c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 80177d6:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 80177da:	d034      	beq.n	8017846 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 80177dc:	2400      	movs	r4, #0
 80177de:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 80177e2:	3a01      	subs	r2, #1
 80177e4:	b169      	cbz	r1, 8017802 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80177e6:	9911      	ldr	r1, [sp, #68]	; 0x44
 80177e8:	458c      	cmp	ip, r1
 80177ea:	da09      	bge.n	8017800 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 80177ec:	eba1 010c 	sub.w	r1, r1, ip
 80177f0:	b289      	uxth	r1, r1
 80177f2:	b933      	cbnz	r3, 8017802 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80177f4:	2e00      	cmp	r6, #0
 80177f6:	d051      	beq.n	801789c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 80177f8:	2800      	cmp	r0, #0
 80177fa:	d04f      	beq.n	801789c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 80177fc:	440c      	add	r4, r1
 80177fe:	b2a4      	uxth	r4, r4
 8017800:	2100      	movs	r1, #0
 8017802:	682b      	ldr	r3, [r5, #0]
 8017804:	4293      	cmp	r3, r2
 8017806:	da07      	bge.n	8017818 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8017808:	f1b8 0f00 	cmp.w	r8, #0
 801780c:	d004      	beq.n	8017818 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 801780e:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 8017812:	682b      	ldr	r3, [r5, #0]
 8017814:	3301      	adds	r3, #1
 8017816:	602b      	str	r3, [r5, #0]
 8017818:	2730      	movs	r7, #48	; 0x30
 801781a:	2c00      	cmp	r4, #0
 801781c:	d04e      	beq.n	80178bc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801781e:	682e      	ldr	r6, [r5, #0]
 8017820:	3c01      	subs	r4, #1
 8017822:	42b2      	cmp	r2, r6
 8017824:	b2a4      	uxth	r4, r4
 8017826:	dd49      	ble.n	80178bc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8017828:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 801782c:	682b      	ldr	r3, [r5, #0]
 801782e:	3301      	adds	r3, #1
 8017830:	602b      	str	r3, [r5, #0]
 8017832:	e7f2      	b.n	801781a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 8017834:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 8017838:	d01d      	beq.n	8017876 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 801783a:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 801783e:	d002      	beq.n	8017846 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8017840:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 8017844:	e7c9      	b.n	80177da <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 8017846:	4684      	mov	ip, r0
 8017848:	f04f 0800 	mov.w	r8, #0
 801784c:	2c00      	cmp	r4, #0
 801784e:	d0c6      	beq.n	80177de <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8017850:	b947      	cbnz	r7, 8017864 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8017852:	2801      	cmp	r0, #1
 8017854:	d106      	bne.n	8017864 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8017856:	8814      	ldrh	r4, [r2, #0]
 8017858:	2c30      	cmp	r4, #48	; 0x30
 801785a:	bf02      	ittt	eq
 801785c:	3202      	addeq	r2, #2
 801785e:	f8cb 2000 	streq.w	r2, [fp]
 8017862:	4638      	moveq	r0, r7
 8017864:	45bc      	cmp	ip, r7
 8017866:	da14      	bge.n	8017892 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 8017868:	b2bf      	uxth	r7, r7
 801786a:	eba7 040c 	sub.w	r4, r7, ip
 801786e:	b2a4      	uxth	r4, r4
 8017870:	46bc      	mov	ip, r7
 8017872:	2600      	movs	r6, #0
 8017874:	e7b3      	b.n	80177de <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8017876:	4684      	mov	ip, r0
 8017878:	b16c      	cbz	r4, 8017896 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 801787a:	42b8      	cmp	r0, r7
 801787c:	dd00      	ble.n	8017880 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 801787e:	b2b8      	uxth	r0, r7
 8017880:	2400      	movs	r4, #0
 8017882:	e003      	b.n	801788c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 8017884:	f04f 0c01 	mov.w	ip, #1
 8017888:	2400      	movs	r4, #0
 801788a:	4660      	mov	r0, ip
 801788c:	4626      	mov	r6, r4
 801788e:	46a0      	mov	r8, r4
 8017890:	e7a5      	b.n	80177de <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8017892:	2400      	movs	r4, #0
 8017894:	e7ed      	b.n	8017872 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 8017896:	4626      	mov	r6, r4
 8017898:	46a0      	mov	r8, r4
 801789a:	e7a0      	b.n	80177de <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801789c:	2900      	cmp	r1, #0
 801789e:	d0b0      	beq.n	8017802 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80178a0:	2720      	movs	r7, #32
 80178a2:	682e      	ldr	r6, [r5, #0]
 80178a4:	2900      	cmp	r1, #0
 80178a6:	d0ac      	beq.n	8017802 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80178a8:	3901      	subs	r1, #1
 80178aa:	4296      	cmp	r6, r2
 80178ac:	b289      	uxth	r1, r1
 80178ae:	daa7      	bge.n	8017800 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 80178b0:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 80178b4:	682b      	ldr	r3, [r5, #0]
 80178b6:	3301      	adds	r3, #1
 80178b8:	602b      	str	r3, [r5, #0]
 80178ba:	e7f2      	b.n	80178a2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 80178bc:	b188      	cbz	r0, 80178e2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 80178be:	682b      	ldr	r3, [r5, #0]
 80178c0:	3801      	subs	r0, #1
 80178c2:	429a      	cmp	r2, r3
 80178c4:	b280      	uxth	r0, r0
 80178c6:	dd0c      	ble.n	80178e2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 80178c8:	f8db 3000 	ldr.w	r3, [fp]
 80178cc:	1c9c      	adds	r4, r3, #2
 80178ce:	f8cb 4000 	str.w	r4, [fp]
 80178d2:	881c      	ldrh	r4, [r3, #0]
 80178d4:	682b      	ldr	r3, [r5, #0]
 80178d6:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 80178da:	682b      	ldr	r3, [r5, #0]
 80178dc:	3301      	adds	r3, #1
 80178de:	602b      	str	r3, [r5, #0]
 80178e0:	e7ec      	b.n	80178bc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 80178e2:	2620      	movs	r6, #32
 80178e4:	b151      	cbz	r1, 80178fc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 80178e6:	6828      	ldr	r0, [r5, #0]
 80178e8:	3901      	subs	r1, #1
 80178ea:	4282      	cmp	r2, r0
 80178ec:	b289      	uxth	r1, r1
 80178ee:	dd05      	ble.n	80178fc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 80178f0:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 80178f4:	682b      	ldr	r3, [r5, #0]
 80178f6:	3301      	adds	r3, #1
 80178f8:	602b      	str	r3, [r5, #0]
 80178fa:	e7f3      	b.n	80178e4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 80178fc:	b005      	add	sp, #20
 80178fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017902 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 8017902:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8017906:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 801790a:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 801790e:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 8017912:	2400      	movs	r4, #0
 8017914:	8014      	strh	r4, [r2, #0]
 8017916:	701c      	strb	r4, [r3, #0]
 8017918:	f888 4000 	strb.w	r4, [r8]
 801791c:	f88c 4000 	strb.w	r4, [ip]
 8017920:	f88e 4000 	strb.w	r4, [lr]
 8017924:	703c      	strb	r4, [r7, #0]
 8017926:	6804      	ldr	r4, [r0, #0]
 8017928:	b1a4      	cbz	r4, 8017954 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 801792a:	8824      	ldrh	r4, [r4, #0]
 801792c:	f04f 0901 	mov.w	r9, #1
 8017930:	b314      	cbz	r4, 8017978 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8017932:	2c2b      	cmp	r4, #43	; 0x2b
 8017934:	d001      	beq.n	801793a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 8017936:	2c20      	cmp	r4, #32
 8017938:	d110      	bne.n	801795c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 801793a:	8014      	strh	r4, [r2, #0]
 801793c:	6804      	ldr	r4, [r0, #0]
 801793e:	b10c      	cbz	r4, 8017944 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 8017940:	3402      	adds	r4, #2
 8017942:	6004      	str	r4, [r0, #0]
 8017944:	680c      	ldr	r4, [r1, #0]
 8017946:	b10c      	cbz	r4, 801794c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 8017948:	3401      	adds	r4, #1
 801794a:	600c      	str	r4, [r1, #0]
 801794c:	6804      	ldr	r4, [r0, #0]
 801794e:	b17c      	cbz	r4, 8017970 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 8017950:	8824      	ldrh	r4, [r4, #0]
 8017952:	e7ed      	b.n	8017930 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8017954:	680c      	ldr	r4, [r1, #0]
 8017956:	b17c      	cbz	r4, 8017978 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8017958:	7824      	ldrb	r4, [r4, #0]
 801795a:	e7e7      	b.n	801792c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 801795c:	2c2d      	cmp	r4, #45	; 0x2d
 801795e:	d102      	bne.n	8017966 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 8017960:	f883 9000 	strb.w	r9, [r3]
 8017964:	e7ea      	b.n	801793c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8017966:	2c23      	cmp	r4, #35	; 0x23
 8017968:	d107      	bne.n	801797a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 801796a:	f888 9000 	strb.w	r9, [r8]
 801796e:	e7e5      	b.n	801793c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8017970:	680c      	ldr	r4, [r1, #0]
 8017972:	b10c      	cbz	r4, 8017978 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8017974:	7824      	ldrb	r4, [r4, #0]
 8017976:	e7db      	b.n	8017930 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8017978:	2400      	movs	r4, #0
 801797a:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 801797e:	2b09      	cmp	r3, #9
 8017980:	d901      	bls.n	8017986 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 8017982:	2c2a      	cmp	r4, #42	; 0x2a
 8017984:	d122      	bne.n	80179cc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8017986:	2301      	movs	r3, #1
 8017988:	2c30      	cmp	r4, #48	; 0x30
 801798a:	f88e 3000 	strb.w	r3, [lr]
 801798e:	d10d      	bne.n	80179ac <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8017990:	f88c 3000 	strb.w	r3, [ip]
 8017994:	6803      	ldr	r3, [r0, #0]
 8017996:	b10b      	cbz	r3, 801799c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 8017998:	3302      	adds	r3, #2
 801799a:	6003      	str	r3, [r0, #0]
 801799c:	680b      	ldr	r3, [r1, #0]
 801799e:	b10b      	cbz	r3, 80179a4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 80179a0:	3301      	adds	r3, #1
 80179a2:	600b      	str	r3, [r1, #0]
 80179a4:	6803      	ldr	r3, [r0, #0]
 80179a6:	2b00      	cmp	r3, #0
 80179a8:	d02f      	beq.n	8017a0a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 80179aa:	881c      	ldrh	r4, [r3, #0]
 80179ac:	2c2a      	cmp	r4, #42	; 0x2a
 80179ae:	d135      	bne.n	8017a1c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 80179b0:	f04f 33ff 	mov.w	r3, #4294967295
 80179b4:	6033      	str	r3, [r6, #0]
 80179b6:	6803      	ldr	r3, [r0, #0]
 80179b8:	b10b      	cbz	r3, 80179be <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 80179ba:	3302      	adds	r3, #2
 80179bc:	6003      	str	r3, [r0, #0]
 80179be:	680b      	ldr	r3, [r1, #0]
 80179c0:	b10b      	cbz	r3, 80179c6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 80179c2:	3301      	adds	r3, #1
 80179c4:	600b      	str	r3, [r1, #0]
 80179c6:	6803      	ldr	r3, [r0, #0]
 80179c8:	b31b      	cbz	r3, 8017a12 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 80179ca:	881c      	ldrh	r4, [r3, #0]
 80179cc:	2c2e      	cmp	r4, #46	; 0x2e
 80179ce:	d11a      	bne.n	8017a06 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 80179d0:	2301      	movs	r3, #1
 80179d2:	703b      	strb	r3, [r7, #0]
 80179d4:	6803      	ldr	r3, [r0, #0]
 80179d6:	b10b      	cbz	r3, 80179dc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 80179d8:	3302      	adds	r3, #2
 80179da:	6003      	str	r3, [r0, #0]
 80179dc:	680b      	ldr	r3, [r1, #0]
 80179de:	b10b      	cbz	r3, 80179e4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 80179e0:	3301      	adds	r3, #1
 80179e2:	600b      	str	r3, [r1, #0]
 80179e4:	6803      	ldr	r3, [r0, #0]
 80179e6:	2b00      	cmp	r3, #0
 80179e8:	d036      	beq.n	8017a58 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 80179ea:	881b      	ldrh	r3, [r3, #0]
 80179ec:	2b2a      	cmp	r3, #42	; 0x2a
 80179ee:	d137      	bne.n	8017a60 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 80179f0:	f04f 33ff 	mov.w	r3, #4294967295
 80179f4:	602b      	str	r3, [r5, #0]
 80179f6:	6803      	ldr	r3, [r0, #0]
 80179f8:	b10b      	cbz	r3, 80179fe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 80179fa:	3302      	adds	r3, #2
 80179fc:	6003      	str	r3, [r0, #0]
 80179fe:	680b      	ldr	r3, [r1, #0]
 8017a00:	b10b      	cbz	r3, 8017a06 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8017a02:	3301      	adds	r3, #1
 8017a04:	600b      	str	r3, [r1, #0]
 8017a06:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8017a0a:	680c      	ldr	r4, [r1, #0]
 8017a0c:	b134      	cbz	r4, 8017a1c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8017a0e:	7824      	ldrb	r4, [r4, #0]
 8017a10:	e7cc      	b.n	80179ac <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8017a12:	680b      	ldr	r3, [r1, #0]
 8017a14:	2b00      	cmp	r3, #0
 8017a16:	d0f6      	beq.n	8017a06 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8017a18:	781c      	ldrb	r4, [r3, #0]
 8017a1a:	e7d7      	b.n	80179cc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8017a1c:	2300      	movs	r3, #0
 8017a1e:	6033      	str	r3, [r6, #0]
 8017a20:	220a      	movs	r2, #10
 8017a22:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 8017a26:	fa1f f38c 	uxth.w	r3, ip
 8017a2a:	2b09      	cmp	r3, #9
 8017a2c:	d8ce      	bhi.n	80179cc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8017a2e:	6833      	ldr	r3, [r6, #0]
 8017a30:	fb02 c303 	mla	r3, r2, r3, ip
 8017a34:	6033      	str	r3, [r6, #0]
 8017a36:	6803      	ldr	r3, [r0, #0]
 8017a38:	b10b      	cbz	r3, 8017a3e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 8017a3a:	3302      	adds	r3, #2
 8017a3c:	6003      	str	r3, [r0, #0]
 8017a3e:	680b      	ldr	r3, [r1, #0]
 8017a40:	b10b      	cbz	r3, 8017a46 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 8017a42:	3301      	adds	r3, #1
 8017a44:	600b      	str	r3, [r1, #0]
 8017a46:	6803      	ldr	r3, [r0, #0]
 8017a48:	b10b      	cbz	r3, 8017a4e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 8017a4a:	881c      	ldrh	r4, [r3, #0]
 8017a4c:	e7e9      	b.n	8017a22 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8017a4e:	680c      	ldr	r4, [r1, #0]
 8017a50:	2c00      	cmp	r4, #0
 8017a52:	d0e6      	beq.n	8017a22 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8017a54:	7824      	ldrb	r4, [r4, #0]
 8017a56:	e7e4      	b.n	8017a22 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8017a58:	680b      	ldr	r3, [r1, #0]
 8017a5a:	b10b      	cbz	r3, 8017a60 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8017a5c:	781b      	ldrb	r3, [r3, #0]
 8017a5e:	e7c5      	b.n	80179ec <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 8017a60:	2200      	movs	r2, #0
 8017a62:	602a      	str	r2, [r5, #0]
 8017a64:	240a      	movs	r4, #10
 8017a66:	3b30      	subs	r3, #48	; 0x30
 8017a68:	b29e      	uxth	r6, r3
 8017a6a:	2e09      	cmp	r6, #9
 8017a6c:	682a      	ldr	r2, [r5, #0]
 8017a6e:	d813      	bhi.n	8017a98 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 8017a70:	fb04 3302 	mla	r3, r4, r2, r3
 8017a74:	602b      	str	r3, [r5, #0]
 8017a76:	6803      	ldr	r3, [r0, #0]
 8017a78:	b10b      	cbz	r3, 8017a7e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 8017a7a:	3302      	adds	r3, #2
 8017a7c:	6003      	str	r3, [r0, #0]
 8017a7e:	680b      	ldr	r3, [r1, #0]
 8017a80:	b10b      	cbz	r3, 8017a86 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 8017a82:	3301      	adds	r3, #1
 8017a84:	600b      	str	r3, [r1, #0]
 8017a86:	6803      	ldr	r3, [r0, #0]
 8017a88:	b10b      	cbz	r3, 8017a8e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 8017a8a:	881b      	ldrh	r3, [r3, #0]
 8017a8c:	e7eb      	b.n	8017a66 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8017a8e:	680b      	ldr	r3, [r1, #0]
 8017a90:	2b00      	cmp	r3, #0
 8017a92:	d0e8      	beq.n	8017a66 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8017a94:	781b      	ldrb	r3, [r3, #0]
 8017a96:	e7e6      	b.n	8017a66 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8017a98:	2a06      	cmp	r2, #6
 8017a9a:	bfa8      	it	ge
 8017a9c:	2206      	movge	r2, #6
 8017a9e:	602a      	str	r2, [r5, #0]
 8017aa0:	e7b1      	b.n	8017a06 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

08017aa2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 8017aa2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017aa6:	b0a3      	sub	sp, #140	; 0x8c
 8017aa8:	2600      	movs	r6, #0
 8017aaa:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 8017aae:	4607      	mov	r7, r0
 8017ab0:	4688      	mov	r8, r1
 8017ab2:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8017ab6:	4631      	mov	r1, r6
 8017ab8:	2242      	movs	r2, #66	; 0x42
 8017aba:	4648      	mov	r0, r9
 8017abc:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 8017abe:	960d      	str	r6, [sp, #52]	; 0x34
 8017ac0:	f010 fd53 	bl	802856a <memset>
 8017ac4:	b15f      	cbz	r7, 8017ade <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 8017ac6:	f108 3aff 	add.w	sl, r8, #4294967295
 8017aca:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8017acc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017ace:	b152      	cbz	r2, 8017ae6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8017ad0:	8812      	ldrh	r2, [r2, #0]
 8017ad2:	b10a      	cbz	r2, 8017ad8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8017ad4:	459a      	cmp	sl, r3
 8017ad6:	dc2e      	bgt.n	8017b36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8017ad8:	2200      	movs	r2, #0
 8017ada:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8017ade:	4638      	mov	r0, r7
 8017ae0:	b023      	add	sp, #140	; 0x8c
 8017ae2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017ae6:	9a08      	ldr	r2, [sp, #32]
 8017ae8:	2a00      	cmp	r2, #0
 8017aea:	d0f5      	beq.n	8017ad8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8017aec:	7812      	ldrb	r2, [r2, #0]
 8017aee:	e7f0      	b.n	8017ad2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8017af0:	2d00      	cmp	r5, #0
 8017af2:	d0ea      	beq.n	8017aca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8017af4:	782a      	ldrb	r2, [r5, #0]
 8017af6:	b142      	cbz	r2, 8017b0a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8017af8:	2a25      	cmp	r2, #37	; 0x25
 8017afa:	d001      	beq.n	8017b00 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8017afc:	459a      	cmp	sl, r3
 8017afe:	dc08      	bgt.n	8017b12 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8017b00:	f1bb 0f00 	cmp.w	fp, #0
 8017b04:	d121      	bne.n	8017b4a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 8017b06:	2d00      	cmp	r5, #0
 8017b08:	d0df      	beq.n	8017aca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8017b0a:	782a      	ldrb	r2, [r5, #0]
 8017b0c:	f04f 0b00 	mov.w	fp, #0
 8017b10:	e01d      	b.n	8017b4e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 8017b12:	f1bb 0f00 	cmp.w	fp, #0
 8017b16:	d078      	beq.n	8017c0a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 8017b18:	f8bb 2000 	ldrh.w	r2, [fp]
 8017b1c:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8017b20:	f1bb 0f00 	cmp.w	fp, #0
 8017b24:	d002      	beq.n	8017b2c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 8017b26:	f10b 0202 	add.w	r2, fp, #2
 8017b2a:	9209      	str	r2, [sp, #36]	; 0x24
 8017b2c:	b10d      	cbz	r5, 8017b32 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 8017b2e:	3501      	adds	r5, #1
 8017b30:	9508      	str	r5, [sp, #32]
 8017b32:	3301      	adds	r3, #1
 8017b34:	930d      	str	r3, [sp, #52]	; 0x34
 8017b36:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 8017b3a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017b3c:	f1bb 0f00 	cmp.w	fp, #0
 8017b40:	d0d6      	beq.n	8017af0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 8017b42:	f8bb 2000 	ldrh.w	r2, [fp]
 8017b46:	2a00      	cmp	r2, #0
 8017b48:	d1d6      	bne.n	8017af8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 8017b4a:	f8bb 2000 	ldrh.w	r2, [fp]
 8017b4e:	2a00      	cmp	r2, #0
 8017b50:	d0bb      	beq.n	8017aca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8017b52:	459a      	cmp	sl, r3
 8017b54:	ddb9      	ble.n	8017aca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8017b56:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 8017b5a:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 8017b5e:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 8017b62:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 8017b66:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 8017b6a:	960e      	str	r6, [sp, #56]	; 0x38
 8017b6c:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 8017b70:	960f      	str	r6, [sp, #60]	; 0x3c
 8017b72:	f1bb 0f00 	cmp.w	fp, #0
 8017b76:	d002      	beq.n	8017b7e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 8017b78:	f10b 0302 	add.w	r3, fp, #2
 8017b7c:	9309      	str	r3, [sp, #36]	; 0x24
 8017b7e:	b10d      	cbz	r5, 8017b84 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8017b80:	1c6b      	adds	r3, r5, #1
 8017b82:	9308      	str	r3, [sp, #32]
 8017b84:	ab0f      	add	r3, sp, #60	; 0x3c
 8017b86:	9305      	str	r3, [sp, #20]
 8017b88:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8017b8c:	9304      	str	r3, [sp, #16]
 8017b8e:	ab0e      	add	r3, sp, #56	; 0x38
 8017b90:	9303      	str	r3, [sp, #12]
 8017b92:	ab0c      	add	r3, sp, #48	; 0x30
 8017b94:	9302      	str	r3, [sp, #8]
 8017b96:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 8017b9a:	9301      	str	r3, [sp, #4]
 8017b9c:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8017ba0:	9300      	str	r3, [sp, #0]
 8017ba2:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 8017ba6:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8017baa:	a908      	add	r1, sp, #32
 8017bac:	a809      	add	r0, sp, #36	; 0x24
 8017bae:	f7ff fea8 	bl	8017902 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8017bb2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017bb4:	2b00      	cmp	r3, #0
 8017bb6:	bfbe      	ittt	lt
 8017bb8:	6823      	ldrlt	r3, [r4, #0]
 8017bba:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8017bbe:	930e      	strlt	r3, [sp, #56]	; 0x38
 8017bc0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8017bc2:	bfb8      	it	lt
 8017bc4:	3404      	addlt	r4, #4
 8017bc6:	2b00      	cmp	r3, #0
 8017bc8:	bfb8      	it	lt
 8017bca:	6823      	ldrlt	r3, [r4, #0]
 8017bcc:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8017bd0:	bfbe      	ittt	lt
 8017bd2:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8017bd6:	930f      	strlt	r3, [sp, #60]	; 0x3c
 8017bd8:	3404      	addlt	r4, #4
 8017bda:	b1d9      	cbz	r1, 8017c14 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 8017bdc:	880b      	ldrh	r3, [r1, #0]
 8017bde:	2b69      	cmp	r3, #105	; 0x69
 8017be0:	d01f      	beq.n	8017c22 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8017be2:	d82f      	bhi.n	8017c44 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 8017be4:	2b58      	cmp	r3, #88	; 0x58
 8017be6:	d01c      	beq.n	8017c22 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8017be8:	d818      	bhi.n	8017c1c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 8017bea:	2b25      	cmp	r3, #37	; 0x25
 8017bec:	d034      	beq.n	8017c58 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 8017bee:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 8017bf2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017bf4:	f1bb 0f00 	cmp.w	fp, #0
 8017bf8:	f000 80b8 	beq.w	8017d6c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 8017bfc:	f8bb 5000 	ldrh.w	r5, [fp]
 8017c00:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8017c04:	3301      	adds	r3, #1
 8017c06:	930d      	str	r3, [sp, #52]	; 0x34
 8017c08:	e029      	b.n	8017c5e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8017c0a:	b10d      	cbz	r5, 8017c10 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 8017c0c:	782a      	ldrb	r2, [r5, #0]
 8017c0e:	e785      	b.n	8017b1c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8017c10:	462a      	mov	r2, r5
 8017c12:	e783      	b.n	8017b1c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8017c14:	2a00      	cmp	r2, #0
 8017c16:	d0ea      	beq.n	8017bee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8017c18:	7813      	ldrb	r3, [r2, #0]
 8017c1a:	e7e0      	b.n	8017bde <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 8017c1c:	3b63      	subs	r3, #99	; 0x63
 8017c1e:	2b01      	cmp	r3, #1
 8017c20:	d8e5      	bhi.n	8017bee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8017c22:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 8017c26:	b329      	cbz	r1, 8017c74 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 8017c28:	880b      	ldrh	r3, [r1, #0]
 8017c2a:	2b69      	cmp	r3, #105	; 0x69
 8017c2c:	d063      	beq.n	8017cf6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8017c2e:	d825      	bhi.n	8017c7c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 8017c30:	2b63      	cmp	r3, #99	; 0x63
 8017c32:	d038      	beq.n	8017ca6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 8017c34:	2b64      	cmp	r3, #100	; 0x64
 8017c36:	d05e      	beq.n	8017cf6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8017c38:	2b58      	cmp	r3, #88	; 0x58
 8017c3a:	d07b      	beq.n	8017d34 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 8017c3c:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8017c40:	4625      	mov	r5, r4
 8017c42:	e036      	b.n	8017cb2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8017c44:	2b73      	cmp	r3, #115	; 0x73
 8017c46:	d0ec      	beq.n	8017c22 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8017c48:	d802      	bhi.n	8017c50 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 8017c4a:	2b6f      	cmp	r3, #111	; 0x6f
 8017c4c:	d1cf      	bne.n	8017bee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8017c4e:	e7e8      	b.n	8017c22 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8017c50:	2b75      	cmp	r3, #117	; 0x75
 8017c52:	d0e6      	beq.n	8017c22 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8017c54:	2b78      	cmp	r3, #120	; 0x78
 8017c56:	e7f9      	b.n	8017c4c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 8017c58:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8017c5a:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 8017c5e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017c60:	b10b      	cbz	r3, 8017c66 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 8017c62:	3302      	adds	r3, #2
 8017c64:	9309      	str	r3, [sp, #36]	; 0x24
 8017c66:	9b08      	ldr	r3, [sp, #32]
 8017c68:	2b00      	cmp	r3, #0
 8017c6a:	f43f af2e 	beq.w	8017aca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8017c6e:	3301      	adds	r3, #1
 8017c70:	9308      	str	r3, [sp, #32]
 8017c72:	e72a      	b.n	8017aca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8017c74:	2a00      	cmp	r2, #0
 8017c76:	d0e1      	beq.n	8017c3c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8017c78:	7813      	ldrb	r3, [r2, #0]
 8017c7a:	e7d6      	b.n	8017c2a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 8017c7c:	2b73      	cmp	r3, #115	; 0x73
 8017c7e:	d036      	beq.n	8017cee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 8017c80:	d807      	bhi.n	8017c92 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 8017c82:	2b6f      	cmp	r3, #111	; 0x6f
 8017c84:	d1da      	bne.n	8017c3c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8017c86:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8017c88:	1d25      	adds	r5, r4, #4
 8017c8a:	eba8 0202 	sub.w	r2, r8, r2
 8017c8e:	2308      	movs	r3, #8
 8017c90:	e04a      	b.n	8017d28 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8017c92:	2b75      	cmp	r3, #117	; 0x75
 8017c94:	d043      	beq.n	8017d1e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 8017c96:	2b78      	cmp	r3, #120	; 0x78
 8017c98:	d1d0      	bne.n	8017c3c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8017c9a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8017c9c:	1d25      	adds	r5, r4, #4
 8017c9e:	eba8 0202 	sub.w	r2, r8, r2
 8017ca2:	2310      	movs	r3, #16
 8017ca4:	e040      	b.n	8017d28 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8017ca6:	6823      	ldr	r3, [r4, #0]
 8017ca8:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8017cac:	1d25      	adds	r5, r4, #4
 8017cae:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 8017cb2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017cb4:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8017cb8:	2b00      	cmp	r3, #0
 8017cba:	d052      	beq.n	8017d62 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 8017cbc:	881a      	ldrh	r2, [r3, #0]
 8017cbe:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8017cc2:	a80d      	add	r0, sp, #52	; 0x34
 8017cc4:	9005      	str	r0, [sp, #20]
 8017cc6:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 8017cca:	9004      	str	r0, [sp, #16]
 8017ccc:	980e      	ldr	r0, [sp, #56]	; 0x38
 8017cce:	9003      	str	r0, [sp, #12]
 8017cd0:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 8017cd4:	9002      	str	r0, [sp, #8]
 8017cd6:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8017cd8:	9001      	str	r0, [sp, #4]
 8017cda:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 8017cde:	9000      	str	r0, [sp, #0]
 8017ce0:	e9cd 8706 	strd	r8, r7, [sp, #24]
 8017ce4:	a810      	add	r0, sp, #64	; 0x40
 8017ce6:	f7ff fd49 	bl	801777c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8017cea:	462c      	mov	r4, r5
 8017cec:	e7b7      	b.n	8017c5e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8017cee:	6823      	ldr	r3, [r4, #0]
 8017cf0:	1d25      	adds	r5, r4, #4
 8017cf2:	9310      	str	r3, [sp, #64]	; 0x40
 8017cf4:	e7dd      	b.n	8017cb2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8017cf6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8017cf8:	6820      	ldr	r0, [r4, #0]
 8017cfa:	eba8 0202 	sub.w	r2, r8, r2
 8017cfe:	230a      	movs	r3, #10
 8017d00:	b292      	uxth	r2, r2
 8017d02:	4649      	mov	r1, r9
 8017d04:	f7ff fcf0 	bl	80176e8 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 8017d08:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8017d0c:	2b2d      	cmp	r3, #45	; 0x2d
 8017d0e:	f104 0504 	add.w	r5, r4, #4
 8017d12:	d1ce      	bne.n	8017cb2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8017d14:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8017d18:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017d1a:	3302      	adds	r3, #2
 8017d1c:	e7e9      	b.n	8017cf2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 8017d1e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8017d20:	1d25      	adds	r5, r4, #4
 8017d22:	eba8 0202 	sub.w	r2, r8, r2
 8017d26:	230a      	movs	r3, #10
 8017d28:	b292      	uxth	r2, r2
 8017d2a:	4649      	mov	r1, r9
 8017d2c:	6820      	ldr	r0, [r4, #0]
 8017d2e:	f7ff fd07 	bl	8017740 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8017d32:	e7be      	b.n	8017cb2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8017d34:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8017d36:	6820      	ldr	r0, [r4, #0]
 8017d38:	eba8 0202 	sub.w	r2, r8, r2
 8017d3c:	b292      	uxth	r2, r2
 8017d3e:	2310      	movs	r3, #16
 8017d40:	4649      	mov	r1, r9
 8017d42:	f7ff fcfd 	bl	8017740 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8017d46:	1d25      	adds	r5, r4, #4
 8017d48:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 8017d4c:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8017d50:	2b00      	cmp	r3, #0
 8017d52:	d0ae      	beq.n	8017cb2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8017d54:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 8017d58:	2919      	cmp	r1, #25
 8017d5a:	d8f7      	bhi.n	8017d4c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8017d5c:	3b20      	subs	r3, #32
 8017d5e:	8013      	strh	r3, [r2, #0]
 8017d60:	e7f4      	b.n	8017d4c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8017d62:	9a08      	ldr	r2, [sp, #32]
 8017d64:	2a00      	cmp	r2, #0
 8017d66:	d0aa      	beq.n	8017cbe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8017d68:	7812      	ldrb	r2, [r2, #0]
 8017d6a:	e7a8      	b.n	8017cbe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8017d6c:	2d00      	cmp	r5, #0
 8017d6e:	f43f af47 	beq.w	8017c00 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 8017d72:	782d      	ldrb	r5, [r5, #0]
 8017d74:	e744      	b.n	8017c00 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

08017d76 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 8017d76:	b507      	push	{r0, r1, r2, lr}
 8017d78:	9300      	str	r3, [sp, #0]
 8017d7a:	4613      	mov	r3, r2
 8017d7c:	2200      	movs	r2, #0
 8017d7e:	f7ff fe90 	bl	8017aa2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 8017d82:	b003      	add	sp, #12
 8017d84:	f85d fb04 	ldr.w	pc, [sp], #4

08017d88 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 8017d88:	b40c      	push	{r2, r3}
 8017d8a:	b507      	push	{r0, r1, r2, lr}
 8017d8c:	ab04      	add	r3, sp, #16
 8017d8e:	f853 2b04 	ldr.w	r2, [r3], #4
 8017d92:	9301      	str	r3, [sp, #4]
 8017d94:	f7ff ffef 	bl	8017d76 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 8017d98:	b003      	add	sp, #12
 8017d9a:	f85d eb04 	ldr.w	lr, [sp], #4
 8017d9e:	b002      	add	sp, #8
 8017da0:	4770      	bx	lr
	...

08017da4 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8017da4:	4b01      	ldr	r3, [pc, #4]	; (8017dac <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 8017da6:	6018      	str	r0, [r3, #0]
 8017da8:	4770      	bx	lr
 8017daa:	bf00      	nop
 8017dac:	20013824 	.word	0x20013824

08017db0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8017db0:	4b06      	ldr	r3, [pc, #24]	; (8017dcc <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 8017db2:	881a      	ldrh	r2, [r3, #0]
 8017db4:	4282      	cmp	r2, r0
 8017db6:	d807      	bhi.n	8017dc8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8017db8:	4b05      	ldr	r3, [pc, #20]	; (8017dd0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 8017dba:	881b      	ldrh	r3, [r3, #0]
 8017dbc:	4413      	add	r3, r2
 8017dbe:	4298      	cmp	r0, r3
 8017dc0:	bfac      	ite	ge
 8017dc2:	2000      	movge	r0, #0
 8017dc4:	2001      	movlt	r0, #1
 8017dc6:	4770      	bx	lr
 8017dc8:	2000      	movs	r0, #0
 8017dca:	4770      	bx	lr
 8017dcc:	20013844 	.word	0x20013844
 8017dd0:	20013848 	.word	0x20013848

08017dd4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8017dd4:	b508      	push	{r3, lr}
 8017dd6:	4601      	mov	r1, r0
 8017dd8:	f7ff ffea 	bl	8017db0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8017ddc:	b118      	cbz	r0, 8017de6 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 8017dde:	4b02      	ldr	r3, [pc, #8]	; (8017de8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8017de0:	681b      	ldr	r3, [r3, #0]
 8017de2:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8017de6:	bd08      	pop	{r3, pc}
 8017de8:	20013828 	.word	0x20013828

08017dec <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8017dec:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017dee:	4c24      	ldr	r4, [pc, #144]	; (8017e80 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8017df0:	6823      	ldr	r3, [r4, #0]
 8017df2:	2b00      	cmp	r3, #0
 8017df4:	d042      	beq.n	8017e7c <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8017df6:	4a23      	ldr	r2, [pc, #140]	; (8017e84 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 8017df8:	4d23      	ldr	r5, [pc, #140]	; (8017e88 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 8017dfa:	8811      	ldrh	r1, [r2, #0]
 8017dfc:	f8b5 c000 	ldrh.w	ip, [r5]
 8017e00:	4822      	ldr	r0, [pc, #136]	; (8017e8c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 8017e02:	4461      	add	r1, ip
 8017e04:	1c4a      	adds	r2, r1, #1
 8017e06:	f022 0201 	bic.w	r2, r2, #1
 8017e0a:	008f      	lsls	r7, r1, #2
 8017e0c:	0412      	lsls	r2, r2, #16
 8017e0e:	19de      	adds	r6, r3, r7
 8017e10:	0c12      	lsrs	r2, r2, #16
 8017e12:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 8017e16:	6006      	str	r6, [r0, #0]
 8017e18:	4e1d      	ldr	r6, [pc, #116]	; (8017e90 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 8017e1a:	19da      	adds	r2, r3, r7
 8017e1c:	6032      	str	r2, [r6, #0]
 8017e1e:	220e      	movs	r2, #14
 8017e20:	fb02 f20c 	mul.w	r2, r2, ip
 8017e24:	3203      	adds	r2, #3
 8017e26:	f022 0203 	bic.w	r2, r2, #3
 8017e2a:	443a      	add	r2, r7
 8017e2c:	4f19      	ldr	r7, [pc, #100]	; (8017e94 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 8017e2e:	4413      	add	r3, r2
 8017e30:	603b      	str	r3, [r7, #0]
 8017e32:	4f19      	ldr	r7, [pc, #100]	; (8017e98 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 8017e34:	2300      	movs	r3, #0
 8017e36:	803b      	strh	r3, [r7, #0]
 8017e38:	4f18      	ldr	r7, [pc, #96]	; (8017e9c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 8017e3a:	683f      	ldr	r7, [r7, #0]
 8017e3c:	1aba      	subs	r2, r7, r2
 8017e3e:	4f18      	ldr	r7, [pc, #96]	; (8017ea0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8017e40:	603a      	str	r2, [r7, #0]
 8017e42:	4a18      	ldr	r2, [pc, #96]	; (8017ea4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8017e44:	469c      	mov	ip, r3
 8017e46:	8013      	strh	r3, [r2, #0]
 8017e48:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8017e4c:	428b      	cmp	r3, r1
 8017e4e:	d10d      	bne.n	8017e6c <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8017e50:	882d      	ldrh	r5, [r5, #0]
 8017e52:	6830      	ldr	r0, [r6, #0]
 8017e54:	2300      	movs	r3, #0
 8017e56:	240e      	movs	r4, #14
 8017e58:	429d      	cmp	r5, r3
 8017e5a:	d90f      	bls.n	8017e7c <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8017e5c:	fb04 0203 	mla	r2, r4, r3, r0
 8017e60:	3301      	adds	r3, #1
 8017e62:	7b11      	ldrb	r1, [r2, #12]
 8017e64:	f36f 1145 	bfc	r1, #5, #1
 8017e68:	7311      	strb	r1, [r2, #12]
 8017e6a:	e7f5      	b.n	8017e58 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 8017e6c:	6822      	ldr	r2, [r4, #0]
 8017e6e:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8017e72:	6802      	ldr	r2, [r0, #0]
 8017e74:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 8017e78:	3301      	adds	r3, #1
 8017e7a:	e7e7      	b.n	8017e4c <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 8017e7c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8017e7e:	bf00      	nop
 8017e80:	20013828 	.word	0x20013828
 8017e84:	20013844 	.word	0x20013844
 8017e88:	20013848 	.word	0x20013848
 8017e8c:	2001383c 	.word	0x2001383c
 8017e90:	2001382c 	.word	0x2001382c
 8017e94:	20013834 	.word	0x20013834
 8017e98:	20013846 	.word	0x20013846
 8017e9c:	20013830 	.word	0x20013830
 8017ea0:	20013840 	.word	0x20013840
 8017ea4:	20013838 	.word	0x20013838

08017ea8 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8017ea8:	4b06      	ldr	r3, [pc, #24]	; (8017ec4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 8017eaa:	681b      	ldr	r3, [r3, #0]
 8017eac:	b943      	cbnz	r3, 8017ec0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8017eae:	b139      	cbz	r1, 8017ec0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8017eb0:	4b05      	ldr	r3, [pc, #20]	; (8017ec8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 8017eb2:	801a      	strh	r2, [r3, #0]
 8017eb4:	4b05      	ldr	r3, [pc, #20]	; (8017ecc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 8017eb6:	6019      	str	r1, [r3, #0]
 8017eb8:	4b05      	ldr	r3, [pc, #20]	; (8017ed0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 8017eba:	6018      	str	r0, [r3, #0]
 8017ebc:	f7ff bf96 	b.w	8017dec <_ZN8touchgfx6Bitmap10clearCacheEv>
 8017ec0:	4770      	bx	lr
 8017ec2:	bf00      	nop
 8017ec4:	20013834 	.word	0x20013834
 8017ec8:	20013848 	.word	0x20013848
 8017ecc:	20013830 	.word	0x20013830
 8017ed0:	20013828 	.word	0x20013828

08017ed4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8017ed4:	b470      	push	{r4, r5, r6}
 8017ed6:	4c07      	ldr	r4, [pc, #28]	; (8017ef4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8017ed8:	6826      	ldr	r6, [r4, #0]
 8017eda:	4605      	mov	r5, r0
 8017edc:	4610      	mov	r0, r2
 8017ede:	9a03      	ldr	r2, [sp, #12]
 8017ee0:	b936      	cbnz	r6, 8017ef0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 8017ee2:	6025      	str	r5, [r4, #0]
 8017ee4:	4c04      	ldr	r4, [pc, #16]	; (8017ef8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 8017ee6:	8021      	strh	r1, [r4, #0]
 8017ee8:	bc70      	pop	{r4, r5, r6}
 8017eea:	4619      	mov	r1, r3
 8017eec:	f7ff bfdc 	b.w	8017ea8 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8017ef0:	bc70      	pop	{r4, r5, r6}
 8017ef2:	4770      	bx	lr
 8017ef4:	2001384c 	.word	0x2001384c
 8017ef8:	20013844 	.word	0x20013844

08017efc <_ZNK8touchgfx6Bitmap8getWidthEv>:
 8017efc:	4a12      	ldr	r2, [pc, #72]	; (8017f48 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 8017efe:	8803      	ldrh	r3, [r0, #0]
 8017f00:	8812      	ldrh	r2, [r2, #0]
 8017f02:	4293      	cmp	r3, r2
 8017f04:	d207      	bcs.n	8017f16 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 8017f06:	4a11      	ldr	r2, [pc, #68]	; (8017f4c <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 8017f08:	6812      	ldr	r2, [r2, #0]
 8017f0a:	2114      	movs	r1, #20
 8017f0c:	fb01 2303 	mla	r3, r1, r3, r2
 8017f10:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8017f14:	4770      	bx	lr
 8017f16:	490e      	ldr	r1, [pc, #56]	; (8017f50 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8017f18:	8809      	ldrh	r1, [r1, #0]
 8017f1a:	4411      	add	r1, r2
 8017f1c:	428b      	cmp	r3, r1
 8017f1e:	da04      	bge.n	8017f2a <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 8017f20:	1a9b      	subs	r3, r3, r2
 8017f22:	4a0c      	ldr	r2, [pc, #48]	; (8017f54 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 8017f24:	210e      	movs	r1, #14
 8017f26:	6812      	ldr	r2, [r2, #0]
 8017f28:	e7f0      	b.n	8017f0c <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 8017f2a:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8017f2e:	4293      	cmp	r3, r2
 8017f30:	d108      	bne.n	8017f44 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 8017f32:	4b09      	ldr	r3, [pc, #36]	; (8017f58 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 8017f34:	781b      	ldrb	r3, [r3, #0]
 8017f36:	b91b      	cbnz	r3, 8017f40 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 8017f38:	4b08      	ldr	r3, [pc, #32]	; (8017f5c <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 8017f3a:	f9b3 0000 	ldrsh.w	r0, [r3]
 8017f3e:	4770      	bx	lr
 8017f40:	4b07      	ldr	r3, [pc, #28]	; (8017f60 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8017f42:	e7fa      	b.n	8017f3a <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 8017f44:	2000      	movs	r0, #0
 8017f46:	4770      	bx	lr
 8017f48:	20013844 	.word	0x20013844
 8017f4c:	2001384c 	.word	0x2001384c
 8017f50:	20013848 	.word	0x20013848
 8017f54:	2001382c 	.word	0x2001382c
 8017f58:	200137b4 	.word	0x200137b4
 8017f5c:	200137b6 	.word	0x200137b6
 8017f60:	200137b8 	.word	0x200137b8

08017f64 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8017f64:	4a12      	ldr	r2, [pc, #72]	; (8017fb0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 8017f66:	8803      	ldrh	r3, [r0, #0]
 8017f68:	8812      	ldrh	r2, [r2, #0]
 8017f6a:	4293      	cmp	r3, r2
 8017f6c:	d207      	bcs.n	8017f7e <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 8017f6e:	4a11      	ldr	r2, [pc, #68]	; (8017fb4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 8017f70:	6812      	ldr	r2, [r2, #0]
 8017f72:	2114      	movs	r1, #20
 8017f74:	fb01 2303 	mla	r3, r1, r3, r2
 8017f78:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 8017f7c:	4770      	bx	lr
 8017f7e:	490e      	ldr	r1, [pc, #56]	; (8017fb8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8017f80:	8809      	ldrh	r1, [r1, #0]
 8017f82:	4411      	add	r1, r2
 8017f84:	428b      	cmp	r3, r1
 8017f86:	da04      	bge.n	8017f92 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 8017f88:	1a9b      	subs	r3, r3, r2
 8017f8a:	4a0c      	ldr	r2, [pc, #48]	; (8017fbc <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 8017f8c:	210e      	movs	r1, #14
 8017f8e:	6812      	ldr	r2, [r2, #0]
 8017f90:	e7f0      	b.n	8017f74 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 8017f92:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8017f96:	4293      	cmp	r3, r2
 8017f98:	d108      	bne.n	8017fac <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 8017f9a:	4b09      	ldr	r3, [pc, #36]	; (8017fc0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 8017f9c:	781b      	ldrb	r3, [r3, #0]
 8017f9e:	b91b      	cbnz	r3, 8017fa8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8017fa0:	4b08      	ldr	r3, [pc, #32]	; (8017fc4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8017fa2:	f9b3 0000 	ldrsh.w	r0, [r3]
 8017fa6:	4770      	bx	lr
 8017fa8:	4b07      	ldr	r3, [pc, #28]	; (8017fc8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 8017faa:	e7fa      	b.n	8017fa2 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 8017fac:	2000      	movs	r0, #0
 8017fae:	4770      	bx	lr
 8017fb0:	20013844 	.word	0x20013844
 8017fb4:	2001384c 	.word	0x2001384c
 8017fb8:	20013848 	.word	0x20013848
 8017fbc:	2001382c 	.word	0x2001382c
 8017fc0:	200137b4 	.word	0x200137b4
 8017fc4:	200137b8 	.word	0x200137b8
 8017fc8:	200137b6 	.word	0x200137b6

08017fcc <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8017fcc:	b510      	push	{r4, lr}
 8017fce:	4a1f      	ldr	r2, [pc, #124]	; (801804c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 8017fd0:	880b      	ldrh	r3, [r1, #0]
 8017fd2:	8812      	ldrh	r2, [r2, #0]
 8017fd4:	4293      	cmp	r3, r2
 8017fd6:	d213      	bcs.n	8018000 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8017fd8:	4a1d      	ldr	r2, [pc, #116]	; (8018050 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 8017fda:	6812      	ldr	r2, [r2, #0]
 8017fdc:	2114      	movs	r1, #20
 8017fde:	fb01 2303 	mla	r3, r1, r3, r2
 8017fe2:	8a1a      	ldrh	r2, [r3, #16]
 8017fe4:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8017fe8:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8017fec:	8a5b      	ldrh	r3, [r3, #18]
 8017fee:	8004      	strh	r4, [r0, #0]
 8017ff0:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8017ff4:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8017ff8:	8041      	strh	r1, [r0, #2]
 8017ffa:	8082      	strh	r2, [r0, #4]
 8017ffc:	80c3      	strh	r3, [r0, #6]
 8017ffe:	e00e      	b.n	801801e <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8018000:	4914      	ldr	r1, [pc, #80]	; (8018054 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 8018002:	8809      	ldrh	r1, [r1, #0]
 8018004:	4411      	add	r1, r2
 8018006:	428b      	cmp	r3, r1
 8018008:	da0a      	bge.n	8018020 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 801800a:	1a9b      	subs	r3, r3, r2
 801800c:	4a12      	ldr	r2, [pc, #72]	; (8018058 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 801800e:	6812      	ldr	r2, [r2, #0]
 8018010:	210e      	movs	r1, #14
 8018012:	fb01 2303 	mla	r3, r1, r3, r2
 8018016:	681a      	ldr	r2, [r3, #0]
 8018018:	6002      	str	r2, [r0, #0]
 801801a:	685a      	ldr	r2, [r3, #4]
 801801c:	6042      	str	r2, [r0, #4]
 801801e:	bd10      	pop	{r4, pc}
 8018020:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8018024:	4293      	cmp	r3, r2
 8018026:	d10b      	bne.n	8018040 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 8018028:	4b0c      	ldr	r3, [pc, #48]	; (801805c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 801802a:	f9b3 1000 	ldrsh.w	r1, [r3]
 801802e:	4b0c      	ldr	r3, [pc, #48]	; (8018060 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8018030:	8081      	strh	r1, [r0, #4]
 8018032:	f9b3 2000 	ldrsh.w	r2, [r3]
 8018036:	80c2      	strh	r2, [r0, #6]
 8018038:	2300      	movs	r3, #0
 801803a:	8003      	strh	r3, [r0, #0]
 801803c:	8043      	strh	r3, [r0, #2]
 801803e:	e7ee      	b.n	801801e <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8018040:	2300      	movs	r3, #0
 8018042:	8003      	strh	r3, [r0, #0]
 8018044:	8043      	strh	r3, [r0, #2]
 8018046:	8083      	strh	r3, [r0, #4]
 8018048:	e7d8      	b.n	8017ffc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 801804a:	bf00      	nop
 801804c:	20013844 	.word	0x20013844
 8018050:	2001384c 	.word	0x2001384c
 8018054:	20013848 	.word	0x20013848
 8018058:	2001382c 	.word	0x2001382c
 801805c:	200137b0 	.word	0x200137b0
 8018060:	200137b2 	.word	0x200137b2

08018064 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8018064:	4a17      	ldr	r2, [pc, #92]	; (80180c4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 8018066:	8803      	ldrh	r3, [r0, #0]
 8018068:	8812      	ldrh	r2, [r2, #0]
 801806a:	4293      	cmp	r3, r2
 801806c:	d213      	bcs.n	8018096 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 801806e:	4a16      	ldr	r2, [pc, #88]	; (80180c8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8018070:	6812      	ldr	r2, [r2, #0]
 8018072:	2114      	movs	r1, #20
 8018074:	fb01 2303 	mla	r3, r1, r3, r2
 8018078:	8a1a      	ldrh	r2, [r3, #16]
 801807a:	8919      	ldrh	r1, [r3, #8]
 801807c:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8018080:	428a      	cmp	r2, r1
 8018082:	db1d      	blt.n	80180c0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8018084:	8a58      	ldrh	r0, [r3, #18]
 8018086:	f3c0 000c 	ubfx	r0, r0, #0, #13
 801808a:	895b      	ldrh	r3, [r3, #10]
 801808c:	4298      	cmp	r0, r3
 801808e:	bfac      	ite	ge
 8018090:	2000      	movge	r0, #0
 8018092:	2001      	movlt	r0, #1
 8018094:	4770      	bx	lr
 8018096:	490d      	ldr	r1, [pc, #52]	; (80180cc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8018098:	8809      	ldrh	r1, [r1, #0]
 801809a:	4411      	add	r1, r2
 801809c:	428b      	cmp	r3, r1
 801809e:	da0d      	bge.n	80180bc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 80180a0:	1a9b      	subs	r3, r3, r2
 80180a2:	4a0b      	ldr	r2, [pc, #44]	; (80180d0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 80180a4:	6812      	ldr	r2, [r2, #0]
 80180a6:	210e      	movs	r1, #14
 80180a8:	fb01 2303 	mla	r3, r1, r3, r2
 80180ac:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 80180b0:	891a      	ldrh	r2, [r3, #8]
 80180b2:	4291      	cmp	r1, r2
 80180b4:	db04      	blt.n	80180c0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 80180b6:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 80180ba:	e7e6      	b.n	801808a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 80180bc:	2000      	movs	r0, #0
 80180be:	4770      	bx	lr
 80180c0:	2001      	movs	r0, #1
 80180c2:	4770      	bx	lr
 80180c4:	20013844 	.word	0x20013844
 80180c8:	2001384c 	.word	0x2001384c
 80180cc:	20013848 	.word	0x20013848
 80180d0:	2001382c 	.word	0x2001382c

080180d4 <_ZNK8touchgfx6Bitmap7getDataEv>:
 80180d4:	4a12      	ldr	r2, [pc, #72]	; (8018120 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 80180d6:	8803      	ldrh	r3, [r0, #0]
 80180d8:	8811      	ldrh	r1, [r2, #0]
 80180da:	428b      	cmp	r3, r1
 80180dc:	d20b      	bcs.n	80180f6 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 80180de:	4a11      	ldr	r2, [pc, #68]	; (8018124 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 80180e0:	6812      	ldr	r2, [r2, #0]
 80180e2:	b112      	cbz	r2, 80180ea <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 80180e4:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80180e8:	b9c0      	cbnz	r0, 801811c <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 80180ea:	4a0f      	ldr	r2, [pc, #60]	; (8018128 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 80180ec:	6811      	ldr	r1, [r2, #0]
 80180ee:	2214      	movs	r2, #20
 80180f0:	4353      	muls	r3, r2
 80180f2:	58c8      	ldr	r0, [r1, r3]
 80180f4:	4770      	bx	lr
 80180f6:	4a0d      	ldr	r2, [pc, #52]	; (801812c <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 80180f8:	8812      	ldrh	r2, [r2, #0]
 80180fa:	440a      	add	r2, r1
 80180fc:	4293      	cmp	r3, r2
 80180fe:	da04      	bge.n	801810a <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 8018100:	4a08      	ldr	r2, [pc, #32]	; (8018124 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8018102:	6812      	ldr	r2, [r2, #0]
 8018104:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8018108:	4770      	bx	lr
 801810a:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801810e:	4293      	cmp	r3, r2
 8018110:	d103      	bne.n	801811a <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 8018112:	4b07      	ldr	r3, [pc, #28]	; (8018130 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 8018114:	681b      	ldr	r3, [r3, #0]
 8018116:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8018118:	4770      	bx	lr
 801811a:	2000      	movs	r0, #0
 801811c:	4770      	bx	lr
 801811e:	bf00      	nop
 8018120:	20013844 	.word	0x20013844
 8018124:	20013828 	.word	0x20013828
 8018128:	2001384c 	.word	0x2001384c
 801812c:	20013848 	.word	0x20013848
 8018130:	200137bc 	.word	0x200137bc

08018134 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8018134:	4b24      	ldr	r3, [pc, #144]	; (80181c8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 8018136:	8802      	ldrh	r2, [r0, #0]
 8018138:	8818      	ldrh	r0, [r3, #0]
 801813a:	4282      	cmp	r2, r0
 801813c:	d221      	bcs.n	8018182 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 801813e:	4b23      	ldr	r3, [pc, #140]	; (80181cc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8018140:	6819      	ldr	r1, [r3, #0]
 8018142:	2314      	movs	r3, #20
 8018144:	fb03 1302 	mla	r3, r3, r2, r1
 8018148:	6858      	ldr	r0, [r3, #4]
 801814a:	2800      	cmp	r0, #0
 801814c:	d03a      	beq.n	80181c4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801814e:	4920      	ldr	r1, [pc, #128]	; (80181d0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8018150:	6809      	ldr	r1, [r1, #0]
 8018152:	2900      	cmp	r1, #0
 8018154:	d036      	beq.n	80181c4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8018156:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 801815a:	2900      	cmp	r1, #0
 801815c:	d032      	beq.n	80181c4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801815e:	891a      	ldrh	r2, [r3, #8]
 8018160:	8958      	ldrh	r0, [r3, #10]
 8018162:	4350      	muls	r0, r2
 8018164:	7c5a      	ldrb	r2, [r3, #17]
 8018166:	7cdb      	ldrb	r3, [r3, #19]
 8018168:	0952      	lsrs	r2, r2, #5
 801816a:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801816e:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8018172:	2b0b      	cmp	r3, #11
 8018174:	bf18      	it	ne
 8018176:	0040      	lslne	r0, r0, #1
 8018178:	3003      	adds	r0, #3
 801817a:	f020 0003 	bic.w	r0, r0, #3
 801817e:	4408      	add	r0, r1
 8018180:	4770      	bx	lr
 8018182:	4b14      	ldr	r3, [pc, #80]	; (80181d4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8018184:	881b      	ldrh	r3, [r3, #0]
 8018186:	4403      	add	r3, r0
 8018188:	429a      	cmp	r2, r3
 801818a:	da1a      	bge.n	80181c2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801818c:	4b12      	ldr	r3, [pc, #72]	; (80181d8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 801818e:	681b      	ldr	r3, [r3, #0]
 8018190:	1a10      	subs	r0, r2, r0
 8018192:	210e      	movs	r1, #14
 8018194:	fb01 3000 	mla	r0, r1, r0, r3
 8018198:	7b03      	ldrb	r3, [r0, #12]
 801819a:	f003 031f 	and.w	r3, r3, #31
 801819e:	2b0b      	cmp	r3, #11
 80181a0:	d10b      	bne.n	80181ba <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 80181a2:	8903      	ldrh	r3, [r0, #8]
 80181a4:	8940      	ldrh	r0, [r0, #10]
 80181a6:	4358      	muls	r0, r3
 80181a8:	4b09      	ldr	r3, [pc, #36]	; (80181d0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 80181aa:	6819      	ldr	r1, [r3, #0]
 80181ac:	3003      	adds	r0, #3
 80181ae:	f020 0303 	bic.w	r3, r0, #3
 80181b2:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 80181b6:	4418      	add	r0, r3
 80181b8:	4770      	bx	lr
 80181ba:	2b0d      	cmp	r3, #13
 80181bc:	d101      	bne.n	80181c2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 80181be:	300d      	adds	r0, #13
 80181c0:	4770      	bx	lr
 80181c2:	2000      	movs	r0, #0
 80181c4:	4770      	bx	lr
 80181c6:	bf00      	nop
 80181c8:	20013844 	.word	0x20013844
 80181cc:	2001384c 	.word	0x2001384c
 80181d0:	20013828 	.word	0x20013828
 80181d4:	20013848 	.word	0x20013848
 80181d8:	2001382c 	.word	0x2001382c

080181dc <_ZNK8touchgfx6Bitmap9getFormatEv>:
 80181dc:	b510      	push	{r4, lr}
 80181de:	4a17      	ldr	r2, [pc, #92]	; (801823c <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 80181e0:	8803      	ldrh	r3, [r0, #0]
 80181e2:	8812      	ldrh	r2, [r2, #0]
 80181e4:	4293      	cmp	r3, r2
 80181e6:	d20c      	bcs.n	8018202 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 80181e8:	4a15      	ldr	r2, [pc, #84]	; (8018240 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 80181ea:	6812      	ldr	r2, [r2, #0]
 80181ec:	2114      	movs	r1, #20
 80181ee:	fb01 2303 	mla	r3, r1, r3, r2
 80181f2:	7c58      	ldrb	r0, [r3, #17]
 80181f4:	0942      	lsrs	r2, r0, #5
 80181f6:	7cd8      	ldrb	r0, [r3, #19]
 80181f8:	f3c0 1042 	ubfx	r0, r0, #5, #3
 80181fc:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 8018200:	bd10      	pop	{r4, pc}
 8018202:	4910      	ldr	r1, [pc, #64]	; (8018244 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 8018204:	8809      	ldrh	r1, [r1, #0]
 8018206:	4411      	add	r1, r2
 8018208:	428b      	cmp	r3, r1
 801820a:	da09      	bge.n	8018220 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 801820c:	1a9b      	subs	r3, r3, r2
 801820e:	4a0e      	ldr	r2, [pc, #56]	; (8018248 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 8018210:	6812      	ldr	r2, [r2, #0]
 8018212:	210e      	movs	r1, #14
 8018214:	fb01 2303 	mla	r3, r1, r3, r2
 8018218:	7b18      	ldrb	r0, [r3, #12]
 801821a:	f000 001f 	and.w	r0, r0, #31
 801821e:	e7ef      	b.n	8018200 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8018220:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8018224:	4293      	cmp	r3, r2
 8018226:	d106      	bne.n	8018236 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 8018228:	f7eb f9fc 	bl	8003624 <_ZN8touchgfx3HAL3lcdEv>
 801822c:	6803      	ldr	r3, [r0, #0]
 801822e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018232:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018234:	4718      	bx	r3
 8018236:	2000      	movs	r0, #0
 8018238:	e7e2      	b.n	8018200 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 801823a:	bf00      	nop
 801823c:	20013844 	.word	0x20013844
 8018240:	2001384c 	.word	0x2001384c
 8018244:	20013848 	.word	0x20013848
 8018248:	2001382c 	.word	0x2001382c

0801824c <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 801824c:	2010      	movs	r0, #16
 801824e:	4770      	bx	lr

08018250 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8018250:	2000      	movs	r0, #0
 8018252:	4770      	bx	lr

08018254 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8018254:	4b02      	ldr	r3, [pc, #8]	; (8018260 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 8018256:	8818      	ldrh	r0, [r3, #0]
 8018258:	0040      	lsls	r0, r0, #1
 801825a:	b280      	uxth	r0, r0
 801825c:	4770      	bx	lr
 801825e:	bf00      	nop
 8018260:	200137b6 	.word	0x200137b6

08018264 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8018264:	2bff      	cmp	r3, #255	; 0xff
 8018266:	d050      	beq.n	801830a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8018268:	2a0b      	cmp	r2, #11
 801826a:	d04a      	beq.n	8018302 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801826c:	d80e      	bhi.n	801828c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 801826e:	2a03      	cmp	r2, #3
 8018270:	d03f      	beq.n	80182f2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 8018272:	d804      	bhi.n	801827e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8018274:	2a01      	cmp	r2, #1
 8018276:	d03e      	beq.n	80182f6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 8018278:	d93f      	bls.n	80182fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 801827a:	6b80      	ldr	r0, [r0, #56]	; 0x38
 801827c:	4770      	bx	lr
 801827e:	2a09      	cmp	r2, #9
 8018280:	d03f      	beq.n	8018302 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8018282:	d83c      	bhi.n	80182fe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8018284:	2a08      	cmp	r2, #8
 8018286:	d03a      	beq.n	80182fe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8018288:	2000      	movs	r0, #0
 801828a:	4770      	bx	lr
 801828c:	2a2f      	cmp	r2, #47	; 0x2f
 801828e:	d024      	beq.n	80182da <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 8018290:	d80d      	bhi.n	80182ae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 8018292:	2a2d      	cmp	r2, #45	; 0x2d
 8018294:	d014      	beq.n	80182c0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 8018296:	d826      	bhi.n	80182e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8018298:	2a2c      	cmp	r2, #44	; 0x2c
 801829a:	d1f5      	bne.n	8018288 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801829c:	684b      	ldr	r3, [r1, #4]
 801829e:	781b      	ldrb	r3, [r3, #0]
 80182a0:	2b01      	cmp	r3, #1
 80182a2:	d018      	beq.n	80182d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 80182a4:	d323      	bcc.n	80182ee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 80182a6:	2b02      	cmp	r3, #2
 80182a8:	d1ee      	bne.n	8018288 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80182aa:	6880      	ldr	r0, [r0, #8]
 80182ac:	4770      	bx	lr
 80182ae:	2a31      	cmp	r2, #49	; 0x31
 80182b0:	d004      	beq.n	80182bc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 80182b2:	d328      	bcc.n	8018306 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 80182b4:	2a32      	cmp	r2, #50	; 0x32
 80182b6:	d026      	beq.n	8018306 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 80182b8:	2a33      	cmp	r2, #51	; 0x33
 80182ba:	d1e5      	bne.n	8018288 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80182bc:	6f00      	ldr	r0, [r0, #112]	; 0x70
 80182be:	4770      	bx	lr
 80182c0:	684b      	ldr	r3, [r1, #4]
 80182c2:	781b      	ldrb	r3, [r3, #0]
 80182c4:	2b01      	cmp	r3, #1
 80182c6:	d004      	beq.n	80182d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 80182c8:	d30b      	bcc.n	80182e2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80182ca:	2b02      	cmp	r3, #2
 80182cc:	d1dc      	bne.n	8018288 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80182ce:	6900      	ldr	r0, [r0, #16]
 80182d0:	4770      	bx	lr
 80182d2:	6a00      	ldr	r0, [r0, #32]
 80182d4:	4770      	bx	lr
 80182d6:	6980      	ldr	r0, [r0, #24]
 80182d8:	4770      	bx	lr
 80182da:	684b      	ldr	r3, [r1, #4]
 80182dc:	781b      	ldrb	r3, [r3, #0]
 80182de:	2b00      	cmp	r3, #0
 80182e0:	d1d2      	bne.n	8018288 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80182e2:	6b00      	ldr	r0, [r0, #48]	; 0x30
 80182e4:	4770      	bx	lr
 80182e6:	684b      	ldr	r3, [r1, #4]
 80182e8:	781b      	ldrb	r3, [r3, #0]
 80182ea:	2b00      	cmp	r3, #0
 80182ec:	d1cc      	bne.n	8018288 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80182ee:	6a80      	ldr	r0, [r0, #40]	; 0x28
 80182f0:	4770      	bx	lr
 80182f2:	6c80      	ldr	r0, [r0, #72]	; 0x48
 80182f4:	4770      	bx	lr
 80182f6:	6d00      	ldr	r0, [r0, #80]	; 0x50
 80182f8:	4770      	bx	lr
 80182fa:	6c00      	ldr	r0, [r0, #64]	; 0x40
 80182fc:	4770      	bx	lr
 80182fe:	6d80      	ldr	r0, [r0, #88]	; 0x58
 8018300:	4770      	bx	lr
 8018302:	6e00      	ldr	r0, [r0, #96]	; 0x60
 8018304:	4770      	bx	lr
 8018306:	6e80      	ldr	r0, [r0, #104]	; 0x68
 8018308:	4770      	bx	lr
 801830a:	2a0b      	cmp	r2, #11
 801830c:	d049      	beq.n	80183a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801830e:	d80e      	bhi.n	801832e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 8018310:	2a03      	cmp	r2, #3
 8018312:	d040      	beq.n	8018396 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 8018314:	d804      	bhi.n	8018320 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 8018316:	2a01      	cmp	r2, #1
 8018318:	d03f      	beq.n	801839a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 801831a:	d940      	bls.n	801839e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 801831c:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 801831e:	4770      	bx	lr
 8018320:	2a09      	cmp	r2, #9
 8018322:	d03e      	beq.n	80183a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8018324:	d801      	bhi.n	801832a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 8018326:	2a08      	cmp	r2, #8
 8018328:	d1ae      	bne.n	8018288 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801832a:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 801832c:	4770      	bx	lr
 801832e:	2a2f      	cmp	r2, #47	; 0x2f
 8018330:	d024      	beq.n	801837c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 8018332:	d80d      	bhi.n	8018350 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 8018334:	2a2d      	cmp	r2, #45	; 0x2d
 8018336:	d014      	beq.n	8018362 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 8018338:	d826      	bhi.n	8018388 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 801833a:	2a2c      	cmp	r2, #44	; 0x2c
 801833c:	d1a4      	bne.n	8018288 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801833e:	684b      	ldr	r3, [r1, #4]
 8018340:	781b      	ldrb	r3, [r3, #0]
 8018342:	2b01      	cmp	r3, #1
 8018344:	d018      	beq.n	8018378 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 8018346:	d324      	bcc.n	8018392 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 8018348:	2b02      	cmp	r3, #2
 801834a:	d19d      	bne.n	8018288 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801834c:	68c0      	ldr	r0, [r0, #12]
 801834e:	4770      	bx	lr
 8018350:	2a31      	cmp	r2, #49	; 0x31
 8018352:	d004      	beq.n	801835e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 8018354:	d327      	bcc.n	80183a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8018356:	2a32      	cmp	r2, #50	; 0x32
 8018358:	d025      	beq.n	80183a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801835a:	2a33      	cmp	r2, #51	; 0x33
 801835c:	d194      	bne.n	8018288 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801835e:	6f40      	ldr	r0, [r0, #116]	; 0x74
 8018360:	4770      	bx	lr
 8018362:	684b      	ldr	r3, [r1, #4]
 8018364:	781b      	ldrb	r3, [r3, #0]
 8018366:	2b01      	cmp	r3, #1
 8018368:	d004      	beq.n	8018374 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 801836a:	d30b      	bcc.n	8018384 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 801836c:	2b02      	cmp	r3, #2
 801836e:	d18b      	bne.n	8018288 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018370:	6940      	ldr	r0, [r0, #20]
 8018372:	4770      	bx	lr
 8018374:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8018376:	4770      	bx	lr
 8018378:	69c0      	ldr	r0, [r0, #28]
 801837a:	4770      	bx	lr
 801837c:	684b      	ldr	r3, [r1, #4]
 801837e:	781b      	ldrb	r3, [r3, #0]
 8018380:	2b00      	cmp	r3, #0
 8018382:	d181      	bne.n	8018288 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018384:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8018386:	4770      	bx	lr
 8018388:	684b      	ldr	r3, [r1, #4]
 801838a:	781b      	ldrb	r3, [r3, #0]
 801838c:	2b00      	cmp	r3, #0
 801838e:	f47f af7b 	bne.w	8018288 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018392:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8018394:	4770      	bx	lr
 8018396:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8018398:	4770      	bx	lr
 801839a:	6d40      	ldr	r0, [r0, #84]	; 0x54
 801839c:	4770      	bx	lr
 801839e:	6c40      	ldr	r0, [r0, #68]	; 0x44
 80183a0:	4770      	bx	lr
 80183a2:	6e40      	ldr	r0, [r0, #100]	; 0x64
 80183a4:	4770      	bx	lr
 80183a6:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 80183a8:	4770      	bx	lr

080183aa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80183aa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80183ae:	b087      	sub	sp, #28
 80183b0:	9815      	ldr	r0, [sp, #84]	; 0x54
 80183b2:	9205      	str	r2, [sp, #20]
 80183b4:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80183b8:	9202      	str	r2, [sp, #8]
 80183ba:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 80183be:	9101      	str	r1, [sp, #4]
 80183c0:	6841      	ldr	r1, [r0, #4]
 80183c2:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 80183c6:	fb01 2404 	mla	r4, r1, r4, r2
 80183ca:	6802      	ldr	r2, [r0, #0]
 80183cc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80183d0:	f8de 2000 	ldr.w	r2, [lr]
 80183d4:	9203      	str	r2, [sp, #12]
 80183d6:	f8de 2004 	ldr.w	r2, [lr, #4]
 80183da:	3204      	adds	r2, #4
 80183dc:	9204      	str	r2, [sp, #16]
 80183de:	9a02      	ldr	r2, [sp, #8]
 80183e0:	43d6      	mvns	r6, r2
 80183e2:	b2f6      	uxtb	r6, r6
 80183e4:	9a01      	ldr	r2, [sp, #4]
 80183e6:	2a00      	cmp	r2, #0
 80183e8:	dc03      	bgt.n	80183f2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80183ea:	9a05      	ldr	r2, [sp, #20]
 80183ec:	2a00      	cmp	r2, #0
 80183ee:	f340 8129 	ble.w	8018644 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80183f2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80183f4:	f9be c008 	ldrsh.w	ip, [lr, #8]
 80183f8:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 80183fc:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8018400:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8018402:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8018406:	2b00      	cmp	r3, #0
 8018408:	dd0e      	ble.n	8018428 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801840a:	1408      	asrs	r0, r1, #16
 801840c:	d405      	bmi.n	801841a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801840e:	4560      	cmp	r0, ip
 8018410:	da03      	bge.n	801841a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8018412:	1410      	asrs	r0, r2, #16
 8018414:	d401      	bmi.n	801841a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8018416:	42b8      	cmp	r0, r7
 8018418:	db07      	blt.n	801842a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801841a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801841c:	4401      	add	r1, r0
 801841e:	9814      	ldr	r0, [sp, #80]	; 0x50
 8018420:	3b01      	subs	r3, #1
 8018422:	4402      	add	r2, r0
 8018424:	3402      	adds	r4, #2
 8018426:	e7ee      	b.n	8018406 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8018428:	d071      	beq.n	801850e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801842a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801842c:	1e58      	subs	r0, r3, #1
 801842e:	fb05 1500 	mla	r5, r5, r0, r1
 8018432:	142d      	asrs	r5, r5, #16
 8018434:	d45f      	bmi.n	80184f6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8018436:	4565      	cmp	r5, ip
 8018438:	da5d      	bge.n	80184f6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801843a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801843c:	fb05 2000 	mla	r0, r5, r0, r2
 8018440:	1400      	asrs	r0, r0, #16
 8018442:	d458      	bmi.n	80184f6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8018444:	42b8      	cmp	r0, r7
 8018446:	da56      	bge.n	80184f6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8018448:	f8bd b008 	ldrh.w	fp, [sp, #8]
 801844c:	4699      	mov	r9, r3
 801844e:	46a2      	mov	sl, r4
 8018450:	f1b9 0f00 	cmp.w	r9, #0
 8018454:	dd57      	ble.n	8018506 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8018456:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801845a:	9803      	ldr	r0, [sp, #12]
 801845c:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8018460:	140d      	asrs	r5, r1, #16
 8018462:	fb07 000c 	mla	r0, r7, ip, r0
 8018466:	f109 39ff 	add.w	r9, r9, #4294967295
 801846a:	5d40      	ldrb	r0, [r0, r5]
 801846c:	9d04      	ldr	r5, [sp, #16]
 801846e:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8018472:	f8ba 5000 	ldrh.w	r5, [sl]
 8018476:	122f      	asrs	r7, r5, #8
 8018478:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801847c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018480:	fb17 f706 	smulbb	r7, r7, r6
 8018484:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8018488:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801848c:	00ed      	lsls	r5, r5, #3
 801848e:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8018492:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8018496:	10c7      	asrs	r7, r0, #3
 8018498:	b2ed      	uxtb	r5, r5
 801849a:	00c0      	lsls	r0, r0, #3
 801849c:	fb18 f806 	smulbb	r8, r8, r6
 80184a0:	fb15 f506 	smulbb	r5, r5, r6
 80184a4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80184a8:	b2c0      	uxtb	r0, r0
 80184aa:	fa1f fc8c 	uxth.w	ip, ip
 80184ae:	fb07 870b 	mla	r7, r7, fp, r8
 80184b2:	fb00 500b 	mla	r0, r0, fp, r5
 80184b6:	b280      	uxth	r0, r0
 80184b8:	b2bf      	uxth	r7, r7
 80184ba:	f10c 0501 	add.w	r5, ip, #1
 80184be:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80184c2:	f107 0801 	add.w	r8, r7, #1
 80184c6:	1c45      	adds	r5, r0, #1
 80184c8:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80184cc:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 80184d0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80184d2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80184d6:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80184da:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80184de:	ea45 0c0c 	orr.w	ip, r5, ip
 80184e2:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80184e6:	4401      	add	r1, r0
 80184e8:	9814      	ldr	r0, [sp, #80]	; 0x50
 80184ea:	ea4c 0c08 	orr.w	ip, ip, r8
 80184ee:	f82a cb02 	strh.w	ip, [sl], #2
 80184f2:	4402      	add	r2, r0
 80184f4:	e7ac      	b.n	8018450 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80184f6:	f8bd a008 	ldrh.w	sl, [sp, #8]
 80184fa:	f04f 0800 	mov.w	r8, #0
 80184fe:	eb03 0008 	add.w	r0, r3, r8
 8018502:	2800      	cmp	r0, #0
 8018504:	dc41      	bgt.n	801858a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8018506:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801850a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801850e:	9b01      	ldr	r3, [sp, #4]
 8018510:	2b00      	cmp	r3, #0
 8018512:	f340 8097 	ble.w	8018644 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8018516:	ee30 0a04 	vadd.f32	s0, s0, s8
 801851a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801851e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8018522:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018524:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018528:	ee31 1a05 	vadd.f32	s2, s2, s10
 801852c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018530:	eef0 6a62 	vmov.f32	s13, s5
 8018534:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018538:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801853c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018540:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8018544:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018548:	eef0 6a43 	vmov.f32	s13, s6
 801854c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018550:	ee12 2a90 	vmov	r2, s5
 8018554:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018558:	fb92 f3f3 	sdiv	r3, r2, r3
 801855c:	ee13 2a10 	vmov	r2, s6
 8018560:	9313      	str	r3, [sp, #76]	; 0x4c
 8018562:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018564:	fb92 f3f3 	sdiv	r3, r2, r3
 8018568:	9314      	str	r3, [sp, #80]	; 0x50
 801856a:	9b01      	ldr	r3, [sp, #4]
 801856c:	9a05      	ldr	r2, [sp, #20]
 801856e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018572:	3b01      	subs	r3, #1
 8018574:	9301      	str	r3, [sp, #4]
 8018576:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801857a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801857c:	eeb0 3a67 	vmov.f32	s6, s15
 8018580:	bf08      	it	eq
 8018582:	4613      	moveq	r3, r2
 8018584:	eef0 2a47 	vmov.f32	s5, s14
 8018588:	e72c      	b.n	80183e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801858a:	140f      	asrs	r7, r1, #16
 801858c:	d453      	bmi.n	8018636 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801858e:	f8de 5008 	ldr.w	r5, [lr, #8]
 8018592:	42bd      	cmp	r5, r7
 8018594:	dd4f      	ble.n	8018636 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8018596:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801859a:	d44c      	bmi.n	8018636 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801859c:	f8de 000c 	ldr.w	r0, [lr, #12]
 80185a0:	4560      	cmp	r0, ip
 80185a2:	dd48      	ble.n	8018636 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80185a4:	9803      	ldr	r0, [sp, #12]
 80185a6:	b22d      	sxth	r5, r5
 80185a8:	fb0c 0505 	mla	r5, ip, r5, r0
 80185ac:	5de8      	ldrb	r0, [r5, r7]
 80185ae:	9d04      	ldr	r5, [sp, #16]
 80185b0:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 80185b4:	f06f 0501 	mvn.w	r5, #1
 80185b8:	fb05 fb08 	mul.w	fp, r5, r8
 80185bc:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80185c0:	f834 500b 	ldrh.w	r5, [r4, fp]
 80185c4:	122f      	asrs	r7, r5, #8
 80185c6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80185ca:	fb17 f706 	smulbb	r7, r7, r6
 80185ce:	ea4f 09e5 	mov.w	r9, r5, asr #3
 80185d2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80185d6:	00ed      	lsls	r5, r5, #3
 80185d8:	fb0c 7c0a 	mla	ip, ip, sl, r7
 80185dc:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80185e0:	10c7      	asrs	r7, r0, #3
 80185e2:	b2ed      	uxtb	r5, r5
 80185e4:	00c0      	lsls	r0, r0, #3
 80185e6:	fb19 f906 	smulbb	r9, r9, r6
 80185ea:	fb15 f506 	smulbb	r5, r5, r6
 80185ee:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80185f2:	b2c0      	uxtb	r0, r0
 80185f4:	fa1f fc8c 	uxth.w	ip, ip
 80185f8:	fb07 970a 	mla	r7, r7, sl, r9
 80185fc:	fb00 500a 	mla	r0, r0, sl, r5
 8018600:	b2bf      	uxth	r7, r7
 8018602:	b280      	uxth	r0, r0
 8018604:	f10c 0501 	add.w	r5, ip, #1
 8018608:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801860c:	f107 0901 	add.w	r9, r7, #1
 8018610:	1c45      	adds	r5, r0, #1
 8018612:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8018616:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801861a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801861e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8018622:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8018626:	ea45 0c0c 	orr.w	ip, r5, ip
 801862a:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801862e:	ea4c 0c09 	orr.w	ip, ip, r9
 8018632:	f824 c00b 	strh.w	ip, [r4, fp]
 8018636:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018638:	4401      	add	r1, r0
 801863a:	9814      	ldr	r0, [sp, #80]	; 0x50
 801863c:	f108 38ff 	add.w	r8, r8, #4294967295
 8018640:	4402      	add	r2, r0
 8018642:	e75c      	b.n	80184fe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8018644:	b007      	add	sp, #28
 8018646:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801864a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801864a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801864e:	b085      	sub	sp, #20
 8018650:	4693      	mov	fp, r2
 8018652:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8018654:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8018656:	6870      	ldr	r0, [r6, #4]
 8018658:	9100      	str	r1, [sp, #0]
 801865a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801865e:	fb00 2404 	mla	r4, r0, r4, r2
 8018662:	6832      	ldr	r2, [r6, #0]
 8018664:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8018668:	682a      	ldr	r2, [r5, #0]
 801866a:	9201      	str	r2, [sp, #4]
 801866c:	686a      	ldr	r2, [r5, #4]
 801866e:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8018672:	3204      	adds	r2, #4
 8018674:	9202      	str	r2, [sp, #8]
 8018676:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801867a:	9a00      	ldr	r2, [sp, #0]
 801867c:	2a00      	cmp	r2, #0
 801867e:	dc03      	bgt.n	8018688 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8018680:	f1bb 0f00 	cmp.w	fp, #0
 8018684:	f340 80a0 	ble.w	80187c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8018688:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801868a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801868e:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8018692:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8018696:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8018698:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801869c:	2b00      	cmp	r3, #0
 801869e:	dd0c      	ble.n	80186ba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80186a0:	1406      	asrs	r6, r0, #16
 80186a2:	d405      	bmi.n	80186b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80186a4:	454e      	cmp	r6, r9
 80186a6:	da03      	bge.n	80186b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80186a8:	1416      	asrs	r6, r2, #16
 80186aa:	d401      	bmi.n	80186b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80186ac:	4546      	cmp	r6, r8
 80186ae:	db05      	blt.n	80186bc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80186b0:	4470      	add	r0, lr
 80186b2:	4462      	add	r2, ip
 80186b4:	3b01      	subs	r3, #1
 80186b6:	3402      	adds	r4, #2
 80186b8:	e7f0      	b.n	801869c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80186ba:	d00f      	beq.n	80186dc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80186bc:	1e5e      	subs	r6, r3, #1
 80186be:	fb0e 0706 	mla	r7, lr, r6, r0
 80186c2:	143f      	asrs	r7, r7, #16
 80186c4:	d541      	bpl.n	801874a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 80186c6:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 80186ca:	4698      	mov	r8, r3
 80186cc:	9603      	str	r6, [sp, #12]
 80186ce:	f1b8 0f00 	cmp.w	r8, #0
 80186d2:	dc59      	bgt.n	8018788 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80186d4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80186d8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80186dc:	9b00      	ldr	r3, [sp, #0]
 80186de:	2b00      	cmp	r3, #0
 80186e0:	dd72      	ble.n	80187c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 80186e2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80186e6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80186ea:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80186ee:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80186f0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80186f4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80186f8:	eeb0 6a62 	vmov.f32	s12, s5
 80186fc:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018700:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018704:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018708:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801870c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018710:	eeb0 6a43 	vmov.f32	s12, s6
 8018714:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018718:	ee12 2a90 	vmov	r2, s5
 801871c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018720:	fb92 fef3 	sdiv	lr, r2, r3
 8018724:	ee13 2a10 	vmov	r2, s6
 8018728:	fb92 fcf3 	sdiv	ip, r2, r3
 801872c:	9b00      	ldr	r3, [sp, #0]
 801872e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018732:	3b01      	subs	r3, #1
 8018734:	9300      	str	r3, [sp, #0]
 8018736:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801873a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801873c:	eeb0 3a67 	vmov.f32	s6, s15
 8018740:	bf08      	it	eq
 8018742:	465b      	moveq	r3, fp
 8018744:	eef0 2a47 	vmov.f32	s5, s14
 8018748:	e797      	b.n	801867a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801874a:	454f      	cmp	r7, r9
 801874c:	dabb      	bge.n	80186c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801874e:	fb0c 2606 	mla	r6, ip, r6, r2
 8018752:	1436      	asrs	r6, r6, #16
 8018754:	d4b7      	bmi.n	80186c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8018756:	4546      	cmp	r6, r8
 8018758:	dab5      	bge.n	80186c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801875a:	461e      	mov	r6, r3
 801875c:	46a0      	mov	r8, r4
 801875e:	2e00      	cmp	r6, #0
 8018760:	ddb8      	ble.n	80186d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8018762:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8018766:	9901      	ldr	r1, [sp, #4]
 8018768:	1417      	asrs	r7, r2, #16
 801876a:	ea4f 4920 	mov.w	r9, r0, asr #16
 801876e:	fb0a 1707 	mla	r7, sl, r7, r1
 8018772:	9902      	ldr	r1, [sp, #8]
 8018774:	f817 7009 	ldrb.w	r7, [r7, r9]
 8018778:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801877c:	f828 7b02 	strh.w	r7, [r8], #2
 8018780:	4470      	add	r0, lr
 8018782:	4462      	add	r2, ip
 8018784:	3e01      	subs	r6, #1
 8018786:	e7ea      	b.n	801875e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8018788:	ea5f 4920 	movs.w	r9, r0, asr #16
 801878c:	d417      	bmi.n	80187be <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801878e:	68ae      	ldr	r6, [r5, #8]
 8018790:	454e      	cmp	r6, r9
 8018792:	dd14      	ble.n	80187be <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8018794:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8018798:	d411      	bmi.n	80187be <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801879a:	68ef      	ldr	r7, [r5, #12]
 801879c:	4557      	cmp	r7, sl
 801879e:	dd0e      	ble.n	80187be <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80187a0:	9f01      	ldr	r7, [sp, #4]
 80187a2:	b236      	sxth	r6, r6
 80187a4:	fb0a 7606 	mla	r6, sl, r6, r7
 80187a8:	9f02      	ldr	r7, [sp, #8]
 80187aa:	f816 6009 	ldrb.w	r6, [r6, r9]
 80187ae:	f06f 0101 	mvn.w	r1, #1
 80187b2:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 80187b6:	fb01 f608 	mul.w	r6, r1, r8
 80187ba:	9903      	ldr	r1, [sp, #12]
 80187bc:	538f      	strh	r7, [r1, r6]
 80187be:	4470      	add	r0, lr
 80187c0:	4462      	add	r2, ip
 80187c2:	f108 38ff 	add.w	r8, r8, #4294967295
 80187c6:	e782      	b.n	80186ce <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80187c8:	b005      	add	sp, #20
 80187ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080187ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80187ce:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80187d2:	b087      	sub	sp, #28
 80187d4:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80187d6:	9205      	str	r2, [sp, #20]
 80187d8:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80187dc:	9203      	str	r2, [sp, #12]
 80187de:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 80187e2:	9102      	str	r1, [sp, #8]
 80187e4:	6861      	ldr	r1, [r4, #4]
 80187e6:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 80187ea:	fb01 2000 	mla	r0, r1, r0, r2
 80187ee:	6822      	ldr	r2, [r4, #0]
 80187f0:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 80187f4:	9200      	str	r2, [sp, #0]
 80187f6:	f8dc 2000 	ldr.w	r2, [ip]
 80187fa:	9204      	str	r2, [sp, #16]
 80187fc:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8018800:	3204      	adds	r2, #4
 8018802:	9201      	str	r2, [sp, #4]
 8018804:	9a03      	ldr	r2, [sp, #12]
 8018806:	43d5      	mvns	r5, r2
 8018808:	b2ed      	uxtb	r5, r5
 801880a:	9a02      	ldr	r2, [sp, #8]
 801880c:	2a00      	cmp	r2, #0
 801880e:	dc03      	bgt.n	8018818 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8018810:	9a05      	ldr	r2, [sp, #20]
 8018812:	2a00      	cmp	r2, #0
 8018814:	f340 812c 	ble.w	8018a70 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8018818:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801881a:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 801881e:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8018822:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8018826:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8018828:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801882c:	2b00      	cmp	r3, #0
 801882e:	dd10      	ble.n	8018852 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8018830:	140c      	asrs	r4, r1, #16
 8018832:	d405      	bmi.n	8018840 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8018834:	4574      	cmp	r4, lr
 8018836:	da03      	bge.n	8018840 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8018838:	1414      	asrs	r4, r2, #16
 801883a:	d401      	bmi.n	8018840 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801883c:	42bc      	cmp	r4, r7
 801883e:	db09      	blt.n	8018854 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8018840:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8018842:	9800      	ldr	r0, [sp, #0]
 8018844:	4421      	add	r1, r4
 8018846:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8018848:	3002      	adds	r0, #2
 801884a:	4422      	add	r2, r4
 801884c:	3b01      	subs	r3, #1
 801884e:	9000      	str	r0, [sp, #0]
 8018850:	e7ec      	b.n	801882c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8018852:	d071      	beq.n	8018938 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8018854:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8018856:	1e5c      	subs	r4, r3, #1
 8018858:	fb06 1604 	mla	r6, r6, r4, r1
 801885c:	1436      	asrs	r6, r6, #16
 801885e:	d45d      	bmi.n	801891c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8018860:	4576      	cmp	r6, lr
 8018862:	da5b      	bge.n	801891c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8018864:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8018866:	fb06 2404 	mla	r4, r6, r4, r2
 801886a:	1424      	asrs	r4, r4, #16
 801886c:	d456      	bmi.n	801891c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801886e:	42bc      	cmp	r4, r7
 8018870:	da54      	bge.n	801891c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8018872:	f8dd 9000 	ldr.w	r9, [sp]
 8018876:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 801887a:	4698      	mov	r8, r3
 801887c:	f1b8 0f00 	cmp.w	r8, #0
 8018880:	dd54      	ble.n	801892c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8018882:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8018886:	9804      	ldr	r0, [sp, #16]
 8018888:	1414      	asrs	r4, r2, #16
 801888a:	fb07 0404 	mla	r4, r7, r4, r0
 801888e:	140e      	asrs	r6, r1, #16
 8018890:	9801      	ldr	r0, [sp, #4]
 8018892:	f814 e006 	ldrb.w	lr, [r4, r6]
 8018896:	f8b9 4000 	ldrh.w	r4, [r9]
 801889a:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801889e:	eb00 0b0e 	add.w	fp, r0, lr
 80188a2:	1227      	asrs	r7, r4, #8
 80188a4:	f89b 6002 	ldrb.w	r6, [fp, #2]
 80188a8:	f89b b001 	ldrb.w	fp, [fp, #1]
 80188ac:	f810 e00e 	ldrb.w	lr, [r0, lr]
 80188b0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80188b2:	fb16 f60a 	smulbb	r6, r6, sl
 80188b6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80188ba:	fb07 6705 	mla	r7, r7, r5, r6
 80188be:	10e6      	asrs	r6, r4, #3
 80188c0:	00e4      	lsls	r4, r4, #3
 80188c2:	b2e4      	uxtb	r4, r4
 80188c4:	fb1b fb0a 	smulbb	fp, fp, sl
 80188c8:	fb14 f405 	smulbb	r4, r4, r5
 80188cc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80188d0:	b2bf      	uxth	r7, r7
 80188d2:	fb06 b605 	mla	r6, r6, r5, fp
 80188d6:	fb0e 4e0a 	mla	lr, lr, sl, r4
 80188da:	b2b6      	uxth	r6, r6
 80188dc:	fa1f fe8e 	uxth.w	lr, lr
 80188e0:	1c7c      	adds	r4, r7, #1
 80188e2:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 80188e6:	f106 0b01 	add.w	fp, r6, #1
 80188ea:	f10e 0401 	add.w	r4, lr, #1
 80188ee:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 80188f2:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 80188f6:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80188fa:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 80188fe:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8018902:	4327      	orrs	r7, r4
 8018904:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8018908:	4401      	add	r1, r0
 801890a:	9814      	ldr	r0, [sp, #80]	; 0x50
 801890c:	ea47 070b 	orr.w	r7, r7, fp
 8018910:	f829 7b02 	strh.w	r7, [r9], #2
 8018914:	4402      	add	r2, r0
 8018916:	f108 38ff 	add.w	r8, r8, #4294967295
 801891a:	e7af      	b.n	801887c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801891c:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8018920:	f04f 0e00 	mov.w	lr, #0
 8018924:	eb03 040e 	add.w	r4, r3, lr
 8018928:	2c00      	cmp	r4, #0
 801892a:	dc43      	bgt.n	80189b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801892c:	9a00      	ldr	r2, [sp, #0]
 801892e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018932:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8018936:	9300      	str	r3, [sp, #0]
 8018938:	9b02      	ldr	r3, [sp, #8]
 801893a:	2b00      	cmp	r3, #0
 801893c:	f340 8098 	ble.w	8018a70 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8018940:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018944:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018948:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801894c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801894e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018952:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018956:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801895a:	eef0 6a62 	vmov.f32	s13, s5
 801895e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018962:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018966:	ee77 2a62 	vsub.f32	s5, s14, s5
 801896a:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801896e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018972:	eef0 6a43 	vmov.f32	s13, s6
 8018976:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801897a:	ee12 2a90 	vmov	r2, s5
 801897e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018982:	fb92 f3f3 	sdiv	r3, r2, r3
 8018986:	ee13 2a10 	vmov	r2, s6
 801898a:	9313      	str	r3, [sp, #76]	; 0x4c
 801898c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801898e:	fb92 f3f3 	sdiv	r3, r2, r3
 8018992:	9314      	str	r3, [sp, #80]	; 0x50
 8018994:	9b02      	ldr	r3, [sp, #8]
 8018996:	9a05      	ldr	r2, [sp, #20]
 8018998:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801899c:	3b01      	subs	r3, #1
 801899e:	9302      	str	r3, [sp, #8]
 80189a0:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 80189a4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80189a6:	eeb0 3a67 	vmov.f32	s6, s15
 80189aa:	bf08      	it	eq
 80189ac:	4613      	moveq	r3, r2
 80189ae:	eef0 2a47 	vmov.f32	s5, s14
 80189b2:	e72a      	b.n	801880a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80189b4:	140f      	asrs	r7, r1, #16
 80189b6:	d454      	bmi.n	8018a62 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80189b8:	f8dc 6008 	ldr.w	r6, [ip, #8]
 80189bc:	42be      	cmp	r6, r7
 80189be:	dd50      	ble.n	8018a62 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80189c0:	ea5f 4822 	movs.w	r8, r2, asr #16
 80189c4:	d44d      	bmi.n	8018a62 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80189c6:	f8dc 400c 	ldr.w	r4, [ip, #12]
 80189ca:	4544      	cmp	r4, r8
 80189cc:	dd49      	ble.n	8018a62 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80189ce:	9c04      	ldr	r4, [sp, #16]
 80189d0:	b236      	sxth	r6, r6
 80189d2:	fb08 4606 	mla	r6, r8, r6, r4
 80189d6:	f06f 0001 	mvn.w	r0, #1
 80189da:	f816 8007 	ldrb.w	r8, [r6, r7]
 80189de:	9c01      	ldr	r4, [sp, #4]
 80189e0:	fb00 fa0e 	mul.w	sl, r0, lr
 80189e4:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 80189e8:	9800      	ldr	r0, [sp, #0]
 80189ea:	eb04 0b08 	add.w	fp, r4, r8
 80189ee:	f830 400a 	ldrh.w	r4, [r0, sl]
 80189f2:	f89b 6002 	ldrb.w	r6, [fp, #2]
 80189f6:	9801      	ldr	r0, [sp, #4]
 80189f8:	f89b b001 	ldrb.w	fp, [fp, #1]
 80189fc:	f810 8008 	ldrb.w	r8, [r0, r8]
 8018a00:	9800      	ldr	r0, [sp, #0]
 8018a02:	1227      	asrs	r7, r4, #8
 8018a04:	fb16 f609 	smulbb	r6, r6, r9
 8018a08:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018a0c:	fb07 6705 	mla	r7, r7, r5, r6
 8018a10:	10e6      	asrs	r6, r4, #3
 8018a12:	00e4      	lsls	r4, r4, #3
 8018a14:	b2e4      	uxtb	r4, r4
 8018a16:	fb1b fb09 	smulbb	fp, fp, r9
 8018a1a:	fb14 f405 	smulbb	r4, r4, r5
 8018a1e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8018a22:	b2bf      	uxth	r7, r7
 8018a24:	fb06 b605 	mla	r6, r6, r5, fp
 8018a28:	fb08 4809 	mla	r8, r8, r9, r4
 8018a2c:	b2b6      	uxth	r6, r6
 8018a2e:	fa1f f888 	uxth.w	r8, r8
 8018a32:	1c7c      	adds	r4, r7, #1
 8018a34:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8018a38:	f106 0b01 	add.w	fp, r6, #1
 8018a3c:	f108 0401 	add.w	r4, r8, #1
 8018a40:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8018a44:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8018a48:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8018a4c:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8018a50:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8018a54:	4327      	orrs	r7, r4
 8018a56:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8018a5a:	ea47 070b 	orr.w	r7, r7, fp
 8018a5e:	f820 700a 	strh.w	r7, [r0, sl]
 8018a62:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018a64:	4401      	add	r1, r0
 8018a66:	9814      	ldr	r0, [sp, #80]	; 0x50
 8018a68:	f10e 3eff 	add.w	lr, lr, #4294967295
 8018a6c:	4402      	add	r2, r0
 8018a6e:	e759      	b.n	8018924 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8018a70:	b007      	add	sp, #28
 8018a72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08018a78 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018a78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018a7c:	b085      	sub	sp, #20
 8018a7e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8018a82:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8018a84:	9203      	str	r2, [sp, #12]
 8018a86:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8018a8a:	6870      	ldr	r0, [r6, #4]
 8018a8c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8018a8e:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 8018a92:	686f      	ldr	r7, [r5, #4]
 8018a94:	9101      	str	r1, [sp, #4]
 8018a96:	fb00 2404 	mla	r4, r0, r4, r2
 8018a9a:	6832      	ldr	r2, [r6, #0]
 8018a9c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8018aa0:	682a      	ldr	r2, [r5, #0]
 8018aa2:	9202      	str	r2, [sp, #8]
 8018aa4:	3704      	adds	r7, #4
 8018aa6:	9a01      	ldr	r2, [sp, #4]
 8018aa8:	2a00      	cmp	r2, #0
 8018aaa:	dc03      	bgt.n	8018ab4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8018aac:	9a03      	ldr	r2, [sp, #12]
 8018aae:	2a00      	cmp	r2, #0
 8018ab0:	f340 80cc 	ble.w	8018c4c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8018ab4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8018ab6:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8018aba:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8018abe:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8018ac2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8018ac4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8018ac8:	2b00      	cmp	r3, #0
 8018aca:	dd0d      	ble.n	8018ae8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8018acc:	1406      	asrs	r6, r0, #16
 8018ace:	d405      	bmi.n	8018adc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8018ad0:	454e      	cmp	r6, r9
 8018ad2:	da03      	bge.n	8018adc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8018ad4:	1416      	asrs	r6, r2, #16
 8018ad6:	d401      	bmi.n	8018adc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8018ad8:	4546      	cmp	r6, r8
 8018ada:	db06      	blt.n	8018aea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8018adc:	9e12      	ldr	r6, [sp, #72]	; 0x48
 8018ade:	4460      	add	r0, ip
 8018ae0:	4432      	add	r2, r6
 8018ae2:	3b01      	subs	r3, #1
 8018ae4:	3402      	adds	r4, #2
 8018ae6:	e7ef      	b.n	8018ac8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8018ae8:	d00f      	beq.n	8018b0a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8018aea:	1e5e      	subs	r6, r3, #1
 8018aec:	fb0c 0e06 	mla	lr, ip, r6, r0
 8018af0:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8018af4:	d543      	bpl.n	8018b7e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8018af6:	4698      	mov	r8, r3
 8018af8:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8018afc:	f1b8 0f00 	cmp.w	r8, #0
 8018b00:	dc71      	bgt.n	8018be6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8018b02:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018b06:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018b0a:	9b01      	ldr	r3, [sp, #4]
 8018b0c:	2b00      	cmp	r3, #0
 8018b0e:	f340 809d 	ble.w	8018c4c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8018b12:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018b16:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018b1a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8018b1e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018b20:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018b24:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018b28:	eeb0 6a62 	vmov.f32	s12, s5
 8018b2c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018b30:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018b34:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018b38:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8018b3c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018b40:	eeb0 6a43 	vmov.f32	s12, s6
 8018b44:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018b48:	ee12 2a90 	vmov	r2, s5
 8018b4c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018b50:	fb92 fcf3 	sdiv	ip, r2, r3
 8018b54:	ee13 2a10 	vmov	r2, s6
 8018b58:	fb92 f3f3 	sdiv	r3, r2, r3
 8018b5c:	9312      	str	r3, [sp, #72]	; 0x48
 8018b5e:	9b01      	ldr	r3, [sp, #4]
 8018b60:	9a03      	ldr	r2, [sp, #12]
 8018b62:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018b66:	3b01      	subs	r3, #1
 8018b68:	9301      	str	r3, [sp, #4]
 8018b6a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8018b6e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018b70:	eeb0 3a67 	vmov.f32	s6, s15
 8018b74:	bf08      	it	eq
 8018b76:	4613      	moveq	r3, r2
 8018b78:	eef0 2a47 	vmov.f32	s5, s14
 8018b7c:	e793      	b.n	8018aa6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8018b7e:	45ce      	cmp	lr, r9
 8018b80:	dab9      	bge.n	8018af6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8018b82:	9912      	ldr	r1, [sp, #72]	; 0x48
 8018b84:	fb01 2606 	mla	r6, r1, r6, r2
 8018b88:	1436      	asrs	r6, r6, #16
 8018b8a:	d4b4      	bmi.n	8018af6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8018b8c:	4546      	cmp	r6, r8
 8018b8e:	dab2      	bge.n	8018af6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8018b90:	4698      	mov	r8, r3
 8018b92:	46a2      	mov	sl, r4
 8018b94:	f1b8 0f00 	cmp.w	r8, #0
 8018b98:	ddb3      	ble.n	8018b02 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8018b9a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8018b9e:	9902      	ldr	r1, [sp, #8]
 8018ba0:	1416      	asrs	r6, r2, #16
 8018ba2:	fb09 1606 	mla	r6, r9, r6, r1
 8018ba6:	ea4f 4e20 	mov.w	lr, r0, asr #16
 8018baa:	492a      	ldr	r1, [pc, #168]	; (8018c54 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8018bac:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8018bb0:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8018bb4:	eb07 0b0e 	add.w	fp, r7, lr
 8018bb8:	4460      	add	r0, ip
 8018bba:	f89b 6001 	ldrb.w	r6, [fp, #1]
 8018bbe:	f89b 9002 	ldrb.w	r9, [fp, #2]
 8018bc2:	00f6      	lsls	r6, r6, #3
 8018bc4:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8018bc8:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8018bcc:	ea49 0606 	orr.w	r6, r9, r6
 8018bd0:	f817 900e 	ldrb.w	r9, [r7, lr]
 8018bd4:	9912      	ldr	r1, [sp, #72]	; 0x48
 8018bd6:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 8018bda:	f82a 6b02 	strh.w	r6, [sl], #2
 8018bde:	440a      	add	r2, r1
 8018be0:	f108 38ff 	add.w	r8, r8, #4294967295
 8018be4:	e7d6      	b.n	8018b94 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8018be6:	ea5f 4920 	movs.w	r9, r0, asr #16
 8018bea:	d429      	bmi.n	8018c40 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8018bec:	68ae      	ldr	r6, [r5, #8]
 8018bee:	454e      	cmp	r6, r9
 8018bf0:	dd26      	ble.n	8018c40 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8018bf2:	ea5f 4b22 	movs.w	fp, r2, asr #16
 8018bf6:	d423      	bmi.n	8018c40 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8018bf8:	68e9      	ldr	r1, [r5, #12]
 8018bfa:	4559      	cmp	r1, fp
 8018bfc:	dd20      	ble.n	8018c40 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8018bfe:	9902      	ldr	r1, [sp, #8]
 8018c00:	fa0f fe86 	sxth.w	lr, r6
 8018c04:	fb0b 1e0e 	mla	lr, fp, lr, r1
 8018c08:	f06f 0101 	mvn.w	r1, #1
 8018c0c:	f81e e009 	ldrb.w	lr, [lr, r9]
 8018c10:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8018c14:	eb07 060e 	add.w	r6, r7, lr
 8018c18:	fb01 f908 	mul.w	r9, r1, r8
 8018c1c:	f896 b002 	ldrb.w	fp, [r6, #2]
 8018c20:	7876      	ldrb	r6, [r6, #1]
 8018c22:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 8018c26:	00f6      	lsls	r6, r6, #3
 8018c28:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 8018c2c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8018c30:	ea4b 0606 	orr.w	r6, fp, r6
 8018c34:	f817 b00e 	ldrb.w	fp, [r7, lr]
 8018c38:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 8018c3c:	f82a 6009 	strh.w	r6, [sl, r9]
 8018c40:	9912      	ldr	r1, [sp, #72]	; 0x48
 8018c42:	4460      	add	r0, ip
 8018c44:	440a      	add	r2, r1
 8018c46:	f108 38ff 	add.w	r8, r8, #4294967295
 8018c4a:	e757      	b.n	8018afc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8018c4c:	b005      	add	sp, #20
 8018c4e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018c52:	bf00      	nop
 8018c54:	fffff800 	.word	0xfffff800

08018c58 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018c58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018c5c:	b087      	sub	sp, #28
 8018c5e:	468b      	mov	fp, r1
 8018c60:	9815      	ldr	r0, [sp, #84]	; 0x54
 8018c62:	9204      	str	r2, [sp, #16]
 8018c64:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8018c68:	9205      	str	r2, [sp, #20]
 8018c6a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8018c6e:	6841      	ldr	r1, [r0, #4]
 8018c70:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8018c74:	fb01 2404 	mla	r4, r1, r4, r2
 8018c78:	6802      	ldr	r2, [r0, #0]
 8018c7a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8018c7e:	f8dc 2000 	ldr.w	r2, [ip]
 8018c82:	9201      	str	r2, [sp, #4]
 8018c84:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8018c88:	3204      	adds	r2, #4
 8018c8a:	9202      	str	r2, [sp, #8]
 8018c8c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8018c90:	f1bb 0f00 	cmp.w	fp, #0
 8018c94:	dc03      	bgt.n	8018c9e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8018c96:	9a04      	ldr	r2, [sp, #16]
 8018c98:	2a00      	cmp	r2, #0
 8018c9a:	f340 8138 	ble.w	8018f0e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8018c9e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8018ca0:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8018ca4:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8018ca8:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8018cac:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8018cae:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8018cb2:	2b00      	cmp	r3, #0
 8018cb4:	dd0e      	ble.n	8018cd4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8018cb6:	1402      	asrs	r2, r0, #16
 8018cb8:	d405      	bmi.n	8018cc6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8018cba:	42ba      	cmp	r2, r7
 8018cbc:	da03      	bge.n	8018cc6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8018cbe:	140a      	asrs	r2, r1, #16
 8018cc0:	d401      	bmi.n	8018cc6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8018cc2:	42b2      	cmp	r2, r6
 8018cc4:	db07      	blt.n	8018cd6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8018cc6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8018cc8:	4410      	add	r0, r2
 8018cca:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8018ccc:	3b01      	subs	r3, #1
 8018cce:	4411      	add	r1, r2
 8018cd0:	3402      	adds	r4, #2
 8018cd2:	e7ee      	b.n	8018cb2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8018cd4:	d019      	beq.n	8018d0a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8018cd6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8018cd8:	1e5a      	subs	r2, r3, #1
 8018cda:	fb05 0502 	mla	r5, r5, r2, r0
 8018cde:	142d      	asrs	r5, r5, #16
 8018ce0:	d409      	bmi.n	8018cf6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8018ce2:	42bd      	cmp	r5, r7
 8018ce4:	da07      	bge.n	8018cf6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8018ce6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8018ce8:	fb05 1202 	mla	r2, r5, r2, r1
 8018cec:	1412      	asrs	r2, r2, #16
 8018cee:	d402      	bmi.n	8018cf6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8018cf0:	42b2      	cmp	r2, r6
 8018cf2:	f2c0 80ac 	blt.w	8018e4e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8018cf6:	f04f 0e00 	mov.w	lr, #0
 8018cfa:	eb03 020e 	add.w	r2, r3, lr
 8018cfe:	2a00      	cmp	r2, #0
 8018d00:	dc3e      	bgt.n	8018d80 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8018d02:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018d06:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018d0a:	f1bb 0f00 	cmp.w	fp, #0
 8018d0e:	f340 80fe 	ble.w	8018f0e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8018d12:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018d16:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018d1a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8018d1e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018d20:	f1bb 0b01 	subs.w	fp, fp, #1
 8018d24:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018d28:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018d2c:	eeb0 6a62 	vmov.f32	s12, s5
 8018d30:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018d34:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018d38:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018d3c:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8018d40:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018d44:	eeb0 6a43 	vmov.f32	s12, s6
 8018d48:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018d4c:	ee12 2a90 	vmov	r2, s5
 8018d50:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018d54:	fb92 f3f3 	sdiv	r3, r2, r3
 8018d58:	ee13 2a10 	vmov	r2, s6
 8018d5c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018d60:	9313      	str	r3, [sp, #76]	; 0x4c
 8018d62:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018d64:	fb92 f3f3 	sdiv	r3, r2, r3
 8018d68:	9a04      	ldr	r2, [sp, #16]
 8018d6a:	9314      	str	r3, [sp, #80]	; 0x50
 8018d6c:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8018d70:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018d72:	eeb0 3a67 	vmov.f32	s6, s15
 8018d76:	bf08      	it	eq
 8018d78:	4613      	moveq	r3, r2
 8018d7a:	eef0 2a47 	vmov.f32	s5, s14
 8018d7e:	e787      	b.n	8018c90 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8018d80:	1406      	asrs	r6, r0, #16
 8018d82:	d45d      	bmi.n	8018e40 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8018d84:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8018d88:	42b5      	cmp	r5, r6
 8018d8a:	dd59      	ble.n	8018e40 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8018d8c:	140f      	asrs	r7, r1, #16
 8018d8e:	d457      	bmi.n	8018e40 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8018d90:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8018d94:	42ba      	cmp	r2, r7
 8018d96:	dd53      	ble.n	8018e40 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8018d98:	9a01      	ldr	r2, [sp, #4]
 8018d9a:	b22d      	sxth	r5, r5
 8018d9c:	fb07 2505 	mla	r5, r7, r5, r2
 8018da0:	5daa      	ldrb	r2, [r5, r6]
 8018da2:	9d02      	ldr	r5, [sp, #8]
 8018da4:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8018da8:	0e2e      	lsrs	r6, r5, #24
 8018daa:	d049      	beq.n	8018e40 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8018dac:	f06f 0201 	mvn.w	r2, #1
 8018db0:	fb02 f20e 	mul.w	r2, r2, lr
 8018db4:	9203      	str	r2, [sp, #12]
 8018db6:	f834 8002 	ldrh.w	r8, [r4, r2]
 8018dba:	9a05      	ldr	r2, [sp, #20]
 8018dbc:	4356      	muls	r6, r2
 8018dbe:	1c72      	adds	r2, r6, #1
 8018dc0:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8018dc4:	1212      	asrs	r2, r2, #8
 8018dc6:	fa1f f982 	uxth.w	r9, r2
 8018dca:	ea4f 2728 	mov.w	r7, r8, asr #8
 8018dce:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8018dd2:	43d2      	mvns	r2, r2
 8018dd4:	b2d2      	uxtb	r2, r2
 8018dd6:	fb16 f609 	smulbb	r6, r6, r9
 8018dda:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018dde:	fb07 6702 	mla	r7, r7, r2, r6
 8018de2:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8018de6:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8018dea:	b2ed      	uxtb	r5, r5
 8018dec:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8018df0:	fa5f f888 	uxtb.w	r8, r8
 8018df4:	fb15 f509 	smulbb	r5, r5, r9
 8018df8:	fb08 5502 	mla	r5, r8, r2, r5
 8018dfc:	b2bf      	uxth	r7, r7
 8018dfe:	fb1a fa09 	smulbb	sl, sl, r9
 8018e02:	b2ad      	uxth	r5, r5
 8018e04:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8018e08:	fb06 a602 	mla	r6, r6, r2, sl
 8018e0c:	1c7a      	adds	r2, r7, #1
 8018e0e:	f105 0a01 	add.w	sl, r5, #1
 8018e12:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8018e16:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8018e1a:	b2b6      	uxth	r6, r6
 8018e1c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8018e20:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8018e24:	ea4a 0707 	orr.w	r7, sl, r7
 8018e28:	f106 0a01 	add.w	sl, r6, #1
 8018e2c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8018e30:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8018e34:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8018e38:	9a03      	ldr	r2, [sp, #12]
 8018e3a:	ea47 070a 	orr.w	r7, r7, sl
 8018e3e:	52a7      	strh	r7, [r4, r2]
 8018e40:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8018e42:	4410      	add	r0, r2
 8018e44:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8018e46:	f10e 3eff 	add.w	lr, lr, #4294967295
 8018e4a:	4411      	add	r1, r2
 8018e4c:	e755      	b.n	8018cfa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8018e4e:	f04f 0800 	mov.w	r8, #0
 8018e52:	eba3 0208 	sub.w	r2, r3, r8
 8018e56:	2a00      	cmp	r2, #0
 8018e58:	f77f af53 	ble.w	8018d02 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8018e5c:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 8018e60:	9f01      	ldr	r7, [sp, #4]
 8018e62:	140a      	asrs	r2, r1, #16
 8018e64:	1405      	asrs	r5, r0, #16
 8018e66:	fb06 7202 	mla	r2, r6, r2, r7
 8018e6a:	5d52      	ldrb	r2, [r2, r5]
 8018e6c:	9d02      	ldr	r5, [sp, #8]
 8018e6e:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8018e72:	0e2e      	lsrs	r6, r5, #24
 8018e74:	d044      	beq.n	8018f00 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8018e76:	9a05      	ldr	r2, [sp, #20]
 8018e78:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8018e7c:	4356      	muls	r6, r2
 8018e7e:	1c72      	adds	r2, r6, #1
 8018e80:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8018e84:	1212      	asrs	r2, r2, #8
 8018e86:	fa1f f982 	uxth.w	r9, r2
 8018e8a:	ea4f 272e 	mov.w	r7, lr, asr #8
 8018e8e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8018e92:	43d2      	mvns	r2, r2
 8018e94:	b2d2      	uxtb	r2, r2
 8018e96:	fb16 f609 	smulbb	r6, r6, r9
 8018e9a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018e9e:	fb07 6702 	mla	r7, r7, r2, r6
 8018ea2:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8018ea6:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8018eaa:	b2ed      	uxtb	r5, r5
 8018eac:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8018eb0:	fa5f fe8e 	uxtb.w	lr, lr
 8018eb4:	fb15 f509 	smulbb	r5, r5, r9
 8018eb8:	fb0e 5502 	mla	r5, lr, r2, r5
 8018ebc:	b2bf      	uxth	r7, r7
 8018ebe:	fb1a fa09 	smulbb	sl, sl, r9
 8018ec2:	b2ad      	uxth	r5, r5
 8018ec4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8018ec8:	fb06 a602 	mla	r6, r6, r2, sl
 8018ecc:	1c7a      	adds	r2, r7, #1
 8018ece:	f105 0a01 	add.w	sl, r5, #1
 8018ed2:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8018ed6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8018eda:	b2b6      	uxth	r6, r6
 8018edc:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8018ee0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8018ee4:	ea4a 0707 	orr.w	r7, sl, r7
 8018ee8:	f106 0a01 	add.w	sl, r6, #1
 8018eec:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8018ef0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8018ef4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8018ef8:	ea47 070a 	orr.w	r7, r7, sl
 8018efc:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8018f00:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8018f02:	4410      	add	r0, r2
 8018f04:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8018f06:	f108 0801 	add.w	r8, r8, #1
 8018f0a:	4411      	add	r1, r2
 8018f0c:	e7a1      	b.n	8018e52 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8018f0e:	b007      	add	sp, #28
 8018f10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018f14 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018f14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018f18:	b085      	sub	sp, #20
 8018f1a:	468b      	mov	fp, r1
 8018f1c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018f1e:	9203      	str	r2, [sp, #12]
 8018f20:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8018f24:	6841      	ldr	r1, [r0, #4]
 8018f26:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8018f2a:	fb01 2404 	mla	r4, r1, r4, r2
 8018f2e:	6802      	ldr	r2, [r0, #0]
 8018f30:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8018f34:	f8de 2000 	ldr.w	r2, [lr]
 8018f38:	9200      	str	r2, [sp, #0]
 8018f3a:	f8de 2004 	ldr.w	r2, [lr, #4]
 8018f3e:	3204      	adds	r2, #4
 8018f40:	9201      	str	r2, [sp, #4]
 8018f42:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8018f46:	f1bb 0f00 	cmp.w	fp, #0
 8018f4a:	dc03      	bgt.n	8018f54 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8018f4c:	9a03      	ldr	r2, [sp, #12]
 8018f4e:	2a00      	cmp	r2, #0
 8018f50:	f340 8153 	ble.w	80191fa <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8018f54:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8018f56:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8018f5a:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8018f5e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8018f62:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8018f64:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8018f68:	2b00      	cmp	r3, #0
 8018f6a:	dd0e      	ble.n	8018f8a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8018f6c:	1408      	asrs	r0, r1, #16
 8018f6e:	d405      	bmi.n	8018f7c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8018f70:	42b8      	cmp	r0, r7
 8018f72:	da03      	bge.n	8018f7c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8018f74:	1410      	asrs	r0, r2, #16
 8018f76:	d401      	bmi.n	8018f7c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8018f78:	42b0      	cmp	r0, r6
 8018f7a:	db07      	blt.n	8018f8c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8018f7c:	9811      	ldr	r0, [sp, #68]	; 0x44
 8018f7e:	4401      	add	r1, r0
 8018f80:	9812      	ldr	r0, [sp, #72]	; 0x48
 8018f82:	3b01      	subs	r3, #1
 8018f84:	4402      	add	r2, r0
 8018f86:	3402      	adds	r4, #2
 8018f88:	e7ee      	b.n	8018f68 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8018f8a:	d017      	beq.n	8018fbc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8018f8c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8018f8e:	1e58      	subs	r0, r3, #1
 8018f90:	fb05 1500 	mla	r5, r5, r0, r1
 8018f94:	142d      	asrs	r5, r5, #16
 8018f96:	d409      	bmi.n	8018fac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8018f98:	42bd      	cmp	r5, r7
 8018f9a:	da07      	bge.n	8018fac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8018f9c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8018f9e:	fb05 2000 	mla	r0, r5, r0, r2
 8018fa2:	1400      	asrs	r0, r0, #16
 8018fa4:	d402      	bmi.n	8018fac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8018fa6:	42b0      	cmp	r0, r6
 8018fa8:	f2c0 80bc 	blt.w	8019124 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8018fac:	2600      	movs	r6, #0
 8018fae:	1998      	adds	r0, r3, r6
 8018fb0:	2800      	cmp	r0, #0
 8018fb2:	dc3e      	bgt.n	8019032 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8018fb4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018fb8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018fbc:	f1bb 0f00 	cmp.w	fp, #0
 8018fc0:	f340 811b 	ble.w	80191fa <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8018fc4:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018fc8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018fcc:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8018fd0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018fd2:	f1bb 0b01 	subs.w	fp, fp, #1
 8018fd6:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018fda:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018fde:	eeb0 6a62 	vmov.f32	s12, s5
 8018fe2:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018fe6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018fea:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018fee:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8018ff2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018ff6:	eeb0 6a43 	vmov.f32	s12, s6
 8018ffa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018ffe:	ee12 2a90 	vmov	r2, s5
 8019002:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019006:	fb92 f3f3 	sdiv	r3, r2, r3
 801900a:	ee13 2a10 	vmov	r2, s6
 801900e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019012:	9311      	str	r3, [sp, #68]	; 0x44
 8019014:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019016:	fb92 f3f3 	sdiv	r3, r2, r3
 801901a:	9a03      	ldr	r2, [sp, #12]
 801901c:	9312      	str	r3, [sp, #72]	; 0x48
 801901e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8019022:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019024:	eeb0 3a67 	vmov.f32	s6, s15
 8019028:	bf08      	it	eq
 801902a:	4613      	moveq	r3, r2
 801902c:	eef0 2a47 	vmov.f32	s5, s14
 8019030:	e789      	b.n	8018f46 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8019032:	140f      	asrs	r7, r1, #16
 8019034:	d426      	bmi.n	8019084 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8019036:	f8de 5008 	ldr.w	r5, [lr, #8]
 801903a:	42bd      	cmp	r5, r7
 801903c:	dd22      	ble.n	8019084 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801903e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8019042:	d41f      	bmi.n	8019084 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8019044:	f8de 000c 	ldr.w	r0, [lr, #12]
 8019048:	4560      	cmp	r0, ip
 801904a:	dd1b      	ble.n	8019084 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801904c:	9800      	ldr	r0, [sp, #0]
 801904e:	b22d      	sxth	r5, r5
 8019050:	fb0c 0505 	mla	r5, ip, r5, r0
 8019054:	5de8      	ldrb	r0, [r5, r7]
 8019056:	9d01      	ldr	r5, [sp, #4]
 8019058:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 801905c:	0e07      	lsrs	r7, r0, #24
 801905e:	2fff      	cmp	r7, #255	; 0xff
 8019060:	d116      	bne.n	8019090 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8019062:	f06f 0501 	mvn.w	r5, #1
 8019066:	fb05 f706 	mul.w	r7, r5, r6
 801906a:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801906e:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8019072:	0945      	lsrs	r5, r0, #5
 8019074:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8019078:	ea4c 0505 	orr.w	r5, ip, r5
 801907c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8019080:	4305      	orrs	r5, r0
 8019082:	53e5      	strh	r5, [r4, r7]
 8019084:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019086:	4401      	add	r1, r0
 8019088:	9812      	ldr	r0, [sp, #72]	; 0x48
 801908a:	3e01      	subs	r6, #1
 801908c:	4402      	add	r2, r0
 801908e:	e78e      	b.n	8018fae <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8019090:	b2fd      	uxtb	r5, r7
 8019092:	2f00      	cmp	r7, #0
 8019094:	d0f6      	beq.n	8019084 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8019096:	f06f 0701 	mvn.w	r7, #1
 801909a:	4377      	muls	r7, r6
 801909c:	fa1f f985 	uxth.w	r9, r5
 80190a0:	f834 8007 	ldrh.w	r8, [r4, r7]
 80190a4:	9702      	str	r7, [sp, #8]
 80190a6:	ea4f 2c28 	mov.w	ip, r8, asr #8
 80190aa:	f3c0 4707 	ubfx	r7, r0, #16, #8
 80190ae:	43ed      	mvns	r5, r5
 80190b0:	b2ed      	uxtb	r5, r5
 80190b2:	fb17 f709 	smulbb	r7, r7, r9
 80190b6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80190ba:	fb0c 7c05 	mla	ip, ip, r5, r7
 80190be:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 80190c2:	ea4f 07e8 	mov.w	r7, r8, asr #3
 80190c6:	b2c0      	uxtb	r0, r0
 80190c8:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80190cc:	fa5f f888 	uxtb.w	r8, r8
 80190d0:	fb10 f009 	smulbb	r0, r0, r9
 80190d4:	fb08 0005 	mla	r0, r8, r5, r0
 80190d8:	b280      	uxth	r0, r0
 80190da:	fa1f fc8c 	uxth.w	ip, ip
 80190de:	fb1a fa09 	smulbb	sl, sl, r9
 80190e2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80190e6:	fb07 a705 	mla	r7, r7, r5, sl
 80190ea:	f100 0a01 	add.w	sl, r0, #1
 80190ee:	f10c 0501 	add.w	r5, ip, #1
 80190f2:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 80190f6:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80190fa:	b2bf      	uxth	r7, r7
 80190fc:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019100:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019104:	ea4a 0c0c 	orr.w	ip, sl, ip
 8019108:	f107 0a01 	add.w	sl, r7, #1
 801910c:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8019110:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019114:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019118:	9802      	ldr	r0, [sp, #8]
 801911a:	ea4c 0c0a 	orr.w	ip, ip, sl
 801911e:	f824 c000 	strh.w	ip, [r4, r0]
 8019122:	e7af      	b.n	8019084 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8019124:	f04f 0800 	mov.w	r8, #0
 8019128:	eba3 0008 	sub.w	r0, r3, r8
 801912c:	2800      	cmp	r0, #0
 801912e:	f77f af41 	ble.w	8018fb4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8019132:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8019136:	9f00      	ldr	r7, [sp, #0]
 8019138:	1410      	asrs	r0, r2, #16
 801913a:	140d      	asrs	r5, r1, #16
 801913c:	fb06 7000 	mla	r0, r6, r0, r7
 8019140:	5d40      	ldrb	r0, [r0, r5]
 8019142:	9d01      	ldr	r5, [sp, #4]
 8019144:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8019148:	0e2e      	lsrs	r6, r5, #24
 801914a:	2eff      	cmp	r6, #255	; 0xff
 801914c:	d112      	bne.n	8019174 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 801914e:	482c      	ldr	r0, [pc, #176]	; (8019200 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8019150:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8019154:	0968      	lsrs	r0, r5, #5
 8019156:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801915a:	4330      	orrs	r0, r6
 801915c:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8019160:	4328      	orrs	r0, r5
 8019162:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 8019166:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019168:	4401      	add	r1, r0
 801916a:	9812      	ldr	r0, [sp, #72]	; 0x48
 801916c:	f108 0801 	add.w	r8, r8, #1
 8019170:	4402      	add	r2, r0
 8019172:	e7d9      	b.n	8019128 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019174:	b2f0      	uxtb	r0, r6
 8019176:	2e00      	cmp	r6, #0
 8019178:	d0f5      	beq.n	8019166 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801917a:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 801917e:	fa1f f980 	uxth.w	r9, r0
 8019182:	ea4f 272c 	mov.w	r7, ip, asr #8
 8019186:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801918a:	43c0      	mvns	r0, r0
 801918c:	b2c0      	uxtb	r0, r0
 801918e:	fb16 f609 	smulbb	r6, r6, r9
 8019192:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019196:	fb07 6700 	mla	r7, r7, r0, r6
 801919a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801919e:	ea4f 06ec 	mov.w	r6, ip, asr #3
 80191a2:	b2ed      	uxtb	r5, r5
 80191a4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80191a8:	fa5f fc8c 	uxtb.w	ip, ip
 80191ac:	fb15 f509 	smulbb	r5, r5, r9
 80191b0:	fb0c 5500 	mla	r5, ip, r0, r5
 80191b4:	b2bf      	uxth	r7, r7
 80191b6:	fb1a fa09 	smulbb	sl, sl, r9
 80191ba:	b2ad      	uxth	r5, r5
 80191bc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80191c0:	fb06 a600 	mla	r6, r6, r0, sl
 80191c4:	1c78      	adds	r0, r7, #1
 80191c6:	f105 0a01 	add.w	sl, r5, #1
 80191ca:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 80191ce:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80191d2:	b2b6      	uxth	r6, r6
 80191d4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80191d8:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80191dc:	ea4a 0707 	orr.w	r7, sl, r7
 80191e0:	f106 0a01 	add.w	sl, r6, #1
 80191e4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80191e8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80191ec:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80191f0:	ea47 070a 	orr.w	r7, r7, sl
 80191f4:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 80191f8:	e7b5      	b.n	8019166 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80191fa:	b005      	add	sp, #20
 80191fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019200:	fffff800 	.word	0xfffff800

08019204 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019204:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019208:	b087      	sub	sp, #28
 801920a:	468b      	mov	fp, r1
 801920c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801920e:	9204      	str	r2, [sp, #16]
 8019210:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8019214:	9205      	str	r2, [sp, #20]
 8019216:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801921a:	6861      	ldr	r1, [r4, #4]
 801921c:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8019220:	fb01 2000 	mla	r0, r1, r0, r2
 8019224:	6822      	ldr	r2, [r4, #0]
 8019226:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801922a:	f8de 2000 	ldr.w	r2, [lr]
 801922e:	9201      	str	r2, [sp, #4]
 8019230:	f8de 2004 	ldr.w	r2, [lr, #4]
 8019234:	9202      	str	r2, [sp, #8]
 8019236:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801923a:	f1bb 0f00 	cmp.w	fp, #0
 801923e:	dc03      	bgt.n	8019248 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8019240:	9a04      	ldr	r2, [sp, #16]
 8019242:	2a00      	cmp	r2, #0
 8019244:	f340 8142 	ble.w	80194cc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8019248:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801924a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801924e:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8019252:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019256:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8019258:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801925c:	2b00      	cmp	r3, #0
 801925e:	dd0e      	ble.n	801927e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019260:	140c      	asrs	r4, r1, #16
 8019262:	d405      	bmi.n	8019270 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8019264:	42bc      	cmp	r4, r7
 8019266:	da03      	bge.n	8019270 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8019268:	1414      	asrs	r4, r2, #16
 801926a:	d401      	bmi.n	8019270 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801926c:	42b4      	cmp	r4, r6
 801926e:	db07      	blt.n	8019280 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8019270:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019272:	4421      	add	r1, r4
 8019274:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019276:	3b01      	subs	r3, #1
 8019278:	4422      	add	r2, r4
 801927a:	3002      	adds	r0, #2
 801927c:	e7ee      	b.n	801925c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801927e:	d019      	beq.n	80192b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8019280:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019282:	1e5c      	subs	r4, r3, #1
 8019284:	fb05 1504 	mla	r5, r5, r4, r1
 8019288:	142d      	asrs	r5, r5, #16
 801928a:	d409      	bmi.n	80192a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801928c:	42bd      	cmp	r5, r7
 801928e:	da07      	bge.n	80192a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8019290:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019292:	fb05 2404 	mla	r4, r5, r4, r2
 8019296:	1424      	asrs	r4, r4, #16
 8019298:	d402      	bmi.n	80192a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801929a:	42b4      	cmp	r4, r6
 801929c:	f2c0 80b1 	blt.w	8019402 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 80192a0:	f04f 0800 	mov.w	r8, #0
 80192a4:	eb03 0408 	add.w	r4, r3, r8
 80192a8:	2c00      	cmp	r4, #0
 80192aa:	dc3e      	bgt.n	801932a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80192ac:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80192b0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80192b4:	f1bb 0f00 	cmp.w	fp, #0
 80192b8:	f340 8108 	ble.w	80194cc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 80192bc:	ee30 0a04 	vadd.f32	s0, s0, s8
 80192c0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80192c4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80192c8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80192ca:	f1bb 0b01 	subs.w	fp, fp, #1
 80192ce:	ee31 1a05 	vadd.f32	s2, s2, s10
 80192d2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80192d6:	eeb0 6a62 	vmov.f32	s12, s5
 80192da:	ee61 7a27 	vmul.f32	s15, s2, s15
 80192de:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80192e2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80192e6:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80192ea:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80192ee:	eeb0 6a43 	vmov.f32	s12, s6
 80192f2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80192f6:	ee12 2a90 	vmov	r2, s5
 80192fa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80192fe:	fb92 f3f3 	sdiv	r3, r2, r3
 8019302:	ee13 2a10 	vmov	r2, s6
 8019306:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801930a:	9313      	str	r3, [sp, #76]	; 0x4c
 801930c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801930e:	fb92 f3f3 	sdiv	r3, r2, r3
 8019312:	9a04      	ldr	r2, [sp, #16]
 8019314:	9314      	str	r3, [sp, #80]	; 0x50
 8019316:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801931a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801931c:	eeb0 3a67 	vmov.f32	s6, s15
 8019320:	bf08      	it	eq
 8019322:	4613      	moveq	r3, r2
 8019324:	eef0 2a47 	vmov.f32	s5, s14
 8019328:	e787      	b.n	801923a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 801932a:	140e      	asrs	r6, r1, #16
 801932c:	d462      	bmi.n	80193f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801932e:	f8de 5008 	ldr.w	r5, [lr, #8]
 8019332:	42b5      	cmp	r5, r6
 8019334:	dd5e      	ble.n	80193f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8019336:	1417      	asrs	r7, r2, #16
 8019338:	d45c      	bmi.n	80193f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801933a:	f8de 400c 	ldr.w	r4, [lr, #12]
 801933e:	42bc      	cmp	r4, r7
 8019340:	dd58      	ble.n	80193f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8019342:	b22d      	sxth	r5, r5
 8019344:	fb07 6505 	mla	r5, r7, r5, r6
 8019348:	9c02      	ldr	r4, [sp, #8]
 801934a:	5d66      	ldrb	r6, [r4, r5]
 801934c:	2e00      	cmp	r6, #0
 801934e:	d051      	beq.n	80193f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8019350:	9c01      	ldr	r4, [sp, #4]
 8019352:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 8019356:	f06f 0401 	mvn.w	r4, #1
 801935a:	fb04 f408 	mul.w	r4, r4, r8
 801935e:	9403      	str	r4, [sp, #12]
 8019360:	5b05      	ldrh	r5, [r0, r4]
 8019362:	9c05      	ldr	r4, [sp, #20]
 8019364:	4366      	muls	r6, r4
 8019366:	1c74      	adds	r4, r6, #1
 8019368:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801936c:	1224      	asrs	r4, r4, #8
 801936e:	b2a7      	uxth	r7, r4
 8019370:	122e      	asrs	r6, r5, #8
 8019372:	43e4      	mvns	r4, r4
 8019374:	b2e4      	uxtb	r4, r4
 8019376:	ea4f 2c29 	mov.w	ip, r9, asr #8
 801937a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801937e:	fb16 f604 	smulbb	r6, r6, r4
 8019382:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8019386:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801938a:	00ed      	lsls	r5, r5, #3
 801938c:	fb0c 6c07 	mla	ip, ip, r7, r6
 8019390:	b2ed      	uxtb	r5, r5
 8019392:	ea4f 06e9 	mov.w	r6, r9, asr #3
 8019396:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801939a:	fb15 f504 	smulbb	r5, r5, r4
 801939e:	fa5f f989 	uxtb.w	r9, r9
 80193a2:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80193a6:	fb09 5507 	mla	r5, r9, r7, r5
 80193aa:	fb1a fa04 	smulbb	sl, sl, r4
 80193ae:	fa1f fc8c 	uxth.w	ip, ip
 80193b2:	b2ad      	uxth	r5, r5
 80193b4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80193b8:	fb06 a607 	mla	r6, r6, r7, sl
 80193bc:	f10c 0401 	add.w	r4, ip, #1
 80193c0:	f105 0a01 	add.w	sl, r5, #1
 80193c4:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 80193c8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80193cc:	b2b6      	uxth	r6, r6
 80193ce:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80193d2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80193d6:	ea4a 0c0c 	orr.w	ip, sl, ip
 80193da:	f106 0a01 	add.w	sl, r6, #1
 80193de:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80193e2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80193e6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80193ea:	9c03      	ldr	r4, [sp, #12]
 80193ec:	ea4c 0c0a 	orr.w	ip, ip, sl
 80193f0:	f820 c004 	strh.w	ip, [r0, r4]
 80193f4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80193f6:	4421      	add	r1, r4
 80193f8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80193fa:	f108 38ff 	add.w	r8, r8, #4294967295
 80193fe:	4422      	add	r2, r4
 8019400:	e750      	b.n	80192a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8019402:	f04f 0900 	mov.w	r9, #0
 8019406:	eba3 0409 	sub.w	r4, r3, r9
 801940a:	2c00      	cmp	r4, #0
 801940c:	f77f af4e 	ble.w	80192ac <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8019410:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8019414:	140d      	asrs	r5, r1, #16
 8019416:	1414      	asrs	r4, r2, #16
 8019418:	fb06 5404 	mla	r4, r6, r4, r5
 801941c:	9d02      	ldr	r5, [sp, #8]
 801941e:	5d2e      	ldrb	r6, [r5, r4]
 8019420:	2e00      	cmp	r6, #0
 8019422:	d04c      	beq.n	80194be <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8019424:	9d01      	ldr	r5, [sp, #4]
 8019426:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 801942a:	9c05      	ldr	r4, [sp, #20]
 801942c:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8019430:	4366      	muls	r6, r4
 8019432:	1c74      	adds	r4, r6, #1
 8019434:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8019438:	1224      	asrs	r4, r4, #8
 801943a:	b2a7      	uxth	r7, r4
 801943c:	122e      	asrs	r6, r5, #8
 801943e:	43e4      	mvns	r4, r4
 8019440:	b2e4      	uxtb	r4, r4
 8019442:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8019446:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801944a:	fb16 f604 	smulbb	r6, r6, r4
 801944e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8019452:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019456:	00ed      	lsls	r5, r5, #3
 8019458:	fb0c 6c07 	mla	ip, ip, r7, r6
 801945c:	b2ed      	uxtb	r5, r5
 801945e:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8019462:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8019466:	fb15 f504 	smulbb	r5, r5, r4
 801946a:	fa5f f888 	uxtb.w	r8, r8
 801946e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8019472:	fb08 5507 	mla	r5, r8, r7, r5
 8019476:	fb1a fa04 	smulbb	sl, sl, r4
 801947a:	fa1f fc8c 	uxth.w	ip, ip
 801947e:	b2ad      	uxth	r5, r5
 8019480:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019484:	fb06 a607 	mla	r6, r6, r7, sl
 8019488:	f10c 0401 	add.w	r4, ip, #1
 801948c:	f105 0a01 	add.w	sl, r5, #1
 8019490:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8019494:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019498:	b2b6      	uxth	r6, r6
 801949a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801949e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80194a2:	ea4a 0c0c 	orr.w	ip, sl, ip
 80194a6:	f106 0a01 	add.w	sl, r6, #1
 80194aa:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80194ae:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80194b2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80194b6:	ea4c 0c0a 	orr.w	ip, ip, sl
 80194ba:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 80194be:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80194c0:	4421      	add	r1, r4
 80194c2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80194c4:	f109 0901 	add.w	r9, r9, #1
 80194c8:	4422      	add	r2, r4
 80194ca:	e79c      	b.n	8019406 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 80194cc:	b007      	add	sp, #28
 80194ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080194d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80194d2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80194d6:	b085      	sub	sp, #20
 80194d8:	468b      	mov	fp, r1
 80194da:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80194dc:	9203      	str	r2, [sp, #12]
 80194de:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 80194e2:	6861      	ldr	r1, [r4, #4]
 80194e4:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 80194e8:	fb01 2000 	mla	r0, r1, r0, r2
 80194ec:	6822      	ldr	r2, [r4, #0]
 80194ee:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80194f2:	f8d8 2000 	ldr.w	r2, [r8]
 80194f6:	9200      	str	r2, [sp, #0]
 80194f8:	f8d8 2004 	ldr.w	r2, [r8, #4]
 80194fc:	9201      	str	r2, [sp, #4]
 80194fe:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019502:	f1bb 0f00 	cmp.w	fp, #0
 8019506:	dc03      	bgt.n	8019510 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8019508:	9a03      	ldr	r2, [sp, #12]
 801950a:	2a00      	cmp	r2, #0
 801950c:	f340 8146 	ble.w	801979c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8019510:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019512:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8019516:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801951a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801951e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019520:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019524:	2b00      	cmp	r3, #0
 8019526:	dd0e      	ble.n	8019546 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8019528:	140c      	asrs	r4, r1, #16
 801952a:	d405      	bmi.n	8019538 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801952c:	42bc      	cmp	r4, r7
 801952e:	da03      	bge.n	8019538 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019530:	1414      	asrs	r4, r2, #16
 8019532:	d401      	bmi.n	8019538 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019534:	42b4      	cmp	r4, r6
 8019536:	db07      	blt.n	8019548 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019538:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801953a:	4421      	add	r1, r4
 801953c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801953e:	3b01      	subs	r3, #1
 8019540:	4422      	add	r2, r4
 8019542:	3002      	adds	r0, #2
 8019544:	e7ee      	b.n	8019524 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8019546:	d017      	beq.n	8019578 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8019548:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801954a:	1e5c      	subs	r4, r3, #1
 801954c:	fb05 1504 	mla	r5, r5, r4, r1
 8019550:	142d      	asrs	r5, r5, #16
 8019552:	d409      	bmi.n	8019568 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8019554:	42bd      	cmp	r5, r7
 8019556:	da07      	bge.n	8019568 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8019558:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801955a:	fb05 2404 	mla	r4, r5, r4, r2
 801955e:	1424      	asrs	r4, r4, #16
 8019560:	d402      	bmi.n	8019568 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8019562:	42b4      	cmp	r4, r6
 8019564:	f2c0 80b3 	blt.w	80196ce <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8019568:	2600      	movs	r6, #0
 801956a:	199c      	adds	r4, r3, r6
 801956c:	2c00      	cmp	r4, #0
 801956e:	dc3e      	bgt.n	80195ee <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8019570:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019574:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8019578:	f1bb 0f00 	cmp.w	fp, #0
 801957c:	f340 810e 	ble.w	801979c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8019580:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019584:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019588:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801958c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801958e:	f1bb 0b01 	subs.w	fp, fp, #1
 8019592:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019596:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801959a:	eeb0 6a62 	vmov.f32	s12, s5
 801959e:	ee61 7a27 	vmul.f32	s15, s2, s15
 80195a2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80195a6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80195aa:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80195ae:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80195b2:	eeb0 6a43 	vmov.f32	s12, s6
 80195b6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80195ba:	ee12 2a90 	vmov	r2, s5
 80195be:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80195c2:	fb92 f3f3 	sdiv	r3, r2, r3
 80195c6:	ee13 2a10 	vmov	r2, s6
 80195ca:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80195ce:	9311      	str	r3, [sp, #68]	; 0x44
 80195d0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80195d2:	fb92 f3f3 	sdiv	r3, r2, r3
 80195d6:	9a03      	ldr	r2, [sp, #12]
 80195d8:	9312      	str	r3, [sp, #72]	; 0x48
 80195da:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80195de:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80195e0:	eeb0 3a67 	vmov.f32	s6, s15
 80195e4:	bf08      	it	eq
 80195e6:	4613      	moveq	r3, r2
 80195e8:	eef0 2a47 	vmov.f32	s5, s14
 80195ec:	e789      	b.n	8019502 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80195ee:	140f      	asrs	r7, r1, #16
 80195f0:	d418      	bmi.n	8019624 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80195f2:	f8d8 5008 	ldr.w	r5, [r8, #8]
 80195f6:	42bd      	cmp	r5, r7
 80195f8:	dd14      	ble.n	8019624 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80195fa:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80195fe:	d411      	bmi.n	8019624 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019600:	f8d8 400c 	ldr.w	r4, [r8, #12]
 8019604:	4564      	cmp	r4, ip
 8019606:	dd0d      	ble.n	8019624 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019608:	b22d      	sxth	r5, r5
 801960a:	fb0c 7505 	mla	r5, ip, r5, r7
 801960e:	9c01      	ldr	r4, [sp, #4]
 8019610:	5d64      	ldrb	r4, [r4, r5]
 8019612:	2cff      	cmp	r4, #255	; 0xff
 8019614:	d10c      	bne.n	8019630 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8019616:	9c00      	ldr	r4, [sp, #0]
 8019618:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 801961c:	f06f 0401 	mvn.w	r4, #1
 8019620:	4374      	muls	r4, r6
 8019622:	5305      	strh	r5, [r0, r4]
 8019624:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8019626:	4421      	add	r1, r4
 8019628:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801962a:	3e01      	subs	r6, #1
 801962c:	4422      	add	r2, r4
 801962e:	e79c      	b.n	801956a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019630:	2c00      	cmp	r4, #0
 8019632:	d0f7      	beq.n	8019624 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019634:	9f00      	ldr	r7, [sp, #0]
 8019636:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 801963a:	f06f 0501 	mvn.w	r5, #1
 801963e:	4375      	muls	r5, r6
 8019640:	9502      	str	r5, [sp, #8]
 8019642:	5b45      	ldrh	r5, [r0, r5]
 8019644:	fa1f fc84 	uxth.w	ip, r4
 8019648:	122f      	asrs	r7, r5, #8
 801964a:	43e4      	mvns	r4, r4
 801964c:	b2e4      	uxtb	r4, r4
 801964e:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8019652:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019656:	fb17 f704 	smulbb	r7, r7, r4
 801965a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801965e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8019662:	00ed      	lsls	r5, r5, #3
 8019664:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8019668:	b2ed      	uxtb	r5, r5
 801966a:	ea4f 07e9 	mov.w	r7, r9, asr #3
 801966e:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8019672:	fb15 f504 	smulbb	r5, r5, r4
 8019676:	fa5f f989 	uxtb.w	r9, r9
 801967a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801967e:	fb09 550c 	mla	r5, r9, ip, r5
 8019682:	fb1a fa04 	smulbb	sl, sl, r4
 8019686:	fa1f fe8e 	uxth.w	lr, lr
 801968a:	b2ad      	uxth	r5, r5
 801968c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019690:	fb07 a70c 	mla	r7, r7, ip, sl
 8019694:	f10e 0401 	add.w	r4, lr, #1
 8019698:	f105 0a01 	add.w	sl, r5, #1
 801969c:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 80196a0:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80196a4:	b2bf      	uxth	r7, r7
 80196a6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80196aa:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 80196ae:	ea4a 0e0e 	orr.w	lr, sl, lr
 80196b2:	f107 0a01 	add.w	sl, r7, #1
 80196b6:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80196ba:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80196be:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80196c2:	9c02      	ldr	r4, [sp, #8]
 80196c4:	ea4e 0e0a 	orr.w	lr, lr, sl
 80196c8:	f820 e004 	strh.w	lr, [r0, r4]
 80196cc:	e7aa      	b.n	8019624 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80196ce:	f04f 0900 	mov.w	r9, #0
 80196d2:	eba3 0409 	sub.w	r4, r3, r9
 80196d6:	2c00      	cmp	r4, #0
 80196d8:	f77f af4a 	ble.w	8019570 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80196dc:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 80196e0:	1414      	asrs	r4, r2, #16
 80196e2:	140d      	asrs	r5, r1, #16
 80196e4:	fb06 5504 	mla	r5, r6, r4, r5
 80196e8:	9c01      	ldr	r4, [sp, #4]
 80196ea:	5d64      	ldrb	r4, [r4, r5]
 80196ec:	2cff      	cmp	r4, #255	; 0xff
 80196ee:	d10b      	bne.n	8019708 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 80196f0:	9c00      	ldr	r4, [sp, #0]
 80196f2:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 80196f6:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 80196fa:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80196fc:	4421      	add	r1, r4
 80196fe:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8019700:	f109 0901 	add.w	r9, r9, #1
 8019704:	4422      	add	r2, r4
 8019706:	e7e4      	b.n	80196d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8019708:	2c00      	cmp	r4, #0
 801970a:	d0f6      	beq.n	80196fa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801970c:	9e00      	ldr	r6, [sp, #0]
 801970e:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 8019712:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8019716:	b2a7      	uxth	r7, r4
 8019718:	122e      	asrs	r6, r5, #8
 801971a:	43e4      	mvns	r4, r4
 801971c:	b2e4      	uxtb	r4, r4
 801971e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8019722:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8019726:	fb16 f604 	smulbb	r6, r6, r4
 801972a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801972e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019732:	00ed      	lsls	r5, r5, #3
 8019734:	fb0c 6c07 	mla	ip, ip, r7, r6
 8019738:	b2ed      	uxtb	r5, r5
 801973a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801973e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019742:	fb15 f504 	smulbb	r5, r5, r4
 8019746:	fa5f fe8e 	uxtb.w	lr, lr
 801974a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801974e:	fb0e 5507 	mla	r5, lr, r7, r5
 8019752:	fb1a fa04 	smulbb	sl, sl, r4
 8019756:	fa1f fc8c 	uxth.w	ip, ip
 801975a:	b2ad      	uxth	r5, r5
 801975c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019760:	fb06 a607 	mla	r6, r6, r7, sl
 8019764:	f10c 0401 	add.w	r4, ip, #1
 8019768:	f105 0a01 	add.w	sl, r5, #1
 801976c:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8019770:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019774:	b2b6      	uxth	r6, r6
 8019776:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801977a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801977e:	ea4a 0c0c 	orr.w	ip, sl, ip
 8019782:	f106 0a01 	add.w	sl, r6, #1
 8019786:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801978a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801978e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019792:	ea4c 0c0a 	orr.w	ip, ip, sl
 8019796:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801979a:	e7ae      	b.n	80196fa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801979c:	b005      	add	sp, #20
 801979e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080197a2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80197a2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80197a6:	b085      	sub	sp, #20
 80197a8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80197aa:	9203      	str	r2, [sp, #12]
 80197ac:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 80197b0:	9201      	str	r2, [sp, #4]
 80197b2:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80197b6:	9100      	str	r1, [sp, #0]
 80197b8:	6841      	ldr	r1, [r0, #4]
 80197ba:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 80197be:	fb01 2404 	mla	r4, r1, r4, r2
 80197c2:	6802      	ldr	r2, [r0, #0]
 80197c4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80197c8:	f8de 2000 	ldr.w	r2, [lr]
 80197cc:	9202      	str	r2, [sp, #8]
 80197ce:	9a01      	ldr	r2, [sp, #4]
 80197d0:	43d6      	mvns	r6, r2
 80197d2:	b2f6      	uxtb	r6, r6
 80197d4:	9a00      	ldr	r2, [sp, #0]
 80197d6:	2a00      	cmp	r2, #0
 80197d8:	dc03      	bgt.n	80197e2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 80197da:	9a03      	ldr	r2, [sp, #12]
 80197dc:	2a00      	cmp	r2, #0
 80197de:	f340 8124 	ble.w	8019a2a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 80197e2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80197e4:	f9be c008 	ldrsh.w	ip, [lr, #8]
 80197e8:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 80197ec:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80197f0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80197f2:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80197f6:	2b00      	cmp	r3, #0
 80197f8:	dd0e      	ble.n	8019818 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80197fa:	1408      	asrs	r0, r1, #16
 80197fc:	d405      	bmi.n	801980a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80197fe:	4560      	cmp	r0, ip
 8019800:	da03      	bge.n	801980a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019802:	1410      	asrs	r0, r2, #16
 8019804:	d401      	bmi.n	801980a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019806:	42b8      	cmp	r0, r7
 8019808:	db07      	blt.n	801981a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801980a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801980c:	4401      	add	r1, r0
 801980e:	9812      	ldr	r0, [sp, #72]	; 0x48
 8019810:	3b01      	subs	r3, #1
 8019812:	4402      	add	r2, r0
 8019814:	3402      	adds	r4, #2
 8019816:	e7ee      	b.n	80197f6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8019818:	d06e      	beq.n	80198f8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801981a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801981c:	1e58      	subs	r0, r3, #1
 801981e:	fb05 1500 	mla	r5, r5, r0, r1
 8019822:	142d      	asrs	r5, r5, #16
 8019824:	d45c      	bmi.n	80198e0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8019826:	4565      	cmp	r5, ip
 8019828:	da5a      	bge.n	80198e0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801982a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801982c:	fb05 2000 	mla	r0, r5, r0, r2
 8019830:	1400      	asrs	r0, r0, #16
 8019832:	d455      	bmi.n	80198e0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8019834:	42b8      	cmp	r0, r7
 8019836:	da53      	bge.n	80198e0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8019838:	f8bd b004 	ldrh.w	fp, [sp, #4]
 801983c:	4699      	mov	r9, r3
 801983e:	46a2      	mov	sl, r4
 8019840:	f1b9 0f00 	cmp.w	r9, #0
 8019844:	dd54      	ble.n	80198f0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8019846:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801984a:	140d      	asrs	r5, r1, #16
 801984c:	1410      	asrs	r0, r2, #16
 801984e:	fb07 5000 	mla	r0, r7, r0, r5
 8019852:	9d02      	ldr	r5, [sp, #8]
 8019854:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8019858:	f8ba 5000 	ldrh.w	r5, [sl]
 801985c:	122f      	asrs	r7, r5, #8
 801985e:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8019862:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019866:	fb17 f706 	smulbb	r7, r7, r6
 801986a:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801986e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019872:	00ed      	lsls	r5, r5, #3
 8019874:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8019878:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801987c:	10c7      	asrs	r7, r0, #3
 801987e:	b2ed      	uxtb	r5, r5
 8019880:	00c0      	lsls	r0, r0, #3
 8019882:	fb18 f806 	smulbb	r8, r8, r6
 8019886:	fb15 f506 	smulbb	r5, r5, r6
 801988a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801988e:	b2c0      	uxtb	r0, r0
 8019890:	fa1f fc8c 	uxth.w	ip, ip
 8019894:	fb07 870b 	mla	r7, r7, fp, r8
 8019898:	fb00 500b 	mla	r0, r0, fp, r5
 801989c:	b280      	uxth	r0, r0
 801989e:	b2bf      	uxth	r7, r7
 80198a0:	f10c 0501 	add.w	r5, ip, #1
 80198a4:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80198a8:	f107 0801 	add.w	r8, r7, #1
 80198ac:	1c45      	adds	r5, r0, #1
 80198ae:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80198b2:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 80198b6:	9811      	ldr	r0, [sp, #68]	; 0x44
 80198b8:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80198bc:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80198c0:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80198c4:	ea45 0c0c 	orr.w	ip, r5, ip
 80198c8:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80198cc:	4401      	add	r1, r0
 80198ce:	9812      	ldr	r0, [sp, #72]	; 0x48
 80198d0:	ea4c 0c08 	orr.w	ip, ip, r8
 80198d4:	f82a cb02 	strh.w	ip, [sl], #2
 80198d8:	4402      	add	r2, r0
 80198da:	f109 39ff 	add.w	r9, r9, #4294967295
 80198de:	e7af      	b.n	8019840 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80198e0:	f8bd a004 	ldrh.w	sl, [sp, #4]
 80198e4:	f04f 0800 	mov.w	r8, #0
 80198e8:	eb03 0008 	add.w	r0, r3, r8
 80198ec:	2800      	cmp	r0, #0
 80198ee:	dc41      	bgt.n	8019974 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80198f0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80198f4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80198f8:	9b00      	ldr	r3, [sp, #0]
 80198fa:	2b00      	cmp	r3, #0
 80198fc:	f340 8095 	ble.w	8019a2a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8019900:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019904:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019908:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801990c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801990e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019912:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019916:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801991a:	eef0 6a62 	vmov.f32	s13, s5
 801991e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019922:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019926:	ee77 2a62 	vsub.f32	s5, s14, s5
 801992a:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 801992e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019932:	eef0 6a43 	vmov.f32	s13, s6
 8019936:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801993a:	ee12 2a90 	vmov	r2, s5
 801993e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019942:	fb92 f3f3 	sdiv	r3, r2, r3
 8019946:	ee13 2a10 	vmov	r2, s6
 801994a:	9311      	str	r3, [sp, #68]	; 0x44
 801994c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801994e:	fb92 f3f3 	sdiv	r3, r2, r3
 8019952:	9312      	str	r3, [sp, #72]	; 0x48
 8019954:	9b00      	ldr	r3, [sp, #0]
 8019956:	9a03      	ldr	r2, [sp, #12]
 8019958:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801995c:	3b01      	subs	r3, #1
 801995e:	9300      	str	r3, [sp, #0]
 8019960:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 8019964:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019966:	eeb0 3a67 	vmov.f32	s6, s15
 801996a:	bf08      	it	eq
 801996c:	4613      	moveq	r3, r2
 801996e:	eef0 2a47 	vmov.f32	s5, s14
 8019972:	e72f      	b.n	80197d4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8019974:	140f      	asrs	r7, r1, #16
 8019976:	d451      	bmi.n	8019a1c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8019978:	f8de 5008 	ldr.w	r5, [lr, #8]
 801997c:	42bd      	cmp	r5, r7
 801997e:	dd4d      	ble.n	8019a1c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8019980:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8019984:	d44a      	bmi.n	8019a1c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8019986:	f8de 000c 	ldr.w	r0, [lr, #12]
 801998a:	4560      	cmp	r0, ip
 801998c:	dd46      	ble.n	8019a1c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801998e:	b22d      	sxth	r5, r5
 8019990:	fb0c 7505 	mla	r5, ip, r5, r7
 8019994:	9802      	ldr	r0, [sp, #8]
 8019996:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 801999a:	f06f 0501 	mvn.w	r5, #1
 801999e:	fb05 fb08 	mul.w	fp, r5, r8
 80199a2:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80199a6:	f834 500b 	ldrh.w	r5, [r4, fp]
 80199aa:	122f      	asrs	r7, r5, #8
 80199ac:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80199b0:	fb17 f706 	smulbb	r7, r7, r6
 80199b4:	ea4f 09e5 	mov.w	r9, r5, asr #3
 80199b8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80199bc:	00ed      	lsls	r5, r5, #3
 80199be:	fb0c 7c0a 	mla	ip, ip, sl, r7
 80199c2:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80199c6:	10c7      	asrs	r7, r0, #3
 80199c8:	b2ed      	uxtb	r5, r5
 80199ca:	00c0      	lsls	r0, r0, #3
 80199cc:	fb19 f906 	smulbb	r9, r9, r6
 80199d0:	fb15 f506 	smulbb	r5, r5, r6
 80199d4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80199d8:	b2c0      	uxtb	r0, r0
 80199da:	fa1f fc8c 	uxth.w	ip, ip
 80199de:	fb07 970a 	mla	r7, r7, sl, r9
 80199e2:	fb00 500a 	mla	r0, r0, sl, r5
 80199e6:	b2bf      	uxth	r7, r7
 80199e8:	b280      	uxth	r0, r0
 80199ea:	f10c 0501 	add.w	r5, ip, #1
 80199ee:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80199f2:	f107 0901 	add.w	r9, r7, #1
 80199f6:	1c45      	adds	r5, r0, #1
 80199f8:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80199fc:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8019a00:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019a04:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8019a08:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8019a0c:	ea45 0c0c 	orr.w	ip, r5, ip
 8019a10:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8019a14:	ea4c 0c09 	orr.w	ip, ip, r9
 8019a18:	f824 c00b 	strh.w	ip, [r4, fp]
 8019a1c:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019a1e:	4401      	add	r1, r0
 8019a20:	9812      	ldr	r0, [sp, #72]	; 0x48
 8019a22:	f108 38ff 	add.w	r8, r8, #4294967295
 8019a26:	4402      	add	r2, r0
 8019a28:	e75e      	b.n	80198e8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 8019a2a:	b005      	add	sp, #20
 8019a2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019a30 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019a30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019a34:	b085      	sub	sp, #20
 8019a36:	4693      	mov	fp, r2
 8019a38:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8019a3a:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8019a3c:	6870      	ldr	r0, [r6, #4]
 8019a3e:	9101      	str	r1, [sp, #4]
 8019a40:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8019a44:	fb00 2404 	mla	r4, r0, r4, r2
 8019a48:	6832      	ldr	r2, [r6, #0]
 8019a4a:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8019a4e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019a52:	682a      	ldr	r2, [r5, #0]
 8019a54:	9202      	str	r2, [sp, #8]
 8019a56:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019a5a:	9a01      	ldr	r2, [sp, #4]
 8019a5c:	2a00      	cmp	r2, #0
 8019a5e:	dc03      	bgt.n	8019a68 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8019a60:	f1bb 0f00 	cmp.w	fp, #0
 8019a64:	f340 809a 	ble.w	8019b9c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8019a68:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019a6a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8019a6e:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8019a72:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8019a76:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019a78:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019a7c:	2b00      	cmp	r3, #0
 8019a7e:	dd0c      	ble.n	8019a9a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8019a80:	1406      	asrs	r6, r0, #16
 8019a82:	d405      	bmi.n	8019a90 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8019a84:	454e      	cmp	r6, r9
 8019a86:	da03      	bge.n	8019a90 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8019a88:	1416      	asrs	r6, r2, #16
 8019a8a:	d401      	bmi.n	8019a90 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8019a8c:	4546      	cmp	r6, r8
 8019a8e:	db05      	blt.n	8019a9c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8019a90:	4470      	add	r0, lr
 8019a92:	4462      	add	r2, ip
 8019a94:	3b01      	subs	r3, #1
 8019a96:	3402      	adds	r4, #2
 8019a98:	e7f0      	b.n	8019a7c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8019a9a:	d00f      	beq.n	8019abc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019a9c:	1e5e      	subs	r6, r3, #1
 8019a9e:	fb0e 0706 	mla	r7, lr, r6, r0
 8019aa2:	143f      	asrs	r7, r7, #16
 8019aa4:	d541      	bpl.n	8019b2a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 8019aa6:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8019aaa:	4698      	mov	r8, r3
 8019aac:	9603      	str	r6, [sp, #12]
 8019aae:	f1b8 0f00 	cmp.w	r8, #0
 8019ab2:	dc56      	bgt.n	8019b62 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 8019ab4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019ab8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019abc:	9b01      	ldr	r3, [sp, #4]
 8019abe:	2b00      	cmp	r3, #0
 8019ac0:	dd6c      	ble.n	8019b9c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8019ac2:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019ac6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019aca:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019ace:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019ad0:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019ad4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019ad8:	eeb0 6a62 	vmov.f32	s12, s5
 8019adc:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019ae0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019ae4:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019ae8:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8019aec:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019af0:	eeb0 6a43 	vmov.f32	s12, s6
 8019af4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019af8:	ee12 2a90 	vmov	r2, s5
 8019afc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019b00:	fb92 fef3 	sdiv	lr, r2, r3
 8019b04:	ee13 2a10 	vmov	r2, s6
 8019b08:	fb92 fcf3 	sdiv	ip, r2, r3
 8019b0c:	9b01      	ldr	r3, [sp, #4]
 8019b0e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019b12:	3b01      	subs	r3, #1
 8019b14:	9301      	str	r3, [sp, #4]
 8019b16:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8019b1a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019b1c:	eeb0 3a67 	vmov.f32	s6, s15
 8019b20:	bf08      	it	eq
 8019b22:	465b      	moveq	r3, fp
 8019b24:	eef0 2a47 	vmov.f32	s5, s14
 8019b28:	e797      	b.n	8019a5a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8019b2a:	454f      	cmp	r7, r9
 8019b2c:	dabb      	bge.n	8019aa6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019b2e:	fb0c 2606 	mla	r6, ip, r6, r2
 8019b32:	1436      	asrs	r6, r6, #16
 8019b34:	d4b7      	bmi.n	8019aa6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019b36:	4546      	cmp	r6, r8
 8019b38:	dab5      	bge.n	8019aa6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019b3a:	461e      	mov	r6, r3
 8019b3c:	46a0      	mov	r8, r4
 8019b3e:	2e00      	cmp	r6, #0
 8019b40:	ddb8      	ble.n	8019ab4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8019b42:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8019b46:	9902      	ldr	r1, [sp, #8]
 8019b48:	1417      	asrs	r7, r2, #16
 8019b4a:	ea4f 4920 	mov.w	r9, r0, asr #16
 8019b4e:	fb0a 9707 	mla	r7, sl, r7, r9
 8019b52:	4470      	add	r0, lr
 8019b54:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8019b58:	f828 7b02 	strh.w	r7, [r8], #2
 8019b5c:	4462      	add	r2, ip
 8019b5e:	3e01      	subs	r6, #1
 8019b60:	e7ed      	b.n	8019b3e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8019b62:	ea5f 4920 	movs.w	r9, r0, asr #16
 8019b66:	d414      	bmi.n	8019b92 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8019b68:	68ae      	ldr	r6, [r5, #8]
 8019b6a:	454e      	cmp	r6, r9
 8019b6c:	dd11      	ble.n	8019b92 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8019b6e:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8019b72:	d40e      	bmi.n	8019b92 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8019b74:	68ef      	ldr	r7, [r5, #12]
 8019b76:	4557      	cmp	r7, sl
 8019b78:	dd0b      	ble.n	8019b92 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8019b7a:	b236      	sxth	r6, r6
 8019b7c:	fb0a 9606 	mla	r6, sl, r6, r9
 8019b80:	9f02      	ldr	r7, [sp, #8]
 8019b82:	f06f 0101 	mvn.w	r1, #1
 8019b86:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8019b8a:	fb01 f608 	mul.w	r6, r1, r8
 8019b8e:	9903      	ldr	r1, [sp, #12]
 8019b90:	538f      	strh	r7, [r1, r6]
 8019b92:	4470      	add	r0, lr
 8019b94:	4462      	add	r2, ip
 8019b96:	f108 38ff 	add.w	r8, r8, #4294967295
 8019b9a:	e788      	b.n	8019aae <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8019b9c:	b005      	add	sp, #20
 8019b9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019ba2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019ba2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019ba6:	b087      	sub	sp, #28
 8019ba8:	468b      	mov	fp, r1
 8019baa:	9815      	ldr	r0, [sp, #84]	; 0x54
 8019bac:	9203      	str	r2, [sp, #12]
 8019bae:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8019bb2:	9204      	str	r2, [sp, #16]
 8019bb4:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 8019bb8:	6841      	ldr	r1, [r0, #4]
 8019bba:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8019bbe:	fb01 2505 	mla	r5, r1, r5, r2
 8019bc2:	6802      	ldr	r2, [r0, #0]
 8019bc4:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8019bc8:	f8d9 2000 	ldr.w	r2, [r9]
 8019bcc:	9201      	str	r2, [sp, #4]
 8019bce:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019bd2:	f1bb 0f00 	cmp.w	fp, #0
 8019bd6:	dc03      	bgt.n	8019be0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8019bd8:	9a03      	ldr	r2, [sp, #12]
 8019bda:	2a00      	cmp	r2, #0
 8019bdc:	f340 8159 	ble.w	8019e92 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8019be0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8019be2:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8019be6:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8019bea:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8019bee:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8019bf0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019bf4:	2b00      	cmp	r3, #0
 8019bf6:	dd0e      	ble.n	8019c16 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8019bf8:	1402      	asrs	r2, r0, #16
 8019bfa:	d405      	bmi.n	8019c08 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019bfc:	42ba      	cmp	r2, r7
 8019bfe:	da03      	bge.n	8019c08 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019c00:	140a      	asrs	r2, r1, #16
 8019c02:	d401      	bmi.n	8019c08 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019c04:	42b2      	cmp	r2, r6
 8019c06:	db07      	blt.n	8019c18 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019c08:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8019c0a:	4410      	add	r0, r2
 8019c0c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8019c0e:	3b01      	subs	r3, #1
 8019c10:	4411      	add	r1, r2
 8019c12:	3502      	adds	r5, #2
 8019c14:	e7ee      	b.n	8019bf4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8019c16:	d017      	beq.n	8019c48 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8019c18:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019c1a:	1e5a      	subs	r2, r3, #1
 8019c1c:	fb04 0402 	mla	r4, r4, r2, r0
 8019c20:	1424      	asrs	r4, r4, #16
 8019c22:	d409      	bmi.n	8019c38 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8019c24:	42bc      	cmp	r4, r7
 8019c26:	da07      	bge.n	8019c38 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8019c28:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019c2a:	fb04 1202 	mla	r2, r4, r2, r1
 8019c2e:	1412      	asrs	r2, r2, #16
 8019c30:	d402      	bmi.n	8019c38 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8019c32:	42b2      	cmp	r2, r6
 8019c34:	f2c0 80bf 	blt.w	8019db6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019c38:	2700      	movs	r7, #0
 8019c3a:	19da      	adds	r2, r3, r7
 8019c3c:	2a00      	cmp	r2, #0
 8019c3e:	dc3e      	bgt.n	8019cbe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8019c40:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019c44:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8019c48:	f1bb 0f00 	cmp.w	fp, #0
 8019c4c:	f340 8121 	ble.w	8019e92 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8019c50:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019c54:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019c58:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019c5c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019c5e:	f1bb 0b01 	subs.w	fp, fp, #1
 8019c62:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019c66:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019c6a:	eeb0 6a62 	vmov.f32	s12, s5
 8019c6e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019c72:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019c76:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019c7a:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8019c7e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019c82:	eeb0 6a43 	vmov.f32	s12, s6
 8019c86:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019c8a:	ee12 2a90 	vmov	r2, s5
 8019c8e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019c92:	fb92 f3f3 	sdiv	r3, r2, r3
 8019c96:	ee13 2a10 	vmov	r2, s6
 8019c9a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019c9e:	9313      	str	r3, [sp, #76]	; 0x4c
 8019ca0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019ca2:	fb92 f3f3 	sdiv	r3, r2, r3
 8019ca6:	9a03      	ldr	r2, [sp, #12]
 8019ca8:	9314      	str	r3, [sp, #80]	; 0x50
 8019caa:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8019cae:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019cb0:	eeb0 3a67 	vmov.f32	s6, s15
 8019cb4:	bf08      	it	eq
 8019cb6:	4613      	moveq	r3, r2
 8019cb8:	eef0 2a47 	vmov.f32	s5, s14
 8019cbc:	e789      	b.n	8019bd2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8019cbe:	1406      	asrs	r6, r0, #16
 8019cc0:	d42d      	bmi.n	8019d1e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8019cc2:	f8d9 4008 	ldr.w	r4, [r9, #8]
 8019cc6:	42b4      	cmp	r4, r6
 8019cc8:	dd29      	ble.n	8019d1e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8019cca:	ea5f 4c21 	movs.w	ip, r1, asr #16
 8019cce:	d426      	bmi.n	8019d1e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8019cd0:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8019cd4:	4562      	cmp	r2, ip
 8019cd6:	dd22      	ble.n	8019d1e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8019cd8:	b224      	sxth	r4, r4
 8019cda:	9a01      	ldr	r2, [sp, #4]
 8019cdc:	fb0c 6404 	mla	r4, ip, r4, r6
 8019ce0:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 8019ce4:	0e22      	lsrs	r2, r4, #24
 8019ce6:	d01a      	beq.n	8019d1e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8019ce8:	9e04      	ldr	r6, [sp, #16]
 8019cea:	4372      	muls	r2, r6
 8019cec:	1c56      	adds	r6, r2, #1
 8019cee:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8019cf2:	1212      	asrs	r2, r2, #8
 8019cf4:	0a26      	lsrs	r6, r4, #8
 8019cf6:	2aff      	cmp	r2, #255	; 0xff
 8019cf8:	9605      	str	r6, [sp, #20]
 8019cfa:	d116      	bne.n	8019d2a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8019cfc:	f06f 0201 	mvn.w	r2, #1
 8019d00:	fb02 fc07 	mul.w	ip, r2, r7
 8019d04:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8019d08:	0962      	lsrs	r2, r4, #5
 8019d0a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019d0e:	f026 0607 	bic.w	r6, r6, #7
 8019d12:	4316      	orrs	r6, r2
 8019d14:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8019d18:	4326      	orrs	r6, r4
 8019d1a:	f825 600c 	strh.w	r6, [r5, ip]
 8019d1e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8019d20:	4410      	add	r0, r2
 8019d22:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8019d24:	3f01      	subs	r7, #1
 8019d26:	4411      	add	r1, r2
 8019d28:	e787      	b.n	8019c3a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019d2a:	f06f 0601 	mvn.w	r6, #1
 8019d2e:	437e      	muls	r6, r7
 8019d30:	fa1f fa82 	uxth.w	sl, r2
 8019d34:	f835 8006 	ldrh.w	r8, [r5, r6]
 8019d38:	9602      	str	r6, [sp, #8]
 8019d3a:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8019d3e:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 8019d42:	43d2      	mvns	r2, r2
 8019d44:	b2d2      	uxtb	r2, r2
 8019d46:	fb1c fc0a 	smulbb	ip, ip, sl
 8019d4a:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8019d4e:	fb0e ce02 	mla	lr, lr, r2, ip
 8019d52:	b2e4      	uxtb	r4, r4
 8019d54:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8019d58:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8019d5c:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8019d60:	fa5f f888 	uxtb.w	r8, r8
 8019d64:	fb14 f40a 	smulbb	r4, r4, sl
 8019d68:	fb08 4402 	mla	r4, r8, r2, r4
 8019d6c:	fa1f fe8e 	uxth.w	lr, lr
 8019d70:	fb16 f60a 	smulbb	r6, r6, sl
 8019d74:	b2a4      	uxth	r4, r4
 8019d76:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8019d7a:	fb0c 6c02 	mla	ip, ip, r2, r6
 8019d7e:	f10e 0201 	add.w	r2, lr, #1
 8019d82:	1c66      	adds	r6, r4, #1
 8019d84:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8019d88:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8019d8c:	fa1f fc8c 	uxth.w	ip, ip
 8019d90:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8019d94:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8019d98:	ea46 0e0e 	orr.w	lr, r6, lr
 8019d9c:	f10c 0601 	add.w	r6, ip, #1
 8019da0:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8019da4:	0976      	lsrs	r6, r6, #5
 8019da6:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8019daa:	9a02      	ldr	r2, [sp, #8]
 8019dac:	ea4e 0e06 	orr.w	lr, lr, r6
 8019db0:	f825 e002 	strh.w	lr, [r5, r2]
 8019db4:	e7b3      	b.n	8019d1e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8019db6:	f04f 0800 	mov.w	r8, #0
 8019dba:	eba3 0208 	sub.w	r2, r3, r8
 8019dbe:	2a00      	cmp	r2, #0
 8019dc0:	f77f af3e 	ble.w	8019c40 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8019dc4:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 8019dc8:	1404      	asrs	r4, r0, #16
 8019dca:	140a      	asrs	r2, r1, #16
 8019dcc:	fb06 4202 	mla	r2, r6, r2, r4
 8019dd0:	9c01      	ldr	r4, [sp, #4]
 8019dd2:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 8019dd6:	0e22      	lsrs	r2, r4, #24
 8019dd8:	d016      	beq.n	8019e08 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8019dda:	9e04      	ldr	r6, [sp, #16]
 8019ddc:	4372      	muls	r2, r6
 8019dde:	1c56      	adds	r6, r2, #1
 8019de0:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8019de4:	1212      	asrs	r2, r2, #8
 8019de6:	2aff      	cmp	r2, #255	; 0xff
 8019de8:	ea4f 2614 	mov.w	r6, r4, lsr #8
 8019dec:	d113      	bne.n	8019e16 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 8019dee:	0962      	lsrs	r2, r4, #5
 8019df0:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8019df4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019df8:	f026 0607 	bic.w	r6, r6, #7
 8019dfc:	4316      	orrs	r6, r2
 8019dfe:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8019e02:	4326      	orrs	r6, r4
 8019e04:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 8019e08:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8019e0a:	4410      	add	r0, r2
 8019e0c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8019e0e:	f108 0801 	add.w	r8, r8, #1
 8019e12:	4411      	add	r1, r2
 8019e14:	e7d1      	b.n	8019dba <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 8019e16:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 8019e1a:	fa1f fa82 	uxth.w	sl, r2
 8019e1e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8019e22:	f3c4 4707 	ubfx	r7, r4, #16, #8
 8019e26:	43d2      	mvns	r2, r2
 8019e28:	b2d2      	uxtb	r2, r2
 8019e2a:	fb17 f70a 	smulbb	r7, r7, sl
 8019e2e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019e32:	fb0c 7c02 	mla	ip, ip, r2, r7
 8019e36:	b2e4      	uxtb	r4, r4
 8019e38:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8019e3c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019e40:	fa5f fe8e 	uxtb.w	lr, lr
 8019e44:	fb14 f40a 	smulbb	r4, r4, sl
 8019e48:	fb0e 4402 	mla	r4, lr, r2, r4
 8019e4c:	b2f6      	uxtb	r6, r6
 8019e4e:	fa1f fc8c 	uxth.w	ip, ip
 8019e52:	fb16 f60a 	smulbb	r6, r6, sl
 8019e56:	b2a4      	uxth	r4, r4
 8019e58:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019e5c:	fb07 6702 	mla	r7, r7, r2, r6
 8019e60:	f10c 0201 	add.w	r2, ip, #1
 8019e64:	1c66      	adds	r6, r4, #1
 8019e66:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8019e6a:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8019e6e:	b2bf      	uxth	r7, r7
 8019e70:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8019e74:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019e78:	ea46 0c0c 	orr.w	ip, r6, ip
 8019e7c:	1c7e      	adds	r6, r7, #1
 8019e7e:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8019e82:	0976      	lsrs	r6, r6, #5
 8019e84:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8019e88:	ea4c 0c06 	orr.w	ip, ip, r6
 8019e8c:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 8019e90:	e7ba      	b.n	8019e08 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8019e92:	b007      	add	sp, #28
 8019e94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019e98 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019e98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019e9c:	b085      	sub	sp, #20
 8019e9e:	468b      	mov	fp, r1
 8019ea0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019ea2:	9203      	str	r2, [sp, #12]
 8019ea4:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8019ea8:	6841      	ldr	r1, [r0, #4]
 8019eaa:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8019eae:	fb01 2404 	mla	r4, r1, r4, r2
 8019eb2:	6802      	ldr	r2, [r0, #0]
 8019eb4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019eb8:	f8d8 2000 	ldr.w	r2, [r8]
 8019ebc:	9201      	str	r2, [sp, #4]
 8019ebe:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019ec2:	f1bb 0f00 	cmp.w	fp, #0
 8019ec6:	dc03      	bgt.n	8019ed0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8019ec8:	9a03      	ldr	r2, [sp, #12]
 8019eca:	2a00      	cmp	r2, #0
 8019ecc:	f340 814f 	ble.w	801a16e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8019ed0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019ed2:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8019ed6:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8019eda:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019ede:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019ee0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019ee4:	2b00      	cmp	r3, #0
 8019ee6:	dd0e      	ble.n	8019f06 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8019ee8:	1408      	asrs	r0, r1, #16
 8019eea:	d405      	bmi.n	8019ef8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8019eec:	42b8      	cmp	r0, r7
 8019eee:	da03      	bge.n	8019ef8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8019ef0:	1410      	asrs	r0, r2, #16
 8019ef2:	d401      	bmi.n	8019ef8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8019ef4:	42b0      	cmp	r0, r6
 8019ef6:	db07      	blt.n	8019f08 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019ef8:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019efa:	4401      	add	r1, r0
 8019efc:	9812      	ldr	r0, [sp, #72]	; 0x48
 8019efe:	3b01      	subs	r3, #1
 8019f00:	4402      	add	r2, r0
 8019f02:	3402      	adds	r4, #2
 8019f04:	e7ee      	b.n	8019ee4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8019f06:	d017      	beq.n	8019f38 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8019f08:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019f0a:	1e58      	subs	r0, r3, #1
 8019f0c:	fb05 1500 	mla	r5, r5, r0, r1
 8019f10:	142d      	asrs	r5, r5, #16
 8019f12:	d409      	bmi.n	8019f28 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8019f14:	42bd      	cmp	r5, r7
 8019f16:	da07      	bge.n	8019f28 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8019f18:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019f1a:	fb05 2000 	mla	r0, r5, r0, r2
 8019f1e:	1400      	asrs	r0, r0, #16
 8019f20:	d402      	bmi.n	8019f28 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8019f22:	42b0      	cmp	r0, r6
 8019f24:	f2c0 80ba 	blt.w	801a09c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019f28:	2600      	movs	r6, #0
 8019f2a:	1998      	adds	r0, r3, r6
 8019f2c:	2800      	cmp	r0, #0
 8019f2e:	dc3e      	bgt.n	8019fae <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8019f30:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019f34:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019f38:	f1bb 0f00 	cmp.w	fp, #0
 8019f3c:	f340 8117 	ble.w	801a16e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8019f40:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019f44:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019f48:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019f4c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019f4e:	f1bb 0b01 	subs.w	fp, fp, #1
 8019f52:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019f56:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019f5a:	eeb0 6a62 	vmov.f32	s12, s5
 8019f5e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019f62:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019f66:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019f6a:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8019f6e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019f72:	eeb0 6a43 	vmov.f32	s12, s6
 8019f76:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019f7a:	ee12 2a90 	vmov	r2, s5
 8019f7e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019f82:	fb92 f3f3 	sdiv	r3, r2, r3
 8019f86:	ee13 2a10 	vmov	r2, s6
 8019f8a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019f8e:	9311      	str	r3, [sp, #68]	; 0x44
 8019f90:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019f92:	fb92 f3f3 	sdiv	r3, r2, r3
 8019f96:	9a03      	ldr	r2, [sp, #12]
 8019f98:	9312      	str	r3, [sp, #72]	; 0x48
 8019f9a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8019f9e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019fa0:	eeb0 3a67 	vmov.f32	s6, s15
 8019fa4:	bf08      	it	eq
 8019fa6:	4613      	moveq	r3, r2
 8019fa8:	eef0 2a47 	vmov.f32	s5, s14
 8019fac:	e789      	b.n	8019ec2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8019fae:	140f      	asrs	r7, r1, #16
 8019fb0:	d424      	bmi.n	8019ffc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8019fb2:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8019fb6:	42bd      	cmp	r5, r7
 8019fb8:	dd20      	ble.n	8019ffc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8019fba:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8019fbe:	d41d      	bmi.n	8019ffc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8019fc0:	f8d8 000c 	ldr.w	r0, [r8, #12]
 8019fc4:	4560      	cmp	r0, ip
 8019fc6:	dd19      	ble.n	8019ffc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8019fc8:	b22d      	sxth	r5, r5
 8019fca:	fb0c 7505 	mla	r5, ip, r5, r7
 8019fce:	9801      	ldr	r0, [sp, #4]
 8019fd0:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 8019fd4:	0e07      	lsrs	r7, r0, #24
 8019fd6:	2fff      	cmp	r7, #255	; 0xff
 8019fd8:	d116      	bne.n	801a008 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8019fda:	f06f 0501 	mvn.w	r5, #1
 8019fde:	fb05 f706 	mul.w	r7, r5, r6
 8019fe2:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8019fe6:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8019fea:	0945      	lsrs	r5, r0, #5
 8019fec:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8019ff0:	ea4c 0505 	orr.w	r5, ip, r5
 8019ff4:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8019ff8:	4305      	orrs	r5, r0
 8019ffa:	53e5      	strh	r5, [r4, r7]
 8019ffc:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019ffe:	4401      	add	r1, r0
 801a000:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a002:	3e01      	subs	r6, #1
 801a004:	4402      	add	r2, r0
 801a006:	e790      	b.n	8019f2a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a008:	b2fd      	uxtb	r5, r7
 801a00a:	2f00      	cmp	r7, #0
 801a00c:	d0f6      	beq.n	8019ffc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a00e:	f06f 0701 	mvn.w	r7, #1
 801a012:	4377      	muls	r7, r6
 801a014:	fa1f f985 	uxth.w	r9, r5
 801a018:	f834 e007 	ldrh.w	lr, [r4, r7]
 801a01c:	9702      	str	r7, [sp, #8]
 801a01e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801a022:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801a026:	43ed      	mvns	r5, r5
 801a028:	b2ed      	uxtb	r5, r5
 801a02a:	fb17 f709 	smulbb	r7, r7, r9
 801a02e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a032:	fb0c 7c05 	mla	ip, ip, r5, r7
 801a036:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801a03a:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801a03e:	b2c0      	uxtb	r0, r0
 801a040:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a044:	fa5f fe8e 	uxtb.w	lr, lr
 801a048:	fb10 f009 	smulbb	r0, r0, r9
 801a04c:	fb0e 0005 	mla	r0, lr, r5, r0
 801a050:	b280      	uxth	r0, r0
 801a052:	fa1f fc8c 	uxth.w	ip, ip
 801a056:	fb1a fa09 	smulbb	sl, sl, r9
 801a05a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a05e:	fb07 a705 	mla	r7, r7, r5, sl
 801a062:	f100 0a01 	add.w	sl, r0, #1
 801a066:	f10c 0501 	add.w	r5, ip, #1
 801a06a:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801a06e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801a072:	b2bf      	uxth	r7, r7
 801a074:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a078:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a07c:	ea4a 0c0c 	orr.w	ip, sl, ip
 801a080:	f107 0a01 	add.w	sl, r7, #1
 801a084:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801a088:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a08c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a090:	9802      	ldr	r0, [sp, #8]
 801a092:	ea4c 0c0a 	orr.w	ip, ip, sl
 801a096:	f824 c000 	strh.w	ip, [r4, r0]
 801a09a:	e7af      	b.n	8019ffc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a09c:	f04f 0e00 	mov.w	lr, #0
 801a0a0:	eba3 000e 	sub.w	r0, r3, lr
 801a0a4:	2800      	cmp	r0, #0
 801a0a6:	f77f af43 	ble.w	8019f30 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a0aa:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801a0ae:	140d      	asrs	r5, r1, #16
 801a0b0:	1410      	asrs	r0, r2, #16
 801a0b2:	fb06 5000 	mla	r0, r6, r0, r5
 801a0b6:	9d01      	ldr	r5, [sp, #4]
 801a0b8:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801a0bc:	0e2e      	lsrs	r6, r5, #24
 801a0be:	2eff      	cmp	r6, #255	; 0xff
 801a0c0:	d112      	bne.n	801a0e8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801a0c2:	482c      	ldr	r0, [pc, #176]	; (801a174 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 801a0c4:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801a0c8:	0968      	lsrs	r0, r5, #5
 801a0ca:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801a0ce:	4330      	orrs	r0, r6
 801a0d0:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801a0d4:	4328      	orrs	r0, r5
 801a0d6:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801a0da:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a0dc:	4401      	add	r1, r0
 801a0de:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a0e0:	f10e 0e01 	add.w	lr, lr, #1
 801a0e4:	4402      	add	r2, r0
 801a0e6:	e7db      	b.n	801a0a0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801a0e8:	b2f0      	uxtb	r0, r6
 801a0ea:	2e00      	cmp	r6, #0
 801a0ec:	d0f5      	beq.n	801a0da <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801a0ee:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801a0f2:	fa1f f980 	uxth.w	r9, r0
 801a0f6:	ea4f 272c 	mov.w	r7, ip, asr #8
 801a0fa:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801a0fe:	43c0      	mvns	r0, r0
 801a100:	b2c0      	uxtb	r0, r0
 801a102:	fb16 f609 	smulbb	r6, r6, r9
 801a106:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a10a:	fb07 6700 	mla	r7, r7, r0, r6
 801a10e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801a112:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801a116:	b2ed      	uxtb	r5, r5
 801a118:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a11c:	fa5f fc8c 	uxtb.w	ip, ip
 801a120:	fb15 f509 	smulbb	r5, r5, r9
 801a124:	fb0c 5500 	mla	r5, ip, r0, r5
 801a128:	b2bf      	uxth	r7, r7
 801a12a:	fb1a fa09 	smulbb	sl, sl, r9
 801a12e:	b2ad      	uxth	r5, r5
 801a130:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a134:	fb06 a600 	mla	r6, r6, r0, sl
 801a138:	1c78      	adds	r0, r7, #1
 801a13a:	f105 0a01 	add.w	sl, r5, #1
 801a13e:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801a142:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a146:	b2b6      	uxth	r6, r6
 801a148:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a14c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a150:	ea4a 0707 	orr.w	r7, sl, r7
 801a154:	f106 0a01 	add.w	sl, r6, #1
 801a158:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a15c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a160:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a164:	ea47 070a 	orr.w	r7, r7, sl
 801a168:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801a16c:	e7b5      	b.n	801a0da <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801a16e:	b005      	add	sp, #20
 801a170:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a174:	fffff800 	.word	0xfffff800

0801a178 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a178:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a17c:	b087      	sub	sp, #28
 801a17e:	468b      	mov	fp, r1
 801a180:	9815      	ldr	r0, [sp, #84]	; 0x54
 801a182:	9203      	str	r2, [sp, #12]
 801a184:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801a188:	9204      	str	r2, [sp, #16]
 801a18a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801a18e:	6841      	ldr	r1, [r0, #4]
 801a190:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801a194:	fb01 2404 	mla	r4, r1, r4, r2
 801a198:	6802      	ldr	r2, [r0, #0]
 801a19a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a19e:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801a1a2:	3201      	adds	r2, #1
 801a1a4:	f022 0201 	bic.w	r2, r2, #1
 801a1a8:	9200      	str	r2, [sp, #0]
 801a1aa:	f8d9 2000 	ldr.w	r2, [r9]
 801a1ae:	9201      	str	r2, [sp, #4]
 801a1b0:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a1b4:	f1bb 0f00 	cmp.w	fp, #0
 801a1b8:	dc03      	bgt.n	801a1c2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801a1ba:	9a03      	ldr	r2, [sp, #12]
 801a1bc:	2a00      	cmp	r2, #0
 801a1be:	f340 8169 	ble.w	801a494 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801a1c2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a1c4:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801a1c8:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801a1cc:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a1d0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a1d2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a1d6:	2b00      	cmp	r3, #0
 801a1d8:	dd0e      	ble.n	801a1f8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801a1da:	1402      	asrs	r2, r0, #16
 801a1dc:	d405      	bmi.n	801a1ea <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a1de:	42ba      	cmp	r2, r7
 801a1e0:	da03      	bge.n	801a1ea <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a1e2:	140a      	asrs	r2, r1, #16
 801a1e4:	d401      	bmi.n	801a1ea <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a1e6:	42b2      	cmp	r2, r6
 801a1e8:	db07      	blt.n	801a1fa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801a1ea:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a1ec:	4410      	add	r0, r2
 801a1ee:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a1f0:	3b01      	subs	r3, #1
 801a1f2:	4411      	add	r1, r2
 801a1f4:	3402      	adds	r4, #2
 801a1f6:	e7ee      	b.n	801a1d6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801a1f8:	d017      	beq.n	801a22a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801a1fa:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a1fc:	1e5a      	subs	r2, r3, #1
 801a1fe:	fb05 0502 	mla	r5, r5, r2, r0
 801a202:	142d      	asrs	r5, r5, #16
 801a204:	d409      	bmi.n	801a21a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801a206:	42bd      	cmp	r5, r7
 801a208:	da07      	bge.n	801a21a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801a20a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a20c:	fb05 1202 	mla	r2, r5, r2, r1
 801a210:	1412      	asrs	r2, r2, #16
 801a212:	d402      	bmi.n	801a21a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801a214:	42b2      	cmp	r2, r6
 801a216:	f2c0 80c7 	blt.w	801a3a8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801a21a:	2700      	movs	r7, #0
 801a21c:	19da      	adds	r2, r3, r7
 801a21e:	2a00      	cmp	r2, #0
 801a220:	dc3e      	bgt.n	801a2a0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801a222:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a226:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a22a:	f1bb 0f00 	cmp.w	fp, #0
 801a22e:	f340 8131 	ble.w	801a494 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801a232:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a236:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a23a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a23e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a240:	f1bb 0b01 	subs.w	fp, fp, #1
 801a244:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a248:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a24c:	eeb0 6a62 	vmov.f32	s12, s5
 801a250:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a254:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a258:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a25c:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801a260:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a264:	eeb0 6a43 	vmov.f32	s12, s6
 801a268:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a26c:	ee12 2a90 	vmov	r2, s5
 801a270:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a274:	fb92 f3f3 	sdiv	r3, r2, r3
 801a278:	ee13 2a10 	vmov	r2, s6
 801a27c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a280:	9313      	str	r3, [sp, #76]	; 0x4c
 801a282:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a284:	fb92 f3f3 	sdiv	r3, r2, r3
 801a288:	9a03      	ldr	r2, [sp, #12]
 801a28a:	9314      	str	r3, [sp, #80]	; 0x50
 801a28c:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801a290:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a292:	eeb0 3a67 	vmov.f32	s6, s15
 801a296:	bf08      	it	eq
 801a298:	4613      	moveq	r3, r2
 801a29a:	eef0 2a47 	vmov.f32	s5, s14
 801a29e:	e789      	b.n	801a1b4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801a2a0:	1405      	asrs	r5, r0, #16
 801a2a2:	d435      	bmi.n	801a310 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a2a4:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801a2a8:	42aa      	cmp	r2, r5
 801a2aa:	dd31      	ble.n	801a310 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a2ac:	140e      	asrs	r6, r1, #16
 801a2ae:	d42f      	bmi.n	801a310 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a2b0:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801a2b4:	42b2      	cmp	r2, r6
 801a2b6:	dd2b      	ble.n	801a310 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a2b8:	9a00      	ldr	r2, [sp, #0]
 801a2ba:	fb06 5502 	mla	r5, r6, r2, r5
 801a2be:	086a      	lsrs	r2, r5, #1
 801a2c0:	9e01      	ldr	r6, [sp, #4]
 801a2c2:	5cb2      	ldrb	r2, [r6, r2]
 801a2c4:	07ee      	lsls	r6, r5, #31
 801a2c6:	bf54      	ite	pl
 801a2c8:	f002 020f 	andpl.w	r2, r2, #15
 801a2cc:	1112      	asrmi	r2, r2, #4
 801a2ce:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801a2d2:	b2d2      	uxtb	r2, r2
 801a2d4:	b1e2      	cbz	r2, 801a310 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a2d6:	9d04      	ldr	r5, [sp, #16]
 801a2d8:	436a      	muls	r2, r5
 801a2da:	1c55      	adds	r5, r2, #1
 801a2dc:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801a2e0:	4d6e      	ldr	r5, [pc, #440]	; (801a49c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801a2e2:	682d      	ldr	r5, [r5, #0]
 801a2e4:	1212      	asrs	r2, r2, #8
 801a2e6:	0a2e      	lsrs	r6, r5, #8
 801a2e8:	2aff      	cmp	r2, #255	; 0xff
 801a2ea:	9605      	str	r6, [sp, #20]
 801a2ec:	d116      	bne.n	801a31c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801a2ee:	f06f 0201 	mvn.w	r2, #1
 801a2f2:	fb02 fc07 	mul.w	ip, r2, r7
 801a2f6:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801a2fa:	096a      	lsrs	r2, r5, #5
 801a2fc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a300:	f026 0607 	bic.w	r6, r6, #7
 801a304:	4316      	orrs	r6, r2
 801a306:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801a30a:	432e      	orrs	r6, r5
 801a30c:	f824 600c 	strh.w	r6, [r4, ip]
 801a310:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a312:	4410      	add	r0, r2
 801a314:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a316:	3f01      	subs	r7, #1
 801a318:	4411      	add	r1, r2
 801a31a:	e77f      	b.n	801a21c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801a31c:	f06f 0601 	mvn.w	r6, #1
 801a320:	437e      	muls	r6, r7
 801a322:	fa1f fa82 	uxth.w	sl, r2
 801a326:	f834 8006 	ldrh.w	r8, [r4, r6]
 801a32a:	9602      	str	r6, [sp, #8]
 801a32c:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801a330:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 801a334:	43d2      	mvns	r2, r2
 801a336:	b2d2      	uxtb	r2, r2
 801a338:	fb1c fc0a 	smulbb	ip, ip, sl
 801a33c:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801a340:	fb0e ce02 	mla	lr, lr, r2, ip
 801a344:	b2ed      	uxtb	r5, r5
 801a346:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801a34a:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801a34e:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801a352:	fa5f f888 	uxtb.w	r8, r8
 801a356:	fb15 f50a 	smulbb	r5, r5, sl
 801a35a:	fb08 5502 	mla	r5, r8, r2, r5
 801a35e:	fa1f fe8e 	uxth.w	lr, lr
 801a362:	fb16 f60a 	smulbb	r6, r6, sl
 801a366:	b2ad      	uxth	r5, r5
 801a368:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801a36c:	fb0c 6c02 	mla	ip, ip, r2, r6
 801a370:	f10e 0201 	add.w	r2, lr, #1
 801a374:	1c6e      	adds	r6, r5, #1
 801a376:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801a37a:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801a37e:	fa1f fc8c 	uxth.w	ip, ip
 801a382:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801a386:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801a38a:	ea46 0e0e 	orr.w	lr, r6, lr
 801a38e:	f10c 0601 	add.w	r6, ip, #1
 801a392:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801a396:	0976      	lsrs	r6, r6, #5
 801a398:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a39c:	9a02      	ldr	r2, [sp, #8]
 801a39e:	ea4e 0e06 	orr.w	lr, lr, r6
 801a3a2:	f824 e002 	strh.w	lr, [r4, r2]
 801a3a6:	e7b3      	b.n	801a310 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a3a8:	f04f 0800 	mov.w	r8, #0
 801a3ac:	eba3 0208 	sub.w	r2, r3, r8
 801a3b0:	2a00      	cmp	r2, #0
 801a3b2:	f77f af36 	ble.w	801a222 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801a3b6:	9e00      	ldr	r6, [sp, #0]
 801a3b8:	1402      	asrs	r2, r0, #16
 801a3ba:	140d      	asrs	r5, r1, #16
 801a3bc:	fb06 2505 	mla	r5, r6, r5, r2
 801a3c0:	086a      	lsrs	r2, r5, #1
 801a3c2:	9e01      	ldr	r6, [sp, #4]
 801a3c4:	5cb2      	ldrb	r2, [r6, r2]
 801a3c6:	07ed      	lsls	r5, r5, #31
 801a3c8:	bf54      	ite	pl
 801a3ca:	f002 020f 	andpl.w	r2, r2, #15
 801a3ce:	1112      	asrmi	r2, r2, #4
 801a3d0:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801a3d4:	b2d2      	uxtb	r2, r2
 801a3d6:	b1c2      	cbz	r2, 801a40a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801a3d8:	9d04      	ldr	r5, [sp, #16]
 801a3da:	436a      	muls	r2, r5
 801a3dc:	1c55      	adds	r5, r2, #1
 801a3de:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801a3e2:	4d2e      	ldr	r5, [pc, #184]	; (801a49c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801a3e4:	1212      	asrs	r2, r2, #8
 801a3e6:	682e      	ldr	r6, [r5, #0]
 801a3e8:	2aff      	cmp	r2, #255	; 0xff
 801a3ea:	ea4f 2516 	mov.w	r5, r6, lsr #8
 801a3ee:	d113      	bne.n	801a418 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801a3f0:	0972      	lsrs	r2, r6, #5
 801a3f2:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801a3f6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a3fa:	f025 0507 	bic.w	r5, r5, #7
 801a3fe:	4315      	orrs	r5, r2
 801a400:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801a404:	4335      	orrs	r5, r6
 801a406:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801a40a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a40c:	4410      	add	r0, r2
 801a40e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a410:	f108 0801 	add.w	r8, r8, #1
 801a414:	4411      	add	r1, r2
 801a416:	e7c9      	b.n	801a3ac <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a418:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801a41c:	fa1f fa82 	uxth.w	sl, r2
 801a420:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801a424:	f3c6 4707 	ubfx	r7, r6, #16, #8
 801a428:	43d2      	mvns	r2, r2
 801a42a:	b2d2      	uxtb	r2, r2
 801a42c:	fb17 f70a 	smulbb	r7, r7, sl
 801a430:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a434:	fb0c 7c02 	mla	ip, ip, r2, r7
 801a438:	b2f6      	uxtb	r6, r6
 801a43a:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801a43e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a442:	fa5f fe8e 	uxtb.w	lr, lr
 801a446:	fb16 f60a 	smulbb	r6, r6, sl
 801a44a:	fb0e 6602 	mla	r6, lr, r2, r6
 801a44e:	b2ed      	uxtb	r5, r5
 801a450:	fa1f fc8c 	uxth.w	ip, ip
 801a454:	fb15 f50a 	smulbb	r5, r5, sl
 801a458:	b2b6      	uxth	r6, r6
 801a45a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a45e:	fb07 5702 	mla	r7, r7, r2, r5
 801a462:	f10c 0201 	add.w	r2, ip, #1
 801a466:	1c75      	adds	r5, r6, #1
 801a468:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801a46c:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801a470:	b2bf      	uxth	r7, r7
 801a472:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801a476:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a47a:	ea45 0c0c 	orr.w	ip, r5, ip
 801a47e:	1c7d      	adds	r5, r7, #1
 801a480:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 801a484:	096d      	lsrs	r5, r5, #5
 801a486:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a48a:	ea4c 0c05 	orr.w	ip, ip, r5
 801a48e:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801a492:	e7ba      	b.n	801a40a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801a494:	b007      	add	sp, #28
 801a496:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a49a:	bf00      	nop
 801a49c:	200137cc 	.word	0x200137cc

0801a4a0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a4a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a4a4:	b087      	sub	sp, #28
 801a4a6:	f8df 830c 	ldr.w	r8, [pc, #780]	; 801a7b4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801a4aa:	9815      	ldr	r0, [sp, #84]	; 0x54
 801a4ac:	9205      	str	r2, [sp, #20]
 801a4ae:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801a4b2:	9101      	str	r1, [sp, #4]
 801a4b4:	6841      	ldr	r1, [r0, #4]
 801a4b6:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 801a4ba:	fb01 2404 	mla	r4, r1, r4, r2
 801a4be:	6802      	ldr	r2, [r0, #0]
 801a4c0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a4c4:	f8db 2008 	ldr.w	r2, [fp, #8]
 801a4c8:	3201      	adds	r2, #1
 801a4ca:	f022 0201 	bic.w	r2, r2, #1
 801a4ce:	9202      	str	r2, [sp, #8]
 801a4d0:	f8db 2000 	ldr.w	r2, [fp]
 801a4d4:	9203      	str	r2, [sp, #12]
 801a4d6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a4da:	9a01      	ldr	r2, [sp, #4]
 801a4dc:	2a00      	cmp	r2, #0
 801a4de:	dc03      	bgt.n	801a4e8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801a4e0:	9a05      	ldr	r2, [sp, #20]
 801a4e2:	2a00      	cmp	r2, #0
 801a4e4:	f340 8162 	ble.w	801a7ac <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801a4e8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a4ea:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801a4ee:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801a4f2:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a4f6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a4f8:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a4fc:	2b00      	cmp	r3, #0
 801a4fe:	dd0e      	ble.n	801a51e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a500:	1402      	asrs	r2, r0, #16
 801a502:	d405      	bmi.n	801a510 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a504:	42ba      	cmp	r2, r7
 801a506:	da03      	bge.n	801a510 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a508:	140a      	asrs	r2, r1, #16
 801a50a:	d401      	bmi.n	801a510 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a50c:	42b2      	cmp	r2, r6
 801a50e:	db07      	blt.n	801a520 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801a510:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a512:	4410      	add	r0, r2
 801a514:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a516:	3b01      	subs	r3, #1
 801a518:	4411      	add	r1, r2
 801a51a:	3402      	adds	r4, #2
 801a51c:	e7ee      	b.n	801a4fc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801a51e:	d017      	beq.n	801a550 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801a520:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a522:	1e5a      	subs	r2, r3, #1
 801a524:	fb05 0502 	mla	r5, r5, r2, r0
 801a528:	142d      	asrs	r5, r5, #16
 801a52a:	d409      	bmi.n	801a540 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a52c:	42bd      	cmp	r5, r7
 801a52e:	da07      	bge.n	801a540 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a530:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a532:	fb05 1202 	mla	r2, r5, r2, r1
 801a536:	1412      	asrs	r2, r2, #16
 801a538:	d402      	bmi.n	801a540 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a53a:	42b2      	cmp	r2, r6
 801a53c:	f2c0 80c3 	blt.w	801a6c6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 801a540:	2500      	movs	r5, #0
 801a542:	195a      	adds	r2, r3, r5
 801a544:	2a00      	cmp	r2, #0
 801a546:	dc3f      	bgt.n	801a5c8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801a548:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a54c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a550:	9b01      	ldr	r3, [sp, #4]
 801a552:	2b00      	cmp	r3, #0
 801a554:	f340 812a 	ble.w	801a7ac <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801a558:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a55c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a560:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a564:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a566:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a56a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a56e:	eeb0 6a62 	vmov.f32	s12, s5
 801a572:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a576:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a57a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a57e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801a582:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a586:	eeb0 6a43 	vmov.f32	s12, s6
 801a58a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a58e:	ee12 2a90 	vmov	r2, s5
 801a592:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a596:	fb92 f3f3 	sdiv	r3, r2, r3
 801a59a:	ee13 2a10 	vmov	r2, s6
 801a59e:	9313      	str	r3, [sp, #76]	; 0x4c
 801a5a0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a5a2:	fb92 f3f3 	sdiv	r3, r2, r3
 801a5a6:	9314      	str	r3, [sp, #80]	; 0x50
 801a5a8:	9b01      	ldr	r3, [sp, #4]
 801a5aa:	9a05      	ldr	r2, [sp, #20]
 801a5ac:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a5b0:	3b01      	subs	r3, #1
 801a5b2:	9301      	str	r3, [sp, #4]
 801a5b4:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801a5b8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a5ba:	eeb0 3a67 	vmov.f32	s6, s15
 801a5be:	bf08      	it	eq
 801a5c0:	4613      	moveq	r3, r2
 801a5c2:	eef0 2a47 	vmov.f32	s5, s14
 801a5c6:	e788      	b.n	801a4da <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801a5c8:	1406      	asrs	r6, r0, #16
 801a5ca:	d42c      	bmi.n	801a626 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a5cc:	f8db 2008 	ldr.w	r2, [fp, #8]
 801a5d0:	42b2      	cmp	r2, r6
 801a5d2:	dd28      	ble.n	801a626 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a5d4:	140f      	asrs	r7, r1, #16
 801a5d6:	d426      	bmi.n	801a626 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a5d8:	f8db 200c 	ldr.w	r2, [fp, #12]
 801a5dc:	42ba      	cmp	r2, r7
 801a5de:	dd22      	ble.n	801a626 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a5e0:	9a02      	ldr	r2, [sp, #8]
 801a5e2:	fb07 6602 	mla	r6, r7, r2, r6
 801a5e6:	0872      	lsrs	r2, r6, #1
 801a5e8:	9f03      	ldr	r7, [sp, #12]
 801a5ea:	5cba      	ldrb	r2, [r7, r2]
 801a5ec:	07f6      	lsls	r6, r6, #31
 801a5ee:	bf54      	ite	pl
 801a5f0:	f002 020f 	andpl.w	r2, r2, #15
 801a5f4:	1112      	asrmi	r2, r2, #4
 801a5f6:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801a5fa:	b2d2      	uxtb	r2, r2
 801a5fc:	2aff      	cmp	r2, #255	; 0xff
 801a5fe:	d118      	bne.n	801a632 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 801a600:	f8d8 2000 	ldr.w	r2, [r8]
 801a604:	f06f 0601 	mvn.w	r6, #1
 801a608:	fb06 f705 	mul.w	r7, r6, r5
 801a60c:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 801a610:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 801a614:	0956      	lsrs	r6, r2, #5
 801a616:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a61a:	ea4c 0606 	orr.w	r6, ip, r6
 801a61e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801a622:	4316      	orrs	r6, r2
 801a624:	53e6      	strh	r6, [r4, r7]
 801a626:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a628:	4410      	add	r0, r2
 801a62a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a62c:	3d01      	subs	r5, #1
 801a62e:	4411      	add	r1, r2
 801a630:	e787      	b.n	801a542 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801a632:	2a00      	cmp	r2, #0
 801a634:	d0f7      	beq.n	801a626 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a636:	f06f 0601 	mvn.w	r6, #1
 801a63a:	436e      	muls	r6, r5
 801a63c:	f8d8 c000 	ldr.w	ip, [r8]
 801a640:	f834 e006 	ldrh.w	lr, [r4, r6]
 801a644:	9604      	str	r6, [sp, #16]
 801a646:	fa1f f982 	uxth.w	r9, r2
 801a64a:	ea4f 272e 	mov.w	r7, lr, asr #8
 801a64e:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801a652:	43d2      	mvns	r2, r2
 801a654:	b2d2      	uxtb	r2, r2
 801a656:	fb16 f609 	smulbb	r6, r6, r9
 801a65a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a65e:	fb07 6702 	mla	r7, r7, r2, r6
 801a662:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801a666:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801a66a:	fa5f fc8c 	uxtb.w	ip, ip
 801a66e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a672:	fa5f fe8e 	uxtb.w	lr, lr
 801a676:	fb1c fc09 	smulbb	ip, ip, r9
 801a67a:	fb0e cc02 	mla	ip, lr, r2, ip
 801a67e:	b2bf      	uxth	r7, r7
 801a680:	fb1a fa09 	smulbb	sl, sl, r9
 801a684:	fa1f fc8c 	uxth.w	ip, ip
 801a688:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a68c:	fb06 a602 	mla	r6, r6, r2, sl
 801a690:	1c7a      	adds	r2, r7, #1
 801a692:	f10c 0a01 	add.w	sl, ip, #1
 801a696:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801a69a:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801a69e:	b2b6      	uxth	r6, r6
 801a6a0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a6a4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a6a8:	ea4a 0707 	orr.w	r7, sl, r7
 801a6ac:	f106 0a01 	add.w	sl, r6, #1
 801a6b0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a6b4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a6b8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a6bc:	9a04      	ldr	r2, [sp, #16]
 801a6be:	ea47 070a 	orr.w	r7, r7, sl
 801a6c2:	52a7      	strh	r7, [r4, r2]
 801a6c4:	e7af      	b.n	801a626 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a6c6:	f04f 0e00 	mov.w	lr, #0
 801a6ca:	eba3 020e 	sub.w	r2, r3, lr
 801a6ce:	2a00      	cmp	r2, #0
 801a6d0:	f77f af3a 	ble.w	801a548 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801a6d4:	9e02      	ldr	r6, [sp, #8]
 801a6d6:	1402      	asrs	r2, r0, #16
 801a6d8:	140d      	asrs	r5, r1, #16
 801a6da:	fb06 2505 	mla	r5, r6, r5, r2
 801a6de:	086a      	lsrs	r2, r5, #1
 801a6e0:	9e03      	ldr	r6, [sp, #12]
 801a6e2:	5cb2      	ldrb	r2, [r6, r2]
 801a6e4:	07ed      	lsls	r5, r5, #31
 801a6e6:	bf54      	ite	pl
 801a6e8:	f002 020f 	andpl.w	r2, r2, #15
 801a6ec:	1112      	asrmi	r2, r2, #4
 801a6ee:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801a6f2:	b2d2      	uxtb	r2, r2
 801a6f4:	2aff      	cmp	r2, #255	; 0xff
 801a6f6:	d115      	bne.n	801a724 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 801a6f8:	f8d8 5000 	ldr.w	r5, [r8]
 801a6fc:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 801a700:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 801a704:	096a      	lsrs	r2, r5, #5
 801a706:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a70a:	4332      	orrs	r2, r6
 801a70c:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801a710:	432a      	orrs	r2, r5
 801a712:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801a716:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a718:	4410      	add	r0, r2
 801a71a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a71c:	f10e 0e01 	add.w	lr, lr, #1
 801a720:	4411      	add	r1, r2
 801a722:	e7d2      	b.n	801a6ca <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801a724:	2a00      	cmp	r2, #0
 801a726:	d0f6      	beq.n	801a716 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801a728:	f8d8 7000 	ldr.w	r7, [r8]
 801a72c:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801a730:	fa1f f982 	uxth.w	r9, r2
 801a734:	ea4f 262c 	mov.w	r6, ip, asr #8
 801a738:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801a73c:	43d2      	mvns	r2, r2
 801a73e:	b2d2      	uxtb	r2, r2
 801a740:	fb15 f509 	smulbb	r5, r5, r9
 801a744:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801a748:	fb06 5602 	mla	r6, r6, r2, r5
 801a74c:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801a750:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801a754:	b2ff      	uxtb	r7, r7
 801a756:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a75a:	fa5f fc8c 	uxtb.w	ip, ip
 801a75e:	fb17 f709 	smulbb	r7, r7, r9
 801a762:	fb0c 7702 	mla	r7, ip, r2, r7
 801a766:	b2b6      	uxth	r6, r6
 801a768:	fb1a fa09 	smulbb	sl, sl, r9
 801a76c:	b2bf      	uxth	r7, r7
 801a76e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801a772:	fb05 a502 	mla	r5, r5, r2, sl
 801a776:	1c72      	adds	r2, r6, #1
 801a778:	f107 0a01 	add.w	sl, r7, #1
 801a77c:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801a780:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801a784:	b2ad      	uxth	r5, r5
 801a786:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a78a:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801a78e:	ea4a 0606 	orr.w	r6, sl, r6
 801a792:	f105 0a01 	add.w	sl, r5, #1
 801a796:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a79a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a79e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a7a2:	ea46 060a 	orr.w	r6, r6, sl
 801a7a6:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801a7aa:	e7b4      	b.n	801a716 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801a7ac:	b007      	add	sp, #28
 801a7ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a7b2:	bf00      	nop
 801a7b4:	200137cc 	.word	0x200137cc

0801a7b8 <_ZN8touchgfx8LCD16bppD1Ev>:
 801a7b8:	4770      	bx	lr

0801a7ba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 801a7ba:	4770      	bx	lr

0801a7bc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 801a7bc:	4770      	bx	lr

0801a7be <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 801a7be:	4770      	bx	lr

0801a7c0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801a7c0:	4770      	bx	lr

0801a7c2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801a7c2:	4770      	bx	lr

0801a7c4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801a7c4:	4770      	bx	lr

0801a7c6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801a7c6:	4770      	bx	lr

0801a7c8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801a7c8:	4770      	bx	lr

0801a7ca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801a7ca:	4770      	bx	lr

0801a7cc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801a7cc:	4770      	bx	lr

0801a7ce <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801a7ce:	4770      	bx	lr

0801a7d0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801a7d0:	4770      	bx	lr

0801a7d2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801a7d2:	4770      	bx	lr

0801a7d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801a7d4:	4770      	bx	lr

0801a7d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801a7d6:	4770      	bx	lr

0801a7d8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801a7d8:	4770      	bx	lr

0801a7da <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801a7da:	4770      	bx	lr

0801a7dc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801a7dc:	4770      	bx	lr

0801a7de <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801a7de:	4770      	bx	lr

0801a7e0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801a7e0:	4770      	bx	lr

0801a7e2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801a7e2:	4770      	bx	lr

0801a7e4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801a7e4:	4770      	bx	lr

0801a7e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801a7e6:	4770      	bx	lr

0801a7e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801a7e8:	4770      	bx	lr

0801a7ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801a7ea:	4770      	bx	lr

0801a7ec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801a7ec:	4770      	bx	lr

0801a7ee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801a7ee:	4770      	bx	lr

0801a7f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801a7f0:	4770      	bx	lr

0801a7f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801a7f2:	4770      	bx	lr

0801a7f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801a7f4:	4770      	bx	lr

0801a7f6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801a7f6:	4770      	bx	lr

0801a7f8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801a7f8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801a7fc:	b088      	sub	sp, #32
 801a7fe:	ac08      	add	r4, sp, #32
 801a800:	4606      	mov	r6, r0
 801a802:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 801a806:	4620      	mov	r0, r4
 801a808:	4688      	mov	r8, r1
 801a80a:	4691      	mov	r9, r2
 801a80c:	f7fd fc62 	bl	80180d4 <_ZNK8touchgfx6Bitmap7getDataEv>
 801a810:	6833      	ldr	r3, [r6, #0]
 801a812:	4605      	mov	r5, r0
 801a814:	4620      	mov	r0, r4
 801a816:	699f      	ldr	r7, [r3, #24]
 801a818:	f7fd fb70 	bl	8017efc <_ZNK8touchgfx6Bitmap8getWidthEv>
 801a81c:	4682      	mov	sl, r0
 801a81e:	4620      	mov	r0, r4
 801a820:	f7fd fba0 	bl	8017f64 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801a824:	9500      	str	r5, [sp, #0]
 801a826:	e9cd a001 	strd	sl, r0, [sp, #4]
 801a82a:	464b      	mov	r3, r9
 801a82c:	a806      	add	r0, sp, #24
 801a82e:	4642      	mov	r2, r8
 801a830:	4631      	mov	r1, r6
 801a832:	47b8      	blx	r7
 801a834:	4628      	mov	r0, r5
 801a836:	b008      	add	sp, #32
 801a838:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801a83c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 801a83c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801a840:	2300      	movs	r3, #0
 801a842:	9300      	str	r3, [sp, #0]
 801a844:	4b3d      	ldr	r3, [pc, #244]	; (801a93c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 801a846:	781b      	ldrb	r3, [r3, #0]
 801a848:	2b00      	cmp	r3, #0
 801a84a:	d137      	bne.n	801a8bc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 801a84c:	4a3c      	ldr	r2, [pc, #240]	; (801a940 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801a84e:	f9b2 2000 	ldrsh.w	r2, [r2]
 801a852:	f8ad 2004 	strh.w	r2, [sp, #4]
 801a856:	2b00      	cmp	r3, #0
 801a858:	d132      	bne.n	801a8c0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801a85a:	4b3a      	ldr	r3, [pc, #232]	; (801a944 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801a85c:	f9b3 3000 	ldrsh.w	r3, [r3]
 801a860:	6808      	ldr	r0, [r1, #0]
 801a862:	6849      	ldr	r1, [r1, #4]
 801a864:	f8ad 3006 	strh.w	r3, [sp, #6]
 801a868:	ac02      	add	r4, sp, #8
 801a86a:	ab02      	add	r3, sp, #8
 801a86c:	c303      	stmia	r3!, {r0, r1}
 801a86e:	4669      	mov	r1, sp
 801a870:	4620      	mov	r0, r4
 801a872:	f7f9 ffb5 	bl	80147e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801a876:	4668      	mov	r0, sp
 801a878:	f7f9 ff6e 	bl	8014758 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a87c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801a880:	f8bd 2000 	ldrh.w	r2, [sp]
 801a884:	4d30      	ldr	r5, [pc, #192]	; (801a948 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801a886:	4413      	add	r3, r2
 801a888:	f8ad 3008 	strh.w	r3, [sp, #8]
 801a88c:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801a890:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801a894:	6828      	ldr	r0, [r5, #0]
 801a896:	4413      	add	r3, r2
 801a898:	f8ad 300a 	strh.w	r3, [sp, #10]
 801a89c:	6803      	ldr	r3, [r0, #0]
 801a89e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801a8a0:	4798      	blx	r3
 801a8a2:	f010 0f01 	tst.w	r0, #1
 801a8a6:	462f      	mov	r7, r5
 801a8a8:	d00c      	beq.n	801a8c4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801a8aa:	6828      	ldr	r0, [r5, #0]
 801a8ac:	6803      	ldr	r3, [r0, #0]
 801a8ae:	e894 0006 	ldmia.w	r4, {r1, r2}
 801a8b2:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801a8b4:	4798      	blx	r3
 801a8b6:	b004      	add	sp, #16
 801a8b8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801a8bc:	4a21      	ldr	r2, [pc, #132]	; (801a944 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801a8be:	e7c6      	b.n	801a84e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 801a8c0:	4b1f      	ldr	r3, [pc, #124]	; (801a940 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801a8c2:	e7cb      	b.n	801a85c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 801a8c4:	6838      	ldr	r0, [r7, #0]
 801a8c6:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801a8ca:	6803      	ldr	r3, [r0, #0]
 801a8cc:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 801a8d0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801a8d2:	4798      	blx	r3
 801a8d4:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 801a8d8:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801a8dc:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 801a8e0:	fb16 3602 	smlabb	r6, r6, r2, r3
 801a8e4:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801a8e8:	6838      	ldr	r0, [r7, #0]
 801a8ea:	6803      	ldr	r3, [r0, #0]
 801a8ec:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801a8ee:	4798      	blx	r3
 801a8f0:	4a13      	ldr	r2, [pc, #76]	; (801a940 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801a8f2:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 801a8f6:	8813      	ldrh	r3, [r2, #0]
 801a8f8:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801a8fc:	fb03 1404 	mla	r4, r3, r4, r1
 801a900:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801a904:	435d      	muls	r5, r3
 801a906:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801a90a:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801a90e:	4691      	mov	r9, r2
 801a910:	6838      	ldr	r0, [r7, #0]
 801a912:	42ac      	cmp	r4, r5
 801a914:	6803      	ldr	r3, [r0, #0]
 801a916:	d20e      	bcs.n	801a936 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 801a918:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 801a91c:	4632      	mov	r2, r6
 801a91e:	4643      	mov	r3, r8
 801a920:	4621      	mov	r1, r4
 801a922:	47d0      	blx	sl
 801a924:	f8b9 3000 	ldrh.w	r3, [r9]
 801a928:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a92c:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801a930:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801a934:	e7ec      	b.n	801a910 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 801a936:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801a938:	4798      	blx	r3
 801a93a:	e7bc      	b.n	801a8b6 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 801a93c:	200137b4 	.word	0x200137b4
 801a940:	200137b6 	.word	0x200137b6
 801a944:	200137b8 	.word	0x200137b8
 801a948:	200137bc 	.word	0x200137bc

0801a94c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801a94c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a950:	b08b      	sub	sp, #44	; 0x2c
 801a952:	460f      	mov	r7, r1
 801a954:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 801a958:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 801a95c:	4616      	mov	r6, r2
 801a95e:	f1bb 0f00 	cmp.w	fp, #0
 801a962:	d04a      	beq.n	801a9fa <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801a964:	6810      	ldr	r0, [r2, #0]
 801a966:	6851      	ldr	r1, [r2, #4]
 801a968:	ad06      	add	r5, sp, #24
 801a96a:	c503      	stmia	r5!, {r0, r1}
 801a96c:	6818      	ldr	r0, [r3, #0]
 801a96e:	6859      	ldr	r1, [r3, #4]
 801a970:	ad08      	add	r5, sp, #32
 801a972:	c503      	stmia	r5!, {r0, r1}
 801a974:	a806      	add	r0, sp, #24
 801a976:	f7f9 feef 	bl	8014758 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a97a:	4631      	mov	r1, r6
 801a97c:	a808      	add	r0, sp, #32
 801a97e:	f7f9 ff2f 	bl	80147e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801a982:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801a986:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801a98a:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801a98e:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 801a992:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 801a996:	fb16 2103 	smlabb	r1, r6, r3, r2
 801a99a:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801a99e:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801a9a2:	4f5f      	ldr	r7, [pc, #380]	; (801ab20 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801a9a4:	440a      	add	r2, r1
 801a9a6:	f8ad 2020 	strh.w	r2, [sp, #32]
 801a9aa:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801a9ae:	6838      	ldr	r0, [r7, #0]
 801a9b0:	4413      	add	r3, r2
 801a9b2:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801a9b6:	6803      	ldr	r3, [r0, #0]
 801a9b8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801a9ba:	4798      	blx	r3
 801a9bc:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801a9c0:	46b9      	mov	r9, r7
 801a9c2:	d11d      	bne.n	801aa00 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801a9c4:	b9fc      	cbnz	r4, 801aa06 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801a9c6:	f010 0f01 	tst.w	r0, #1
 801a9ca:	d01c      	beq.n	801aa06 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801a9cc:	f8d9 0000 	ldr.w	r0, [r9]
 801a9d0:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801a9d4:	6801      	ldr	r1, [r0, #0]
 801a9d6:	f8cd b00c 	str.w	fp, [sp, #12]
 801a9da:	2700      	movs	r7, #0
 801a9dc:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801a9e0:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801a9e4:	9402      	str	r4, [sp, #8]
 801a9e6:	b2ad      	uxth	r5, r5
 801a9e8:	fa1f f488 	uxth.w	r4, r8
 801a9ec:	9501      	str	r5, [sp, #4]
 801a9ee:	9400      	str	r4, [sp, #0]
 801a9f0:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 801a9f2:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801a9f6:	4631      	mov	r1, r6
 801a9f8:	47a0      	blx	r4
 801a9fa:	b00b      	add	sp, #44	; 0x2c
 801a9fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801aa00:	f010 0f04 	tst.w	r0, #4
 801aa04:	e7e1      	b.n	801a9ca <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 801aa06:	f8d9 0000 	ldr.w	r0, [r9]
 801aa0a:	6803      	ldr	r3, [r0, #0]
 801aa0c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801aa0e:	4798      	blx	r3
 801aa10:	4b44      	ldr	r3, [pc, #272]	; (801ab24 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801aa12:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 801aa16:	881a      	ldrh	r2, [r3, #0]
 801aa18:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801aa1c:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801aa20:	fb02 1404 	mla	r4, r2, r4, r1
 801aa24:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801aa28:	469a      	mov	sl, r3
 801aa2a:	fb05 f502 	mul.w	r5, r5, r2
 801aa2e:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801aa32:	d059      	beq.n	801aae8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801aa34:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 801aa38:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801aa3c:	fa1f f28b 	uxth.w	r2, fp
 801aa40:	fa1f f989 	uxth.w	r9, r9
 801aa44:	469e      	mov	lr, r3
 801aa46:	42ac      	cmp	r4, r5
 801aa48:	d264      	bcs.n	801ab14 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801aa4a:	eb04 0a07 	add.w	sl, r4, r7
 801aa4e:	4554      	cmp	r4, sl
 801aa50:	d23d      	bcs.n	801aace <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801aa52:	8821      	ldrh	r1, [r4, #0]
 801aa54:	f836 3b02 	ldrh.w	r3, [r6], #2
 801aa58:	1208      	asrs	r0, r1, #8
 801aa5a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801aa5e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801aa62:	fb10 f009 	smulbb	r0, r0, r9
 801aa66:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801aa6a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801aa6e:	00c9      	lsls	r1, r1, #3
 801aa70:	fb0c 0c02 	mla	ip, ip, r2, r0
 801aa74:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801aa78:	10d8      	asrs	r0, r3, #3
 801aa7a:	b2c9      	uxtb	r1, r1
 801aa7c:	00db      	lsls	r3, r3, #3
 801aa7e:	fa1f fc8c 	uxth.w	ip, ip
 801aa82:	fb1b fb09 	smulbb	fp, fp, r9
 801aa86:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801aa8a:	b2db      	uxtb	r3, r3
 801aa8c:	fb11 f109 	smulbb	r1, r1, r9
 801aa90:	fb00 b002 	mla	r0, r0, r2, fp
 801aa94:	fb03 1302 	mla	r3, r3, r2, r1
 801aa98:	f10c 0b01 	add.w	fp, ip, #1
 801aa9c:	b29b      	uxth	r3, r3
 801aa9e:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801aaa2:	b280      	uxth	r0, r0
 801aaa4:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 801aaa8:	f103 0c01 	add.w	ip, r3, #1
 801aaac:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801aab0:	1c43      	adds	r3, r0, #1
 801aab2:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801aab6:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801aaba:	0940      	lsrs	r0, r0, #5
 801aabc:	ea4c 0c0b 	orr.w	ip, ip, fp
 801aac0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801aac4:	ea4c 0c00 	orr.w	ip, ip, r0
 801aac8:	f824 cb02 	strh.w	ip, [r4], #2
 801aacc:	e7bf      	b.n	801aa4e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801aace:	f8be 3000 	ldrh.w	r3, [lr]
 801aad2:	eba3 0308 	sub.w	r3, r3, r8
 801aad6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801aada:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801aade:	eba3 0308 	sub.w	r3, r3, r8
 801aae2:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801aae6:	e7ae      	b.n	801aa46 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 801aae8:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801aaec:	f8d9 0000 	ldr.w	r0, [r9]
 801aaf0:	42ac      	cmp	r4, r5
 801aaf2:	6803      	ldr	r3, [r0, #0]
 801aaf4:	d20e      	bcs.n	801ab14 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801aaf6:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 801aafa:	4632      	mov	r2, r6
 801aafc:	463b      	mov	r3, r7
 801aafe:	4621      	mov	r1, r4
 801ab00:	47c0      	blx	r8
 801ab02:	f8ba 3000 	ldrh.w	r3, [sl]
 801ab06:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ab0a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801ab0e:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801ab12:	e7eb      	b.n	801aaec <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 801ab14:	4b02      	ldr	r3, [pc, #8]	; (801ab20 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801ab16:	6818      	ldr	r0, [r3, #0]
 801ab18:	6803      	ldr	r3, [r0, #0]
 801ab1a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ab1c:	4798      	blx	r3
 801ab1e:	e76c      	b.n	801a9fa <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801ab20:	200137bc 	.word	0x200137bc
 801ab24:	200137b6 	.word	0x200137b6

0801ab28 <_ZN8touchgfx8LCD16bppD0Ev>:
 801ab28:	b510      	push	{r4, lr}
 801ab2a:	2184      	movs	r1, #132	; 0x84
 801ab2c:	4604      	mov	r4, r0
 801ab2e:	f00c fd26 	bl	802757e <_ZdlPvj>
 801ab32:	4620      	mov	r0, r4
 801ab34:	bd10      	pop	{r4, pc}

0801ab36 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 801ab36:	b510      	push	{r4, lr}
 801ab38:	2104      	movs	r1, #4
 801ab3a:	4604      	mov	r4, r0
 801ab3c:	f00c fd1f 	bl	802757e <_ZdlPvj>
 801ab40:	4620      	mov	r0, r4
 801ab42:	bd10      	pop	{r4, pc}

0801ab44 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 801ab44:	b510      	push	{r4, lr}
 801ab46:	2104      	movs	r1, #4
 801ab48:	4604      	mov	r4, r0
 801ab4a:	f00c fd18 	bl	802757e <_ZdlPvj>
 801ab4e:	4620      	mov	r0, r4
 801ab50:	bd10      	pop	{r4, pc}

0801ab52 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 801ab52:	b510      	push	{r4, lr}
 801ab54:	f640 0144 	movw	r1, #2116	; 0x844
 801ab58:	4604      	mov	r4, r0
 801ab5a:	f00c fd10 	bl	802757e <_ZdlPvj>
 801ab5e:	4620      	mov	r0, r4
 801ab60:	bd10      	pop	{r4, pc}

0801ab62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801ab62:	b510      	push	{r4, lr}
 801ab64:	2104      	movs	r1, #4
 801ab66:	4604      	mov	r4, r0
 801ab68:	f00c fd09 	bl	802757e <_ZdlPvj>
 801ab6c:	4620      	mov	r0, r4
 801ab6e:	bd10      	pop	{r4, pc}

0801ab70 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801ab70:	b510      	push	{r4, lr}
 801ab72:	2104      	movs	r1, #4
 801ab74:	4604      	mov	r4, r0
 801ab76:	f00c fd02 	bl	802757e <_ZdlPvj>
 801ab7a:	4620      	mov	r0, r4
 801ab7c:	bd10      	pop	{r4, pc}

0801ab7e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801ab7e:	b510      	push	{r4, lr}
 801ab80:	2104      	movs	r1, #4
 801ab82:	4604      	mov	r4, r0
 801ab84:	f00c fcfb 	bl	802757e <_ZdlPvj>
 801ab88:	4620      	mov	r0, r4
 801ab8a:	bd10      	pop	{r4, pc}

0801ab8c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801ab8c:	b510      	push	{r4, lr}
 801ab8e:	2104      	movs	r1, #4
 801ab90:	4604      	mov	r4, r0
 801ab92:	f00c fcf4 	bl	802757e <_ZdlPvj>
 801ab96:	4620      	mov	r0, r4
 801ab98:	bd10      	pop	{r4, pc}

0801ab9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801ab9a:	b510      	push	{r4, lr}
 801ab9c:	2104      	movs	r1, #4
 801ab9e:	4604      	mov	r4, r0
 801aba0:	f00c fced 	bl	802757e <_ZdlPvj>
 801aba4:	4620      	mov	r0, r4
 801aba6:	bd10      	pop	{r4, pc}

0801aba8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801aba8:	b510      	push	{r4, lr}
 801abaa:	2104      	movs	r1, #4
 801abac:	4604      	mov	r4, r0
 801abae:	f00c fce6 	bl	802757e <_ZdlPvj>
 801abb2:	4620      	mov	r0, r4
 801abb4:	bd10      	pop	{r4, pc}

0801abb6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801abb6:	b510      	push	{r4, lr}
 801abb8:	2104      	movs	r1, #4
 801abba:	4604      	mov	r4, r0
 801abbc:	f00c fcdf 	bl	802757e <_ZdlPvj>
 801abc0:	4620      	mov	r0, r4
 801abc2:	bd10      	pop	{r4, pc}

0801abc4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801abc4:	b510      	push	{r4, lr}
 801abc6:	2104      	movs	r1, #4
 801abc8:	4604      	mov	r4, r0
 801abca:	f00c fcd8 	bl	802757e <_ZdlPvj>
 801abce:	4620      	mov	r0, r4
 801abd0:	bd10      	pop	{r4, pc}

0801abd2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801abd2:	b510      	push	{r4, lr}
 801abd4:	2104      	movs	r1, #4
 801abd6:	4604      	mov	r4, r0
 801abd8:	f00c fcd1 	bl	802757e <_ZdlPvj>
 801abdc:	4620      	mov	r0, r4
 801abde:	bd10      	pop	{r4, pc}

0801abe0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801abe0:	b510      	push	{r4, lr}
 801abe2:	2104      	movs	r1, #4
 801abe4:	4604      	mov	r4, r0
 801abe6:	f00c fcca 	bl	802757e <_ZdlPvj>
 801abea:	4620      	mov	r0, r4
 801abec:	bd10      	pop	{r4, pc}

0801abee <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801abee:	b510      	push	{r4, lr}
 801abf0:	2104      	movs	r1, #4
 801abf2:	4604      	mov	r4, r0
 801abf4:	f00c fcc3 	bl	802757e <_ZdlPvj>
 801abf8:	4620      	mov	r0, r4
 801abfa:	bd10      	pop	{r4, pc}

0801abfc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801abfc:	b510      	push	{r4, lr}
 801abfe:	2104      	movs	r1, #4
 801ac00:	4604      	mov	r4, r0
 801ac02:	f00c fcbc 	bl	802757e <_ZdlPvj>
 801ac06:	4620      	mov	r0, r4
 801ac08:	bd10      	pop	{r4, pc}

0801ac0a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801ac0a:	b510      	push	{r4, lr}
 801ac0c:	2104      	movs	r1, #4
 801ac0e:	4604      	mov	r4, r0
 801ac10:	f00c fcb5 	bl	802757e <_ZdlPvj>
 801ac14:	4620      	mov	r0, r4
 801ac16:	bd10      	pop	{r4, pc}

0801ac18 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801ac18:	b510      	push	{r4, lr}
 801ac1a:	2104      	movs	r1, #4
 801ac1c:	4604      	mov	r4, r0
 801ac1e:	f00c fcae 	bl	802757e <_ZdlPvj>
 801ac22:	4620      	mov	r0, r4
 801ac24:	bd10      	pop	{r4, pc}

0801ac26 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801ac26:	b510      	push	{r4, lr}
 801ac28:	2104      	movs	r1, #4
 801ac2a:	4604      	mov	r4, r0
 801ac2c:	f00c fca7 	bl	802757e <_ZdlPvj>
 801ac30:	4620      	mov	r0, r4
 801ac32:	bd10      	pop	{r4, pc}

0801ac34 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801ac34:	b510      	push	{r4, lr}
 801ac36:	2104      	movs	r1, #4
 801ac38:	4604      	mov	r4, r0
 801ac3a:	f00c fca0 	bl	802757e <_ZdlPvj>
 801ac3e:	4620      	mov	r0, r4
 801ac40:	bd10      	pop	{r4, pc}

0801ac42 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801ac42:	b510      	push	{r4, lr}
 801ac44:	2104      	movs	r1, #4
 801ac46:	4604      	mov	r4, r0
 801ac48:	f00c fc99 	bl	802757e <_ZdlPvj>
 801ac4c:	4620      	mov	r0, r4
 801ac4e:	bd10      	pop	{r4, pc}

0801ac50 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801ac50:	b510      	push	{r4, lr}
 801ac52:	2104      	movs	r1, #4
 801ac54:	4604      	mov	r4, r0
 801ac56:	f00c fc92 	bl	802757e <_ZdlPvj>
 801ac5a:	4620      	mov	r0, r4
 801ac5c:	bd10      	pop	{r4, pc}

0801ac5e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801ac5e:	b510      	push	{r4, lr}
 801ac60:	2104      	movs	r1, #4
 801ac62:	4604      	mov	r4, r0
 801ac64:	f00c fc8b 	bl	802757e <_ZdlPvj>
 801ac68:	4620      	mov	r0, r4
 801ac6a:	bd10      	pop	{r4, pc}

0801ac6c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801ac6c:	b510      	push	{r4, lr}
 801ac6e:	2104      	movs	r1, #4
 801ac70:	4604      	mov	r4, r0
 801ac72:	f00c fc84 	bl	802757e <_ZdlPvj>
 801ac76:	4620      	mov	r0, r4
 801ac78:	bd10      	pop	{r4, pc}

0801ac7a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801ac7a:	b510      	push	{r4, lr}
 801ac7c:	2104      	movs	r1, #4
 801ac7e:	4604      	mov	r4, r0
 801ac80:	f00c fc7d 	bl	802757e <_ZdlPvj>
 801ac84:	4620      	mov	r0, r4
 801ac86:	bd10      	pop	{r4, pc}

0801ac88 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801ac88:	b510      	push	{r4, lr}
 801ac8a:	2104      	movs	r1, #4
 801ac8c:	4604      	mov	r4, r0
 801ac8e:	f00c fc76 	bl	802757e <_ZdlPvj>
 801ac92:	4620      	mov	r0, r4
 801ac94:	bd10      	pop	{r4, pc}

0801ac96 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801ac96:	b510      	push	{r4, lr}
 801ac98:	2104      	movs	r1, #4
 801ac9a:	4604      	mov	r4, r0
 801ac9c:	f00c fc6f 	bl	802757e <_ZdlPvj>
 801aca0:	4620      	mov	r0, r4
 801aca2:	bd10      	pop	{r4, pc}

0801aca4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801aca4:	b510      	push	{r4, lr}
 801aca6:	2104      	movs	r1, #4
 801aca8:	4604      	mov	r4, r0
 801acaa:	f00c fc68 	bl	802757e <_ZdlPvj>
 801acae:	4620      	mov	r0, r4
 801acb0:	bd10      	pop	{r4, pc}

0801acb2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801acb2:	b510      	push	{r4, lr}
 801acb4:	2104      	movs	r1, #4
 801acb6:	4604      	mov	r4, r0
 801acb8:	f00c fc61 	bl	802757e <_ZdlPvj>
 801acbc:	4620      	mov	r0, r4
 801acbe:	bd10      	pop	{r4, pc}

0801acc0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801acc0:	b510      	push	{r4, lr}
 801acc2:	2104      	movs	r1, #4
 801acc4:	4604      	mov	r4, r0
 801acc6:	f00c fc5a 	bl	802757e <_ZdlPvj>
 801acca:	4620      	mov	r0, r4
 801accc:	bd10      	pop	{r4, pc}

0801acce <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801acce:	b510      	push	{r4, lr}
 801acd0:	2104      	movs	r1, #4
 801acd2:	4604      	mov	r4, r0
 801acd4:	f00c fc53 	bl	802757e <_ZdlPvj>
 801acd8:	4620      	mov	r0, r4
 801acda:	bd10      	pop	{r4, pc}

0801acdc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801acdc:	b510      	push	{r4, lr}
 801acde:	2104      	movs	r1, #4
 801ace0:	4604      	mov	r4, r0
 801ace2:	f00c fc4c 	bl	802757e <_ZdlPvj>
 801ace6:	4620      	mov	r0, r4
 801ace8:	bd10      	pop	{r4, pc}
	...

0801acec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801acec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801acf0:	b08f      	sub	sp, #60	; 0x3c
 801acf2:	461c      	mov	r4, r3
 801acf4:	9205      	str	r2, [sp, #20]
 801acf6:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801acfa:	9100      	str	r1, [sp, #0]
 801acfc:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801acfe:	9201      	str	r2, [sp, #4]
 801ad00:	2a00      	cmp	r2, #0
 801ad02:	f000 8115 	beq.w	801af30 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 801ad06:	6820      	ldr	r0, [r4, #0]
 801ad08:	6861      	ldr	r1, [r4, #4]
 801ad0a:	aa0a      	add	r2, sp, #40	; 0x28
 801ad0c:	c203      	stmia	r2!, {r0, r1}
 801ad0e:	6818      	ldr	r0, [r3, #0]
 801ad10:	6859      	ldr	r1, [r3, #4]
 801ad12:	aa0c      	add	r2, sp, #48	; 0x30
 801ad14:	c203      	stmia	r2!, {r0, r1}
 801ad16:	a80a      	add	r0, sp, #40	; 0x28
 801ad18:	f7f9 fd1e 	bl	8014758 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ad1c:	4621      	mov	r1, r4
 801ad1e:	a80c      	add	r0, sp, #48	; 0x30
 801ad20:	f7f9 fd5e 	bl	80147e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ad24:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801ad28:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801ad2c:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801ad30:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801ad34:	bfde      	ittt	le
 801ad36:	b2b3      	uxthle	r3, r6
 801ad38:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801ad3c:	fb92 f3f3 	sdivle	r3, r2, r3
 801ad40:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801ad44:	bfc8      	it	gt
 801ad46:	2301      	movgt	r3, #1
 801ad48:	fb92 f1f3 	sdiv	r1, r2, r3
 801ad4c:	fa1f fc81 	uxth.w	ip, r1
 801ad50:	fb0c 2413 	mls	r4, ip, r3, r2
 801ad54:	fb14 f406 	smulbb	r4, r4, r6
 801ad58:	441d      	add	r5, r3
 801ad5a:	4404      	add	r4, r0
 801ad5c:	4661      	mov	r1, ip
 801ad5e:	3d01      	subs	r5, #1
 801ad60:	b2a4      	uxth	r4, r4
 801ad62:	fb95 f5f3 	sdiv	r5, r5, r3
 801ad66:	b131      	cbz	r1, 801ad76 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 801ad68:	9b05      	ldr	r3, [sp, #20]
 801ad6a:	9900      	ldr	r1, [sp, #0]
 801ad6c:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801ad70:	ba1b      	rev	r3, r3
 801ad72:	4419      	add	r1, r3
 801ad74:	9100      	str	r1, [sp, #0]
 801ad76:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801ad7a:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 801ad7e:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801ad82:	4418      	add	r0, r3
 801ad84:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801ad88:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801ad8c:	441a      	add	r2, r3
 801ad8e:	4b6a      	ldr	r3, [pc, #424]	; (801af38 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801ad90:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801ad94:	6818      	ldr	r0, [r3, #0]
 801ad96:	6803      	ldr	r3, [r0, #0]
 801ad98:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ad9a:	4798      	blx	r3
 801ad9c:	4967      	ldr	r1, [pc, #412]	; (801af3c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 801ad9e:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801ada2:	880b      	ldrh	r3, [r1, #0]
 801ada4:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801ada8:	9109      	str	r1, [sp, #36]	; 0x24
 801adaa:	fb03 c202 	mla	r2, r3, r2, ip
 801adae:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801adb2:	4373      	muls	r3, r6
 801adb4:	b2ad      	uxth	r5, r5
 801adb6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801adba:	00ad      	lsls	r5, r5, #2
 801adbc:	9306      	str	r3, [sp, #24]
 801adbe:	1d2b      	adds	r3, r5, #4
 801adc0:	9307      	str	r3, [sp, #28]
 801adc2:	9b01      	ldr	r3, [sp, #4]
 801adc4:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801adc8:	9103      	str	r1, [sp, #12]
 801adca:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
 801adce:	2c00      	cmp	r4, #0
 801add0:	bf0c      	ite	eq
 801add2:	46c6      	moveq	lr, r8
 801add4:	f04f 0e00 	movne.w	lr, #0
 801add8:	2300      	movs	r3, #0
 801adda:	b292      	uxth	r2, r2
 801addc:	fa1f fe8e 	uxth.w	lr, lr
 801ade0:	9302      	str	r3, [sp, #8]
 801ade2:	9204      	str	r2, [sp, #16]
 801ade4:	9a06      	ldr	r2, [sp, #24]
 801ade6:	4282      	cmp	r2, r0
 801ade8:	f240 809d 	bls.w	801af26 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 801adec:	b963      	cbnz	r3, 801ae08 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801adee:	9b00      	ldr	r3, [sp, #0]
 801adf0:	781a      	ldrb	r2, [r3, #0]
 801adf2:	0993      	lsrs	r3, r2, #6
 801adf4:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801adf8:	9202      	str	r2, [sp, #8]
 801adfa:	1e5a      	subs	r2, r3, #1
 801adfc:	2a02      	cmp	r2, #2
 801adfe:	d815      	bhi.n	801ae2c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 801ae00:	9a00      	ldr	r2, [sp, #0]
 801ae02:	3201      	adds	r2, #1
 801ae04:	9200      	str	r2, [sp, #0]
 801ae06:	b29b      	uxth	r3, r3
 801ae08:	b1b4      	cbz	r4, 801ae38 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 801ae0a:	429c      	cmp	r4, r3
 801ae0c:	bf95      	itete	ls
 801ae0e:	1b1c      	subls	r4, r3, r4
 801ae10:	1ae4      	subhi	r4, r4, r3
 801ae12:	fa1f fa84 	uxthls.w	sl, r4
 801ae16:	b2a4      	uxthhi	r4, r4
 801ae18:	bf87      	ittee	hi
 801ae1a:	4671      	movhi	r1, lr
 801ae1c:	f04f 0a00 	movhi.w	sl, #0
 801ae20:	fa1f f188 	uxthls.w	r1, r8
 801ae24:	2400      	movls	r4, #0
 801ae26:	4653      	mov	r3, sl
 801ae28:	468e      	mov	lr, r1
 801ae2a:	e7db      	b.n	801ade4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 801ae2c:	9a00      	ldr	r2, [sp, #0]
 801ae2e:	9b00      	ldr	r3, [sp, #0]
 801ae30:	3202      	adds	r2, #2
 801ae32:	785b      	ldrb	r3, [r3, #1]
 801ae34:	9200      	str	r2, [sp, #0]
 801ae36:	e7e7      	b.n	801ae08 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801ae38:	2202      	movs	r2, #2
 801ae3a:	4615      	mov	r5, r2
 801ae3c:	9907      	ldr	r1, [sp, #28]
 801ae3e:	9a02      	ldr	r2, [sp, #8]
 801ae40:	fb15 1202 	smlabb	r2, r5, r2, r1
 801ae44:	9905      	ldr	r1, [sp, #20]
 801ae46:	4573      	cmp	r3, lr
 801ae48:	f831 c002 	ldrh.w	ip, [r1, r2]
 801ae4c:	9a01      	ldr	r2, [sp, #4]
 801ae4e:	bf2b      	itete	cs
 801ae50:	eba3 0a0e 	subcs.w	sl, r3, lr
 801ae54:	ebae 0103 	subcc.w	r1, lr, r3
 801ae58:	46f1      	movcs	r9, lr
 801ae5a:	4699      	movcc	r9, r3
 801ae5c:	bf27      	ittee	cs
 801ae5e:	fa1f fa8a 	uxthcs.w	sl, sl
 801ae62:	4621      	movcs	r1, r4
 801ae64:	b289      	uxthcc	r1, r1
 801ae66:	46a2      	movcc	sl, r4
 801ae68:	2aff      	cmp	r2, #255	; 0xff
 801ae6a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801ae6e:	d105      	bne.n	801ae7c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801ae70:	4481      	add	r9, r0
 801ae72:	4581      	cmp	r9, r0
 801ae74:	d045      	beq.n	801af02 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801ae76:	f820 cb02 	strh.w	ip, [r0], #2
 801ae7a:	e7fa      	b.n	801ae72 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 801ae7c:	9d03      	ldr	r5, [sp, #12]
 801ae7e:	ea4f 222c 	mov.w	r2, ip, asr #8
 801ae82:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801ae86:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801ae8a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801ae8e:	436a      	muls	r2, r5
 801ae90:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801ae94:	fa5f fc8c 	uxtb.w	ip, ip
 801ae98:	9208      	str	r2, [sp, #32]
 801ae9a:	fb0b fb05 	mul.w	fp, fp, r5
 801ae9e:	fb0c fc05 	mul.w	ip, ip, r5
 801aea2:	4481      	add	r9, r0
 801aea4:	4581      	cmp	r9, r0
 801aea6:	d02c      	beq.n	801af02 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801aea8:	8802      	ldrh	r2, [r0, #0]
 801aeaa:	9d04      	ldr	r5, [sp, #16]
 801aeac:	9f04      	ldr	r7, [sp, #16]
 801aeae:	1216      	asrs	r6, r2, #8
 801aeb0:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801aeb4:	fb16 f605 	smulbb	r6, r6, r5
 801aeb8:	9d08      	ldr	r5, [sp, #32]
 801aeba:	442e      	add	r6, r5
 801aebc:	10d5      	asrs	r5, r2, #3
 801aebe:	00d2      	lsls	r2, r2, #3
 801aec0:	b2d2      	uxtb	r2, r2
 801aec2:	fb12 f207 	smulbb	r2, r2, r7
 801aec6:	b2b6      	uxth	r6, r6
 801aec8:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801aecc:	4462      	add	r2, ip
 801aece:	fb15 f507 	smulbb	r5, r5, r7
 801aed2:	b292      	uxth	r2, r2
 801aed4:	1c77      	adds	r7, r6, #1
 801aed6:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801aeda:	1c57      	adds	r7, r2, #1
 801aedc:	445d      	add	r5, fp
 801aede:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 801aee2:	b2ad      	uxth	r5, r5
 801aee4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801aee8:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801aeec:	4316      	orrs	r6, r2
 801aeee:	1c6a      	adds	r2, r5, #1
 801aef0:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801aef4:	096d      	lsrs	r5, r5, #5
 801aef6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801aefa:	432e      	orrs	r6, r5
 801aefc:	f820 6b02 	strh.w	r6, [r0], #2
 801af00:	e7d0      	b.n	801aea4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 801af02:	4573      	cmp	r3, lr
 801af04:	d38f      	bcc.n	801ae26 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801af06:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801af0a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801af0c:	fa1f f188 	uxth.w	r1, r8
 801af10:	1a64      	subs	r4, r4, r1
 801af12:	881b      	ldrh	r3, [r3, #0]
 801af14:	b2a4      	uxth	r4, r4
 801af16:	2c00      	cmp	r4, #0
 801af18:	eba3 0308 	sub.w	r3, r3, r8
 801af1c:	bf18      	it	ne
 801af1e:	2100      	movne	r1, #0
 801af20:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801af24:	e77f      	b.n	801ae26 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801af26:	4b04      	ldr	r3, [pc, #16]	; (801af38 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801af28:	6818      	ldr	r0, [r3, #0]
 801af2a:	6803      	ldr	r3, [r0, #0]
 801af2c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801af2e:	4798      	blx	r3
 801af30:	b00f      	add	sp, #60	; 0x3c
 801af32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801af36:	bf00      	nop
 801af38:	200137bc 	.word	0x200137bc
 801af3c:	200137b6 	.word	0x200137b6

0801af40 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801af40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801af44:	b09f      	sub	sp, #124	; 0x7c
 801af46:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801af4a:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801af4e:	9209      	str	r2, [sp, #36]	; 0x24
 801af50:	461d      	mov	r5, r3
 801af52:	4604      	mov	r4, r0
 801af54:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801af56:	2a00      	cmp	r2, #0
 801af58:	f000 81eb 	beq.w	801b332 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 801af5c:	6828      	ldr	r0, [r5, #0]
 801af5e:	6869      	ldr	r1, [r5, #4]
 801af60:	aa1a      	add	r2, sp, #104	; 0x68
 801af62:	c203      	stmia	r2!, {r0, r1}
 801af64:	6818      	ldr	r0, [r3, #0]
 801af66:	6859      	ldr	r1, [r3, #4]
 801af68:	aa1c      	add	r2, sp, #112	; 0x70
 801af6a:	c203      	stmia	r2!, {r0, r1}
 801af6c:	a81a      	add	r0, sp, #104	; 0x68
 801af6e:	f7f9 fbf3 	bl	8014758 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801af72:	4629      	mov	r1, r5
 801af74:	a81c      	add	r0, sp, #112	; 0x70
 801af76:	f7f9 fc33 	bl	80147e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801af7a:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801af7e:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
 801af82:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
 801af86:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801af8a:	bfd7      	itett	le
 801af8c:	b29a      	uxthle	r2, r3
 801af8e:	2201      	movgt	r2, #1
 801af90:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801af94:	fb91 f2f2 	sdivle	r2, r1, r2
 801af98:	9202      	str	r2, [sp, #8]
 801af9a:	9802      	ldr	r0, [sp, #8]
 801af9c:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801afa0:	fb92 f0f0 	sdiv	r0, r2, r0
 801afa4:	b280      	uxth	r0, r0
 801afa6:	9010      	str	r0, [sp, #64]	; 0x40
 801afa8:	9902      	ldr	r1, [sp, #8]
 801afaa:	9802      	ldr	r0, [sp, #8]
 801afac:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801afae:	4488      	add	r8, r1
 801afb0:	fb05 2510 	mls	r5, r5, r0, r2
 801afb4:	fb15 f503 	smulbb	r5, r5, r3
 801afb8:	f108 38ff 	add.w	r8, r8, #4294967295
 801afbc:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801afc0:	fb98 f8f1 	sdiv	r8, r8, r1
 801afc4:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801afc8:	440d      	add	r5, r1
 801afca:	4419      	add	r1, r3
 801afcc:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801afd0:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801afd4:	441a      	add	r2, r3
 801afd6:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801afda:	9304      	str	r3, [sp, #16]
 801afdc:	4b95      	ldr	r3, [pc, #596]	; (801b234 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801afde:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801afe2:	6818      	ldr	r0, [r3, #0]
 801afe4:	6803      	ldr	r3, [r0, #0]
 801afe6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801afe8:	4798      	blx	r3
 801afea:	4b93      	ldr	r3, [pc, #588]	; (801b238 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801afec:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801aff0:	881a      	ldrh	r2, [r3, #0]
 801aff2:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801aff6:	9318      	str	r3, [sp, #96]	; 0x60
 801aff8:	fb02 7101 	mla	r1, r2, r1, r7
 801affc:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801b000:	4356      	muls	r6, r2
 801b002:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 801b006:	f108 0801 	add.w	r8, r8, #1
 801b00a:	920a      	str	r2, [sp, #40]	; 0x28
 801b00c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b00e:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 801b012:	930f      	str	r3, [sp, #60]	; 0x3c
 801b014:	fa1f f888 	uxth.w	r8, r8
 801b018:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 801b01c:	f108 0204 	add.w	r2, r8, #4
 801b020:	9211      	str	r2, [sp, #68]	; 0x44
 801b022:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801b024:	4b85      	ldr	r3, [pc, #532]	; (801b23c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801b026:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
 801b02a:	b2ad      	uxth	r5, r5
 801b02c:	9215      	str	r2, [sp, #84]	; 0x54
 801b02e:	2d00      	cmp	r5, #0
 801b030:	9a04      	ldr	r2, [sp, #16]
 801b032:	f04f 0100 	mov.w	r1, #0
 801b036:	bf18      	it	ne
 801b038:	2200      	movne	r2, #0
 801b03a:	1b1b      	subs	r3, r3, r4
 801b03c:	b292      	uxth	r2, r2
 801b03e:	910d      	str	r1, [sp, #52]	; 0x34
 801b040:	9319      	str	r3, [sp, #100]	; 0x64
 801b042:	9910      	ldr	r1, [sp, #64]	; 0x40
 801b044:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b046:	fa11 f383 	uxtah	r3, r1, r3
 801b04a:	9914      	ldr	r1, [sp, #80]	; 0x50
 801b04c:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801b050:	3304      	adds	r3, #4
 801b052:	9306      	str	r3, [sp, #24]
 801b054:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b056:	4283      	cmp	r3, r0
 801b058:	f240 8166 	bls.w	801b328 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 801b05c:	9902      	ldr	r1, [sp, #8]
 801b05e:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801b062:	fbb5 f3f3 	udiv	r3, r5, r3
 801b066:	1acb      	subs	r3, r1, r3
 801b068:	b29b      	uxth	r3, r3
 801b06a:	9316      	str	r3, [sp, #88]	; 0x58
 801b06c:	9b06      	ldr	r3, [sp, #24]
 801b06e:	9e06      	ldr	r6, [sp, #24]
 801b070:	7859      	ldrb	r1, [r3, #1]
 801b072:	789b      	ldrb	r3, [r3, #2]
 801b074:	7836      	ldrb	r6, [r6, #0]
 801b076:	9612      	str	r6, [sp, #72]	; 0x48
 801b078:	021b      	lsls	r3, r3, #8
 801b07a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 801b07e:	9906      	ldr	r1, [sp, #24]
 801b080:	78c9      	ldrb	r1, [r1, #3]
 801b082:	430b      	orrs	r3, r1
 801b084:	9913      	ldr	r1, [sp, #76]	; 0x4c
 801b086:	3601      	adds	r6, #1
 801b088:	4419      	add	r1, r3
 801b08a:	9605      	str	r6, [sp, #20]
 801b08c:	1c4e      	adds	r6, r1, #1
 801b08e:	9603      	str	r6, [sp, #12]
 801b090:	7849      	ldrb	r1, [r1, #1]
 801b092:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801b094:	0209      	lsls	r1, r1, #8
 801b096:	5cf3      	ldrb	r3, [r6, r3]
 801b098:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
 801b09c:	4319      	orrs	r1, r3
 801b09e:	b28b      	uxth	r3, r1
 801b0a0:	930c      	str	r3, [sp, #48]	; 0x30
 801b0a2:	2300      	movs	r3, #0
 801b0a4:	f04f 0a01 	mov.w	sl, #1
 801b0a8:	9307      	str	r3, [sp, #28]
 801b0aa:	469c      	mov	ip, r3
 801b0ac:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801b0b0:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801b0b4:	46d3      	mov	fp, sl
 801b0b6:	4657      	mov	r7, sl
 801b0b8:	930e      	str	r3, [sp, #56]	; 0x38
 801b0ba:	2d00      	cmp	r5, #0
 801b0bc:	d07e      	beq.n	801b1bc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 801b0be:	42af      	cmp	r7, r5
 801b0c0:	d26e      	bcs.n	801b1a0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 801b0c2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b0c4:	9201      	str	r2, [sp, #4]
 801b0c6:	1bed      	subs	r5, r5, r7
 801b0c8:	4283      	cmp	r3, r0
 801b0ca:	b2ad      	uxth	r5, r5
 801b0cc:	d802      	bhi.n	801b0d4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 801b0ce:	e073      	b.n	801b1b8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 801b0d0:	2b00      	cmp	r3, #0
 801b0d2:	d15f      	bne.n	801b194 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 801b0d4:	9b03      	ldr	r3, [sp, #12]
 801b0d6:	785b      	ldrb	r3, [r3, #1]
 801b0d8:	f1cb 0207 	rsb	r2, fp, #7
 801b0dc:	4093      	lsls	r3, r2
 801b0de:	005b      	lsls	r3, r3, #1
 801b0e0:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801b0e4:	9b03      	ldr	r3, [sp, #12]
 801b0e6:	781b      	ldrb	r3, [r3, #0]
 801b0e8:	fa43 f30b 	asr.w	r3, r3, fp
 801b0ec:	b2db      	uxtb	r3, r3
 801b0ee:	4313      	orrs	r3, r2
 801b0f0:	f10b 0201 	add.w	r2, fp, #1
 801b0f4:	fa5f fb82 	uxtb.w	fp, r2
 801b0f8:	9a03      	ldr	r2, [sp, #12]
 801b0fa:	f1bb 0f08 	cmp.w	fp, #8
 801b0fe:	bf15      	itete	ne
 801b100:	3201      	addne	r2, #1
 801b102:	3202      	addeq	r2, #2
 801b104:	9203      	strne	r2, [sp, #12]
 801b106:	9203      	streq	r2, [sp, #12]
 801b108:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b10a:	b29f      	uxth	r7, r3
 801b10c:	bf08      	it	eq
 801b10e:	f04f 0b00 	moveq.w	fp, #0
 801b112:	42ba      	cmp	r2, r7
 801b114:	d309      	bcc.n	801b12a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 801b116:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801b11a:	2301      	movs	r3, #1
 801b11c:	9a05      	ldr	r2, [sp, #20]
 801b11e:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 801b122:	d30e      	bcc.n	801b142 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 801b124:	469a      	mov	sl, r3
 801b126:	2600      	movs	r6, #0
 801b128:	e035      	b.n	801b196 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 801b12a:	9b05      	ldr	r3, [sp, #20]
 801b12c:	429f      	cmp	r7, r3
 801b12e:	d318      	bcc.n	801b162 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 801b130:	eb04 030a 	add.w	r3, r4, sl
 801b134:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
 801b138:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
 801b13c:	f10a 0301 	add.w	r3, sl, #1
 801b140:	b29b      	uxth	r3, r3
 801b142:	9a05      	ldr	r2, [sp, #20]
 801b144:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801b148:	990c      	ldr	r1, [sp, #48]	; 0x30
 801b14a:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801b14e:	7116      	strb	r6, [r2, #4]
 801b150:	f10a 0601 	add.w	r6, sl, #1
 801b154:	80d1      	strh	r1, [r2, #6]
 801b156:	7156      	strb	r6, [r2, #5]
 801b158:	9a05      	ldr	r2, [sp, #20]
 801b15a:	3201      	adds	r2, #1
 801b15c:	b292      	uxth	r2, r2
 801b15e:	9205      	str	r2, [sp, #20]
 801b160:	e7e0      	b.n	801b124 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 801b162:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 801b166:	463a      	mov	r2, r7
 801b168:	795b      	ldrb	r3, [r3, #5]
 801b16a:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801b16e:	4426      	add	r6, r4
 801b170:	9919      	ldr	r1, [sp, #100]	; 0x64
 801b172:	eb01 0c06 	add.w	ip, r1, r6
 801b176:	f1bc 0f00 	cmp.w	ip, #0
 801b17a:	dd07      	ble.n	801b18c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 801b17c:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801b180:	f892 c004 	ldrb.w	ip, [r2, #4]
 801b184:	f806 cd01 	strb.w	ip, [r6, #-1]!
 801b188:	88d2      	ldrh	r2, [r2, #6]
 801b18a:	e7f1      	b.n	801b170 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 801b18c:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801b190:	b29b      	uxth	r3, r3
 801b192:	e7c3      	b.n	801b11c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 801b194:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801b196:	970c      	str	r7, [sp, #48]	; 0x30
 801b198:	9a01      	ldr	r2, [sp, #4]
 801b19a:	46b4      	mov	ip, r6
 801b19c:	461f      	mov	r7, r3
 801b19e:	e78c      	b.n	801b0ba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 801b1a0:	1b7b      	subs	r3, r7, r5
 801b1a2:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801b1a6:	9201      	str	r2, [sp, #4]
 801b1a8:	eb0c 0605 	add.w	r6, ip, r5
 801b1ac:	b29b      	uxth	r3, r3
 801b1ae:	b2b6      	uxth	r6, r6
 801b1b0:	2500      	movs	r5, #0
 801b1b2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801b1b4:	4282      	cmp	r2, r0
 801b1b6:	d88b      	bhi.n	801b0d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801b1b8:	9a01      	ldr	r2, [sp, #4]
 801b1ba:	e74b      	b.n	801b054 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 801b1bc:	4297      	cmp	r7, r2
 801b1be:	d332      	bcc.n	801b226 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 801b1c0:	1abb      	subs	r3, r7, r2
 801b1c2:	b29b      	uxth	r3, r3
 801b1c4:	9208      	str	r2, [sp, #32]
 801b1c6:	9501      	str	r5, [sp, #4]
 801b1c8:	9909      	ldr	r1, [sp, #36]	; 0x24
 801b1ca:	29ff      	cmp	r1, #255	; 0xff
 801b1cc:	9908      	ldr	r1, [sp, #32]
 801b1ce:	eb0c 0601 	add.w	r6, ip, r1
 801b1d2:	d135      	bne.n	801b240 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 801b1d4:	f1a0 0e02 	sub.w	lr, r0, #2
 801b1d8:	b2b6      	uxth	r6, r6
 801b1da:	45b4      	cmp	ip, r6
 801b1dc:	f040 808c 	bne.w	801b2f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 801b1e0:	9908      	ldr	r1, [sp, #32]
 801b1e2:	4297      	cmp	r7, r2
 801b1e4:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801b1e8:	d3e2      	bcc.n	801b1b0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 801b1ea:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801b1ec:	9904      	ldr	r1, [sp, #16]
 801b1ee:	8812      	ldrh	r2, [r2, #0]
 801b1f0:	1a52      	subs	r2, r2, r1
 801b1f2:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801b1f6:	9a07      	ldr	r2, [sp, #28]
 801b1f8:	9916      	ldr	r1, [sp, #88]	; 0x58
 801b1fa:	3201      	adds	r2, #1
 801b1fc:	428a      	cmp	r2, r1
 801b1fe:	9207      	str	r2, [sp, #28]
 801b200:	f040 8087 	bne.w	801b312 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 801b204:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801b208:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
 801b20c:	9b04      	ldr	r3, [sp, #16]
 801b20e:	1bed      	subs	r5, r5, r7
 801b210:	b2ad      	uxth	r5, r5
 801b212:	2d00      	cmp	r5, #0
 801b214:	bf08      	it	eq
 801b216:	461a      	moveq	r2, r3
 801b218:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b21a:	bf18      	it	ne
 801b21c:	2200      	movne	r2, #0
 801b21e:	3301      	adds	r3, #1
 801b220:	930d      	str	r3, [sp, #52]	; 0x34
 801b222:	b292      	uxth	r2, r2
 801b224:	e70d      	b.n	801b042 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 801b226:	1bd1      	subs	r1, r2, r7
 801b228:	b28b      	uxth	r3, r1
 801b22a:	9301      	str	r3, [sp, #4]
 801b22c:	9708      	str	r7, [sp, #32]
 801b22e:	462b      	mov	r3, r5
 801b230:	e7ca      	b.n	801b1c8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 801b232:	bf00      	nop
 801b234:	200137bc 	.word	0x200137bc
 801b238:	200137b6 	.word	0x200137b6
 801b23c:	fffff7fb 	.word	0xfffff7fb
 801b240:	b2b6      	uxth	r6, r6
 801b242:	900b      	str	r0, [sp, #44]	; 0x2c
 801b244:	45b4      	cmp	ip, r6
 801b246:	d0cb      	beq.n	801b1e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 801b248:	f10c 0101 	add.w	r1, ip, #1
 801b24c:	44a4      	add	ip, r4
 801b24e:	9117      	str	r1, [sp, #92]	; 0x5c
 801b250:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801b254:	9911      	ldr	r1, [sp, #68]	; 0x44
 801b256:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801b25a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801b25c:	f8b1 c000 	ldrh.w	ip, [r1]
 801b260:	990e      	ldr	r1, [sp, #56]	; 0x38
 801b262:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 801b266:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801b26a:	fb1e fe01 	smulbb	lr, lr, r1
 801b26e:	ea4f 2825 	mov.w	r8, r5, asr #8
 801b272:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801b274:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801b278:	fb08 e801 	mla	r8, r8, r1, lr
 801b27c:	ea4f 09ec 	mov.w	r9, ip, asr #3
 801b280:	990e      	ldr	r1, [sp, #56]	; 0x38
 801b282:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801b286:	fb19 f901 	smulbb	r9, r9, r1
 801b28a:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 801b28e:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801b290:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801b294:	fb0e 9e01 	mla	lr, lr, r1, r9
 801b298:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b29c:	990e      	ldr	r1, [sp, #56]	; 0x38
 801b29e:	fa5f fc8c 	uxtb.w	ip, ip
 801b2a2:	fb1c fc01 	smulbb	ip, ip, r1
 801b2a6:	00ed      	lsls	r5, r5, #3
 801b2a8:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801b2aa:	b2ed      	uxtb	r5, r5
 801b2ac:	fb05 c501 	mla	r5, r5, r1, ip
 801b2b0:	fa1f f888 	uxth.w	r8, r8
 801b2b4:	fa1f fe8e 	uxth.w	lr, lr
 801b2b8:	b2ad      	uxth	r5, r5
 801b2ba:	f108 0c01 	add.w	ip, r8, #1
 801b2be:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801b2c2:	f10e 0901 	add.w	r9, lr, #1
 801b2c6:	f105 0c01 	add.w	ip, r5, #1
 801b2ca:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801b2ce:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 801b2d2:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801b2d6:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801b2da:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801b2de:	ea4c 0808 	orr.w	r8, ip, r8
 801b2e2:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801b2e4:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
 801b2e8:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801b2ec:	ea48 0809 	orr.w	r8, r8, r9
 801b2f0:	f821 8b02 	strh.w	r8, [r1], #2
 801b2f4:	910b      	str	r1, [sp, #44]	; 0x2c
 801b2f6:	e7a5      	b.n	801b244 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 801b2f8:	f10c 0801 	add.w	r8, ip, #1
 801b2fc:	44a4      	add	ip, r4
 801b2fe:	9911      	ldr	r1, [sp, #68]	; 0x44
 801b300:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801b304:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801b308:	f82e 5f02 	strh.w	r5, [lr, #2]!
 801b30c:	fa1f fc88 	uxth.w	ip, r8
 801b310:	e763      	b.n	801b1da <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 801b312:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801b316:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801b31a:	1aad      	subs	r5, r5, r2
 801b31c:	b2ad      	uxth	r5, r5
 801b31e:	2d00      	cmp	r5, #0
 801b320:	bf18      	it	ne
 801b322:	2200      	movne	r2, #0
 801b324:	9201      	str	r2, [sp, #4]
 801b326:	e744      	b.n	801b1b2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 801b328:	4b03      	ldr	r3, [pc, #12]	; (801b338 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 801b32a:	6818      	ldr	r0, [r3, #0]
 801b32c:	6803      	ldr	r3, [r0, #0]
 801b32e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b330:	4798      	blx	r3
 801b332:	b01f      	add	sp, #124	; 0x7c
 801b334:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b338:	200137bc 	.word	0x200137bc

0801b33c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801b33c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b340:	b08f      	sub	sp, #60	; 0x3c
 801b342:	461c      	mov	r4, r3
 801b344:	9203      	str	r2, [sp, #12]
 801b346:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801b34a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801b34c:	9202      	str	r2, [sp, #8]
 801b34e:	460f      	mov	r7, r1
 801b350:	2a00      	cmp	r2, #0
 801b352:	f000 8128 	beq.w	801b5a6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 801b356:	6820      	ldr	r0, [r4, #0]
 801b358:	6861      	ldr	r1, [r4, #4]
 801b35a:	aa0a      	add	r2, sp, #40	; 0x28
 801b35c:	c203      	stmia	r2!, {r0, r1}
 801b35e:	6818      	ldr	r0, [r3, #0]
 801b360:	6859      	ldr	r1, [r3, #4]
 801b362:	aa0c      	add	r2, sp, #48	; 0x30
 801b364:	c203      	stmia	r2!, {r0, r1}
 801b366:	a80a      	add	r0, sp, #40	; 0x28
 801b368:	f7f9 f9f6 	bl	8014758 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b36c:	4621      	mov	r1, r4
 801b36e:	a80c      	add	r0, sp, #48	; 0x30
 801b370:	f7f9 fa36 	bl	80147e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b374:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801b378:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801b37c:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801b380:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801b384:	bfde      	ittt	le
 801b386:	b2b3      	uxthle	r3, r6
 801b388:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801b38c:	fb92 f3f3 	sdivle	r3, r2, r3
 801b390:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801b394:	bfc8      	it	gt
 801b396:	2301      	movgt	r3, #1
 801b398:	fb92 f1f3 	sdiv	r1, r2, r3
 801b39c:	fa1f fc81 	uxth.w	ip, r1
 801b3a0:	fb0c 2413 	mls	r4, ip, r3, r2
 801b3a4:	fb14 f406 	smulbb	r4, r4, r6
 801b3a8:	441d      	add	r5, r3
 801b3aa:	4404      	add	r4, r0
 801b3ac:	4661      	mov	r1, ip
 801b3ae:	3d01      	subs	r5, #1
 801b3b0:	b2a4      	uxth	r4, r4
 801b3b2:	fb95 f5f3 	sdiv	r5, r5, r3
 801b3b6:	b121      	cbz	r1, 801b3c2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 801b3b8:	9b03      	ldr	r3, [sp, #12]
 801b3ba:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801b3be:	ba1b      	rev	r3, r3
 801b3c0:	441f      	add	r7, r3
 801b3c2:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801b3c6:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801b3ca:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801b3ce:	4418      	add	r0, r3
 801b3d0:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801b3d4:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801b3d8:	441a      	add	r2, r3
 801b3da:	4b74      	ldr	r3, [pc, #464]	; (801b5ac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801b3dc:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801b3e0:	6818      	ldr	r0, [r3, #0]
 801b3e2:	6803      	ldr	r3, [r0, #0]
 801b3e4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b3e6:	4798      	blx	r3
 801b3e8:	4a71      	ldr	r2, [pc, #452]	; (801b5b0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 801b3ea:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 801b3ee:	8813      	ldrh	r3, [r2, #0]
 801b3f0:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801b3f4:	9209      	str	r2, [sp, #36]	; 0x24
 801b3f6:	fb03 c101 	mla	r1, r3, r1, ip
 801b3fa:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801b3fe:	4373      	muls	r3, r6
 801b400:	b2ad      	uxth	r5, r5
 801b402:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801b406:	00ad      	lsls	r5, r5, #2
 801b408:	2c00      	cmp	r4, #0
 801b40a:	9304      	str	r3, [sp, #16]
 801b40c:	f105 0304 	add.w	r3, r5, #4
 801b410:	9305      	str	r3, [sp, #20]
 801b412:	bf0c      	ite	eq
 801b414:	46c8      	moveq	r8, r9
 801b416:	f04f 0800 	movne.w	r8, #0
 801b41a:	2300      	movs	r3, #0
 801b41c:	fa1f f888 	uxth.w	r8, r8
 801b420:	9301      	str	r3, [sp, #4]
 801b422:	9a04      	ldr	r2, [sp, #16]
 801b424:	4282      	cmp	r2, r0
 801b426:	f240 80b9 	bls.w	801b59c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 801b42a:	b95b      	cbnz	r3, 801b444 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 801b42c:	783a      	ldrb	r2, [r7, #0]
 801b42e:	0993      	lsrs	r3, r2, #6
 801b430:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801b434:	9201      	str	r2, [sp, #4]
 801b436:	1e5a      	subs	r2, r3, #1
 801b438:	2a02      	cmp	r2, #2
 801b43a:	bf8d      	iteet	hi
 801b43c:	787b      	ldrbhi	r3, [r7, #1]
 801b43e:	3701      	addls	r7, #1
 801b440:	b29b      	uxthls	r3, r3
 801b442:	3702      	addhi	r7, #2
 801b444:	b184      	cbz	r4, 801b468 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 801b446:	429c      	cmp	r4, r3
 801b448:	bf95      	itete	ls
 801b44a:	1b1c      	subls	r4, r3, r4
 801b44c:	1ae4      	subhi	r4, r4, r3
 801b44e:	fa1f fa84 	uxthls.w	sl, r4
 801b452:	b2a4      	uxthhi	r4, r4
 801b454:	bf87      	ittee	hi
 801b456:	46c4      	movhi	ip, r8
 801b458:	f04f 0a00 	movhi.w	sl, #0
 801b45c:	fa1f fc89 	uxthls.w	ip, r9
 801b460:	2400      	movls	r4, #0
 801b462:	4653      	mov	r3, sl
 801b464:	46e0      	mov	r8, ip
 801b466:	e7dc      	b.n	801b422 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 801b468:	2204      	movs	r2, #4
 801b46a:	4615      	mov	r5, r2
 801b46c:	9905      	ldr	r1, [sp, #20]
 801b46e:	9a01      	ldr	r2, [sp, #4]
 801b470:	fb15 1202 	smlabb	r2, r5, r2, r1
 801b474:	9903      	ldr	r1, [sp, #12]
 801b476:	588a      	ldr	r2, [r1, r2]
 801b478:	4543      	cmp	r3, r8
 801b47a:	bf27      	ittee	cs
 801b47c:	eba3 0a08 	subcs.w	sl, r3, r8
 801b480:	46c6      	movcs	lr, r8
 801b482:	eba8 0c03 	subcc.w	ip, r8, r3
 801b486:	469e      	movcc	lr, r3
 801b488:	ea4f 6112 	mov.w	r1, r2, lsr #24
 801b48c:	bf27      	ittee	cs
 801b48e:	fa1f fa8a 	uxthcs.w	sl, sl
 801b492:	46a4      	movcs	ip, r4
 801b494:	fa1f fc8c 	uxthcc.w	ip, ip
 801b498:	46a2      	movcc	sl, r4
 801b49a:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801b49e:	2900      	cmp	r1, #0
 801b4a0:	d066      	beq.n	801b570 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 801b4a2:	29ff      	cmp	r1, #255	; 0xff
 801b4a4:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801b4a8:	d114      	bne.n	801b4d4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801b4aa:	9d02      	ldr	r5, [sp, #8]
 801b4ac:	2dff      	cmp	r5, #255	; 0xff
 801b4ae:	d111      	bne.n	801b4d4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801b4b0:	0951      	lsrs	r1, r2, #5
 801b4b2:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801b4b6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801b4ba:	f026 0607 	bic.w	r6, r6, #7
 801b4be:	430e      	orrs	r6, r1
 801b4c0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801b4c4:	4316      	orrs	r6, r2
 801b4c6:	b2b6      	uxth	r6, r6
 801b4c8:	4486      	add	lr, r0
 801b4ca:	4586      	cmp	lr, r0
 801b4cc:	d051      	beq.n	801b572 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801b4ce:	f820 6b02 	strh.w	r6, [r0], #2
 801b4d2:	e7fa      	b.n	801b4ca <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 801b4d4:	9d02      	ldr	r5, [sp, #8]
 801b4d6:	4369      	muls	r1, r5
 801b4d8:	1c4d      	adds	r5, r1, #1
 801b4da:	eb05 2521 	add.w	r5, r5, r1, asr #8
 801b4de:	122d      	asrs	r5, r5, #8
 801b4e0:	ea6f 0b05 	mvn.w	fp, r5
 801b4e4:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801b4e8:	b2ad      	uxth	r5, r5
 801b4ea:	b2f6      	uxtb	r6, r6
 801b4ec:	b2d2      	uxtb	r2, r2
 801b4ee:	fb11 f105 	smulbb	r1, r1, r5
 801b4f2:	fb16 f605 	smulbb	r6, r6, r5
 801b4f6:	fb12 f205 	smulbb	r2, r2, r5
 801b4fa:	b289      	uxth	r1, r1
 801b4fc:	b2b6      	uxth	r6, r6
 801b4fe:	b292      	uxth	r2, r2
 801b500:	9106      	str	r1, [sp, #24]
 801b502:	9607      	str	r6, [sp, #28]
 801b504:	9208      	str	r2, [sp, #32]
 801b506:	4486      	add	lr, r0
 801b508:	fa5f fb8b 	uxtb.w	fp, fp
 801b50c:	4586      	cmp	lr, r0
 801b50e:	d030      	beq.n	801b572 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801b510:	8802      	ldrh	r2, [r0, #0]
 801b512:	9906      	ldr	r1, [sp, #24]
 801b514:	1216      	asrs	r6, r2, #8
 801b516:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801b51a:	10d5      	asrs	r5, r2, #3
 801b51c:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801b520:	fb06 160b 	mla	r6, r6, fp, r1
 801b524:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801b528:	9907      	ldr	r1, [sp, #28]
 801b52a:	00d2      	lsls	r2, r2, #3
 801b52c:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801b530:	fb05 150b 	mla	r5, r5, fp, r1
 801b534:	b2d2      	uxtb	r2, r2
 801b536:	9908      	ldr	r1, [sp, #32]
 801b538:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801b53c:	b2b6      	uxth	r6, r6
 801b53e:	fb02 120b 	mla	r2, r2, fp, r1
 801b542:	b292      	uxth	r2, r2
 801b544:	1c71      	adds	r1, r6, #1
 801b546:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 801b54a:	1c51      	adds	r1, r2, #1
 801b54c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801b550:	b2ad      	uxth	r5, r5
 801b552:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b556:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801b55a:	4316      	orrs	r6, r2
 801b55c:	1c6a      	adds	r2, r5, #1
 801b55e:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801b562:	096d      	lsrs	r5, r5, #5
 801b564:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b568:	432e      	orrs	r6, r5
 801b56a:	f820 6b02 	strh.w	r6, [r0], #2
 801b56e:	e7cd      	b.n	801b50c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 801b570:	4470      	add	r0, lr
 801b572:	4543      	cmp	r3, r8
 801b574:	f4ff af75 	bcc.w	801b462 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801b578:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801b57c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b57e:	fa1f fc89 	uxth.w	ip, r9
 801b582:	eba4 040c 	sub.w	r4, r4, ip
 801b586:	881b      	ldrh	r3, [r3, #0]
 801b588:	b2a4      	uxth	r4, r4
 801b58a:	2c00      	cmp	r4, #0
 801b58c:	eba3 0309 	sub.w	r3, r3, r9
 801b590:	bf18      	it	ne
 801b592:	f04f 0c00 	movne.w	ip, #0
 801b596:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b59a:	e762      	b.n	801b462 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801b59c:	4b03      	ldr	r3, [pc, #12]	; (801b5ac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801b59e:	6818      	ldr	r0, [r3, #0]
 801b5a0:	6803      	ldr	r3, [r0, #0]
 801b5a2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b5a4:	4798      	blx	r3
 801b5a6:	b00f      	add	sp, #60	; 0x3c
 801b5a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b5ac:	200137bc 	.word	0x200137bc
 801b5b0:	200137b6 	.word	0x200137b6

0801b5b4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801b5b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b5b8:	b093      	sub	sp, #76	; 0x4c
 801b5ba:	461c      	mov	r4, r3
 801b5bc:	9205      	str	r2, [sp, #20]
 801b5be:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
 801b5c2:	9101      	str	r1, [sp, #4]
 801b5c4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801b5c6:	9202      	str	r2, [sp, #8]
 801b5c8:	2a00      	cmp	r2, #0
 801b5ca:	f000 812c 	beq.w	801b826 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801b5ce:	6820      	ldr	r0, [r4, #0]
 801b5d0:	6861      	ldr	r1, [r4, #4]
 801b5d2:	aa0e      	add	r2, sp, #56	; 0x38
 801b5d4:	c203      	stmia	r2!, {r0, r1}
 801b5d6:	6818      	ldr	r0, [r3, #0]
 801b5d8:	6859      	ldr	r1, [r3, #4]
 801b5da:	aa10      	add	r2, sp, #64	; 0x40
 801b5dc:	c203      	stmia	r2!, {r0, r1}
 801b5de:	a80e      	add	r0, sp, #56	; 0x38
 801b5e0:	f7f9 f8ba 	bl	8014758 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b5e4:	4621      	mov	r1, r4
 801b5e6:	a810      	add	r0, sp, #64	; 0x40
 801b5e8:	f7f9 f8fa 	bl	80147e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b5ec:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801b5f0:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 801b5f4:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 801b5f8:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801b5fc:	bfde      	ittt	le
 801b5fe:	b2b3      	uxthle	r3, r6
 801b600:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801b604:	fb92 f3f3 	sdivle	r3, r2, r3
 801b608:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801b60c:	bfc8      	it	gt
 801b60e:	2301      	movgt	r3, #1
 801b610:	fb92 f1f3 	sdiv	r1, r2, r3
 801b614:	fa1f fc81 	uxth.w	ip, r1
 801b618:	fb0c 2413 	mls	r4, ip, r3, r2
 801b61c:	fb14 f406 	smulbb	r4, r4, r6
 801b620:	441d      	add	r5, r3
 801b622:	4404      	add	r4, r0
 801b624:	4661      	mov	r1, ip
 801b626:	3d01      	subs	r5, #1
 801b628:	b2a4      	uxth	r4, r4
 801b62a:	fb95 f5f3 	sdiv	r5, r5, r3
 801b62e:	b131      	cbz	r1, 801b63e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 801b630:	9b05      	ldr	r3, [sp, #20]
 801b632:	9901      	ldr	r1, [sp, #4]
 801b634:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801b638:	ba1b      	rev	r3, r3
 801b63a:	4419      	add	r1, r3
 801b63c:	9101      	str	r1, [sp, #4]
 801b63e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801b642:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801b646:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
 801b64a:	4418      	add	r0, r3
 801b64c:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 801b650:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
 801b654:	441a      	add	r2, r3
 801b656:	4b75      	ldr	r3, [pc, #468]	; (801b82c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801b658:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 801b65c:	6818      	ldr	r0, [r3, #0]
 801b65e:	6803      	ldr	r3, [r0, #0]
 801b660:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b662:	4798      	blx	r3
 801b664:	4972      	ldr	r1, [pc, #456]	; (801b830 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801b666:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
 801b66a:	880b      	ldrh	r3, [r1, #0]
 801b66c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801b670:	910d      	str	r1, [sp, #52]	; 0x34
 801b672:	fb03 c202 	mla	r2, r3, r2, ip
 801b676:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801b67a:	4373      	muls	r3, r6
 801b67c:	b2ad      	uxth	r5, r5
 801b67e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801b682:	00ad      	lsls	r5, r5, #2
 801b684:	9308      	str	r3, [sp, #32]
 801b686:	1d2b      	adds	r3, r5, #4
 801b688:	9309      	str	r3, [sp, #36]	; 0x24
 801b68a:	9b02      	ldr	r3, [sp, #8]
 801b68c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801b690:	9106      	str	r1, [sp, #24]
 801b692:	43da      	mvns	r2, r3
 801b694:	2c00      	cmp	r4, #0
 801b696:	bf0c      	ite	eq
 801b698:	46dc      	moveq	ip, fp
 801b69a:	f04f 0c00 	movne.w	ip, #0
 801b69e:	2300      	movs	r3, #0
 801b6a0:	b2d2      	uxtb	r2, r2
 801b6a2:	fa1f fc8c 	uxth.w	ip, ip
 801b6a6:	9303      	str	r3, [sp, #12]
 801b6a8:	9207      	str	r2, [sp, #28]
 801b6aa:	9a08      	ldr	r2, [sp, #32]
 801b6ac:	4282      	cmp	r2, r0
 801b6ae:	f240 80b5 	bls.w	801b81c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801b6b2:	b963      	cbnz	r3, 801b6ce <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801b6b4:	9b01      	ldr	r3, [sp, #4]
 801b6b6:	781a      	ldrb	r2, [r3, #0]
 801b6b8:	0993      	lsrs	r3, r2, #6
 801b6ba:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801b6be:	9203      	str	r2, [sp, #12]
 801b6c0:	1e5a      	subs	r2, r3, #1
 801b6c2:	2a02      	cmp	r2, #2
 801b6c4:	d815      	bhi.n	801b6f2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 801b6c6:	9a01      	ldr	r2, [sp, #4]
 801b6c8:	3201      	adds	r2, #1
 801b6ca:	9201      	str	r2, [sp, #4]
 801b6cc:	b29b      	uxth	r3, r3
 801b6ce:	b1b4      	cbz	r4, 801b6fe <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 801b6d0:	429c      	cmp	r4, r3
 801b6d2:	bf95      	itete	ls
 801b6d4:	1b1c      	subls	r4, r3, r4
 801b6d6:	1ae4      	subhi	r4, r4, r3
 801b6d8:	fa1f f884 	uxthls.w	r8, r4
 801b6dc:	b2a4      	uxthhi	r4, r4
 801b6de:	bf87      	ittee	hi
 801b6e0:	4666      	movhi	r6, ip
 801b6e2:	f04f 0800 	movhi.w	r8, #0
 801b6e6:	fa1f f68b 	uxthls.w	r6, fp
 801b6ea:	2400      	movls	r4, #0
 801b6ec:	4643      	mov	r3, r8
 801b6ee:	46b4      	mov	ip, r6
 801b6f0:	e7db      	b.n	801b6aa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 801b6f2:	9a01      	ldr	r2, [sp, #4]
 801b6f4:	9b01      	ldr	r3, [sp, #4]
 801b6f6:	3202      	adds	r2, #2
 801b6f8:	785b      	ldrb	r3, [r3, #1]
 801b6fa:	9201      	str	r2, [sp, #4]
 801b6fc:	e7e7      	b.n	801b6ce <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801b6fe:	2203      	movs	r2, #3
 801b700:	4615      	mov	r5, r2
 801b702:	9909      	ldr	r1, [sp, #36]	; 0x24
 801b704:	9a03      	ldr	r2, [sp, #12]
 801b706:	fb15 1202 	smlabb	r2, r5, r2, r1
 801b70a:	9905      	ldr	r1, [sp, #20]
 801b70c:	4563      	cmp	r3, ip
 801b70e:	eb01 0502 	add.w	r5, r1, r2
 801b712:	9902      	ldr	r1, [sp, #8]
 801b714:	bf29      	itett	cs
 801b716:	eba3 080c 	subcs.w	r8, r3, ip
 801b71a:	ebac 0603 	subcc.w	r6, ip, r3
 801b71e:	fa1f f888 	uxthcs.w	r8, r8
 801b722:	46e1      	movcs	r9, ip
 801b724:	bf2f      	iteee	cs
 801b726:	4626      	movcs	r6, r4
 801b728:	b2b6      	uxthcc	r6, r6
 801b72a:	4699      	movcc	r9, r3
 801b72c:	46a0      	movcc	r8, r4
 801b72e:	29ff      	cmp	r1, #255	; 0xff
 801b730:	d04a      	beq.n	801b7c8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 801b732:	9f06      	ldr	r7, [sp, #24]
 801b734:	78a9      	ldrb	r1, [r5, #2]
 801b736:	9004      	str	r0, [sp, #16]
 801b738:	4379      	muls	r1, r7
 801b73a:	910a      	str	r1, [sp, #40]	; 0x28
 801b73c:	7869      	ldrb	r1, [r5, #1]
 801b73e:	4379      	muls	r1, r7
 801b740:	910b      	str	r1, [sp, #44]	; 0x2c
 801b742:	9905      	ldr	r1, [sp, #20]
 801b744:	5c8a      	ldrb	r2, [r1, r2]
 801b746:	437a      	muls	r2, r7
 801b748:	920c      	str	r2, [sp, #48]	; 0x30
 801b74a:	46ca      	mov	sl, r9
 801b74c:	f1ba 0f00 	cmp.w	sl, #0
 801b750:	d03d      	beq.n	801b7ce <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 801b752:	9a04      	ldr	r2, [sp, #16]
 801b754:	9f07      	ldr	r7, [sp, #28]
 801b756:	8812      	ldrh	r2, [r2, #0]
 801b758:	1215      	asrs	r5, r2, #8
 801b75a:	46be      	mov	lr, r7
 801b75c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801b760:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801b762:	10d1      	asrs	r1, r2, #3
 801b764:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801b768:	fb05 750e 	mla	r5, r5, lr, r7
 801b76c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801b770:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801b772:	00d2      	lsls	r2, r2, #3
 801b774:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801b778:	fb01 710e 	mla	r1, r1, lr, r7
 801b77c:	b2d2      	uxtb	r2, r2
 801b77e:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801b780:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801b784:	b2ad      	uxth	r5, r5
 801b786:	fb02 720e 	mla	r2, r2, lr, r7
 801b78a:	b292      	uxth	r2, r2
 801b78c:	f105 0e01 	add.w	lr, r5, #1
 801b790:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801b794:	f102 0e01 	add.w	lr, r2, #1
 801b798:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801b79c:	b289      	uxth	r1, r1
 801b79e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b7a2:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801b7a6:	4315      	orrs	r5, r2
 801b7a8:	1c4a      	adds	r2, r1, #1
 801b7aa:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801b7ae:	0949      	lsrs	r1, r1, #5
 801b7b0:	9a04      	ldr	r2, [sp, #16]
 801b7b2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801b7b6:	430d      	orrs	r5, r1
 801b7b8:	f822 5b02 	strh.w	r5, [r2], #2
 801b7bc:	f10a 3aff 	add.w	sl, sl, #4294967295
 801b7c0:	9204      	str	r2, [sp, #16]
 801b7c2:	fa1f fa8a 	uxth.w	sl, sl
 801b7c6:	e7c1      	b.n	801b74c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 801b7c8:	4649      	mov	r1, r9
 801b7ca:	4686      	mov	lr, r0
 801b7cc:	b999      	cbnz	r1, 801b7f6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801b7ce:	4563      	cmp	r3, ip
 801b7d0:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 801b7d4:	d38a      	bcc.n	801b6ec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801b7d6:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
 801b7da:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b7dc:	fa1f f68b 	uxth.w	r6, fp
 801b7e0:	1ba4      	subs	r4, r4, r6
 801b7e2:	881b      	ldrh	r3, [r3, #0]
 801b7e4:	b2a4      	uxth	r4, r4
 801b7e6:	2c00      	cmp	r4, #0
 801b7e8:	eba3 030b 	sub.w	r3, r3, fp
 801b7ec:	bf18      	it	ne
 801b7ee:	2600      	movne	r6, #0
 801b7f0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b7f4:	e77a      	b.n	801b6ec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801b7f6:	78aa      	ldrb	r2, [r5, #2]
 801b7f8:	4f0e      	ldr	r7, [pc, #56]	; (801b834 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 801b7fa:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 801b7fe:	786a      	ldrb	r2, [r5, #1]
 801b800:	00d2      	lsls	r2, r2, #3
 801b802:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b806:	ea4a 0202 	orr.w	r2, sl, r2
 801b80a:	f895 a000 	ldrb.w	sl, [r5]
 801b80e:	3901      	subs	r1, #1
 801b810:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 801b814:	f82e 2b02 	strh.w	r2, [lr], #2
 801b818:	b289      	uxth	r1, r1
 801b81a:	e7d7      	b.n	801b7cc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 801b81c:	4b03      	ldr	r3, [pc, #12]	; (801b82c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801b81e:	6818      	ldr	r0, [r3, #0]
 801b820:	6803      	ldr	r3, [r0, #0]
 801b822:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b824:	4798      	blx	r3
 801b826:	b013      	add	sp, #76	; 0x4c
 801b828:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b82c:	200137bc 	.word	0x200137bc
 801b830:	200137b6 	.word	0x200137b6
 801b834:	fffff800 	.word	0xfffff800

0801b838 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801b838:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b83c:	b09d      	sub	sp, #116	; 0x74
 801b83e:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
 801b842:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
 801b846:	920e      	str	r2, [sp, #56]	; 0x38
 801b848:	461c      	mov	r4, r3
 801b84a:	4683      	mov	fp, r0
 801b84c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801b84e:	2a00      	cmp	r2, #0
 801b850:	f000 81e0 	beq.w	801bc14 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 801b854:	6820      	ldr	r0, [r4, #0]
 801b856:	6861      	ldr	r1, [r4, #4]
 801b858:	aa18      	add	r2, sp, #96	; 0x60
 801b85a:	c203      	stmia	r2!, {r0, r1}
 801b85c:	6818      	ldr	r0, [r3, #0]
 801b85e:	6859      	ldr	r1, [r3, #4]
 801b860:	aa1a      	add	r2, sp, #104	; 0x68
 801b862:	c203      	stmia	r2!, {r0, r1}
 801b864:	a818      	add	r0, sp, #96	; 0x60
 801b866:	f7f8 ff77 	bl	8014758 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b86a:	4621      	mov	r1, r4
 801b86c:	a81a      	add	r0, sp, #104	; 0x68
 801b86e:	f7f8 ffb7 	bl	80147e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b872:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
 801b876:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
 801b87a:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801b87e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801b882:	bfd7      	itett	le
 801b884:	b29a      	uxthle	r2, r3
 801b886:	2201      	movgt	r2, #1
 801b888:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801b88c:	fb91 f2f2 	sdivle	r2, r1, r2
 801b890:	9202      	str	r2, [sp, #8]
 801b892:	9802      	ldr	r0, [sp, #8]
 801b894:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
 801b898:	fb92 f0f0 	sdiv	r0, r2, r0
 801b89c:	b280      	uxth	r0, r0
 801b89e:	900f      	str	r0, [sp, #60]	; 0x3c
 801b8a0:	9902      	ldr	r1, [sp, #8]
 801b8a2:	9802      	ldr	r0, [sp, #8]
 801b8a4:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801b8a6:	440c      	add	r4, r1
 801b8a8:	fb05 2510 	mls	r5, r5, r0, r2
 801b8ac:	fb15 f503 	smulbb	r5, r5, r3
 801b8b0:	3c01      	subs	r4, #1
 801b8b2:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
 801b8b6:	fb94 f4f1 	sdiv	r4, r4, r1
 801b8ba:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
 801b8be:	440d      	add	r5, r1
 801b8c0:	4419      	add	r1, r3
 801b8c2:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
 801b8c6:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
 801b8ca:	441a      	add	r2, r3
 801b8cc:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801b8d0:	9306      	str	r3, [sp, #24]
 801b8d2:	4bb3      	ldr	r3, [pc, #716]	; (801bba0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 801b8d4:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
 801b8d8:	6818      	ldr	r0, [r3, #0]
 801b8da:	6803      	ldr	r3, [r0, #0]
 801b8dc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b8de:	4798      	blx	r3
 801b8e0:	4bb0      	ldr	r3, [pc, #704]	; (801bba4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 801b8e2:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
 801b8e6:	881a      	ldrh	r2, [r3, #0]
 801b8e8:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
 801b8ec:	9316      	str	r3, [sp, #88]	; 0x58
 801b8ee:	fb02 7101 	mla	r1, r2, r1, r7
 801b8f2:	3401      	adds	r4, #1
 801b8f4:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 801b8f8:	b2a4      	uxth	r4, r4
 801b8fa:	4356      	muls	r6, r2
 801b8fc:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 801b900:	00a4      	lsls	r4, r4, #2
 801b902:	920a      	str	r2, [sp, #40]	; 0x28
 801b904:	1d22      	adds	r2, r4, #4
 801b906:	b2ad      	uxth	r5, r5
 801b908:	9213      	str	r2, [sp, #76]	; 0x4c
 801b90a:	4ba7      	ldr	r3, [pc, #668]	; (801bba8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 801b90c:	9a06      	ldr	r2, [sp, #24]
 801b90e:	2d00      	cmp	r5, #0
 801b910:	bf0c      	ite	eq
 801b912:	4611      	moveq	r1, r2
 801b914:	2100      	movne	r1, #0
 801b916:	2200      	movs	r2, #0
 801b918:	eba3 030b 	sub.w	r3, r3, fp
 801b91c:	b289      	uxth	r1, r1
 801b91e:	920d      	str	r2, [sp, #52]	; 0x34
 801b920:	9317      	str	r3, [sp, #92]	; 0x5c
 801b922:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b924:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b926:	fa12 f383 	uxtah	r3, r2, r3
 801b92a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b92c:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801b930:	3304      	adds	r3, #4
 801b932:	9308      	str	r3, [sp, #32]
 801b934:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b936:	4543      	cmp	r3, r8
 801b938:	f240 8167 	bls.w	801bc0a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 801b93c:	9a02      	ldr	r2, [sp, #8]
 801b93e:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 801b942:	fbb5 f3f3 	udiv	r3, r5, r3
 801b946:	1ad3      	subs	r3, r2, r3
 801b948:	b29b      	uxth	r3, r3
 801b94a:	9314      	str	r3, [sp, #80]	; 0x50
 801b94c:	9b08      	ldr	r3, [sp, #32]
 801b94e:	9808      	ldr	r0, [sp, #32]
 801b950:	785a      	ldrb	r2, [r3, #1]
 801b952:	789b      	ldrb	r3, [r3, #2]
 801b954:	7800      	ldrb	r0, [r0, #0]
 801b956:	9010      	str	r0, [sp, #64]	; 0x40
 801b958:	021b      	lsls	r3, r3, #8
 801b95a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801b95e:	9a08      	ldr	r2, [sp, #32]
 801b960:	78d2      	ldrb	r2, [r2, #3]
 801b962:	4313      	orrs	r3, r2
 801b964:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801b966:	3001      	adds	r0, #1
 801b968:	441a      	add	r2, r3
 801b96a:	9007      	str	r0, [sp, #28]
 801b96c:	1c50      	adds	r0, r2, #1
 801b96e:	9005      	str	r0, [sp, #20]
 801b970:	7852      	ldrb	r2, [r2, #1]
 801b972:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b974:	0212      	lsls	r2, r2, #8
 801b976:	5cc3      	ldrb	r3, [r0, r3]
 801b978:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801b97c:	431a      	orrs	r2, r3
 801b97e:	b293      	uxth	r3, r2
 801b980:	930b      	str	r3, [sp, #44]	; 0x2c
 801b982:	2300      	movs	r3, #0
 801b984:	9309      	str	r3, [sp, #36]	; 0x24
 801b986:	2301      	movs	r3, #1
 801b988:	9301      	str	r3, [sp, #4]
 801b98a:	9304      	str	r3, [sp, #16]
 801b98c:	2300      	movs	r3, #0
 801b98e:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
 801b992:	9303      	str	r3, [sp, #12]
 801b994:	f04f 0e01 	mov.w	lr, #1
 801b998:	2d00      	cmp	r5, #0
 801b99a:	d07c      	beq.n	801ba96 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 801b99c:	45ae      	cmp	lr, r5
 801b99e:	d26b      	bcs.n	801ba78 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 801b9a0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b9a2:	eba5 050e 	sub.w	r5, r5, lr
 801b9a6:	4543      	cmp	r3, r8
 801b9a8:	b2ad      	uxth	r5, r5
 801b9aa:	460c      	mov	r4, r1
 801b9ac:	d802      	bhi.n	801b9b4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 801b9ae:	e070      	b.n	801ba92 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 801b9b0:	2b00      	cmp	r3, #0
 801b9b2:	d15c      	bne.n	801ba6e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801b9b4:	9b05      	ldr	r3, [sp, #20]
 801b9b6:	9a04      	ldr	r2, [sp, #16]
 801b9b8:	785b      	ldrb	r3, [r3, #1]
 801b9ba:	9904      	ldr	r1, [sp, #16]
 801b9bc:	f1c2 0207 	rsb	r2, r2, #7
 801b9c0:	4093      	lsls	r3, r2
 801b9c2:	005b      	lsls	r3, r3, #1
 801b9c4:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801b9c8:	9b05      	ldr	r3, [sp, #20]
 801b9ca:	781b      	ldrb	r3, [r3, #0]
 801b9cc:	410b      	asrs	r3, r1
 801b9ce:	3101      	adds	r1, #1
 801b9d0:	b2c9      	uxtb	r1, r1
 801b9d2:	2908      	cmp	r1, #8
 801b9d4:	9104      	str	r1, [sp, #16]
 801b9d6:	9905      	ldr	r1, [sp, #20]
 801b9d8:	bf0a      	itet	eq
 801b9da:	3102      	addeq	r1, #2
 801b9dc:	3101      	addne	r1, #1
 801b9de:	9105      	streq	r1, [sp, #20]
 801b9e0:	b2db      	uxtb	r3, r3
 801b9e2:	bf0a      	itet	eq
 801b9e4:	2100      	moveq	r1, #0
 801b9e6:	9105      	strne	r1, [sp, #20]
 801b9e8:	9104      	streq	r1, [sp, #16]
 801b9ea:	4313      	orrs	r3, r2
 801b9ec:	9910      	ldr	r1, [sp, #64]	; 0x40
 801b9ee:	b29a      	uxth	r2, r3
 801b9f0:	4291      	cmp	r1, r2
 801b9f2:	d30a      	bcc.n	801ba0a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 801b9f4:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
 801b9f8:	2301      	movs	r3, #1
 801b9fa:	9907      	ldr	r1, [sp, #28]
 801b9fc:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801ba00:	d30f      	bcc.n	801ba22 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 801ba02:	2100      	movs	r1, #0
 801ba04:	9301      	str	r3, [sp, #4]
 801ba06:	9103      	str	r1, [sp, #12]
 801ba08:	e032      	b.n	801ba70 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 801ba0a:	9b07      	ldr	r3, [sp, #28]
 801ba0c:	429a      	cmp	r2, r3
 801ba0e:	d318      	bcc.n	801ba42 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 801ba10:	9b01      	ldr	r3, [sp, #4]
 801ba12:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
 801ba16:	445b      	add	r3, fp
 801ba18:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801ba1c:	9b01      	ldr	r3, [sp, #4]
 801ba1e:	3301      	adds	r3, #1
 801ba20:	b29b      	uxth	r3, r3
 801ba22:	9907      	ldr	r1, [sp, #28]
 801ba24:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
 801ba28:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801ba2c:	7108      	strb	r0, [r1, #4]
 801ba2e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801ba30:	80c8      	strh	r0, [r1, #6]
 801ba32:	9801      	ldr	r0, [sp, #4]
 801ba34:	3001      	adds	r0, #1
 801ba36:	7148      	strb	r0, [r1, #5]
 801ba38:	9907      	ldr	r1, [sp, #28]
 801ba3a:	3101      	adds	r1, #1
 801ba3c:	b289      	uxth	r1, r1
 801ba3e:	9107      	str	r1, [sp, #28]
 801ba40:	e7df      	b.n	801ba02 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 801ba42:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 801ba46:	4611      	mov	r1, r2
 801ba48:	795b      	ldrb	r3, [r3, #5]
 801ba4a:	f603 0004 	addw	r0, r3, #2052	; 0x804
 801ba4e:	4458      	add	r0, fp
 801ba50:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 801ba52:	4406      	add	r6, r0
 801ba54:	2e00      	cmp	r6, #0
 801ba56:	dd06      	ble.n	801ba66 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 801ba58:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801ba5c:	790e      	ldrb	r6, [r1, #4]
 801ba5e:	f800 6d01 	strb.w	r6, [r0, #-1]!
 801ba62:	88c9      	ldrh	r1, [r1, #6]
 801ba64:	e7f4      	b.n	801ba50 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 801ba66:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
 801ba6a:	b29b      	uxth	r3, r3
 801ba6c:	e7c5      	b.n	801b9fa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 801ba6e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801ba70:	920b      	str	r2, [sp, #44]	; 0x2c
 801ba72:	4621      	mov	r1, r4
 801ba74:	469e      	mov	lr, r3
 801ba76:	e78f      	b.n	801b998 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 801ba78:	9a03      	ldr	r2, [sp, #12]
 801ba7a:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801ba7e:	442a      	add	r2, r5
 801ba80:	ebae 0305 	sub.w	r3, lr, r5
 801ba84:	b292      	uxth	r2, r2
 801ba86:	b29b      	uxth	r3, r3
 801ba88:	9203      	str	r2, [sp, #12]
 801ba8a:	2500      	movs	r5, #0
 801ba8c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801ba8e:	4542      	cmp	r2, r8
 801ba90:	d88e      	bhi.n	801b9b0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 801ba92:	4621      	mov	r1, r4
 801ba94:	e74e      	b.n	801b934 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 801ba96:	458e      	cmp	lr, r1
 801ba98:	bf29      	itett	cs
 801ba9a:	ebae 0301 	subcs.w	r3, lr, r1
 801ba9e:	eba1 040e 	subcc.w	r4, r1, lr
 801baa2:	b29b      	uxthcs	r3, r3
 801baa4:	910c      	strcs	r1, [sp, #48]	; 0x30
 801baa6:	bf2f      	iteee	cs
 801baa8:	462c      	movcs	r4, r5
 801baaa:	b2a4      	uxthcc	r4, r4
 801baac:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
 801bab0:	462b      	movcc	r3, r5
 801bab2:	f04f 0900 	mov.w	r9, #0
 801bab6:	9a03      	ldr	r2, [sp, #12]
 801bab8:	980c      	ldr	r0, [sp, #48]	; 0x30
 801baba:	444a      	add	r2, r9
 801babc:	4548      	cmp	r0, r9
 801babe:	b292      	uxth	r2, r2
 801bac0:	d074      	beq.n	801bbac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 801bac2:	445a      	add	r2, fp
 801bac4:	2004      	movs	r0, #4
 801bac6:	4605      	mov	r5, r0
 801bac8:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
 801bacc:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801bace:	fb15 0202 	smlabb	r2, r5, r2, r0
 801bad2:	9812      	ldr	r0, [sp, #72]	; 0x48
 801bad4:	5880      	ldr	r0, [r0, r2]
 801bad6:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 801bada:	d014      	beq.n	801bb06 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801badc:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801bae0:	ea4f 2510 	mov.w	r5, r0, lsr #8
 801bae4:	d112      	bne.n	801bb0c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801bae6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801bae8:	2aff      	cmp	r2, #255	; 0xff
 801baea:	d10f      	bne.n	801bb0c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801baec:	0942      	lsrs	r2, r0, #5
 801baee:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801baf2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801baf6:	f025 0507 	bic.w	r5, r5, #7
 801bafa:	4315      	orrs	r5, r2
 801bafc:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801bb00:	4305      	orrs	r5, r0
 801bb02:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 801bb06:	f109 0901 	add.w	r9, r9, #1
 801bb0a:	e7d4      	b.n	801bab6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 801bb0c:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 801bb10:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801bb14:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
 801bb18:	9215      	str	r2, [sp, #84]	; 0x54
 801bb1a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801bb1c:	fb02 fa0a 	mul.w	sl, r2, sl
 801bb20:	f10a 0201 	add.w	r2, sl, #1
 801bb24:	eb02 222a 	add.w	r2, r2, sl, asr #8
 801bb28:	ea4f 272c 	mov.w	r7, ip, asr #8
 801bb2c:	1212      	asrs	r2, r2, #8
 801bb2e:	fa1f fa82 	uxth.w	sl, r2
 801bb32:	f3c0 4607 	ubfx	r6, r0, #16, #8
 801bb36:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801bb3a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801bb3e:	43d2      	mvns	r2, r2
 801bb40:	b2d2      	uxtb	r2, r2
 801bb42:	fb16 f60a 	smulbb	r6, r6, sl
 801bb46:	fa5f fc8c 	uxtb.w	ip, ip
 801bb4a:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801bb4e:	b2c0      	uxtb	r0, r0
 801bb50:	fb07 6702 	mla	r7, r7, r2, r6
 801bb54:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 801bb58:	9e15      	ldr	r6, [sp, #84]	; 0x54
 801bb5a:	fb10 f00a 	smulbb	r0, r0, sl
 801bb5e:	fb0c 0002 	mla	r0, ip, r2, r0
 801bb62:	b2ed      	uxtb	r5, r5
 801bb64:	b2bf      	uxth	r7, r7
 801bb66:	fb15 f50a 	smulbb	r5, r5, sl
 801bb6a:	b280      	uxth	r0, r0
 801bb6c:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801bb70:	fb06 5602 	mla	r6, r6, r2, r5
 801bb74:	1c7a      	adds	r2, r7, #1
 801bb76:	1c45      	adds	r5, r0, #1
 801bb78:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801bb7c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801bb80:	b2b6      	uxth	r6, r6
 801bb82:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801bb86:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801bb8a:	432f      	orrs	r7, r5
 801bb8c:	1c75      	adds	r5, r6, #1
 801bb8e:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801bb92:	096d      	lsrs	r5, r5, #5
 801bb94:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801bb98:	432f      	orrs	r7, r5
 801bb9a:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 801bb9e:	e7b2      	b.n	801bb06 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801bba0:	200137bc 	.word	0x200137bc
 801bba4:	200137b6 	.word	0x200137b6
 801bba8:	fffff7fb 	.word	0xfffff7fb
 801bbac:	9203      	str	r2, [sp, #12]
 801bbae:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801bbb0:	458e      	cmp	lr, r1
 801bbb2:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801bbb6:	f4ff af68 	bcc.w	801ba8a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 801bbba:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801bbbc:	9906      	ldr	r1, [sp, #24]
 801bbbe:	8812      	ldrh	r2, [r2, #0]
 801bbc0:	1a52      	subs	r2, r2, r1
 801bbc2:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801bbc6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801bbc8:	9914      	ldr	r1, [sp, #80]	; 0x50
 801bbca:	3201      	adds	r2, #1
 801bbcc:	428a      	cmp	r2, r1
 801bbce:	9209      	str	r2, [sp, #36]	; 0x24
 801bbd0:	d111      	bne.n	801bbf6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 801bbd2:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
 801bbd6:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 801bbda:	9b06      	ldr	r3, [sp, #24]
 801bbdc:	eba5 0509 	sub.w	r5, r5, r9
 801bbe0:	b2ad      	uxth	r5, r5
 801bbe2:	2d00      	cmp	r5, #0
 801bbe4:	bf08      	it	eq
 801bbe6:	4619      	moveq	r1, r3
 801bbe8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bbea:	bf18      	it	ne
 801bbec:	2100      	movne	r1, #0
 801bbee:	3301      	adds	r3, #1
 801bbf0:	930d      	str	r3, [sp, #52]	; 0x34
 801bbf2:	b289      	uxth	r1, r1
 801bbf4:	e695      	b.n	801b922 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 801bbf6:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801bbfa:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 801bbfe:	1b2d      	subs	r5, r5, r4
 801bc00:	b2ad      	uxth	r5, r5
 801bc02:	2d00      	cmp	r5, #0
 801bc04:	bf18      	it	ne
 801bc06:	2400      	movne	r4, #0
 801bc08:	e740      	b.n	801ba8c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 801bc0a:	4b04      	ldr	r3, [pc, #16]	; (801bc1c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 801bc0c:	6818      	ldr	r0, [r3, #0]
 801bc0e:	6803      	ldr	r3, [r0, #0]
 801bc10:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801bc12:	4798      	blx	r3
 801bc14:	b01d      	add	sp, #116	; 0x74
 801bc16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bc1a:	bf00      	nop
 801bc1c:	200137bc 	.word	0x200137bc

0801bc20 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801bc20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bc24:	b09f      	sub	sp, #124	; 0x7c
 801bc26:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801bc2a:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801bc2e:	920a      	str	r2, [sp, #40]	; 0x28
 801bc30:	461d      	mov	r5, r3
 801bc32:	4604      	mov	r4, r0
 801bc34:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801bc36:	2a00      	cmp	r2, #0
 801bc38:	f000 81fa 	beq.w	801c030 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 801bc3c:	6828      	ldr	r0, [r5, #0]
 801bc3e:	6869      	ldr	r1, [r5, #4]
 801bc40:	aa1a      	add	r2, sp, #104	; 0x68
 801bc42:	c203      	stmia	r2!, {r0, r1}
 801bc44:	6818      	ldr	r0, [r3, #0]
 801bc46:	6859      	ldr	r1, [r3, #4]
 801bc48:	aa1c      	add	r2, sp, #112	; 0x70
 801bc4a:	c203      	stmia	r2!, {r0, r1}
 801bc4c:	a81a      	add	r0, sp, #104	; 0x68
 801bc4e:	f7f8 fd83 	bl	8014758 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801bc52:	4629      	mov	r1, r5
 801bc54:	a81c      	add	r0, sp, #112	; 0x70
 801bc56:	f7f8 fdc3 	bl	80147e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801bc5a:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801bc5e:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801bc62:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
 801bc66:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801bc6a:	bfd7      	itett	le
 801bc6c:	b29a      	uxthle	r2, r3
 801bc6e:	2201      	movgt	r2, #1
 801bc70:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801bc74:	fb91 f2f2 	sdivle	r2, r1, r2
 801bc78:	9201      	str	r2, [sp, #4]
 801bc7a:	9801      	ldr	r0, [sp, #4]
 801bc7c:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801bc80:	fb92 f0f0 	sdiv	r0, r2, r0
 801bc84:	b280      	uxth	r0, r0
 801bc86:	9010      	str	r0, [sp, #64]	; 0x40
 801bc88:	9901      	ldr	r1, [sp, #4]
 801bc8a:	9801      	ldr	r0, [sp, #4]
 801bc8c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801bc8e:	440e      	add	r6, r1
 801bc90:	fb05 2510 	mls	r5, r5, r0, r2
 801bc94:	fb15 f503 	smulbb	r5, r5, r3
 801bc98:	3e01      	subs	r6, #1
 801bc9a:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801bc9e:	fb96 f6f1 	sdiv	r6, r6, r1
 801bca2:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801bca6:	440d      	add	r5, r1
 801bca8:	4419      	add	r1, r3
 801bcaa:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801bcae:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801bcb2:	441a      	add	r2, r3
 801bcb4:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801bcb8:	9304      	str	r3, [sp, #16]
 801bcba:	4b96      	ldr	r3, [pc, #600]	; (801bf14 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801bcbc:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801bcc0:	6818      	ldr	r0, [r3, #0]
 801bcc2:	6803      	ldr	r3, [r0, #0]
 801bcc4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801bcc6:	4798      	blx	r3
 801bcc8:	4b93      	ldr	r3, [pc, #588]	; (801bf18 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801bcca:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801bcce:	881a      	ldrh	r2, [r3, #0]
 801bcd0:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
 801bcd4:	9318      	str	r3, [sp, #96]	; 0x60
 801bcd6:	fb02 c101 	mla	r1, r2, r1, ip
 801bcda:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 801bcde:	4357      	muls	r7, r2
 801bce0:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 801bce4:	3601      	adds	r6, #1
 801bce6:	920b      	str	r2, [sp, #44]	; 0x2c
 801bce8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bcea:	4b8c      	ldr	r3, [pc, #560]	; (801bf1c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801bcec:	b2b6      	uxth	r6, r6
 801bcee:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 801bcf2:	1d32      	adds	r2, r6, #4
 801bcf4:	9206      	str	r2, [sp, #24]
 801bcf6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801bcf8:	43d2      	mvns	r2, r2
 801bcfa:	b2d2      	uxtb	r2, r2
 801bcfc:	b2ad      	uxth	r5, r5
 801bcfe:	9215      	str	r2, [sp, #84]	; 0x54
 801bd00:	9a04      	ldr	r2, [sp, #16]
 801bd02:	2d00      	cmp	r5, #0
 801bd04:	bf0c      	ite	eq
 801bd06:	4611      	moveq	r1, r2
 801bd08:	2100      	movne	r1, #0
 801bd0a:	2200      	movs	r2, #0
 801bd0c:	1b1b      	subs	r3, r3, r4
 801bd0e:	b289      	uxth	r1, r1
 801bd10:	920d      	str	r2, [sp, #52]	; 0x34
 801bd12:	9319      	str	r3, [sp, #100]	; 0x64
 801bd14:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801bd16:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bd18:	fa12 f383 	uxtah	r3, r2, r3
 801bd1c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bd1e:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801bd22:	3304      	adds	r3, #4
 801bd24:	9307      	str	r3, [sp, #28]
 801bd26:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801bd28:	455b      	cmp	r3, fp
 801bd2a:	f240 817c 	bls.w	801c026 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 801bd2e:	9a01      	ldr	r2, [sp, #4]
 801bd30:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801bd34:	fbb5 f3f3 	udiv	r3, r5, r3
 801bd38:	1ad3      	subs	r3, r2, r3
 801bd3a:	b29b      	uxth	r3, r3
 801bd3c:	9316      	str	r3, [sp, #88]	; 0x58
 801bd3e:	9b07      	ldr	r3, [sp, #28]
 801bd40:	9807      	ldr	r0, [sp, #28]
 801bd42:	785a      	ldrb	r2, [r3, #1]
 801bd44:	789b      	ldrb	r3, [r3, #2]
 801bd46:	7800      	ldrb	r0, [r0, #0]
 801bd48:	9011      	str	r0, [sp, #68]	; 0x44
 801bd4a:	021b      	lsls	r3, r3, #8
 801bd4c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801bd50:	9a07      	ldr	r2, [sp, #28]
 801bd52:	78d2      	ldrb	r2, [r2, #3]
 801bd54:	4313      	orrs	r3, r2
 801bd56:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801bd58:	3001      	adds	r0, #1
 801bd5a:	441a      	add	r2, r3
 801bd5c:	9005      	str	r0, [sp, #20]
 801bd5e:	1c50      	adds	r0, r2, #1
 801bd60:	9003      	str	r0, [sp, #12]
 801bd62:	7852      	ldrb	r2, [r2, #1]
 801bd64:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801bd66:	0212      	lsls	r2, r2, #8
 801bd68:	5cc3      	ldrb	r3, [r0, r3]
 801bd6a:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801bd6e:	431a      	orrs	r2, r3
 801bd70:	b293      	uxth	r3, r2
 801bd72:	930c      	str	r3, [sp, #48]	; 0x30
 801bd74:	2300      	movs	r3, #0
 801bd76:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801bd7a:	9308      	str	r3, [sp, #32]
 801bd7c:	461a      	mov	r2, r3
 801bd7e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801bd82:	930e      	str	r3, [sp, #56]	; 0x38
 801bd84:	f04f 0801 	mov.w	r8, #1
 801bd88:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801bd8c:	f8cd 8008 	str.w	r8, [sp, #8]
 801bd90:	46c4      	mov	ip, r8
 801bd92:	930f      	str	r3, [sp, #60]	; 0x3c
 801bd94:	2d00      	cmp	r5, #0
 801bd96:	d07c      	beq.n	801be92 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801bd98:	45ac      	cmp	ip, r5
 801bd9a:	d26c      	bcs.n	801be76 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 801bd9c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801bd9e:	eba5 050c 	sub.w	r5, r5, ip
 801bda2:	455b      	cmp	r3, fp
 801bda4:	b2ad      	uxth	r5, r5
 801bda6:	4608      	mov	r0, r1
 801bda8:	d802      	bhi.n	801bdb0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 801bdaa:	e070      	b.n	801be8e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 801bdac:	2b00      	cmp	r3, #0
 801bdae:	d15c      	bne.n	801be6a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 801bdb0:	9b03      	ldr	r3, [sp, #12]
 801bdb2:	9a02      	ldr	r2, [sp, #8]
 801bdb4:	785b      	ldrb	r3, [r3, #1]
 801bdb6:	9902      	ldr	r1, [sp, #8]
 801bdb8:	f1c2 0207 	rsb	r2, r2, #7
 801bdbc:	4093      	lsls	r3, r2
 801bdbe:	005b      	lsls	r3, r3, #1
 801bdc0:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801bdc4:	9b03      	ldr	r3, [sp, #12]
 801bdc6:	781b      	ldrb	r3, [r3, #0]
 801bdc8:	410b      	asrs	r3, r1
 801bdca:	3101      	adds	r1, #1
 801bdcc:	b2c9      	uxtb	r1, r1
 801bdce:	2908      	cmp	r1, #8
 801bdd0:	9102      	str	r1, [sp, #8]
 801bdd2:	9903      	ldr	r1, [sp, #12]
 801bdd4:	bf0a      	itet	eq
 801bdd6:	3102      	addeq	r1, #2
 801bdd8:	3101      	addne	r1, #1
 801bdda:	9103      	streq	r1, [sp, #12]
 801bddc:	b2db      	uxtb	r3, r3
 801bdde:	bf0a      	itet	eq
 801bde0:	2100      	moveq	r1, #0
 801bde2:	9103      	strne	r1, [sp, #12]
 801bde4:	9102      	streq	r1, [sp, #8]
 801bde6:	4313      	orrs	r3, r2
 801bde8:	9911      	ldr	r1, [sp, #68]	; 0x44
 801bdea:	b29a      	uxth	r2, r3
 801bdec:	4291      	cmp	r1, r2
 801bdee:	d30a      	bcc.n	801be06 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 801bdf0:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801bdf4:	2301      	movs	r3, #1
 801bdf6:	9905      	ldr	r1, [sp, #20]
 801bdf8:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801bdfc:	d30f      	bcc.n	801be1e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 801bdfe:	2100      	movs	r1, #0
 801be00:	4698      	mov	r8, r3
 801be02:	9100      	str	r1, [sp, #0]
 801be04:	e032      	b.n	801be6c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 801be06:	9b05      	ldr	r3, [sp, #20]
 801be08:	429a      	cmp	r2, r3
 801be0a:	d318      	bcc.n	801be3e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 801be0c:	eb04 0308 	add.w	r3, r4, r8
 801be10:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
 801be14:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801be18:	f108 0301 	add.w	r3, r8, #1
 801be1c:	b29b      	uxth	r3, r3
 801be1e:	9905      	ldr	r1, [sp, #20]
 801be20:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801be24:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801be28:	710e      	strb	r6, [r1, #4]
 801be2a:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801be2c:	80ce      	strh	r6, [r1, #6]
 801be2e:	f108 0601 	add.w	r6, r8, #1
 801be32:	714e      	strb	r6, [r1, #5]
 801be34:	9905      	ldr	r1, [sp, #20]
 801be36:	3101      	adds	r1, #1
 801be38:	b289      	uxth	r1, r1
 801be3a:	9105      	str	r1, [sp, #20]
 801be3c:	e7df      	b.n	801bdfe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 801be3e:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 801be42:	4611      	mov	r1, r2
 801be44:	795b      	ldrb	r3, [r3, #5]
 801be46:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801be4a:	4426      	add	r6, r4
 801be4c:	9f19      	ldr	r7, [sp, #100]	; 0x64
 801be4e:	4437      	add	r7, r6
 801be50:	2f00      	cmp	r7, #0
 801be52:	dd06      	ble.n	801be62 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801be54:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801be58:	790f      	ldrb	r7, [r1, #4]
 801be5a:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801be5e:	88c9      	ldrh	r1, [r1, #6]
 801be60:	e7f4      	b.n	801be4c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 801be62:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801be66:	b29b      	uxth	r3, r3
 801be68:	e7c5      	b.n	801bdf6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 801be6a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801be6c:	920c      	str	r2, [sp, #48]	; 0x30
 801be6e:	4601      	mov	r1, r0
 801be70:	9a00      	ldr	r2, [sp, #0]
 801be72:	469c      	mov	ip, r3
 801be74:	e78e      	b.n	801bd94 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 801be76:	1957      	adds	r7, r2, r5
 801be78:	ebac 0305 	sub.w	r3, ip, r5
 801be7c:	b2ba      	uxth	r2, r7
 801be7e:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801be82:	9200      	str	r2, [sp, #0]
 801be84:	b29b      	uxth	r3, r3
 801be86:	2500      	movs	r5, #0
 801be88:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801be8a:	455a      	cmp	r2, fp
 801be8c:	d88e      	bhi.n	801bdac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 801be8e:	4601      	mov	r1, r0
 801be90:	e749      	b.n	801bd26 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 801be92:	458c      	cmp	ip, r1
 801be94:	bf2c      	ite	cs
 801be96:	4628      	movcs	r0, r5
 801be98:	462b      	movcc	r3, r5
 801be9a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801be9c:	bf27      	ittee	cs
 801be9e:	9109      	strcs	r1, [sp, #36]	; 0x24
 801bea0:	ebac 0301 	subcs.w	r3, ip, r1
 801bea4:	eba1 000c 	subcc.w	r0, r1, ip
 801bea8:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
 801beac:	bf2c      	ite	cs
 801beae:	b29b      	uxthcs	r3, r3
 801beb0:	b280      	uxthcc	r0, r0
 801beb2:	2dff      	cmp	r5, #255	; 0xff
 801beb4:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801beb6:	eb02 0705 	add.w	r7, r2, r5
 801beba:	b2bd      	uxth	r5, r7
 801bebc:	9500      	str	r5, [sp, #0]
 801bebe:	d12f      	bne.n	801bf20 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 801bec0:	465e      	mov	r6, fp
 801bec2:	9d00      	ldr	r5, [sp, #0]
 801bec4:	42aa      	cmp	r2, r5
 801bec6:	f040 8084 	bne.w	801bfd2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 801beca:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801becc:	458c      	cmp	ip, r1
 801bece:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801bed2:	d3d8      	bcc.n	801be86 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 801bed4:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801bed6:	9904      	ldr	r1, [sp, #16]
 801bed8:	8812      	ldrh	r2, [r2, #0]
 801beda:	1a52      	subs	r2, r2, r1
 801bedc:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801bee0:	9a08      	ldr	r2, [sp, #32]
 801bee2:	9916      	ldr	r1, [sp, #88]	; 0x58
 801bee4:	3201      	adds	r2, #1
 801bee6:	428a      	cmp	r2, r1
 801bee8:	9208      	str	r2, [sp, #32]
 801beea:	f040 8092 	bne.w	801c012 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 801beee:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801bef2:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
 801bef6:	9b04      	ldr	r3, [sp, #16]
 801bef8:	eba5 050c 	sub.w	r5, r5, ip
 801befc:	b2ad      	uxth	r5, r5
 801befe:	2d00      	cmp	r5, #0
 801bf00:	bf08      	it	eq
 801bf02:	4619      	moveq	r1, r3
 801bf04:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bf06:	bf18      	it	ne
 801bf08:	2100      	movne	r1, #0
 801bf0a:	3301      	adds	r3, #1
 801bf0c:	930d      	str	r3, [sp, #52]	; 0x34
 801bf0e:	b289      	uxth	r1, r1
 801bf10:	e700      	b.n	801bd14 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 801bf12:	bf00      	nop
 801bf14:	200137bc 	.word	0x200137bc
 801bf18:	200137b6 	.word	0x200137b6
 801bf1c:	fffff7fb 	.word	0xfffff7fb
 801bf20:	46d9      	mov	r9, fp
 801bf22:	9d00      	ldr	r5, [sp, #0]
 801bf24:	42aa      	cmp	r2, r5
 801bf26:	d0d0      	beq.n	801beca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 801bf28:	1c55      	adds	r5, r2, #1
 801bf2a:	4422      	add	r2, r4
 801bf2c:	9517      	str	r5, [sp, #92]	; 0x5c
 801bf2e:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
 801bf32:	9a06      	ldr	r2, [sp, #24]
 801bf34:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801bf38:	4472      	add	r2, lr
 801bf3a:	9212      	str	r2, [sp, #72]	; 0x48
 801bf3c:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801bf3e:	f8b9 2000 	ldrh.w	r2, [r9]
 801bf42:	f897 a002 	ldrb.w	sl, [r7, #2]
 801bf46:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801bf48:	1216      	asrs	r6, r2, #8
 801bf4a:	fb1a fa07 	smulbb	sl, sl, r7
 801bf4e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801bf52:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801bf54:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801bf58:	fb06 a607 	mla	r6, r6, r7, sl
 801bf5c:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801bf5e:	f897 a001 	ldrb.w	sl, [r7, #1]
 801bf62:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801bf64:	10d5      	asrs	r5, r2, #3
 801bf66:	fb1a fa07 	smulbb	sl, sl, r7
 801bf6a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801bf6e:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801bf70:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801bf74:	fb05 a507 	mla	r5, r5, r7, sl
 801bf78:	9f06      	ldr	r7, [sp, #24]
 801bf7a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801bf7e:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801bf80:	00d2      	lsls	r2, r2, #3
 801bf82:	fb1e fe07 	smulbb	lr, lr, r7
 801bf86:	b2d2      	uxtb	r2, r2
 801bf88:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801bf8a:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801bf8e:	b2b6      	uxth	r6, r6
 801bf90:	fb02 e207 	mla	r2, r2, r7, lr
 801bf94:	b292      	uxth	r2, r2
 801bf96:	b2ad      	uxth	r5, r5
 801bf98:	f106 0a01 	add.w	sl, r6, #1
 801bf9c:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801bfa0:	f102 0e01 	add.w	lr, r2, #1
 801bfa4:	f105 0a01 	add.w	sl, r5, #1
 801bfa8:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 801bfac:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801bfb0:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801bfb4:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801bfb8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801bfbc:	ea4e 0606 	orr.w	r6, lr, r6
 801bfc0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801bfc4:	ea46 060a 	orr.w	r6, r6, sl
 801bfc8:	f829 6b02 	strh.w	r6, [r9], #2
 801bfcc:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801bfd0:	e7a7      	b.n	801bf22 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 801bfd2:	f102 0e01 	add.w	lr, r2, #1
 801bfd6:	4422      	add	r2, r4
 801bfd8:	9f06      	ldr	r7, [sp, #24]
 801bfda:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
 801bfde:	9a06      	ldr	r2, [sp, #24]
 801bfe0:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801bfe4:	eb02 0a05 	add.w	sl, r2, r5
 801bfe8:	4a13      	ldr	r2, [pc, #76]	; (801c038 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 801bfea:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801bfee:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 801bff2:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801bff6:	00d2      	lsls	r2, r2, #3
 801bff8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bffc:	ea49 0202 	orr.w	r2, r9, r2
 801c000:	f817 9005 	ldrb.w	r9, [r7, r5]
 801c004:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801c008:	f826 2b02 	strh.w	r2, [r6], #2
 801c00c:	fa1f f28e 	uxth.w	r2, lr
 801c010:	e757      	b.n	801bec2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 801c012:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801c016:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801c01a:	1a2d      	subs	r5, r5, r0
 801c01c:	b2ad      	uxth	r5, r5
 801c01e:	2d00      	cmp	r5, #0
 801c020:	bf18      	it	ne
 801c022:	2000      	movne	r0, #0
 801c024:	e730      	b.n	801be88 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801c026:	4b05      	ldr	r3, [pc, #20]	; (801c03c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 801c028:	6818      	ldr	r0, [r3, #0]
 801c02a:	6803      	ldr	r3, [r0, #0]
 801c02c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c02e:	4798      	blx	r3
 801c030:	b01f      	add	sp, #124	; 0x7c
 801c032:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c036:	bf00      	nop
 801c038:	fffff800 	.word	0xfffff800
 801c03c:	200137bc 	.word	0x200137bc

0801c040 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 801c040:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c044:	b091      	sub	sp, #68	; 0x44
 801c046:	469b      	mov	fp, r3
 801c048:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 801c04c:	4616      	mov	r6, r2
 801c04e:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 801c052:	f9b3 2000 	ldrsh.w	r2, [r3]
 801c056:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801c05a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801c05e:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801c062:	4604      	mov	r4, r0
 801c064:	460d      	mov	r5, r1
 801c066:	4640      	mov	r0, r8
 801c068:	4659      	mov	r1, fp
 801c06a:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801c06e:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 801c072:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 801c076:	f7f3 fc11 	bl	800f89c <_ZN8touchgfx4RectaNERKS0_>
 801c07a:	4631      	mov	r1, r6
 801c07c:	4640      	mov	r0, r8
 801c07e:	f7f3 fc0d 	bl	800f89c <_ZN8touchgfx4RectaNERKS0_>
 801c082:	4b74      	ldr	r3, [pc, #464]	; (801c254 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 801c084:	8818      	ldrh	r0, [r3, #0]
 801c086:	4b74      	ldr	r3, [pc, #464]	; (801c258 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 801c088:	8819      	ldrh	r1, [r3, #0]
 801c08a:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801c08e:	2b00      	cmp	r3, #0
 801c090:	b202      	sxth	r2, r0
 801c092:	b20e      	sxth	r6, r1
 801c094:	da07      	bge.n	801c0a6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 801c096:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 801c09a:	4463      	add	r3, ip
 801c09c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801c0a0:	2300      	movs	r3, #0
 801c0a2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 801c0a6:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801c0aa:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801c0ae:	1ad2      	subs	r2, r2, r3
 801c0b0:	4594      	cmp	ip, r2
 801c0b2:	bfc4      	itt	gt
 801c0b4:	1ac2      	subgt	r2, r0, r3
 801c0b6:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 801c0ba:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801c0be:	2a00      	cmp	r2, #0
 801c0c0:	da07      	bge.n	801c0d2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801c0c2:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 801c0c6:	4462      	add	r2, ip
 801c0c8:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 801c0cc:	2200      	movs	r2, #0
 801c0ce:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 801c0d2:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 801c0d6:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801c0da:	eba6 060a 	sub.w	r6, r6, sl
 801c0de:	42b2      	cmp	r2, r6
 801c0e0:	bfc4      	itt	gt
 801c0e2:	eba1 020a 	subgt.w	r2, r1, sl
 801c0e6:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 801c0ea:	4a5c      	ldr	r2, [pc, #368]	; (801c25c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 801c0ec:	7812      	ldrb	r2, [r2, #0]
 801c0ee:	b9a2      	cbnz	r2, 801c11a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 801c0f0:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801c0f4:	4286      	cmp	r6, r0
 801c0f6:	4640      	mov	r0, r8
 801c0f8:	9303      	str	r3, [sp, #12]
 801c0fa:	bf14      	ite	ne
 801c0fc:	2600      	movne	r6, #0
 801c0fe:	2601      	moveq	r6, #1
 801c100:	f7f3 fc0f 	bl	800f922 <_ZNK8touchgfx4Rect7isEmptyEv>
 801c104:	9b03      	ldr	r3, [sp, #12]
 801c106:	b160      	cbz	r0, 801c122 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 801c108:	2300      	movs	r3, #0
 801c10a:	8023      	strh	r3, [r4, #0]
 801c10c:	8063      	strh	r3, [r4, #2]
 801c10e:	80a3      	strh	r3, [r4, #4]
 801c110:	4620      	mov	r0, r4
 801c112:	80e3      	strh	r3, [r4, #6]
 801c114:	b011      	add	sp, #68	; 0x44
 801c116:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c11a:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801c11e:	428e      	cmp	r6, r1
 801c120:	e7e9      	b.n	801c0f6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 801c122:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 801c126:	9205      	str	r2, [sp, #20]
 801c128:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801c12c:	9206      	str	r2, [sp, #24]
 801c12e:	f8bb 2000 	ldrh.w	r2, [fp]
 801c132:	900e      	str	r0, [sp, #56]	; 0x38
 801c134:	1a9b      	subs	r3, r3, r2
 801c136:	b21b      	sxth	r3, r3
 801c138:	9303      	str	r3, [sp, #12]
 801c13a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801c13e:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 801c142:	ebaa 0a03 	sub.w	sl, sl, r3
 801c146:	fa0f f38a 	sxth.w	r3, sl
 801c14a:	9304      	str	r3, [sp, #16]
 801c14c:	9b03      	ldr	r3, [sp, #12]
 801c14e:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 801c152:	9b04      	ldr	r3, [sp, #16]
 801c154:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801c158:	9b05      	ldr	r3, [sp, #20]
 801c15a:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801c15e:	a90e      	add	r1, sp, #56	; 0x38
 801c160:	9b06      	ldr	r3, [sp, #24]
 801c162:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801c166:	a80c      	add	r0, sp, #48	; 0x30
 801c168:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 801c16c:	f7f8 fb38 	bl	80147e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c170:	4640      	mov	r0, r8
 801c172:	f7f8 faf1 	bl	8014758 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c176:	a80e      	add	r0, sp, #56	; 0x38
 801c178:	f7f8 faee 	bl	8014758 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c17c:	4b38      	ldr	r3, [pc, #224]	; (801c260 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801c17e:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 801c182:	881b      	ldrh	r3, [r3, #0]
 801c184:	9307      	str	r3, [sp, #28]
 801c186:	682b      	ldr	r3, [r5, #0]
 801c188:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 801c264 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801c18c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801c18e:	4628      	mov	r0, r5
 801c190:	4798      	blx	r3
 801c192:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 801c196:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801c19a:	4681      	mov	r9, r0
 801c19c:	fb1a 3305 	smlabb	r3, sl, r5, r3
 801c1a0:	f8db 0000 	ldr.w	r0, [fp]
 801c1a4:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801c1a6:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801c1aa:	6803      	ldr	r3, [r0, #0]
 801c1ac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801c1ae:	4798      	blx	r3
 801c1b0:	4607      	mov	r7, r0
 801c1b2:	f8db 0000 	ldr.w	r0, [fp]
 801c1b6:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 801c1ba:	6803      	ldr	r3, [r0, #0]
 801c1bc:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801c1c0:	9109      	str	r1, [sp, #36]	; 0x24
 801c1c2:	9208      	str	r2, [sp, #32]
 801c1c4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c1c6:	4798      	blx	r3
 801c1c8:	f010 0f01 	tst.w	r0, #1
 801c1cc:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801c1d0:	d012      	beq.n	801c1f8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 801c1d2:	f8db 0000 	ldr.w	r0, [fp]
 801c1d6:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 801c1da:	6803      	ldr	r3, [r0, #0]
 801c1dc:	9200      	str	r2, [sp, #0]
 801c1de:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 801c1e0:	e898 0006 	ldmia.w	r8, {r1, r2}
 801c1e4:	462b      	mov	r3, r5
 801c1e6:	47b0      	blx	r6
 801c1e8:	9b03      	ldr	r3, [sp, #12]
 801c1ea:	8023      	strh	r3, [r4, #0]
 801c1ec:	9b04      	ldr	r3, [sp, #16]
 801c1ee:	8063      	strh	r3, [r4, #2]
 801c1f0:	9b05      	ldr	r3, [sp, #20]
 801c1f2:	80a3      	strh	r3, [r4, #4]
 801c1f4:	9b06      	ldr	r3, [sp, #24]
 801c1f6:	e78b      	b.n	801c110 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 801c1f8:	fb09 f202 	mul.w	r2, r9, r2
 801c1fc:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 801c200:	440f      	add	r7, r1
 801c202:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 801c206:	b166      	cbz	r6, 801c222 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801c208:	9a07      	ldr	r2, [sp, #28]
 801c20a:	4592      	cmp	sl, r2
 801c20c:	d109      	bne.n	801c222 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801c20e:	f8db 0000 	ldr.w	r0, [fp]
 801c212:	6802      	ldr	r2, [r0, #0]
 801c214:	fb09 f303 	mul.w	r3, r9, r3
 801c218:	6b56      	ldr	r6, [r2, #52]	; 0x34
 801c21a:	4629      	mov	r1, r5
 801c21c:	463a      	mov	r2, r7
 801c21e:	47b0      	blx	r6
 801c220:	e7e2      	b.n	801c1e8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801c222:	fb0a f303 	mul.w	r3, sl, r3
 801c226:	f8df b03c 	ldr.w	fp, [pc, #60]	; 801c264 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801c22a:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801c22e:	ea4f 064a 	mov.w	r6, sl, lsl #1
 801c232:	4545      	cmp	r5, r8
 801c234:	d2d8      	bcs.n	801c1e8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801c236:	f8db 0000 	ldr.w	r0, [fp]
 801c23a:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801c23e:	6802      	ldr	r2, [r0, #0]
 801c240:	4629      	mov	r1, r5
 801c242:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 801c246:	005b      	lsls	r3, r3, #1
 801c248:	463a      	mov	r2, r7
 801c24a:	47d0      	blx	sl
 801c24c:	444f      	add	r7, r9
 801c24e:	4435      	add	r5, r6
 801c250:	e7ef      	b.n	801c232 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801c252:	bf00      	nop
 801c254:	200137b0 	.word	0x200137b0
 801c258:	200137b2 	.word	0x200137b2
 801c25c:	200137b4 	.word	0x200137b4
 801c260:	200137b6 	.word	0x200137b6
 801c264:	200137bc 	.word	0x200137bc

0801c268 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 801c268:	b5f0      	push	{r4, r5, r6, r7, lr}
 801c26a:	4606      	mov	r6, r0
 801c26c:	b087      	sub	sp, #28
 801c26e:	460c      	mov	r4, r1
 801c270:	4617      	mov	r7, r2
 801c272:	461d      	mov	r5, r3
 801c274:	b333      	cbz	r3, 801c2c4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801c276:	4608      	mov	r0, r1
 801c278:	f7f3 fb53 	bl	800f922 <_ZNK8touchgfx4Rect7isEmptyEv>
 801c27c:	bb10      	cbnz	r0, 801c2c4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801c27e:	6820      	ldr	r0, [r4, #0]
 801c280:	6861      	ldr	r1, [r4, #4]
 801c282:	4c1c      	ldr	r4, [pc, #112]	; (801c2f4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801c284:	ab04      	add	r3, sp, #16
 801c286:	c303      	stmia	r3!, {r0, r1}
 801c288:	a804      	add	r0, sp, #16
 801c28a:	f7f8 fa65 	bl	8014758 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c28e:	6820      	ldr	r0, [r4, #0]
 801c290:	6803      	ldr	r3, [r0, #0]
 801c292:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c294:	4798      	blx	r3
 801c296:	2dff      	cmp	r5, #255	; 0xff
 801c298:	d016      	beq.n	801c2c8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801c29a:	f010 0f08 	tst.w	r0, #8
 801c29e:	6820      	ldr	r0, [r4, #0]
 801c2a0:	d015      	beq.n	801c2ce <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801c2a2:	2400      	movs	r4, #0
 801c2a4:	6801      	ldr	r1, [r0, #0]
 801c2a6:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801c2aa:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801c2ae:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801c2b2:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801c2b6:	9401      	str	r4, [sp, #4]
 801c2b8:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801c2bc:	9400      	str	r4, [sp, #0]
 801c2be:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 801c2c0:	4639      	mov	r1, r7
 801c2c2:	47a0      	blx	r4
 801c2c4:	b007      	add	sp, #28
 801c2c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801c2c8:	f010 0f02 	tst.w	r0, #2
 801c2cc:	e7e7      	b.n	801c29e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801c2ce:	6803      	ldr	r3, [r0, #0]
 801c2d0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c2d2:	4798      	blx	r3
 801c2d4:	4b08      	ldr	r3, [pc, #32]	; (801c2f8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801c2d6:	881a      	ldrh	r2, [r3, #0]
 801c2d8:	6833      	ldr	r3, [r6, #0]
 801c2da:	e9cd 7500 	strd	r7, r5, [sp]
 801c2de:	4601      	mov	r1, r0
 801c2e0:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 801c2e2:	4630      	mov	r0, r6
 801c2e4:	ab04      	add	r3, sp, #16
 801c2e6:	47a8      	blx	r5
 801c2e8:	6820      	ldr	r0, [r4, #0]
 801c2ea:	6803      	ldr	r3, [r0, #0]
 801c2ec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c2ee:	4798      	blx	r3
 801c2f0:	e7e8      	b.n	801c2c4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801c2f2:	bf00      	nop
 801c2f4:	200137bc 	.word	0x200137bc
 801c2f8:	200137b6 	.word	0x200137b6

0801c2fc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801c2fc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c300:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 801c304:	9e08      	ldr	r6, [sp, #32]
 801c306:	4688      	mov	r8, r1
 801c308:	4614      	mov	r4, r2
 801c30a:	461d      	mov	r5, r3
 801c30c:	2f00      	cmp	r7, #0
 801c30e:	f000 80a9 	beq.w	801c464 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801c312:	4618      	mov	r0, r3
 801c314:	f7f3 fb05 	bl	800f922 <_ZNK8touchgfx4Rect7isEmptyEv>
 801c318:	2800      	cmp	r0, #0
 801c31a:	f040 80a3 	bne.w	801c464 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801c31e:	f9b5 1000 	ldrsh.w	r1, [r5]
 801c322:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801c326:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801c32a:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801c32e:	fb04 1303 	mla	r3, r4, r3, r1
 801c332:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 801c336:	4365      	muls	r5, r4
 801c338:	2fff      	cmp	r7, #255	; 0xff
 801c33a:	eba4 0200 	sub.w	r2, r4, r0
 801c33e:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801c342:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801c346:	d04a      	beq.n	801c3de <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 801c348:	b2bc      	uxth	r4, r7
 801c34a:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 801c34e:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801c352:	fa5f f788 	uxtb.w	r7, r8
 801c356:	b2f3      	uxtb	r3, r6
 801c358:	0040      	lsls	r0, r0, #1
 801c35a:	fb0e fe04 	mul.w	lr, lr, r4
 801c35e:	4367      	muls	r7, r4
 801c360:	4363      	muls	r3, r4
 801c362:	ea4f 0842 	mov.w	r8, r2, lsl #1
 801c366:	fa1f fc8c 	uxth.w	ip, ip
 801c36a:	42a9      	cmp	r1, r5
 801c36c:	d27a      	bcs.n	801c464 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801c36e:	eb01 0900 	add.w	r9, r1, r0
 801c372:	4549      	cmp	r1, r9
 801c374:	d231      	bcs.n	801c3da <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 801c376:	880a      	ldrh	r2, [r1, #0]
 801c378:	1214      	asrs	r4, r2, #8
 801c37a:	10d6      	asrs	r6, r2, #3
 801c37c:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801c380:	00d2      	lsls	r2, r2, #3
 801c382:	b2d2      	uxtb	r2, r2
 801c384:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801c388:	fb14 f40c 	smulbb	r4, r4, ip
 801c38c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801c390:	4474      	add	r4, lr
 801c392:	fb12 f20c 	smulbb	r2, r2, ip
 801c396:	b2a4      	uxth	r4, r4
 801c398:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801c39c:	441a      	add	r2, r3
 801c39e:	b292      	uxth	r2, r2
 801c3a0:	f104 0a01 	add.w	sl, r4, #1
 801c3a4:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801c3a8:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801c3ac:	fb16 f60c 	smulbb	r6, r6, ip
 801c3b0:	f102 0a01 	add.w	sl, r2, #1
 801c3b4:	443e      	add	r6, r7
 801c3b6:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801c3ba:	b2b6      	uxth	r6, r6
 801c3bc:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801c3c0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801c3c4:	4322      	orrs	r2, r4
 801c3c6:	1c74      	adds	r4, r6, #1
 801c3c8:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801c3cc:	0976      	lsrs	r6, r6, #5
 801c3ce:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801c3d2:	4332      	orrs	r2, r6
 801c3d4:	f821 2b02 	strh.w	r2, [r1], #2
 801c3d8:	e7cb      	b.n	801c372 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 801c3da:	4441      	add	r1, r8
 801c3dc:	e7c5      	b.n	801c36a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 801c3de:	4f22      	ldr	r7, [pc, #136]	; (801c468 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 801c3e0:	0973      	lsrs	r3, r6, #5
 801c3e2:	ea08 0707 	and.w	r7, r8, r7
 801c3e6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c3ea:	433b      	orrs	r3, r7
 801c3ec:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801c3f0:	4333      	orrs	r3, r6
 801c3f2:	07e7      	lsls	r7, r4, #31
 801c3f4:	b29b      	uxth	r3, r3
 801c3f6:	d50b      	bpl.n	801c410 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 801c3f8:	0040      	lsls	r0, r0, #1
 801c3fa:	0052      	lsls	r2, r2, #1
 801c3fc:	42a9      	cmp	r1, r5
 801c3fe:	d231      	bcs.n	801c464 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801c400:	180c      	adds	r4, r1, r0
 801c402:	42a1      	cmp	r1, r4
 801c404:	d202      	bcs.n	801c40c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 801c406:	f821 3b02 	strh.w	r3, [r1], #2
 801c40a:	e7fa      	b.n	801c402 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 801c40c:	4411      	add	r1, r2
 801c40e:	e7f5      	b.n	801c3fc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 801c410:	078e      	lsls	r6, r1, #30
 801c412:	d008      	beq.n	801c426 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 801c414:	0066      	lsls	r6, r4, #1
 801c416:	460a      	mov	r2, r1
 801c418:	42aa      	cmp	r2, r5
 801c41a:	d202      	bcs.n	801c422 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 801c41c:	8013      	strh	r3, [r2, #0]
 801c41e:	4432      	add	r2, r6
 801c420:	e7fa      	b.n	801c418 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 801c422:	3102      	adds	r1, #2
 801c424:	3801      	subs	r0, #1
 801c426:	07c2      	lsls	r2, r0, #31
 801c428:	d50b      	bpl.n	801c442 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 801c42a:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 801c42e:	3a01      	subs	r2, #1
 801c430:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801c434:	0066      	lsls	r6, r4, #1
 801c436:	42aa      	cmp	r2, r5
 801c438:	d202      	bcs.n	801c440 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 801c43a:	8013      	strh	r3, [r2, #0]
 801c43c:	4432      	add	r2, r6
 801c43e:	e7fa      	b.n	801c436 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 801c440:	3801      	subs	r0, #1
 801c442:	b178      	cbz	r0, 801c464 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801c444:	1040      	asrs	r0, r0, #1
 801c446:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801c44a:	0080      	lsls	r0, r0, #2
 801c44c:	0064      	lsls	r4, r4, #1
 801c44e:	42a9      	cmp	r1, r5
 801c450:	d208      	bcs.n	801c464 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801c452:	180e      	adds	r6, r1, r0
 801c454:	460a      	mov	r2, r1
 801c456:	42b2      	cmp	r2, r6
 801c458:	d202      	bcs.n	801c460 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 801c45a:	f842 3b04 	str.w	r3, [r2], #4
 801c45e:	e7fa      	b.n	801c456 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 801c460:	4421      	add	r1, r4
 801c462:	e7f4      	b.n	801c44e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 801c464:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c468:	00fff800 	.word	0x00fff800

0801c46c <_ZN8touchgfx8LCD16bppC1Ev>:
 801c46c:	2200      	movs	r2, #0
 801c46e:	4912      	ldr	r1, [pc, #72]	; (801c4b8 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 801c470:	6042      	str	r2, [r0, #4]
 801c472:	6001      	str	r1, [r0, #0]
 801c474:	e9c0 2202 	strd	r2, r2, [r0, #8]
 801c478:	e9c0 2204 	strd	r2, r2, [r0, #16]
 801c47c:	e9c0 2206 	strd	r2, r2, [r0, #24]
 801c480:	e9c0 2208 	strd	r2, r2, [r0, #32]
 801c484:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 801c488:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 801c48c:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 801c490:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 801c494:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 801c498:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 801c49c:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 801c4a0:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 801c4a4:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 801c4a8:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 801c4ac:	e9c0 221e 	strd	r2, r2, [r0, #120]	; 0x78
 801c4b0:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 801c4b4:	4770      	bx	lr
 801c4b6:	bf00      	nop
 801c4b8:	0802cd98 	.word	0x0802cd98

0801c4bc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801c4bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c4c0:	460d      	mov	r5, r1
 801c4c2:	b08d      	sub	sp, #52	; 0x34
 801c4c4:	4604      	mov	r4, r0
 801c4c6:	6808      	ldr	r0, [r1, #0]
 801c4c8:	6849      	ldr	r1, [r1, #4]
 801c4ca:	4699      	mov	r9, r3
 801c4cc:	ab08      	add	r3, sp, #32
 801c4ce:	c303      	stmia	r3!, {r0, r1}
 801c4d0:	6810      	ldr	r0, [r2, #0]
 801c4d2:	6851      	ldr	r1, [r2, #4]
 801c4d4:	ab0a      	add	r3, sp, #40	; 0x28
 801c4d6:	c303      	stmia	r3!, {r0, r1}
 801c4d8:	a808      	add	r0, sp, #32
 801c4da:	f7f8 f93d 	bl	8014758 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c4de:	4629      	mov	r1, r5
 801c4e0:	a80a      	add	r0, sp, #40	; 0x28
 801c4e2:	f7f8 f97d 	bl	80147e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c4e6:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801c4ea:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 801c4ee:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 801c4f2:	4d63      	ldr	r5, [pc, #396]	; (801c680 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801c4f4:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 801c4f8:	6828      	ldr	r0, [r5, #0]
 801c4fa:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801c4fe:	fb11 2103 	smlabb	r1, r1, r3, r2
 801c502:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801c506:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801c50a:	440a      	add	r2, r1
 801c50c:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801c510:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801c514:	4413      	add	r3, r2
 801c516:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801c51a:	6803      	ldr	r3, [r0, #0]
 801c51c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c51e:	4798      	blx	r3
 801c520:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801c524:	d119      	bne.n	801c55a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801c526:	f010 0f20 	tst.w	r0, #32
 801c52a:	6828      	ldr	r0, [r5, #0]
 801c52c:	d018      	beq.n	801c560 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801c52e:	2500      	movs	r5, #0
 801c530:	6801      	ldr	r1, [r0, #0]
 801c532:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801c536:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 801c53a:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801c53e:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 801c542:	9502      	str	r5, [sp, #8]
 801c544:	b2b6      	uxth	r6, r6
 801c546:	fa1f f588 	uxth.w	r5, r8
 801c54a:	9601      	str	r6, [sp, #4]
 801c54c:	9500      	str	r5, [sp, #0]
 801c54e:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 801c550:	4621      	mov	r1, r4
 801c552:	47a8      	blx	r5
 801c554:	b00d      	add	sp, #52	; 0x34
 801c556:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c55a:	f010 0f40 	tst.w	r0, #64	; 0x40
 801c55e:	e7e4      	b.n	801c52a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801c560:	6803      	ldr	r3, [r0, #0]
 801c562:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c564:	4798      	blx	r3
 801c566:	4947      	ldr	r1, [pc, #284]	; (801c684 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801c568:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801c56c:	880b      	ldrh	r3, [r1, #0]
 801c56e:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 801c572:	fb03 5202 	mla	r2, r3, r2, r5
 801c576:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801c57a:	4373      	muls	r3, r6
 801c57c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801c580:	9307      	str	r3, [sp, #28]
 801c582:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801c586:	9306      	str	r3, [sp, #24]
 801c588:	468a      	mov	sl, r1
 801c58a:	9b07      	ldr	r3, [sp, #28]
 801c58c:	4298      	cmp	r0, r3
 801c58e:	d270      	bcs.n	801c672 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801c590:	9b06      	ldr	r3, [sp, #24]
 801c592:	4621      	mov	r1, r4
 801c594:	eb00 0b03 	add.w	fp, r0, r3
 801c598:	4558      	cmp	r0, fp
 801c59a:	d25d      	bcs.n	801c658 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 801c59c:	f851 4b04 	ldr.w	r4, [r1], #4
 801c5a0:	0e23      	lsrs	r3, r4, #24
 801c5a2:	d014      	beq.n	801c5ce <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801c5a4:	2bff      	cmp	r3, #255	; 0xff
 801c5a6:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801c5aa:	d112      	bne.n	801c5d2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801c5ac:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801c5b0:	d10f      	bne.n	801c5d2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801c5b2:	0963      	lsrs	r3, r4, #5
 801c5b4:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801c5b8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c5bc:	f02c 0c07 	bic.w	ip, ip, #7
 801c5c0:	ea43 0c0c 	orr.w	ip, r3, ip
 801c5c4:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801c5c8:	ea4c 0404 	orr.w	r4, ip, r4
 801c5cc:	8004      	strh	r4, [r0, #0]
 801c5ce:	3002      	adds	r0, #2
 801c5d0:	e7e2      	b.n	801c598 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801c5d2:	fb09 f303 	mul.w	r3, r9, r3
 801c5d6:	8807      	ldrh	r7, [r0, #0]
 801c5d8:	1c5a      	adds	r2, r3, #1
 801c5da:	eb02 2223 	add.w	r2, r2, r3, asr #8
 801c5de:	1212      	asrs	r2, r2, #8
 801c5e0:	123e      	asrs	r6, r7, #8
 801c5e2:	b293      	uxth	r3, r2
 801c5e4:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 801c5e8:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801c5ec:	43d2      	mvns	r2, r2
 801c5ee:	b2d2      	uxtb	r2, r2
 801c5f0:	10fd      	asrs	r5, r7, #3
 801c5f2:	fb1e fe03 	smulbb	lr, lr, r3
 801c5f6:	00ff      	lsls	r7, r7, #3
 801c5f8:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801c5fc:	fb06 e602 	mla	r6, r6, r2, lr
 801c600:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801c604:	b2ff      	uxtb	r7, r7
 801c606:	fa5f fc8c 	uxtb.w	ip, ip
 801c60a:	b2e4      	uxtb	r4, r4
 801c60c:	b2b6      	uxth	r6, r6
 801c60e:	fb1c fc03 	smulbb	ip, ip, r3
 801c612:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801c616:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801c61a:	fb14 f403 	smulbb	r4, r4, r3
 801c61e:	fb05 c502 	mla	r5, r5, r2, ip
 801c622:	f106 0e01 	add.w	lr, r6, #1
 801c626:	fb07 4702 	mla	r7, r7, r2, r4
 801c62a:	b2ad      	uxth	r5, r5
 801c62c:	b2bf      	uxth	r7, r7
 801c62e:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801c632:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 801c636:	f105 0c01 	add.w	ip, r5, #1
 801c63a:	1c7e      	adds	r6, r7, #1
 801c63c:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801c640:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801c644:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801c648:	096d      	lsrs	r5, r5, #5
 801c64a:	ea46 060e 	orr.w	r6, r6, lr
 801c64e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c652:	432e      	orrs	r6, r5
 801c654:	8006      	strh	r6, [r0, #0]
 801c656:	e7ba      	b.n	801c5ce <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801c658:	f8ba 3000 	ldrh.w	r3, [sl]
 801c65c:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 801c660:	eba3 0308 	sub.w	r3, r3, r8
 801c664:	eba4 0408 	sub.w	r4, r4, r8
 801c668:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801c66c:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801c670:	e78b      	b.n	801c58a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801c672:	4b03      	ldr	r3, [pc, #12]	; (801c680 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801c674:	6818      	ldr	r0, [r3, #0]
 801c676:	6803      	ldr	r3, [r0, #0]
 801c678:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c67a:	4798      	blx	r3
 801c67c:	e76a      	b.n	801c554 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801c67e:	bf00      	nop
 801c680:	200137bc 	.word	0x200137bc
 801c684:	200137b6 	.word	0x200137b6

0801c688 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 801c688:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801c68c:	460c      	mov	r4, r1
 801c68e:	b085      	sub	sp, #20
 801c690:	6810      	ldr	r0, [r2, #0]
 801c692:	6851      	ldr	r1, [r2, #4]
 801c694:	466d      	mov	r5, sp
 801c696:	c503      	stmia	r5!, {r0, r1}
 801c698:	6818      	ldr	r0, [r3, #0]
 801c69a:	6859      	ldr	r1, [r3, #4]
 801c69c:	4616      	mov	r6, r2
 801c69e:	c503      	stmia	r5!, {r0, r1}
 801c6a0:	4668      	mov	r0, sp
 801c6a2:	f7f8 f859 	bl	8014758 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c6a6:	4631      	mov	r1, r6
 801c6a8:	a802      	add	r0, sp, #8
 801c6aa:	f7f8 f899 	bl	80147e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c6ae:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801c6b2:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801c6b6:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801c6ba:	4d28      	ldr	r5, [pc, #160]	; (801c75c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 801c6bc:	4e28      	ldr	r6, [pc, #160]	; (801c760 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801c6be:	6828      	ldr	r0, [r5, #0]
 801c6c0:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801c6c4:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 801c6c8:	fb11 2103 	smlabb	r1, r1, r3, r2
 801c6cc:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801c6d0:	f8bd 1000 	ldrh.w	r1, [sp]
 801c6d4:	440a      	add	r2, r1
 801c6d6:	f8ad 2008 	strh.w	r2, [sp, #8]
 801c6da:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801c6de:	4413      	add	r3, r2
 801c6e0:	f8ad 300a 	strh.w	r3, [sp, #10]
 801c6e4:	6803      	ldr	r3, [r0, #0]
 801c6e6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c6e8:	4798      	blx	r3
 801c6ea:	8833      	ldrh	r3, [r6, #0]
 801c6ec:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 801c6f0:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801c6f4:	f8df e06c 	ldr.w	lr, [pc, #108]	; 801c764 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 801c6f8:	fb03 1202 	mla	r2, r3, r2, r1
 801c6fc:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801c700:	fb08 f303 	mul.w	r3, r8, r3
 801c704:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801c708:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 801c70c:	4298      	cmp	r0, r3
 801c70e:	d21d      	bcs.n	801c74c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 801c710:	eb00 080c 	add.w	r8, r0, ip
 801c714:	4540      	cmp	r0, r8
 801c716:	d20f      	bcs.n	801c738 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 801c718:	f854 1b04 	ldr.w	r1, [r4], #4
 801c71c:	ea4f 1951 	mov.w	r9, r1, lsr #5
 801c720:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801c724:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801c728:	ea42 0209 	orr.w	r2, r2, r9
 801c72c:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801c730:	430a      	orrs	r2, r1
 801c732:	f820 2b02 	strh.w	r2, [r0], #2
 801c736:	e7ed      	b.n	801c714 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 801c738:	8832      	ldrh	r2, [r6, #0]
 801c73a:	1bd2      	subs	r2, r2, r7
 801c73c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801c740:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801c744:	1bd2      	subs	r2, r2, r7
 801c746:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801c74a:	e7df      	b.n	801c70c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 801c74c:	6828      	ldr	r0, [r5, #0]
 801c74e:	6803      	ldr	r3, [r0, #0]
 801c750:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c752:	4798      	blx	r3
 801c754:	b005      	add	sp, #20
 801c756:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801c75a:	bf00      	nop
 801c75c:	200137bc 	.word	0x200137bc
 801c760:	200137b6 	.word	0x200137b6
 801c764:	fffff800 	.word	0xfffff800

0801c768 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 801c768:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c76c:	460e      	mov	r6, r1
 801c76e:	b08e      	sub	sp, #56	; 0x38
 801c770:	4604      	mov	r4, r0
 801c772:	6808      	ldr	r0, [r1, #0]
 801c774:	6849      	ldr	r1, [r1, #4]
 801c776:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 801c950 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801c77a:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 801c954 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801c77e:	461d      	mov	r5, r3
 801c780:	ab0a      	add	r3, sp, #40	; 0x28
 801c782:	c303      	stmia	r3!, {r0, r1}
 801c784:	6810      	ldr	r0, [r2, #0]
 801c786:	6851      	ldr	r1, [r2, #4]
 801c788:	ab0c      	add	r3, sp, #48	; 0x30
 801c78a:	c303      	stmia	r3!, {r0, r1}
 801c78c:	a80a      	add	r0, sp, #40	; 0x28
 801c78e:	f7f7 ffe3 	bl	8014758 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c792:	4631      	mov	r1, r6
 801c794:	a80c      	add	r0, sp, #48	; 0x30
 801c796:	f7f8 f823 	bl	80147e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c79a:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801c79e:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801c7a2:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801c7a6:	f8d8 0000 	ldr.w	r0, [r8]
 801c7aa:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 801c7ae:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801c7b2:	fb11 2103 	smlabb	r1, r1, r3, r2
 801c7b6:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801c7ba:	440c      	add	r4, r1
 801c7bc:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 801c7c0:	440a      	add	r2, r1
 801c7c2:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 801c7c6:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 801c7ca:	4413      	add	r3, r2
 801c7cc:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801c7d0:	6803      	ldr	r3, [r0, #0]
 801c7d2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c7d4:	4798      	blx	r3
 801c7d6:	2dff      	cmp	r5, #255	; 0xff
 801c7d8:	d124      	bne.n	801c824 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801c7da:	f010 0f01 	tst.w	r0, #1
 801c7de:	f8d8 0000 	ldr.w	r0, [r8]
 801c7e2:	d022      	beq.n	801c82a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 801c7e4:	2100      	movs	r1, #0
 801c7e6:	f8d0 c000 	ldr.w	ip, [r0]
 801c7ea:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 801c7ee:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 801c7f2:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801c7f6:	f04f 0e01 	mov.w	lr, #1
 801c7fa:	f8cd e018 	str.w	lr, [sp, #24]
 801c7fe:	f8b9 e000 	ldrh.w	lr, [r9]
 801c802:	9503      	str	r5, [sp, #12]
 801c804:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801c808:	b2b6      	uxth	r6, r6
 801c80a:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801c80e:	9102      	str	r1, [sp, #8]
 801c810:	b2bf      	uxth	r7, r7
 801c812:	9601      	str	r6, [sp, #4]
 801c814:	9700      	str	r7, [sp, #0]
 801c816:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 801c81a:	4621      	mov	r1, r4
 801c81c:	47a8      	blx	r5
 801c81e:	b00e      	add	sp, #56	; 0x38
 801c820:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c824:	f010 0f04 	tst.w	r0, #4
 801c828:	e7d9      	b.n	801c7de <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801c82a:	6803      	ldr	r3, [r0, #0]
 801c82c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c82e:	4798      	blx	r3
 801c830:	f8b9 3000 	ldrh.w	r3, [r9]
 801c834:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801c838:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 801c83c:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801c840:	fb03 1202 	mla	r2, r3, r2, r1
 801c844:	ebac 0c07 	sub.w	ip, ip, r7
 801c848:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801c84c:	435e      	muls	r6, r3
 801c84e:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801c852:	2dff      	cmp	r5, #255	; 0xff
 801c854:	eba3 0707 	sub.w	r7, r3, r7
 801c858:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801c85c:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801c860:	ea4f 0747 	mov.w	r7, r7, lsl #1
 801c864:	d049      	beq.n	801c8fa <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801c866:	43eb      	mvns	r3, r5
 801c868:	fa1f f985 	uxth.w	r9, r5
 801c86c:	b2db      	uxtb	r3, r3
 801c86e:	42b0      	cmp	r0, r6
 801c870:	d266      	bcs.n	801c940 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801c872:	eb00 0a0e 	add.w	sl, r0, lr
 801c876:	4550      	cmp	r0, sl
 801c878:	4621      	mov	r1, r4
 801c87a:	f104 0403 	add.w	r4, r4, #3
 801c87e:	d25b      	bcs.n	801c938 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801c880:	8802      	ldrh	r2, [r0, #0]
 801c882:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801c886:	ea4f 2822 	mov.w	r8, r2, asr #8
 801c88a:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801c88e:	fb11 f109 	smulbb	r1, r1, r9
 801c892:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801c896:	10d5      	asrs	r5, r2, #3
 801c898:	fb08 1803 	mla	r8, r8, r3, r1
 801c89c:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801c8a0:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801c8a4:	fb11 f109 	smulbb	r1, r1, r9
 801c8a8:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801c8ac:	fb05 1503 	mla	r5, r5, r3, r1
 801c8b0:	00d2      	lsls	r2, r2, #3
 801c8b2:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801c8b6:	b2d2      	uxtb	r2, r2
 801c8b8:	fb11 f109 	smulbb	r1, r1, r9
 801c8bc:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801c8c0:	fa1f f888 	uxth.w	r8, r8
 801c8c4:	fb02 1203 	mla	r2, r2, r3, r1
 801c8c8:	b292      	uxth	r2, r2
 801c8ca:	f108 0101 	add.w	r1, r8, #1
 801c8ce:	b2ad      	uxth	r5, r5
 801c8d0:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801c8d4:	1c51      	adds	r1, r2, #1
 801c8d6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801c8da:	1c69      	adds	r1, r5, #1
 801c8dc:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801c8e0:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801c8e4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801c8e8:	096d      	lsrs	r5, r5, #5
 801c8ea:	ea42 0208 	orr.w	r2, r2, r8
 801c8ee:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c8f2:	432a      	orrs	r2, r5
 801c8f4:	f820 2b02 	strh.w	r2, [r0], #2
 801c8f8:	e7bd      	b.n	801c876 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801c8fa:	4a14      	ldr	r2, [pc, #80]	; (801c94c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 801c8fc:	42b0      	cmp	r0, r6
 801c8fe:	d21f      	bcs.n	801c940 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801c900:	eb00 050e 	add.w	r5, r0, lr
 801c904:	42a8      	cmp	r0, r5
 801c906:	4621      	mov	r1, r4
 801c908:	f104 0403 	add.w	r4, r4, #3
 801c90c:	d210      	bcs.n	801c930 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801c90e:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801c912:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801c916:	00db      	lsls	r3, r3, #3
 801c918:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 801c91c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c920:	430b      	orrs	r3, r1
 801c922:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801c926:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801c92a:	f820 3b02 	strh.w	r3, [r0], #2
 801c92e:	e7e9      	b.n	801c904 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 801c930:	4438      	add	r0, r7
 801c932:	eb01 040c 	add.w	r4, r1, ip
 801c936:	e7e1      	b.n	801c8fc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 801c938:	4438      	add	r0, r7
 801c93a:	eb01 040c 	add.w	r4, r1, ip
 801c93e:	e796      	b.n	801c86e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801c940:	4b03      	ldr	r3, [pc, #12]	; (801c950 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801c942:	6818      	ldr	r0, [r3, #0]
 801c944:	6803      	ldr	r3, [r0, #0]
 801c946:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c948:	4798      	blx	r3
 801c94a:	e768      	b.n	801c81e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 801c94c:	fffff800 	.word	0xfffff800
 801c950:	200137bc 	.word	0x200137bc
 801c954:	200137b6 	.word	0x200137b6

0801c958 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801c958:	b4f0      	push	{r4, r5, r6, r7}
 801c95a:	4616      	mov	r6, r2
 801c95c:	2e01      	cmp	r6, #1
 801c95e:	461c      	mov	r4, r3
 801c960:	460d      	mov	r5, r1
 801c962:	9a04      	ldr	r2, [sp, #16]
 801c964:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801c968:	f89d 7018 	ldrb.w	r7, [sp, #24]
 801c96c:	d012      	beq.n	801c994 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 801c96e:	d303      	bcc.n	801c978 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 801c970:	2e02      	cmp	r6, #2
 801c972:	d00a      	beq.n	801c98a <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 801c974:	bcf0      	pop	{r4, r5, r6, r7}
 801c976:	4770      	bx	lr
 801c978:	6805      	ldr	r5, [r0, #0]
 801c97a:	e9cd 3704 	strd	r3, r7, [sp, #16]
 801c97e:	68ed      	ldr	r5, [r5, #12]
 801c980:	4613      	mov	r3, r2
 801c982:	46ac      	mov	ip, r5
 801c984:	4622      	mov	r2, r4
 801c986:	bcf0      	pop	{r4, r5, r6, r7}
 801c988:	4760      	bx	ip
 801c98a:	4621      	mov	r1, r4
 801c98c:	4628      	mov	r0, r5
 801c98e:	bcf0      	pop	{r4, r5, r6, r7}
 801c990:	f7ff bd94 	b.w	801c4bc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801c994:	4621      	mov	r1, r4
 801c996:	4628      	mov	r0, r5
 801c998:	bcf0      	pop	{r4, r5, r6, r7}
 801c99a:	f7ff bee5 	b.w	801c768 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

0801c9a0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801c9a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c9a4:	4681      	mov	r9, r0
 801c9a6:	b093      	sub	sp, #76	; 0x4c
 801c9a8:	6810      	ldr	r0, [r2, #0]
 801c9aa:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 801c9ae:	4f6d      	ldr	r7, [pc, #436]	; (801cb64 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 801c9b0:	4688      	mov	r8, r1
 801c9b2:	6851      	ldr	r1, [r2, #4]
 801c9b4:	ac0e      	add	r4, sp, #56	; 0x38
 801c9b6:	c403      	stmia	r4!, {r0, r1}
 801c9b8:	6818      	ldr	r0, [r3, #0]
 801c9ba:	6859      	ldr	r1, [r3, #4]
 801c9bc:	ac10      	add	r4, sp, #64	; 0x40
 801c9be:	4616      	mov	r6, r2
 801c9c0:	c403      	stmia	r4!, {r0, r1}
 801c9c2:	a80e      	add	r0, sp, #56	; 0x38
 801c9c4:	f7f7 fec8 	bl	8014758 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c9c8:	4631      	mov	r1, r6
 801c9ca:	a810      	add	r0, sp, #64	; 0x40
 801c9cc:	f7f7 ff08 	bl	80147e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c9d0:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801c9d4:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 801c9d8:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801c9dc:	4e62      	ldr	r6, [pc, #392]	; (801cb68 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801c9de:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 801c9e2:	6830      	ldr	r0, [r6, #0]
 801c9e4:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 801c9e8:	fb11 2103 	smlabb	r1, r1, r3, r2
 801c9ec:	4489      	add	r9, r1
 801c9ee:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 801c9f2:	440a      	add	r2, r1
 801c9f4:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 801c9f8:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801c9fc:	4413      	add	r3, r2
 801c9fe:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801ca02:	6803      	ldr	r3, [r0, #0]
 801ca04:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801ca06:	4798      	blx	r3
 801ca08:	f010 0f80 	tst.w	r0, #128	; 0x80
 801ca0c:	6830      	ldr	r0, [r6, #0]
 801ca0e:	d01d      	beq.n	801ca4c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 801ca10:	2200      	movs	r2, #0
 801ca12:	6801      	ldr	r1, [r0, #0]
 801ca14:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801ca18:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801ca1c:	220b      	movs	r2, #11
 801ca1e:	9207      	str	r2, [sp, #28]
 801ca20:	883a      	ldrh	r2, [r7, #0]
 801ca22:	9206      	str	r2, [sp, #24]
 801ca24:	2201      	movs	r2, #1
 801ca26:	e9cd a204 	strd	sl, r2, [sp, #16]
 801ca2a:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 801ca2e:	9203      	str	r2, [sp, #12]
 801ca30:	b2a4      	uxth	r4, r4
 801ca32:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801ca36:	9200      	str	r2, [sp, #0]
 801ca38:	b2ad      	uxth	r5, r5
 801ca3a:	9502      	str	r5, [sp, #8]
 801ca3c:	9401      	str	r4, [sp, #4]
 801ca3e:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 801ca40:	4642      	mov	r2, r8
 801ca42:	4649      	mov	r1, r9
 801ca44:	47a0      	blx	r4
 801ca46:	b013      	add	sp, #76	; 0x4c
 801ca48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ca4c:	6803      	ldr	r3, [r0, #0]
 801ca4e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ca50:	4798      	blx	r3
 801ca52:	883b      	ldrh	r3, [r7, #0]
 801ca54:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801ca58:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 801ca5c:	fb03 1202 	mla	r2, r3, r2, r1
 801ca60:	435d      	muls	r5, r3
 801ca62:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801ca66:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 801ca6a:	920c      	str	r2, [sp, #48]	; 0x30
 801ca6c:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 801ca70:	1b12      	subs	r2, r2, r4
 801ca72:	920d      	str	r2, [sp, #52]	; 0x34
 801ca74:	0062      	lsls	r2, r4, #1
 801ca76:	1b1c      	subs	r4, r3, r4
 801ca78:	0063      	lsls	r3, r4, #1
 801ca7a:	920a      	str	r2, [sp, #40]	; 0x28
 801ca7c:	930b      	str	r3, [sp, #44]	; 0x2c
 801ca7e:	f04f 0e04 	mov.w	lr, #4
 801ca82:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801ca84:	4298      	cmp	r0, r3
 801ca86:	d266      	bcs.n	801cb56 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 801ca88:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ca8a:	eb00 0b03 	add.w	fp, r0, r3
 801ca8e:	4558      	cmp	r0, fp
 801ca90:	d25c      	bcs.n	801cb4c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 801ca92:	f819 3b01 	ldrb.w	r3, [r9], #1
 801ca96:	fb1e e303 	smlabb	r3, lr, r3, lr
 801ca9a:	f858 2003 	ldr.w	r2, [r8, r3]
 801ca9e:	0e11      	lsrs	r1, r2, #24
 801caa0:	d012      	beq.n	801cac8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801caa2:	29ff      	cmp	r1, #255	; 0xff
 801caa4:	ea4f 2712 	mov.w	r7, r2, lsr #8
 801caa8:	d110      	bne.n	801cacc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801caaa:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801caae:	d10d      	bne.n	801cacc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801cab0:	0953      	lsrs	r3, r2, #5
 801cab2:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 801cab6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801caba:	f027 0707 	bic.w	r7, r7, #7
 801cabe:	431f      	orrs	r7, r3
 801cac0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801cac4:	433a      	orrs	r2, r7
 801cac6:	8002      	strh	r2, [r0, #0]
 801cac8:	3002      	adds	r0, #2
 801caca:	e7e0      	b.n	801ca8e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 801cacc:	fb0a f101 	mul.w	r1, sl, r1
 801cad0:	8806      	ldrh	r6, [r0, #0]
 801cad2:	1c4b      	adds	r3, r1, #1
 801cad4:	eb03 2321 	add.w	r3, r3, r1, asr #8
 801cad8:	1235      	asrs	r5, r6, #8
 801cada:	10f4      	asrs	r4, r6, #3
 801cadc:	121b      	asrs	r3, r3, #8
 801cade:	00f6      	lsls	r6, r6, #3
 801cae0:	b299      	uxth	r1, r3
 801cae2:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801cae6:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801caea:	b2f6      	uxtb	r6, r6
 801caec:	43db      	mvns	r3, r3
 801caee:	b2d2      	uxtb	r2, r2
 801caf0:	b2db      	uxtb	r3, r3
 801caf2:	fb1c fc01 	smulbb	ip, ip, r1
 801caf6:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801cafa:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801cafe:	fb12 f201 	smulbb	r2, r2, r1
 801cb02:	fb05 c503 	mla	r5, r5, r3, ip
 801cb06:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801cb0a:	b2ff      	uxtb	r7, r7
 801cb0c:	fb06 2203 	mla	r2, r6, r3, r2
 801cb10:	b2ad      	uxth	r5, r5
 801cb12:	fb17 f701 	smulbb	r7, r7, r1
 801cb16:	b292      	uxth	r2, r2
 801cb18:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 801cb1c:	fb04 7403 	mla	r4, r4, r3, r7
 801cb20:	f105 0c01 	add.w	ip, r5, #1
 801cb24:	1c57      	adds	r7, r2, #1
 801cb26:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801cb2a:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801cb2e:	b2a4      	uxth	r4, r4
 801cb30:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801cb34:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801cb38:	433d      	orrs	r5, r7
 801cb3a:	1c67      	adds	r7, r4, #1
 801cb3c:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 801cb40:	0964      	lsrs	r4, r4, #5
 801cb42:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801cb46:	4325      	orrs	r5, r4
 801cb48:	8005      	strh	r5, [r0, #0]
 801cb4a:	e7bd      	b.n	801cac8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801cb4c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801cb4e:	4418      	add	r0, r3
 801cb50:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801cb52:	4499      	add	r9, r3
 801cb54:	e795      	b.n	801ca82 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 801cb56:	4b04      	ldr	r3, [pc, #16]	; (801cb68 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801cb58:	6818      	ldr	r0, [r3, #0]
 801cb5a:	6803      	ldr	r3, [r0, #0]
 801cb5c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cb5e:	4798      	blx	r3
 801cb60:	e771      	b.n	801ca46 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 801cb62:	bf00      	nop
 801cb64:	200137b6 	.word	0x200137b6
 801cb68:	200137bc 	.word	0x200137bc

0801cb6c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 801cb6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cb70:	b087      	sub	sp, #28
 801cb72:	4680      	mov	r8, r0
 801cb74:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 801cb78:	460d      	mov	r5, r1
 801cb7a:	4614      	mov	r4, r2
 801cb7c:	2e00      	cmp	r6, #0
 801cb7e:	f000 80b9 	beq.w	801ccf4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 801cb82:	6810      	ldr	r0, [r2, #0]
 801cb84:	6851      	ldr	r1, [r2, #4]
 801cb86:	af02      	add	r7, sp, #8
 801cb88:	c703      	stmia	r7!, {r0, r1}
 801cb8a:	6818      	ldr	r0, [r3, #0]
 801cb8c:	6859      	ldr	r1, [r3, #4]
 801cb8e:	af04      	add	r7, sp, #16
 801cb90:	c703      	stmia	r7!, {r0, r1}
 801cb92:	a802      	add	r0, sp, #8
 801cb94:	f7f7 fde0 	bl	8014758 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cb98:	4621      	mov	r1, r4
 801cb9a:	a804      	add	r0, sp, #16
 801cb9c:	f7f7 fe20 	bl	80147e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cba0:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801cba4:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801cba8:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 801cbac:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 801cbb0:	fb14 2103 	smlabb	r1, r4, r3, r2
 801cbb4:	eb08 0401 	add.w	r4, r8, r1
 801cbb8:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801cbbc:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801cbc0:	440a      	add	r2, r1
 801cbc2:	f8ad 2010 	strh.w	r2, [sp, #16]
 801cbc6:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801cbca:	4413      	add	r3, r2
 801cbcc:	f8ad 3012 	strh.w	r3, [sp, #18]
 801cbd0:	4b4a      	ldr	r3, [pc, #296]	; (801ccfc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801cbd2:	6818      	ldr	r0, [r3, #0]
 801cbd4:	6803      	ldr	r3, [r0, #0]
 801cbd6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cbd8:	4798      	blx	r3
 801cbda:	4b49      	ldr	r3, [pc, #292]	; (801cd00 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 801cbdc:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801cbe0:	881a      	ldrh	r2, [r3, #0]
 801cbe2:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801cbe6:	2eff      	cmp	r6, #255	; 0xff
 801cbe8:	fb02 c101 	mla	r1, r2, r1, ip
 801cbec:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801cbf0:	fb02 f207 	mul.w	r2, r2, r7
 801cbf4:	f105 0104 	add.w	r1, r5, #4
 801cbf8:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 801cbfc:	461d      	mov	r5, r3
 801cbfe:	d05a      	beq.n	801ccb6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 801cc00:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 801cc04:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801cc08:	b2b6      	uxth	r6, r6
 801cc0a:	fa1f fe8e 	uxth.w	lr, lr
 801cc0e:	9301      	str	r3, [sp, #4]
 801cc10:	4282      	cmp	r2, r0
 801cc12:	d96a      	bls.n	801ccea <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801cc14:	eb00 0b0a 	add.w	fp, r0, sl
 801cc18:	4583      	cmp	fp, r0
 801cc1a:	d940      	bls.n	801cc9e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 801cc1c:	f814 3b01 	ldrb.w	r3, [r4], #1
 801cc20:	8805      	ldrh	r5, [r0, #0]
 801cc22:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801cc26:	122f      	asrs	r7, r5, #8
 801cc28:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801cc2c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801cc30:	fb17 f70e 	smulbb	r7, r7, lr
 801cc34:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801cc38:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801cc3c:	00ed      	lsls	r5, r5, #3
 801cc3e:	fb0c 7c06 	mla	ip, ip, r6, r7
 801cc42:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801cc46:	10df      	asrs	r7, r3, #3
 801cc48:	b2ed      	uxtb	r5, r5
 801cc4a:	00db      	lsls	r3, r3, #3
 801cc4c:	fa1f fc8c 	uxth.w	ip, ip
 801cc50:	fb19 f90e 	smulbb	r9, r9, lr
 801cc54:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801cc58:	b2db      	uxtb	r3, r3
 801cc5a:	fb15 f50e 	smulbb	r5, r5, lr
 801cc5e:	fb07 9706 	mla	r7, r7, r6, r9
 801cc62:	fb03 5306 	mla	r3, r3, r6, r5
 801cc66:	f10c 0901 	add.w	r9, ip, #1
 801cc6a:	b29b      	uxth	r3, r3
 801cc6c:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801cc70:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 801cc74:	f103 0c01 	add.w	ip, r3, #1
 801cc78:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801cc7c:	b2bf      	uxth	r7, r7
 801cc7e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801cc82:	ea4c 0c09 	orr.w	ip, ip, r9
 801cc86:	f107 0901 	add.w	r9, r7, #1
 801cc8a:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801cc8e:	097f      	lsrs	r7, r7, #5
 801cc90:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801cc94:	ea4c 0c07 	orr.w	ip, ip, r7
 801cc98:	f820 cb02 	strh.w	ip, [r0], #2
 801cc9c:	e7bc      	b.n	801cc18 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 801cc9e:	9b01      	ldr	r3, [sp, #4]
 801cca0:	881b      	ldrh	r3, [r3, #0]
 801cca2:	eba3 0308 	sub.w	r3, r3, r8
 801cca6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ccaa:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801ccae:	eba3 0308 	sub.w	r3, r3, r8
 801ccb2:	441c      	add	r4, r3
 801ccb4:	e7ac      	b.n	801cc10 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 801ccb6:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801ccba:	4282      	cmp	r2, r0
 801ccbc:	d915      	bls.n	801ccea <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801ccbe:	eb00 060a 	add.w	r6, r0, sl
 801ccc2:	4286      	cmp	r6, r0
 801ccc4:	d906      	bls.n	801ccd4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 801ccc6:	f814 3b01 	ldrb.w	r3, [r4], #1
 801ccca:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801ccce:	f820 3b02 	strh.w	r3, [r0], #2
 801ccd2:	e7f6      	b.n	801ccc2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 801ccd4:	882b      	ldrh	r3, [r5, #0]
 801ccd6:	eba3 0308 	sub.w	r3, r3, r8
 801ccda:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ccde:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801cce2:	eba3 0308 	sub.w	r3, r3, r8
 801cce6:	441c      	add	r4, r3
 801cce8:	e7e7      	b.n	801ccba <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 801ccea:	4b04      	ldr	r3, [pc, #16]	; (801ccfc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801ccec:	6818      	ldr	r0, [r3, #0]
 801ccee:	6803      	ldr	r3, [r0, #0]
 801ccf0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ccf2:	4798      	blx	r3
 801ccf4:	b007      	add	sp, #28
 801ccf6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ccfa:	bf00      	nop
 801ccfc:	200137bc 	.word	0x200137bc
 801cd00:	200137b6 	.word	0x200137b6

0801cd04 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801cd04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cd08:	b091      	sub	sp, #68	; 0x44
 801cd0a:	4680      	mov	r8, r0
 801cd0c:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 801cd10:	460f      	mov	r7, r1
 801cd12:	4614      	mov	r4, r2
 801cd14:	2d00      	cmp	r5, #0
 801cd16:	d051      	beq.n	801cdbc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801cd18:	6810      	ldr	r0, [r2, #0]
 801cd1a:	6851      	ldr	r1, [r2, #4]
 801cd1c:	f8df 9200 	ldr.w	r9, [pc, #512]	; 801cf20 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 801cd20:	ae0c      	add	r6, sp, #48	; 0x30
 801cd22:	c603      	stmia	r6!, {r0, r1}
 801cd24:	6818      	ldr	r0, [r3, #0]
 801cd26:	6859      	ldr	r1, [r3, #4]
 801cd28:	ae0e      	add	r6, sp, #56	; 0x38
 801cd2a:	c603      	stmia	r6!, {r0, r1}
 801cd2c:	a80c      	add	r0, sp, #48	; 0x30
 801cd2e:	f7f7 fd13 	bl	8014758 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cd32:	4621      	mov	r1, r4
 801cd34:	a80e      	add	r0, sp, #56	; 0x38
 801cd36:	f7f7 fd53 	bl	80147e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cd3a:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 801cd3e:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801cd42:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 801cd46:	f8d9 0000 	ldr.w	r0, [r9]
 801cd4a:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801cd4e:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 801cd52:	fb11 2103 	smlabb	r1, r1, r3, r2
 801cd56:	eb08 0401 	add.w	r4, r8, r1
 801cd5a:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 801cd5e:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 801cf24 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 801cd62:	440a      	add	r2, r1
 801cd64:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 801cd68:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801cd6c:	4413      	add	r3, r2
 801cd6e:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 801cd72:	6803      	ldr	r3, [r0, #0]
 801cd74:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801cd76:	4798      	blx	r3
 801cd78:	f010 0f80 	tst.w	r0, #128	; 0x80
 801cd7c:	f8d9 0000 	ldr.w	r0, [r9]
 801cd80:	d01f      	beq.n	801cdc2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 801cd82:	2200      	movs	r2, #0
 801cd84:	6801      	ldr	r1, [r0, #0]
 801cd86:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801cd8a:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801cd8e:	220b      	movs	r2, #11
 801cd90:	9207      	str	r2, [sp, #28]
 801cd92:	f8b8 2000 	ldrh.w	r2, [r8]
 801cd96:	9206      	str	r2, [sp, #24]
 801cd98:	2201      	movs	r2, #1
 801cd9a:	e9cd 5204 	strd	r5, r2, [sp, #16]
 801cd9e:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 801cda2:	9203      	str	r2, [sp, #12]
 801cda4:	fa1f f28a 	uxth.w	r2, sl
 801cda8:	9202      	str	r2, [sp, #8]
 801cdaa:	b2b6      	uxth	r6, r6
 801cdac:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801cdb0:	9200      	str	r2, [sp, #0]
 801cdb2:	9601      	str	r6, [sp, #4]
 801cdb4:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 801cdb6:	463a      	mov	r2, r7
 801cdb8:	4621      	mov	r1, r4
 801cdba:	47a8      	blx	r5
 801cdbc:	b011      	add	sp, #68	; 0x44
 801cdbe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cdc2:	6803      	ldr	r3, [r0, #0]
 801cdc4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cdc6:	4798      	blx	r3
 801cdc8:	f8b8 2000 	ldrh.w	r2, [r8]
 801cdcc:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801cdd0:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 801cdd4:	2dff      	cmp	r5, #255	; 0xff
 801cdd6:	fb02 1303 	mla	r3, r2, r3, r1
 801cdda:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801cdde:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801cde2:	fb0a fa02 	mul.w	sl, sl, r2
 801cde6:	d062      	beq.n	801ceae <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 801cde8:	ea6f 0c05 	mvn.w	ip, r5
 801cdec:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 801cdf0:	930a      	str	r3, [sp, #40]	; 0x28
 801cdf2:	b2ad      	uxth	r5, r5
 801cdf4:	fa5f fc8c 	uxtb.w	ip, ip
 801cdf8:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 801cdfc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801cdfe:	4298      	cmp	r0, r3
 801ce00:	f080 8085 	bcs.w	801cf0e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801ce04:	eb00 0b09 	add.w	fp, r0, r9
 801ce08:	4558      	cmp	r0, fp
 801ce0a:	d246      	bcs.n	801ce9a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 801ce0c:	f814 eb01 	ldrb.w	lr, [r4], #1
 801ce10:	2303      	movs	r3, #3
 801ce12:	2204      	movs	r2, #4
 801ce14:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 801ce18:	eb07 0a0e 	add.w	sl, r7, lr
 801ce1c:	8803      	ldrh	r3, [r0, #0]
 801ce1e:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801ce22:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801ce26:	1219      	asrs	r1, r3, #8
 801ce28:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801ce2c:	fb18 f805 	smulbb	r8, r8, r5
 801ce30:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801ce34:	10da      	asrs	r2, r3, #3
 801ce36:	fb01 810c 	mla	r1, r1, ip, r8
 801ce3a:	00db      	lsls	r3, r3, #3
 801ce3c:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801ce40:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801ce44:	b2db      	uxtb	r3, r3
 801ce46:	fb18 f805 	smulbb	r8, r8, r5
 801ce4a:	fb1e fe05 	smulbb	lr, lr, r5
 801ce4e:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801ce52:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801ce56:	b289      	uxth	r1, r1
 801ce58:	fb02 820c 	mla	r2, r2, ip, r8
 801ce5c:	fb03 e30c 	mla	r3, r3, ip, lr
 801ce60:	b292      	uxth	r2, r2
 801ce62:	b29b      	uxth	r3, r3
 801ce64:	f101 0801 	add.w	r8, r1, #1
 801ce68:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 801ce6c:	f103 0e01 	add.w	lr, r3, #1
 801ce70:	f102 0801 	add.w	r8, r2, #1
 801ce74:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 801ce78:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 801ce7c:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801ce80:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801ce84:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801ce88:	ea4e 0101 	orr.w	r1, lr, r1
 801ce8c:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801ce90:	ea41 0108 	orr.w	r1, r1, r8
 801ce94:	f820 1b02 	strh.w	r1, [r0], #2
 801ce98:	e7b6      	b.n	801ce08 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 801ce9a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ce9c:	881b      	ldrh	r3, [r3, #0]
 801ce9e:	1b9b      	subs	r3, r3, r6
 801cea0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801cea4:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801cea8:	1b9b      	subs	r3, r3, r6
 801ceaa:	441c      	add	r4, r3
 801ceac:	e7a6      	b.n	801cdfc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 801ceae:	491b      	ldr	r1, [pc, #108]	; (801cf1c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 801ceb0:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 801ceb4:	2203      	movs	r2, #3
 801ceb6:	2504      	movs	r5, #4
 801ceb8:	4550      	cmp	r0, sl
 801ceba:	d228      	bcs.n	801cf0e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801cebc:	eb00 0c09 	add.w	ip, r0, r9
 801cec0:	4560      	cmp	r0, ip
 801cec2:	4623      	mov	r3, r4
 801cec4:	d219      	bcs.n	801cefa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 801cec6:	f893 e000 	ldrb.w	lr, [r3]
 801ceca:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 801cece:	eb07 0b0e 	add.w	fp, r7, lr
 801ced2:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801ced6:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801ceda:	f89b b001 	ldrb.w	fp, [fp, #1]
 801cede:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801cee2:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801cee6:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801ceea:	ea43 030b 	orr.w	r3, r3, fp
 801ceee:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801cef2:	3401      	adds	r4, #1
 801cef4:	f820 3b02 	strh.w	r3, [r0], #2
 801cef8:	e7e2      	b.n	801cec0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 801cefa:	f8b8 3000 	ldrh.w	r3, [r8]
 801cefe:	1b9b      	subs	r3, r3, r6
 801cf00:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801cf04:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801cf08:	1b9b      	subs	r3, r3, r6
 801cf0a:	441c      	add	r4, r3
 801cf0c:	e7d4      	b.n	801ceb8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 801cf0e:	4b04      	ldr	r3, [pc, #16]	; (801cf20 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 801cf10:	6818      	ldr	r0, [r3, #0]
 801cf12:	6803      	ldr	r3, [r0, #0]
 801cf14:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cf16:	4798      	blx	r3
 801cf18:	e750      	b.n	801cdbc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801cf1a:	bf00      	nop
 801cf1c:	fffff800 	.word	0xfffff800
 801cf20:	200137bc 	.word	0x200137bc
 801cf24:	200137b6 	.word	0x200137b6

0801cf28 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801cf28:	b4f0      	push	{r4, r5, r6, r7}
 801cf2a:	460c      	mov	r4, r1
 801cf2c:	4611      	mov	r1, r2
 801cf2e:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801cf32:	780f      	ldrb	r7, [r1, #0]
 801cf34:	784e      	ldrb	r6, [r1, #1]
 801cf36:	2f01      	cmp	r7, #1
 801cf38:	461a      	mov	r2, r3
 801cf3a:	9b04      	ldr	r3, [sp, #16]
 801cf3c:	d036      	beq.n	801cfac <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x84>
 801cf3e:	d31e      	bcc.n	801cf7e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
 801cf40:	2f02      	cmp	r7, #2
 801cf42:	d14a      	bne.n	801cfda <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801cf44:	2e03      	cmp	r6, #3
 801cf46:	d848      	bhi.n	801cfda <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801cf48:	e8df f006 	tbb	[pc, r6]
 801cf4c:	16140702 	.word	0x16140702
 801cf50:	9504      	str	r5, [sp, #16]
 801cf52:	4620      	mov	r0, r4
 801cf54:	bcf0      	pop	{r4, r5, r6, r7}
 801cf56:	f7ff be09 	b.w	801cb6c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801cf5a:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801cf5c:	2800      	cmp	r0, #0
 801cf5e:	d03c      	beq.n	801cfda <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801cf60:	6806      	ldr	r6, [r0, #0]
 801cf62:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801cf66:	68b5      	ldr	r5, [r6, #8]
 801cf68:	4613      	mov	r3, r2
 801cf6a:	46ac      	mov	ip, r5
 801cf6c:	460a      	mov	r2, r1
 801cf6e:	4621      	mov	r1, r4
 801cf70:	bcf0      	pop	{r4, r5, r6, r7}
 801cf72:	4760      	bx	ip
 801cf74:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801cf76:	e7f1      	b.n	801cf5c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801cf78:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801cf7c:	e7ee      	b.n	801cf5c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801cf7e:	2e03      	cmp	r6, #3
 801cf80:	d82b      	bhi.n	801cfda <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801cf82:	e8df f006 	tbb	[pc, r6]
 801cf86:	0702      	.short	0x0702
 801cf88:	100e      	.short	0x100e
 801cf8a:	9504      	str	r5, [sp, #16]
 801cf8c:	4620      	mov	r0, r4
 801cf8e:	bcf0      	pop	{r4, r5, r6, r7}
 801cf90:	f7ff bd06 	b.w	801c9a0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801cf94:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801cf96:	b300      	cbz	r0, 801cfda <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801cf98:	6806      	ldr	r6, [r0, #0]
 801cf9a:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801cf9e:	68f5      	ldr	r5, [r6, #12]
 801cfa0:	e7e2      	b.n	801cf68 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801cfa2:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801cfa4:	e7f7      	b.n	801cf96 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801cfa6:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801cfaa:	e7f4      	b.n	801cf96 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801cfac:	2e03      	cmp	r6, #3
 801cfae:	d814      	bhi.n	801cfda <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801cfb0:	e8df f006 	tbb	[pc, r6]
 801cfb4:	100e0702 	.word	0x100e0702
 801cfb8:	9504      	str	r5, [sp, #16]
 801cfba:	4620      	mov	r0, r4
 801cfbc:	bcf0      	pop	{r4, r5, r6, r7}
 801cfbe:	f7ff bea1 	b.w	801cd04 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801cfc2:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801cfc4:	b148      	cbz	r0, 801cfda <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801cfc6:	6806      	ldr	r6, [r0, #0]
 801cfc8:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801cfcc:	6935      	ldr	r5, [r6, #16]
 801cfce:	e7cb      	b.n	801cf68 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801cfd0:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801cfd2:	e7f7      	b.n	801cfc4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801cfd4:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801cfd8:	e7f4      	b.n	801cfc4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801cfda:	bcf0      	pop	{r4, r5, r6, r7}
 801cfdc:	4770      	bx	lr
	...

0801cfe0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801cfe0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cfe4:	4604      	mov	r4, r0
 801cfe6:	b087      	sub	sp, #28
 801cfe8:	6810      	ldr	r0, [r2, #0]
 801cfea:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 801cfee:	f8df 9238 	ldr.w	r9, [pc, #568]	; 801d228 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801cff2:	460e      	mov	r6, r1
 801cff4:	6851      	ldr	r1, [r2, #4]
 801cff6:	ad02      	add	r5, sp, #8
 801cff8:	c503      	stmia	r5!, {r0, r1}
 801cffa:	6818      	ldr	r0, [r3, #0]
 801cffc:	6859      	ldr	r1, [r3, #4]
 801cffe:	ad04      	add	r5, sp, #16
 801d000:	4617      	mov	r7, r2
 801d002:	c503      	stmia	r5!, {r0, r1}
 801d004:	a802      	add	r0, sp, #8
 801d006:	f7f7 fba7 	bl	8014758 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d00a:	4639      	mov	r1, r7
 801d00c:	a804      	add	r0, sp, #16
 801d00e:	f7f7 fbe7 	bl	80147e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d012:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801d016:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d01a:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801d01e:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801d022:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801d026:	fb11 2103 	smlabb	r1, r1, r3, r2
 801d02a:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801d02e:	440e      	add	r6, r1
 801d030:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801d034:	440a      	add	r2, r1
 801d036:	f8ad 2010 	strh.w	r2, [sp, #16]
 801d03a:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801d03e:	4413      	add	r3, r2
 801d040:	f8ad 3012 	strh.w	r3, [sp, #18]
 801d044:	4b77      	ldr	r3, [pc, #476]	; (801d224 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801d046:	6818      	ldr	r0, [r3, #0]
 801d048:	6803      	ldr	r3, [r0, #0]
 801d04a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d04c:	4798      	blx	r3
 801d04e:	f8b9 b000 	ldrh.w	fp, [r9]
 801d052:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d056:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801d05a:	fb0b 2303 	mla	r3, fp, r3, r2
 801d05e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d062:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801d066:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801d06a:	fb05 f50b 	mul.w	r5, r5, fp
 801d06e:	9300      	str	r3, [sp, #0]
 801d070:	d069      	beq.n	801d146 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801d072:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801d076:	4558      	cmp	r0, fp
 801d078:	f080 80cc 	bcs.w	801d214 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801d07c:	9b00      	ldr	r3, [sp, #0]
 801d07e:	18c3      	adds	r3, r0, r3
 801d080:	9301      	str	r3, [sp, #4]
 801d082:	4631      	mov	r1, r6
 801d084:	9b01      	ldr	r3, [sp, #4]
 801d086:	4298      	cmp	r0, r3
 801d088:	d24f      	bcs.n	801d12a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801d08a:	f811 2b01 	ldrb.w	r2, [r1], #1
 801d08e:	2a00      	cmp	r2, #0
 801d090:	d048      	beq.n	801d124 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801d092:	fb0a f202 	mul.w	r2, sl, r2
 801d096:	1c53      	adds	r3, r2, #1
 801d098:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d09c:	121b      	asrs	r3, r3, #8
 801d09e:	d041      	beq.n	801d124 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801d0a0:	8802      	ldrh	r2, [r0, #0]
 801d0a2:	f8b4 c000 	ldrh.w	ip, [r4]
 801d0a6:	b29e      	uxth	r6, r3
 801d0a8:	1215      	asrs	r5, r2, #8
 801d0aa:	43db      	mvns	r3, r3
 801d0ac:	b2db      	uxtb	r3, r3
 801d0ae:	ea4f 272c 	mov.w	r7, ip, asr #8
 801d0b2:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801d0b6:	fb15 f503 	smulbb	r5, r5, r3
 801d0ba:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801d0be:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d0c2:	00d2      	lsls	r2, r2, #3
 801d0c4:	fb07 5706 	mla	r7, r7, r6, r5
 801d0c8:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801d0cc:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801d0d0:	b2d2      	uxtb	r2, r2
 801d0d2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801d0d6:	b2bf      	uxth	r7, r7
 801d0d8:	fb1e fe03 	smulbb	lr, lr, r3
 801d0dc:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801d0e0:	fa5f fc8c 	uxtb.w	ip, ip
 801d0e4:	fb12 f203 	smulbb	r2, r2, r3
 801d0e8:	fb05 e506 	mla	r5, r5, r6, lr
 801d0ec:	fb0c 2c06 	mla	ip, ip, r6, r2
 801d0f0:	f107 0e01 	add.w	lr, r7, #1
 801d0f4:	fa1f fc8c 	uxth.w	ip, ip
 801d0f8:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801d0fc:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 801d100:	f10c 0701 	add.w	r7, ip, #1
 801d104:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801d108:	b2ad      	uxth	r5, r5
 801d10a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801d10e:	ea47 070e 	orr.w	r7, r7, lr
 801d112:	f105 0e01 	add.w	lr, r5, #1
 801d116:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801d11a:	096d      	lsrs	r5, r5, #5
 801d11c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d120:	432f      	orrs	r7, r5
 801d122:	8007      	strh	r7, [r0, #0]
 801d124:	3002      	adds	r0, #2
 801d126:	3402      	adds	r4, #2
 801d128:	e7ac      	b.n	801d084 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801d12a:	f8b9 3000 	ldrh.w	r3, [r9]
 801d12e:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801d132:	eba3 0308 	sub.w	r3, r3, r8
 801d136:	eba6 0608 	sub.w	r6, r6, r8
 801d13a:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801d13e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d142:	440e      	add	r6, r1
 801d144:	e797      	b.n	801d076 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801d146:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801d14a:	42a8      	cmp	r0, r5
 801d14c:	d262      	bcs.n	801d214 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801d14e:	9b00      	ldr	r3, [sp, #0]
 801d150:	4631      	mov	r1, r6
 801d152:	eb00 0b03 	add.w	fp, r0, r3
 801d156:	4558      	cmp	r0, fp
 801d158:	d24e      	bcs.n	801d1f8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801d15a:	f811 3b01 	ldrb.w	r3, [r1], #1
 801d15e:	b12b      	cbz	r3, 801d16c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801d160:	2bff      	cmp	r3, #255	; 0xff
 801d162:	f8b4 e000 	ldrh.w	lr, [r4]
 801d166:	d104      	bne.n	801d172 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 801d168:	f8a0 e000 	strh.w	lr, [r0]
 801d16c:	3002      	adds	r0, #2
 801d16e:	3402      	adds	r4, #2
 801d170:	e7f1      	b.n	801d156 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801d172:	8802      	ldrh	r2, [r0, #0]
 801d174:	b29f      	uxth	r7, r3
 801d176:	1216      	asrs	r6, r2, #8
 801d178:	43db      	mvns	r3, r3
 801d17a:	b2db      	uxtb	r3, r3
 801d17c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801d180:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801d184:	fb16 f603 	smulbb	r6, r6, r3
 801d188:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801d18c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d190:	00d2      	lsls	r2, r2, #3
 801d192:	fb0c 6c07 	mla	ip, ip, r7, r6
 801d196:	b2d2      	uxtb	r2, r2
 801d198:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801d19c:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801d1a0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801d1a4:	fb1a fa03 	smulbb	sl, sl, r3
 801d1a8:	fa1f fc8c 	uxth.w	ip, ip
 801d1ac:	fb12 f303 	smulbb	r3, r2, r3
 801d1b0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d1b4:	fa5f fe8e 	uxtb.w	lr, lr
 801d1b8:	fb06 a607 	mla	r6, r6, r7, sl
 801d1bc:	f10c 0201 	add.w	r2, ip, #1
 801d1c0:	fb0e 3307 	mla	r3, lr, r7, r3
 801d1c4:	b2b6      	uxth	r6, r6
 801d1c6:	b29b      	uxth	r3, r3
 801d1c8:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801d1cc:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 801d1d0:	f106 0a01 	add.w	sl, r6, #1
 801d1d4:	f103 0c01 	add.w	ip, r3, #1
 801d1d8:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801d1dc:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801d1e0:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801d1e4:	0976      	lsrs	r6, r6, #5
 801d1e6:	ea4c 0c02 	orr.w	ip, ip, r2
 801d1ea:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801d1ee:	ea4c 0c06 	orr.w	ip, ip, r6
 801d1f2:	f8a0 c000 	strh.w	ip, [r0]
 801d1f6:	e7b9      	b.n	801d16c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801d1f8:	f8b9 3000 	ldrh.w	r3, [r9]
 801d1fc:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801d200:	eba3 0308 	sub.w	r3, r3, r8
 801d204:	eba6 0608 	sub.w	r6, r6, r8
 801d208:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801d20c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d210:	440e      	add	r6, r1
 801d212:	e79a      	b.n	801d14a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 801d214:	4b03      	ldr	r3, [pc, #12]	; (801d224 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801d216:	6818      	ldr	r0, [r3, #0]
 801d218:	6803      	ldr	r3, [r0, #0]
 801d21a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d21c:	4798      	blx	r3
 801d21e:	b007      	add	sp, #28
 801d220:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d224:	200137bc 	.word	0x200137bc
 801d228:	200137b6 	.word	0x200137b6

0801d22c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801d22c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d230:	b089      	sub	sp, #36	; 0x24
 801d232:	4682      	mov	sl, r0
 801d234:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 801d238:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801d23a:	460f      	mov	r7, r1
 801d23c:	4691      	mov	r9, r2
 801d23e:	4698      	mov	r8, r3
 801d240:	2e00      	cmp	r6, #0
 801d242:	d03d      	beq.n	801d2c0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d244:	4608      	mov	r0, r1
 801d246:	f7fa fe59 	bl	8017efc <_ZNK8touchgfx6Bitmap8getWidthEv>
 801d24a:	4605      	mov	r5, r0
 801d24c:	4638      	mov	r0, r7
 801d24e:	f7fa fe89 	bl	8017f64 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801d252:	f8ad 000e 	strh.w	r0, [sp, #14]
 801d256:	4638      	mov	r0, r7
 801d258:	f8ad 9008 	strh.w	r9, [sp, #8]
 801d25c:	f8ad 500c 	strh.w	r5, [sp, #12]
 801d260:	f8ad 800a 	strh.w	r8, [sp, #10]
 801d264:	f7fa ff36 	bl	80180d4 <_ZNK8touchgfx6Bitmap7getDataEv>
 801d268:	4605      	mov	r5, r0
 801d26a:	4638      	mov	r0, r7
 801d26c:	f7fa ff62 	bl	8018134 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801d270:	4681      	mov	r9, r0
 801d272:	4638      	mov	r0, r7
 801d274:	f7fa ffb2 	bl	80181dc <_ZNK8touchgfx6Bitmap9getFormatEv>
 801d278:	280b      	cmp	r0, #11
 801d27a:	d821      	bhi.n	801d2c0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d27c:	e8df f000 	tbb	[pc, r0]
 801d280:	2006aebe 	.word	0x2006aebe
 801d284:	20202020 	.word	0x20202020
 801d288:	b5202020 	.word	0xb5202020
 801d28c:	4bb0      	ldr	r3, [pc, #704]	; (801d550 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 801d28e:	6818      	ldr	r0, [r3, #0]
 801d290:	6803      	ldr	r3, [r0, #0]
 801d292:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801d294:	4798      	blx	r3
 801d296:	2eff      	cmp	r6, #255	; 0xff
 801d298:	d101      	bne.n	801d29e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801d29a:	0683      	lsls	r3, r0, #26
 801d29c:	d506      	bpl.n	801d2ac <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 801d29e:	4633      	mov	r3, r6
 801d2a0:	4622      	mov	r2, r4
 801d2a2:	a902      	add	r1, sp, #8
 801d2a4:	4628      	mov	r0, r5
 801d2a6:	f7ff f909 	bl	801c4bc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801d2aa:	e009      	b.n	801d2c0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d2ac:	4638      	mov	r0, r7
 801d2ae:	f7fa fed9 	bl	8018064 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801d2b2:	b940      	cbnz	r0, 801d2c6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 801d2b4:	4623      	mov	r3, r4
 801d2b6:	aa02      	add	r2, sp, #8
 801d2b8:	4629      	mov	r1, r5
 801d2ba:	4650      	mov	r0, sl
 801d2bc:	f7ff f9e4 	bl	801c688 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801d2c0:	b009      	add	sp, #36	; 0x24
 801d2c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d2c6:	f10d 0818 	add.w	r8, sp, #24
 801d2ca:	4639      	mov	r1, r7
 801d2cc:	4640      	mov	r0, r8
 801d2ce:	f7fa fe7d 	bl	8017fcc <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801d2d2:	e898 0003 	ldmia.w	r8, {r0, r1}
 801d2d6:	af04      	add	r7, sp, #16
 801d2d8:	e887 0003 	stmia.w	r7, {r0, r1}
 801d2dc:	4638      	mov	r0, r7
 801d2de:	4621      	mov	r1, r4
 801d2e0:	f7f2 fadc 	bl	800f89c <_ZN8touchgfx4RectaNERKS0_>
 801d2e4:	4638      	mov	r0, r7
 801d2e6:	f7f2 fb1c 	bl	800f922 <_ZNK8touchgfx4Rect7isEmptyEv>
 801d2ea:	2800      	cmp	r0, #0
 801d2ec:	d1d7      	bne.n	801d29e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801d2ee:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d2f2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801d2f6:	4293      	cmp	r3, r2
 801d2f8:	dd12      	ble.n	801d320 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 801d2fa:	1a9b      	subs	r3, r3, r2
 801d2fc:	f9b4 0000 	ldrsh.w	r0, [r4]
 801d300:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801d304:	f8ad 0018 	strh.w	r0, [sp, #24]
 801d308:	f8ad 201a 	strh.w	r2, [sp, #26]
 801d30c:	f8ad 101c 	strh.w	r1, [sp, #28]
 801d310:	f8ad 301e 	strh.w	r3, [sp, #30]
 801d314:	4642      	mov	r2, r8
 801d316:	4633      	mov	r3, r6
 801d318:	a902      	add	r1, sp, #8
 801d31a:	4628      	mov	r0, r5
 801d31c:	f7ff f8ce 	bl	801c4bc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801d320:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801d324:	f9b4 2000 	ldrsh.w	r2, [r4]
 801d328:	4293      	cmp	r3, r2
 801d32a:	dd12      	ble.n	801d352 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 801d32c:	1a9b      	subs	r3, r3, r2
 801d32e:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801d332:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801d336:	f8ad 2018 	strh.w	r2, [sp, #24]
 801d33a:	f8ad 001a 	strh.w	r0, [sp, #26]
 801d33e:	f8ad 301c 	strh.w	r3, [sp, #28]
 801d342:	f8ad 101e 	strh.w	r1, [sp, #30]
 801d346:	23ff      	movs	r3, #255	; 0xff
 801d348:	4642      	mov	r2, r8
 801d34a:	a902      	add	r1, sp, #8
 801d34c:	4628      	mov	r0, r5
 801d34e:	f7ff f8b5 	bl	801c4bc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801d352:	463b      	mov	r3, r7
 801d354:	aa02      	add	r2, sp, #8
 801d356:	4629      	mov	r1, r5
 801d358:	4650      	mov	r0, sl
 801d35a:	f7ff f995 	bl	801c688 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801d35e:	88a2      	ldrh	r2, [r4, #4]
 801d360:	8823      	ldrh	r3, [r4, #0]
 801d362:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801d366:	4413      	add	r3, r2
 801d368:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801d36c:	440a      	add	r2, r1
 801d36e:	b29b      	uxth	r3, r3
 801d370:	b292      	uxth	r2, r2
 801d372:	b211      	sxth	r1, r2
 801d374:	b218      	sxth	r0, r3
 801d376:	4288      	cmp	r0, r1
 801d378:	dd12      	ble.n	801d3a0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 801d37a:	1a9b      	subs	r3, r3, r2
 801d37c:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801d380:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 801d384:	f8ad 1018 	strh.w	r1, [sp, #24]
 801d388:	f8ad 301c 	strh.w	r3, [sp, #28]
 801d38c:	f8ad 001e 	strh.w	r0, [sp, #30]
 801d390:	23ff      	movs	r3, #255	; 0xff
 801d392:	4642      	mov	r2, r8
 801d394:	a902      	add	r1, sp, #8
 801d396:	4628      	mov	r0, r5
 801d398:	f8ad 601a 	strh.w	r6, [sp, #26]
 801d39c:	f7ff f88e 	bl	801c4bc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801d3a0:	88e2      	ldrh	r2, [r4, #6]
 801d3a2:	8863      	ldrh	r3, [r4, #2]
 801d3a4:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801d3a8:	4413      	add	r3, r2
 801d3aa:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801d3ae:	440a      	add	r2, r1
 801d3b0:	b29b      	uxth	r3, r3
 801d3b2:	b292      	uxth	r2, r2
 801d3b4:	b211      	sxth	r1, r2
 801d3b6:	b218      	sxth	r0, r3
 801d3b8:	4288      	cmp	r0, r1
 801d3ba:	dd81      	ble.n	801d2c0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d3bc:	1a9b      	subs	r3, r3, r2
 801d3be:	f9b4 6000 	ldrsh.w	r6, [r4]
 801d3c2:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801d3c6:	f8ad 301e 	strh.w	r3, [sp, #30]
 801d3ca:	f8ad 6018 	strh.w	r6, [sp, #24]
 801d3ce:	f8ad 101a 	strh.w	r1, [sp, #26]
 801d3d2:	f8ad 001c 	strh.w	r0, [sp, #28]
 801d3d6:	23ff      	movs	r3, #255	; 0xff
 801d3d8:	4642      	mov	r2, r8
 801d3da:	e762      	b.n	801d2a2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 801d3dc:	4633      	mov	r3, r6
 801d3de:	4622      	mov	r2, r4
 801d3e0:	a902      	add	r1, sp, #8
 801d3e2:	4628      	mov	r0, r5
 801d3e4:	f7ff f9c0 	bl	801c768 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801d3e8:	e76a      	b.n	801d2c0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d3ea:	e9cd 4600 	strd	r4, r6, [sp]
 801d3ee:	ab02      	add	r3, sp, #8
 801d3f0:	464a      	mov	r2, r9
 801d3f2:	4629      	mov	r1, r5
 801d3f4:	4650      	mov	r0, sl
 801d3f6:	f7ff fd97 	bl	801cf28 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801d3fa:	e761      	b.n	801d2c0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d3fc:	4638      	mov	r0, r7
 801d3fe:	f7fa fe31 	bl	8018064 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801d402:	b950      	cbnz	r0, 801d41a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 801d404:	e9cd 6000 	strd	r6, r0, [sp]
 801d408:	f8da 3000 	ldr.w	r3, [sl]
 801d40c:	aa02      	add	r2, sp, #8
 801d40e:	68de      	ldr	r6, [r3, #12]
 801d410:	4629      	mov	r1, r5
 801d412:	4623      	mov	r3, r4
 801d414:	4650      	mov	r0, sl
 801d416:	47b0      	blx	r6
 801d418:	e752      	b.n	801d2c0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d41a:	f10d 0818 	add.w	r8, sp, #24
 801d41e:	4639      	mov	r1, r7
 801d420:	4640      	mov	r0, r8
 801d422:	f7fa fdd3 	bl	8017fcc <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801d426:	e898 0003 	ldmia.w	r8, {r0, r1}
 801d42a:	af04      	add	r7, sp, #16
 801d42c:	e887 0003 	stmia.w	r7, {r0, r1}
 801d430:	4638      	mov	r0, r7
 801d432:	4621      	mov	r1, r4
 801d434:	f7f2 fa32 	bl	800f89c <_ZN8touchgfx4RectaNERKS0_>
 801d438:	4638      	mov	r0, r7
 801d43a:	f7f2 fa72 	bl	800f922 <_ZNK8touchgfx4Rect7isEmptyEv>
 801d43e:	b138      	cbz	r0, 801d450 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 801d440:	9600      	str	r6, [sp, #0]
 801d442:	4623      	mov	r3, r4
 801d444:	aa02      	add	r2, sp, #8
 801d446:	4649      	mov	r1, r9
 801d448:	4628      	mov	r0, r5
 801d44a:	f7ff fdc9 	bl	801cfe0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801d44e:	e737      	b.n	801d2c0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d450:	e9cd 6000 	strd	r6, r0, [sp]
 801d454:	f8da 3000 	ldr.w	r3, [sl]
 801d458:	aa02      	add	r2, sp, #8
 801d45a:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801d45e:	4629      	mov	r1, r5
 801d460:	463b      	mov	r3, r7
 801d462:	4650      	mov	r0, sl
 801d464:	47d8      	blx	fp
 801d466:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d46a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801d46e:	4293      	cmp	r3, r2
 801d470:	dd13      	ble.n	801d49a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 801d472:	f9b4 0000 	ldrsh.w	r0, [r4]
 801d476:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801d47a:	f8ad 0018 	strh.w	r0, [sp, #24]
 801d47e:	1a9b      	subs	r3, r3, r2
 801d480:	f8ad 201a 	strh.w	r2, [sp, #26]
 801d484:	f8ad 101c 	strh.w	r1, [sp, #28]
 801d488:	f8ad 301e 	strh.w	r3, [sp, #30]
 801d48c:	9600      	str	r6, [sp, #0]
 801d48e:	4643      	mov	r3, r8
 801d490:	aa02      	add	r2, sp, #8
 801d492:	4649      	mov	r1, r9
 801d494:	4628      	mov	r0, r5
 801d496:	f7ff fda3 	bl	801cfe0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801d49a:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801d49e:	f9b4 2000 	ldrsh.w	r2, [r4]
 801d4a2:	4293      	cmp	r3, r2
 801d4a4:	dd13      	ble.n	801d4ce <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 801d4a6:	1a9b      	subs	r3, r3, r2
 801d4a8:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801d4ac:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801d4b0:	f8ad 2018 	strh.w	r2, [sp, #24]
 801d4b4:	f8ad 001a 	strh.w	r0, [sp, #26]
 801d4b8:	f8ad 301c 	strh.w	r3, [sp, #28]
 801d4bc:	f8ad 101e 	strh.w	r1, [sp, #30]
 801d4c0:	9600      	str	r6, [sp, #0]
 801d4c2:	4643      	mov	r3, r8
 801d4c4:	aa02      	add	r2, sp, #8
 801d4c6:	4649      	mov	r1, r9
 801d4c8:	4628      	mov	r0, r5
 801d4ca:	f7ff fd89 	bl	801cfe0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801d4ce:	88a2      	ldrh	r2, [r4, #4]
 801d4d0:	8823      	ldrh	r3, [r4, #0]
 801d4d2:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801d4d6:	4413      	add	r3, r2
 801d4d8:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801d4dc:	440a      	add	r2, r1
 801d4de:	b29b      	uxth	r3, r3
 801d4e0:	b292      	uxth	r2, r2
 801d4e2:	b211      	sxth	r1, r2
 801d4e4:	b218      	sxth	r0, r3
 801d4e6:	4288      	cmp	r0, r1
 801d4e8:	dd13      	ble.n	801d512 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 801d4ea:	1a9b      	subs	r3, r3, r2
 801d4ec:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801d4f0:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 801d4f4:	f8ad 1018 	strh.w	r1, [sp, #24]
 801d4f8:	f8ad 301c 	strh.w	r3, [sp, #28]
 801d4fc:	f8ad 001e 	strh.w	r0, [sp, #30]
 801d500:	9600      	str	r6, [sp, #0]
 801d502:	4643      	mov	r3, r8
 801d504:	aa02      	add	r2, sp, #8
 801d506:	4649      	mov	r1, r9
 801d508:	4628      	mov	r0, r5
 801d50a:	f8ad 701a 	strh.w	r7, [sp, #26]
 801d50e:	f7ff fd67 	bl	801cfe0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801d512:	88e2      	ldrh	r2, [r4, #6]
 801d514:	8863      	ldrh	r3, [r4, #2]
 801d516:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801d51a:	4413      	add	r3, r2
 801d51c:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801d520:	440a      	add	r2, r1
 801d522:	b29b      	uxth	r3, r3
 801d524:	b292      	uxth	r2, r2
 801d526:	b211      	sxth	r1, r2
 801d528:	b218      	sxth	r0, r3
 801d52a:	4288      	cmp	r0, r1
 801d52c:	f77f aec8 	ble.w	801d2c0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d530:	f9b4 7000 	ldrsh.w	r7, [r4]
 801d534:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801d538:	f8ad 7018 	strh.w	r7, [sp, #24]
 801d53c:	1a9b      	subs	r3, r3, r2
 801d53e:	f8ad 301e 	strh.w	r3, [sp, #30]
 801d542:	f8ad 101a 	strh.w	r1, [sp, #26]
 801d546:	f8ad 001c 	strh.w	r0, [sp, #28]
 801d54a:	9600      	str	r6, [sp, #0]
 801d54c:	4643      	mov	r3, r8
 801d54e:	e779      	b.n	801d444 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 801d550:	200137bc 	.word	0x200137bc

0801d554 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 801d554:	b180      	cbz	r0, 801d578 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 801d556:	2903      	cmp	r1, #3
 801d558:	d81c      	bhi.n	801d594 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801d55a:	e8df f001 	tbb	[pc, r1]
 801d55e:	1d02      	.short	0x1d02
 801d560:	1f08      	.short	0x1f08
 801d562:	4b10      	ldr	r3, [pc, #64]	; (801d5a4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801d564:	8818      	ldrh	r0, [r3, #0]
 801d566:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801d56a:	4240      	negs	r0, r0
 801d56c:	4770      	bx	lr
 801d56e:	4b0d      	ldr	r3, [pc, #52]	; (801d5a4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801d570:	8818      	ldrh	r0, [r3, #0]
 801d572:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801d576:	4770      	bx	lr
 801d578:	2903      	cmp	r1, #3
 801d57a:	d80b      	bhi.n	801d594 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801d57c:	a301      	add	r3, pc, #4	; (adr r3, 801d584 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801d57e:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801d582:	bf00      	nop
 801d584:	0801d599 	.word	0x0801d599
 801d588:	0801d56f 	.word	0x0801d56f
 801d58c:	0801d59d 	.word	0x0801d59d
 801d590:	0801d563 	.word	0x0801d563
 801d594:	2000      	movs	r0, #0
 801d596:	4770      	bx	lr
 801d598:	2001      	movs	r0, #1
 801d59a:	4770      	bx	lr
 801d59c:	f04f 30ff 	mov.w	r0, #4294967295
 801d5a0:	4770      	bx	lr
 801d5a2:	bf00      	nop
 801d5a4:	200137b6 	.word	0x200137b6

0801d5a8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 801d5a8:	b180      	cbz	r0, 801d5cc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801d5aa:	2903      	cmp	r1, #3
 801d5ac:	d81c      	bhi.n	801d5e8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801d5ae:	e8df f001 	tbb	[pc, r1]
 801d5b2:	021d      	.short	0x021d
 801d5b4:	071f      	.short	0x071f
 801d5b6:	4b10      	ldr	r3, [pc, #64]	; (801d5f8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801d5b8:	8818      	ldrh	r0, [r3, #0]
 801d5ba:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801d5be:	4770      	bx	lr
 801d5c0:	4b0d      	ldr	r3, [pc, #52]	; (801d5f8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801d5c2:	8818      	ldrh	r0, [r3, #0]
 801d5c4:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801d5c8:	4240      	negs	r0, r0
 801d5ca:	4770      	bx	lr
 801d5cc:	2903      	cmp	r1, #3
 801d5ce:	d80b      	bhi.n	801d5e8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801d5d0:	a301      	add	r3, pc, #4	; (adr r3, 801d5d8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801d5d2:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801d5d6:	bf00      	nop
 801d5d8:	0801d5b7 	.word	0x0801d5b7
 801d5dc:	0801d5f1 	.word	0x0801d5f1
 801d5e0:	0801d5c1 	.word	0x0801d5c1
 801d5e4:	0801d5ed 	.word	0x0801d5ed
 801d5e8:	2000      	movs	r0, #0
 801d5ea:	4770      	bx	lr
 801d5ec:	2001      	movs	r0, #1
 801d5ee:	4770      	bx	lr
 801d5f0:	f04f 30ff 	mov.w	r0, #4294967295
 801d5f4:	4770      	bx	lr
 801d5f6:	bf00      	nop
 801d5f8:	200137b6 	.word	0x200137b6

0801d5fc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801d5fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d600:	b099      	sub	sp, #100	; 0x64
 801d602:	910b      	str	r1, [sp, #44]	; 0x2c
 801d604:	a914      	add	r1, sp, #80	; 0x50
 801d606:	e881 000c 	stmia.w	r1, {r2, r3}
 801d60a:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 801d60e:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 801d612:	f891 900d 	ldrb.w	r9, [r1, #13]
 801d616:	9309      	str	r3, [sp, #36]	; 0x24
 801d618:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801d61c:	9310      	str	r3, [sp, #64]	; 0x40
 801d61e:	ea4f 1749 	mov.w	r7, r9, lsl #5
 801d622:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 801d626:	930c      	str	r3, [sp, #48]	; 0x30
 801d628:	f407 7380 	and.w	r3, r7, #256	; 0x100
 801d62c:	798f      	ldrb	r7, [r1, #6]
 801d62e:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 801d632:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 801d636:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 801d63a:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 801d63e:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 801d642:	431f      	orrs	r7, r3
 801d644:	f000 8195 	beq.w	801d972 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801d648:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801d64c:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801d650:	f891 9007 	ldrb.w	r9, [r1, #7]
 801d654:	ea59 0903 	orrs.w	r9, r9, r3
 801d658:	f000 818b 	beq.w	801d972 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801d65c:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801d660:	b29b      	uxth	r3, r3
 801d662:	2d00      	cmp	r5, #0
 801d664:	f000 812e 	beq.w	801d8c4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 801d668:	1aed      	subs	r5, r5, r3
 801d66a:	b2ad      	uxth	r5, r5
 801d66c:	042b      	lsls	r3, r5, #16
 801d66e:	d502      	bpl.n	801d676 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801d670:	1b64      	subs	r4, r4, r5
 801d672:	b224      	sxth	r4, r4
 801d674:	2500      	movs	r5, #0
 801d676:	f9b2 1000 	ldrsh.w	r1, [r2]
 801d67a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 801d67e:	428c      	cmp	r4, r1
 801d680:	b28b      	uxth	r3, r1
 801d682:	bfbf      	itttt	lt
 801d684:	18ed      	addlt	r5, r5, r3
 801d686:	1b2c      	sublt	r4, r5, r4
 801d688:	b2a5      	uxthlt	r5, r4
 801d68a:	460c      	movlt	r4, r1
 801d68c:	8891      	ldrh	r1, [r2, #4]
 801d68e:	440b      	add	r3, r1
 801d690:	b21b      	sxth	r3, r3
 801d692:	930f      	str	r3, [sp, #60]	; 0x3c
 801d694:	88d3      	ldrh	r3, [r2, #6]
 801d696:	8852      	ldrh	r2, [r2, #2]
 801d698:	4413      	add	r3, r2
 801d69a:	b21b      	sxth	r3, r3
 801d69c:	930d      	str	r3, [sp, #52]	; 0x34
 801d69e:	4bbe      	ldr	r3, [pc, #760]	; (801d998 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 801d6a0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801d6a2:	f893 b000 	ldrb.w	fp, [r3]
 801d6a6:	f10b 3cff 	add.w	ip, fp, #4294967295
 801d6aa:	f1dc 0300 	rsbs	r3, ip, #0
 801d6ae:	eb43 030c 	adc.w	r3, r3, ip
 801d6b2:	930e      	str	r3, [sp, #56]	; 0x38
 801d6b4:	4621      	mov	r1, r4
 801d6b6:	4653      	mov	r3, sl
 801d6b8:	a814      	add	r0, sp, #80	; 0x50
 801d6ba:	f7f6 fec2 	bl	8014442 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801d6be:	4621      	mov	r1, r4
 801d6c0:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 801d6c4:	4653      	mov	r3, sl
 801d6c6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801d6c8:	a814      	add	r0, sp, #80	; 0x50
 801d6ca:	f7f6 fed7 	bl	801447c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801d6ce:	a918      	add	r1, sp, #96	; 0x60
 801d6d0:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801d6d4:	a817      	add	r0, sp, #92	; 0x5c
 801d6d6:	f7f6 fffd 	bl	80146d4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801d6da:	f1ba 0f00 	cmp.w	sl, #0
 801d6de:	f040 80f4 	bne.w	801d8ca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 801d6e2:	f1bb 0f01 	cmp.w	fp, #1
 801d6e6:	f040 80f8 	bne.w	801d8da <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 801d6ea:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d6ec:	2b00      	cmp	r3, #0
 801d6ee:	f040 8145 	bne.w	801d97c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 801d6f2:	b2ba      	uxth	r2, r7
 801d6f4:	b905      	cbnz	r5, 801d6f8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 801d6f6:	b16e      	cbz	r6, 801d714 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 801d6f8:	fb06 5302 	mla	r3, r6, r2, r5
 801d6fc:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801d6fe:	fb08 f303 	mul.w	r3, r8, r3
 801d702:	4631      	mov	r1, r6
 801d704:	f003 0607 	and.w	r6, r3, #7
 801d708:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 801d70c:	9328      	str	r3, [sp, #160]	; 0xa0
 801d70e:	eba9 0301 	sub.w	r3, r9, r1
 801d712:	930a      	str	r3, [sp, #40]	; 0x28
 801d714:	4651      	mov	r1, sl
 801d716:	980e      	ldr	r0, [sp, #56]	; 0x38
 801d718:	f7ff ff1c 	bl	801d554 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801d71c:	4681      	mov	r9, r0
 801d71e:	980e      	ldr	r0, [sp, #56]	; 0x38
 801d720:	f7ff ff42 	bl	801d5a8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 801d724:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d726:	9909      	ldr	r1, [sp, #36]	; 0x24
 801d728:	eba3 0a01 	sub.w	sl, r3, r1
 801d72c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d72e:	459a      	cmp	sl, r3
 801d730:	bfa8      	it	ge
 801d732:	469a      	movge	sl, r3
 801d734:	f1ba 0f00 	cmp.w	sl, #0
 801d738:	4683      	mov	fp, r0
 801d73a:	f340 811a 	ble.w	801d972 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801d73e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801d740:	1b64      	subs	r4, r4, r5
 801d742:	1b1c      	subs	r4, r3, r4
 801d744:	42bc      	cmp	r4, r7
 801d746:	bfd4      	ite	le
 801d748:	ebc5 0504 	rsble	r5, r5, r4
 801d74c:	ebc5 0507 	rsbgt	r5, r5, r7
 801d750:	2d00      	cmp	r5, #0
 801d752:	f340 810e 	ble.w	801d972 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801d756:	1b52      	subs	r2, r2, r5
 801d758:	fb08 f302 	mul.w	r3, r8, r2
 801d75c:	930f      	str	r3, [sp, #60]	; 0x3c
 801d75e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d760:	2b00      	cmp	r3, #0
 801d762:	f040 8116 	bne.w	801d992 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 801d766:	4b8d      	ldr	r3, [pc, #564]	; (801d99c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 801d768:	6818      	ldr	r0, [r3, #0]
 801d76a:	6803      	ldr	r3, [r0, #0]
 801d76c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d76e:	4798      	blx	r3
 801d770:	2301      	movs	r3, #1
 801d772:	fa03 f308 	lsl.w	r3, r3, r8
 801d776:	4a8a      	ldr	r2, [pc, #552]	; (801d9a0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 801d778:	3b01      	subs	r3, #1
 801d77a:	b2db      	uxtb	r3, r3
 801d77c:	8811      	ldrh	r1, [r2, #0]
 801d77e:	930e      	str	r3, [sp, #56]	; 0x38
 801d780:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 801d784:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 801d788:	fb01 2303 	mla	r3, r1, r3, r2
 801d78c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801d790:	930a      	str	r3, [sp, #40]	; 0x28
 801d792:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801d794:	f3c3 4307 	ubfx	r3, r3, #16, #8
 801d798:	9313      	str	r3, [sp, #76]	; 0x4c
 801d79a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801d79c:	0a19      	lsrs	r1, r3, #8
 801d79e:	b2cb      	uxtb	r3, r1
 801d7a0:	9312      	str	r3, [sp, #72]	; 0x48
 801d7a2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801d7a4:	b2db      	uxtb	r3, r3
 801d7a6:	9311      	str	r3, [sp, #68]	; 0x44
 801d7a8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801d7aa:	095a      	lsrs	r2, r3, #5
 801d7ac:	4b7d      	ldr	r3, [pc, #500]	; (801d9a4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801d7ae:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d7b2:	400b      	ands	r3, r1
 801d7b4:	4313      	orrs	r3, r2
 801d7b6:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801d7b8:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801d7bc:	4313      	orrs	r3, r2
 801d7be:	b29b      	uxth	r3, r3
 801d7c0:	9310      	str	r3, [sp, #64]	; 0x40
 801d7c2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801d7c4:	781a      	ldrb	r2, [r3, #0]
 801d7c6:	ea4f 0349 	mov.w	r3, r9, lsl #1
 801d7ca:	4132      	asrs	r2, r6
 801d7cc:	fb05 b919 	mls	r9, r5, r9, fp
 801d7d0:	fb03 fb05 	mul.w	fp, r3, r5
 801d7d4:	b2d2      	uxtb	r2, r2
 801d7d6:	930d      	str	r3, [sp, #52]	; 0x34
 801d7d8:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 801d7dc:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801d7e0:	f0c0 80f5 	bcc.w	801d9ce <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 801d7e4:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 801d7e8:	46ae      	mov	lr, r5
 801d7ea:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801d7ee:	f0c0 80dd 	bcc.w	801d9ac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 801d7f2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d7f4:	4013      	ands	r3, r2
 801d7f6:	d055      	beq.n	801d8a4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 801d7f8:	20ff      	movs	r0, #255	; 0xff
 801d7fa:	990e      	ldr	r1, [sp, #56]	; 0x38
 801d7fc:	fb90 f1f1 	sdiv	r1, r0, r1
 801d800:	434b      	muls	r3, r1
 801d802:	2bfe      	cmp	r3, #254	; 0xfe
 801d804:	dd03      	ble.n	801d80e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 801d806:	990c      	ldr	r1, [sp, #48]	; 0x30
 801d808:	4281      	cmp	r1, r0
 801d80a:	f000 80cd 	beq.w	801d9a8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 801d80e:	990c      	ldr	r1, [sp, #48]	; 0x30
 801d810:	f8bc 4000 	ldrh.w	r4, [ip]
 801d814:	fb11 f303 	smulbb	r3, r1, r3
 801d818:	b29b      	uxth	r3, r3
 801d81a:	1c59      	adds	r1, r3, #1
 801d81c:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801d820:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801d824:	b29f      	uxth	r7, r3
 801d826:	43db      	mvns	r3, r3
 801d828:	b2db      	uxtb	r3, r3
 801d82a:	9309      	str	r3, [sp, #36]	; 0x24
 801d82c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801d82e:	1220      	asrs	r0, r4, #8
 801d830:	fb13 f907 	smulbb	r9, r3, r7
 801d834:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801d838:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d83a:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 801d83e:	fb00 9003 	mla	r0, r0, r3, r9
 801d842:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801d844:	10e1      	asrs	r1, r4, #3
 801d846:	fb13 f907 	smulbb	r9, r3, r7
 801d84a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801d84e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d850:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801d854:	fb01 9103 	mla	r1, r1, r3, r9
 801d858:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801d85a:	00e4      	lsls	r4, r4, #3
 801d85c:	fb13 f707 	smulbb	r7, r3, r7
 801d860:	b2e4      	uxtb	r4, r4
 801d862:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d864:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801d868:	fb04 7403 	mla	r4, r4, r3, r7
 801d86c:	b280      	uxth	r0, r0
 801d86e:	b2a4      	uxth	r4, r4
 801d870:	1c43      	adds	r3, r0, #1
 801d872:	f104 0901 	add.w	r9, r4, #1
 801d876:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801d87a:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 801d87e:	b289      	uxth	r1, r1
 801d880:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 801d884:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801d888:	ea49 0000 	orr.w	r0, r9, r0
 801d88c:	f101 0901 	add.w	r9, r1, #1
 801d890:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 801d894:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801d898:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801d89c:	ea40 0009 	orr.w	r0, r0, r9
 801d8a0:	f8ac 0000 	strh.w	r0, [ip]
 801d8a4:	4446      	add	r6, r8
 801d8a6:	b2b6      	uxth	r6, r6
 801d8a8:	2e07      	cmp	r6, #7
 801d8aa:	bf81      	itttt	hi
 801d8ac:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 801d8ae:	785a      	ldrbhi	r2, [r3, #1]
 801d8b0:	3301      	addhi	r3, #1
 801d8b2:	9328      	strhi	r3, [sp, #160]	; 0xa0
 801d8b4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d8b6:	bf9a      	itte	ls
 801d8b8:	fa42 f208 	asrls.w	r2, r2, r8
 801d8bc:	b2d2      	uxtbls	r2, r2
 801d8be:	2600      	movhi	r6, #0
 801d8c0:	449c      	add	ip, r3
 801d8c2:	e792      	b.n	801d7ea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 801d8c4:	441c      	add	r4, r3
 801d8c6:	b224      	sxth	r4, r4
 801d8c8:	e6d5      	b.n	801d676 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801d8ca:	f1ba 0f01 	cmp.w	sl, #1
 801d8ce:	f47f af0c 	bne.w	801d6ea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801d8d2:	f1bb 0f01 	cmp.w	fp, #1
 801d8d6:	f47f af08 	bne.w	801d6ea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801d8da:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 801d99c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 801d8de:	f8db 0000 	ldr.w	r0, [fp]
 801d8e2:	6803      	ldr	r3, [r0, #0]
 801d8e4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801d8e6:	4798      	blx	r3
 801d8e8:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 801d8ec:	465a      	mov	r2, fp
 801d8ee:	d006      	beq.n	801d8fe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801d8f0:	f1b8 0f04 	cmp.w	r8, #4
 801d8f4:	d140      	bne.n	801d978 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 801d8f6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d8f8:	3300      	adds	r3, #0
 801d8fa:	bf18      	it	ne
 801d8fc:	2301      	movne	r3, #1
 801d8fe:	0580      	lsls	r0, r0, #22
 801d900:	d56e      	bpl.n	801d9e0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801d902:	f1b8 0f08 	cmp.w	r8, #8
 801d906:	d16b      	bne.n	801d9e0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801d908:	2b00      	cmp	r3, #0
 801d90a:	bf0c      	ite	eq
 801d90c:	f44f 7100 	moveq.w	r1, #512	; 0x200
 801d910:	f44f 7180 	movne.w	r1, #256	; 0x100
 801d914:	2d00      	cmp	r5, #0
 801d916:	f47f aee8 	bne.w	801d6ea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801d91a:	2e00      	cmp	r6, #0
 801d91c:	f47f aee5 	bne.w	801d6ea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801d920:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801d922:	19e3      	adds	r3, r4, r7
 801d924:	4283      	cmp	r3, r0
 801d926:	f73f aee0 	bgt.w	801d6ea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801d92a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d92c:	980d      	ldr	r0, [sp, #52]	; 0x34
 801d92e:	444b      	add	r3, r9
 801d930:	4283      	cmp	r3, r0
 801d932:	f73f aeda 	bgt.w	801d6ea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801d936:	6810      	ldr	r0, [r2, #0]
 801d938:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 801d93c:	6804      	ldr	r4, [r0, #0]
 801d93e:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801d942:	b2bf      	uxth	r7, r7
 801d944:	f1b8 0f08 	cmp.w	r8, #8
 801d948:	f04f 0500 	mov.w	r5, #0
 801d94c:	bf18      	it	ne
 801d94e:	3701      	addne	r7, #1
 801d950:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801d954:	990c      	ldr	r1, [sp, #48]	; 0x30
 801d956:	9104      	str	r1, [sp, #16]
 801d958:	bf18      	it	ne
 801d95a:	f027 0701 	bicne.w	r7, r7, #1
 801d95e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801d960:	bf18      	it	ne
 801d962:	b2bf      	uxthne	r7, r7
 801d964:	e9cd 7102 	strd	r7, r1, [sp, #8]
 801d968:	e9cd 7900 	strd	r7, r9, [sp]
 801d96c:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801d96e:	6d64      	ldr	r4, [r4, #84]	; 0x54
 801d970:	47a0      	blx	r4
 801d972:	b019      	add	sp, #100	; 0x64
 801d974:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d978:	2300      	movs	r3, #0
 801d97a:	e7c0      	b.n	801d8fe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801d97c:	2208      	movs	r2, #8
 801d97e:	fb92 f3f8 	sdiv	r3, r2, r8
 801d982:	1e5a      	subs	r2, r3, #1
 801d984:	443a      	add	r2, r7
 801d986:	fb92 f2f3 	sdiv	r2, r2, r3
 801d98a:	fb12 f203 	smulbb	r2, r2, r3
 801d98e:	b292      	uxth	r2, r2
 801d990:	e6b0      	b.n	801d6f4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 801d992:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801d994:	e6ec      	b.n	801d770 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 801d996:	bf00      	nop
 801d998:	200137b4 	.word	0x200137b4
 801d99c:	200137bc 	.word	0x200137bc
 801d9a0:	200137b6 	.word	0x200137b6
 801d9a4:	00fff800 	.word	0x00fff800
 801d9a8:	9810      	ldr	r0, [sp, #64]	; 0x40
 801d9aa:	e779      	b.n	801d8a0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 801d9ac:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801d9ae:	b153      	cbz	r3, 801d9c6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 801d9b0:	441e      	add	r6, r3
 801d9b2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801d9b4:	b2b6      	uxth	r6, r6
 801d9b6:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 801d9ba:	f006 0607 	and.w	r6, r6, #7
 801d9be:	781a      	ldrb	r2, [r3, #0]
 801d9c0:	9328      	str	r3, [sp, #160]	; 0xa0
 801d9c2:	4132      	asrs	r2, r6
 801d9c4:	b2d2      	uxtb	r2, r2
 801d9c6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d9c8:	445b      	add	r3, fp
 801d9ca:	930a      	str	r3, [sp, #40]	; 0x28
 801d9cc:	e706      	b.n	801d7dc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 801d9ce:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d9d0:	2b00      	cmp	r3, #0
 801d9d2:	d1ce      	bne.n	801d972 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801d9d4:	4b05      	ldr	r3, [pc, #20]	; (801d9ec <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 801d9d6:	6818      	ldr	r0, [r3, #0]
 801d9d8:	6803      	ldr	r3, [r0, #0]
 801d9da:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d9dc:	4798      	blx	r3
 801d9de:	e7c8      	b.n	801d972 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801d9e0:	2b00      	cmp	r3, #0
 801d9e2:	f43f ae82 	beq.w	801d6ea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801d9e6:	f44f 7180 	mov.w	r1, #256	; 0x100
 801d9ea:	e793      	b.n	801d914 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 801d9ec:	200137bc 	.word	0x200137bc

0801d9f0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 801d9f0:	b538      	push	{r3, r4, r5, lr}
 801d9f2:	4c15      	ldr	r4, [pc, #84]	; (801da48 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 801d9f4:	7823      	ldrb	r3, [r4, #0]
 801d9f6:	f3bf 8f5b 	dmb	ish
 801d9fa:	07da      	lsls	r2, r3, #31
 801d9fc:	4605      	mov	r5, r0
 801d9fe:	d40b      	bmi.n	801da18 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801da00:	4620      	mov	r0, r4
 801da02:	f009 fdbe 	bl	8027582 <__cxa_guard_acquire>
 801da06:	b138      	cbz	r0, 801da18 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801da08:	4620      	mov	r0, r4
 801da0a:	f009 fdc6 	bl	802759a <__cxa_guard_release>
 801da0e:	4a0f      	ldr	r2, [pc, #60]	; (801da4c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801da10:	490f      	ldr	r1, [pc, #60]	; (801da50 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801da12:	4810      	ldr	r0, [pc, #64]	; (801da54 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801da14:	f009 fdae 	bl	8027574 <__aeabi_atexit>
 801da18:	4c0f      	ldr	r4, [pc, #60]	; (801da58 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801da1a:	7823      	ldrb	r3, [r4, #0]
 801da1c:	f3bf 8f5b 	dmb	ish
 801da20:	07db      	lsls	r3, r3, #31
 801da22:	d40b      	bmi.n	801da3c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801da24:	4620      	mov	r0, r4
 801da26:	f009 fdac 	bl	8027582 <__cxa_guard_acquire>
 801da2a:	b138      	cbz	r0, 801da3c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801da2c:	4620      	mov	r0, r4
 801da2e:	f009 fdb4 	bl	802759a <__cxa_guard_release>
 801da32:	4a06      	ldr	r2, [pc, #24]	; (801da4c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801da34:	4909      	ldr	r1, [pc, #36]	; (801da5c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801da36:	480a      	ldr	r0, [pc, #40]	; (801da60 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801da38:	f009 fd9c 	bl	8027574 <__aeabi_atexit>
 801da3c:	4b05      	ldr	r3, [pc, #20]	; (801da54 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801da3e:	612b      	str	r3, [r5, #16]
 801da40:	4b07      	ldr	r3, [pc, #28]	; (801da60 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801da42:	616b      	str	r3, [r5, #20]
 801da44:	bd38      	pop	{r3, r4, r5, pc}
 801da46:	bf00      	nop
 801da48:	2001389c 	.word	0x2001389c
 801da4c:	20000000 	.word	0x20000000
 801da50:	0801a7f3 	.word	0x0801a7f3
 801da54:	200000d4 	.word	0x200000d4
 801da58:	200138a0 	.word	0x200138a0
 801da5c:	0801a7f1 	.word	0x0801a7f1
 801da60:	200000d8 	.word	0x200000d8

0801da64 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 801da64:	b538      	push	{r3, r4, r5, lr}
 801da66:	4c15      	ldr	r4, [pc, #84]	; (801dabc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 801da68:	7823      	ldrb	r3, [r4, #0]
 801da6a:	f3bf 8f5b 	dmb	ish
 801da6e:	07da      	lsls	r2, r3, #31
 801da70:	4605      	mov	r5, r0
 801da72:	d40b      	bmi.n	801da8c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801da74:	4620      	mov	r0, r4
 801da76:	f009 fd84 	bl	8027582 <__cxa_guard_acquire>
 801da7a:	b138      	cbz	r0, 801da8c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801da7c:	4620      	mov	r0, r4
 801da7e:	f009 fd8c 	bl	802759a <__cxa_guard_release>
 801da82:	4a0f      	ldr	r2, [pc, #60]	; (801dac0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801da84:	490f      	ldr	r1, [pc, #60]	; (801dac4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801da86:	4810      	ldr	r0, [pc, #64]	; (801dac8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801da88:	f009 fd74 	bl	8027574 <__aeabi_atexit>
 801da8c:	4c0f      	ldr	r4, [pc, #60]	; (801dacc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801da8e:	7823      	ldrb	r3, [r4, #0]
 801da90:	f3bf 8f5b 	dmb	ish
 801da94:	07db      	lsls	r3, r3, #31
 801da96:	d40b      	bmi.n	801dab0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801da98:	4620      	mov	r0, r4
 801da9a:	f009 fd72 	bl	8027582 <__cxa_guard_acquire>
 801da9e:	b138      	cbz	r0, 801dab0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801daa0:	4620      	mov	r0, r4
 801daa2:	f009 fd7a 	bl	802759a <__cxa_guard_release>
 801daa6:	4a06      	ldr	r2, [pc, #24]	; (801dac0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801daa8:	4909      	ldr	r1, [pc, #36]	; (801dad0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801daaa:	480a      	ldr	r0, [pc, #40]	; (801dad4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801daac:	f009 fd62 	bl	8027574 <__aeabi_atexit>
 801dab0:	4b05      	ldr	r3, [pc, #20]	; (801dac8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801dab2:	60ab      	str	r3, [r5, #8]
 801dab4:	4b07      	ldr	r3, [pc, #28]	; (801dad4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801dab6:	60eb      	str	r3, [r5, #12]
 801dab8:	bd38      	pop	{r3, r4, r5, pc}
 801daba:	bf00      	nop
 801dabc:	20013874 	.word	0x20013874
 801dac0:	20000000 	.word	0x20000000
 801dac4:	0801a7f7 	.word	0x0801a7f7
 801dac8:	200000ac 	.word	0x200000ac
 801dacc:	20013878 	.word	0x20013878
 801dad0:	0801a7f5 	.word	0x0801a7f5
 801dad4:	200000b0 	.word	0x200000b0

0801dad8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 801dad8:	b510      	push	{r4, lr}
 801dada:	4604      	mov	r4, r0
 801dadc:	f7ff ff88 	bl	801d9f0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 801dae0:	4620      	mov	r0, r4
 801dae2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801dae6:	f7ff bfbd 	b.w	801da64 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

0801daec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 801daec:	b538      	push	{r3, r4, r5, lr}
 801daee:	4c15      	ldr	r4, [pc, #84]	; (801db44 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 801daf0:	7823      	ldrb	r3, [r4, #0]
 801daf2:	f3bf 8f5b 	dmb	ish
 801daf6:	07da      	lsls	r2, r3, #31
 801daf8:	4605      	mov	r5, r0
 801dafa:	d40b      	bmi.n	801db14 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801dafc:	4620      	mov	r0, r4
 801dafe:	f009 fd40 	bl	8027582 <__cxa_guard_acquire>
 801db02:	b138      	cbz	r0, 801db14 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801db04:	4620      	mov	r0, r4
 801db06:	f009 fd48 	bl	802759a <__cxa_guard_release>
 801db0a:	4a0f      	ldr	r2, [pc, #60]	; (801db48 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801db0c:	490f      	ldr	r1, [pc, #60]	; (801db4c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801db0e:	4810      	ldr	r0, [pc, #64]	; (801db50 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801db10:	f009 fd30 	bl	8027574 <__aeabi_atexit>
 801db14:	4c0f      	ldr	r4, [pc, #60]	; (801db54 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801db16:	7823      	ldrb	r3, [r4, #0]
 801db18:	f3bf 8f5b 	dmb	ish
 801db1c:	07db      	lsls	r3, r3, #31
 801db1e:	d40b      	bmi.n	801db38 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801db20:	4620      	mov	r0, r4
 801db22:	f009 fd2e 	bl	8027582 <__cxa_guard_acquire>
 801db26:	b138      	cbz	r0, 801db38 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801db28:	4620      	mov	r0, r4
 801db2a:	f009 fd36 	bl	802759a <__cxa_guard_release>
 801db2e:	4a06      	ldr	r2, [pc, #24]	; (801db48 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801db30:	4909      	ldr	r1, [pc, #36]	; (801db58 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801db32:	480a      	ldr	r0, [pc, #40]	; (801db5c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801db34:	f009 fd1e 	bl	8027574 <__aeabi_atexit>
 801db38:	4b05      	ldr	r3, [pc, #20]	; (801db50 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801db3a:	622b      	str	r3, [r5, #32]
 801db3c:	4b07      	ldr	r3, [pc, #28]	; (801db5c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801db3e:	626b      	str	r3, [r5, #36]	; 0x24
 801db40:	bd38      	pop	{r3, r4, r5, pc}
 801db42:	bf00      	nop
 801db44:	200138a4 	.word	0x200138a4
 801db48:	20000000 	.word	0x20000000
 801db4c:	0801a7eb 	.word	0x0801a7eb
 801db50:	200000dc 	.word	0x200000dc
 801db54:	200138a8 	.word	0x200138a8
 801db58:	0801a7e9 	.word	0x0801a7e9
 801db5c:	200000e0 	.word	0x200000e0

0801db60 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 801db60:	b538      	push	{r3, r4, r5, lr}
 801db62:	4c15      	ldr	r4, [pc, #84]	; (801dbb8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 801db64:	7823      	ldrb	r3, [r4, #0]
 801db66:	f3bf 8f5b 	dmb	ish
 801db6a:	07da      	lsls	r2, r3, #31
 801db6c:	4605      	mov	r5, r0
 801db6e:	d40b      	bmi.n	801db88 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801db70:	4620      	mov	r0, r4
 801db72:	f009 fd06 	bl	8027582 <__cxa_guard_acquire>
 801db76:	b138      	cbz	r0, 801db88 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801db78:	4620      	mov	r0, r4
 801db7a:	f009 fd0e 	bl	802759a <__cxa_guard_release>
 801db7e:	4a0f      	ldr	r2, [pc, #60]	; (801dbbc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801db80:	490f      	ldr	r1, [pc, #60]	; (801dbc0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801db82:	4810      	ldr	r0, [pc, #64]	; (801dbc4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801db84:	f009 fcf6 	bl	8027574 <__aeabi_atexit>
 801db88:	4c0f      	ldr	r4, [pc, #60]	; (801dbc8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801db8a:	7823      	ldrb	r3, [r4, #0]
 801db8c:	f3bf 8f5b 	dmb	ish
 801db90:	07db      	lsls	r3, r3, #31
 801db92:	d40b      	bmi.n	801dbac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801db94:	4620      	mov	r0, r4
 801db96:	f009 fcf4 	bl	8027582 <__cxa_guard_acquire>
 801db9a:	b138      	cbz	r0, 801dbac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801db9c:	4620      	mov	r0, r4
 801db9e:	f009 fcfc 	bl	802759a <__cxa_guard_release>
 801dba2:	4a06      	ldr	r2, [pc, #24]	; (801dbbc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801dba4:	4909      	ldr	r1, [pc, #36]	; (801dbcc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801dba6:	480a      	ldr	r0, [pc, #40]	; (801dbd0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801dba8:	f009 fce4 	bl	8027574 <__aeabi_atexit>
 801dbac:	4b05      	ldr	r3, [pc, #20]	; (801dbc4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801dbae:	61ab      	str	r3, [r5, #24]
 801dbb0:	4b07      	ldr	r3, [pc, #28]	; (801dbd0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801dbb2:	61eb      	str	r3, [r5, #28]
 801dbb4:	bd38      	pop	{r3, r4, r5, pc}
 801dbb6:	bf00      	nop
 801dbb8:	2001387c 	.word	0x2001387c
 801dbbc:	20000000 	.word	0x20000000
 801dbc0:	0801a7ef 	.word	0x0801a7ef
 801dbc4:	200000b4 	.word	0x200000b4
 801dbc8:	20013880 	.word	0x20013880
 801dbcc:	0801a7ed 	.word	0x0801a7ed
 801dbd0:	200000b8 	.word	0x200000b8

0801dbd4 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801dbd4:	b510      	push	{r4, lr}
 801dbd6:	4604      	mov	r4, r0
 801dbd8:	f7ff ff88 	bl	801daec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 801dbdc:	4620      	mov	r0, r4
 801dbde:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801dbe2:	f7ff bfbd 	b.w	801db60 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0801dbe8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 801dbe8:	b538      	push	{r3, r4, r5, lr}
 801dbea:	4c15      	ldr	r4, [pc, #84]	; (801dc40 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 801dbec:	7823      	ldrb	r3, [r4, #0]
 801dbee:	f3bf 8f5b 	dmb	ish
 801dbf2:	07da      	lsls	r2, r3, #31
 801dbf4:	4605      	mov	r5, r0
 801dbf6:	d40b      	bmi.n	801dc10 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801dbf8:	4620      	mov	r0, r4
 801dbfa:	f009 fcc2 	bl	8027582 <__cxa_guard_acquire>
 801dbfe:	b138      	cbz	r0, 801dc10 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801dc00:	4620      	mov	r0, r4
 801dc02:	f009 fcca 	bl	802759a <__cxa_guard_release>
 801dc06:	4a0f      	ldr	r2, [pc, #60]	; (801dc44 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801dc08:	490f      	ldr	r1, [pc, #60]	; (801dc48 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 801dc0a:	4810      	ldr	r0, [pc, #64]	; (801dc4c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801dc0c:	f009 fcb2 	bl	8027574 <__aeabi_atexit>
 801dc10:	4c0f      	ldr	r4, [pc, #60]	; (801dc50 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801dc12:	7823      	ldrb	r3, [r4, #0]
 801dc14:	f3bf 8f5b 	dmb	ish
 801dc18:	07db      	lsls	r3, r3, #31
 801dc1a:	d40b      	bmi.n	801dc34 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801dc1c:	4620      	mov	r0, r4
 801dc1e:	f009 fcb0 	bl	8027582 <__cxa_guard_acquire>
 801dc22:	b138      	cbz	r0, 801dc34 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801dc24:	4620      	mov	r0, r4
 801dc26:	f009 fcb8 	bl	802759a <__cxa_guard_release>
 801dc2a:	4a06      	ldr	r2, [pc, #24]	; (801dc44 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801dc2c:	4909      	ldr	r1, [pc, #36]	; (801dc54 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 801dc2e:	480a      	ldr	r0, [pc, #40]	; (801dc58 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801dc30:	f009 fca0 	bl	8027574 <__aeabi_atexit>
 801dc34:	4b05      	ldr	r3, [pc, #20]	; (801dc4c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801dc36:	632b      	str	r3, [r5, #48]	; 0x30
 801dc38:	4b07      	ldr	r3, [pc, #28]	; (801dc58 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801dc3a:	636b      	str	r3, [r5, #52]	; 0x34
 801dc3c:	bd38      	pop	{r3, r4, r5, pc}
 801dc3e:	bf00      	nop
 801dc40:	200138b4 	.word	0x200138b4
 801dc44:	20000000 	.word	0x20000000
 801dc48:	0801a7e3 	.word	0x0801a7e3
 801dc4c:	200000ec 	.word	0x200000ec
 801dc50:	200138b8 	.word	0x200138b8
 801dc54:	0801a7e1 	.word	0x0801a7e1
 801dc58:	200000f0 	.word	0x200000f0

0801dc5c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 801dc5c:	b538      	push	{r3, r4, r5, lr}
 801dc5e:	4c15      	ldr	r4, [pc, #84]	; (801dcb4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 801dc60:	7823      	ldrb	r3, [r4, #0]
 801dc62:	f3bf 8f5b 	dmb	ish
 801dc66:	07da      	lsls	r2, r3, #31
 801dc68:	4605      	mov	r5, r0
 801dc6a:	d40b      	bmi.n	801dc84 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801dc6c:	4620      	mov	r0, r4
 801dc6e:	f009 fc88 	bl	8027582 <__cxa_guard_acquire>
 801dc72:	b138      	cbz	r0, 801dc84 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801dc74:	4620      	mov	r0, r4
 801dc76:	f009 fc90 	bl	802759a <__cxa_guard_release>
 801dc7a:	4a0f      	ldr	r2, [pc, #60]	; (801dcb8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801dc7c:	490f      	ldr	r1, [pc, #60]	; (801dcbc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801dc7e:	4810      	ldr	r0, [pc, #64]	; (801dcc0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801dc80:	f009 fc78 	bl	8027574 <__aeabi_atexit>
 801dc84:	4c0f      	ldr	r4, [pc, #60]	; (801dcc4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801dc86:	7823      	ldrb	r3, [r4, #0]
 801dc88:	f3bf 8f5b 	dmb	ish
 801dc8c:	07db      	lsls	r3, r3, #31
 801dc8e:	d40b      	bmi.n	801dca8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801dc90:	4620      	mov	r0, r4
 801dc92:	f009 fc76 	bl	8027582 <__cxa_guard_acquire>
 801dc96:	b138      	cbz	r0, 801dca8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801dc98:	4620      	mov	r0, r4
 801dc9a:	f009 fc7e 	bl	802759a <__cxa_guard_release>
 801dc9e:	4a06      	ldr	r2, [pc, #24]	; (801dcb8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801dca0:	4909      	ldr	r1, [pc, #36]	; (801dcc8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801dca2:	480a      	ldr	r0, [pc, #40]	; (801dccc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801dca4:	f009 fc66 	bl	8027574 <__aeabi_atexit>
 801dca8:	4b05      	ldr	r3, [pc, #20]	; (801dcc0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801dcaa:	62ab      	str	r3, [r5, #40]	; 0x28
 801dcac:	4b07      	ldr	r3, [pc, #28]	; (801dccc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801dcae:	62eb      	str	r3, [r5, #44]	; 0x2c
 801dcb0:	bd38      	pop	{r3, r4, r5, pc}
 801dcb2:	bf00      	nop
 801dcb4:	20013884 	.word	0x20013884
 801dcb8:	20000000 	.word	0x20000000
 801dcbc:	0801a7e7 	.word	0x0801a7e7
 801dcc0:	200000bc 	.word	0x200000bc
 801dcc4:	20013888 	.word	0x20013888
 801dcc8:	0801a7e5 	.word	0x0801a7e5
 801dccc:	200000c0 	.word	0x200000c0

0801dcd0 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 801dcd0:	b510      	push	{r4, lr}
 801dcd2:	4604      	mov	r4, r0
 801dcd4:	f7ff ff88 	bl	801dbe8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 801dcd8:	4620      	mov	r0, r4
 801dcda:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801dcde:	f7ff bfbd 	b.w	801dc5c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0801dce4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 801dce4:	b538      	push	{r3, r4, r5, lr}
 801dce6:	4c15      	ldr	r4, [pc, #84]	; (801dd3c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 801dce8:	7823      	ldrb	r3, [r4, #0]
 801dcea:	f3bf 8f5b 	dmb	ish
 801dcee:	07da      	lsls	r2, r3, #31
 801dcf0:	4605      	mov	r5, r0
 801dcf2:	d40b      	bmi.n	801dd0c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801dcf4:	4620      	mov	r0, r4
 801dcf6:	f009 fc44 	bl	8027582 <__cxa_guard_acquire>
 801dcfa:	b138      	cbz	r0, 801dd0c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801dcfc:	4620      	mov	r0, r4
 801dcfe:	f009 fc4c 	bl	802759a <__cxa_guard_release>
 801dd02:	4a0f      	ldr	r2, [pc, #60]	; (801dd40 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801dd04:	490f      	ldr	r1, [pc, #60]	; (801dd44 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801dd06:	4810      	ldr	r0, [pc, #64]	; (801dd48 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801dd08:	f009 fc34 	bl	8027574 <__aeabi_atexit>
 801dd0c:	4c0f      	ldr	r4, [pc, #60]	; (801dd4c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 801dd0e:	7823      	ldrb	r3, [r4, #0]
 801dd10:	f3bf 8f5b 	dmb	ish
 801dd14:	07db      	lsls	r3, r3, #31
 801dd16:	d40b      	bmi.n	801dd30 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801dd18:	4620      	mov	r0, r4
 801dd1a:	f009 fc32 	bl	8027582 <__cxa_guard_acquire>
 801dd1e:	b138      	cbz	r0, 801dd30 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801dd20:	4620      	mov	r0, r4
 801dd22:	f009 fc3a 	bl	802759a <__cxa_guard_release>
 801dd26:	4a06      	ldr	r2, [pc, #24]	; (801dd40 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801dd28:	4909      	ldr	r1, [pc, #36]	; (801dd50 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 801dd2a:	480a      	ldr	r0, [pc, #40]	; (801dd54 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801dd2c:	f009 fc22 	bl	8027574 <__aeabi_atexit>
 801dd30:	4b05      	ldr	r3, [pc, #20]	; (801dd48 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801dd32:	652b      	str	r3, [r5, #80]	; 0x50
 801dd34:	4b07      	ldr	r3, [pc, #28]	; (801dd54 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801dd36:	656b      	str	r3, [r5, #84]	; 0x54
 801dd38:	bd38      	pop	{r3, r4, r5, pc}
 801dd3a:	bf00      	nop
 801dd3c:	200138bc 	.word	0x200138bc
 801dd40:	20000000 	.word	0x20000000
 801dd44:	0801a7d3 	.word	0x0801a7d3
 801dd48:	200000f4 	.word	0x200000f4
 801dd4c:	200138c0 	.word	0x200138c0
 801dd50:	0801a7d1 	.word	0x0801a7d1
 801dd54:	200000f8 	.word	0x200000f8

0801dd58 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 801dd58:	b538      	push	{r3, r4, r5, lr}
 801dd5a:	4c15      	ldr	r4, [pc, #84]	; (801ddb0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801dd5c:	7823      	ldrb	r3, [r4, #0]
 801dd5e:	f3bf 8f5b 	dmb	ish
 801dd62:	07da      	lsls	r2, r3, #31
 801dd64:	4605      	mov	r5, r0
 801dd66:	d40b      	bmi.n	801dd80 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801dd68:	4620      	mov	r0, r4
 801dd6a:	f009 fc0a 	bl	8027582 <__cxa_guard_acquire>
 801dd6e:	b138      	cbz	r0, 801dd80 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801dd70:	4620      	mov	r0, r4
 801dd72:	f009 fc12 	bl	802759a <__cxa_guard_release>
 801dd76:	4a0f      	ldr	r2, [pc, #60]	; (801ddb4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801dd78:	490f      	ldr	r1, [pc, #60]	; (801ddb8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801dd7a:	4810      	ldr	r0, [pc, #64]	; (801ddbc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801dd7c:	f009 fbfa 	bl	8027574 <__aeabi_atexit>
 801dd80:	4c0f      	ldr	r4, [pc, #60]	; (801ddc0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801dd82:	7823      	ldrb	r3, [r4, #0]
 801dd84:	f3bf 8f5b 	dmb	ish
 801dd88:	07db      	lsls	r3, r3, #31
 801dd8a:	d40b      	bmi.n	801dda4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801dd8c:	4620      	mov	r0, r4
 801dd8e:	f009 fbf8 	bl	8027582 <__cxa_guard_acquire>
 801dd92:	b138      	cbz	r0, 801dda4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801dd94:	4620      	mov	r0, r4
 801dd96:	f009 fc00 	bl	802759a <__cxa_guard_release>
 801dd9a:	4a06      	ldr	r2, [pc, #24]	; (801ddb4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801dd9c:	4909      	ldr	r1, [pc, #36]	; (801ddc4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801dd9e:	480a      	ldr	r0, [pc, #40]	; (801ddc8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801dda0:	f009 fbe8 	bl	8027574 <__aeabi_atexit>
 801dda4:	4b05      	ldr	r3, [pc, #20]	; (801ddbc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801dda6:	64ab      	str	r3, [r5, #72]	; 0x48
 801dda8:	4b07      	ldr	r3, [pc, #28]	; (801ddc8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801ddaa:	64eb      	str	r3, [r5, #76]	; 0x4c
 801ddac:	bd38      	pop	{r3, r4, r5, pc}
 801ddae:	bf00      	nop
 801ddb0:	200138c4 	.word	0x200138c4
 801ddb4:	20000000 	.word	0x20000000
 801ddb8:	0801a7d7 	.word	0x0801a7d7
 801ddbc:	200000fc 	.word	0x200000fc
 801ddc0:	200138c8 	.word	0x200138c8
 801ddc4:	0801a7d5 	.word	0x0801a7d5
 801ddc8:	20000100 	.word	0x20000100

0801ddcc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 801ddcc:	b538      	push	{r3, r4, r5, lr}
 801ddce:	4c15      	ldr	r4, [pc, #84]	; (801de24 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 801ddd0:	7823      	ldrb	r3, [r4, #0]
 801ddd2:	f3bf 8f5b 	dmb	ish
 801ddd6:	07da      	lsls	r2, r3, #31
 801ddd8:	4605      	mov	r5, r0
 801ddda:	d40b      	bmi.n	801ddf4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801dddc:	4620      	mov	r0, r4
 801ddde:	f009 fbd0 	bl	8027582 <__cxa_guard_acquire>
 801dde2:	b138      	cbz	r0, 801ddf4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801dde4:	4620      	mov	r0, r4
 801dde6:	f009 fbd8 	bl	802759a <__cxa_guard_release>
 801ddea:	4a0f      	ldr	r2, [pc, #60]	; (801de28 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801ddec:	490f      	ldr	r1, [pc, #60]	; (801de2c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801ddee:	4810      	ldr	r0, [pc, #64]	; (801de30 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801ddf0:	f009 fbc0 	bl	8027574 <__aeabi_atexit>
 801ddf4:	4c0f      	ldr	r4, [pc, #60]	; (801de34 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801ddf6:	7823      	ldrb	r3, [r4, #0]
 801ddf8:	f3bf 8f5b 	dmb	ish
 801ddfc:	07db      	lsls	r3, r3, #31
 801ddfe:	d40b      	bmi.n	801de18 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801de00:	4620      	mov	r0, r4
 801de02:	f009 fbbe 	bl	8027582 <__cxa_guard_acquire>
 801de06:	b138      	cbz	r0, 801de18 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801de08:	4620      	mov	r0, r4
 801de0a:	f009 fbc6 	bl	802759a <__cxa_guard_release>
 801de0e:	4a06      	ldr	r2, [pc, #24]	; (801de28 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801de10:	4909      	ldr	r1, [pc, #36]	; (801de38 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801de12:	480a      	ldr	r0, [pc, #40]	; (801de3c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801de14:	f009 fbae 	bl	8027574 <__aeabi_atexit>
 801de18:	4b05      	ldr	r3, [pc, #20]	; (801de30 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801de1a:	642b      	str	r3, [r5, #64]	; 0x40
 801de1c:	4b07      	ldr	r3, [pc, #28]	; (801de3c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801de1e:	646b      	str	r3, [r5, #68]	; 0x44
 801de20:	bd38      	pop	{r3, r4, r5, pc}
 801de22:	bf00      	nop
 801de24:	2001388c 	.word	0x2001388c
 801de28:	20000000 	.word	0x20000000
 801de2c:	0801a7db 	.word	0x0801a7db
 801de30:	200000c4 	.word	0x200000c4
 801de34:	20013890 	.word	0x20013890
 801de38:	0801a7d9 	.word	0x0801a7d9
 801de3c:	200000c8 	.word	0x200000c8

0801de40 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 801de40:	b538      	push	{r3, r4, r5, lr}
 801de42:	4c15      	ldr	r4, [pc, #84]	; (801de98 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 801de44:	7823      	ldrb	r3, [r4, #0]
 801de46:	f3bf 8f5b 	dmb	ish
 801de4a:	07da      	lsls	r2, r3, #31
 801de4c:	4605      	mov	r5, r0
 801de4e:	d40b      	bmi.n	801de68 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801de50:	4620      	mov	r0, r4
 801de52:	f009 fb96 	bl	8027582 <__cxa_guard_acquire>
 801de56:	b138      	cbz	r0, 801de68 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801de58:	4620      	mov	r0, r4
 801de5a:	f009 fb9e 	bl	802759a <__cxa_guard_release>
 801de5e:	4a0f      	ldr	r2, [pc, #60]	; (801de9c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801de60:	490f      	ldr	r1, [pc, #60]	; (801dea0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801de62:	4810      	ldr	r0, [pc, #64]	; (801dea4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801de64:	f009 fb86 	bl	8027574 <__aeabi_atexit>
 801de68:	4c0f      	ldr	r4, [pc, #60]	; (801dea8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801de6a:	7823      	ldrb	r3, [r4, #0]
 801de6c:	f3bf 8f5b 	dmb	ish
 801de70:	07db      	lsls	r3, r3, #31
 801de72:	d40b      	bmi.n	801de8c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801de74:	4620      	mov	r0, r4
 801de76:	f009 fb84 	bl	8027582 <__cxa_guard_acquire>
 801de7a:	b138      	cbz	r0, 801de8c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801de7c:	4620      	mov	r0, r4
 801de7e:	f009 fb8c 	bl	802759a <__cxa_guard_release>
 801de82:	4a06      	ldr	r2, [pc, #24]	; (801de9c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801de84:	4909      	ldr	r1, [pc, #36]	; (801deac <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801de86:	480a      	ldr	r0, [pc, #40]	; (801deb0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801de88:	f009 fb74 	bl	8027574 <__aeabi_atexit>
 801de8c:	4b05      	ldr	r3, [pc, #20]	; (801dea4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801de8e:	63ab      	str	r3, [r5, #56]	; 0x38
 801de90:	4b07      	ldr	r3, [pc, #28]	; (801deb0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801de92:	63eb      	str	r3, [r5, #60]	; 0x3c
 801de94:	bd38      	pop	{r3, r4, r5, pc}
 801de96:	bf00      	nop
 801de98:	200138ac 	.word	0x200138ac
 801de9c:	20000000 	.word	0x20000000
 801dea0:	0801a7df 	.word	0x0801a7df
 801dea4:	200000e4 	.word	0x200000e4
 801dea8:	200138b0 	.word	0x200138b0
 801deac:	0801a7dd 	.word	0x0801a7dd
 801deb0:	200000e8 	.word	0x200000e8

0801deb4 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801deb4:	b510      	push	{r4, lr}
 801deb6:	4604      	mov	r4, r0
 801deb8:	f7ff ff14 	bl	801dce4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801debc:	4620      	mov	r0, r4
 801debe:	f7ff ff85 	bl	801ddcc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801dec2:	4620      	mov	r0, r4
 801dec4:	f7ff ff48 	bl	801dd58 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 801dec8:	4620      	mov	r0, r4
 801deca:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801dece:	f7ff bfb7 	b.w	801de40 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801ded4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801ded4:	b538      	push	{r3, r4, r5, lr}
 801ded6:	4c15      	ldr	r4, [pc, #84]	; (801df2c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 801ded8:	7823      	ldrb	r3, [r4, #0]
 801deda:	f3bf 8f5b 	dmb	ish
 801dede:	07da      	lsls	r2, r3, #31
 801dee0:	4605      	mov	r5, r0
 801dee2:	d40b      	bmi.n	801defc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801dee4:	4620      	mov	r0, r4
 801dee6:	f009 fb4c 	bl	8027582 <__cxa_guard_acquire>
 801deea:	b138      	cbz	r0, 801defc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801deec:	4620      	mov	r0, r4
 801deee:	f009 fb54 	bl	802759a <__cxa_guard_release>
 801def2:	4a0f      	ldr	r2, [pc, #60]	; (801df30 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801def4:	490f      	ldr	r1, [pc, #60]	; (801df34 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801def6:	4810      	ldr	r0, [pc, #64]	; (801df38 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801def8:	f009 fb3c 	bl	8027574 <__aeabi_atexit>
 801defc:	4c0f      	ldr	r4, [pc, #60]	; (801df3c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801defe:	7823      	ldrb	r3, [r4, #0]
 801df00:	f3bf 8f5b 	dmb	ish
 801df04:	07db      	lsls	r3, r3, #31
 801df06:	d40b      	bmi.n	801df20 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801df08:	4620      	mov	r0, r4
 801df0a:	f009 fb3a 	bl	8027582 <__cxa_guard_acquire>
 801df0e:	b138      	cbz	r0, 801df20 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801df10:	4620      	mov	r0, r4
 801df12:	f009 fb42 	bl	802759a <__cxa_guard_release>
 801df16:	4a06      	ldr	r2, [pc, #24]	; (801df30 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801df18:	4909      	ldr	r1, [pc, #36]	; (801df40 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801df1a:	480a      	ldr	r0, [pc, #40]	; (801df44 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801df1c:	f009 fb2a 	bl	8027574 <__aeabi_atexit>
 801df20:	4b05      	ldr	r3, [pc, #20]	; (801df38 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801df22:	662b      	str	r3, [r5, #96]	; 0x60
 801df24:	4b07      	ldr	r3, [pc, #28]	; (801df44 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801df26:	666b      	str	r3, [r5, #100]	; 0x64
 801df28:	bd38      	pop	{r3, r4, r5, pc}
 801df2a:	bf00      	nop
 801df2c:	20013894 	.word	0x20013894
 801df30:	20000000 	.word	0x20000000
 801df34:	0801a7cb 	.word	0x0801a7cb
 801df38:	200000cc 	.word	0x200000cc
 801df3c:	20013898 	.word	0x20013898
 801df40:	0801a7c9 	.word	0x0801a7c9
 801df44:	200000d0 	.word	0x200000d0

0801df48 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 801df48:	b538      	push	{r3, r4, r5, lr}
 801df4a:	4c15      	ldr	r4, [pc, #84]	; (801dfa0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801df4c:	7823      	ldrb	r3, [r4, #0]
 801df4e:	f3bf 8f5b 	dmb	ish
 801df52:	07da      	lsls	r2, r3, #31
 801df54:	4605      	mov	r5, r0
 801df56:	d40b      	bmi.n	801df70 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801df58:	4620      	mov	r0, r4
 801df5a:	f009 fb12 	bl	8027582 <__cxa_guard_acquire>
 801df5e:	b138      	cbz	r0, 801df70 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801df60:	4620      	mov	r0, r4
 801df62:	f009 fb1a 	bl	802759a <__cxa_guard_release>
 801df66:	4a0f      	ldr	r2, [pc, #60]	; (801dfa4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801df68:	490f      	ldr	r1, [pc, #60]	; (801dfa8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801df6a:	4810      	ldr	r0, [pc, #64]	; (801dfac <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801df6c:	f009 fb02 	bl	8027574 <__aeabi_atexit>
 801df70:	4c0f      	ldr	r4, [pc, #60]	; (801dfb0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801df72:	7823      	ldrb	r3, [r4, #0]
 801df74:	f3bf 8f5b 	dmb	ish
 801df78:	07db      	lsls	r3, r3, #31
 801df7a:	d40b      	bmi.n	801df94 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801df7c:	4620      	mov	r0, r4
 801df7e:	f009 fb00 	bl	8027582 <__cxa_guard_acquire>
 801df82:	b138      	cbz	r0, 801df94 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801df84:	4620      	mov	r0, r4
 801df86:	f009 fb08 	bl	802759a <__cxa_guard_release>
 801df8a:	4a06      	ldr	r2, [pc, #24]	; (801dfa4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801df8c:	4909      	ldr	r1, [pc, #36]	; (801dfb4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801df8e:	480a      	ldr	r0, [pc, #40]	; (801dfb8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801df90:	f009 faf0 	bl	8027574 <__aeabi_atexit>
 801df94:	4b05      	ldr	r3, [pc, #20]	; (801dfac <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801df96:	65ab      	str	r3, [r5, #88]	; 0x58
 801df98:	4b07      	ldr	r3, [pc, #28]	; (801dfb8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801df9a:	65eb      	str	r3, [r5, #92]	; 0x5c
 801df9c:	bd38      	pop	{r3, r4, r5, pc}
 801df9e:	bf00      	nop
 801dfa0:	2001386c 	.word	0x2001386c
 801dfa4:	20000000 	.word	0x20000000
 801dfa8:	0801a7cf 	.word	0x0801a7cf
 801dfac:	200000a4 	.word	0x200000a4
 801dfb0:	20013870 	.word	0x20013870
 801dfb4:	0801a7cd 	.word	0x0801a7cd
 801dfb8:	200000a8 	.word	0x200000a8

0801dfbc <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801dfbc:	b510      	push	{r4, lr}
 801dfbe:	4604      	mov	r4, r0
 801dfc0:	f7ff ff88 	bl	801ded4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801dfc4:	4620      	mov	r0, r4
 801dfc6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801dfca:	f7ff bfbd 	b.w	801df48 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0801dfd0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 801dfd0:	b538      	push	{r3, r4, r5, lr}
 801dfd2:	4c15      	ldr	r4, [pc, #84]	; (801e028 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801dfd4:	7823      	ldrb	r3, [r4, #0]
 801dfd6:	f3bf 8f5b 	dmb	ish
 801dfda:	07da      	lsls	r2, r3, #31
 801dfdc:	4605      	mov	r5, r0
 801dfde:	d40b      	bmi.n	801dff8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801dfe0:	4620      	mov	r0, r4
 801dfe2:	f009 face 	bl	8027582 <__cxa_guard_acquire>
 801dfe6:	b138      	cbz	r0, 801dff8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801dfe8:	4620      	mov	r0, r4
 801dfea:	f009 fad6 	bl	802759a <__cxa_guard_release>
 801dfee:	4a0f      	ldr	r2, [pc, #60]	; (801e02c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801dff0:	490f      	ldr	r1, [pc, #60]	; (801e030 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801dff2:	4810      	ldr	r0, [pc, #64]	; (801e034 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801dff4:	f009 fabe 	bl	8027574 <__aeabi_atexit>
 801dff8:	4c0f      	ldr	r4, [pc, #60]	; (801e038 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801dffa:	7823      	ldrb	r3, [r4, #0]
 801dffc:	f3bf 8f5b 	dmb	ish
 801e000:	07db      	lsls	r3, r3, #31
 801e002:	d40b      	bmi.n	801e01c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801e004:	4620      	mov	r0, r4
 801e006:	f009 fabc 	bl	8027582 <__cxa_guard_acquire>
 801e00a:	b138      	cbz	r0, 801e01c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801e00c:	4620      	mov	r0, r4
 801e00e:	f009 fac4 	bl	802759a <__cxa_guard_release>
 801e012:	4a06      	ldr	r2, [pc, #24]	; (801e02c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801e014:	4909      	ldr	r1, [pc, #36]	; (801e03c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801e016:	480a      	ldr	r0, [pc, #40]	; (801e040 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801e018:	f009 faac 	bl	8027574 <__aeabi_atexit>
 801e01c:	4b05      	ldr	r3, [pc, #20]	; (801e034 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801e01e:	672b      	str	r3, [r5, #112]	; 0x70
 801e020:	4b07      	ldr	r3, [pc, #28]	; (801e040 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801e022:	676b      	str	r3, [r5, #116]	; 0x74
 801e024:	bd38      	pop	{r3, r4, r5, pc}
 801e026:	bf00      	nop
 801e028:	20013864 	.word	0x20013864
 801e02c:	20000000 	.word	0x20000000
 801e030:	0801a7c3 	.word	0x0801a7c3
 801e034:	2000009c 	.word	0x2000009c
 801e038:	20013868 	.word	0x20013868
 801e03c:	0801a7c1 	.word	0x0801a7c1
 801e040:	200000a0 	.word	0x200000a0

0801e044 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 801e044:	b538      	push	{r3, r4, r5, lr}
 801e046:	4c15      	ldr	r4, [pc, #84]	; (801e09c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 801e048:	7823      	ldrb	r3, [r4, #0]
 801e04a:	f3bf 8f5b 	dmb	ish
 801e04e:	07da      	lsls	r2, r3, #31
 801e050:	4605      	mov	r5, r0
 801e052:	d40b      	bmi.n	801e06c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801e054:	4620      	mov	r0, r4
 801e056:	f009 fa94 	bl	8027582 <__cxa_guard_acquire>
 801e05a:	b138      	cbz	r0, 801e06c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801e05c:	4620      	mov	r0, r4
 801e05e:	f009 fa9c 	bl	802759a <__cxa_guard_release>
 801e062:	4a0f      	ldr	r2, [pc, #60]	; (801e0a0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801e064:	490f      	ldr	r1, [pc, #60]	; (801e0a4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801e066:	4810      	ldr	r0, [pc, #64]	; (801e0a8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801e068:	f009 fa84 	bl	8027574 <__aeabi_atexit>
 801e06c:	4c0f      	ldr	r4, [pc, #60]	; (801e0ac <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801e06e:	7823      	ldrb	r3, [r4, #0]
 801e070:	f3bf 8f5b 	dmb	ish
 801e074:	07db      	lsls	r3, r3, #31
 801e076:	d40b      	bmi.n	801e090 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801e078:	4620      	mov	r0, r4
 801e07a:	f009 fa82 	bl	8027582 <__cxa_guard_acquire>
 801e07e:	b138      	cbz	r0, 801e090 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801e080:	4620      	mov	r0, r4
 801e082:	f009 fa8a 	bl	802759a <__cxa_guard_release>
 801e086:	4a06      	ldr	r2, [pc, #24]	; (801e0a0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801e088:	4909      	ldr	r1, [pc, #36]	; (801e0b0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801e08a:	480a      	ldr	r0, [pc, #40]	; (801e0b4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801e08c:	f009 fa72 	bl	8027574 <__aeabi_atexit>
 801e090:	4b05      	ldr	r3, [pc, #20]	; (801e0a8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801e092:	66ab      	str	r3, [r5, #104]	; 0x68
 801e094:	4b07      	ldr	r3, [pc, #28]	; (801e0b4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801e096:	66eb      	str	r3, [r5, #108]	; 0x6c
 801e098:	bd38      	pop	{r3, r4, r5, pc}
 801e09a:	bf00      	nop
 801e09c:	2001385c 	.word	0x2001385c
 801e0a0:	20000000 	.word	0x20000000
 801e0a4:	0801a7c7 	.word	0x0801a7c7
 801e0a8:	20000094 	.word	0x20000094
 801e0ac:	20013860 	.word	0x20013860
 801e0b0:	0801a7c5 	.word	0x0801a7c5
 801e0b4:	20000098 	.word	0x20000098

0801e0b8 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 801e0b8:	b510      	push	{r4, lr}
 801e0ba:	4604      	mov	r4, r0
 801e0bc:	f7ff ff88 	bl	801dfd0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801e0c0:	4620      	mov	r0, r4
 801e0c2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e0c6:	f7ff bfbd 	b.w	801e044 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801e0ca <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801e0ca:	b510      	push	{r4, lr}
 801e0cc:	4604      	mov	r4, r0
 801e0ce:	f7ff fff3 	bl	801e0b8 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801e0d2:	4620      	mov	r0, r4
 801e0d4:	f7ff ff72 	bl	801dfbc <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 801e0d8:	4620      	mov	r0, r4
 801e0da:	f7ff fdf9 	bl	801dcd0 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801e0de:	4620      	mov	r0, r4
 801e0e0:	f7ff fcfa 	bl	801dad8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801e0e4:	4620      	mov	r0, r4
 801e0e6:	f7ff fd75 	bl	801dbd4 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801e0ea:	4620      	mov	r0, r4
 801e0ec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e0f0:	f7ff bee0 	b.w	801deb4 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

0801e0f4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 801e0f4:	b538      	push	{r3, r4, r5, lr}
 801e0f6:	4c0b      	ldr	r4, [pc, #44]	; (801e124 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 801e0f8:	7823      	ldrb	r3, [r4, #0]
 801e0fa:	f3bf 8f5b 	dmb	ish
 801e0fe:	07db      	lsls	r3, r3, #31
 801e100:	4605      	mov	r5, r0
 801e102:	d40b      	bmi.n	801e11c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801e104:	4620      	mov	r0, r4
 801e106:	f009 fa3c 	bl	8027582 <__cxa_guard_acquire>
 801e10a:	b138      	cbz	r0, 801e11c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801e10c:	4620      	mov	r0, r4
 801e10e:	f009 fa44 	bl	802759a <__cxa_guard_release>
 801e112:	4a05      	ldr	r2, [pc, #20]	; (801e128 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 801e114:	4905      	ldr	r1, [pc, #20]	; (801e12c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 801e116:	4806      	ldr	r0, [pc, #24]	; (801e130 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801e118:	f009 fa2c 	bl	8027574 <__aeabi_atexit>
 801e11c:	4b04      	ldr	r3, [pc, #16]	; (801e130 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801e11e:	67ab      	str	r3, [r5, #120]	; 0x78
 801e120:	bd38      	pop	{r3, r4, r5, pc}
 801e122:	bf00      	nop
 801e124:	20013850 	.word	0x20013850
 801e128:	20000000 	.word	0x20000000
 801e12c:	0801a7bf 	.word	0x0801a7bf
 801e130:	2000008c 	.word	0x2000008c

0801e134 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 801e134:	b538      	push	{r3, r4, r5, lr}
 801e136:	4c0b      	ldr	r4, [pc, #44]	; (801e164 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 801e138:	7823      	ldrb	r3, [r4, #0]
 801e13a:	f3bf 8f5b 	dmb	ish
 801e13e:	07db      	lsls	r3, r3, #31
 801e140:	4605      	mov	r5, r0
 801e142:	d40b      	bmi.n	801e15c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801e144:	4620      	mov	r0, r4
 801e146:	f009 fa1c 	bl	8027582 <__cxa_guard_acquire>
 801e14a:	b138      	cbz	r0, 801e15c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801e14c:	4620      	mov	r0, r4
 801e14e:	f009 fa24 	bl	802759a <__cxa_guard_release>
 801e152:	4a05      	ldr	r2, [pc, #20]	; (801e168 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 801e154:	4905      	ldr	r1, [pc, #20]	; (801e16c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 801e156:	4806      	ldr	r0, [pc, #24]	; (801e170 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801e158:	f009 fa0c 	bl	8027574 <__aeabi_atexit>
 801e15c:	4b04      	ldr	r3, [pc, #16]	; (801e170 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801e15e:	67eb      	str	r3, [r5, #124]	; 0x7c
 801e160:	bd38      	pop	{r3, r4, r5, pc}
 801e162:	bf00      	nop
 801e164:	20013854 	.word	0x20013854
 801e168:	20000000 	.word	0x20000000
 801e16c:	0801a7bd 	.word	0x0801a7bd
 801e170:	20000090 	.word	0x20000090

0801e174 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 801e174:	b570      	push	{r4, r5, r6, lr}
 801e176:	4d0d      	ldr	r5, [pc, #52]	; (801e1ac <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 801e178:	4c0d      	ldr	r4, [pc, #52]	; (801e1b0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 801e17a:	782b      	ldrb	r3, [r5, #0]
 801e17c:	f3bf 8f5b 	dmb	ish
 801e180:	f013 0f01 	tst.w	r3, #1
 801e184:	4606      	mov	r6, r0
 801e186:	d10d      	bne.n	801e1a4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801e188:	4628      	mov	r0, r5
 801e18a:	f009 f9fa 	bl	8027582 <__cxa_guard_acquire>
 801e18e:	b148      	cbz	r0, 801e1a4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801e190:	4b08      	ldr	r3, [pc, #32]	; (801e1b4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 801e192:	6023      	str	r3, [r4, #0]
 801e194:	4628      	mov	r0, r5
 801e196:	f009 fa00 	bl	802759a <__cxa_guard_release>
 801e19a:	4a07      	ldr	r2, [pc, #28]	; (801e1b8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 801e19c:	4907      	ldr	r1, [pc, #28]	; (801e1bc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 801e19e:	4620      	mov	r0, r4
 801e1a0:	f009 f9e8 	bl	8027574 <__aeabi_atexit>
 801e1a4:	f8c6 4080 	str.w	r4, [r6, #128]	; 0x80
 801e1a8:	bd70      	pop	{r4, r5, r6, pc}
 801e1aa:	bf00      	nop
 801e1ac:	20013858 	.word	0x20013858
 801e1b0:	200138cc 	.word	0x200138cc
 801e1b4:	0802cb4c 	.word	0x0802cb4c
 801e1b8:	20000000 	.word	0x20000000
 801e1bc:	0801a7bb 	.word	0x0801a7bb

0801e1c0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 801e1c0:	b510      	push	{r4, lr}
 801e1c2:	4604      	mov	r4, r0
 801e1c4:	f7ff ff96 	bl	801e0f4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 801e1c8:	4620      	mov	r0, r4
 801e1ca:	f7ff ffb3 	bl	801e134 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 801e1ce:	4620      	mov	r0, r4
 801e1d0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e1d4:	f7ff bfce 	b.w	801e174 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

0801e1d8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 801e1d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e1dc:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 801e1e0:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 801e1e4:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 801e1e8:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 801e1ec:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 801e1f0:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 801e1f4:	8808      	ldrh	r0, [r1, #0]
 801e1f6:	fb05 4c0e 	mla	ip, r5, lr, r4
 801e1fa:	2d00      	cmp	r5, #0
 801e1fc:	eb02 0a0c 	add.w	sl, r2, ip
 801e200:	f2c0 80b0 	blt.w	801e364 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801e204:	45ab      	cmp	fp, r5
 801e206:	f340 80ad 	ble.w	801e364 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801e20a:	2c00      	cmp	r4, #0
 801e20c:	f2c0 80a8 	blt.w	801e360 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801e210:	45a6      	cmp	lr, r4
 801e212:	f340 80a5 	ble.w	801e360 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801e216:	f812 200c 	ldrb.w	r2, [r2, ip]
 801e21a:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 801e21e:	1c62      	adds	r2, r4, #1
 801e220:	f100 80a3 	bmi.w	801e36a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801e224:	4596      	cmp	lr, r2
 801e226:	f340 80a0 	ble.w	801e36a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801e22a:	f1b9 0f00 	cmp.w	r9, #0
 801e22e:	f000 809c 	beq.w	801e36a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801e232:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801e236:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801e23a:	3501      	adds	r5, #1
 801e23c:	f100 8099 	bmi.w	801e372 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801e240:	45ab      	cmp	fp, r5
 801e242:	f340 8096 	ble.w	801e372 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801e246:	2f00      	cmp	r7, #0
 801e248:	f000 8093 	beq.w	801e372 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801e24c:	2c00      	cmp	r4, #0
 801e24e:	f2c0 808e 	blt.w	801e36e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801e252:	45a6      	cmp	lr, r4
 801e254:	f340 808b 	ble.w	801e36e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801e258:	f81a 200e 	ldrb.w	r2, [sl, lr]
 801e25c:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 801e260:	3401      	adds	r4, #1
 801e262:	f100 8089 	bmi.w	801e378 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801e266:	45a6      	cmp	lr, r4
 801e268:	f340 8086 	ble.w	801e378 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801e26c:	f1b9 0f00 	cmp.w	r9, #0
 801e270:	f000 8082 	beq.w	801e378 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801e274:	44d6      	add	lr, sl
 801e276:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801e27a:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801e27e:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801e282:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801e286:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801e28a:	fb19 fe07 	smulbb	lr, r9, r7
 801e28e:	ea44 0808 	orr.w	r8, r4, r8
 801e292:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801e296:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801e29a:	f1c7 0210 	rsb	r2, r7, #16
 801e29e:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801e2a2:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801e2a6:	ea44 0c0c 	orr.w	ip, r4, ip
 801e2aa:	eba2 0209 	sub.w	r2, r2, r9
 801e2ae:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801e2b2:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801e2b6:	fb04 f40c 	mul.w	r4, r4, ip
 801e2ba:	fb02 4808 	mla	r8, r2, r8, r4
 801e2be:	041a      	lsls	r2, r3, #16
 801e2c0:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801e2c4:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801e2c8:	4313      	orrs	r3, r2
 801e2ca:	042a      	lsls	r2, r5, #16
 801e2cc:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801e2d0:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801e2d4:	fb0e 8303 	mla	r3, lr, r3, r8
 801e2d8:	432a      	orrs	r2, r5
 801e2da:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801e2de:	fb07 3202 	mla	r2, r7, r2, r3
 801e2e2:	0d53      	lsrs	r3, r2, #21
 801e2e4:	0952      	lsrs	r2, r2, #5
 801e2e6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e2ea:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801e2ee:	431a      	orrs	r2, r3
 801e2f0:	b293      	uxth	r3, r2
 801e2f2:	b2b4      	uxth	r4, r6
 801e2f4:	1202      	asrs	r2, r0, #8
 801e2f6:	43f6      	mvns	r6, r6
 801e2f8:	b2f6      	uxtb	r6, r6
 801e2fa:	121d      	asrs	r5, r3, #8
 801e2fc:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801e300:	fb12 f206 	smulbb	r2, r2, r6
 801e304:	10c7      	asrs	r7, r0, #3
 801e306:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801e30a:	00c0      	lsls	r0, r0, #3
 801e30c:	fb05 2504 	mla	r5, r5, r4, r2
 801e310:	b2c0      	uxtb	r0, r0
 801e312:	10da      	asrs	r2, r3, #3
 801e314:	00db      	lsls	r3, r3, #3
 801e316:	b2db      	uxtb	r3, r3
 801e318:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e31c:	fb10 f006 	smulbb	r0, r0, r6
 801e320:	b2ad      	uxth	r5, r5
 801e322:	fb03 0004 	mla	r0, r3, r4, r0
 801e326:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801e32a:	fb17 f706 	smulbb	r7, r7, r6
 801e32e:	b280      	uxth	r0, r0
 801e330:	1c6b      	adds	r3, r5, #1
 801e332:	fb02 7204 	mla	r2, r2, r4, r7
 801e336:	b292      	uxth	r2, r2
 801e338:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801e33c:	1c43      	adds	r3, r0, #1
 801e33e:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801e342:	1c50      	adds	r0, r2, #1
 801e344:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801e348:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801e34c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e350:	0952      	lsrs	r2, r2, #5
 801e352:	432b      	orrs	r3, r5
 801e354:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e358:	4313      	orrs	r3, r2
 801e35a:	800b      	strh	r3, [r1, #0]
 801e35c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e360:	4680      	mov	r8, r0
 801e362:	e75c      	b.n	801e21e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 801e364:	4684      	mov	ip, r0
 801e366:	4680      	mov	r8, r0
 801e368:	e767      	b.n	801e23a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801e36a:	4684      	mov	ip, r0
 801e36c:	e765      	b.n	801e23a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801e36e:	4605      	mov	r5, r0
 801e370:	e776      	b.n	801e260 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801e372:	4603      	mov	r3, r0
 801e374:	4605      	mov	r5, r0
 801e376:	e782      	b.n	801e27e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801e378:	4603      	mov	r3, r0
 801e37a:	e780      	b.n	801e27e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

0801e37c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e37c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e380:	b099      	sub	sp, #100	; 0x64
 801e382:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 801e386:	9215      	str	r2, [sp, #84]	; 0x54
 801e388:	9309      	str	r3, [sp, #36]	; 0x24
 801e38a:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 801e38c:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 801e390:	930d      	str	r3, [sp, #52]	; 0x34
 801e392:	910c      	str	r1, [sp, #48]	; 0x30
 801e394:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 801e398:	9016      	str	r0, [sp, #88]	; 0x58
 801e39a:	6850      	ldr	r0, [r2, #4]
 801e39c:	6812      	ldr	r2, [r2, #0]
 801e39e:	fb00 1303 	mla	r3, r0, r3, r1
 801e3a2:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 801e3a6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e3a8:	681b      	ldr	r3, [r3, #0]
 801e3aa:	930b      	str	r3, [sp, #44]	; 0x2c
 801e3ac:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e3ae:	685e      	ldr	r6, [r3, #4]
 801e3b0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e3b2:	43db      	mvns	r3, r3
 801e3b4:	b2db      	uxtb	r3, r3
 801e3b6:	3604      	adds	r6, #4
 801e3b8:	930a      	str	r3, [sp, #40]	; 0x28
 801e3ba:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801e3bc:	2b00      	cmp	r3, #0
 801e3be:	dc03      	bgt.n	801e3c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801e3c0:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801e3c2:	2b00      	cmp	r3, #0
 801e3c4:	f340 8225 	ble.w	801e812 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801e3c8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e3ca:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e3ce:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e3d2:	1e48      	subs	r0, r1, #1
 801e3d4:	1e57      	subs	r7, r2, #1
 801e3d6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e3d8:	2b00      	cmp	r3, #0
 801e3da:	f340 80e3 	ble.w	801e5a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801e3de:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 801e3e2:	ea4f 4325 	mov.w	r3, r5, asr #16
 801e3e6:	d406      	bmi.n	801e3f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801e3e8:	4584      	cmp	ip, r0
 801e3ea:	da04      	bge.n	801e3f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801e3ec:	2b00      	cmp	r3, #0
 801e3ee:	db02      	blt.n	801e3f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801e3f0:	42bb      	cmp	r3, r7
 801e3f2:	f2c0 80d8 	blt.w	801e5a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801e3f6:	f11c 0c01 	adds.w	ip, ip, #1
 801e3fa:	f100 80c9 	bmi.w	801e590 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801e3fe:	4561      	cmp	r1, ip
 801e400:	f2c0 80c6 	blt.w	801e590 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801e404:	3301      	adds	r3, #1
 801e406:	f100 80c3 	bmi.w	801e590 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801e40a:	429a      	cmp	r2, r3
 801e40c:	f2c0 80c0 	blt.w	801e590 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801e410:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801e414:	4647      	mov	r7, r8
 801e416:	f1bb 0f00 	cmp.w	fp, #0
 801e41a:	f340 80e3 	ble.w	801e5e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 801e41e:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801e420:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e422:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801e426:	689b      	ldr	r3, [r3, #8]
 801e428:	ea5f 422a 	movs.w	r2, sl, asr #16
 801e42c:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801e430:	f3ca 3003 	ubfx	r0, sl, #12, #4
 801e434:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801e438:	f100 8121 	bmi.w	801e67e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801e43c:	f103 39ff 	add.w	r9, r3, #4294967295
 801e440:	454a      	cmp	r2, r9
 801e442:	f280 811c 	bge.w	801e67e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801e446:	f1bc 0f00 	cmp.w	ip, #0
 801e44a:	f2c0 8118 	blt.w	801e67e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801e44e:	f10e 39ff 	add.w	r9, lr, #4294967295
 801e452:	45cc      	cmp	ip, r9
 801e454:	f280 8113 	bge.w	801e67e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801e458:	b21b      	sxth	r3, r3
 801e45a:	fb0c 2203 	mla	r2, ip, r3, r2
 801e45e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801e460:	eb04 0902 	add.w	r9, r4, r2
 801e464:	5ca2      	ldrb	r2, [r4, r2]
 801e466:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 801e46a:	2800      	cmp	r0, #0
 801e46c:	f000 80fe 	beq.w	801e66c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801e470:	f899 2001 	ldrb.w	r2, [r9, #1]
 801e474:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801e478:	9211      	str	r2, [sp, #68]	; 0x44
 801e47a:	b151      	cbz	r1, 801e492 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801e47c:	eb09 0203 	add.w	r2, r9, r3
 801e480:	f819 3003 	ldrb.w	r3, [r9, r3]
 801e484:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801e488:	930f      	str	r3, [sp, #60]	; 0x3c
 801e48a:	7853      	ldrb	r3, [r2, #1]
 801e48c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801e490:	9312      	str	r3, [sp, #72]	; 0x48
 801e492:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801e494:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801e496:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801e49a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801e49e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801e4a2:	ea4c 0c03 	orr.w	ip, ip, r3
 801e4a6:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801e4a8:	041b      	lsls	r3, r3, #16
 801e4aa:	fb10 f201 	smulbb	r2, r0, r1
 801e4ae:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801e4b2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801e4b6:	10d2      	asrs	r2, r2, #3
 801e4b8:	4323      	orrs	r3, r4
 801e4ba:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801e4be:	4353      	muls	r3, r2
 801e4c0:	fb09 330c 	mla	r3, r9, ip, r3
 801e4c4:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801e4c8:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801e4cc:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801e4d0:	ea4c 0e0e 	orr.w	lr, ip, lr
 801e4d4:	f1c1 0c10 	rsb	ip, r1, #16
 801e4d8:	ebac 0c00 	sub.w	ip, ip, r0
 801e4dc:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801e4e0:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801e4e4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801e4e6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801e4e8:	0418      	lsls	r0, r3, #16
 801e4ea:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801e4ee:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801e4f2:	4318      	orrs	r0, r3
 801e4f4:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801e4f8:	fb02 c200 	mla	r2, r2, r0, ip
 801e4fc:	0d53      	lsrs	r3, r2, #21
 801e4fe:	0952      	lsrs	r2, r2, #5
 801e500:	8838      	ldrh	r0, [r7, #0]
 801e502:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e506:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801e50a:	431a      	orrs	r2, r3
 801e50c:	b292      	uxth	r2, r2
 801e50e:	1201      	asrs	r1, r0, #8
 801e510:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 801e514:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801e518:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801e51c:	fb11 f104 	smulbb	r1, r1, r4
 801e520:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801e524:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e528:	00c0      	lsls	r0, r0, #3
 801e52a:	fb0c 1c03 	mla	ip, ip, r3, r1
 801e52e:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801e532:	10d1      	asrs	r1, r2, #3
 801e534:	b2c0      	uxtb	r0, r0
 801e536:	00d2      	lsls	r2, r2, #3
 801e538:	b2d2      	uxtb	r2, r2
 801e53a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801e53e:	fb1e fe04 	smulbb	lr, lr, r4
 801e542:	fb10 f004 	smulbb	r0, r0, r4
 801e546:	fa1f fc8c 	uxth.w	ip, ip
 801e54a:	fb01 e103 	mla	r1, r1, r3, lr
 801e54e:	fb02 0303 	mla	r3, r2, r3, r0
 801e552:	b29a      	uxth	r2, r3
 801e554:	f10c 0301 	add.w	r3, ip, #1
 801e558:	b289      	uxth	r1, r1
 801e55a:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801e55e:	1c53      	adds	r3, r2, #1
 801e560:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e564:	1c4a      	adds	r2, r1, #1
 801e566:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801e56a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801e56e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e572:	0949      	lsrs	r1, r1, #5
 801e574:	ea43 030c 	orr.w	r3, r3, ip
 801e578:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801e57c:	430b      	orrs	r3, r1
 801e57e:	803b      	strh	r3, [r7, #0]
 801e580:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801e582:	449a      	add	sl, r3
 801e584:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e586:	3702      	adds	r7, #2
 801e588:	441d      	add	r5, r3
 801e58a:	f10b 3bff 	add.w	fp, fp, #4294967295
 801e58e:	e742      	b.n	801e416 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801e590:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801e592:	449a      	add	sl, r3
 801e594:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e596:	441d      	add	r5, r3
 801e598:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e59a:	3b01      	subs	r3, #1
 801e59c:	9309      	str	r3, [sp, #36]	; 0x24
 801e59e:	f108 0802 	add.w	r8, r8, #2
 801e5a2:	e718      	b.n	801e3d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801e5a4:	d023      	beq.n	801e5ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801e5a6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e5a8:	9825      	ldr	r0, [sp, #148]	; 0x94
 801e5aa:	3b01      	subs	r3, #1
 801e5ac:	fb00 a003 	mla	r0, r0, r3, sl
 801e5b0:	1400      	asrs	r0, r0, #16
 801e5b2:	f53f af2d 	bmi.w	801e410 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801e5b6:	3901      	subs	r1, #1
 801e5b8:	4288      	cmp	r0, r1
 801e5ba:	f6bf af29 	bge.w	801e410 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801e5be:	9926      	ldr	r1, [sp, #152]	; 0x98
 801e5c0:	fb01 5303 	mla	r3, r1, r3, r5
 801e5c4:	141b      	asrs	r3, r3, #16
 801e5c6:	f53f af23 	bmi.w	801e410 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801e5ca:	3a01      	subs	r2, #1
 801e5cc:	4293      	cmp	r3, r2
 801e5ce:	f6bf af1f 	bge.w	801e410 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801e5d2:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801e5d6:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 801e5da:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 801e5de:	f1be 0f00 	cmp.w	lr, #0
 801e5e2:	dc6c      	bgt.n	801e6be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801e5e4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e5e6:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801e5ea:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801e5ee:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801e5f0:	2b00      	cmp	r3, #0
 801e5f2:	f340 810e 	ble.w	801e812 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801e5f6:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e5fa:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801e5fe:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e602:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801e604:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e608:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e60c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e610:	eef0 6a62 	vmov.f32	s13, s5
 801e614:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e618:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e61c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e620:	ee16 aa90 	vmov	sl, s13
 801e624:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e628:	eef0 6a43 	vmov.f32	s13, s6
 801e62c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e630:	ee12 2a90 	vmov	r2, s5
 801e634:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e638:	fb92 f3f3 	sdiv	r3, r2, r3
 801e63c:	ee13 2a10 	vmov	r2, s6
 801e640:	9325      	str	r3, [sp, #148]	; 0x94
 801e642:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801e644:	fb92 f3f3 	sdiv	r3, r2, r3
 801e648:	9326      	str	r3, [sp, #152]	; 0x98
 801e64a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801e64c:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801e64e:	3b01      	subs	r3, #1
 801e650:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e654:	930c      	str	r3, [sp, #48]	; 0x30
 801e656:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801e658:	bf08      	it	eq
 801e65a:	4613      	moveq	r3, r2
 801e65c:	ee16 5a90 	vmov	r5, s13
 801e660:	9309      	str	r3, [sp, #36]	; 0x24
 801e662:	eeb0 3a67 	vmov.f32	s6, s15
 801e666:	eef0 2a47 	vmov.f32	s5, s14
 801e66a:	e6a6      	b.n	801e3ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801e66c:	2900      	cmp	r1, #0
 801e66e:	f43f af10 	beq.w	801e492 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801e672:	f819 3003 	ldrb.w	r3, [r9, r3]
 801e676:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801e67a:	930f      	str	r3, [sp, #60]	; 0x3c
 801e67c:	e709      	b.n	801e492 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801e67e:	f112 0901 	adds.w	r9, r2, #1
 801e682:	f53f af7d 	bmi.w	801e580 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801e686:	454b      	cmp	r3, r9
 801e688:	f6ff af7a 	blt.w	801e580 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801e68c:	f11c 0901 	adds.w	r9, ip, #1
 801e690:	f53f af76 	bmi.w	801e580 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801e694:	45ce      	cmp	lr, r9
 801e696:	f6ff af73 	blt.w	801e580 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801e69a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801e69c:	9202      	str	r2, [sp, #8]
 801e69e:	b21b      	sxth	r3, r3
 801e6a0:	fa0f f28e 	sxth.w	r2, lr
 801e6a4:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801e6a8:	e9cd c003 	strd	ip, r0, [sp, #12]
 801e6ac:	9201      	str	r2, [sp, #4]
 801e6ae:	9300      	str	r3, [sp, #0]
 801e6b0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801e6b2:	9816      	ldr	r0, [sp, #88]	; 0x58
 801e6b4:	4633      	mov	r3, r6
 801e6b6:	4639      	mov	r1, r7
 801e6b8:	f7ff fd8e 	bl	801e1d8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801e6bc:	e760      	b.n	801e580 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801e6be:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e6c0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801e6c2:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801e6c6:	ea4f 422a 	mov.w	r2, sl, asr #16
 801e6ca:	1429      	asrs	r1, r5, #16
 801e6cc:	fb03 2101 	mla	r1, r3, r1, r2
 801e6d0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801e6d2:	440a      	add	r2, r1
 801e6d4:	5c61      	ldrb	r1, [r4, r1]
 801e6d6:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801e6da:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801e6de:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801e6e2:	f1bc 0f00 	cmp.w	ip, #0
 801e6e6:	f000 808c 	beq.w	801e802 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 801e6ea:	7857      	ldrb	r7, [r2, #1]
 801e6ec:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 801e6f0:	9413      	str	r4, [sp, #76]	; 0x4c
 801e6f2:	b140      	cbz	r0, 801e706 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801e6f4:	18d7      	adds	r7, r2, r3
 801e6f6:	5cd3      	ldrb	r3, [r2, r3]
 801e6f8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801e6fc:	9310      	str	r3, [sp, #64]	; 0x40
 801e6fe:	787b      	ldrb	r3, [r7, #1]
 801e700:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801e704:	9314      	str	r3, [sp, #80]	; 0x50
 801e706:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801e708:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801e70a:	fb1c f200 	smulbb	r2, ip, r0
 801e70e:	041f      	lsls	r7, r3, #16
 801e710:	10d2      	asrs	r2, r2, #3
 801e712:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801e716:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 801e71a:	431f      	orrs	r7, r3
 801e71c:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801e720:	9317      	str	r3, [sp, #92]	; 0x5c
 801e722:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801e724:	041b      	lsls	r3, r3, #16
 801e726:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 801e72a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801e72e:	ea43 030b 	orr.w	r3, r3, fp
 801e732:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801e734:	4353      	muls	r3, r2
 801e736:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801e73a:	fb04 3707 	mla	r7, r4, r7, r3
 801e73e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801e742:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801e746:	ea43 0b01 	orr.w	fp, r3, r1
 801e74a:	f1c0 0110 	rsb	r1, r0, #16
 801e74e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e750:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801e752:	eba1 0c0c 	sub.w	ip, r1, ip
 801e756:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801e75a:	fb0c 770b 	mla	r7, ip, fp, r7
 801e75e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801e762:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 801e766:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801e76a:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801e76e:	ea4c 0c0b 	orr.w	ip, ip, fp
 801e772:	fb02 770c 	mla	r7, r2, ip, r7
 801e776:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801e778:	0d79      	lsrs	r1, r7, #21
 801e77a:	097f      	lsrs	r7, r7, #5
 801e77c:	8812      	ldrh	r2, [r2, #0]
 801e77e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801e782:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801e786:	430f      	orrs	r7, r1
 801e788:	b2bb      	uxth	r3, r7
 801e78a:	1211      	asrs	r1, r2, #8
 801e78c:	1218      	asrs	r0, r3, #8
 801e78e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801e792:	fb11 f104 	smulbb	r1, r1, r4
 801e796:	10d7      	asrs	r7, r2, #3
 801e798:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801e79c:	00d2      	lsls	r2, r2, #3
 801e79e:	fb00 1009 	mla	r0, r0, r9, r1
 801e7a2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e7a6:	10d9      	asrs	r1, r3, #3
 801e7a8:	b2d2      	uxtb	r2, r2
 801e7aa:	00db      	lsls	r3, r3, #3
 801e7ac:	fb17 f704 	smulbb	r7, r7, r4
 801e7b0:	fb12 f204 	smulbb	r2, r2, r4
 801e7b4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801e7b8:	b2db      	uxtb	r3, r3
 801e7ba:	b280      	uxth	r0, r0
 801e7bc:	fb01 7109 	mla	r1, r1, r9, r7
 801e7c0:	fb03 2309 	mla	r3, r3, r9, r2
 801e7c4:	b29b      	uxth	r3, r3
 801e7c6:	b289      	uxth	r1, r1
 801e7c8:	1c42      	adds	r2, r0, #1
 801e7ca:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801e7ce:	1c4f      	adds	r7, r1, #1
 801e7d0:	1c5a      	adds	r2, r3, #1
 801e7d2:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801e7d6:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801e7da:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801e7de:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801e7e2:	0949      	lsrs	r1, r1, #5
 801e7e4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e7e6:	4310      	orrs	r0, r2
 801e7e8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801e7ec:	4308      	orrs	r0, r1
 801e7ee:	f823 0b02 	strh.w	r0, [r3], #2
 801e7f2:	930e      	str	r3, [sp, #56]	; 0x38
 801e7f4:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801e7f6:	449a      	add	sl, r3
 801e7f8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e7fa:	f10e 3eff 	add.w	lr, lr, #4294967295
 801e7fe:	441d      	add	r5, r3
 801e800:	e6ed      	b.n	801e5de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 801e802:	2800      	cmp	r0, #0
 801e804:	f43f af7f 	beq.w	801e706 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801e808:	5cd3      	ldrb	r3, [r2, r3]
 801e80a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801e80e:	9310      	str	r3, [sp, #64]	; 0x40
 801e810:	e779      	b.n	801e706 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801e812:	b019      	add	sp, #100	; 0x64
 801e814:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e818 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801e818:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801e81c:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 801e820:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801e824:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 801e828:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801e82c:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 801e830:	8808      	ldrh	r0, [r1, #0]
 801e832:	fb08 470e 	mla	r7, r8, lr, r4
 801e836:	f1b8 0f00 	cmp.w	r8, #0
 801e83a:	eb02 0907 	add.w	r9, r2, r7
 801e83e:	db67      	blt.n	801e910 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801e840:	45c2      	cmp	sl, r8
 801e842:	dd65      	ble.n	801e910 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801e844:	2c00      	cmp	r4, #0
 801e846:	db61      	blt.n	801e90c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801e848:	45a6      	cmp	lr, r4
 801e84a:	dd5f      	ble.n	801e90c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801e84c:	5dd2      	ldrb	r2, [r2, r7]
 801e84e:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801e852:	1c62      	adds	r2, r4, #1
 801e854:	d45f      	bmi.n	801e916 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801e856:	4596      	cmp	lr, r2
 801e858:	dd5d      	ble.n	801e916 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801e85a:	2d00      	cmp	r5, #0
 801e85c:	d05b      	beq.n	801e916 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801e85e:	f899 2001 	ldrb.w	r2, [r9, #1]
 801e862:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801e866:	f118 0801 	adds.w	r8, r8, #1
 801e86a:	d458      	bmi.n	801e91e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801e86c:	45c2      	cmp	sl, r8
 801e86e:	dd56      	ble.n	801e91e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801e870:	2e00      	cmp	r6, #0
 801e872:	d054      	beq.n	801e91e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801e874:	2c00      	cmp	r4, #0
 801e876:	db50      	blt.n	801e91a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801e878:	45a6      	cmp	lr, r4
 801e87a:	dd4e      	ble.n	801e91a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801e87c:	f819 200e 	ldrb.w	r2, [r9, lr]
 801e880:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801e884:	3401      	adds	r4, #1
 801e886:	d407      	bmi.n	801e898 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801e888:	45a6      	cmp	lr, r4
 801e88a:	dd05      	ble.n	801e898 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801e88c:	b125      	cbz	r5, 801e898 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801e88e:	44ce      	add	lr, r9
 801e890:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801e894:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801e898:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801e89c:	fb15 f406 	smulbb	r4, r5, r6
 801e8a0:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801e8a4:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801e8a8:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801e8ac:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801e8b0:	ea43 0c0c 	orr.w	ip, r3, ip
 801e8b4:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801e8b8:	f1c6 0310 	rsb	r3, r6, #16
 801e8bc:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801e8c0:	1b5b      	subs	r3, r3, r5
 801e8c2:	ea4e 0707 	orr.w	r7, lr, r7
 801e8c6:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801e8ca:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801e8ce:	437d      	muls	r5, r7
 801e8d0:	fb03 5c0c 	mla	ip, r3, ip, r5
 801e8d4:	0403      	lsls	r3, r0, #16
 801e8d6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801e8da:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801e8de:	4318      	orrs	r0, r3
 801e8e0:	0413      	lsls	r3, r2, #16
 801e8e2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801e8e6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801e8ea:	4313      	orrs	r3, r2
 801e8ec:	fb04 c000 	mla	r0, r4, r0, ip
 801e8f0:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801e8f4:	fb06 0003 	mla	r0, r6, r3, r0
 801e8f8:	0d43      	lsrs	r3, r0, #21
 801e8fa:	0940      	lsrs	r0, r0, #5
 801e8fc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e900:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801e904:	4318      	orrs	r0, r3
 801e906:	8008      	strh	r0, [r1, #0]
 801e908:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801e90c:	4684      	mov	ip, r0
 801e90e:	e7a0      	b.n	801e852 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 801e910:	4607      	mov	r7, r0
 801e912:	4684      	mov	ip, r0
 801e914:	e7a7      	b.n	801e866 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801e916:	4607      	mov	r7, r0
 801e918:	e7a5      	b.n	801e866 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801e91a:	4602      	mov	r2, r0
 801e91c:	e7b2      	b.n	801e884 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 801e91e:	4602      	mov	r2, r0
 801e920:	e7ba      	b.n	801e898 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

0801e922 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e922:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e926:	b093      	sub	sp, #76	; 0x4c
 801e928:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801e92c:	920f      	str	r2, [sp, #60]	; 0x3c
 801e92e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801e930:	9108      	str	r1, [sp, #32]
 801e932:	9306      	str	r3, [sp, #24]
 801e934:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801e938:	9010      	str	r0, [sp, #64]	; 0x40
 801e93a:	6850      	ldr	r0, [r2, #4]
 801e93c:	6812      	ldr	r2, [r2, #0]
 801e93e:	fb00 1303 	mla	r3, r0, r3, r1
 801e942:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801e946:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801e948:	681b      	ldr	r3, [r3, #0]
 801e94a:	9307      	str	r3, [sp, #28]
 801e94c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801e94e:	685f      	ldr	r7, [r3, #4]
 801e950:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801e954:	3704      	adds	r7, #4
 801e956:	9b08      	ldr	r3, [sp, #32]
 801e958:	2b00      	cmp	r3, #0
 801e95a:	dc03      	bgt.n	801e964 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801e95c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801e95e:	2b00      	cmp	r3, #0
 801e960:	f340 81b2 	ble.w	801ecc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801e964:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801e966:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e96a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e96e:	1e48      	subs	r0, r1, #1
 801e970:	f102 3cff 	add.w	ip, r2, #4294967295
 801e974:	9b06      	ldr	r3, [sp, #24]
 801e976:	2b00      	cmp	r3, #0
 801e978:	f340 80a9 	ble.w	801eace <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801e97c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801e980:	ea4f 4326 	mov.w	r3, r6, asr #16
 801e984:	d406      	bmi.n	801e994 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801e986:	4586      	cmp	lr, r0
 801e988:	da04      	bge.n	801e994 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801e98a:	2b00      	cmp	r3, #0
 801e98c:	db02      	blt.n	801e994 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801e98e:	4563      	cmp	r3, ip
 801e990:	f2c0 809e 	blt.w	801ead0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801e994:	f11e 0e01 	adds.w	lr, lr, #1
 801e998:	f100 808f 	bmi.w	801eaba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e99c:	4571      	cmp	r1, lr
 801e99e:	f2c0 808c 	blt.w	801eaba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e9a2:	3301      	adds	r3, #1
 801e9a4:	f100 8089 	bmi.w	801eaba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e9a8:	429a      	cmp	r2, r3
 801e9aa:	f2c0 8086 	blt.w	801eaba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e9ae:	f8dd b018 	ldr.w	fp, [sp, #24]
 801e9b2:	46c8      	mov	r8, r9
 801e9b4:	f1bb 0f00 	cmp.w	fp, #0
 801e9b8:	f340 80a6 	ble.w	801eb08 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801e9bc:	9a24      	ldr	r2, [sp, #144]	; 0x90
 801e9be:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801e9c0:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801e9c4:	689b      	ldr	r3, [r3, #8]
 801e9c6:	1422      	asrs	r2, r4, #16
 801e9c8:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801e9cc:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801e9d0:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801e9d4:	f100 80e3 	bmi.w	801eb9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801e9d8:	f103 3aff 	add.w	sl, r3, #4294967295
 801e9dc:	4552      	cmp	r2, sl
 801e9de:	f280 80de 	bge.w	801eb9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801e9e2:	f1bc 0f00 	cmp.w	ip, #0
 801e9e6:	f2c0 80da 	blt.w	801eb9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801e9ea:	f10e 3aff 	add.w	sl, lr, #4294967295
 801e9ee:	45d4      	cmp	ip, sl
 801e9f0:	f280 80d5 	bge.w	801eb9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801e9f4:	b21b      	sxth	r3, r3
 801e9f6:	fb0c 2203 	mla	r2, ip, r3, r2
 801e9fa:	9d07      	ldr	r5, [sp, #28]
 801e9fc:	eb05 0a02 	add.w	sl, r5, r2
 801ea00:	5caa      	ldrb	r2, [r5, r2]
 801ea02:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 801ea06:	2800      	cmp	r0, #0
 801ea08:	f000 80c0 	beq.w	801eb8c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801ea0c:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801ea10:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801ea14:	920b      	str	r2, [sp, #44]	; 0x2c
 801ea16:	b151      	cbz	r1, 801ea2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801ea18:	eb0a 0203 	add.w	r2, sl, r3
 801ea1c:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801ea20:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801ea24:	9309      	str	r3, [sp, #36]	; 0x24
 801ea26:	7853      	ldrb	r3, [r2, #1]
 801ea28:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801ea2c:	930c      	str	r3, [sp, #48]	; 0x30
 801ea2e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ea30:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801ea32:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801ea36:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801ea3a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801ea3e:	ea4c 0c03 	orr.w	ip, ip, r3
 801ea42:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801ea44:	041b      	lsls	r3, r3, #16
 801ea46:	fb10 f201 	smulbb	r2, r0, r1
 801ea4a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801ea4e:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801ea52:	10d2      	asrs	r2, r2, #3
 801ea54:	432b      	orrs	r3, r5
 801ea56:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 801ea5a:	4353      	muls	r3, r2
 801ea5c:	fb0a 330c 	mla	r3, sl, ip, r3
 801ea60:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801ea64:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801ea68:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801ea6c:	ea4c 0e0e 	orr.w	lr, ip, lr
 801ea70:	f1c1 0c10 	rsb	ip, r1, #16
 801ea74:	ebac 0c00 	sub.w	ip, ip, r0
 801ea78:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801ea7c:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801ea80:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ea82:	0418      	lsls	r0, r3, #16
 801ea84:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801ea88:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801ea8c:	4318      	orrs	r0, r3
 801ea8e:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801ea92:	fb02 c200 	mla	r2, r2, r0, ip
 801ea96:	0d53      	lsrs	r3, r2, #21
 801ea98:	0952      	lsrs	r2, r2, #5
 801ea9a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ea9e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801eaa2:	431a      	orrs	r2, r3
 801eaa4:	f8a8 2000 	strh.w	r2, [r8]
 801eaa8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801eaaa:	441c      	add	r4, r3
 801eaac:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801eaae:	f108 0802 	add.w	r8, r8, #2
 801eab2:	441e      	add	r6, r3
 801eab4:	f10b 3bff 	add.w	fp, fp, #4294967295
 801eab8:	e77c      	b.n	801e9b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801eaba:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801eabc:	441c      	add	r4, r3
 801eabe:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801eac0:	441e      	add	r6, r3
 801eac2:	9b06      	ldr	r3, [sp, #24]
 801eac4:	3b01      	subs	r3, #1
 801eac6:	9306      	str	r3, [sp, #24]
 801eac8:	f109 0902 	add.w	r9, r9, #2
 801eacc:	e752      	b.n	801e974 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801eace:	d020      	beq.n	801eb12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801ead0:	9b06      	ldr	r3, [sp, #24]
 801ead2:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801ead4:	3b01      	subs	r3, #1
 801ead6:	fb00 4003 	mla	r0, r0, r3, r4
 801eada:	1400      	asrs	r0, r0, #16
 801eadc:	f53f af67 	bmi.w	801e9ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801eae0:	3901      	subs	r1, #1
 801eae2:	4288      	cmp	r0, r1
 801eae4:	f6bf af63 	bge.w	801e9ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801eae8:	9920      	ldr	r1, [sp, #128]	; 0x80
 801eaea:	fb01 6303 	mla	r3, r1, r3, r6
 801eaee:	141b      	asrs	r3, r3, #16
 801eaf0:	f53f af5d 	bmi.w	801e9ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801eaf4:	3a01      	subs	r2, #1
 801eaf6:	4293      	cmp	r3, r2
 801eaf8:	f6bf af59 	bge.w	801e9ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801eafc:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801eb00:	46ca      	mov	sl, r9
 801eb02:	f1b8 0f00 	cmp.w	r8, #0
 801eb06:	dc67      	bgt.n	801ebd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801eb08:	9b06      	ldr	r3, [sp, #24]
 801eb0a:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801eb0e:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801eb12:	9b08      	ldr	r3, [sp, #32]
 801eb14:	2b00      	cmp	r3, #0
 801eb16:	f340 80d7 	ble.w	801ecc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801eb1a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801eb1e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801eb22:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801eb26:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801eb28:	ee31 1a05 	vadd.f32	s2, s2, s10
 801eb2c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801eb30:	eeb0 6a62 	vmov.f32	s12, s5
 801eb34:	ee61 7a27 	vmul.f32	s15, s2, s15
 801eb38:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801eb3c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801eb40:	ee16 4a10 	vmov	r4, s12
 801eb44:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801eb48:	eeb0 6a43 	vmov.f32	s12, s6
 801eb4c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801eb50:	ee12 2a90 	vmov	r2, s5
 801eb54:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801eb58:	fb92 f3f3 	sdiv	r3, r2, r3
 801eb5c:	ee13 2a10 	vmov	r2, s6
 801eb60:	931f      	str	r3, [sp, #124]	; 0x7c
 801eb62:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801eb64:	fb92 f3f3 	sdiv	r3, r2, r3
 801eb68:	9320      	str	r3, [sp, #128]	; 0x80
 801eb6a:	9b08      	ldr	r3, [sp, #32]
 801eb6c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801eb6e:	3b01      	subs	r3, #1
 801eb70:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801eb74:	9308      	str	r3, [sp, #32]
 801eb76:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801eb78:	bf08      	it	eq
 801eb7a:	4613      	moveq	r3, r2
 801eb7c:	ee16 6a10 	vmov	r6, s12
 801eb80:	9306      	str	r3, [sp, #24]
 801eb82:	eeb0 3a67 	vmov.f32	s6, s15
 801eb86:	eef0 2a47 	vmov.f32	s5, s14
 801eb8a:	e6e4      	b.n	801e956 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801eb8c:	2900      	cmp	r1, #0
 801eb8e:	f43f af4e 	beq.w	801ea2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801eb92:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801eb96:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801eb9a:	9309      	str	r3, [sp, #36]	; 0x24
 801eb9c:	e747      	b.n	801ea2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801eb9e:	f112 0a01 	adds.w	sl, r2, #1
 801eba2:	d481      	bmi.n	801eaa8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801eba4:	4553      	cmp	r3, sl
 801eba6:	f6ff af7f 	blt.w	801eaa8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ebaa:	f11c 0a01 	adds.w	sl, ip, #1
 801ebae:	f53f af7b 	bmi.w	801eaa8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ebb2:	45d6      	cmp	lr, sl
 801ebb4:	f6ff af78 	blt.w	801eaa8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ebb8:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 801ebbc:	b21b      	sxth	r3, r3
 801ebbe:	fa0f f28e 	sxth.w	r2, lr
 801ebc2:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801ebc6:	9201      	str	r2, [sp, #4]
 801ebc8:	9300      	str	r3, [sp, #0]
 801ebca:	9a07      	ldr	r2, [sp, #28]
 801ebcc:	9810      	ldr	r0, [sp, #64]	; 0x40
 801ebce:	463b      	mov	r3, r7
 801ebd0:	4641      	mov	r1, r8
 801ebd2:	f7ff fe21 	bl	801e818 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801ebd6:	e767      	b.n	801eaa8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ebd8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ebda:	9d07      	ldr	r5, [sp, #28]
 801ebdc:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801ebe0:	1422      	asrs	r2, r4, #16
 801ebe2:	1431      	asrs	r1, r6, #16
 801ebe4:	fb03 2101 	mla	r1, r3, r1, r2
 801ebe8:	9a07      	ldr	r2, [sp, #28]
 801ebea:	440a      	add	r2, r1
 801ebec:	5c69      	ldrb	r1, [r5, r1]
 801ebee:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 801ebf2:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801ebf6:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 801ebfa:	f1be 0f00 	cmp.w	lr, #0
 801ebfe:	d05c      	beq.n	801ecba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801ec00:	f892 c001 	ldrb.w	ip, [r2, #1]
 801ec04:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 801ec08:	950d      	str	r5, [sp, #52]	; 0x34
 801ec0a:	b150      	cbz	r0, 801ec22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801ec0c:	eb02 0c03 	add.w	ip, r2, r3
 801ec10:	5cd3      	ldrb	r3, [r2, r3]
 801ec12:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801ec16:	930a      	str	r3, [sp, #40]	; 0x28
 801ec18:	f89c 3001 	ldrb.w	r3, [ip, #1]
 801ec1c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801ec20:	930e      	str	r3, [sp, #56]	; 0x38
 801ec22:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ec24:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801ec26:	fb1e f200 	smulbb	r2, lr, r0
 801ec2a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801ec2e:	10d2      	asrs	r2, r2, #3
 801ec30:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801ec34:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801ec38:	ea4c 0c03 	orr.w	ip, ip, r3
 801ec3c:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 801ec40:	9311      	str	r3, [sp, #68]	; 0x44
 801ec42:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ec44:	041b      	lsls	r3, r3, #16
 801ec46:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 801ec4a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801ec4e:	ea43 030b 	orr.w	r3, r3, fp
 801ec52:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ec54:	4353      	muls	r3, r2
 801ec56:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801ec5a:	fb05 3c0c 	mla	ip, r5, ip, r3
 801ec5e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801ec62:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801ec66:	ea43 0b01 	orr.w	fp, r3, r1
 801ec6a:	f1c0 0110 	rsb	r1, r0, #16
 801ec6e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ec70:	eba1 0e0e 	sub.w	lr, r1, lr
 801ec74:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801ec78:	fb0e cc0b 	mla	ip, lr, fp, ip
 801ec7c:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801ec80:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 801ec84:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801ec88:	ea4b 0e0e 	orr.w	lr, fp, lr
 801ec8c:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801ec90:	fb02 cc0e 	mla	ip, r2, lr, ip
 801ec94:	ea4f 535c 	mov.w	r3, ip, lsr #21
 801ec98:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801ec9c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801eca0:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801eca4:	ea43 0c0c 	orr.w	ip, r3, ip
 801eca8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801ecaa:	f82a cb02 	strh.w	ip, [sl], #2
 801ecae:	441c      	add	r4, r3
 801ecb0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ecb2:	f108 38ff 	add.w	r8, r8, #4294967295
 801ecb6:	441e      	add	r6, r3
 801ecb8:	e723      	b.n	801eb02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801ecba:	2800      	cmp	r0, #0
 801ecbc:	d0b1      	beq.n	801ec22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801ecbe:	5cd3      	ldrb	r3, [r2, r3]
 801ecc0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801ecc4:	930a      	str	r3, [sp, #40]	; 0x28
 801ecc6:	e7ac      	b.n	801ec22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801ecc8:	b013      	add	sp, #76	; 0x4c
 801ecca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ecce <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 801ecce:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ecd2:	880d      	ldrh	r5, [r1, #0]
 801ecd4:	b087      	sub	sp, #28
 801ecd6:	10ef      	asrs	r7, r5, #3
 801ecd8:	ea4f 2a25 	mov.w	sl, r5, asr #8
 801ecdc:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801ece0:	00ed      	lsls	r5, r5, #3
 801ece2:	9701      	str	r7, [sp, #4]
 801ece4:	b2ed      	uxtb	r5, r5
 801ece6:	9502      	str	r5, [sp, #8]
 801ece8:	9d01      	ldr	r5, [sp, #4]
 801ecea:	9103      	str	r1, [sp, #12]
 801ecec:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 801ecf0:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 801ecf4:	9902      	ldr	r1, [sp, #8]
 801ecf6:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801ecfa:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 801ecfe:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 801ed02:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 801ed06:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 801ed0a:	022d      	lsls	r5, r5, #8
 801ed0c:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 801ed10:	fb06 0709 	mla	r7, r6, r9, r0
 801ed14:	430d      	orrs	r5, r1
 801ed16:	2e00      	cmp	r6, #0
 801ed18:	eb02 0c07 	add.w	ip, r2, r7
 801ed1c:	9505      	str	r5, [sp, #20]
 801ed1e:	f2c0 80b6 	blt.w	801ee8e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801ed22:	45b3      	cmp	fp, r6
 801ed24:	f340 80b3 	ble.w	801ee8e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801ed28:	2800      	cmp	r0, #0
 801ed2a:	f2c0 80ae 	blt.w	801ee8a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801ed2e:	4581      	cmp	r9, r0
 801ed30:	f340 80ab 	ble.w	801ee8a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801ed34:	5dd7      	ldrb	r7, [r2, r7]
 801ed36:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801ed3a:	441f      	add	r7, r3
 801ed3c:	1c42      	adds	r2, r0, #1
 801ed3e:	f100 80a9 	bmi.w	801ee94 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801ed42:	4591      	cmp	r9, r2
 801ed44:	f340 80a6 	ble.w	801ee94 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801ed48:	2c00      	cmp	r4, #0
 801ed4a:	f000 80a3 	beq.w	801ee94 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801ed4e:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801ed52:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801ed56:	441d      	add	r5, r3
 801ed58:	3601      	adds	r6, #1
 801ed5a:	f100 809f 	bmi.w	801ee9c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801ed5e:	45b3      	cmp	fp, r6
 801ed60:	f340 809c 	ble.w	801ee9c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801ed64:	f1be 0f00 	cmp.w	lr, #0
 801ed68:	f000 8098 	beq.w	801ee9c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801ed6c:	2800      	cmp	r0, #0
 801ed6e:	f2c0 8093 	blt.w	801ee98 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801ed72:	4581      	cmp	r9, r0
 801ed74:	f340 8090 	ble.w	801ee98 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801ed78:	f81c 6009 	ldrb.w	r6, [ip, r9]
 801ed7c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801ed80:	441e      	add	r6, r3
 801ed82:	3001      	adds	r0, #1
 801ed84:	f100 808d 	bmi.w	801eea2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801ed88:	4581      	cmp	r9, r0
 801ed8a:	f340 808a 	ble.w	801eea2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801ed8e:	2c00      	cmp	r4, #0
 801ed90:	f000 8087 	beq.w	801eea2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801ed94:	44e1      	add	r9, ip
 801ed96:	f899 2001 	ldrb.w	r2, [r9, #1]
 801ed9a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801ed9e:	4413      	add	r3, r2
 801eda0:	b2a4      	uxth	r4, r4
 801eda2:	fa1f fe8e 	uxth.w	lr, lr
 801eda6:	fb04 fb0e 	mul.w	fp, r4, lr
 801edaa:	0124      	lsls	r4, r4, #4
 801edac:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 801edb0:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 801edb4:	eba4 040b 	sub.w	r4, r4, fp
 801edb8:	fa1f f08e 	uxth.w	r0, lr
 801edbc:	b2a2      	uxth	r2, r4
 801edbe:	78ac      	ldrb	r4, [r5, #2]
 801edc0:	f897 c002 	ldrb.w	ip, [r7, #2]
 801edc4:	9901      	ldr	r1, [sp, #4]
 801edc6:	eba9 0900 	sub.w	r9, r9, r0
 801edca:	fa1f f989 	uxth.w	r9, r9
 801edce:	4354      	muls	r4, r2
 801edd0:	fb09 440c 	mla	r4, r9, ip, r4
 801edd4:	f896 c002 	ldrb.w	ip, [r6, #2]
 801edd8:	fb00 440c 	mla	r4, r0, ip, r4
 801eddc:	f893 c002 	ldrb.w	ip, [r3, #2]
 801ede0:	fa1f fe88 	uxth.w	lr, r8
 801ede4:	ea6f 0808 	mvn.w	r8, r8
 801ede8:	fa5f f888 	uxtb.w	r8, r8
 801edec:	fb0b 4c0c 	mla	ip, fp, ip, r4
 801edf0:	fb1a fa08 	smulbb	sl, sl, r8
 801edf4:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801edf8:	fb0c ac0e 	mla	ip, ip, lr, sl
 801edfc:	f895 a001 	ldrb.w	sl, [r5, #1]
 801ee00:	787c      	ldrb	r4, [r7, #1]
 801ee02:	782d      	ldrb	r5, [r5, #0]
 801ee04:	783f      	ldrb	r7, [r7, #0]
 801ee06:	fb02 fa0a 	mul.w	sl, r2, sl
 801ee0a:	fb09 aa04 	mla	sl, r9, r4, sl
 801ee0e:	7874      	ldrb	r4, [r6, #1]
 801ee10:	436a      	muls	r2, r5
 801ee12:	7835      	ldrb	r5, [r6, #0]
 801ee14:	fb00 aa04 	mla	sl, r0, r4, sl
 801ee18:	fb09 2207 	mla	r2, r9, r7, r2
 801ee1c:	785c      	ldrb	r4, [r3, #1]
 801ee1e:	781b      	ldrb	r3, [r3, #0]
 801ee20:	fb00 2005 	mla	r0, r0, r5, r2
 801ee24:	fb0b a404 	mla	r4, fp, r4, sl
 801ee28:	fb0b 0b03 	mla	fp, fp, r3, r0
 801ee2c:	9b02      	ldr	r3, [sp, #8]
 801ee2e:	fb11 fa08 	smulbb	sl, r1, r8
 801ee32:	fa1f fc8c 	uxth.w	ip, ip
 801ee36:	fb13 f808 	smulbb	r8, r3, r8
 801ee3a:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 801ee3e:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801ee42:	fb04 a40e 	mla	r4, r4, lr, sl
 801ee46:	f10c 0301 	add.w	r3, ip, #1
 801ee4a:	fb0b 8e0e 	mla	lr, fp, lr, r8
 801ee4e:	fa1f fe8e 	uxth.w	lr, lr
 801ee52:	b2a4      	uxth	r4, r4
 801ee54:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801ee58:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 801ee5c:	f104 0a01 	add.w	sl, r4, #1
 801ee60:	f10e 0c01 	add.w	ip, lr, #1
 801ee64:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801ee68:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801ee6c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801ee70:	0964      	lsrs	r4, r4, #5
 801ee72:	ea4c 0c03 	orr.w	ip, ip, r3
 801ee76:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801ee7a:	9b03      	ldr	r3, [sp, #12]
 801ee7c:	ea4c 0c04 	orr.w	ip, ip, r4
 801ee80:	f8a3 c000 	strh.w	ip, [r3]
 801ee84:	b007      	add	sp, #28
 801ee86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ee8a:	af05      	add	r7, sp, #20
 801ee8c:	e756      	b.n	801ed3c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 801ee8e:	ad05      	add	r5, sp, #20
 801ee90:	462f      	mov	r7, r5
 801ee92:	e761      	b.n	801ed58 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801ee94:	ad05      	add	r5, sp, #20
 801ee96:	e75f      	b.n	801ed58 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801ee98:	ae05      	add	r6, sp, #20
 801ee9a:	e772      	b.n	801ed82 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 801ee9c:	ab05      	add	r3, sp, #20
 801ee9e:	461e      	mov	r6, r3
 801eea0:	e77e      	b.n	801eda0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 801eea2:	ab05      	add	r3, sp, #20
 801eea4:	e77c      	b.n	801eda0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0801eea6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801eea6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801eeaa:	b095      	sub	sp, #84	; 0x54
 801eeac:	9212      	str	r2, [sp, #72]	; 0x48
 801eeae:	9309      	str	r3, [sp, #36]	; 0x24
 801eeb0:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801eeb2:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 801eeb6:	930f      	str	r3, [sp, #60]	; 0x3c
 801eeb8:	910e      	str	r1, [sp, #56]	; 0x38
 801eeba:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 801eebe:	9013      	str	r0, [sp, #76]	; 0x4c
 801eec0:	6850      	ldr	r0, [r2, #4]
 801eec2:	6812      	ldr	r2, [r2, #0]
 801eec4:	fb00 1303 	mla	r3, r0, r3, r1
 801eec8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801eecc:	930a      	str	r3, [sp, #40]	; 0x28
 801eece:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801eed0:	681b      	ldr	r3, [r3, #0]
 801eed2:	930d      	str	r3, [sp, #52]	; 0x34
 801eed4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801eed6:	685c      	ldr	r4, [r3, #4]
 801eed8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801eeda:	43db      	mvns	r3, r3
 801eedc:	b2db      	uxtb	r3, r3
 801eede:	3404      	adds	r4, #4
 801eee0:	930b      	str	r3, [sp, #44]	; 0x2c
 801eee2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801eee4:	2b00      	cmp	r3, #0
 801eee6:	dc03      	bgt.n	801eef0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801eee8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801eeea:	2b00      	cmp	r3, #0
 801eeec:	f340 8255 	ble.w	801f39a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801eef0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801eef2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801eef6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801eefa:	1e48      	subs	r0, r1, #1
 801eefc:	1e55      	subs	r5, r2, #1
 801eefe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ef00:	2b00      	cmp	r3, #0
 801ef02:	f340 80f9 	ble.w	801f0f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801ef06:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 801ef08:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ef0a:	1436      	asrs	r6, r6, #16
 801ef0c:	ea4f 4323 	mov.w	r3, r3, asr #16
 801ef10:	d406      	bmi.n	801ef20 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801ef12:	4286      	cmp	r6, r0
 801ef14:	da04      	bge.n	801ef20 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801ef16:	2b00      	cmp	r3, #0
 801ef18:	db02      	blt.n	801ef20 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801ef1a:	42ab      	cmp	r3, r5
 801ef1c:	f2c0 80ed 	blt.w	801f0fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 801ef20:	3601      	adds	r6, #1
 801ef22:	f100 80da 	bmi.w	801f0da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801ef26:	42b1      	cmp	r1, r6
 801ef28:	f2c0 80d7 	blt.w	801f0da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801ef2c:	3301      	adds	r3, #1
 801ef2e:	f100 80d4 	bmi.w	801f0da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801ef32:	429a      	cmp	r2, r3
 801ef34:	f2c0 80d1 	blt.w	801f0da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801ef38:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ef3a:	9311      	str	r3, [sp, #68]	; 0x44
 801ef3c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ef3e:	930c      	str	r3, [sp, #48]	; 0x30
 801ef40:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801ef42:	2b00      	cmp	r3, #0
 801ef44:	f340 80fa 	ble.w	801f13c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801ef48:	9826      	ldr	r0, [sp, #152]	; 0x98
 801ef4a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ef4c:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801ef4e:	68c6      	ldr	r6, [r0, #12]
 801ef50:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801ef52:	141d      	asrs	r5, r3, #16
 801ef54:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801ef58:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801ef5a:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801ef5c:	1400      	asrs	r0, r0, #16
 801ef5e:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801ef62:	6892      	ldr	r2, [r2, #8]
 801ef64:	f100 813e 	bmi.w	801f1e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801ef68:	1e57      	subs	r7, r2, #1
 801ef6a:	42b8      	cmp	r0, r7
 801ef6c:	f280 813a 	bge.w	801f1e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801ef70:	2d00      	cmp	r5, #0
 801ef72:	f2c0 8137 	blt.w	801f1e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801ef76:	1e77      	subs	r7, r6, #1
 801ef78:	42bd      	cmp	r5, r7
 801ef7a:	f280 8133 	bge.w	801f1e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801ef7e:	b212      	sxth	r2, r2
 801ef80:	fb05 0002 	mla	r0, r5, r2, r0
 801ef84:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801ef86:	f815 a000 	ldrb.w	sl, [r5, r0]
 801ef8a:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801ef8e:	182e      	adds	r6, r5, r0
 801ef90:	eb04 050a 	add.w	r5, r4, sl
 801ef94:	2b00      	cmp	r3, #0
 801ef96:	f000 8117 	beq.w	801f1c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801ef9a:	f896 c001 	ldrb.w	ip, [r6, #1]
 801ef9e:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801efa2:	44a4      	add	ip, r4
 801efa4:	2900      	cmp	r1, #0
 801efa6:	f000 8117 	beq.w	801f1d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801efaa:	18b0      	adds	r0, r6, r2
 801efac:	5cb2      	ldrb	r2, [r6, r2]
 801efae:	7840      	ldrb	r0, [r0, #1]
 801efb0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801efb4:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801efb8:	4422      	add	r2, r4
 801efba:	4420      	add	r0, r4
 801efbc:	b29b      	uxth	r3, r3
 801efbe:	b289      	uxth	r1, r1
 801efc0:	fb03 f901 	mul.w	r9, r3, r1
 801efc4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801efc8:	011b      	lsls	r3, r3, #4
 801efca:	b289      	uxth	r1, r1
 801efcc:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801efd0:	f895 b002 	ldrb.w	fp, [r5, #2]
 801efd4:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801efd6:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801efda:	f8b6 e000 	ldrh.w	lr, [r6]
 801efde:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 801efe2:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 801efe6:	eba3 0309 	sub.w	r3, r3, r9
 801efea:	b29b      	uxth	r3, r3
 801efec:	eba8 0801 	sub.w	r8, r8, r1
 801eff0:	fa1f f888 	uxth.w	r8, r8
 801eff4:	435f      	muls	r7, r3
 801eff6:	fb08 770b 	mla	r7, r8, fp, r7
 801effa:	f892 b002 	ldrb.w	fp, [r2, #2]
 801effe:	9310      	str	r3, [sp, #64]	; 0x40
 801f000:	fb01 770b 	mla	r7, r1, fp, r7
 801f004:	f890 b002 	ldrb.w	fp, [r0, #2]
 801f008:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f00a:	fb09 770b 	mla	r7, r9, fp, r7
 801f00e:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801f012:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801f016:	fb1b fb03 	smulbb	fp, fp, r3
 801f01a:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801f01e:	fb07 b706 	mla	r7, r7, r6, fp
 801f022:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f024:	f895 b001 	ldrb.w	fp, [r5, #1]
 801f028:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801f02c:	f89c c000 	ldrb.w	ip, [ip]
 801f030:	435d      	muls	r5, r3
 801f032:	fb08 550b 	mla	r5, r8, fp, r5
 801f036:	f892 b001 	ldrb.w	fp, [r2, #1]
 801f03a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f03c:	fb01 550b 	mla	r5, r1, fp, r5
 801f040:	f890 b001 	ldrb.w	fp, [r0, #1]
 801f044:	fb09 550b 	mla	r5, r9, fp, r5
 801f048:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801f04c:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801f050:	fb1b fb03 	smulbb	fp, fp, r3
 801f054:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f056:	fb03 f30c 	mul.w	r3, r3, ip
 801f05a:	f892 c000 	ldrb.w	ip, [r2]
 801f05e:	fb08 330a 	mla	r3, r8, sl, r3
 801f062:	fb01 330c 	mla	r3, r1, ip, r3
 801f066:	f890 c000 	ldrb.w	ip, [r0]
 801f06a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801f06e:	fb09 3c0c 	mla	ip, r9, ip, r3
 801f072:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f074:	fa5f fe8e 	uxtb.w	lr, lr
 801f078:	b2bf      	uxth	r7, r7
 801f07a:	fb1e fe03 	smulbb	lr, lr, r3
 801f07e:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801f082:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801f086:	fb05 b506 	mla	r5, r5, r6, fp
 801f08a:	1c7b      	adds	r3, r7, #1
 801f08c:	fb0c e606 	mla	r6, ip, r6, lr
 801f090:	b2ad      	uxth	r5, r5
 801f092:	b2b6      	uxth	r6, r6
 801f094:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801f098:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 801f09c:	f105 0b01 	add.w	fp, r5, #1
 801f0a0:	1c77      	adds	r7, r6, #1
 801f0a2:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801f0a6:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801f0aa:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801f0ae:	096d      	lsrs	r5, r5, #5
 801f0b0:	431f      	orrs	r7, r3
 801f0b2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801f0b6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f0b8:	433d      	orrs	r5, r7
 801f0ba:	801d      	strh	r5, [r3, #0]
 801f0bc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f0be:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801f0c0:	3302      	adds	r3, #2
 801f0c2:	930c      	str	r3, [sp, #48]	; 0x30
 801f0c4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f0c6:	4413      	add	r3, r2
 801f0c8:	931f      	str	r3, [sp, #124]	; 0x7c
 801f0ca:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801f0cc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f0ce:	4413      	add	r3, r2
 801f0d0:	9320      	str	r3, [sp, #128]	; 0x80
 801f0d2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f0d4:	3b01      	subs	r3, #1
 801f0d6:	9311      	str	r3, [sp, #68]	; 0x44
 801f0d8:	e732      	b.n	801ef40 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801f0da:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f0dc:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801f0de:	4433      	add	r3, r6
 801f0e0:	931f      	str	r3, [sp, #124]	; 0x7c
 801f0e2:	9e22      	ldr	r6, [sp, #136]	; 0x88
 801f0e4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f0e6:	4433      	add	r3, r6
 801f0e8:	9320      	str	r3, [sp, #128]	; 0x80
 801f0ea:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f0ec:	3b01      	subs	r3, #1
 801f0ee:	9309      	str	r3, [sp, #36]	; 0x24
 801f0f0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f0f2:	3302      	adds	r3, #2
 801f0f4:	930a      	str	r3, [sp, #40]	; 0x28
 801f0f6:	e702      	b.n	801eefe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801f0f8:	d027      	beq.n	801f14a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801f0fa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f0fc:	9821      	ldr	r0, [sp, #132]	; 0x84
 801f0fe:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801f100:	3b01      	subs	r3, #1
 801f102:	fb00 5003 	mla	r0, r0, r3, r5
 801f106:	1400      	asrs	r0, r0, #16
 801f108:	f53f af16 	bmi.w	801ef38 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f10c:	3901      	subs	r1, #1
 801f10e:	4288      	cmp	r0, r1
 801f110:	f6bf af12 	bge.w	801ef38 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f114:	9922      	ldr	r1, [sp, #136]	; 0x88
 801f116:	9820      	ldr	r0, [sp, #128]	; 0x80
 801f118:	fb01 0303 	mla	r3, r1, r3, r0
 801f11c:	141b      	asrs	r3, r3, #16
 801f11e:	f53f af0b 	bmi.w	801ef38 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f122:	3a01      	subs	r2, #1
 801f124:	4293      	cmp	r3, r2
 801f126:	f6bf af07 	bge.w	801ef38 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f12a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f12c:	9311      	str	r3, [sp, #68]	; 0x44
 801f12e:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 801f132:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f134:	930c      	str	r3, [sp, #48]	; 0x30
 801f136:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f138:	2b00      	cmp	r3, #0
 801f13a:	dc70      	bgt.n	801f21e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801f13c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f13e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801f140:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801f144:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f148:	930a      	str	r3, [sp, #40]	; 0x28
 801f14a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f14c:	2b00      	cmp	r3, #0
 801f14e:	f340 8124 	ble.w	801f39a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801f152:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f156:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801f15a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f15e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801f160:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f164:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f168:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f16c:	eef0 6a62 	vmov.f32	s13, s5
 801f170:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f174:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f178:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f17c:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 801f180:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f184:	eef0 6a43 	vmov.f32	s13, s6
 801f188:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f18c:	ee12 2a90 	vmov	r2, s5
 801f190:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f194:	fb92 f3f3 	sdiv	r3, r2, r3
 801f198:	ee13 2a10 	vmov	r2, s6
 801f19c:	9321      	str	r3, [sp, #132]	; 0x84
 801f19e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801f1a0:	fb92 f3f3 	sdiv	r3, r2, r3
 801f1a4:	9322      	str	r3, [sp, #136]	; 0x88
 801f1a6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f1a8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801f1aa:	3b01      	subs	r3, #1
 801f1ac:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f1b0:	930e      	str	r3, [sp, #56]	; 0x38
 801f1b2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801f1b4:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 801f1b8:	bf08      	it	eq
 801f1ba:	4613      	moveq	r3, r2
 801f1bc:	9309      	str	r3, [sp, #36]	; 0x24
 801f1be:	eeb0 3a67 	vmov.f32	s6, s15
 801f1c2:	eef0 2a47 	vmov.f32	s5, s14
 801f1c6:	e68c      	b.n	801eee2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801f1c8:	b149      	cbz	r1, 801f1de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801f1ca:	5cb2      	ldrb	r2, [r6, r2]
 801f1cc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f1d0:	4422      	add	r2, r4
 801f1d2:	4628      	mov	r0, r5
 801f1d4:	46ac      	mov	ip, r5
 801f1d6:	e6f1      	b.n	801efbc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801f1d8:	4628      	mov	r0, r5
 801f1da:	462a      	mov	r2, r5
 801f1dc:	e6ee      	b.n	801efbc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801f1de:	4628      	mov	r0, r5
 801f1e0:	462a      	mov	r2, r5
 801f1e2:	e7f7      	b.n	801f1d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801f1e4:	1c47      	adds	r7, r0, #1
 801f1e6:	f53f af69 	bmi.w	801f0bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f1ea:	42ba      	cmp	r2, r7
 801f1ec:	f6ff af66 	blt.w	801f0bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f1f0:	1c6f      	adds	r7, r5, #1
 801f1f2:	f53f af63 	bmi.w	801f0bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f1f6:	42be      	cmp	r6, r7
 801f1f8:	f6ff af60 	blt.w	801f0bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f1fc:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801f1fe:	9002      	str	r0, [sp, #8]
 801f200:	b236      	sxth	r6, r6
 801f202:	b212      	sxth	r2, r2
 801f204:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801f208:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801f20c:	9200      	str	r2, [sp, #0]
 801f20e:	9601      	str	r6, [sp, #4]
 801f210:	4623      	mov	r3, r4
 801f212:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 801f216:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801f218:	f7ff fd59 	bl	801ecce <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801f21c:	e74e      	b.n	801f0bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f21e:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801f220:	9820      	ldr	r0, [sp, #128]	; 0x80
 801f222:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801f224:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f226:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801f22a:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801f22c:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801f230:	142d      	asrs	r5, r5, #16
 801f232:	1400      	asrs	r0, r0, #16
 801f234:	fb02 5000 	mla	r0, r2, r0, r5
 801f238:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801f23a:	f815 9000 	ldrb.w	r9, [r5, r0]
 801f23e:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801f242:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801f246:	182e      	adds	r6, r5, r0
 801f248:	eb04 0509 	add.w	r5, r4, r9
 801f24c:	2b00      	cmp	r3, #0
 801f24e:	f000 8096 	beq.w	801f37e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801f252:	7877      	ldrb	r7, [r6, #1]
 801f254:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801f258:	4427      	add	r7, r4
 801f25a:	2900      	cmp	r1, #0
 801f25c:	f000 8097 	beq.w	801f38e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801f260:	18b0      	adds	r0, r6, r2
 801f262:	5cb2      	ldrb	r2, [r6, r2]
 801f264:	7840      	ldrb	r0, [r0, #1]
 801f266:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f26a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801f26e:	4422      	add	r2, r4
 801f270:	4420      	add	r0, r4
 801f272:	b29b      	uxth	r3, r3
 801f274:	b289      	uxth	r1, r1
 801f276:	fb03 f801 	mul.w	r8, r3, r1
 801f27a:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801f27c:	f895 b002 	ldrb.w	fp, [r5, #2]
 801f280:	f8b6 c000 	ldrh.w	ip, [r6]
 801f284:	78be      	ldrb	r6, [r7, #2]
 801f286:	f814 9009 	ldrb.w	r9, [r4, r9]
 801f28a:	011b      	lsls	r3, r3, #4
 801f28c:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801f290:	b289      	uxth	r1, r1
 801f292:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801f296:	eba3 0308 	sub.w	r3, r3, r8
 801f29a:	b29b      	uxth	r3, r3
 801f29c:	ebae 0e01 	sub.w	lr, lr, r1
 801f2a0:	fa1f fe8e 	uxth.w	lr, lr
 801f2a4:	435e      	muls	r6, r3
 801f2a6:	fb0e 660b 	mla	r6, lr, fp, r6
 801f2aa:	f892 b002 	ldrb.w	fp, [r2, #2]
 801f2ae:	9310      	str	r3, [sp, #64]	; 0x40
 801f2b0:	fb01 660b 	mla	r6, r1, fp, r6
 801f2b4:	f890 b002 	ldrb.w	fp, [r0, #2]
 801f2b8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f2ba:	fb08 660b 	mla	r6, r8, fp, r6
 801f2be:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801f2c2:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801f2c6:	fb1b fb03 	smulbb	fp, fp, r3
 801f2ca:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801f2ce:	fb06 b60a 	mla	r6, r6, sl, fp
 801f2d2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f2d4:	f895 b001 	ldrb.w	fp, [r5, #1]
 801f2d8:	787d      	ldrb	r5, [r7, #1]
 801f2da:	783f      	ldrb	r7, [r7, #0]
 801f2dc:	435d      	muls	r5, r3
 801f2de:	fb0e 550b 	mla	r5, lr, fp, r5
 801f2e2:	f892 b001 	ldrb.w	fp, [r2, #1]
 801f2e6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f2e8:	fb01 550b 	mla	r5, r1, fp, r5
 801f2ec:	f890 b001 	ldrb.w	fp, [r0, #1]
 801f2f0:	fb08 550b 	mla	r5, r8, fp, r5
 801f2f4:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801f2f8:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801f2fc:	fb1b fb03 	smulbb	fp, fp, r3
 801f300:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f302:	437b      	muls	r3, r7
 801f304:	7817      	ldrb	r7, [r2, #0]
 801f306:	fb0e 3309 	mla	r3, lr, r9, r3
 801f30a:	fb01 3307 	mla	r3, r1, r7, r3
 801f30e:	7807      	ldrb	r7, [r0, #0]
 801f310:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801f314:	fb08 3707 	mla	r7, r8, r7, r3
 801f318:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f31a:	fa5f fc8c 	uxtb.w	ip, ip
 801f31e:	fb1c fc03 	smulbb	ip, ip, r3
 801f322:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801f326:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801f32a:	fb05 b50a 	mla	r5, r5, sl, fp
 801f32e:	fb07 c70a 	mla	r7, r7, sl, ip
 801f332:	b2b6      	uxth	r6, r6
 801f334:	b2ad      	uxth	r5, r5
 801f336:	b2bf      	uxth	r7, r7
 801f338:	1c73      	adds	r3, r6, #1
 801f33a:	1c7a      	adds	r2, r7, #1
 801f33c:	f105 0b01 	add.w	fp, r5, #1
 801f340:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801f344:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801f348:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801f34c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801f350:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801f354:	096d      	lsrs	r5, r5, #5
 801f356:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f358:	4316      	orrs	r6, r2
 801f35a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801f35e:	432e      	orrs	r6, r5
 801f360:	f823 6b02 	strh.w	r6, [r3], #2
 801f364:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801f366:	930c      	str	r3, [sp, #48]	; 0x30
 801f368:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f36a:	4413      	add	r3, r2
 801f36c:	931f      	str	r3, [sp, #124]	; 0x7c
 801f36e:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801f370:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f372:	4413      	add	r3, r2
 801f374:	9320      	str	r3, [sp, #128]	; 0x80
 801f376:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f378:	3b01      	subs	r3, #1
 801f37a:	9311      	str	r3, [sp, #68]	; 0x44
 801f37c:	e6db      	b.n	801f136 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801f37e:	b149      	cbz	r1, 801f394 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801f380:	5cb2      	ldrb	r2, [r6, r2]
 801f382:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f386:	4422      	add	r2, r4
 801f388:	4628      	mov	r0, r5
 801f38a:	462f      	mov	r7, r5
 801f38c:	e771      	b.n	801f272 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801f38e:	4628      	mov	r0, r5
 801f390:	462a      	mov	r2, r5
 801f392:	e76e      	b.n	801f272 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801f394:	4628      	mov	r0, r5
 801f396:	462a      	mov	r2, r5
 801f398:	e7f7      	b.n	801f38a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801f39a:	b015      	add	sp, #84	; 0x54
 801f39c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f3a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801f3a0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f3a4:	880f      	ldrh	r7, [r1, #0]
 801f3a6:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 801f3aa:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801f3ae:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 801f3b2:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801f3b6:	023c      	lsls	r4, r7, #8
 801f3b8:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 801f3bc:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 801f3c0:	017c      	lsls	r4, r7, #5
 801f3c2:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 801f3c6:	00ff      	lsls	r7, r7, #3
 801f3c8:	ea4b 0404 	orr.w	r4, fp, r4
 801f3cc:	b2ff      	uxtb	r7, r7
 801f3ce:	fb05 ca0e 	mla	sl, r5, lr, ip
 801f3d2:	4327      	orrs	r7, r4
 801f3d4:	2d00      	cmp	r5, #0
 801f3d6:	eb02 080a 	add.w	r8, r2, sl
 801f3da:	9701      	str	r7, [sp, #4]
 801f3dc:	db7e      	blt.n	801f4dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801f3de:	45a9      	cmp	r9, r5
 801f3e0:	dd7c      	ble.n	801f4dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801f3e2:	f1bc 0f00 	cmp.w	ip, #0
 801f3e6:	db77      	blt.n	801f4d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801f3e8:	45e6      	cmp	lr, ip
 801f3ea:	dd75      	ble.n	801f4d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801f3ec:	f812 700a 	ldrb.w	r7, [r2, sl]
 801f3f0:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801f3f4:	441f      	add	r7, r3
 801f3f6:	f11c 0201 	adds.w	r2, ip, #1
 801f3fa:	d472      	bmi.n	801f4e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801f3fc:	4596      	cmp	lr, r2
 801f3fe:	dd70      	ble.n	801f4e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801f400:	2800      	cmp	r0, #0
 801f402:	d06e      	beq.n	801f4e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801f404:	f898 4001 	ldrb.w	r4, [r8, #1]
 801f408:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801f40c:	441c      	add	r4, r3
 801f40e:	3501      	adds	r5, #1
 801f410:	d46b      	bmi.n	801f4ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801f412:	45a9      	cmp	r9, r5
 801f414:	dd69      	ble.n	801f4ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801f416:	2e00      	cmp	r6, #0
 801f418:	d067      	beq.n	801f4ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801f41a:	f1bc 0f00 	cmp.w	ip, #0
 801f41e:	db62      	blt.n	801f4e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801f420:	45e6      	cmp	lr, ip
 801f422:	dd60      	ble.n	801f4e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801f424:	f818 500e 	ldrb.w	r5, [r8, lr]
 801f428:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801f42c:	441d      	add	r5, r3
 801f42e:	f11c 0201 	adds.w	r2, ip, #1
 801f432:	d45d      	bmi.n	801f4f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801f434:	4596      	cmp	lr, r2
 801f436:	dd5b      	ble.n	801f4f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801f438:	2800      	cmp	r0, #0
 801f43a:	d059      	beq.n	801f4f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801f43c:	44c6      	add	lr, r8
 801f43e:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801f442:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f446:	4413      	add	r3, r2
 801f448:	b280      	uxth	r0, r0
 801f44a:	b2b2      	uxth	r2, r6
 801f44c:	fb00 f602 	mul.w	r6, r0, r2
 801f450:	0100      	lsls	r0, r0, #4
 801f452:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 801f456:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 801f45a:	1b80      	subs	r0, r0, r6
 801f45c:	fa1f fc82 	uxth.w	ip, r2
 801f460:	b282      	uxth	r2, r0
 801f462:	78a0      	ldrb	r0, [r4, #2]
 801f464:	f897 e002 	ldrb.w	lr, [r7, #2]
 801f468:	f897 9000 	ldrb.w	r9, [r7]
 801f46c:	787f      	ldrb	r7, [r7, #1]
 801f46e:	eba8 080c 	sub.w	r8, r8, ip
 801f472:	fa1f f888 	uxth.w	r8, r8
 801f476:	4350      	muls	r0, r2
 801f478:	fb08 0e0e 	mla	lr, r8, lr, r0
 801f47c:	78a8      	ldrb	r0, [r5, #2]
 801f47e:	fb0c e000 	mla	r0, ip, r0, lr
 801f482:	f893 e002 	ldrb.w	lr, [r3, #2]
 801f486:	fb06 0e0e 	mla	lr, r6, lr, r0
 801f48a:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 801f48e:	f894 e000 	ldrb.w	lr, [r4]
 801f492:	fb02 fe0e 	mul.w	lr, r2, lr
 801f496:	fb08 e909 	mla	r9, r8, r9, lr
 801f49a:	f895 e000 	ldrb.w	lr, [r5]
 801f49e:	fb0c 990e 	mla	r9, ip, lr, r9
 801f4a2:	f893 e000 	ldrb.w	lr, [r3]
 801f4a6:	785b      	ldrb	r3, [r3, #1]
 801f4a8:	fb06 9e0e 	mla	lr, r6, lr, r9
 801f4ac:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801f4b0:	ea4e 0e00 	orr.w	lr, lr, r0
 801f4b4:	7860      	ldrb	r0, [r4, #1]
 801f4b6:	4350      	muls	r0, r2
 801f4b8:	786a      	ldrb	r2, [r5, #1]
 801f4ba:	fb08 0007 	mla	r0, r8, r7, r0
 801f4be:	fb0c 0202 	mla	r2, ip, r2, r0
 801f4c2:	fb06 2303 	mla	r3, r6, r3, r2
 801f4c6:	095b      	lsrs	r3, r3, #5
 801f4c8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f4cc:	ea4e 0303 	orr.w	r3, lr, r3
 801f4d0:	800b      	strh	r3, [r1, #0]
 801f4d2:	b003      	add	sp, #12
 801f4d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f4d8:	af01      	add	r7, sp, #4
 801f4da:	e78c      	b.n	801f3f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 801f4dc:	ac01      	add	r4, sp, #4
 801f4de:	4627      	mov	r7, r4
 801f4e0:	e795      	b.n	801f40e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801f4e2:	ac01      	add	r4, sp, #4
 801f4e4:	e793      	b.n	801f40e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801f4e6:	ad01      	add	r5, sp, #4
 801f4e8:	e7a1      	b.n	801f42e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 801f4ea:	ab01      	add	r3, sp, #4
 801f4ec:	461d      	mov	r5, r3
 801f4ee:	e7ab      	b.n	801f448 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 801f4f0:	ab01      	add	r3, sp, #4
 801f4f2:	e7a9      	b.n	801f448 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

0801f4f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f4f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f4f8:	b08f      	sub	sp, #60	; 0x3c
 801f4fa:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 801f4fe:	920c      	str	r2, [sp, #48]	; 0x30
 801f500:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 801f502:	910a      	str	r1, [sp, #40]	; 0x28
 801f504:	9306      	str	r3, [sp, #24]
 801f506:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 801f50a:	900d      	str	r0, [sp, #52]	; 0x34
 801f50c:	6850      	ldr	r0, [r2, #4]
 801f50e:	6812      	ldr	r2, [r2, #0]
 801f510:	fb00 1303 	mla	r3, r0, r3, r1
 801f514:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f518:	9307      	str	r3, [sp, #28]
 801f51a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f51c:	681b      	ldr	r3, [r3, #0]
 801f51e:	9308      	str	r3, [sp, #32]
 801f520:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f522:	685c      	ldr	r4, [r3, #4]
 801f524:	3404      	adds	r4, #4
 801f526:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f528:	2b00      	cmp	r3, #0
 801f52a:	dc03      	bgt.n	801f534 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801f52c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f52e:	2b00      	cmp	r3, #0
 801f530:	f340 81d6 	ble.w	801f8e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801f534:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f536:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f53a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f53e:	1e48      	subs	r0, r1, #1
 801f540:	1e56      	subs	r6, r2, #1
 801f542:	9b06      	ldr	r3, [sp, #24]
 801f544:	2b00      	cmp	r3, #0
 801f546:	f340 80b7 	ble.w	801f6b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801f54a:	ea5f 472b 	movs.w	r7, fp, asr #16
 801f54e:	ea4f 4325 	mov.w	r3, r5, asr #16
 801f552:	d406      	bmi.n	801f562 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801f554:	4287      	cmp	r7, r0
 801f556:	da04      	bge.n	801f562 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801f558:	2b00      	cmp	r3, #0
 801f55a:	db02      	blt.n	801f562 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801f55c:	42b3      	cmp	r3, r6
 801f55e:	f2c0 80ac 	blt.w	801f6ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801f562:	3701      	adds	r7, #1
 801f564:	f100 809d 	bmi.w	801f6a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801f568:	42b9      	cmp	r1, r7
 801f56a:	f2c0 809a 	blt.w	801f6a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801f56e:	3301      	adds	r3, #1
 801f570:	f100 8097 	bmi.w	801f6a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801f574:	429a      	cmp	r2, r3
 801f576:	f2c0 8094 	blt.w	801f6a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801f57a:	9b06      	ldr	r3, [sp, #24]
 801f57c:	930b      	str	r3, [sp, #44]	; 0x2c
 801f57e:	9b07      	ldr	r3, [sp, #28]
 801f580:	9309      	str	r3, [sp, #36]	; 0x24
 801f582:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f584:	2b00      	cmp	r3, #0
 801f586:	f340 80b5 	ble.w	801f6f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801f58a:	9820      	ldr	r0, [sp, #128]	; 0x80
 801f58c:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801f58e:	68c7      	ldr	r7, [r0, #12]
 801f590:	6892      	ldr	r2, [r2, #8]
 801f592:	ea5f 402b 	movs.w	r0, fp, asr #16
 801f596:	ea4f 4625 	mov.w	r6, r5, asr #16
 801f59a:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801f59e:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801f5a2:	f100 80fb 	bmi.w	801f79c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801f5a6:	f102 3cff 	add.w	ip, r2, #4294967295
 801f5aa:	4560      	cmp	r0, ip
 801f5ac:	f280 80f6 	bge.w	801f79c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801f5b0:	2e00      	cmp	r6, #0
 801f5b2:	f2c0 80f3 	blt.w	801f79c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801f5b6:	f107 3cff 	add.w	ip, r7, #4294967295
 801f5ba:	4566      	cmp	r6, ip
 801f5bc:	f280 80ee 	bge.w	801f79c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801f5c0:	b212      	sxth	r2, r2
 801f5c2:	fb06 0002 	mla	r0, r6, r2, r0
 801f5c6:	9e08      	ldr	r6, [sp, #32]
 801f5c8:	1837      	adds	r7, r6, r0
 801f5ca:	5c30      	ldrb	r0, [r6, r0]
 801f5cc:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801f5d0:	eb04 0c08 	add.w	ip, r4, r8
 801f5d4:	2b00      	cmp	r3, #0
 801f5d6:	f000 80d3 	beq.w	801f780 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801f5da:	787e      	ldrb	r6, [r7, #1]
 801f5dc:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801f5e0:	4426      	add	r6, r4
 801f5e2:	2900      	cmp	r1, #0
 801f5e4:	f000 80d4 	beq.w	801f790 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 801f5e8:	18b8      	adds	r0, r7, r2
 801f5ea:	5cba      	ldrb	r2, [r7, r2]
 801f5ec:	7840      	ldrb	r0, [r0, #1]
 801f5ee:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f5f2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801f5f6:	4422      	add	r2, r4
 801f5f8:	4420      	add	r0, r4
 801f5fa:	b29b      	uxth	r3, r3
 801f5fc:	b289      	uxth	r1, r1
 801f5fe:	fb03 f901 	mul.w	r9, r3, r1
 801f602:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801f606:	011b      	lsls	r3, r3, #4
 801f608:	b289      	uxth	r1, r1
 801f60a:	78b7      	ldrb	r7, [r6, #2]
 801f60c:	f89c a002 	ldrb.w	sl, [ip, #2]
 801f610:	f89c c001 	ldrb.w	ip, [ip, #1]
 801f614:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801f618:	eba3 0309 	sub.w	r3, r3, r9
 801f61c:	b29b      	uxth	r3, r3
 801f61e:	ebae 0e01 	sub.w	lr, lr, r1
 801f622:	fa1f fe8e 	uxth.w	lr, lr
 801f626:	435f      	muls	r7, r3
 801f628:	fb0e 770a 	mla	r7, lr, sl, r7
 801f62c:	f892 a002 	ldrb.w	sl, [r2, #2]
 801f630:	fb01 770a 	mla	r7, r1, sl, r7
 801f634:	f890 a002 	ldrb.w	sl, [r0, #2]
 801f638:	fb09 7a0a 	mla	sl, r9, sl, r7
 801f63c:	f814 7008 	ldrb.w	r7, [r4, r8]
 801f640:	f896 8000 	ldrb.w	r8, [r6]
 801f644:	7876      	ldrb	r6, [r6, #1]
 801f646:	fb03 f808 	mul.w	r8, r3, r8
 801f64a:	fb0e 8807 	mla	r8, lr, r7, r8
 801f64e:	7817      	ldrb	r7, [r2, #0]
 801f650:	fb01 8807 	mla	r8, r1, r7, r8
 801f654:	7807      	ldrb	r7, [r0, #0]
 801f656:	fb09 8707 	mla	r7, r9, r7, r8
 801f65a:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801f65e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801f662:	ea47 070a 	orr.w	r7, r7, sl
 801f666:	4373      	muls	r3, r6
 801f668:	f892 a001 	ldrb.w	sl, [r2, #1]
 801f66c:	fb0e 330c 	mla	r3, lr, ip, r3
 801f670:	fb01 310a 	mla	r1, r1, sl, r3
 801f674:	f890 a001 	ldrb.w	sl, [r0, #1]
 801f678:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f67a:	fb09 1a0a 	mla	sl, r9, sl, r1
 801f67e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801f682:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801f686:	ea47 070a 	orr.w	r7, r7, sl
 801f68a:	801f      	strh	r7, [r3, #0]
 801f68c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f68e:	3302      	adds	r3, #2
 801f690:	9309      	str	r3, [sp, #36]	; 0x24
 801f692:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801f694:	449b      	add	fp, r3
 801f696:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f698:	441d      	add	r5, r3
 801f69a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f69c:	3b01      	subs	r3, #1
 801f69e:	930b      	str	r3, [sp, #44]	; 0x2c
 801f6a0:	e76f      	b.n	801f582 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801f6a2:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801f6a4:	449b      	add	fp, r3
 801f6a6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f6a8:	441d      	add	r5, r3
 801f6aa:	9b06      	ldr	r3, [sp, #24]
 801f6ac:	3b01      	subs	r3, #1
 801f6ae:	9306      	str	r3, [sp, #24]
 801f6b0:	9b07      	ldr	r3, [sp, #28]
 801f6b2:	3302      	adds	r3, #2
 801f6b4:	9307      	str	r3, [sp, #28]
 801f6b6:	e744      	b.n	801f542 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801f6b8:	d023      	beq.n	801f702 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801f6ba:	9b06      	ldr	r3, [sp, #24]
 801f6bc:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801f6be:	3b01      	subs	r3, #1
 801f6c0:	fb00 b003 	mla	r0, r0, r3, fp
 801f6c4:	1400      	asrs	r0, r0, #16
 801f6c6:	f53f af58 	bmi.w	801f57a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801f6ca:	3901      	subs	r1, #1
 801f6cc:	4288      	cmp	r0, r1
 801f6ce:	f6bf af54 	bge.w	801f57a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801f6d2:	991c      	ldr	r1, [sp, #112]	; 0x70
 801f6d4:	fb01 5303 	mla	r3, r1, r3, r5
 801f6d8:	141b      	asrs	r3, r3, #16
 801f6da:	f53f af4e 	bmi.w	801f57a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801f6de:	3a01      	subs	r2, #1
 801f6e0:	4293      	cmp	r3, r2
 801f6e2:	f6bf af4a 	bge.w	801f57a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801f6e6:	9b06      	ldr	r3, [sp, #24]
 801f6e8:	9309      	str	r3, [sp, #36]	; 0x24
 801f6ea:	9b07      	ldr	r3, [sp, #28]
 801f6ec:	930b      	str	r3, [sp, #44]	; 0x2c
 801f6ee:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f6f0:	2b00      	cmp	r3, #0
 801f6f2:	dc70      	bgt.n	801f7d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 801f6f4:	9b06      	ldr	r3, [sp, #24]
 801f6f6:	9a07      	ldr	r2, [sp, #28]
 801f6f8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801f6fc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f700:	9307      	str	r3, [sp, #28]
 801f702:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f704:	2b00      	cmp	r3, #0
 801f706:	f340 80eb 	ble.w	801f8e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801f70a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f70e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801f712:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f716:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801f718:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f71c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f720:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f724:	eef0 6a62 	vmov.f32	s13, s5
 801f728:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f72c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f730:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f734:	ee16 ba90 	vmov	fp, s13
 801f738:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f73c:	eef0 6a43 	vmov.f32	s13, s6
 801f740:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f744:	ee12 2a90 	vmov	r2, s5
 801f748:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f74c:	fb92 f3f3 	sdiv	r3, r2, r3
 801f750:	ee13 2a10 	vmov	r2, s6
 801f754:	931b      	str	r3, [sp, #108]	; 0x6c
 801f756:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801f758:	fb92 f3f3 	sdiv	r3, r2, r3
 801f75c:	931c      	str	r3, [sp, #112]	; 0x70
 801f75e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f760:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801f762:	3b01      	subs	r3, #1
 801f764:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f768:	930a      	str	r3, [sp, #40]	; 0x28
 801f76a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801f76c:	bf08      	it	eq
 801f76e:	4613      	moveq	r3, r2
 801f770:	ee16 5a90 	vmov	r5, s13
 801f774:	9306      	str	r3, [sp, #24]
 801f776:	eeb0 3a67 	vmov.f32	s6, s15
 801f77a:	eef0 2a47 	vmov.f32	s5, s14
 801f77e:	e6d2      	b.n	801f526 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801f780:	b149      	cbz	r1, 801f796 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801f782:	5cba      	ldrb	r2, [r7, r2]
 801f784:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f788:	4422      	add	r2, r4
 801f78a:	4660      	mov	r0, ip
 801f78c:	4666      	mov	r6, ip
 801f78e:	e734      	b.n	801f5fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801f790:	4660      	mov	r0, ip
 801f792:	4662      	mov	r2, ip
 801f794:	e731      	b.n	801f5fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801f796:	4660      	mov	r0, ip
 801f798:	4662      	mov	r2, ip
 801f79a:	e7f7      	b.n	801f78c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 801f79c:	f110 0c01 	adds.w	ip, r0, #1
 801f7a0:	f53f af74 	bmi.w	801f68c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801f7a4:	4562      	cmp	r2, ip
 801f7a6:	f6ff af71 	blt.w	801f68c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801f7aa:	f116 0c01 	adds.w	ip, r6, #1
 801f7ae:	f53f af6d 	bmi.w	801f68c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801f7b2:	4567      	cmp	r7, ip
 801f7b4:	f6ff af6a 	blt.w	801f68c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801f7b8:	b23f      	sxth	r7, r7
 801f7ba:	b212      	sxth	r2, r2
 801f7bc:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801f7c0:	e9cd 0602 	strd	r0, r6, [sp, #8]
 801f7c4:	9200      	str	r2, [sp, #0]
 801f7c6:	9701      	str	r7, [sp, #4]
 801f7c8:	4623      	mov	r3, r4
 801f7ca:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801f7ce:	980d      	ldr	r0, [sp, #52]	; 0x34
 801f7d0:	f7ff fde6 	bl	801f3a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 801f7d4:	e75a      	b.n	801f68c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801f7d6:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801f7d8:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801f7dc:	ea4f 462b 	mov.w	r6, fp, asr #16
 801f7e0:	1428      	asrs	r0, r5, #16
 801f7e2:	fb02 6000 	mla	r0, r2, r0, r6
 801f7e6:	9e08      	ldr	r6, [sp, #32]
 801f7e8:	f816 8000 	ldrb.w	r8, [r6, r0]
 801f7ec:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801f7f0:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801f7f4:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801f7f8:	1837      	adds	r7, r6, r0
 801f7fa:	eb04 0c08 	add.w	ip, r4, r8
 801f7fe:	2b00      	cmp	r3, #0
 801f800:	d060      	beq.n	801f8c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 801f802:	787e      	ldrb	r6, [r7, #1]
 801f804:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801f808:	4426      	add	r6, r4
 801f80a:	2900      	cmp	r1, #0
 801f80c:	d062      	beq.n	801f8d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 801f80e:	18b8      	adds	r0, r7, r2
 801f810:	5cba      	ldrb	r2, [r7, r2]
 801f812:	7840      	ldrb	r0, [r0, #1]
 801f814:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f818:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801f81c:	4422      	add	r2, r4
 801f81e:	4420      	add	r0, r4
 801f820:	b29b      	uxth	r3, r3
 801f822:	b289      	uxth	r1, r1
 801f824:	fb03 f901 	mul.w	r9, r3, r1
 801f828:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801f82c:	011b      	lsls	r3, r3, #4
 801f82e:	b289      	uxth	r1, r1
 801f830:	78b7      	ldrb	r7, [r6, #2]
 801f832:	f89c a002 	ldrb.w	sl, [ip, #2]
 801f836:	f89c c001 	ldrb.w	ip, [ip, #1]
 801f83a:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801f83e:	eba3 0309 	sub.w	r3, r3, r9
 801f842:	b29b      	uxth	r3, r3
 801f844:	ebae 0e01 	sub.w	lr, lr, r1
 801f848:	fa1f fe8e 	uxth.w	lr, lr
 801f84c:	435f      	muls	r7, r3
 801f84e:	fb0e 770a 	mla	r7, lr, sl, r7
 801f852:	f892 a002 	ldrb.w	sl, [r2, #2]
 801f856:	fb01 770a 	mla	r7, r1, sl, r7
 801f85a:	f890 a002 	ldrb.w	sl, [r0, #2]
 801f85e:	fb09 7a0a 	mla	sl, r9, sl, r7
 801f862:	f814 7008 	ldrb.w	r7, [r4, r8]
 801f866:	f896 8000 	ldrb.w	r8, [r6]
 801f86a:	7876      	ldrb	r6, [r6, #1]
 801f86c:	fb03 f808 	mul.w	r8, r3, r8
 801f870:	fb0e 8807 	mla	r8, lr, r7, r8
 801f874:	7817      	ldrb	r7, [r2, #0]
 801f876:	fb01 8807 	mla	r8, r1, r7, r8
 801f87a:	7807      	ldrb	r7, [r0, #0]
 801f87c:	fb09 8707 	mla	r7, r9, r7, r8
 801f880:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801f884:	4373      	muls	r3, r6
 801f886:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801f88a:	7856      	ldrb	r6, [r2, #1]
 801f88c:	ea47 070a 	orr.w	r7, r7, sl
 801f890:	fb0e 330c 	mla	r3, lr, ip, r3
 801f894:	f890 a001 	ldrb.w	sl, [r0, #1]
 801f898:	fb01 3306 	mla	r3, r1, r6, r3
 801f89c:	fb09 3a0a 	mla	sl, r9, sl, r3
 801f8a0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801f8a4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f8a6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801f8aa:	ea47 070a 	orr.w	r7, r7, sl
 801f8ae:	f823 7b02 	strh.w	r7, [r3], #2
 801f8b2:	930b      	str	r3, [sp, #44]	; 0x2c
 801f8b4:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801f8b6:	449b      	add	fp, r3
 801f8b8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f8ba:	441d      	add	r5, r3
 801f8bc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f8be:	3b01      	subs	r3, #1
 801f8c0:	9309      	str	r3, [sp, #36]	; 0x24
 801f8c2:	e714      	b.n	801f6ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801f8c4:	b149      	cbz	r1, 801f8da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801f8c6:	5cba      	ldrb	r2, [r7, r2]
 801f8c8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f8cc:	4422      	add	r2, r4
 801f8ce:	4660      	mov	r0, ip
 801f8d0:	4666      	mov	r6, ip
 801f8d2:	e7a5      	b.n	801f820 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801f8d4:	4660      	mov	r0, ip
 801f8d6:	4662      	mov	r2, ip
 801f8d8:	e7a2      	b.n	801f820 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801f8da:	4660      	mov	r0, ip
 801f8dc:	4662      	mov	r2, ip
 801f8de:	e7f7      	b.n	801f8d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 801f8e0:	b00f      	add	sp, #60	; 0x3c
 801f8e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f8e6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801f8e6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f8ea:	b085      	sub	sp, #20
 801f8ec:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 801f8f0:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 801f8f4:	9102      	str	r1, [sp, #8]
 801f8f6:	2c00      	cmp	r4, #0
 801f8f8:	fb04 710c 	mla	r1, r4, ip, r7
 801f8fc:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 801f900:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 801f904:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 801f908:	eb02 0e01 	add.w	lr, r2, r1
 801f90c:	f2c0 8122 	blt.w	801fb54 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801f910:	45a0      	cmp	r8, r4
 801f912:	f340 811f 	ble.w	801fb54 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801f916:	2f00      	cmp	r7, #0
 801f918:	f2c0 811a 	blt.w	801fb50 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801f91c:	45bc      	cmp	ip, r7
 801f91e:	f340 8117 	ble.w	801fb50 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801f922:	5c52      	ldrb	r2, [r2, r1]
 801f924:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801f928:	1c7a      	adds	r2, r7, #1
 801f92a:	f100 8116 	bmi.w	801fb5a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801f92e:	4594      	cmp	ip, r2
 801f930:	f340 8113 	ble.w	801fb5a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801f934:	2e00      	cmp	r6, #0
 801f936:	f000 8112 	beq.w	801fb5e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 801f93a:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801f93e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801f942:	3401      	adds	r4, #1
 801f944:	f100 810f 	bmi.w	801fb66 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801f948:	45a0      	cmp	r8, r4
 801f94a:	f340 810c 	ble.w	801fb66 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801f94e:	2800      	cmp	r0, #0
 801f950:	f000 810c 	beq.w	801fb6c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 801f954:	2f00      	cmp	r7, #0
 801f956:	f2c0 8104 	blt.w	801fb62 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801f95a:	45bc      	cmp	ip, r7
 801f95c:	f340 8101 	ble.w	801fb62 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801f960:	f81e 200c 	ldrb.w	r2, [lr, ip]
 801f964:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 801f968:	3701      	adds	r7, #1
 801f96a:	f100 8102 	bmi.w	801fb72 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801f96e:	45bc      	cmp	ip, r7
 801f970:	f340 80ff 	ble.w	801fb72 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801f974:	2e00      	cmp	r6, #0
 801f976:	f000 80fe 	beq.w	801fb76 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 801f97a:	44f4      	add	ip, lr
 801f97c:	f89c 2001 	ldrb.w	r2, [ip, #1]
 801f980:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801f984:	b2b6      	uxth	r6, r6
 801f986:	b280      	uxth	r0, r0
 801f988:	fb00 fe06 	mul.w	lr, r0, r6
 801f98c:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801f990:	0136      	lsls	r6, r6, #4
 801f992:	eba6 070e 	sub.w	r7, r6, lr
 801f996:	b280      	uxth	r0, r0
 801f998:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801f99c:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801f9a0:	b2bf      	uxth	r7, r7
 801f9a2:	1a1b      	subs	r3, r3, r0
 801f9a4:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801f9a8:	b29b      	uxth	r3, r3
 801f9aa:	fb0a f607 	mul.w	r6, sl, r7
 801f9ae:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801f9b2:	fb0b 6603 	mla	r6, fp, r3, r6
 801f9b6:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801f9ba:	fb00 6609 	mla	r6, r0, r9, r6
 801f9be:	fb0e 6608 	mla	r6, lr, r8, r6
 801f9c2:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801f9c6:	9600      	str	r6, [sp, #0]
 801f9c8:	2e00      	cmp	r6, #0
 801f9ca:	f000 80be 	beq.w	801fb4a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 801f9ce:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801f9d2:	fb0b fc0c 	mul.w	ip, fp, ip
 801f9d6:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801f9da:	fb0b f505 	mul.w	r5, fp, r5
 801f9de:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801f9e2:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801f9e6:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801f9ea:	44dc      	add	ip, fp
 801f9ec:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f9f0:	9501      	str	r5, [sp, #4]
 801f9f2:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801f9f6:	9503      	str	r5, [sp, #12]
 801f9f8:	9d01      	ldr	r5, [sp, #4]
 801f9fa:	9e02      	ldr	r6, [sp, #8]
 801f9fc:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801fa00:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801fa04:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801fa08:	fb0a fc0c 	mul.w	ip, sl, ip
 801fa0c:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801fa10:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801fa14:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801fa18:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801fa1c:	4465      	add	r5, ip
 801fa1e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801fa22:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801fa26:	fb09 fc0c 	mul.w	ip, r9, ip
 801fa2a:	fb09 f904 	mul.w	r9, r9, r4
 801fa2e:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801fa32:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801fa36:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801fa3a:	fb08 f404 	mul.w	r4, r8, r4
 801fa3e:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801fa42:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801fa46:	fb08 f802 	mul.w	r8, r8, r2
 801fa4a:	fb0a fa01 	mul.w	sl, sl, r1
 801fa4e:	0a22      	lsrs	r2, r4, #8
 801fa50:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801fa54:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801fa58:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801fa5c:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801fa60:	4414      	add	r4, r2
 801fa62:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801fa66:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801fa6a:	0a2d      	lsrs	r5, r5, #8
 801fa6c:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801fa70:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801fa74:	9a03      	ldr	r2, [sp, #12]
 801fa76:	8836      	ldrh	r6, [r6, #0]
 801fa78:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801fa7c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801fa80:	437d      	muls	r5, r7
 801fa82:	4461      	add	r1, ip
 801fa84:	0a24      	lsrs	r4, r4, #8
 801fa86:	fb02 5503 	mla	r5, r2, r3, r5
 801fa8a:	0a09      	lsrs	r1, r1, #8
 801fa8c:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801fa90:	fb04 540e 	mla	r4, r4, lr, r5
 801fa94:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801fa98:	fb01 4100 	mla	r1, r1, r0, r4
 801fa9c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801faa0:	0a09      	lsrs	r1, r1, #8
 801faa2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801faa6:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801faaa:	fb07 f70a 	mul.w	r7, r7, sl
 801faae:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801fab2:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801fab6:	fb03 7101 	mla	r1, r3, r1, r7
 801faba:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801fabe:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801fac2:	fb0e 1e08 	mla	lr, lr, r8, r1
 801fac6:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801faca:	fb00 e101 	mla	r1, r0, r1, lr
 801face:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 801fad2:	9a00      	ldr	r2, [sp, #0]
 801fad4:	b287      	uxth	r7, r0
 801fad6:	437a      	muls	r2, r7
 801fad8:	0a09      	lsrs	r1, r1, #8
 801fada:	1c53      	adds	r3, r2, #1
 801fadc:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801fae0:	4321      	orrs	r1, r4
 801fae2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801fae6:	1235      	asrs	r5, r6, #8
 801fae8:	0c0a      	lsrs	r2, r1, #16
 801faea:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801faee:	b2db      	uxtb	r3, r3
 801faf0:	fb12 f207 	smulbb	r2, r2, r7
 801faf4:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801faf8:	fb05 2503 	mla	r5, r5, r3, r2
 801fafc:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801fb00:	10f2      	asrs	r2, r6, #3
 801fb02:	b2c8      	uxtb	r0, r1
 801fb04:	00f6      	lsls	r6, r6, #3
 801fb06:	fb14 f407 	smulbb	r4, r4, r7
 801fb0a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801fb0e:	b2f6      	uxtb	r6, r6
 801fb10:	fb10 f007 	smulbb	r0, r0, r7
 801fb14:	fb02 4203 	mla	r2, r2, r3, r4
 801fb18:	b2ad      	uxth	r5, r5
 801fb1a:	fb06 0303 	mla	r3, r6, r3, r0
 801fb1e:	b299      	uxth	r1, r3
 801fb20:	b294      	uxth	r4, r2
 801fb22:	1c6b      	adds	r3, r5, #1
 801fb24:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801fb28:	1c62      	adds	r2, r4, #1
 801fb2a:	1c4b      	adds	r3, r1, #1
 801fb2c:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801fb30:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801fb34:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801fb38:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801fb3c:	0952      	lsrs	r2, r2, #5
 801fb3e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801fb42:	432b      	orrs	r3, r5
 801fb44:	4313      	orrs	r3, r2
 801fb46:	9a02      	ldr	r2, [sp, #8]
 801fb48:	8013      	strh	r3, [r2, #0]
 801fb4a:	b005      	add	sp, #20
 801fb4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fb50:	2500      	movs	r5, #0
 801fb52:	e6e9      	b.n	801f928 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 801fb54:	2100      	movs	r1, #0
 801fb56:	460d      	mov	r5, r1
 801fb58:	e6f3      	b.n	801f942 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801fb5a:	2100      	movs	r1, #0
 801fb5c:	e6f1      	b.n	801f942 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801fb5e:	4631      	mov	r1, r6
 801fb60:	e6ef      	b.n	801f942 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801fb62:	2400      	movs	r4, #0
 801fb64:	e700      	b.n	801f968 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 801fb66:	2200      	movs	r2, #0
 801fb68:	4614      	mov	r4, r2
 801fb6a:	e70b      	b.n	801f984 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801fb6c:	4602      	mov	r2, r0
 801fb6e:	4604      	mov	r4, r0
 801fb70:	e708      	b.n	801f984 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801fb72:	2200      	movs	r2, #0
 801fb74:	e706      	b.n	801f984 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801fb76:	4632      	mov	r2, r6
 801fb78:	e704      	b.n	801f984 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0801fb7a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801fb7a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fb7e:	b09f      	sub	sp, #124	; 0x7c
 801fb80:	921b      	str	r2, [sp, #108]	; 0x6c
 801fb82:	9309      	str	r3, [sp, #36]	; 0x24
 801fb84:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801fb86:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 801fb8a:	931c      	str	r3, [sp, #112]	; 0x70
 801fb8c:	9119      	str	r1, [sp, #100]	; 0x64
 801fb8e:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801fb92:	901d      	str	r0, [sp, #116]	; 0x74
 801fb94:	6850      	ldr	r0, [r2, #4]
 801fb96:	6812      	ldr	r2, [r2, #0]
 801fb98:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 801fb9a:	fb00 1303 	mla	r3, r0, r3, r1
 801fb9e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801fba2:	930c      	str	r3, [sp, #48]	; 0x30
 801fba4:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801fba6:	681b      	ldr	r3, [r3, #0]
 801fba8:	9312      	str	r3, [sp, #72]	; 0x48
 801fbaa:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801fbac:	685e      	ldr	r6, [r3, #4]
 801fbae:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 801fbb2:	930d      	str	r3, [sp, #52]	; 0x34
 801fbb4:	3604      	adds	r6, #4
 801fbb6:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801fbb8:	2b00      	cmp	r3, #0
 801fbba:	dc03      	bgt.n	801fbc4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801fbbc:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801fbbe:	2b00      	cmp	r3, #0
 801fbc0:	f340 8388 	ble.w	80202d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801fbc4:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801fbc6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801fbca:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801fbce:	1e48      	subs	r0, r1, #1
 801fbd0:	1e57      	subs	r7, r2, #1
 801fbd2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fbd4:	2b00      	cmp	r3, #0
 801fbd6:	f340 8195 	ble.w	801ff04 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801fbda:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801fbdc:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801fbe0:	ea4f 4325 	mov.w	r3, r5, asr #16
 801fbe4:	d406      	bmi.n	801fbf4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801fbe6:	4584      	cmp	ip, r0
 801fbe8:	da04      	bge.n	801fbf4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801fbea:	2b00      	cmp	r3, #0
 801fbec:	db02      	blt.n	801fbf4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801fbee:	42bb      	cmp	r3, r7
 801fbf0:	f2c0 8189 	blt.w	801ff06 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 801fbf4:	f11c 0c01 	adds.w	ip, ip, #1
 801fbf8:	f100 8177 	bmi.w	801feea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801fbfc:	4561      	cmp	r1, ip
 801fbfe:	f2c0 8174 	blt.w	801feea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801fc02:	3301      	adds	r3, #1
 801fc04:	f100 8171 	bmi.w	801feea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801fc08:	429a      	cmp	r2, r3
 801fc0a:	f2c0 816e 	blt.w	801feea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801fc0e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fc10:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801fc12:	931a      	str	r3, [sp, #104]	; 0x68
 801fc14:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801fc16:	2b00      	cmp	r3, #0
 801fc18:	f340 8193 	ble.w	801ff42 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 801fc1c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801fc1e:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801fc22:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801fc24:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 801fc28:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801fc2a:	141b      	asrs	r3, r3, #16
 801fc2c:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801fc30:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801fc34:	f100 81d6 	bmi.w	801ffe4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801fc38:	f100 38ff 	add.w	r8, r0, #4294967295
 801fc3c:	4543      	cmp	r3, r8
 801fc3e:	f280 81d1 	bge.w	801ffe4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801fc42:	f1bc 0f00 	cmp.w	ip, #0
 801fc46:	f2c0 81cd 	blt.w	801ffe4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801fc4a:	f10e 38ff 	add.w	r8, lr, #4294967295
 801fc4e:	45c4      	cmp	ip, r8
 801fc50:	f280 81c8 	bge.w	801ffe4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801fc54:	b200      	sxth	r0, r0
 801fc56:	fb0c 3300 	mla	r3, ip, r0, r3
 801fc5a:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801fc5c:	eb04 0803 	add.w	r8, r4, r3
 801fc60:	5ce3      	ldrb	r3, [r4, r3]
 801fc62:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801fc66:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801fc6a:	2a00      	cmp	r2, #0
 801fc6c:	f000 81af 	beq.w	801ffce <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801fc70:	f898 c001 	ldrb.w	ip, [r8, #1]
 801fc74:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801fc78:	940e      	str	r4, [sp, #56]	; 0x38
 801fc7a:	0e24      	lsrs	r4, r4, #24
 801fc7c:	9415      	str	r4, [sp, #84]	; 0x54
 801fc7e:	b179      	cbz	r1, 801fca0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801fc80:	eb08 0c00 	add.w	ip, r8, r0
 801fc84:	f818 0000 	ldrb.w	r0, [r8, r0]
 801fc88:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801fc8c:	900a      	str	r0, [sp, #40]	; 0x28
 801fc8e:	0e00      	lsrs	r0, r0, #24
 801fc90:	9013      	str	r0, [sp, #76]	; 0x4c
 801fc92:	f89c 0001 	ldrb.w	r0, [ip, #1]
 801fc96:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801fc9a:	900f      	str	r0, [sp, #60]	; 0x3c
 801fc9c:	0e00      	lsrs	r0, r0, #24
 801fc9e:	9016      	str	r0, [sp, #88]	; 0x58
 801fca0:	b292      	uxth	r2, r2
 801fca2:	b289      	uxth	r1, r1
 801fca4:	fb02 f901 	mul.w	r9, r2, r1
 801fca8:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801fcac:	0112      	lsls	r2, r2, #4
 801fcae:	eba2 0809 	sub.w	r8, r2, r9
 801fcb2:	b289      	uxth	r1, r1
 801fcb4:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801fcb8:	9815      	ldr	r0, [sp, #84]	; 0x54
 801fcba:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801fcbc:	fa1f f888 	uxth.w	r8, r8
 801fcc0:	1a52      	subs	r2, r2, r1
 801fcc2:	b292      	uxth	r2, r2
 801fcc4:	fb08 f000 	mul.w	r0, r8, r0
 801fcc8:	fb02 000e 	mla	r0, r2, lr, r0
 801fccc:	fb01 0004 	mla	r0, r1, r4, r0
 801fcd0:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801fcd2:	fb09 0004 	mla	r0, r9, r4, r0
 801fcd6:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801fcda:	2800      	cmp	r0, #0
 801fcdc:	f000 80fa 	beq.w	801fed4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801fce0:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801fce4:	d01b      	beq.n	801fd1e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801fce6:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801fcea:	fb0e fa0a 	mul.w	sl, lr, sl
 801fcee:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801fcf2:	fb0e fe03 	mul.w	lr, lr, r3
 801fcf6:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801fcfa:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801fcfe:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801fd02:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801fd06:	4453      	add	r3, sl
 801fd08:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801fd0c:	0a1b      	lsrs	r3, r3, #8
 801fd0e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fd12:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801fd16:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801fd1a:	ea43 030c 	orr.w	r3, r3, ip
 801fd1e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801fd20:	2cff      	cmp	r4, #255	; 0xff
 801fd22:	d021      	beq.n	801fd68 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801fd24:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801fd26:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801fd2a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801fd2c:	fb04 fb0b 	mul.w	fp, r4, fp
 801fd30:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801fd32:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801fd36:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801fd38:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801fd3c:	fb04 fa0a 	mul.w	sl, r4, sl
 801fd40:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801fd44:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801fd48:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801fd4c:	44de      	add	lr, fp
 801fd4e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801fd52:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801fd56:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801fd5a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801fd5e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801fd62:	ea4e 040a 	orr.w	r4, lr, sl
 801fd66:	940e      	str	r4, [sp, #56]	; 0x38
 801fd68:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801fd6a:	2cff      	cmp	r4, #255	; 0xff
 801fd6c:	d021      	beq.n	801fdb2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 801fd6e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801fd70:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801fd74:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801fd76:	fb04 fb0b 	mul.w	fp, r4, fp
 801fd7a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801fd7c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801fd80:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801fd82:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801fd86:	fb04 fa0a 	mul.w	sl, r4, sl
 801fd8a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801fd8e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801fd92:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801fd96:	44de      	add	lr, fp
 801fd98:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801fd9c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801fda0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801fda4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801fda8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801fdac:	ea4e 040a 	orr.w	r4, lr, sl
 801fdb0:	940a      	str	r4, [sp, #40]	; 0x28
 801fdb2:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801fdb4:	2cff      	cmp	r4, #255	; 0xff
 801fdb6:	d021      	beq.n	801fdfc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801fdb8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801fdba:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801fdbe:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801fdc0:	fb04 fb0b 	mul.w	fp, r4, fp
 801fdc4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801fdc6:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801fdca:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801fdcc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801fdd0:	fb04 fa0a 	mul.w	sl, r4, sl
 801fdd4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801fdd8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801fddc:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801fde0:	44de      	add	lr, fp
 801fde2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801fde6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801fdea:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801fdee:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801fdf2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801fdf6:	ea4e 040a 	orr.w	r4, lr, sl
 801fdfa:	940f      	str	r4, [sp, #60]	; 0x3c
 801fdfc:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801fdfe:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801fe02:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801fe04:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801fe08:	fb08 fc0c 	mul.w	ip, r8, ip
 801fe0c:	fb02 cc0e 	mla	ip, r2, lr, ip
 801fe10:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801fe14:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801fe16:	fb01 cc0e 	mla	ip, r1, lr, ip
 801fe1a:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801fe1e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801fe20:	fb09 cc0e 	mla	ip, r9, lr, ip
 801fe24:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801fe28:	fb08 f80e 	mul.w	r8, r8, lr
 801fe2c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801fe30:	fb02 8303 	mla	r3, r2, r3, r8
 801fe34:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801fe36:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801fe38:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801fe3c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801fe3e:	fb01 330a 	mla	r3, r1, sl, r3
 801fe42:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 801fe46:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801fe48:	fb09 3901 	mla	r9, r9, r1, r3
 801fe4c:	4342      	muls	r2, r0
 801fe4e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fe52:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801fe56:	883b      	ldrh	r3, [r7, #0]
 801fe58:	1c50      	adds	r0, r2, #1
 801fe5a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801fe5e:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801fe62:	ea4c 0c09 	orr.w	ip, ip, r9
 801fe66:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801fe6a:	1219      	asrs	r1, r3, #8
 801fe6c:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801fe70:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801fe74:	b2c0      	uxtb	r0, r0
 801fe76:	fb12 f204 	smulbb	r2, r2, r4
 801fe7a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801fe7e:	fb01 2100 	mla	r1, r1, r0, r2
 801fe82:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801fe86:	10da      	asrs	r2, r3, #3
 801fe88:	fa5f fc8c 	uxtb.w	ip, ip
 801fe8c:	00db      	lsls	r3, r3, #3
 801fe8e:	fb1c fc04 	smulbb	ip, ip, r4
 801fe92:	b2db      	uxtb	r3, r3
 801fe94:	b289      	uxth	r1, r1
 801fe96:	fb03 c300 	mla	r3, r3, r0, ip
 801fe9a:	fa1f fc83 	uxth.w	ip, r3
 801fe9e:	1c4b      	adds	r3, r1, #1
 801fea0:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801fea4:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801fea8:	fb1e fe04 	smulbb	lr, lr, r4
 801feac:	f10c 0301 	add.w	r3, ip, #1
 801feb0:	fb02 e200 	mla	r2, r2, r0, lr
 801feb4:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801feb8:	b292      	uxth	r2, r2
 801feba:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801febe:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801fec2:	430b      	orrs	r3, r1
 801fec4:	1c51      	adds	r1, r2, #1
 801fec6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801feca:	0952      	lsrs	r2, r2, #5
 801fecc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801fed0:	4313      	orrs	r3, r2
 801fed2:	803b      	strh	r3, [r7, #0]
 801fed4:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801fed6:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801fed8:	441a      	add	r2, r3
 801feda:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801fedc:	9229      	str	r2, [sp, #164]	; 0xa4
 801fede:	441d      	add	r5, r3
 801fee0:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801fee2:	3b01      	subs	r3, #1
 801fee4:	3702      	adds	r7, #2
 801fee6:	931a      	str	r3, [sp, #104]	; 0x68
 801fee8:	e694      	b.n	801fc14 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801feea:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801feec:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801feee:	441c      	add	r4, r3
 801fef0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801fef2:	9429      	str	r4, [sp, #164]	; 0xa4
 801fef4:	441d      	add	r5, r3
 801fef6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fef8:	3b01      	subs	r3, #1
 801fefa:	9309      	str	r3, [sp, #36]	; 0x24
 801fefc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801fefe:	3302      	adds	r3, #2
 801ff00:	930c      	str	r3, [sp, #48]	; 0x30
 801ff02:	e666      	b.n	801fbd2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801ff04:	d024      	beq.n	801ff50 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 801ff06:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ff08:	982b      	ldr	r0, [sp, #172]	; 0xac
 801ff0a:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801ff0c:	3b01      	subs	r3, #1
 801ff0e:	fb00 4003 	mla	r0, r0, r3, r4
 801ff12:	1400      	asrs	r0, r0, #16
 801ff14:	f53f ae7b 	bmi.w	801fc0e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ff18:	3901      	subs	r1, #1
 801ff1a:	4288      	cmp	r0, r1
 801ff1c:	f6bf ae77 	bge.w	801fc0e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ff20:	992c      	ldr	r1, [sp, #176]	; 0xb0
 801ff22:	fb01 5303 	mla	r3, r1, r3, r5
 801ff26:	141b      	asrs	r3, r3, #16
 801ff28:	f53f ae71 	bmi.w	801fc0e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ff2c:	3a01      	subs	r2, #1
 801ff2e:	4293      	cmp	r3, r2
 801ff30:	f6bf ae6d 	bge.w	801fc0e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ff34:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801ff38:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 801ff3c:	f1bb 0f00 	cmp.w	fp, #0
 801ff40:	dc70      	bgt.n	8020024 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 801ff42:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ff44:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801ff48:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801ff4a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801ff4e:	930c      	str	r3, [sp, #48]	; 0x30
 801ff50:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801ff52:	2b00      	cmp	r3, #0
 801ff54:	f340 81be 	ble.w	80202d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801ff58:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ff5c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ff60:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ff64:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ff66:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ff6a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ff6e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ff72:	eef0 6a62 	vmov.f32	s13, s5
 801ff76:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ff7a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ff7e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ff82:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 801ff86:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ff8a:	eef0 6a43 	vmov.f32	s13, s6
 801ff8e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ff92:	ee12 2a90 	vmov	r2, s5
 801ff96:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ff9a:	fb92 f3f3 	sdiv	r3, r2, r3
 801ff9e:	ee13 2a10 	vmov	r2, s6
 801ffa2:	932b      	str	r3, [sp, #172]	; 0xac
 801ffa4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ffa6:	fb92 f3f3 	sdiv	r3, r2, r3
 801ffaa:	932c      	str	r3, [sp, #176]	; 0xb0
 801ffac:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801ffae:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 801ffb0:	3b01      	subs	r3, #1
 801ffb2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ffb6:	9319      	str	r3, [sp, #100]	; 0x64
 801ffb8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ffba:	bf08      	it	eq
 801ffbc:	4613      	moveq	r3, r2
 801ffbe:	ee16 5a90 	vmov	r5, s13
 801ffc2:	9309      	str	r3, [sp, #36]	; 0x24
 801ffc4:	eeb0 3a67 	vmov.f32	s6, s15
 801ffc8:	eef0 2a47 	vmov.f32	s5, s14
 801ffcc:	e5f3      	b.n	801fbb6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801ffce:	2900      	cmp	r1, #0
 801ffd0:	f43f ae66 	beq.w	801fca0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801ffd4:	f818 0000 	ldrb.w	r0, [r8, r0]
 801ffd8:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801ffdc:	900a      	str	r0, [sp, #40]	; 0x28
 801ffde:	0e00      	lsrs	r0, r0, #24
 801ffe0:	9013      	str	r0, [sp, #76]	; 0x4c
 801ffe2:	e65d      	b.n	801fca0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801ffe4:	f113 0801 	adds.w	r8, r3, #1
 801ffe8:	f53f af74 	bmi.w	801fed4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801ffec:	4540      	cmp	r0, r8
 801ffee:	f6ff af71 	blt.w	801fed4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801fff2:	f11c 0801 	adds.w	r8, ip, #1
 801fff6:	f53f af6d 	bmi.w	801fed4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801fffa:	45c6      	cmp	lr, r8
 801fffc:	f6ff af6a 	blt.w	801fed4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020000:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8020002:	9302      	str	r3, [sp, #8]
 8020004:	b200      	sxth	r0, r0
 8020006:	fa0f f38e 	sxth.w	r3, lr
 802000a:	e9cd 1405 	strd	r1, r4, [sp, #20]
 802000e:	e9cd c203 	strd	ip, r2, [sp, #12]
 8020012:	9301      	str	r3, [sp, #4]
 8020014:	9000      	str	r0, [sp, #0]
 8020016:	4633      	mov	r3, r6
 8020018:	9a12      	ldr	r2, [sp, #72]	; 0x48
 802001a:	981d      	ldr	r0, [sp, #116]	; 0x74
 802001c:	4639      	mov	r1, r7
 802001e:	f7ff fc62 	bl	801f8e6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 8020022:	e757      	b.n	801fed4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020024:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8020026:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8020028:	f3c3 3203 	ubfx	r2, r3, #12, #4
 802002c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802002e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020032:	1427      	asrs	r7, r4, #16
 8020034:	142b      	asrs	r3, r5, #16
 8020036:	fb01 7303 	mla	r3, r1, r3, r7
 802003a:	9c12      	ldr	r4, [sp, #72]	; 0x48
 802003c:	18e7      	adds	r7, r4, r3
 802003e:	5ce3      	ldrb	r3, [r4, r3]
 8020040:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8020044:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8020048:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 802004c:	2a00      	cmp	r2, #0
 802004e:	f000 8137 	beq.w	80202c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8020052:	f897 e001 	ldrb.w	lr, [r7, #1]
 8020056:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 802005a:	9410      	str	r4, [sp, #64]	; 0x40
 802005c:	0e24      	lsrs	r4, r4, #24
 802005e:	9417      	str	r4, [sp, #92]	; 0x5c
 8020060:	b170      	cbz	r0, 8020080 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8020062:	eb07 0e01 	add.w	lr, r7, r1
 8020066:	5c79      	ldrb	r1, [r7, r1]
 8020068:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802006c:	910b      	str	r1, [sp, #44]	; 0x2c
 802006e:	0e09      	lsrs	r1, r1, #24
 8020070:	9114      	str	r1, [sp, #80]	; 0x50
 8020072:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8020076:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802007a:	9111      	str	r1, [sp, #68]	; 0x44
 802007c:	0e09      	lsrs	r1, r1, #24
 802007e:	9118      	str	r1, [sp, #96]	; 0x60
 8020080:	b292      	uxth	r2, r2
 8020082:	b280      	uxth	r0, r0
 8020084:	fb02 f800 	mul.w	r8, r2, r0
 8020088:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 802008c:	0112      	lsls	r2, r2, #4
 802008e:	eba2 0e08 	sub.w	lr, r2, r8
 8020092:	b280      	uxth	r0, r0
 8020094:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8020098:	9917      	ldr	r1, [sp, #92]	; 0x5c
 802009a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 802009c:	fa1f fe8e 	uxth.w	lr, lr
 80200a0:	1a12      	subs	r2, r2, r0
 80200a2:	b292      	uxth	r2, r2
 80200a4:	fb0e f101 	mul.w	r1, lr, r1
 80200a8:	fb02 110c 	mla	r1, r2, ip, r1
 80200ac:	fb00 1104 	mla	r1, r0, r4, r1
 80200b0:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80200b2:	fb08 1104 	mla	r1, r8, r4, r1
 80200b6:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80200ba:	2900      	cmp	r1, #0
 80200bc:	f000 80f5 	beq.w	80202aa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 80200c0:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80200c4:	d019      	beq.n	80200fa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 80200c6:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80200ca:	fb0c fa0a 	mul.w	sl, ip, sl
 80200ce:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80200d2:	fb0c fc03 	mul.w	ip, ip, r3
 80200d6:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80200da:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80200de:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80200e2:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80200e6:	4453      	add	r3, sl
 80200e8:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80200ec:	0a1b      	lsrs	r3, r3, #8
 80200ee:	0a3f      	lsrs	r7, r7, #8
 80200f0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80200f4:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80200f8:	433b      	orrs	r3, r7
 80200fa:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80200fc:	2cff      	cmp	r4, #255	; 0xff
 80200fe:	d020      	beq.n	8020142 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 8020100:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020102:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8020106:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8020108:	4367      	muls	r7, r4
 802010a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 802010c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020110:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8020112:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020116:	fb04 fa0a 	mul.w	sl, r4, sl
 802011a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802011e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020122:	44bc      	add	ip, r7
 8020124:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8020128:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802012c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020130:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020134:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020138:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802013c:	ea4c 040a 	orr.w	r4, ip, sl
 8020140:	9410      	str	r4, [sp, #64]	; 0x40
 8020142:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020144:	2cff      	cmp	r4, #255	; 0xff
 8020146:	d020      	beq.n	802018a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 8020148:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802014a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802014e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020150:	4367      	muls	r7, r4
 8020152:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020154:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020158:	9c14      	ldr	r4, [sp, #80]	; 0x50
 802015a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802015e:	fb04 fa0a 	mul.w	sl, r4, sl
 8020162:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8020166:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802016a:	44bc      	add	ip, r7
 802016c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8020170:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020174:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020178:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802017c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020180:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020184:	ea4c 040a 	orr.w	r4, ip, sl
 8020188:	940b      	str	r4, [sp, #44]	; 0x2c
 802018a:	9c18      	ldr	r4, [sp, #96]	; 0x60
 802018c:	2cff      	cmp	r4, #255	; 0xff
 802018e:	d020      	beq.n	80201d2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 8020190:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8020192:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8020196:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8020198:	4367      	muls	r7, r4
 802019a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 802019c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80201a0:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80201a2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80201a6:	fb04 fa0a 	mul.w	sl, r4, sl
 80201aa:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80201ae:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80201b2:	44bc      	add	ip, r7
 80201b4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80201b8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80201bc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80201c0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80201c4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80201c8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80201cc:	ea4c 040a 	orr.w	r4, ip, sl
 80201d0:	9411      	str	r4, [sp, #68]	; 0x44
 80201d2:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80201d4:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80201d8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80201da:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80201de:	fb0e f707 	mul.w	r7, lr, r7
 80201e2:	fb02 770c 	mla	r7, r2, ip, r7
 80201e6:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80201ea:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80201ec:	fb00 770c 	mla	r7, r0, ip, r7
 80201f0:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80201f4:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80201f6:	fb08 770c 	mla	r7, r8, ip, r7
 80201fa:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 80201fe:	fb0e fe0c 	mul.w	lr, lr, ip
 8020202:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020206:	fb02 e303 	mla	r3, r2, r3, lr
 802020a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802020c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802020e:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8020212:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8020214:	fb00 330a 	mla	r3, r0, sl, r3
 8020218:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 802021c:	fb08 3c0c 	mla	ip, r8, ip, r3
 8020220:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8020222:	f8b9 0000 	ldrh.w	r0, [r9]
 8020226:	434b      	muls	r3, r1
 8020228:	0a3f      	lsrs	r7, r7, #8
 802022a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802022e:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8020232:	1c59      	adds	r1, r3, #1
 8020234:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8020238:	ea47 070c 	orr.w	r7, r7, ip
 802023c:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8020240:	1202      	asrs	r2, r0, #8
 8020242:	0c3b      	lsrs	r3, r7, #16
 8020244:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8020248:	b2c9      	uxtb	r1, r1
 802024a:	fb13 f304 	smulbb	r3, r3, r4
 802024e:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8020252:	fb02 3201 	mla	r2, r2, r1, r3
 8020256:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 802025a:	10c3      	asrs	r3, r0, #3
 802025c:	b2ff      	uxtb	r7, r7
 802025e:	00c0      	lsls	r0, r0, #3
 8020260:	b292      	uxth	r2, r2
 8020262:	fb1c fc04 	smulbb	ip, ip, r4
 8020266:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 802026a:	b2c0      	uxtb	r0, r0
 802026c:	fb17 f704 	smulbb	r7, r7, r4
 8020270:	fb03 c301 	mla	r3, r3, r1, ip
 8020274:	fb00 7001 	mla	r0, r0, r1, r7
 8020278:	f102 0c01 	add.w	ip, r2, #1
 802027c:	b280      	uxth	r0, r0
 802027e:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8020282:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 8020286:	1c42      	adds	r2, r0, #1
 8020288:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 802028c:	b29b      	uxth	r3, r3
 802028e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8020292:	ea42 020c 	orr.w	r2, r2, ip
 8020296:	f103 0c01 	add.w	ip, r3, #1
 802029a:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 802029e:	095b      	lsrs	r3, r3, #5
 80202a0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80202a4:	431a      	orrs	r2, r3
 80202a6:	f8a9 2000 	strh.w	r2, [r9]
 80202aa:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80202ac:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80202ae:	441a      	add	r2, r3
 80202b0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80202b2:	9229      	str	r2, [sp, #164]	; 0xa4
 80202b4:	f109 0902 	add.w	r9, r9, #2
 80202b8:	441d      	add	r5, r3
 80202ba:	f10b 3bff 	add.w	fp, fp, #4294967295
 80202be:	e63d      	b.n	801ff3c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 80202c0:	2800      	cmp	r0, #0
 80202c2:	f43f aedd 	beq.w	8020080 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 80202c6:	5c79      	ldrb	r1, [r7, r1]
 80202c8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80202cc:	910b      	str	r1, [sp, #44]	; 0x2c
 80202ce:	0e09      	lsrs	r1, r1, #24
 80202d0:	9114      	str	r1, [sp, #80]	; 0x50
 80202d2:	e6d5      	b.n	8020080 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 80202d4:	b01f      	add	sp, #124	; 0x7c
 80202d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080202da <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 80202da:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80202de:	b089      	sub	sp, #36	; 0x24
 80202e0:	9101      	str	r1, [sp, #4]
 80202e2:	9801      	ldr	r0, [sp, #4]
 80202e4:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 80202e8:	8800      	ldrh	r0, [r0, #0]
 80202ea:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 80202ee:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 80202f2:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 80202f6:	1206      	asrs	r6, r0, #8
 80202f8:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 80202fc:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8020300:	9602      	str	r6, [sp, #8]
 8020302:	10c6      	asrs	r6, r0, #3
 8020304:	00c0      	lsls	r0, r0, #3
 8020306:	b2c0      	uxtb	r0, r0
 8020308:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 802030c:	9004      	str	r0, [sp, #16]
 802030e:	2f00      	cmp	r7, #0
 8020310:	fb07 100c 	mla	r0, r7, ip, r1
 8020314:	9603      	str	r6, [sp, #12]
 8020316:	eb02 0e00 	add.w	lr, r2, r0
 802031a:	f2c0 810a 	blt.w	8020532 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 802031e:	45b8      	cmp	r8, r7
 8020320:	f340 8107 	ble.w	8020532 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8020324:	2900      	cmp	r1, #0
 8020326:	f2c0 8102 	blt.w	802052e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 802032a:	458c      	cmp	ip, r1
 802032c:	f340 80ff 	ble.w	802052e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8020330:	5c12      	ldrb	r2, [r2, r0]
 8020332:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8020336:	1c4a      	adds	r2, r1, #1
 8020338:	f100 80fe 	bmi.w	8020538 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 802033c:	4594      	cmp	ip, r2
 802033e:	f340 80fb 	ble.w	8020538 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8020342:	2d00      	cmp	r5, #0
 8020344:	f000 80fa 	beq.w	802053c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 8020348:	f89e 2001 	ldrb.w	r2, [lr, #1]
 802034c:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8020350:	3701      	adds	r7, #1
 8020352:	f100 80f7 	bmi.w	8020544 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8020356:	45b8      	cmp	r8, r7
 8020358:	f340 80f4 	ble.w	8020544 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 802035c:	2c00      	cmp	r4, #0
 802035e:	f000 80f4 	beq.w	802054a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 8020362:	2900      	cmp	r1, #0
 8020364:	eb0e 020c 	add.w	r2, lr, ip
 8020368:	f2c0 80ea 	blt.w	8020540 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 802036c:	458c      	cmp	ip, r1
 802036e:	f340 80e7 	ble.w	8020540 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8020372:	f81e 700c 	ldrb.w	r7, [lr, ip]
 8020376:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 802037a:	3101      	adds	r1, #1
 802037c:	f100 80e8 	bmi.w	8020550 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8020380:	458c      	cmp	ip, r1
 8020382:	f340 80e5 	ble.w	8020550 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8020386:	2d00      	cmp	r5, #0
 8020388:	f000 80e4 	beq.w	8020554 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 802038c:	7852      	ldrb	r2, [r2, #1]
 802038e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8020392:	0e0b      	lsrs	r3, r1, #24
 8020394:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 8020398:	9300      	str	r3, [sp, #0]
 802039a:	b2a4      	uxth	r4, r4
 802039c:	b2ab      	uxth	r3, r5
 802039e:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 80203a2:	fb03 f904 	mul.w	r9, r3, r4
 80203a6:	fb0a f505 	mul.w	r5, sl, r5
 80203aa:	011b      	lsls	r3, r3, #4
 80203ac:	eba3 0e09 	sub.w	lr, r3, r9
 80203b0:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 80203b4:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 80203b8:	0a28      	lsrs	r0, r5, #8
 80203ba:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 80203be:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 80203c2:	4405      	add	r5, r0
 80203c4:	0a2d      	lsrs	r5, r5, #8
 80203c6:	fb0a f303 	mul.w	r3, sl, r3
 80203ca:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 80203ce:	9005      	str	r0, [sp, #20]
 80203d0:	f503 7080 	add.w	r0, r3, #256	; 0x100
 80203d4:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 80203d8:	0a1b      	lsrs	r3, r3, #8
 80203da:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 80203de:	9306      	str	r3, [sp, #24]
 80203e0:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 80203e4:	fb0b f303 	mul.w	r3, fp, r3
 80203e8:	0a1d      	lsrs	r5, r3, #8
 80203ea:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80203ee:	ea4f 6817 	mov.w	r8, r7, lsr #24
 80203f2:	fb0b f606 	mul.w	r6, fp, r6
 80203f6:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 80203fa:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 80203fe:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8020402:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8020406:	fb08 f707 	mul.w	r7, r8, r7
 802040a:	441d      	add	r5, r3
 802040c:	f506 7380 	add.w	r3, r6, #256	; 0x100
 8020410:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8020414:	f507 7380 	add.w	r3, r7, #256	; 0x100
 8020418:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 802041c:	fb08 fc0c 	mul.w	ip, r8, ip
 8020420:	0a1b      	lsrs	r3, r3, #8
 8020422:	9307      	str	r3, [sp, #28]
 8020424:	ea4f 201c 	mov.w	r0, ip, lsr #8
 8020428:	0e0b      	lsrs	r3, r1, #24
 802042a:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 802042e:	435f      	muls	r7, r3
 8020430:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8020434:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8020438:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 802043c:	4460      	add	r0, ip
 802043e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020442:	b2a4      	uxth	r4, r4
 8020444:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8020448:	0a2d      	lsrs	r5, r5, #8
 802044a:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 802044e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020452:	fa1f fe8e 	uxth.w	lr, lr
 8020456:	4359      	muls	r1, r3
 8020458:	1b12      	subs	r2, r2, r4
 802045a:	9b05      	ldr	r3, [sp, #20]
 802045c:	44bc      	add	ip, r7
 802045e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8020462:	b292      	uxth	r2, r2
 8020464:	fb05 f50e 	mul.w	r5, r5, lr
 8020468:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802046c:	fb03 5502 	mla	r5, r3, r2, r5
 8020470:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020474:	9b06      	ldr	r3, [sp, #24]
 8020476:	f501 7780 	add.w	r7, r1, #256	; 0x100
 802047a:	0a36      	lsrs	r6, r6, #8
 802047c:	0a00      	lsrs	r0, r0, #8
 802047e:	fb0c 5509 	mla	r5, ip, r9, r5
 8020482:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8020486:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 802048a:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 802048e:	fb00 5504 	mla	r5, r0, r4, r5
 8020492:	fb0e f606 	mul.w	r6, lr, r6
 8020496:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 802049a:	0a09      	lsrs	r1, r1, #8
 802049c:	9b07      	ldr	r3, [sp, #28]
 802049e:	fb02 6000 	mla	r0, r2, r0, r6
 80204a2:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80204a6:	fb09 0001 	mla	r0, r9, r1, r0
 80204aa:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80204ae:	fb0e fe0b 	mul.w	lr, lr, fp
 80204b2:	fb04 0003 	mla	r0, r4, r3, r0
 80204b6:	fb02 e20a 	mla	r2, r2, sl, lr
 80204ba:	9b00      	ldr	r3, [sp, #0]
 80204bc:	fb04 2408 	mla	r4, r4, r8, r2
 80204c0:	fb09 4903 	mla	r9, r9, r3, r4
 80204c4:	ea6f 2929 	mvn.w	r9, r9, asr #8
 80204c8:	9b02      	ldr	r3, [sp, #8]
 80204ca:	9a04      	ldr	r2, [sp, #16]
 80204cc:	fa5f f989 	uxtb.w	r9, r9
 80204d0:	fb03 f109 	mul.w	r1, r3, r9
 80204d4:	9b03      	ldr	r3, [sp, #12]
 80204d6:	0a2d      	lsrs	r5, r5, #8
 80204d8:	0a00      	lsrs	r0, r0, #8
 80204da:	fb03 f309 	mul.w	r3, r3, r9
 80204de:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80204e2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80204e6:	4305      	orrs	r5, r0
 80204e8:	fb02 f909 	mul.w	r9, r2, r9
 80204ec:	1c58      	adds	r0, r3, #1
 80204ee:	1c4a      	adds	r2, r1, #1
 80204f0:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80204f4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80204f8:	0a2b      	lsrs	r3, r5, #8
 80204fa:	0c2a      	lsrs	r2, r5, #16
 80204fc:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8020500:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8020504:	00db      	lsls	r3, r3, #3
 8020506:	0212      	lsls	r2, r2, #8
 8020508:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 802050c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020510:	4313      	orrs	r3, r2
 8020512:	f109 0201 	add.w	r2, r9, #1
 8020516:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 802051a:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 802051e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8020522:	431d      	orrs	r5, r3
 8020524:	9b01      	ldr	r3, [sp, #4]
 8020526:	801d      	strh	r5, [r3, #0]
 8020528:	b009      	add	sp, #36	; 0x24
 802052a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802052e:	2000      	movs	r0, #0
 8020530:	e701      	b.n	8020336 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 8020532:	2600      	movs	r6, #0
 8020534:	4630      	mov	r0, r6
 8020536:	e70b      	b.n	8020350 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8020538:	2600      	movs	r6, #0
 802053a:	e709      	b.n	8020350 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 802053c:	462e      	mov	r6, r5
 802053e:	e707      	b.n	8020350 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8020540:	2700      	movs	r7, #0
 8020542:	e71a      	b.n	802037a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 8020544:	2100      	movs	r1, #0
 8020546:	460f      	mov	r7, r1
 8020548:	e723      	b.n	8020392 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 802054a:	4621      	mov	r1, r4
 802054c:	4627      	mov	r7, r4
 802054e:	e720      	b.n	8020392 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8020550:	2100      	movs	r1, #0
 8020552:	e71e      	b.n	8020392 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8020554:	4629      	mov	r1, r5
 8020556:	e71c      	b.n	8020392 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

08020558 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020558:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802055c:	b09b      	sub	sp, #108	; 0x6c
 802055e:	9218      	str	r2, [sp, #96]	; 0x60
 8020560:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8020562:	9116      	str	r1, [sp, #88]	; 0x58
 8020564:	9307      	str	r3, [sp, #28]
 8020566:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 802056a:	9019      	str	r0, [sp, #100]	; 0x64
 802056c:	6850      	ldr	r0, [r2, #4]
 802056e:	6812      	ldr	r2, [r2, #0]
 8020570:	9d26      	ldr	r5, [sp, #152]	; 0x98
 8020572:	fb00 1303 	mla	r3, r0, r3, r1
 8020576:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802057a:	930a      	str	r3, [sp, #40]	; 0x28
 802057c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802057e:	681b      	ldr	r3, [r3, #0]
 8020580:	930f      	str	r3, [sp, #60]	; 0x3c
 8020582:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020584:	685e      	ldr	r6, [r3, #4]
 8020586:	3604      	adds	r6, #4
 8020588:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802058a:	2b00      	cmp	r3, #0
 802058c:	dc03      	bgt.n	8020596 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 802058e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8020590:	2b00      	cmp	r3, #0
 8020592:	f340 8373 	ble.w	8020c7c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8020596:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020598:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802059c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80205a0:	1e48      	subs	r0, r1, #1
 80205a2:	1e57      	subs	r7, r2, #1
 80205a4:	9b07      	ldr	r3, [sp, #28]
 80205a6:	2b00      	cmp	r3, #0
 80205a8:	f340 8190 	ble.w	80208cc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 80205ac:	9c25      	ldr	r4, [sp, #148]	; 0x94
 80205ae:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80205b2:	ea4f 4325 	mov.w	r3, r5, asr #16
 80205b6:	d406      	bmi.n	80205c6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80205b8:	4584      	cmp	ip, r0
 80205ba:	da04      	bge.n	80205c6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80205bc:	2b00      	cmp	r3, #0
 80205be:	db02      	blt.n	80205c6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80205c0:	42bb      	cmp	r3, r7
 80205c2:	f2c0 8184 	blt.w	80208ce <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 80205c6:	f11c 0c01 	adds.w	ip, ip, #1
 80205ca:	f100 8172 	bmi.w	80208b2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80205ce:	4561      	cmp	r1, ip
 80205d0:	f2c0 816f 	blt.w	80208b2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80205d4:	3301      	adds	r3, #1
 80205d6:	f100 816c 	bmi.w	80208b2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80205da:	429a      	cmp	r2, r3
 80205dc:	f2c0 8169 	blt.w	80208b2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80205e0:	9b07      	ldr	r3, [sp, #28]
 80205e2:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80205e4:	9317      	str	r3, [sp, #92]	; 0x5c
 80205e6:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80205e8:	2b00      	cmp	r3, #0
 80205ea:	f340 818e 	ble.w	802090a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 80205ee:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80205f0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80205f4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80205f6:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 80205fa:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80205fc:	141b      	asrs	r3, r3, #16
 80205fe:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8020602:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8020606:	f100 81d1 	bmi.w	80209ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 802060a:	f101 38ff 	add.w	r8, r1, #4294967295
 802060e:	4543      	cmp	r3, r8
 8020610:	f280 81cc 	bge.w	80209ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8020614:	f1bc 0f00 	cmp.w	ip, #0
 8020618:	f2c0 81c8 	blt.w	80209ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 802061c:	f10e 38ff 	add.w	r8, lr, #4294967295
 8020620:	45c4      	cmp	ip, r8
 8020622:	f280 81c3 	bge.w	80209ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8020626:	b209      	sxth	r1, r1
 8020628:	fb0c 3301 	mla	r3, ip, r1, r3
 802062c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 802062e:	eb04 0803 	add.w	r8, r4, r3
 8020632:	5ce3      	ldrb	r3, [r4, r3]
 8020634:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8020638:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 802063c:	2a00      	cmp	r2, #0
 802063e:	f000 81aa 	beq.w	8020996 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 8020642:	f898 c001 	ldrb.w	ip, [r8, #1]
 8020646:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 802064a:	940b      	str	r4, [sp, #44]	; 0x2c
 802064c:	0e24      	lsrs	r4, r4, #24
 802064e:	9412      	str	r4, [sp, #72]	; 0x48
 8020650:	b178      	cbz	r0, 8020672 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8020652:	eb08 0c01 	add.w	ip, r8, r1
 8020656:	f818 1001 	ldrb.w	r1, [r8, r1]
 802065a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802065e:	9108      	str	r1, [sp, #32]
 8020660:	0e09      	lsrs	r1, r1, #24
 8020662:	9110      	str	r1, [sp, #64]	; 0x40
 8020664:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8020668:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802066c:	910c      	str	r1, [sp, #48]	; 0x30
 802066e:	0e09      	lsrs	r1, r1, #24
 8020670:	9113      	str	r1, [sp, #76]	; 0x4c
 8020672:	b292      	uxth	r2, r2
 8020674:	b280      	uxth	r0, r0
 8020676:	fb02 f900 	mul.w	r9, r2, r0
 802067a:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 802067e:	0112      	lsls	r2, r2, #4
 8020680:	eba2 0809 	sub.w	r8, r2, r9
 8020684:	b280      	uxth	r0, r0
 8020686:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 802068a:	9912      	ldr	r1, [sp, #72]	; 0x48
 802068c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 802068e:	fa1f f888 	uxth.w	r8, r8
 8020692:	1a12      	subs	r2, r2, r0
 8020694:	b292      	uxth	r2, r2
 8020696:	fb08 f101 	mul.w	r1, r8, r1
 802069a:	fb02 110e 	mla	r1, r2, lr, r1
 802069e:	fb00 1104 	mla	r1, r0, r4, r1
 80206a2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80206a4:	fb09 1104 	mla	r1, r9, r4, r1
 80206a8:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80206ac:	2900      	cmp	r1, #0
 80206ae:	f000 80f5 	beq.w	802089c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 80206b2:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80206b6:	d01b      	beq.n	80206f0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80206b8:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80206bc:	fb0e fa0a 	mul.w	sl, lr, sl
 80206c0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80206c4:	fb0e fe03 	mul.w	lr, lr, r3
 80206c8:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80206cc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80206d0:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80206d4:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 80206d8:	4453      	add	r3, sl
 80206da:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80206de:	0a1b      	lsrs	r3, r3, #8
 80206e0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80206e4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80206e8:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80206ec:	ea43 030c 	orr.w	r3, r3, ip
 80206f0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80206f2:	2cff      	cmp	r4, #255	; 0xff
 80206f4:	d021      	beq.n	802073a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 80206f6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80206f8:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80206fc:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80206fe:	fb04 fb0b 	mul.w	fp, r4, fp
 8020702:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020704:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020708:	9c12      	ldr	r4, [sp, #72]	; 0x48
 802070a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802070e:	fb04 fa0a 	mul.w	sl, r4, sl
 8020712:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020716:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802071a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802071e:	44de      	add	lr, fp
 8020720:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020724:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020728:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802072c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020730:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020734:	ea4e 040a 	orr.w	r4, lr, sl
 8020738:	940b      	str	r4, [sp, #44]	; 0x2c
 802073a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 802073c:	2cff      	cmp	r4, #255	; 0xff
 802073e:	d021      	beq.n	8020784 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 8020740:	9c08      	ldr	r4, [sp, #32]
 8020742:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8020746:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020748:	fb04 fb0b 	mul.w	fp, r4, fp
 802074c:	9c08      	ldr	r4, [sp, #32]
 802074e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020752:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020754:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020758:	fb04 fa0a 	mul.w	sl, r4, sl
 802075c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020760:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020764:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020768:	44de      	add	lr, fp
 802076a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802076e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020772:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020776:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802077a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802077e:	ea4e 040a 	orr.w	r4, lr, sl
 8020782:	9408      	str	r4, [sp, #32]
 8020784:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020786:	2cff      	cmp	r4, #255	; 0xff
 8020788:	d021      	beq.n	80207ce <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 802078a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 802078c:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8020790:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020792:	fb04 fb0b 	mul.w	fp, r4, fp
 8020796:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8020798:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802079c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 802079e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80207a2:	fb04 fa0a 	mul.w	sl, r4, sl
 80207a6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80207aa:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80207ae:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80207b2:	44de      	add	lr, fp
 80207b4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80207b8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80207bc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80207c0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80207c4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80207c8:	ea4e 040a 	orr.w	r4, lr, sl
 80207cc:	940c      	str	r4, [sp, #48]	; 0x30
 80207ce:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80207d0:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80207d4:	9c08      	ldr	r4, [sp, #32]
 80207d6:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 80207da:	fb08 fc0c 	mul.w	ip, r8, ip
 80207de:	fb02 cc0e 	mla	ip, r2, lr, ip
 80207e2:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80207e6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80207e8:	fb00 cc0e 	mla	ip, r0, lr, ip
 80207ec:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80207f0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80207f2:	fb09 cc0e 	mla	ip, r9, lr, ip
 80207f6:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 80207fa:	fb08 f80e 	mul.w	r8, r8, lr
 80207fe:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020802:	fb02 8303 	mla	r3, r2, r3, r8
 8020806:	9a08      	ldr	r2, [sp, #32]
 8020808:	f8b7 8000 	ldrh.w	r8, [r7]
 802080c:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8020810:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8020812:	fb00 330a 	mla	r3, r0, sl, r3
 8020816:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 802081a:	fb09 3900 	mla	r9, r9, r0, r3
 802081e:	43c9      	mvns	r1, r1
 8020820:	ea4f 2228 	mov.w	r2, r8, asr #8
 8020824:	fa5f fe81 	uxtb.w	lr, r1
 8020828:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802082c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8020830:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8020834:	fb02 f20e 	mul.w	r2, r2, lr
 8020838:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802083c:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8020840:	ea4c 0c09 	orr.w	ip, ip, r9
 8020844:	1c53      	adds	r3, r2, #1
 8020846:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 802084a:	ea4f 00e8 	mov.w	r0, r8, asr #3
 802084e:	ea4f 431c 	mov.w	r3, ip, lsr #16
 8020852:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020856:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802085a:	4a63      	ldr	r2, [pc, #396]	; (80209e8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 802085c:	fb00 f00e 	mul.w	r0, r0, lr
 8020860:	b2db      	uxtb	r3, r3
 8020862:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 8020866:	1c43      	adds	r3, r0, #1
 8020868:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802086c:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8020870:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8020874:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8020878:	b2c9      	uxtb	r1, r1
 802087a:	00db      	lsls	r3, r3, #3
 802087c:	fb01 f10e 	mul.w	r1, r1, lr
 8020880:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020884:	4313      	orrs	r3, r2
 8020886:	1c4a      	adds	r2, r1, #1
 8020888:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 802088c:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8020890:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8020894:	ea4c 0c03 	orr.w	ip, ip, r3
 8020898:	f8a7 c000 	strh.w	ip, [r7]
 802089c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 802089e:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80208a0:	441a      	add	r2, r3
 80208a2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80208a4:	9225      	str	r2, [sp, #148]	; 0x94
 80208a6:	441d      	add	r5, r3
 80208a8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80208aa:	3b01      	subs	r3, #1
 80208ac:	3702      	adds	r7, #2
 80208ae:	9317      	str	r3, [sp, #92]	; 0x5c
 80208b0:	e699      	b.n	80205e6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80208b2:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80208b4:	9c25      	ldr	r4, [sp, #148]	; 0x94
 80208b6:	441c      	add	r4, r3
 80208b8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80208ba:	9425      	str	r4, [sp, #148]	; 0x94
 80208bc:	441d      	add	r5, r3
 80208be:	9b07      	ldr	r3, [sp, #28]
 80208c0:	3b01      	subs	r3, #1
 80208c2:	9307      	str	r3, [sp, #28]
 80208c4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80208c6:	3302      	adds	r3, #2
 80208c8:	930a      	str	r3, [sp, #40]	; 0x28
 80208ca:	e66b      	b.n	80205a4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80208cc:	d024      	beq.n	8020918 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 80208ce:	9b07      	ldr	r3, [sp, #28]
 80208d0:	9827      	ldr	r0, [sp, #156]	; 0x9c
 80208d2:	9c25      	ldr	r4, [sp, #148]	; 0x94
 80208d4:	3b01      	subs	r3, #1
 80208d6:	fb00 4003 	mla	r0, r0, r3, r4
 80208da:	1400      	asrs	r0, r0, #16
 80208dc:	f53f ae80 	bmi.w	80205e0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80208e0:	3901      	subs	r1, #1
 80208e2:	4288      	cmp	r0, r1
 80208e4:	f6bf ae7c 	bge.w	80205e0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80208e8:	9928      	ldr	r1, [sp, #160]	; 0xa0
 80208ea:	fb01 5303 	mla	r3, r1, r3, r5
 80208ee:	141b      	asrs	r3, r3, #16
 80208f0:	f53f ae76 	bmi.w	80205e0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80208f4:	3a01      	subs	r2, #1
 80208f6:	4293      	cmp	r3, r2
 80208f8:	f6bf ae72 	bge.w	80205e0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80208fc:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8020900:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8020904:	f1bb 0f00 	cmp.w	fp, #0
 8020908:	dc70      	bgt.n	80209ec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 802090a:	9b07      	ldr	r3, [sp, #28]
 802090c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8020910:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020912:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8020916:	930a      	str	r3, [sp, #40]	; 0x28
 8020918:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802091a:	2b00      	cmp	r3, #0
 802091c:	f340 81ae 	ble.w	8020c7c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8020920:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020924:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8020928:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802092c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802092e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020932:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020936:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802093a:	eef0 6a62 	vmov.f32	s13, s5
 802093e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020942:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020946:	ee77 2a62 	vsub.f32	s5, s14, s5
 802094a:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 802094e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020952:	eef0 6a43 	vmov.f32	s13, s6
 8020956:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802095a:	ee12 2a90 	vmov	r2, s5
 802095e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020962:	fb92 f3f3 	sdiv	r3, r2, r3
 8020966:	ee13 2a10 	vmov	r2, s6
 802096a:	9327      	str	r3, [sp, #156]	; 0x9c
 802096c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802096e:	fb92 f3f3 	sdiv	r3, r2, r3
 8020972:	9328      	str	r3, [sp, #160]	; 0xa0
 8020974:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8020976:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8020978:	3b01      	subs	r3, #1
 802097a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802097e:	9316      	str	r3, [sp, #88]	; 0x58
 8020980:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020982:	bf08      	it	eq
 8020984:	4613      	moveq	r3, r2
 8020986:	ee16 5a90 	vmov	r5, s13
 802098a:	9307      	str	r3, [sp, #28]
 802098c:	eeb0 3a67 	vmov.f32	s6, s15
 8020990:	eef0 2a47 	vmov.f32	s5, s14
 8020994:	e5f8      	b.n	8020588 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8020996:	2800      	cmp	r0, #0
 8020998:	f43f ae6b 	beq.w	8020672 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 802099c:	f818 1001 	ldrb.w	r1, [r8, r1]
 80209a0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80209a4:	9108      	str	r1, [sp, #32]
 80209a6:	0e09      	lsrs	r1, r1, #24
 80209a8:	9110      	str	r1, [sp, #64]	; 0x40
 80209aa:	e662      	b.n	8020672 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 80209ac:	f113 0801 	adds.w	r8, r3, #1
 80209b0:	f53f af74 	bmi.w	802089c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 80209b4:	4541      	cmp	r1, r8
 80209b6:	f6ff af71 	blt.w	802089c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 80209ba:	f11c 0801 	adds.w	r8, ip, #1
 80209be:	f53f af6d 	bmi.w	802089c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 80209c2:	45c6      	cmp	lr, r8
 80209c4:	f6ff af6a 	blt.w	802089c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 80209c8:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 80209cc:	b209      	sxth	r1, r1
 80209ce:	fa0f f38e 	sxth.w	r3, lr
 80209d2:	e9cd 2004 	strd	r2, r0, [sp, #16]
 80209d6:	9301      	str	r3, [sp, #4]
 80209d8:	9100      	str	r1, [sp, #0]
 80209da:	4633      	mov	r3, r6
 80209dc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80209de:	9819      	ldr	r0, [sp, #100]	; 0x64
 80209e0:	4639      	mov	r1, r7
 80209e2:	f7ff fc7a 	bl	80202da <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 80209e6:	e759      	b.n	802089c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 80209e8:	fffff800 	.word	0xfffff800
 80209ec:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80209ee:	9c25      	ldr	r4, [sp, #148]	; 0x94
 80209f0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80209f4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80209f6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80209fa:	1427      	asrs	r7, r4, #16
 80209fc:	142b      	asrs	r3, r5, #16
 80209fe:	fb01 7303 	mla	r3, r1, r3, r7
 8020a02:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8020a04:	18e7      	adds	r7, r4, r3
 8020a06:	5ce3      	ldrb	r3, [r4, r3]
 8020a08:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8020a0c:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8020a10:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8020a14:	2a00      	cmp	r2, #0
 8020a16:	f000 8127 	beq.w	8020c68 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8020a1a:	f897 e001 	ldrb.w	lr, [r7, #1]
 8020a1e:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8020a22:	940d      	str	r4, [sp, #52]	; 0x34
 8020a24:	0e24      	lsrs	r4, r4, #24
 8020a26:	9414      	str	r4, [sp, #80]	; 0x50
 8020a28:	b170      	cbz	r0, 8020a48 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8020a2a:	eb07 0e01 	add.w	lr, r7, r1
 8020a2e:	5c79      	ldrb	r1, [r7, r1]
 8020a30:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020a34:	9109      	str	r1, [sp, #36]	; 0x24
 8020a36:	0e09      	lsrs	r1, r1, #24
 8020a38:	9111      	str	r1, [sp, #68]	; 0x44
 8020a3a:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8020a3e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020a42:	910e      	str	r1, [sp, #56]	; 0x38
 8020a44:	0e09      	lsrs	r1, r1, #24
 8020a46:	9115      	str	r1, [sp, #84]	; 0x54
 8020a48:	b292      	uxth	r2, r2
 8020a4a:	b280      	uxth	r0, r0
 8020a4c:	fb02 f800 	mul.w	r8, r2, r0
 8020a50:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8020a54:	0112      	lsls	r2, r2, #4
 8020a56:	eba2 0e08 	sub.w	lr, r2, r8
 8020a5a:	b280      	uxth	r0, r0
 8020a5c:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8020a60:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8020a62:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8020a64:	fa1f fe8e 	uxth.w	lr, lr
 8020a68:	1a09      	subs	r1, r1, r0
 8020a6a:	b289      	uxth	r1, r1
 8020a6c:	fb0e f202 	mul.w	r2, lr, r2
 8020a70:	fb01 220c 	mla	r2, r1, ip, r2
 8020a74:	fb00 2204 	mla	r2, r0, r4, r2
 8020a78:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8020a7a:	fb08 2204 	mla	r2, r8, r4, r2
 8020a7e:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8020a82:	2a00      	cmp	r2, #0
 8020a84:	f000 80e5 	beq.w	8020c52 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 8020a88:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8020a8c:	d019      	beq.n	8020ac2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 8020a8e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8020a92:	fb0c fa0a 	mul.w	sl, ip, sl
 8020a96:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020a9a:	fb0c fc03 	mul.w	ip, ip, r3
 8020a9e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8020aa2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020aa6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8020aaa:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8020aae:	4453      	add	r3, sl
 8020ab0:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8020ab4:	0a1b      	lsrs	r3, r3, #8
 8020ab6:	0a3f      	lsrs	r7, r7, #8
 8020ab8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020abc:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8020ac0:	433b      	orrs	r3, r7
 8020ac2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020ac4:	2cff      	cmp	r4, #255	; 0xff
 8020ac6:	d020      	beq.n	8020b0a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 8020ac8:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8020aca:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8020ace:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020ad0:	4367      	muls	r7, r4
 8020ad2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8020ad4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020ad8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020ada:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020ade:	fb04 fa0a 	mul.w	sl, r4, sl
 8020ae2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8020ae6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020aea:	44bc      	add	ip, r7
 8020aec:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8020af0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020af4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020af8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020afc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020b00:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020b04:	ea4c 040a 	orr.w	r4, ip, sl
 8020b08:	940d      	str	r4, [sp, #52]	; 0x34
 8020b0a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8020b0c:	2cff      	cmp	r4, #255	; 0xff
 8020b0e:	d020      	beq.n	8020b52 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 8020b10:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8020b12:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8020b16:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8020b18:	4367      	muls	r7, r4
 8020b1a:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8020b1c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020b20:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8020b22:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020b26:	fb04 fa0a 	mul.w	sl, r4, sl
 8020b2a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8020b2e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020b32:	44bc      	add	ip, r7
 8020b34:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8020b38:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020b3c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020b40:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020b44:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020b48:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020b4c:	ea4c 040a 	orr.w	r4, ip, sl
 8020b50:	9409      	str	r4, [sp, #36]	; 0x24
 8020b52:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8020b54:	2cff      	cmp	r4, #255	; 0xff
 8020b56:	d020      	beq.n	8020b9a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 8020b58:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8020b5a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8020b5e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8020b60:	4367      	muls	r7, r4
 8020b62:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8020b64:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020b68:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8020b6a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020b6e:	fb04 fa0a 	mul.w	sl, r4, sl
 8020b72:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8020b76:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020b7a:	44bc      	add	ip, r7
 8020b7c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8020b80:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020b84:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020b88:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020b8c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020b90:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020b94:	ea4c 040a 	orr.w	r4, ip, sl
 8020b98:	940e      	str	r4, [sp, #56]	; 0x38
 8020b9a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8020b9c:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8020ba0:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8020ba2:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8020ba6:	fb0e f707 	mul.w	r7, lr, r7
 8020baa:	fb01 770c 	mla	r7, r1, ip, r7
 8020bae:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8020bb2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8020bb4:	fb00 770c 	mla	r7, r0, ip, r7
 8020bb8:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8020bbc:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8020bbe:	fb08 770c 	mla	r7, r8, ip, r7
 8020bc2:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8020bc6:	fb0e fe0c 	mul.w	lr, lr, ip
 8020bca:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020bce:	fb01 e303 	mla	r3, r1, r3, lr
 8020bd2:	9909      	ldr	r1, [sp, #36]	; 0x24
 8020bd4:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8020bd8:	990e      	ldr	r1, [sp, #56]	; 0x38
 8020bda:	fb00 330a 	mla	r3, r0, sl, r3
 8020bde:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8020be2:	fb08 3c0c 	mla	ip, r8, ip, r3
 8020be6:	f8b9 3000 	ldrh.w	r3, [r9]
 8020bea:	43d2      	mvns	r2, r2
 8020bec:	1218      	asrs	r0, r3, #8
 8020bee:	b2d2      	uxtb	r2, r2
 8020bf0:	10d9      	asrs	r1, r3, #3
 8020bf2:	0a3f      	lsrs	r7, r7, #8
 8020bf4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020bf8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8020bfc:	00db      	lsls	r3, r3, #3
 8020bfe:	4350      	muls	r0, r2
 8020c00:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8020c04:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8020c08:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8020c0c:	b2db      	uxtb	r3, r3
 8020c0e:	ea47 070c 	orr.w	r7, r7, ip
 8020c12:	4351      	muls	r1, r2
 8020c14:	4353      	muls	r3, r2
 8020c16:	1c42      	adds	r2, r0, #1
 8020c18:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8020c1c:	0c3a      	lsrs	r2, r7, #16
 8020c1e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8020c22:	4a18      	ldr	r2, [pc, #96]	; (8020c84 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 8020c24:	b2c0      	uxtb	r0, r0
 8020c26:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 8020c2a:	1c4a      	adds	r2, r1, #1
 8020c2c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8020c30:	0a3a      	lsrs	r2, r7, #8
 8020c32:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8020c36:	00c9      	lsls	r1, r1, #3
 8020c38:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8020c3c:	4301      	orrs	r1, r0
 8020c3e:	1c58      	adds	r0, r3, #1
 8020c40:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8020c44:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8020c48:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 8020c4c:	4308      	orrs	r0, r1
 8020c4e:	f8a9 0000 	strh.w	r0, [r9]
 8020c52:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8020c54:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8020c56:	441a      	add	r2, r3
 8020c58:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020c5a:	9225      	str	r2, [sp, #148]	; 0x94
 8020c5c:	f109 0902 	add.w	r9, r9, #2
 8020c60:	441d      	add	r5, r3
 8020c62:	f10b 3bff 	add.w	fp, fp, #4294967295
 8020c66:	e64d      	b.n	8020904 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 8020c68:	2800      	cmp	r0, #0
 8020c6a:	f43f aeed 	beq.w	8020a48 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8020c6e:	5c79      	ldrb	r1, [r7, r1]
 8020c70:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020c74:	9109      	str	r1, [sp, #36]	; 0x24
 8020c76:	0e09      	lsrs	r1, r1, #24
 8020c78:	9111      	str	r1, [sp, #68]	; 0x44
 8020c7a:	e6e5      	b.n	8020a48 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8020c7c:	b01b      	add	sp, #108	; 0x6c
 8020c7e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020c82:	bf00      	nop
 8020c84:	fffff800 	.word	0xfffff800

08020c88 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8020c88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020c8c:	b085      	sub	sp, #20
 8020c8e:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8020c92:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8020c96:	9103      	str	r1, [sp, #12]
 8020c98:	fb00 7406 	mla	r4, r0, r6, r7
 8020c9c:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 8020ca0:	2800      	cmp	r0, #0
 8020ca2:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 8020ca6:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 8020caa:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8020cae:	9501      	str	r5, [sp, #4]
 8020cb0:	eb03 0904 	add.w	r9, r3, r4
 8020cb4:	f2c0 8150 	blt.w	8020f58 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8020cb8:	4583      	cmp	fp, r0
 8020cba:	f340 814d 	ble.w	8020f58 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8020cbe:	2f00      	cmp	r7, #0
 8020cc0:	f2c0 8146 	blt.w	8020f50 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8020cc4:	42be      	cmp	r6, r7
 8020cc6:	f340 8143 	ble.w	8020f50 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8020cca:	f813 c004 	ldrb.w	ip, [r3, r4]
 8020cce:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 8020cd2:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8020cd6:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 8020cda:	4355      	muls	r5, r2
 8020cdc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020ce0:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8020ce4:	fb0c f203 	mul.w	r2, ip, r3
 8020ce8:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8020cec:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8020cf0:	441d      	add	r5, r3
 8020cf2:	f102 0320 	add.w	r3, r2, #32
 8020cf6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020cfa:	0a1b      	lsrs	r3, r3, #8
 8020cfc:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8020d00:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020d04:	431c      	orrs	r4, r3
 8020d06:	1c7b      	adds	r3, r7, #1
 8020d08:	f100 812b 	bmi.w	8020f62 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8020d0c:	429e      	cmp	r6, r3
 8020d0e:	f340 8128 	ble.w	8020f62 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8020d12:	2900      	cmp	r1, #0
 8020d14:	f000 8128 	beq.w	8020f68 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 8020d18:	9a01      	ldr	r2, [sp, #4]
 8020d1a:	f899 3001 	ldrb.w	r3, [r9, #1]
 8020d1e:	8855      	ldrh	r5, [r2, #2]
 8020d20:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8020d24:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 8020d28:	fb08 f802 	mul.w	r8, r8, r2
 8020d2c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8020d30:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8020d34:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8020d38:	435d      	muls	r5, r3
 8020d3a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8020d3e:	44d0      	add	r8, sl
 8020d40:	f105 0a20 	add.w	sl, r5, #32
 8020d44:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8020d48:	0a2d      	lsrs	r5, r5, #8
 8020d4a:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8020d4e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8020d52:	432a      	orrs	r2, r5
 8020d54:	3001      	adds	r0, #1
 8020d56:	f100 810d 	bmi.w	8020f74 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8020d5a:	4583      	cmp	fp, r0
 8020d5c:	f340 810a 	ble.w	8020f74 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8020d60:	f1be 0f00 	cmp.w	lr, #0
 8020d64:	f000 810b 	beq.w	8020f7e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 8020d68:	2f00      	cmp	r7, #0
 8020d6a:	f2c0 8100 	blt.w	8020f6e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8020d6e:	42be      	cmp	r6, r7
 8020d70:	f340 80fd 	ble.w	8020f6e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8020d74:	9801      	ldr	r0, [sp, #4]
 8020d76:	f819 5006 	ldrb.w	r5, [r9, r6]
 8020d7a:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8020d7e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8020d82:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8020d86:	fb0a fa00 	mul.w	sl, sl, r0
 8020d8a:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8020d8e:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8020d92:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8020d96:	fb05 f808 	mul.w	r8, r5, r8
 8020d9a:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8020d9e:	4482      	add	sl, r0
 8020da0:	f108 0020 	add.w	r0, r8, #32
 8020da4:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8020da8:	0a00      	lsrs	r0, r0, #8
 8020daa:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8020dae:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8020db2:	ea4b 0b00 	orr.w	fp, fp, r0
 8020db6:	3701      	adds	r7, #1
 8020db8:	f100 80e6 	bmi.w	8020f88 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8020dbc:	42be      	cmp	r6, r7
 8020dbe:	f340 80e3 	ble.w	8020f88 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8020dc2:	2900      	cmp	r1, #0
 8020dc4:	f000 80e3 	beq.w	8020f8e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 8020dc8:	3601      	adds	r6, #1
 8020dca:	9801      	ldr	r0, [sp, #4]
 8020dcc:	f819 7006 	ldrb.w	r7, [r9, r6]
 8020dd0:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8020dd4:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8020dd8:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8020ddc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8020de0:	fb09 f906 	mul.w	r9, r9, r6
 8020de4:	fb07 f800 	mul.w	r8, r7, r0
 8020de8:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8020dec:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8020df0:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8020df4:	44d1      	add	r9, sl
 8020df6:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8020dfa:	f108 0020 	add.w	r0, r8, #32
 8020dfe:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8020e02:	0a00      	lsrs	r0, r0, #8
 8020e04:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8020e08:	4330      	orrs	r0, r6
 8020e0a:	b28e      	uxth	r6, r1
 8020e0c:	fa1f f98e 	uxth.w	r9, lr
 8020e10:	fb06 f809 	mul.w	r8, r6, r9
 8020e14:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8020e18:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8020e1c:	0136      	lsls	r6, r6, #4
 8020e1e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8020e22:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8020e26:	9601      	str	r6, [sp, #4]
 8020e28:	ea4a 0404 	orr.w	r4, sl, r4
 8020e2c:	fa1f f689 	uxth.w	r6, r9
 8020e30:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8020e34:	fb11 f90e 	smulbb	r9, r1, lr
 8020e38:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8020e3c:	9602      	str	r6, [sp, #8]
 8020e3e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8020e42:	4626      	mov	r6, r4
 8020e44:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8020e48:	f1ce 0410 	rsb	r4, lr, #16
 8020e4c:	1a64      	subs	r4, r4, r1
 8020e4e:	ea4a 0202 	orr.w	r2, sl, r2
 8020e52:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8020e56:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8020e5a:	434a      	muls	r2, r1
 8020e5c:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8020e60:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8020e64:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8020e68:	fb04 2406 	mla	r4, r4, r6, r2
 8020e6c:	ea4a 0000 	orr.w	r0, sl, r0
 8020e70:	fb09 4200 	mla	r2, r9, r0, r4
 8020e74:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8020e78:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8020e7c:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8020e80:	ea44 0b0b 	orr.w	fp, r4, fp
 8020e84:	9c01      	ldr	r4, [sp, #4]
 8020e86:	9e02      	ldr	r6, [sp, #8]
 8020e88:	9903      	ldr	r1, [sp, #12]
 8020e8a:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 8020e8e:	1ba4      	subs	r4, r4, r6
 8020e90:	9e01      	ldr	r6, [sp, #4]
 8020e92:	8808      	ldrh	r0, [r1, #0]
 8020e94:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 8020e98:	eba6 0608 	sub.w	r6, r6, r8
 8020e9c:	b2b6      	uxth	r6, r6
 8020e9e:	b2a4      	uxth	r4, r4
 8020ea0:	4373      	muls	r3, r6
 8020ea2:	fb0c 3304 	mla	r3, ip, r4, r3
 8020ea6:	9c02      	ldr	r4, [sp, #8]
 8020ea8:	fb04 3505 	mla	r5, r4, r5, r3
 8020eac:	fb08 5707 	mla	r7, r8, r7, r5
 8020eb0:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8020eb4:	b289      	uxth	r1, r1
 8020eb6:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8020eba:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8020ebe:	434f      	muls	r7, r1
 8020ec0:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8020ec4:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8020ec8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020ecc:	1c7b      	adds	r3, r7, #1
 8020ece:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8020ed2:	ea42 0e0e 	orr.w	lr, r2, lr
 8020ed6:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8020eda:	fa1f f28e 	uxth.w	r2, lr
 8020ede:	1203      	asrs	r3, r0, #8
 8020ee0:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 8020ee4:	b2ff      	uxtb	r7, r7
 8020ee6:	1215      	asrs	r5, r2, #8
 8020ee8:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8020eec:	fb13 f307 	smulbb	r3, r3, r7
 8020ef0:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8020ef4:	fb05 3501 	mla	r5, r5, r1, r3
 8020ef8:	10c3      	asrs	r3, r0, #3
 8020efa:	10d4      	asrs	r4, r2, #3
 8020efc:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8020f00:	fb13 f307 	smulbb	r3, r3, r7
 8020f04:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8020f08:	fb04 3401 	mla	r4, r4, r1, r3
 8020f0c:	00c3      	lsls	r3, r0, #3
 8020f0e:	00d2      	lsls	r2, r2, #3
 8020f10:	b2db      	uxtb	r3, r3
 8020f12:	fb13 f307 	smulbb	r3, r3, r7
 8020f16:	b2d2      	uxtb	r2, r2
 8020f18:	fb02 3101 	mla	r1, r2, r1, r3
 8020f1c:	b2ad      	uxth	r5, r5
 8020f1e:	b289      	uxth	r1, r1
 8020f20:	b2a4      	uxth	r4, r4
 8020f22:	1c6b      	adds	r3, r5, #1
 8020f24:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8020f28:	1c62      	adds	r2, r4, #1
 8020f2a:	1c4b      	adds	r3, r1, #1
 8020f2c:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8020f30:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8020f34:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8020f38:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8020f3c:	0964      	lsrs	r4, r4, #5
 8020f3e:	432b      	orrs	r3, r5
 8020f40:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8020f44:	9a03      	ldr	r2, [sp, #12]
 8020f46:	4323      	orrs	r3, r4
 8020f48:	8013      	strh	r3, [r2, #0]
 8020f4a:	b005      	add	sp, #20
 8020f4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020f50:	f04f 0c00 	mov.w	ip, #0
 8020f54:	4664      	mov	r4, ip
 8020f56:	e6d6      	b.n	8020d06 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 8020f58:	2300      	movs	r3, #0
 8020f5a:	469c      	mov	ip, r3
 8020f5c:	461a      	mov	r2, r3
 8020f5e:	461c      	mov	r4, r3
 8020f60:	e6f8      	b.n	8020d54 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8020f62:	2300      	movs	r3, #0
 8020f64:	461a      	mov	r2, r3
 8020f66:	e6f5      	b.n	8020d54 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8020f68:	460b      	mov	r3, r1
 8020f6a:	460a      	mov	r2, r1
 8020f6c:	e6f2      	b.n	8020d54 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8020f6e:	2500      	movs	r5, #0
 8020f70:	46ab      	mov	fp, r5
 8020f72:	e720      	b.n	8020db6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 8020f74:	2700      	movs	r7, #0
 8020f76:	463d      	mov	r5, r7
 8020f78:	4638      	mov	r0, r7
 8020f7a:	46bb      	mov	fp, r7
 8020f7c:	e745      	b.n	8020e0a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8020f7e:	4677      	mov	r7, lr
 8020f80:	4675      	mov	r5, lr
 8020f82:	4670      	mov	r0, lr
 8020f84:	46f3      	mov	fp, lr
 8020f86:	e740      	b.n	8020e0a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8020f88:	2700      	movs	r7, #0
 8020f8a:	4638      	mov	r0, r7
 8020f8c:	e73d      	b.n	8020e0a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8020f8e:	460f      	mov	r7, r1
 8020f90:	4608      	mov	r0, r1
 8020f92:	e73a      	b.n	8020e0a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

08020f94 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020f94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020f98:	b097      	sub	sp, #92	; 0x5c
 8020f9a:	9214      	str	r2, [sp, #80]	; 0x50
 8020f9c:	9308      	str	r3, [sp, #32]
 8020f9e:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8020fa0:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8020fa4:	9312      	str	r3, [sp, #72]	; 0x48
 8020fa6:	9111      	str	r1, [sp, #68]	; 0x44
 8020fa8:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8020fac:	9015      	str	r0, [sp, #84]	; 0x54
 8020fae:	6850      	ldr	r0, [r2, #4]
 8020fb0:	6812      	ldr	r2, [r2, #0]
 8020fb2:	fb00 1303 	mla	r3, r0, r3, r1
 8020fb6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020fba:	9309      	str	r3, [sp, #36]	; 0x24
 8020fbc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020fbe:	681b      	ldr	r3, [r3, #0]
 8020fc0:	930b      	str	r3, [sp, #44]	; 0x2c
 8020fc2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020fc4:	685b      	ldr	r3, [r3, #4]
 8020fc6:	930c      	str	r3, [sp, #48]	; 0x30
 8020fc8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8020fcc:	930a      	str	r3, [sp, #40]	; 0x28
 8020fce:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8020fd0:	2b00      	cmp	r3, #0
 8020fd2:	dc03      	bgt.n	8020fdc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8020fd4:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8020fd6:	2b00      	cmp	r3, #0
 8020fd8:	f340 83cb 	ble.w	8021772 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8020fdc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020fde:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020fe2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020fe6:	1e48      	subs	r0, r1, #1
 8020fe8:	1e55      	subs	r5, r2, #1
 8020fea:	9b08      	ldr	r3, [sp, #32]
 8020fec:	2b00      	cmp	r3, #0
 8020fee:	f340 81a3 	ble.w	8021338 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 8020ff2:	9e21      	ldr	r6, [sp, #132]	; 0x84
 8020ff4:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8020ff6:	1436      	asrs	r6, r6, #16
 8020ff8:	ea4f 4323 	mov.w	r3, r3, asr #16
 8020ffc:	d406      	bmi.n	802100c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8020ffe:	4286      	cmp	r6, r0
 8021000:	da04      	bge.n	802100c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8021002:	2b00      	cmp	r3, #0
 8021004:	db02      	blt.n	802100c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8021006:	42ab      	cmp	r3, r5
 8021008:	f2c0 8197 	blt.w	802133a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 802100c:	3601      	adds	r6, #1
 802100e:	f100 8184 	bmi.w	802131a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8021012:	42b1      	cmp	r1, r6
 8021014:	f2c0 8181 	blt.w	802131a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8021018:	3301      	adds	r3, #1
 802101a:	f100 817e 	bmi.w	802131a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 802101e:	429a      	cmp	r2, r3
 8021020:	f2c0 817b 	blt.w	802131a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8021024:	9b08      	ldr	r3, [sp, #32]
 8021026:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8021028:	9313      	str	r3, [sp, #76]	; 0x4c
 802102a:	f64f 061f 	movw	r6, #63519	; 0xf81f
 802102e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8021030:	2b00      	cmp	r3, #0
 8021032:	f340 81a4 	ble.w	802137e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8021036:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8021038:	9d21      	ldr	r5, [sp, #132]	; 0x84
 802103a:	1418      	asrs	r0, r3, #16
 802103c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802103e:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8021042:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8021044:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8021048:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802104a:	142d      	asrs	r5, r5, #16
 802104c:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8021050:	f100 81f8 	bmi.w	8021444 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8021054:	f102 3eff 	add.w	lr, r2, #4294967295
 8021058:	4575      	cmp	r5, lr
 802105a:	f280 81f3 	bge.w	8021444 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 802105e:	2800      	cmp	r0, #0
 8021060:	f2c0 81f0 	blt.w	8021444 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8021064:	f103 3eff 	add.w	lr, r3, #4294967295
 8021068:	4570      	cmp	r0, lr
 802106a:	f280 81eb 	bge.w	8021444 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 802106e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021070:	b212      	sxth	r2, r2
 8021072:	fb00 5002 	mla	r0, r0, r2, r5
 8021076:	fa1f fe81 	uxth.w	lr, r1
 802107a:	eb03 0a00 	add.w	sl, r3, r0
 802107e:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8021082:	f813 9000 	ldrb.w	r9, [r3, r0]
 8021086:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802108a:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 802108e:	b29b      	uxth	r3, r3
 8021090:	f1bc 0f00 	cmp.w	ip, #0
 8021094:	f000 81b9 	beq.w	802140a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8021098:	f81a 4002 	ldrb.w	r4, [sl, r2]
 802109c:	940d      	str	r4, [sp, #52]	; 0x34
 802109e:	eb0a 0b02 	add.w	fp, sl, r2
 80210a2:	fa1f fa8c 	uxth.w	sl, ip
 80210a6:	fb0a fe0e 	mul.w	lr, sl, lr
 80210aa:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 80210ae:	fa1f fa8a 	uxth.w	sl, sl
 80210b2:	eba5 050e 	sub.w	r5, r5, lr
 80210b6:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80210ba:	940e      	str	r4, [sp, #56]	; 0x38
 80210bc:	eba3 030a 	sub.w	r3, r3, sl
 80210c0:	b2ad      	uxth	r5, r5
 80210c2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80210c4:	b29b      	uxth	r3, r3
 80210c6:	fb08 f505 	mul.w	r5, r8, r5
 80210ca:	fb09 5303 	mla	r3, r9, r3, r5
 80210ce:	fb0a 3304 	mla	r3, sl, r4, r3
 80210d2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80210d4:	fb0e 3304 	mla	r3, lr, r4, r3
 80210d8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80210dc:	2b00      	cmp	r3, #0
 80210de:	f000 810f 	beq.w	8021300 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80210e2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80210e4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80210e8:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 80210ec:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 80210f0:	f000 8190 	beq.w	8021414 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 80210f4:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80210f8:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80210fc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021100:	fb09 f000 	mul.w	r0, r9, r0
 8021104:	fb0a fe0e 	mul.w	lr, sl, lr
 8021108:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 802110c:	f100 0b20 	add.w	fp, r0, #32
 8021110:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8021114:	44ce      	add	lr, r9
 8021116:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 802111a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802111e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8021122:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8021126:	ea4e 0909 	orr.w	r9, lr, r9
 802112a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 802112e:	8868      	ldrh	r0, [r5, #2]
 8021130:	d019      	beq.n	8021166 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8021132:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8021136:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 802113a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802113e:	fb08 f800 	mul.w	r8, r8, r0
 8021142:	fb0a fe0e 	mul.w	lr, sl, lr
 8021146:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 802114a:	f108 0b20 	add.w	fp, r8, #32
 802114e:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8021152:	4486      	add	lr, r0
 8021154:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8021158:	0a00      	lsrs	r0, r0, #8
 802115a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 802115e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021162:	ea4e 0000 	orr.w	r0, lr, r0
 8021166:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 802116a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802116e:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8021172:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8021176:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802117a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802117e:	ea4e 0909 	orr.w	r9, lr, r9
 8021182:	ea4a 0000 	orr.w	r0, sl, r0
 8021186:	f1bc 0f00 	cmp.w	ip, #0
 802118a:	f000 8145 	beq.w	8021418 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 802118e:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8021192:	3a01      	subs	r2, #1
 8021194:	0052      	lsls	r2, r2, #1
 8021196:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021198:	3202      	adds	r2, #2
 802119a:	2cff      	cmp	r4, #255	; 0xff
 802119c:	eb05 0e02 	add.w	lr, r5, r2
 80211a0:	5aaa      	ldrh	r2, [r5, r2]
 80211a2:	d018      	beq.n	80211d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 80211a4:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 80211a8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80211ac:	fb04 fa02 	mul.w	sl, r4, r2
 80211b0:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80211b4:	fb08 f805 	mul.w	r8, r8, r5
 80211b8:	f10a 0520 	add.w	r5, sl, #32
 80211bc:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 80211c0:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 80211c4:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80211c8:	4442      	add	r2, r8
 80211ca:	0a2d      	lsrs	r5, r5, #8
 80211cc:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 80211d0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80211d4:	432a      	orrs	r2, r5
 80211d6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80211d8:	f8be 5002 	ldrh.w	r5, [lr, #2]
 80211dc:	2cff      	cmp	r4, #255	; 0xff
 80211de:	d01a      	beq.n	8021216 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 80211e0:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 80211e4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80211e8:	fb04 fa05 	mul.w	sl, r4, r5
 80211ec:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80211f0:	fb08 f80e 	mul.w	r8, r8, lr
 80211f4:	f10a 0e20 	add.w	lr, sl, #32
 80211f8:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 80211fc:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8021200:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021204:	4445      	add	r5, r8
 8021206:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802120a:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 802120e:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8021212:	ea45 050e 	orr.w	r5, r5, lr
 8021216:	fb1c fe01 	smulbb	lr, ip, r1
 802121a:	ea4f 0eee 	mov.w	lr, lr, asr #3
 802121e:	f1cc 0810 	rsb	r8, ip, #16
 8021222:	eba8 0801 	sub.w	r8, r8, r1
 8021226:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 802122a:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 802122e:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8021232:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8021236:	4341      	muls	r1, r0
 8021238:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802123c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021240:	ea4a 0202 	orr.w	r2, sl, r2
 8021244:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8021248:	fb09 1108 	mla	r1, r9, r8, r1
 802124c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8021250:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8021254:	fb0c 1102 	mla	r1, ip, r2, r1
 8021258:	ea4b 0505 	orr.w	r5, fp, r5
 802125c:	fb0e 1e05 	mla	lr, lr, r5, r1
 8021260:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8021264:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8021268:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802126c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8021270:	ea42 0e0e 	orr.w	lr, r2, lr
 8021274:	fa1f f28e 	uxth.w	r2, lr
 8021278:	2bff      	cmp	r3, #255	; 0xff
 802127a:	d103      	bne.n	8021284 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 802127c:	9912      	ldr	r1, [sp, #72]	; 0x48
 802127e:	29ff      	cmp	r1, #255	; 0xff
 8021280:	f000 80de 	beq.w	8021440 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 8021284:	990a      	ldr	r1, [sp, #40]	; 0x28
 8021286:	8838      	ldrh	r0, [r7, #0]
 8021288:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 802128a:	434b      	muls	r3, r1
 802128c:	f103 0c01 	add.w	ip, r3, #1
 8021290:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 8021294:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8021298:	fa5f fc83 	uxtb.w	ip, r3
 802129c:	1203      	asrs	r3, r0, #8
 802129e:	1215      	asrs	r5, r2, #8
 80212a0:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80212a4:	fb13 f30c 	smulbb	r3, r3, ip
 80212a8:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80212ac:	fb05 3501 	mla	r5, r5, r1, r3
 80212b0:	10c3      	asrs	r3, r0, #3
 80212b2:	10d1      	asrs	r1, r2, #3
 80212b4:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80212b8:	fb13 f30c 	smulbb	r3, r3, ip
 80212bc:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80212c0:	fb01 3104 	mla	r1, r1, r4, r3
 80212c4:	00c3      	lsls	r3, r0, #3
 80212c6:	00d2      	lsls	r2, r2, #3
 80212c8:	b2db      	uxtb	r3, r3
 80212ca:	b2d2      	uxtb	r2, r2
 80212cc:	fb13 f30c 	smulbb	r3, r3, ip
 80212d0:	b2ad      	uxth	r5, r5
 80212d2:	fb02 3304 	mla	r3, r2, r4, r3
 80212d6:	b29a      	uxth	r2, r3
 80212d8:	1c6b      	adds	r3, r5, #1
 80212da:	b289      	uxth	r1, r1
 80212dc:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80212e0:	1c53      	adds	r3, r2, #1
 80212e2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80212e6:	1c4a      	adds	r2, r1, #1
 80212e8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80212ec:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80212f0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80212f4:	0949      	lsrs	r1, r1, #5
 80212f6:	432b      	orrs	r3, r5
 80212f8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80212fc:	430b      	orrs	r3, r1
 80212fe:	803b      	strh	r3, [r7, #0]
 8021300:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8021302:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8021304:	4413      	add	r3, r2
 8021306:	9321      	str	r3, [sp, #132]	; 0x84
 8021308:	9a22      	ldr	r2, [sp, #136]	; 0x88
 802130a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802130c:	441a      	add	r2, r3
 802130e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8021310:	9222      	str	r2, [sp, #136]	; 0x88
 8021312:	3b01      	subs	r3, #1
 8021314:	3702      	adds	r7, #2
 8021316:	9313      	str	r3, [sp, #76]	; 0x4c
 8021318:	e689      	b.n	802102e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 802131a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802131c:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 802131e:	9c22      	ldr	r4, [sp, #136]	; 0x88
 8021320:	4433      	add	r3, r6
 8021322:	9321      	str	r3, [sp, #132]	; 0x84
 8021324:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021326:	441c      	add	r4, r3
 8021328:	9b08      	ldr	r3, [sp, #32]
 802132a:	9422      	str	r4, [sp, #136]	; 0x88
 802132c:	3b01      	subs	r3, #1
 802132e:	9308      	str	r3, [sp, #32]
 8021330:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021332:	3302      	adds	r3, #2
 8021334:	9309      	str	r3, [sp, #36]	; 0x24
 8021336:	e658      	b.n	8020fea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 8021338:	d028      	beq.n	802138c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 802133a:	9b08      	ldr	r3, [sp, #32]
 802133c:	9823      	ldr	r0, [sp, #140]	; 0x8c
 802133e:	9d21      	ldr	r5, [sp, #132]	; 0x84
 8021340:	3b01      	subs	r3, #1
 8021342:	fb00 5003 	mla	r0, r0, r3, r5
 8021346:	1400      	asrs	r0, r0, #16
 8021348:	f53f ae6c 	bmi.w	8021024 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802134c:	3901      	subs	r1, #1
 802134e:	4288      	cmp	r0, r1
 8021350:	f6bf ae68 	bge.w	8021024 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8021354:	9924      	ldr	r1, [sp, #144]	; 0x90
 8021356:	9822      	ldr	r0, [sp, #136]	; 0x88
 8021358:	fb01 0303 	mla	r3, r1, r3, r0
 802135c:	141b      	asrs	r3, r3, #16
 802135e:	f53f ae61 	bmi.w	8021024 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8021362:	3a01      	subs	r2, #1
 8021364:	4293      	cmp	r3, r2
 8021366:	f6bf ae5d 	bge.w	8021024 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802136a:	9b08      	ldr	r3, [sp, #32]
 802136c:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8021370:	9313      	str	r3, [sp, #76]	; 0x4c
 8021372:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8021376:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8021378:	2b00      	cmp	r3, #0
 802137a:	f300 8082 	bgt.w	8021482 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 802137e:	9b08      	ldr	r3, [sp, #32]
 8021380:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8021384:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021386:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 802138a:	9309      	str	r3, [sp, #36]	; 0x24
 802138c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 802138e:	2b00      	cmp	r3, #0
 8021390:	f340 81ef 	ble.w	8021772 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8021394:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021398:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802139c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80213a0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80213a2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80213a6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80213aa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80213ae:	eef0 6a62 	vmov.f32	s13, s5
 80213b2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80213b6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80213ba:	ee77 2a62 	vsub.f32	s5, s14, s5
 80213be:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 80213c2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80213c6:	eef0 6a43 	vmov.f32	s13, s6
 80213ca:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80213ce:	ee12 2a90 	vmov	r2, s5
 80213d2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80213d6:	fb92 f3f3 	sdiv	r3, r2, r3
 80213da:	ee13 2a10 	vmov	r2, s6
 80213de:	9323      	str	r3, [sp, #140]	; 0x8c
 80213e0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80213e2:	fb92 f3f3 	sdiv	r3, r2, r3
 80213e6:	9324      	str	r3, [sp, #144]	; 0x90
 80213e8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80213ea:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80213ec:	3b01      	subs	r3, #1
 80213ee:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80213f2:	9311      	str	r3, [sp, #68]	; 0x44
 80213f4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80213f6:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 80213fa:	bf08      	it	eq
 80213fc:	4613      	moveq	r3, r2
 80213fe:	9308      	str	r3, [sp, #32]
 8021400:	eeb0 3a67 	vmov.f32	s6, s15
 8021404:	eef0 2a47 	vmov.f32	s5, s14
 8021408:	e5e1      	b.n	8020fce <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 802140a:	fb08 f505 	mul.w	r5, r8, r5
 802140e:	fb09 5303 	mla	r3, r9, r3, r5
 8021412:	e661      	b.n	80210d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 8021414:	4681      	mov	r9, r0
 8021416:	e688      	b.n	802112a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 8021418:	f1c1 0210 	rsb	r2, r1, #16
 802141c:	4341      	muls	r1, r0
 802141e:	fb09 1902 	mla	r9, r9, r2, r1
 8021422:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8021426:	ea4f 5259 	mov.w	r2, r9, lsr #21
 802142a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 802142e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021432:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8021436:	ea42 0909 	orr.w	r9, r2, r9
 802143a:	fa1f f289 	uxth.w	r2, r9
 802143e:	e71b      	b.n	8021278 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8021440:	803a      	strh	r2, [r7, #0]
 8021442:	e75d      	b.n	8021300 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021444:	f115 0e01 	adds.w	lr, r5, #1
 8021448:	f53f af5a 	bmi.w	8021300 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 802144c:	4572      	cmp	r2, lr
 802144e:	f6ff af57 	blt.w	8021300 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021452:	f110 0e01 	adds.w	lr, r0, #1
 8021456:	f53f af53 	bmi.w	8021300 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 802145a:	4573      	cmp	r3, lr
 802145c:	f6ff af50 	blt.w	8021300 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021460:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8021462:	9502      	str	r5, [sp, #8]
 8021464:	b21b      	sxth	r3, r3
 8021466:	b212      	sxth	r2, r2
 8021468:	e9cd 0103 	strd	r0, r1, [sp, #12]
 802146c:	9301      	str	r3, [sp, #4]
 802146e:	9200      	str	r2, [sp, #0]
 8021470:	e9cd c405 	strd	ip, r4, [sp, #20]
 8021474:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 8021478:	4639      	mov	r1, r7
 802147a:	9815      	ldr	r0, [sp, #84]	; 0x54
 802147c:	f7ff fc04 	bl	8020c88 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8021480:	e73e      	b.n	8021300 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021482:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8021484:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8021488:	9b22      	ldr	r3, [sp, #136]	; 0x88
 802148a:	f3c3 3503 	ubfx	r5, r3, #12, #4
 802148e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021490:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021494:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8021496:	141f      	asrs	r7, r3, #16
 8021498:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802149a:	141b      	asrs	r3, r3, #16
 802149c:	fb01 3707 	mla	r7, r1, r7, r3
 80214a0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80214a2:	fa1f fc82 	uxth.w	ip, r2
 80214a6:	eb03 0a07 	add.w	sl, r3, r7
 80214aa:	ea4f 100c 	mov.w	r0, ip, lsl #4
 80214ae:	f813 9007 	ldrb.w	r9, [r3, r7]
 80214b2:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80214b6:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 80214ba:	b29b      	uxth	r3, r3
 80214bc:	2d00      	cmp	r5, #0
 80214be:	f000 813d 	beq.w	802173c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 80214c2:	f81a 4001 	ldrb.w	r4, [sl, r1]
 80214c6:	940f      	str	r4, [sp, #60]	; 0x3c
 80214c8:	eb0a 0b01 	add.w	fp, sl, r1
 80214cc:	fa1f fa85 	uxth.w	sl, r5
 80214d0:	fb0a fc0c 	mul.w	ip, sl, ip
 80214d4:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 80214d8:	fa1f fa8a 	uxth.w	sl, sl
 80214dc:	eba0 000c 	sub.w	r0, r0, ip
 80214e0:	eba3 030a 	sub.w	r3, r3, sl
 80214e4:	b280      	uxth	r0, r0
 80214e6:	fb08 f000 	mul.w	r0, r8, r0
 80214ea:	b29b      	uxth	r3, r3
 80214ec:	fb09 0303 	mla	r3, r9, r3, r0
 80214f0:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80214f2:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80214f6:	9410      	str	r4, [sp, #64]	; 0x40
 80214f8:	fb0a 3300 	mla	r3, sl, r0, r3
 80214fc:	fb0c 3304 	mla	r3, ip, r4, r3
 8021500:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021504:	2b00      	cmp	r3, #0
 8021506:	f000 810b 	beq.w	8021720 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 802150a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 802150c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802150e:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8021512:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8021516:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 802151a:	f000 8114 	beq.w	8021746 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 802151e:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8021522:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8021526:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802152a:	fb09 f707 	mul.w	r7, r9, r7
 802152e:	fb0a fc0c 	mul.w	ip, sl, ip
 8021532:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8021536:	f107 0b20 	add.w	fp, r7, #32
 802153a:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 802153e:	44cc      	add	ip, r9
 8021540:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8021544:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021548:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 802154c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8021550:	ea4c 0909 	orr.w	r9, ip, r9
 8021554:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8021558:	8847      	ldrh	r7, [r0, #2]
 802155a:	d019      	beq.n	8021590 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 802155c:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8021560:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8021564:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021568:	fb08 f807 	mul.w	r8, r8, r7
 802156c:	fb0a fc0c 	mul.w	ip, sl, ip
 8021570:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8021574:	f108 0b20 	add.w	fp, r8, #32
 8021578:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 802157c:	44bc      	add	ip, r7
 802157e:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8021582:	0a3f      	lsrs	r7, r7, #8
 8021584:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8021588:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802158c:	ea4c 0707 	orr.w	r7, ip, r7
 8021590:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8021594:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8021598:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 802159c:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80215a0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80215a4:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80215a8:	ea4c 0909 	orr.w	r9, ip, r9
 80215ac:	ea4a 0707 	orr.w	r7, sl, r7
 80215b0:	2d00      	cmp	r5, #0
 80215b2:	f000 80ca 	beq.w	802174a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 80215b6:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 80215ba:	3901      	subs	r1, #1
 80215bc:	0049      	lsls	r1, r1, #1
 80215be:	3102      	adds	r1, #2
 80215c0:	eb00 0c01 	add.w	ip, r0, r1
 80215c4:	5a41      	ldrh	r1, [r0, r1]
 80215c6:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80215c8:	28ff      	cmp	r0, #255	; 0xff
 80215ca:	d019      	beq.n	8021600 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 80215cc:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80215ce:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 80215d2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80215d6:	fb04 fa01 	mul.w	sl, r4, r1
 80215da:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80215de:	fb08 f800 	mul.w	r8, r8, r0
 80215e2:	f10a 0020 	add.w	r0, sl, #32
 80215e6:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 80215ea:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 80215ee:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80215f2:	4441      	add	r1, r8
 80215f4:	0a00      	lsrs	r0, r0, #8
 80215f6:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 80215fa:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80215fe:	4301      	orrs	r1, r0
 8021600:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021602:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8021606:	2cff      	cmp	r4, #255	; 0xff
 8021608:	d01a      	beq.n	8021640 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 802160a:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 802160e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021612:	fb04 fa00 	mul.w	sl, r4, r0
 8021616:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802161a:	fb08 f80c 	mul.w	r8, r8, ip
 802161e:	f10a 0c20 	add.w	ip, sl, #32
 8021622:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8021626:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 802162a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802162e:	4440      	add	r0, r8
 8021630:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021634:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8021638:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 802163c:	ea40 000c 	orr.w	r0, r0, ip
 8021640:	fb15 fc02 	smulbb	ip, r5, r2
 8021644:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8021648:	f1c5 0810 	rsb	r8, r5, #16
 802164c:	eba8 0802 	sub.w	r8, r8, r2
 8021650:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8021654:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8021658:	437a      	muls	r2, r7
 802165a:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 802165e:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8021662:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021666:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802166a:	fb09 2208 	mla	r2, r9, r8, r2
 802166e:	ea4a 0101 	orr.w	r1, sl, r1
 8021672:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8021676:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802167a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802167e:	fb05 2201 	mla	r2, r5, r1, r2
 8021682:	ea4b 0000 	orr.w	r0, fp, r0
 8021686:	fb0c 2200 	mla	r2, ip, r0, r2
 802168a:	0d57      	lsrs	r7, r2, #21
 802168c:	0952      	lsrs	r2, r2, #5
 802168e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021692:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021696:	433a      	orrs	r2, r7
 8021698:	2bff      	cmp	r3, #255	; 0xff
 802169a:	b292      	uxth	r2, r2
 802169c:	d102      	bne.n	80216a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 802169e:	9912      	ldr	r1, [sp, #72]	; 0x48
 80216a0:	29ff      	cmp	r1, #255	; 0xff
 80216a2:	d063      	beq.n	802176c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 80216a4:	980a      	ldr	r0, [sp, #40]	; 0x28
 80216a6:	f8be 1000 	ldrh.w	r1, [lr]
 80216aa:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80216ac:	4343      	muls	r3, r0
 80216ae:	1c58      	adds	r0, r3, #1
 80216b0:	eb00 2323 	add.w	r3, r0, r3, asr #8
 80216b4:	ea6f 2323 	mvn.w	r3, r3, asr #8
 80216b8:	1208      	asrs	r0, r1, #8
 80216ba:	b2db      	uxtb	r3, r3
 80216bc:	1215      	asrs	r5, r2, #8
 80216be:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80216c2:	fb10 f003 	smulbb	r0, r0, r3
 80216c6:	10cf      	asrs	r7, r1, #3
 80216c8:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80216cc:	00c9      	lsls	r1, r1, #3
 80216ce:	fb05 0504 	mla	r5, r5, r4, r0
 80216d2:	b2c9      	uxtb	r1, r1
 80216d4:	10d0      	asrs	r0, r2, #3
 80216d6:	00d2      	lsls	r2, r2, #3
 80216d8:	fb11 f103 	smulbb	r1, r1, r3
 80216dc:	b2d2      	uxtb	r2, r2
 80216de:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80216e2:	fb02 1204 	mla	r2, r2, r4, r1
 80216e6:	fb17 f703 	smulbb	r7, r7, r3
 80216ea:	b2ad      	uxth	r5, r5
 80216ec:	b292      	uxth	r2, r2
 80216ee:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80216f2:	fb00 7004 	mla	r0, r0, r4, r7
 80216f6:	1c6b      	adds	r3, r5, #1
 80216f8:	1c57      	adds	r7, r2, #1
 80216fa:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80216fe:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8021702:	b280      	uxth	r0, r0
 8021704:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8021708:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 802170c:	433d      	orrs	r5, r7
 802170e:	1c47      	adds	r7, r0, #1
 8021710:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8021714:	097f      	lsrs	r7, r7, #5
 8021716:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802171a:	433d      	orrs	r5, r7
 802171c:	f8ae 5000 	strh.w	r5, [lr]
 8021720:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8021722:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8021724:	4413      	add	r3, r2
 8021726:	9321      	str	r3, [sp, #132]	; 0x84
 8021728:	9a22      	ldr	r2, [sp, #136]	; 0x88
 802172a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802172c:	441a      	add	r2, r3
 802172e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8021730:	9222      	str	r2, [sp, #136]	; 0x88
 8021732:	3b01      	subs	r3, #1
 8021734:	f10e 0e02 	add.w	lr, lr, #2
 8021738:	9313      	str	r3, [sp, #76]	; 0x4c
 802173a:	e61c      	b.n	8021376 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 802173c:	fb08 f000 	mul.w	r0, r8, r0
 8021740:	fb09 0303 	mla	r3, r9, r3, r0
 8021744:	e6dc      	b.n	8021500 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 8021746:	46b9      	mov	r9, r7
 8021748:	e704      	b.n	8021554 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 802174a:	f1c2 0110 	rsb	r1, r2, #16
 802174e:	437a      	muls	r2, r7
 8021750:	fb09 2901 	mla	r9, r9, r1, r2
 8021754:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8021758:	ea4f 5059 	mov.w	r0, r9, lsr #21
 802175c:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8021760:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021764:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021768:	4302      	orrs	r2, r0
 802176a:	e795      	b.n	8021698 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 802176c:	f8ae 2000 	strh.w	r2, [lr]
 8021770:	e7d6      	b.n	8021720 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8021772:	b017      	add	sp, #92	; 0x5c
 8021774:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08021778 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8021778:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802177c:	b085      	sub	sp, #20
 802177e:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8021782:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8021786:	9103      	str	r1, [sp, #12]
 8021788:	fb00 7406 	mla	r4, r0, r6, r7
 802178c:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 8021790:	2800      	cmp	r0, #0
 8021792:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 8021796:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 802179a:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 802179e:	9501      	str	r5, [sp, #4]
 80217a0:	eb02 0904 	add.w	r9, r2, r4
 80217a4:	f2c0 8141 	blt.w	8021a2a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 80217a8:	4583      	cmp	fp, r0
 80217aa:	f340 813e 	ble.w	8021a2a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 80217ae:	2f00      	cmp	r7, #0
 80217b0:	f2c0 8137 	blt.w	8021a22 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 80217b4:	42be      	cmp	r6, r7
 80217b6:	f340 8134 	ble.w	8021a22 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 80217ba:	f812 c004 	ldrb.w	ip, [r2, r4]
 80217be:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 80217c2:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80217c6:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 80217ca:	4355      	muls	r5, r2
 80217cc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80217d0:	f64f 041f 	movw	r4, #63519	; 0xf81f
 80217d4:	fb0c f203 	mul.w	r2, ip, r3
 80217d8:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 80217dc:	f605 0501 	addw	r5, r5, #2049	; 0x801
 80217e0:	441d      	add	r5, r3
 80217e2:	f102 0320 	add.w	r3, r2, #32
 80217e6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80217ea:	0a1b      	lsrs	r3, r3, #8
 80217ec:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 80217f0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80217f4:	431c      	orrs	r4, r3
 80217f6:	1c7b      	adds	r3, r7, #1
 80217f8:	f100 811c 	bmi.w	8021a34 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 80217fc:	429e      	cmp	r6, r3
 80217fe:	f340 8119 	ble.w	8021a34 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8021802:	2900      	cmp	r1, #0
 8021804:	f000 8119 	beq.w	8021a3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 8021808:	9a01      	ldr	r2, [sp, #4]
 802180a:	f899 3001 	ldrb.w	r3, [r9, #1]
 802180e:	8855      	ldrh	r5, [r2, #2]
 8021810:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8021814:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 8021818:	fb08 f802 	mul.w	r8, r8, r2
 802181c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021820:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8021824:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8021828:	435d      	muls	r5, r3
 802182a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802182e:	44d0      	add	r8, sl
 8021830:	f105 0a20 	add.w	sl, r5, #32
 8021834:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8021838:	0a2d      	lsrs	r5, r5, #8
 802183a:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 802183e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021842:	432a      	orrs	r2, r5
 8021844:	3001      	adds	r0, #1
 8021846:	f100 80fe 	bmi.w	8021a46 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 802184a:	4583      	cmp	fp, r0
 802184c:	f340 80fb 	ble.w	8021a46 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8021850:	f1be 0f00 	cmp.w	lr, #0
 8021854:	f000 80fc 	beq.w	8021a50 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 8021858:	2f00      	cmp	r7, #0
 802185a:	f2c0 80f1 	blt.w	8021a40 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 802185e:	42be      	cmp	r6, r7
 8021860:	f340 80ee 	ble.w	8021a40 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8021864:	9801      	ldr	r0, [sp, #4]
 8021866:	f819 5006 	ldrb.w	r5, [r9, r6]
 802186a:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 802186e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8021872:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8021876:	fb0a fa00 	mul.w	sl, sl, r0
 802187a:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 802187e:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8021882:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8021886:	fb05 f808 	mul.w	r8, r5, r8
 802188a:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 802188e:	4482      	add	sl, r0
 8021890:	f108 0020 	add.w	r0, r8, #32
 8021894:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8021898:	0a00      	lsrs	r0, r0, #8
 802189a:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 802189e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80218a2:	ea4b 0b00 	orr.w	fp, fp, r0
 80218a6:	3701      	adds	r7, #1
 80218a8:	f100 80d7 	bmi.w	8021a5a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 80218ac:	42be      	cmp	r6, r7
 80218ae:	f340 80d4 	ble.w	8021a5a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 80218b2:	2900      	cmp	r1, #0
 80218b4:	f000 80d4 	beq.w	8021a60 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 80218b8:	3601      	adds	r6, #1
 80218ba:	9801      	ldr	r0, [sp, #4]
 80218bc:	f819 7006 	ldrb.w	r7, [r9, r6]
 80218c0:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 80218c4:	ea4f 09e7 	mov.w	r9, r7, asr #3
 80218c8:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 80218cc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80218d0:	fb09 f906 	mul.w	r9, r9, r6
 80218d4:	fb07 f800 	mul.w	r8, r7, r0
 80218d8:	f64f 001f 	movw	r0, #63519	; 0xf81f
 80218dc:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 80218e0:	f609 0901 	addw	r9, r9, #2049	; 0x801
 80218e4:	44d1      	add	r9, sl
 80218e6:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 80218ea:	f108 0020 	add.w	r0, r8, #32
 80218ee:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80218f2:	0a00      	lsrs	r0, r0, #8
 80218f4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80218f8:	4330      	orrs	r0, r6
 80218fa:	b28e      	uxth	r6, r1
 80218fc:	fa1f f98e 	uxth.w	r9, lr
 8021900:	fb06 f809 	mul.w	r8, r6, r9
 8021904:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8021908:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 802190c:	0136      	lsls	r6, r6, #4
 802190e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021912:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8021916:	9601      	str	r6, [sp, #4]
 8021918:	ea4a 0404 	orr.w	r4, sl, r4
 802191c:	fa1f f689 	uxth.w	r6, r9
 8021920:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8021924:	fb11 f90e 	smulbb	r9, r1, lr
 8021928:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 802192c:	9602      	str	r6, [sp, #8]
 802192e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021932:	4626      	mov	r6, r4
 8021934:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021938:	f1ce 0410 	rsb	r4, lr, #16
 802193c:	1a64      	subs	r4, r4, r1
 802193e:	ea4a 0202 	orr.w	r2, sl, r2
 8021942:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8021946:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802194a:	434a      	muls	r2, r1
 802194c:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8021950:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021954:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8021958:	fb04 2406 	mla	r4, r4, r6, r2
 802195c:	ea4a 0000 	orr.w	r0, sl, r0
 8021960:	fb09 4200 	mla	r2, r9, r0, r4
 8021964:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8021968:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 802196c:	9801      	ldr	r0, [sp, #4]
 802196e:	9903      	ldr	r1, [sp, #12]
 8021970:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8021974:	ea44 0b0b 	orr.w	fp, r4, fp
 8021978:	9c02      	ldr	r4, [sp, #8]
 802197a:	8809      	ldrh	r1, [r1, #0]
 802197c:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8021980:	1b00      	subs	r0, r0, r4
 8021982:	9c01      	ldr	r4, [sp, #4]
 8021984:	eba4 0608 	sub.w	r6, r4, r8
 8021988:	b2b6      	uxth	r6, r6
 802198a:	b280      	uxth	r0, r0
 802198c:	4373      	muls	r3, r6
 802198e:	fb0c 3300 	mla	r3, ip, r0, r3
 8021992:	9802      	ldr	r0, [sp, #8]
 8021994:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8021998:	fb00 3505 	mla	r5, r0, r5, r3
 802199c:	fb0e 2e0b 	mla	lr, lr, fp, r2
 80219a0:	fb08 5707 	mla	r7, r8, r7, r5
 80219a4:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80219a8:	120b      	asrs	r3, r1, #8
 80219aa:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80219ae:	ea6f 2727 	mvn.w	r7, r7, asr #8
 80219b2:	b2ff      	uxtb	r7, r7
 80219b4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80219b8:	10c8      	asrs	r0, r1, #3
 80219ba:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80219be:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80219c2:	00c9      	lsls	r1, r1, #3
 80219c4:	437b      	muls	r3, r7
 80219c6:	ea42 0e0e 	orr.w	lr, r2, lr
 80219ca:	b2c9      	uxtb	r1, r1
 80219cc:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80219d0:	fa1f f28e 	uxth.w	r2, lr
 80219d4:	4378      	muls	r0, r7
 80219d6:	434f      	muls	r7, r1
 80219d8:	1c59      	adds	r1, r3, #1
 80219da:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80219de:	1213      	asrs	r3, r2, #8
 80219e0:	f023 0307 	bic.w	r3, r3, #7
 80219e4:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80219e8:	1c41      	adds	r1, r0, #1
 80219ea:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80219ee:	10d1      	asrs	r1, r2, #3
 80219f0:	f021 0103 	bic.w	r1, r1, #3
 80219f4:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80219f8:	021b      	lsls	r3, r3, #8
 80219fa:	00c9      	lsls	r1, r1, #3
 80219fc:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8021a00:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8021a04:	430b      	orrs	r3, r1
 8021a06:	1c79      	adds	r1, r7, #1
 8021a08:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8021a0c:	00d2      	lsls	r2, r2, #3
 8021a0e:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8021a12:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8021a16:	431a      	orrs	r2, r3
 8021a18:	9b03      	ldr	r3, [sp, #12]
 8021a1a:	801a      	strh	r2, [r3, #0]
 8021a1c:	b005      	add	sp, #20
 8021a1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021a22:	f04f 0c00 	mov.w	ip, #0
 8021a26:	4664      	mov	r4, ip
 8021a28:	e6e5      	b.n	80217f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 8021a2a:	2300      	movs	r3, #0
 8021a2c:	469c      	mov	ip, r3
 8021a2e:	461a      	mov	r2, r3
 8021a30:	461c      	mov	r4, r3
 8021a32:	e707      	b.n	8021844 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8021a34:	2300      	movs	r3, #0
 8021a36:	461a      	mov	r2, r3
 8021a38:	e704      	b.n	8021844 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8021a3a:	460b      	mov	r3, r1
 8021a3c:	460a      	mov	r2, r1
 8021a3e:	e701      	b.n	8021844 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8021a40:	2500      	movs	r5, #0
 8021a42:	46ab      	mov	fp, r5
 8021a44:	e72f      	b.n	80218a6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 8021a46:	2700      	movs	r7, #0
 8021a48:	463d      	mov	r5, r7
 8021a4a:	4638      	mov	r0, r7
 8021a4c:	46bb      	mov	fp, r7
 8021a4e:	e754      	b.n	80218fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8021a50:	4677      	mov	r7, lr
 8021a52:	4675      	mov	r5, lr
 8021a54:	4670      	mov	r0, lr
 8021a56:	46f3      	mov	fp, lr
 8021a58:	e74f      	b.n	80218fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8021a5a:	2700      	movs	r7, #0
 8021a5c:	4638      	mov	r0, r7
 8021a5e:	e74c      	b.n	80218fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8021a60:	460f      	mov	r7, r1
 8021a62:	4608      	mov	r0, r1
 8021a64:	e749      	b.n	80218fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

08021a68 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021a68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021a6c:	b093      	sub	sp, #76	; 0x4c
 8021a6e:	9210      	str	r2, [sp, #64]	; 0x40
 8021a70:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8021a72:	910e      	str	r1, [sp, #56]	; 0x38
 8021a74:	9306      	str	r3, [sp, #24]
 8021a76:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8021a7a:	9011      	str	r0, [sp, #68]	; 0x44
 8021a7c:	6850      	ldr	r0, [r2, #4]
 8021a7e:	6812      	ldr	r2, [r2, #0]
 8021a80:	fb00 1303 	mla	r3, r0, r3, r1
 8021a84:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021a88:	9307      	str	r3, [sp, #28]
 8021a8a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021a8c:	681b      	ldr	r3, [r3, #0]
 8021a8e:	9308      	str	r3, [sp, #32]
 8021a90:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021a92:	685b      	ldr	r3, [r3, #4]
 8021a94:	9309      	str	r3, [sp, #36]	; 0x24
 8021a96:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8021a98:	2b00      	cmp	r3, #0
 8021a9a:	dc03      	bgt.n	8021aa4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8021a9c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8021a9e:	2b00      	cmp	r3, #0
 8021aa0:	f340 83b4 	ble.w	802220c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8021aa4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021aa6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021aaa:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021aae:	1e48      	subs	r0, r1, #1
 8021ab0:	1e55      	subs	r5, r2, #1
 8021ab2:	9b06      	ldr	r3, [sp, #24]
 8021ab4:	2b00      	cmp	r3, #0
 8021ab6:	f340 8163 	ble.w	8021d80 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8021aba:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 8021abc:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8021abe:	1436      	asrs	r6, r6, #16
 8021ac0:	ea4f 4323 	mov.w	r3, r3, asr #16
 8021ac4:	d406      	bmi.n	8021ad4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8021ac6:	4286      	cmp	r6, r0
 8021ac8:	da04      	bge.n	8021ad4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8021aca:	2b00      	cmp	r3, #0
 8021acc:	db02      	blt.n	8021ad4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8021ace:	42ab      	cmp	r3, r5
 8021ad0:	f2c0 8157 	blt.w	8021d82 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 8021ad4:	3601      	adds	r6, #1
 8021ad6:	f100 8144 	bmi.w	8021d62 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8021ada:	42b1      	cmp	r1, r6
 8021adc:	f2c0 8141 	blt.w	8021d62 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8021ae0:	3301      	adds	r3, #1
 8021ae2:	f100 813e 	bmi.w	8021d62 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8021ae6:	429a      	cmp	r2, r3
 8021ae8:	f2c0 813b 	blt.w	8021d62 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8021aec:	9b06      	ldr	r3, [sp, #24]
 8021aee:	9f07      	ldr	r7, [sp, #28]
 8021af0:	930f      	str	r3, [sp, #60]	; 0x3c
 8021af2:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8021af6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8021af8:	2b00      	cmp	r3, #0
 8021afa:	f340 8164 	ble.w	8021dc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8021afe:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8021b00:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8021b02:	1418      	asrs	r0, r3, #16
 8021b04:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8021b06:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8021b0a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8021b0c:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8021b10:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021b12:	142d      	asrs	r5, r5, #16
 8021b14:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8021b18:	f100 81ee 	bmi.w	8021ef8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8021b1c:	f102 3eff 	add.w	lr, r2, #4294967295
 8021b20:	4575      	cmp	r5, lr
 8021b22:	f280 81e9 	bge.w	8021ef8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8021b26:	2800      	cmp	r0, #0
 8021b28:	f2c0 81e6 	blt.w	8021ef8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8021b2c:	f103 3eff 	add.w	lr, r3, #4294967295
 8021b30:	4570      	cmp	r0, lr
 8021b32:	f280 81e1 	bge.w	8021ef8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8021b36:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021b38:	b212      	sxth	r2, r2
 8021b3a:	fb00 5002 	mla	r0, r0, r2, r5
 8021b3e:	fa1f fe81 	uxth.w	lr, r1
 8021b42:	eb03 0a00 	add.w	sl, r3, r0
 8021b46:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8021b4a:	f813 9000 	ldrb.w	r9, [r3, r0]
 8021b4e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8021b52:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8021b56:	b29b      	uxth	r3, r3
 8021b58:	f1bc 0f00 	cmp.w	ip, #0
 8021b5c:	f000 8179 	beq.w	8021e52 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8021b60:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8021b64:	940a      	str	r4, [sp, #40]	; 0x28
 8021b66:	eb0a 0b02 	add.w	fp, sl, r2
 8021b6a:	fa1f fa8c 	uxth.w	sl, ip
 8021b6e:	fb0a fe0e 	mul.w	lr, sl, lr
 8021b72:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8021b76:	fa1f fa8a 	uxth.w	sl, sl
 8021b7a:	eba5 050e 	sub.w	r5, r5, lr
 8021b7e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8021b82:	940b      	str	r4, [sp, #44]	; 0x2c
 8021b84:	eba3 030a 	sub.w	r3, r3, sl
 8021b88:	b2ad      	uxth	r5, r5
 8021b8a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8021b8c:	b29b      	uxth	r3, r3
 8021b8e:	fb08 f505 	mul.w	r5, r8, r5
 8021b92:	fb09 5303 	mla	r3, r9, r3, r5
 8021b96:	fb0a 3304 	mla	r3, sl, r4, r3
 8021b9a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021b9c:	fb0e 3304 	mla	r3, lr, r4, r3
 8021ba0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021ba4:	2b00      	cmp	r3, #0
 8021ba6:	f000 80cf 	beq.w	8021d48 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8021baa:	9c08      	ldr	r4, [sp, #32]
 8021bac:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8021bb0:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8021bb4:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8021bb8:	f000 8150 	beq.w	8021e5c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8021bbc:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8021bc0:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8021bc4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021bc8:	fb09 f000 	mul.w	r0, r9, r0
 8021bcc:	fb0a fe0e 	mul.w	lr, sl, lr
 8021bd0:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8021bd4:	f100 0b20 	add.w	fp, r0, #32
 8021bd8:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8021bdc:	44ce      	add	lr, r9
 8021bde:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8021be2:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021be6:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8021bea:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8021bee:	ea4e 0909 	orr.w	r9, lr, r9
 8021bf2:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8021bf6:	8868      	ldrh	r0, [r5, #2]
 8021bf8:	d019      	beq.n	8021c2e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8021bfa:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8021bfe:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8021c02:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021c06:	fb08 f800 	mul.w	r8, r8, r0
 8021c0a:	fb0a fe0e 	mul.w	lr, sl, lr
 8021c0e:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8021c12:	f108 0b20 	add.w	fp, r8, #32
 8021c16:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8021c1a:	4486      	add	lr, r0
 8021c1c:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8021c20:	0a00      	lsrs	r0, r0, #8
 8021c22:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8021c26:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021c2a:	ea4e 0000 	orr.w	r0, lr, r0
 8021c2e:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8021c32:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8021c36:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8021c3a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8021c3e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021c42:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8021c46:	ea4e 0909 	orr.w	r9, lr, r9
 8021c4a:	ea4a 0000 	orr.w	r0, sl, r0
 8021c4e:	f1bc 0f00 	cmp.w	ip, #0
 8021c52:	f000 8105 	beq.w	8021e60 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8021c56:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8021c5a:	3a01      	subs	r2, #1
 8021c5c:	0052      	lsls	r2, r2, #1
 8021c5e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8021c60:	3202      	adds	r2, #2
 8021c62:	2cff      	cmp	r4, #255	; 0xff
 8021c64:	eb05 0e02 	add.w	lr, r5, r2
 8021c68:	5aaa      	ldrh	r2, [r5, r2]
 8021c6a:	d018      	beq.n	8021c9e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8021c6c:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8021c70:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021c74:	fb04 fa02 	mul.w	sl, r4, r2
 8021c78:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021c7c:	fb08 f805 	mul.w	r8, r8, r5
 8021c80:	f10a 0520 	add.w	r5, sl, #32
 8021c84:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8021c88:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8021c8c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021c90:	4442      	add	r2, r8
 8021c92:	0a2d      	lsrs	r5, r5, #8
 8021c94:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8021c98:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021c9c:	432a      	orrs	r2, r5
 8021c9e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021ca0:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8021ca4:	2cff      	cmp	r4, #255	; 0xff
 8021ca6:	d01a      	beq.n	8021cde <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8021ca8:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8021cac:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021cb0:	fb04 fa05 	mul.w	sl, r4, r5
 8021cb4:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021cb8:	fb08 f80e 	mul.w	r8, r8, lr
 8021cbc:	f10a 0e20 	add.w	lr, sl, #32
 8021cc0:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8021cc4:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8021cc8:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021ccc:	4445      	add	r5, r8
 8021cce:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021cd2:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8021cd6:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8021cda:	ea45 050e 	orr.w	r5, r5, lr
 8021cde:	fb1c fe01 	smulbb	lr, ip, r1
 8021ce2:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8021ce6:	f1cc 0810 	rsb	r8, ip, #16
 8021cea:	eba8 0801 	sub.w	r8, r8, r1
 8021cee:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8021cf2:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8021cf6:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8021cfa:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8021cfe:	4341      	muls	r1, r0
 8021d00:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021d04:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021d08:	ea4a 0202 	orr.w	r2, sl, r2
 8021d0c:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8021d10:	fb09 1108 	mla	r1, r9, r8, r1
 8021d14:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8021d18:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8021d1c:	fb0c 1102 	mla	r1, ip, r2, r1
 8021d20:	ea4b 0505 	orr.w	r5, fp, r5
 8021d24:	fb0e 1e05 	mla	lr, lr, r5, r1
 8021d28:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8021d2c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8021d30:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021d34:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8021d38:	ea42 0e0e 	orr.w	lr, r2, lr
 8021d3c:	fa1f f28e 	uxth.w	r2, lr
 8021d40:	2bff      	cmp	r3, #255	; 0xff
 8021d42:	f040 80a1 	bne.w	8021e88 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 8021d46:	803a      	strh	r2, [r7, #0]
 8021d48:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8021d4a:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8021d4c:	4413      	add	r3, r2
 8021d4e:	931d      	str	r3, [sp, #116]	; 0x74
 8021d50:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8021d52:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021d54:	441a      	add	r2, r3
 8021d56:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8021d58:	921e      	str	r2, [sp, #120]	; 0x78
 8021d5a:	3b01      	subs	r3, #1
 8021d5c:	3702      	adds	r7, #2
 8021d5e:	930f      	str	r3, [sp, #60]	; 0x3c
 8021d60:	e6c9      	b.n	8021af6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8021d62:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8021d64:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 8021d66:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 8021d68:	4433      	add	r3, r6
 8021d6a:	931d      	str	r3, [sp, #116]	; 0x74
 8021d6c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021d6e:	441c      	add	r4, r3
 8021d70:	9b06      	ldr	r3, [sp, #24]
 8021d72:	941e      	str	r4, [sp, #120]	; 0x78
 8021d74:	3b01      	subs	r3, #1
 8021d76:	9306      	str	r3, [sp, #24]
 8021d78:	9b07      	ldr	r3, [sp, #28]
 8021d7a:	3302      	adds	r3, #2
 8021d7c:	9307      	str	r3, [sp, #28]
 8021d7e:	e698      	b.n	8021ab2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8021d80:	d028      	beq.n	8021dd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021d82:	9b06      	ldr	r3, [sp, #24]
 8021d84:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8021d86:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8021d88:	3b01      	subs	r3, #1
 8021d8a:	fb00 5003 	mla	r0, r0, r3, r5
 8021d8e:	1400      	asrs	r0, r0, #16
 8021d90:	f53f aeac 	bmi.w	8021aec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8021d94:	3901      	subs	r1, #1
 8021d96:	4288      	cmp	r0, r1
 8021d98:	f6bf aea8 	bge.w	8021aec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8021d9c:	9920      	ldr	r1, [sp, #128]	; 0x80
 8021d9e:	981e      	ldr	r0, [sp, #120]	; 0x78
 8021da0:	fb01 0303 	mla	r3, r1, r3, r0
 8021da4:	141b      	asrs	r3, r3, #16
 8021da6:	f53f aea1 	bmi.w	8021aec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8021daa:	3a01      	subs	r2, #1
 8021dac:	4293      	cmp	r3, r2
 8021dae:	f6bf ae9d 	bge.w	8021aec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8021db2:	9b06      	ldr	r3, [sp, #24]
 8021db4:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8021db8:	930f      	str	r3, [sp, #60]	; 0x3c
 8021dba:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8021dbe:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8021dc0:	2b00      	cmp	r3, #0
 8021dc2:	f300 80b6 	bgt.w	8021f32 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 8021dc6:	9b06      	ldr	r3, [sp, #24]
 8021dc8:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8021dcc:	9b07      	ldr	r3, [sp, #28]
 8021dce:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8021dd2:	9307      	str	r3, [sp, #28]
 8021dd4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8021dd6:	2b00      	cmp	r3, #0
 8021dd8:	f340 8218 	ble.w	802220c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8021ddc:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021de0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8021de4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8021de8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8021dea:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021dee:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021df2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8021df6:	eef0 6a62 	vmov.f32	s13, s5
 8021dfa:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021dfe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021e02:	ee77 2a62 	vsub.f32	s5, s14, s5
 8021e06:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 8021e0a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8021e0e:	eef0 6a43 	vmov.f32	s13, s6
 8021e12:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8021e16:	ee12 2a90 	vmov	r2, s5
 8021e1a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8021e1e:	fb92 f3f3 	sdiv	r3, r2, r3
 8021e22:	ee13 2a10 	vmov	r2, s6
 8021e26:	931f      	str	r3, [sp, #124]	; 0x7c
 8021e28:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8021e2a:	fb92 f3f3 	sdiv	r3, r2, r3
 8021e2e:	9320      	str	r3, [sp, #128]	; 0x80
 8021e30:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8021e32:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8021e34:	3b01      	subs	r3, #1
 8021e36:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021e3a:	930e      	str	r3, [sp, #56]	; 0x38
 8021e3c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8021e3e:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 8021e42:	bf08      	it	eq
 8021e44:	4613      	moveq	r3, r2
 8021e46:	9306      	str	r3, [sp, #24]
 8021e48:	eeb0 3a67 	vmov.f32	s6, s15
 8021e4c:	eef0 2a47 	vmov.f32	s5, s14
 8021e50:	e621      	b.n	8021a96 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8021e52:	fb08 f505 	mul.w	r5, r8, r5
 8021e56:	fb09 5303 	mla	r3, r9, r3, r5
 8021e5a:	e6a1      	b.n	8021ba0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 8021e5c:	4681      	mov	r9, r0
 8021e5e:	e6c8      	b.n	8021bf2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 8021e60:	f1c1 0210 	rsb	r2, r1, #16
 8021e64:	4341      	muls	r1, r0
 8021e66:	fb09 1902 	mla	r9, r9, r2, r1
 8021e6a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8021e6e:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8021e72:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8021e76:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021e7a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8021e7e:	ea42 0909 	orr.w	r9, r2, r9
 8021e82:	fa1f f289 	uxth.w	r2, r9
 8021e86:	e75b      	b.n	8021d40 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8021e88:	f8b7 c000 	ldrh.w	ip, [r7]
 8021e8c:	43db      	mvns	r3, r3
 8021e8e:	ea4f 202c 	mov.w	r0, ip, asr #8
 8021e92:	fa5f fe83 	uxtb.w	lr, r3
 8021e96:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8021e9a:	fb00 f00e 	mul.w	r0, r0, lr
 8021e9e:	1c41      	adds	r1, r0, #1
 8021ea0:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8021ea4:	1211      	asrs	r1, r2, #8
 8021ea6:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8021eaa:	f021 0107 	bic.w	r1, r1, #7
 8021eae:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8021eb2:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8021eb6:	48d7      	ldr	r0, [pc, #860]	; (8022214 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8021eb8:	fb05 f50e 	mul.w	r5, r5, lr
 8021ebc:	b2c9      	uxtb	r1, r1
 8021ebe:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 8021ec2:	1c69      	adds	r1, r5, #1
 8021ec4:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8021ec8:	10d1      	asrs	r1, r2, #3
 8021eca:	f021 0103 	bic.w	r1, r1, #3
 8021ece:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 8021ed2:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8021ed6:	b2db      	uxtb	r3, r3
 8021ed8:	00c9      	lsls	r1, r1, #3
 8021eda:	fb03 f30e 	mul.w	r3, r3, lr
 8021ede:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8021ee2:	4301      	orrs	r1, r0
 8021ee4:	1c58      	adds	r0, r3, #1
 8021ee6:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8021eea:	00d2      	lsls	r2, r2, #3
 8021eec:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8021ef0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8021ef4:	430a      	orrs	r2, r1
 8021ef6:	e726      	b.n	8021d46 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 8021ef8:	f115 0e01 	adds.w	lr, r5, #1
 8021efc:	f53f af24 	bmi.w	8021d48 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8021f00:	4572      	cmp	r2, lr
 8021f02:	f6ff af21 	blt.w	8021d48 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8021f06:	f110 0e01 	adds.w	lr, r0, #1
 8021f0a:	f53f af1d 	bmi.w	8021d48 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8021f0e:	4573      	cmp	r3, lr
 8021f10:	f6ff af1a 	blt.w	8021d48 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8021f14:	b21b      	sxth	r3, r3
 8021f16:	b212      	sxth	r2, r2
 8021f18:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 8021f1c:	e9cd 5002 	strd	r5, r0, [sp, #8]
 8021f20:	9301      	str	r3, [sp, #4]
 8021f22:	9200      	str	r2, [sp, #0]
 8021f24:	4639      	mov	r1, r7
 8021f26:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 8021f2a:	9811      	ldr	r0, [sp, #68]	; 0x44
 8021f2c:	f7ff fc24 	bl	8021778 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8021f30:	e70a      	b.n	8021d48 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8021f32:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8021f34:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8021f38:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8021f3a:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8021f3e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021f40:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021f44:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8021f46:	141f      	asrs	r7, r3, #16
 8021f48:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8021f4a:	141b      	asrs	r3, r3, #16
 8021f4c:	fb01 3707 	mla	r7, r1, r7, r3
 8021f50:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021f52:	fa1f fc82 	uxth.w	ip, r2
 8021f56:	eb03 0a07 	add.w	sl, r3, r7
 8021f5a:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8021f5e:	f813 9007 	ldrb.w	r9, [r3, r7]
 8021f62:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8021f66:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8021f6a:	b29b      	uxth	r3, r3
 8021f6c:	2d00      	cmp	r5, #0
 8021f6e:	f000 80fe 	beq.w	802216e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 8021f72:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8021f76:	940c      	str	r4, [sp, #48]	; 0x30
 8021f78:	eb0a 0b01 	add.w	fp, sl, r1
 8021f7c:	fa1f fa85 	uxth.w	sl, r5
 8021f80:	fb0a fc0c 	mul.w	ip, sl, ip
 8021f84:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8021f88:	fa1f fa8a 	uxth.w	sl, sl
 8021f8c:	eba0 000c 	sub.w	r0, r0, ip
 8021f90:	eba3 030a 	sub.w	r3, r3, sl
 8021f94:	b280      	uxth	r0, r0
 8021f96:	fb08 f000 	mul.w	r0, r8, r0
 8021f9a:	b29b      	uxth	r3, r3
 8021f9c:	fb09 0303 	mla	r3, r9, r3, r0
 8021fa0:	980c      	ldr	r0, [sp, #48]	; 0x30
 8021fa2:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8021fa6:	940d      	str	r4, [sp, #52]	; 0x34
 8021fa8:	fb0a 3300 	mla	r3, sl, r0, r3
 8021fac:	fb0c 3304 	mla	r3, ip, r4, r3
 8021fb0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021fb4:	2b00      	cmp	r3, #0
 8021fb6:	f000 80cc 	beq.w	8022152 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8021fba:	9808      	ldr	r0, [sp, #32]
 8021fbc:	9c08      	ldr	r4, [sp, #32]
 8021fbe:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8021fc2:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8021fc6:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8021fca:	f000 80d5 	beq.w	8022178 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8021fce:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8021fd2:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8021fd6:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021fda:	fb09 f707 	mul.w	r7, r9, r7
 8021fde:	fb0a fc0c 	mul.w	ip, sl, ip
 8021fe2:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8021fe6:	f107 0b20 	add.w	fp, r7, #32
 8021fea:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8021fee:	44cc      	add	ip, r9
 8021ff0:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8021ff4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021ff8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8021ffc:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8022000:	ea4c 0909 	orr.w	r9, ip, r9
 8022004:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8022008:	8847      	ldrh	r7, [r0, #2]
 802200a:	d019      	beq.n	8022040 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 802200c:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8022010:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8022014:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022018:	fb08 f807 	mul.w	r8, r8, r7
 802201c:	fb0a fc0c 	mul.w	ip, sl, ip
 8022020:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8022024:	f108 0b20 	add.w	fp, r8, #32
 8022028:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 802202c:	44bc      	add	ip, r7
 802202e:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8022032:	0a3f      	lsrs	r7, r7, #8
 8022034:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8022038:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802203c:	ea4c 0707 	orr.w	r7, ip, r7
 8022040:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8022044:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8022048:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 802204c:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8022050:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022054:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8022058:	ea4c 0909 	orr.w	r9, ip, r9
 802205c:	ea4a 0707 	orr.w	r7, sl, r7
 8022060:	2d00      	cmp	r5, #0
 8022062:	f000 808b 	beq.w	802217c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 8022066:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 802206a:	3901      	subs	r1, #1
 802206c:	0049      	lsls	r1, r1, #1
 802206e:	3102      	adds	r1, #2
 8022070:	eb00 0c01 	add.w	ip, r0, r1
 8022074:	5a41      	ldrh	r1, [r0, r1]
 8022076:	980c      	ldr	r0, [sp, #48]	; 0x30
 8022078:	28ff      	cmp	r0, #255	; 0xff
 802207a:	d019      	beq.n	80220b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 802207c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 802207e:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8022082:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022086:	fb04 fa01 	mul.w	sl, r4, r1
 802208a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802208e:	fb08 f800 	mul.w	r8, r8, r0
 8022092:	f10a 0020 	add.w	r0, sl, #32
 8022096:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 802209a:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 802209e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80220a2:	4441      	add	r1, r8
 80220a4:	0a00      	lsrs	r0, r0, #8
 80220a6:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 80220aa:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80220ae:	4301      	orrs	r1, r0
 80220b0:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80220b2:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 80220b6:	2cff      	cmp	r4, #255	; 0xff
 80220b8:	d01a      	beq.n	80220f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 80220ba:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 80220be:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80220c2:	fb04 fa00 	mul.w	sl, r4, r0
 80220c6:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80220ca:	fb08 f80c 	mul.w	r8, r8, ip
 80220ce:	f10a 0c20 	add.w	ip, sl, #32
 80220d2:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 80220d6:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 80220da:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80220de:	4440      	add	r0, r8
 80220e0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80220e4:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 80220e8:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80220ec:	ea40 000c 	orr.w	r0, r0, ip
 80220f0:	fb15 fc02 	smulbb	ip, r5, r2
 80220f4:	ea4f 0cec 	mov.w	ip, ip, asr #3
 80220f8:	f1c5 0810 	rsb	r8, r5, #16
 80220fc:	eba8 0802 	sub.w	r8, r8, r2
 8022100:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8022104:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8022108:	437a      	muls	r2, r7
 802210a:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 802210e:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8022112:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022116:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802211a:	fb09 2208 	mla	r2, r9, r8, r2
 802211e:	ea4a 0101 	orr.w	r1, sl, r1
 8022122:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8022126:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802212a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802212e:	fb05 2201 	mla	r2, r5, r1, r2
 8022132:	ea4b 0000 	orr.w	r0, fp, r0
 8022136:	fb0c 2200 	mla	r2, ip, r0, r2
 802213a:	0d57      	lsrs	r7, r2, #21
 802213c:	0952      	lsrs	r2, r2, #5
 802213e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022142:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022146:	433a      	orrs	r2, r7
 8022148:	2bff      	cmp	r3, #255	; 0xff
 802214a:	b292      	uxth	r2, r2
 802214c:	d127      	bne.n	802219e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 802214e:	f8ae 2000 	strh.w	r2, [lr]
 8022152:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8022154:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8022156:	4413      	add	r3, r2
 8022158:	931d      	str	r3, [sp, #116]	; 0x74
 802215a:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 802215c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802215e:	441a      	add	r2, r3
 8022160:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8022162:	921e      	str	r2, [sp, #120]	; 0x78
 8022164:	3b01      	subs	r3, #1
 8022166:	f10e 0e02 	add.w	lr, lr, #2
 802216a:	930f      	str	r3, [sp, #60]	; 0x3c
 802216c:	e627      	b.n	8021dbe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802216e:	fb08 f000 	mul.w	r0, r8, r0
 8022172:	fb09 0303 	mla	r3, r9, r3, r0
 8022176:	e71b      	b.n	8021fb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 8022178:	46b9      	mov	r9, r7
 802217a:	e743      	b.n	8022004 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 802217c:	f1c2 0110 	rsb	r1, r2, #16
 8022180:	437a      	muls	r2, r7
 8022182:	fb09 2901 	mla	r9, r9, r1, r2
 8022186:	ea4f 0949 	mov.w	r9, r9, lsl #1
 802218a:	ea4f 5059 	mov.w	r0, r9, lsr #21
 802218e:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8022192:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022196:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802219a:	4302      	orrs	r2, r0
 802219c:	e7d4      	b.n	8022148 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 802219e:	f8be 7000 	ldrh.w	r7, [lr]
 80221a2:	4c1c      	ldr	r4, [pc, #112]	; (8022214 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 80221a4:	43db      	mvns	r3, r3
 80221a6:	1238      	asrs	r0, r7, #8
 80221a8:	fa5f fc83 	uxtb.w	ip, r3
 80221ac:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80221b0:	10fd      	asrs	r5, r7, #3
 80221b2:	fb00 f00c 	mul.w	r0, r0, ip
 80221b6:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80221ba:	fb05 f10c 	mul.w	r1, r5, ip
 80221be:	1c45      	adds	r5, r0, #1
 80221c0:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 80221c4:	1215      	asrs	r5, r2, #8
 80221c6:	f025 0507 	bic.w	r5, r5, #7
 80221ca:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 80221ce:	1c4d      	adds	r5, r1, #1
 80221d0:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 80221d4:	10d1      	asrs	r1, r2, #3
 80221d6:	f021 0103 	bic.w	r1, r1, #3
 80221da:	00fb      	lsls	r3, r7, #3
 80221dc:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 80221e0:	b2db      	uxtb	r3, r3
 80221e2:	b2c0      	uxtb	r0, r0
 80221e4:	00c9      	lsls	r1, r1, #3
 80221e6:	fb03 f30c 	mul.w	r3, r3, ip
 80221ea:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80221ee:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 80221f2:	4308      	orrs	r0, r1
 80221f4:	1c59      	adds	r1, r3, #1
 80221f6:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80221fa:	00d2      	lsls	r2, r2, #3
 80221fc:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8022200:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8022204:	4318      	orrs	r0, r3
 8022206:	f8ae 0000 	strh.w	r0, [lr]
 802220a:	e7a2      	b.n	8022152 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 802220c:	b013      	add	sp, #76	; 0x4c
 802220e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022212:	bf00      	nop
 8022214:	fffff800 	.word	0xfffff800

08022218 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 8022218:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802221c:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 8022220:	fb05 4c03 	mla	ip, r5, r3, r4
 8022224:	2d00      	cmp	r5, #0
 8022226:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 802222a:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 802222e:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8022232:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 8022236:	8808      	ldrh	r0, [r1, #0]
 8022238:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 802223c:	f2c0 80a7 	blt.w	802238e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8022240:	45aa      	cmp	sl, r5
 8022242:	f340 80a4 	ble.w	802238e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8022246:	2c00      	cmp	r4, #0
 8022248:	f2c0 809f 	blt.w	802238a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 802224c:	42a3      	cmp	r3, r4
 802224e:	f340 809c 	ble.w	802238a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8022252:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 8022256:	1c62      	adds	r2, r4, #1
 8022258:	f100 809c 	bmi.w	8022394 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 802225c:	4293      	cmp	r3, r2
 802225e:	f340 8099 	ble.w	8022394 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8022262:	f1b9 0f00 	cmp.w	r9, #0
 8022266:	f000 8095 	beq.w	8022394 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 802226a:	f8be c002 	ldrh.w	ip, [lr, #2]
 802226e:	3501      	adds	r5, #1
 8022270:	f100 8094 	bmi.w	802239c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8022274:	45aa      	cmp	sl, r5
 8022276:	f340 8091 	ble.w	802239c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 802227a:	2f00      	cmp	r7, #0
 802227c:	f000 808e 	beq.w	802239c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8022280:	2c00      	cmp	r4, #0
 8022282:	f2c0 8089 	blt.w	8022398 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8022286:	42a3      	cmp	r3, r4
 8022288:	f340 8086 	ble.w	8022398 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 802228c:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 8022290:	3401      	adds	r4, #1
 8022292:	f100 8086 	bmi.w	80223a2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8022296:	42a3      	cmp	r3, r4
 8022298:	f340 8083 	ble.w	80223a2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 802229c:	f1b9 0f00 	cmp.w	r9, #0
 80222a0:	d07f      	beq.n	80223a2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 80222a2:	3301      	adds	r3, #1
 80222a4:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 80222a8:	ea4f 4408 	mov.w	r4, r8, lsl #16
 80222ac:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80222b0:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 80222b4:	fb19 fe07 	smulbb	lr, r9, r7
 80222b8:	ea44 0808 	orr.w	r8, r4, r8
 80222bc:	ea4f 440c 	mov.w	r4, ip, lsl #16
 80222c0:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 80222c4:	f1c7 0210 	rsb	r2, r7, #16
 80222c8:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80222cc:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80222d0:	ea44 0c0c 	orr.w	ip, r4, ip
 80222d4:	eba2 0209 	sub.w	r2, r2, r9
 80222d8:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 80222dc:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 80222e0:	fb04 f40c 	mul.w	r4, r4, ip
 80222e4:	fb02 4808 	mla	r8, r2, r8, r4
 80222e8:	041a      	lsls	r2, r3, #16
 80222ea:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80222ee:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80222f2:	4313      	orrs	r3, r2
 80222f4:	042a      	lsls	r2, r5, #16
 80222f6:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80222fa:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80222fe:	fb0e 8303 	mla	r3, lr, r3, r8
 8022302:	432a      	orrs	r2, r5
 8022304:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8022308:	fb07 3202 	mla	r2, r7, r2, r3
 802230c:	0d53      	lsrs	r3, r2, #21
 802230e:	0952      	lsrs	r2, r2, #5
 8022310:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022314:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022318:	431a      	orrs	r2, r3
 802231a:	b293      	uxth	r3, r2
 802231c:	b2b4      	uxth	r4, r6
 802231e:	1202      	asrs	r2, r0, #8
 8022320:	43f6      	mvns	r6, r6
 8022322:	b2f6      	uxtb	r6, r6
 8022324:	121d      	asrs	r5, r3, #8
 8022326:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 802232a:	fb12 f206 	smulbb	r2, r2, r6
 802232e:	10c7      	asrs	r7, r0, #3
 8022330:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8022334:	00c0      	lsls	r0, r0, #3
 8022336:	fb05 2504 	mla	r5, r5, r4, r2
 802233a:	b2c0      	uxtb	r0, r0
 802233c:	10da      	asrs	r2, r3, #3
 802233e:	00db      	lsls	r3, r3, #3
 8022340:	b2db      	uxtb	r3, r3
 8022342:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8022346:	fb10 f006 	smulbb	r0, r0, r6
 802234a:	b2ad      	uxth	r5, r5
 802234c:	fb03 0004 	mla	r0, r3, r4, r0
 8022350:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8022354:	fb17 f706 	smulbb	r7, r7, r6
 8022358:	b280      	uxth	r0, r0
 802235a:	1c6b      	adds	r3, r5, #1
 802235c:	fb02 7204 	mla	r2, r2, r4, r7
 8022360:	b292      	uxth	r2, r2
 8022362:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8022366:	1c43      	adds	r3, r0, #1
 8022368:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 802236c:	1c50      	adds	r0, r2, #1
 802236e:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8022372:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8022376:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802237a:	0952      	lsrs	r2, r2, #5
 802237c:	432b      	orrs	r3, r5
 802237e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022382:	4313      	orrs	r3, r2
 8022384:	800b      	strh	r3, [r1, #0]
 8022386:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802238a:	4680      	mov	r8, r0
 802238c:	e763      	b.n	8022256 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 802238e:	4684      	mov	ip, r0
 8022390:	4680      	mov	r8, r0
 8022392:	e76c      	b.n	802226e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8022394:	4684      	mov	ip, r0
 8022396:	e76a      	b.n	802226e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8022398:	4605      	mov	r5, r0
 802239a:	e779      	b.n	8022290 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 802239c:	4603      	mov	r3, r0
 802239e:	4605      	mov	r5, r0
 80223a0:	e782      	b.n	80222a8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 80223a2:	4603      	mov	r3, r0
 80223a4:	e780      	b.n	80222a8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

080223a6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80223a6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80223aa:	b093      	sub	sp, #76	; 0x4c
 80223ac:	461d      	mov	r5, r3
 80223ae:	9210      	str	r2, [sp, #64]	; 0x40
 80223b0:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80223b2:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 80223b6:	920b      	str	r2, [sp, #44]	; 0x2c
 80223b8:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 80223bc:	910a      	str	r1, [sp, #40]	; 0x28
 80223be:	6859      	ldr	r1, [r3, #4]
 80223c0:	681b      	ldr	r3, [r3, #0]
 80223c2:	9011      	str	r0, [sp, #68]	; 0x44
 80223c4:	fb01 2707 	mla	r7, r1, r7, r2
 80223c8:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 80223cc:	9307      	str	r3, [sp, #28]
 80223ce:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80223d0:	681b      	ldr	r3, [r3, #0]
 80223d2:	9309      	str	r3, [sp, #36]	; 0x24
 80223d4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80223d6:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 80223da:	43db      	mvns	r3, r3
 80223dc:	b2db      	uxtb	r3, r3
 80223de:	9308      	str	r3, [sp, #32]
 80223e0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80223e2:	2b00      	cmp	r3, #0
 80223e4:	dc03      	bgt.n	80223ee <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80223e6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80223e8:	2b00      	cmp	r3, #0
 80223ea:	f340 8203 	ble.w	80227f4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80223ee:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80223f0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80223f4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80223f8:	1e48      	subs	r0, r1, #1
 80223fa:	f102 3cff 	add.w	ip, r2, #4294967295
 80223fe:	2d00      	cmp	r5, #0
 8022400:	f340 80da 	ble.w	80225b8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8022404:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8022408:	ea4f 4326 	mov.w	r3, r6, asr #16
 802240c:	d406      	bmi.n	802241c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 802240e:	4586      	cmp	lr, r0
 8022410:	da04      	bge.n	802241c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8022412:	2b00      	cmp	r3, #0
 8022414:	db02      	blt.n	802241c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8022416:	4563      	cmp	r3, ip
 8022418:	f2c0 80cf 	blt.w	80225ba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 802241c:	f11e 0e01 	adds.w	lr, lr, #1
 8022420:	f100 80c1 	bmi.w	80225a6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8022424:	4571      	cmp	r1, lr
 8022426:	f2c0 80be 	blt.w	80225a6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 802242a:	3301      	adds	r3, #1
 802242c:	f100 80bb 	bmi.w	80225a6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8022430:	429a      	cmp	r2, r3
 8022432:	f2c0 80b8 	blt.w	80225a6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8022436:	f8dd 801c 	ldr.w	r8, [sp, #28]
 802243a:	46a9      	mov	r9, r5
 802243c:	f1b9 0f00 	cmp.w	r9, #0
 8022440:	f340 80d8 	ble.w	80225f4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8022444:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022446:	1421      	asrs	r1, r4, #16
 8022448:	ea4f 4026 	mov.w	r0, r6, asr #16
 802244c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8022450:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8022454:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8022458:	f100 8111 	bmi.w	802267e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 802245c:	f10e 3aff 	add.w	sl, lr, #4294967295
 8022460:	4551      	cmp	r1, sl
 8022462:	f280 810c 	bge.w	802267e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8022466:	2800      	cmp	r0, #0
 8022468:	f2c0 8109 	blt.w	802267e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 802246c:	f103 3aff 	add.w	sl, r3, #4294967295
 8022470:	4550      	cmp	r0, sl
 8022472:	f280 8104 	bge.w	802267e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8022476:	fa0f f38e 	sxth.w	r3, lr
 802247a:	fb00 1103 	mla	r1, r0, r3, r1
 802247e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8022480:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 8022484:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 8022488:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 802248c:	f1bc 0f00 	cmp.w	ip, #0
 8022490:	d007      	beq.n	80224a2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 8022492:	005b      	lsls	r3, r3, #1
 8022494:	eb0a 0003 	add.w	r0, sl, r3
 8022498:	f83a 3003 	ldrh.w	r3, [sl, r3]
 802249c:	930c      	str	r3, [sp, #48]	; 0x30
 802249e:	8843      	ldrh	r3, [r0, #2]
 80224a0:	930d      	str	r3, [sp, #52]	; 0x34
 80224a2:	ea4f 400e 	mov.w	r0, lr, lsl #16
 80224a6:	fb12 f30c 	smulbb	r3, r2, ip
 80224aa:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80224ae:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80224b2:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80224b6:	10db      	asrs	r3, r3, #3
 80224b8:	ea40 000e 	orr.w	r0, r0, lr
 80224bc:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80224c0:	f1cc 0e10 	rsb	lr, ip, #16
 80224c4:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80224c8:	ebae 0e02 	sub.w	lr, lr, r2
 80224cc:	ea4a 0101 	orr.w	r1, sl, r1
 80224d0:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80224d4:	4351      	muls	r1, r2
 80224d6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80224d8:	9f08      	ldr	r7, [sp, #32]
 80224da:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 80224de:	fb0e 1e00 	mla	lr, lr, r0, r1
 80224e2:	0410      	lsls	r0, r2, #16
 80224e4:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80224e8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80224ec:	4310      	orrs	r0, r2
 80224ee:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80224f0:	990c      	ldr	r1, [sp, #48]	; 0x30
 80224f2:	0412      	lsls	r2, r2, #16
 80224f4:	fb03 e000 	mla	r0, r3, r0, lr
 80224f8:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80224fc:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8022500:	ea42 020e 	orr.w	r2, r2, lr
 8022504:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8022508:	fb03 0302 	mla	r3, r3, r2, r0
 802250c:	0d5a      	lsrs	r2, r3, #21
 802250e:	095b      	lsrs	r3, r3, #5
 8022510:	f8b8 0000 	ldrh.w	r0, [r8]
 8022514:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022518:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 802251c:	4313      	orrs	r3, r2
 802251e:	b29b      	uxth	r3, r3
 8022520:	1201      	asrs	r1, r0, #8
 8022522:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8022526:	ea4f 2c23 	mov.w	ip, r3, asr #8
 802252a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 802252e:	fb11 f107 	smulbb	r1, r1, r7
 8022532:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8022536:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 802253a:	00c0      	lsls	r0, r0, #3
 802253c:	fb0c 1c02 	mla	ip, ip, r2, r1
 8022540:	b2c0      	uxtb	r0, r0
 8022542:	10d9      	asrs	r1, r3, #3
 8022544:	00db      	lsls	r3, r3, #3
 8022546:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 802254a:	b2db      	uxtb	r3, r3
 802254c:	fb10 f007 	smulbb	r0, r0, r7
 8022550:	fa1f fc8c 	uxth.w	ip, ip
 8022554:	fb03 0302 	mla	r3, r3, r2, r0
 8022558:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 802255c:	fb1e fe07 	smulbb	lr, lr, r7
 8022560:	fb01 e102 	mla	r1, r1, r2, lr
 8022564:	b29a      	uxth	r2, r3
 8022566:	f10c 0301 	add.w	r3, ip, #1
 802256a:	b289      	uxth	r1, r1
 802256c:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8022570:	1c53      	adds	r3, r2, #1
 8022572:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022576:	1c4a      	adds	r2, r1, #1
 8022578:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 802257c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8022580:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022584:	0949      	lsrs	r1, r1, #5
 8022586:	ea43 030c 	orr.w	r3, r3, ip
 802258a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802258e:	430b      	orrs	r3, r1
 8022590:	f8a8 3000 	strh.w	r3, [r8]
 8022594:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8022596:	441c      	add	r4, r3
 8022598:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802259a:	f108 0802 	add.w	r8, r8, #2
 802259e:	441e      	add	r6, r3
 80225a0:	f109 39ff 	add.w	r9, r9, #4294967295
 80225a4:	e74a      	b.n	802243c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80225a6:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80225a8:	441c      	add	r4, r3
 80225aa:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80225ac:	441e      	add	r6, r3
 80225ae:	9b07      	ldr	r3, [sp, #28]
 80225b0:	3302      	adds	r3, #2
 80225b2:	3d01      	subs	r5, #1
 80225b4:	9307      	str	r3, [sp, #28]
 80225b6:	e722      	b.n	80223fe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80225b8:	d022      	beq.n	8022600 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 80225ba:	981f      	ldr	r0, [sp, #124]	; 0x7c
 80225bc:	1e6b      	subs	r3, r5, #1
 80225be:	fb00 4003 	mla	r0, r0, r3, r4
 80225c2:	1400      	asrs	r0, r0, #16
 80225c4:	f53f af37 	bmi.w	8022436 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80225c8:	3901      	subs	r1, #1
 80225ca:	4288      	cmp	r0, r1
 80225cc:	f6bf af33 	bge.w	8022436 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80225d0:	9920      	ldr	r1, [sp, #128]	; 0x80
 80225d2:	fb01 6303 	mla	r3, r1, r3, r6
 80225d6:	141b      	asrs	r3, r3, #16
 80225d8:	f53f af2d 	bmi.w	8022436 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80225dc:	3a01      	subs	r2, #1
 80225de:	4293      	cmp	r3, r2
 80225e0:	f6bf af29 	bge.w	8022436 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80225e4:	f8dd 901c 	ldr.w	r9, [sp, #28]
 80225e8:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 80225ec:	46a8      	mov	r8, r5
 80225ee:	f1b8 0f00 	cmp.w	r8, #0
 80225f2:	dc5e      	bgt.n	80226b2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 80225f4:	9b07      	ldr	r3, [sp, #28]
 80225f6:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80225fa:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 80225fe:	9307      	str	r3, [sp, #28]
 8022600:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022602:	2b00      	cmp	r3, #0
 8022604:	f340 80f6 	ble.w	80227f4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8022608:	ee30 0a04 	vadd.f32	s0, s0, s8
 802260c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022610:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022614:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022616:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802261a:	ee31 1a05 	vadd.f32	s2, s2, s10
 802261e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022622:	eef0 6a62 	vmov.f32	s13, s5
 8022626:	ee61 7a27 	vmul.f32	s15, s2, s15
 802262a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802262e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022632:	ee16 4a90 	vmov	r4, s13
 8022636:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802263a:	eef0 6a43 	vmov.f32	s13, s6
 802263e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022642:	ee12 2a90 	vmov	r2, s5
 8022646:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802264a:	fb92 f3f3 	sdiv	r3, r2, r3
 802264e:	ee13 2a10 	vmov	r2, s6
 8022652:	931f      	str	r3, [sp, #124]	; 0x7c
 8022654:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022656:	fb92 f3f3 	sdiv	r3, r2, r3
 802265a:	9320      	str	r3, [sp, #128]	; 0x80
 802265c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802265e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8022660:	3b01      	subs	r3, #1
 8022662:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022666:	930a      	str	r3, [sp, #40]	; 0x28
 8022668:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802266a:	ee16 6a90 	vmov	r6, s13
 802266e:	bf14      	ite	ne
 8022670:	461d      	movne	r5, r3
 8022672:	4615      	moveq	r5, r2
 8022674:	eeb0 3a67 	vmov.f32	s6, s15
 8022678:	eef0 2a47 	vmov.f32	s5, s14
 802267c:	e6b0      	b.n	80223e0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 802267e:	f111 0a01 	adds.w	sl, r1, #1
 8022682:	d487      	bmi.n	8022594 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022684:	45d6      	cmp	lr, sl
 8022686:	db85      	blt.n	8022594 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022688:	f110 0a01 	adds.w	sl, r0, #1
 802268c:	d482      	bmi.n	8022594 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 802268e:	4553      	cmp	r3, sl
 8022690:	db80      	blt.n	8022594 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022692:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8022694:	9101      	str	r1, [sp, #4]
 8022696:	b21b      	sxth	r3, r3
 8022698:	e9cd 0202 	strd	r0, r2, [sp, #8]
 802269c:	9300      	str	r3, [sp, #0]
 802269e:	e9cd c704 	strd	ip, r7, [sp, #16]
 80226a2:	fa0f f38e 	sxth.w	r3, lr
 80226a6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80226a8:	9811      	ldr	r0, [sp, #68]	; 0x44
 80226aa:	4641      	mov	r1, r8
 80226ac:	f7ff fdb4 	bl	8022218 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 80226b0:	e770      	b.n	8022594 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80226b2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80226b4:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80226b6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80226ba:	1430      	asrs	r0, r6, #16
 80226bc:	1423      	asrs	r3, r4, #16
 80226be:	fb01 3000 	mla	r0, r1, r0, r3
 80226c2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80226c4:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 80226c8:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 80226cc:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 80226d0:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80226d4:	8858      	ldrh	r0, [r3, #2]
 80226d6:	f1be 0f00 	cmp.w	lr, #0
 80226da:	d00b      	beq.n	80226f4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 80226dc:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 80226e0:	3901      	subs	r1, #1
 80226e2:	0049      	lsls	r1, r1, #1
 80226e4:	3102      	adds	r1, #2
 80226e6:	eb03 0b01 	add.w	fp, r3, r1
 80226ea:	5a5b      	ldrh	r3, [r3, r1]
 80226ec:	930e      	str	r3, [sp, #56]	; 0x38
 80226ee:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 80226f2:	930f      	str	r3, [sp, #60]	; 0x3c
 80226f4:	ea4f 410c 	mov.w	r1, ip, lsl #16
 80226f8:	fb12 f30e 	smulbb	r3, r2, lr
 80226fc:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8022700:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8022704:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 8022708:	10db      	asrs	r3, r3, #3
 802270a:	ea41 010c 	orr.w	r1, r1, ip
 802270e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022712:	f1ce 0c10 	rsb	ip, lr, #16
 8022716:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802271a:	ebac 0c02 	sub.w	ip, ip, r2
 802271e:	ea4b 0000 	orr.w	r0, fp, r0
 8022722:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8022726:	4350      	muls	r0, r2
 8022728:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802272a:	9f08      	ldr	r7, [sp, #32]
 802272c:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8022730:	fb0c 0c01 	mla	ip, ip, r1, r0
 8022734:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8022738:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 802273c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 802273e:	980e      	ldr	r0, [sp, #56]	; 0x38
 8022740:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022744:	0412      	lsls	r2, r2, #16
 8022746:	ea4b 0101 	orr.w	r1, fp, r1
 802274a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802274e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022752:	fb03 c101 	mla	r1, r3, r1, ip
 8022756:	4302      	orrs	r2, r0
 8022758:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 802275c:	fb03 1202 	mla	r2, r3, r2, r1
 8022760:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8022764:	0952      	lsrs	r2, r2, #5
 8022766:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 802276a:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 802276e:	f8b9 2000 	ldrh.w	r2, [r9]
 8022772:	ea4b 0303 	orr.w	r3, fp, r3
 8022776:	b29b      	uxth	r3, r3
 8022778:	1211      	asrs	r1, r2, #8
 802277a:	1218      	asrs	r0, r3, #8
 802277c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8022780:	fb11 f107 	smulbb	r1, r1, r7
 8022784:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8022788:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 802278c:	00d2      	lsls	r2, r2, #3
 802278e:	fb00 100a 	mla	r0, r0, sl, r1
 8022792:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8022796:	10d9      	asrs	r1, r3, #3
 8022798:	b2d2      	uxtb	r2, r2
 802279a:	00db      	lsls	r3, r3, #3
 802279c:	fb1c fc07 	smulbb	ip, ip, r7
 80227a0:	fb12 f207 	smulbb	r2, r2, r7
 80227a4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80227a8:	b2db      	uxtb	r3, r3
 80227aa:	b280      	uxth	r0, r0
 80227ac:	fb01 c10a 	mla	r1, r1, sl, ip
 80227b0:	fb03 230a 	mla	r3, r3, sl, r2
 80227b4:	b29b      	uxth	r3, r3
 80227b6:	b289      	uxth	r1, r1
 80227b8:	1c42      	adds	r2, r0, #1
 80227ba:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80227be:	f101 0c01 	add.w	ip, r1, #1
 80227c2:	1c5a      	adds	r2, r3, #1
 80227c4:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80227c8:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 80227cc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80227ce:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80227d2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80227d6:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80227da:	4310      	orrs	r0, r2
 80227dc:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80227e0:	441c      	add	r4, r3
 80227e2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80227e4:	ea40 000c 	orr.w	r0, r0, ip
 80227e8:	f829 0b02 	strh.w	r0, [r9], #2
 80227ec:	441e      	add	r6, r3
 80227ee:	f108 38ff 	add.w	r8, r8, #4294967295
 80227f2:	e6fc      	b.n	80225ee <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 80227f4:	b013      	add	sp, #76	; 0x4c
 80227f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080227fa <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 80227fa:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80227fe:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 8022802:	fb0e 4703 	mla	r7, lr, r3, r4
 8022806:	f1be 0f00 	cmp.w	lr, #0
 802280a:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 802280e:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 8022812:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 8022816:	8808      	ldrh	r0, [r1, #0]
 8022818:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 802281c:	db60      	blt.n	80228e0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 802281e:	45f1      	cmp	r9, lr
 8022820:	dd5e      	ble.n	80228e0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8022822:	2c00      	cmp	r4, #0
 8022824:	db5a      	blt.n	80228dc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8022826:	42a3      	cmp	r3, r4
 8022828:	dd58      	ble.n	80228dc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 802282a:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 802282e:	1c62      	adds	r2, r4, #1
 8022830:	d459      	bmi.n	80228e6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8022832:	4293      	cmp	r3, r2
 8022834:	dd57      	ble.n	80228e6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8022836:	2d00      	cmp	r5, #0
 8022838:	d055      	beq.n	80228e6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 802283a:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 802283e:	f11e 0e01 	adds.w	lr, lr, #1
 8022842:	d454      	bmi.n	80228ee <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8022844:	45f1      	cmp	r9, lr
 8022846:	dd52      	ble.n	80228ee <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8022848:	2e00      	cmp	r6, #0
 802284a:	d050      	beq.n	80228ee <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 802284c:	2c00      	cmp	r4, #0
 802284e:	db4c      	blt.n	80228ea <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8022850:	42a3      	cmp	r3, r4
 8022852:	dd4a      	ble.n	80228ea <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8022854:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 8022858:	3401      	adds	r4, #1
 802285a:	d405      	bmi.n	8022868 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 802285c:	42a3      	cmp	r3, r4
 802285e:	dd03      	ble.n	8022868 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8022860:	b115      	cbz	r5, 8022868 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8022862:	3301      	adds	r3, #1
 8022864:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 8022868:	ea4f 430c 	mov.w	r3, ip, lsl #16
 802286c:	fb15 f406 	smulbb	r4, r5, r6
 8022870:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022874:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8022878:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 802287c:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8022880:	ea43 0c0c 	orr.w	ip, r3, ip
 8022884:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8022888:	f1c6 0310 	rsb	r3, r6, #16
 802288c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8022890:	1b5b      	subs	r3, r3, r5
 8022892:	ea4e 0707 	orr.w	r7, lr, r7
 8022896:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 802289a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 802289e:	437d      	muls	r5, r7
 80228a0:	fb03 5c0c 	mla	ip, r3, ip, r5
 80228a4:	0403      	lsls	r3, r0, #16
 80228a6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80228aa:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80228ae:	4318      	orrs	r0, r3
 80228b0:	0413      	lsls	r3, r2, #16
 80228b2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80228b6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80228ba:	4313      	orrs	r3, r2
 80228bc:	fb04 c000 	mla	r0, r4, r0, ip
 80228c0:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 80228c4:	fb06 0003 	mla	r0, r6, r3, r0
 80228c8:	0d43      	lsrs	r3, r0, #21
 80228ca:	0940      	lsrs	r0, r0, #5
 80228cc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80228d0:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80228d4:	4318      	orrs	r0, r3
 80228d6:	8008      	strh	r0, [r1, #0]
 80228d8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80228dc:	4684      	mov	ip, r0
 80228de:	e7a6      	b.n	802282e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 80228e0:	4607      	mov	r7, r0
 80228e2:	4684      	mov	ip, r0
 80228e4:	e7ab      	b.n	802283e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 80228e6:	4607      	mov	r7, r0
 80228e8:	e7a9      	b.n	802283e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 80228ea:	4602      	mov	r2, r0
 80228ec:	e7b4      	b.n	8022858 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 80228ee:	4602      	mov	r2, r0
 80228f0:	e7ba      	b.n	8022868 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

080228f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80228f2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80228f6:	b08f      	sub	sp, #60	; 0x3c
 80228f8:	461d      	mov	r5, r3
 80228fa:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80228fc:	920c      	str	r2, [sp, #48]	; 0x30
 80228fe:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 8022902:	9107      	str	r1, [sp, #28]
 8022904:	6859      	ldr	r1, [r3, #4]
 8022906:	681b      	ldr	r3, [r3, #0]
 8022908:	900d      	str	r0, [sp, #52]	; 0x34
 802290a:	fb01 2707 	mla	r7, r1, r7, r2
 802290e:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 8022912:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022914:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 8022918:	f8d3 8000 	ldr.w	r8, [r3]
 802291c:	9b07      	ldr	r3, [sp, #28]
 802291e:	2b00      	cmp	r3, #0
 8022920:	dc03      	bgt.n	802292a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8022922:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022924:	2b00      	cmp	r3, #0
 8022926:	f340 8181 	ble.w	8022c2c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 802292a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802292c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022930:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022934:	1e48      	subs	r0, r1, #1
 8022936:	f102 3cff 	add.w	ip, r2, #4294967295
 802293a:	2d00      	cmp	r5, #0
 802293c:	f340 809b 	ble.w	8022a76 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 8022940:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8022944:	ea4f 4326 	mov.w	r3, r6, asr #16
 8022948:	d406      	bmi.n	8022958 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 802294a:	4586      	cmp	lr, r0
 802294c:	da04      	bge.n	8022958 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 802294e:	2b00      	cmp	r3, #0
 8022950:	db02      	blt.n	8022958 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8022952:	4563      	cmp	r3, ip
 8022954:	f2c0 8090 	blt.w	8022a78 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8022958:	f11e 0e01 	adds.w	lr, lr, #1
 802295c:	f100 8084 	bmi.w	8022a68 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8022960:	4571      	cmp	r1, lr
 8022962:	f2c0 8081 	blt.w	8022a68 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8022966:	3301      	adds	r3, #1
 8022968:	d47e      	bmi.n	8022a68 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 802296a:	429a      	cmp	r2, r3
 802296c:	db7c      	blt.n	8022a68 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 802296e:	46aa      	mov	sl, r5
 8022970:	46b9      	mov	r9, r7
 8022972:	f1ba 0f00 	cmp.w	sl, #0
 8022976:	f340 8099 	ble.w	8022aac <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 802297a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802297c:	1421      	asrs	r1, r4, #16
 802297e:	ea4f 4026 	mov.w	r0, r6, asr #16
 8022982:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8022986:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 802298a:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 802298e:	f100 80d0 	bmi.w	8022b32 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8022992:	f10e 3bff 	add.w	fp, lr, #4294967295
 8022996:	4559      	cmp	r1, fp
 8022998:	f280 80cb 	bge.w	8022b32 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 802299c:	2800      	cmp	r0, #0
 802299e:	f2c0 80c8 	blt.w	8022b32 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 80229a2:	f103 3bff 	add.w	fp, r3, #4294967295
 80229a6:	4558      	cmp	r0, fp
 80229a8:	f280 80c3 	bge.w	8022b32 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 80229ac:	fa0f fe8e 	sxth.w	lr, lr
 80229b0:	fb00 110e 	mla	r1, r0, lr, r1
 80229b4:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 80229b8:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 80229bc:	8841      	ldrh	r1, [r0, #2]
 80229be:	f1bc 0f00 	cmp.w	ip, #0
 80229c2:	d00b      	beq.n	80229dc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 80229c4:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 80229c8:	3b01      	subs	r3, #1
 80229ca:	005b      	lsls	r3, r3, #1
 80229cc:	3302      	adds	r3, #2
 80229ce:	eb00 0e03 	add.w	lr, r0, r3
 80229d2:	5ac3      	ldrh	r3, [r0, r3]
 80229d4:	9308      	str	r3, [sp, #32]
 80229d6:	f8be 3002 	ldrh.w	r3, [lr, #2]
 80229da:	9309      	str	r3, [sp, #36]	; 0x24
 80229dc:	ea4f 400b 	mov.w	r0, fp, lsl #16
 80229e0:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80229e4:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 80229e8:	ea40 000b 	orr.w	r0, r0, fp
 80229ec:	fb12 f30c 	smulbb	r3, r2, ip
 80229f0:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80229f4:	10db      	asrs	r3, r3, #3
 80229f6:	f1cc 0e10 	rsb	lr, ip, #16
 80229fa:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80229fe:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8022a02:	ebae 0e02 	sub.w	lr, lr, r2
 8022a06:	ea4b 0101 	orr.w	r1, fp, r1
 8022a0a:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8022a0e:	4351      	muls	r1, r2
 8022a10:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8022a12:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8022a16:	fb0e 1e00 	mla	lr, lr, r0, r1
 8022a1a:	0410      	lsls	r0, r2, #16
 8022a1c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8022a20:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022a24:	4310      	orrs	r0, r2
 8022a26:	9a08      	ldr	r2, [sp, #32]
 8022a28:	9908      	ldr	r1, [sp, #32]
 8022a2a:	0412      	lsls	r2, r2, #16
 8022a2c:	fb03 e000 	mla	r0, r3, r0, lr
 8022a30:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022a34:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8022a38:	ea42 020e 	orr.w	r2, r2, lr
 8022a3c:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8022a40:	fb03 0302 	mla	r3, r3, r2, r0
 8022a44:	0d5a      	lsrs	r2, r3, #21
 8022a46:	095b      	lsrs	r3, r3, #5
 8022a48:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022a4c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022a50:	4313      	orrs	r3, r2
 8022a52:	f8a9 3000 	strh.w	r3, [r9]
 8022a56:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8022a58:	441c      	add	r4, r3
 8022a5a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022a5c:	f109 0902 	add.w	r9, r9, #2
 8022a60:	441e      	add	r6, r3
 8022a62:	f10a 3aff 	add.w	sl, sl, #4294967295
 8022a66:	e784      	b.n	8022972 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8022a68:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8022a6a:	441c      	add	r4, r3
 8022a6c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022a6e:	3d01      	subs	r5, #1
 8022a70:	441e      	add	r6, r3
 8022a72:	3702      	adds	r7, #2
 8022a74:	e761      	b.n	802293a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8022a76:	d01d      	beq.n	8022ab4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8022a78:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8022a7a:	1e6b      	subs	r3, r5, #1
 8022a7c:	fb00 4003 	mla	r0, r0, r3, r4
 8022a80:	1400      	asrs	r0, r0, #16
 8022a82:	f53f af74 	bmi.w	802296e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8022a86:	3901      	subs	r1, #1
 8022a88:	4288      	cmp	r0, r1
 8022a8a:	f6bf af70 	bge.w	802296e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8022a8e:	991c      	ldr	r1, [sp, #112]	; 0x70
 8022a90:	fb01 6303 	mla	r3, r1, r3, r6
 8022a94:	141b      	asrs	r3, r3, #16
 8022a96:	f53f af6a 	bmi.w	802296e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8022a9a:	3a01      	subs	r2, #1
 8022a9c:	4293      	cmp	r3, r2
 8022a9e:	f6bf af66 	bge.w	802296e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8022aa2:	46a9      	mov	r9, r5
 8022aa4:	46ba      	mov	sl, r7
 8022aa6:	f1b9 0f00 	cmp.w	r9, #0
 8022aaa:	dc5a      	bgt.n	8022b62 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 8022aac:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8022ab0:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 8022ab4:	9b07      	ldr	r3, [sp, #28]
 8022ab6:	2b00      	cmp	r3, #0
 8022ab8:	f340 80b8 	ble.w	8022c2c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8022abc:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022ac0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022ac4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022ac8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8022aca:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022ace:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022ad2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022ad6:	eef0 6a62 	vmov.f32	s13, s5
 8022ada:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022ade:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022ae2:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022ae6:	ee16 4a90 	vmov	r4, s13
 8022aea:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022aee:	eef0 6a43 	vmov.f32	s13, s6
 8022af2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022af6:	ee12 2a90 	vmov	r2, s5
 8022afa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022afe:	fb92 f3f3 	sdiv	r3, r2, r3
 8022b02:	ee13 2a10 	vmov	r2, s6
 8022b06:	931b      	str	r3, [sp, #108]	; 0x6c
 8022b08:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8022b0a:	fb92 f3f3 	sdiv	r3, r2, r3
 8022b0e:	931c      	str	r3, [sp, #112]	; 0x70
 8022b10:	9b07      	ldr	r3, [sp, #28]
 8022b12:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8022b14:	3b01      	subs	r3, #1
 8022b16:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022b1a:	9307      	str	r3, [sp, #28]
 8022b1c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8022b1e:	ee16 6a90 	vmov	r6, s13
 8022b22:	bf14      	ite	ne
 8022b24:	461d      	movne	r5, r3
 8022b26:	4615      	moveq	r5, r2
 8022b28:	eeb0 3a67 	vmov.f32	s6, s15
 8022b2c:	eef0 2a47 	vmov.f32	s5, s14
 8022b30:	e6f4      	b.n	802291c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8022b32:	f111 0b01 	adds.w	fp, r1, #1
 8022b36:	d48e      	bmi.n	8022a56 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8022b38:	45de      	cmp	lr, fp
 8022b3a:	db8c      	blt.n	8022a56 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8022b3c:	f110 0b01 	adds.w	fp, r0, #1
 8022b40:	d489      	bmi.n	8022a56 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8022b42:	455b      	cmp	r3, fp
 8022b44:	db87      	blt.n	8022a56 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8022b46:	b21b      	sxth	r3, r3
 8022b48:	e9cd 1001 	strd	r1, r0, [sp, #4]
 8022b4c:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 8022b50:	9300      	str	r3, [sp, #0]
 8022b52:	4642      	mov	r2, r8
 8022b54:	fa0f f38e 	sxth.w	r3, lr
 8022b58:	4649      	mov	r1, r9
 8022b5a:	980d      	ldr	r0, [sp, #52]	; 0x34
 8022b5c:	f7ff fe4d 	bl	80227fa <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8022b60:	e779      	b.n	8022a56 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8022b62:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022b64:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8022b68:	1420      	asrs	r0, r4, #16
 8022b6a:	1431      	asrs	r1, r6, #16
 8022b6c:	fb03 0101 	mla	r1, r3, r1, r0
 8022b70:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8022b74:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8022b78:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 8022b7c:	8841      	ldrh	r1, [r0, #2]
 8022b7e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8022b82:	f1be 0f00 	cmp.w	lr, #0
 8022b86:	d00b      	beq.n	8022ba0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8022b88:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8022b8c:	3b01      	subs	r3, #1
 8022b8e:	005b      	lsls	r3, r3, #1
 8022b90:	3302      	adds	r3, #2
 8022b92:	eb00 0b03 	add.w	fp, r0, r3
 8022b96:	5ac3      	ldrh	r3, [r0, r3]
 8022b98:	930a      	str	r3, [sp, #40]	; 0x28
 8022b9a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8022b9e:	930b      	str	r3, [sp, #44]	; 0x2c
 8022ba0:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8022ba4:	fb12 f30e 	smulbb	r3, r2, lr
 8022ba8:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8022bac:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8022bb0:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8022bb4:	10db      	asrs	r3, r3, #3
 8022bb6:	ea40 000c 	orr.w	r0, r0, ip
 8022bba:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022bbe:	f1ce 0c10 	rsb	ip, lr, #16
 8022bc2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8022bc6:	ebac 0c02 	sub.w	ip, ip, r2
 8022bca:	ea4b 0101 	orr.w	r1, fp, r1
 8022bce:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8022bd2:	4351      	muls	r1, r2
 8022bd4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8022bd6:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8022bda:	fb0c 1c00 	mla	ip, ip, r0, r1
 8022bde:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8022be2:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 8022be6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8022be8:	990a      	ldr	r1, [sp, #40]	; 0x28
 8022bea:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022bee:	0412      	lsls	r2, r2, #16
 8022bf0:	ea4b 0000 	orr.w	r0, fp, r0
 8022bf4:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022bf8:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 8022bfc:	fb03 c000 	mla	r0, r3, r0, ip
 8022c00:	ea42 0b0b 	orr.w	fp, r2, fp
 8022c04:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8022c08:	fb03 000b 	mla	r0, r3, fp, r0
 8022c0c:	0d43      	lsrs	r3, r0, #21
 8022c0e:	0940      	lsrs	r0, r0, #5
 8022c10:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022c14:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022c18:	4318      	orrs	r0, r3
 8022c1a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8022c1c:	f82a 0b02 	strh.w	r0, [sl], #2
 8022c20:	441c      	add	r4, r3
 8022c22:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022c24:	f109 39ff 	add.w	r9, r9, #4294967295
 8022c28:	441e      	add	r6, r3
 8022c2a:	e73c      	b.n	8022aa6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8022c2c:	b00f      	add	sp, #60	; 0x3c
 8022c2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08022c32 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 8022c32:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022c36:	b085      	sub	sp, #20
 8022c38:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8022c3c:	9102      	str	r1, [sp, #8]
 8022c3e:	2c00      	cmp	r4, #0
 8022c40:	fb04 7103 	mla	r1, r4, r3, r7
 8022c44:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8022c48:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8022c4c:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8022c50:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8022c54:	f2c0 811b 	blt.w	8022e8e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8022c58:	45a6      	cmp	lr, r4
 8022c5a:	f340 8118 	ble.w	8022e8e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8022c5e:	2f00      	cmp	r7, #0
 8022c60:	f2c0 8113 	blt.w	8022e8a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8022c64:	42bb      	cmp	r3, r7
 8022c66:	f340 8110 	ble.w	8022e8a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8022c6a:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8022c6e:	1c7a      	adds	r2, r7, #1
 8022c70:	f100 8110 	bmi.w	8022e94 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8022c74:	4293      	cmp	r3, r2
 8022c76:	f340 810d 	ble.w	8022e94 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8022c7a:	2e00      	cmp	r6, #0
 8022c7c:	f000 810c 	beq.w	8022e98 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 8022c80:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8022c84:	3401      	adds	r4, #1
 8022c86:	f100 810b 	bmi.w	8022ea0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8022c8a:	45a6      	cmp	lr, r4
 8022c8c:	f340 8108 	ble.w	8022ea0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8022c90:	2800      	cmp	r0, #0
 8022c92:	f000 8108 	beq.w	8022ea6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 8022c96:	2f00      	cmp	r7, #0
 8022c98:	f2c0 8100 	blt.w	8022e9c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8022c9c:	42bb      	cmp	r3, r7
 8022c9e:	f340 80fd 	ble.w	8022e9c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8022ca2:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8022ca6:	3701      	adds	r7, #1
 8022ca8:	f100 8100 	bmi.w	8022eac <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8022cac:	42bb      	cmp	r3, r7
 8022cae:	f340 80fd 	ble.w	8022eac <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8022cb2:	2e00      	cmp	r6, #0
 8022cb4:	f000 80fc 	beq.w	8022eb0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 8022cb8:	3301      	adds	r3, #1
 8022cba:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 8022cbe:	b2b6      	uxth	r6, r6
 8022cc0:	b280      	uxth	r0, r0
 8022cc2:	fb00 fe06 	mul.w	lr, r0, r6
 8022cc6:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8022cca:	0136      	lsls	r6, r6, #4
 8022ccc:	eba6 070e 	sub.w	r7, r6, lr
 8022cd0:	b280      	uxth	r0, r0
 8022cd2:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8022cd6:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8022cda:	b2bf      	uxth	r7, r7
 8022cdc:	1a1b      	subs	r3, r3, r0
 8022cde:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8022ce2:	b29b      	uxth	r3, r3
 8022ce4:	fb0a f607 	mul.w	r6, sl, r7
 8022ce8:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8022cec:	fb0b 6603 	mla	r6, fp, r3, r6
 8022cf0:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8022cf4:	fb00 6609 	mla	r6, r0, r9, r6
 8022cf8:	fb0e 6608 	mla	r6, lr, r8, r6
 8022cfc:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8022d00:	9600      	str	r6, [sp, #0]
 8022d02:	2e00      	cmp	r6, #0
 8022d04:	f000 80be 	beq.w	8022e84 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 8022d08:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8022d0c:	fb0b fc0c 	mul.w	ip, fp, ip
 8022d10:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8022d14:	fb0b f505 	mul.w	r5, fp, r5
 8022d18:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8022d1c:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8022d20:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8022d24:	44dc      	add	ip, fp
 8022d26:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022d2a:	9501      	str	r5, [sp, #4]
 8022d2c:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8022d30:	9503      	str	r5, [sp, #12]
 8022d32:	9d01      	ldr	r5, [sp, #4]
 8022d34:	9e02      	ldr	r6, [sp, #8]
 8022d36:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8022d3a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8022d3e:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8022d42:	fb0a fc0c 	mul.w	ip, sl, ip
 8022d46:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8022d4a:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8022d4e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8022d52:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8022d56:	4465      	add	r5, ip
 8022d58:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8022d5c:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8022d60:	fb09 fc0c 	mul.w	ip, r9, ip
 8022d64:	fb09 f904 	mul.w	r9, r9, r4
 8022d68:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8022d6c:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8022d70:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8022d74:	fb08 f404 	mul.w	r4, r8, r4
 8022d78:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8022d7c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8022d80:	fb08 f802 	mul.w	r8, r8, r2
 8022d84:	fb0a fa01 	mul.w	sl, sl, r1
 8022d88:	0a22      	lsrs	r2, r4, #8
 8022d8a:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8022d8e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8022d92:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8022d96:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8022d9a:	4414      	add	r4, r2
 8022d9c:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8022da0:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8022da4:	0a2d      	lsrs	r5, r5, #8
 8022da6:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8022daa:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8022dae:	9a03      	ldr	r2, [sp, #12]
 8022db0:	8836      	ldrh	r6, [r6, #0]
 8022db2:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8022db6:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8022dba:	437d      	muls	r5, r7
 8022dbc:	4461      	add	r1, ip
 8022dbe:	0a24      	lsrs	r4, r4, #8
 8022dc0:	fb02 5503 	mla	r5, r2, r3, r5
 8022dc4:	0a09      	lsrs	r1, r1, #8
 8022dc6:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8022dca:	fb04 540e 	mla	r4, r4, lr, r5
 8022dce:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8022dd2:	fb01 4100 	mla	r1, r1, r0, r4
 8022dd6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022dda:	0a09      	lsrs	r1, r1, #8
 8022ddc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022de0:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8022de4:	fb07 f70a 	mul.w	r7, r7, sl
 8022de8:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8022dec:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8022df0:	fb03 7101 	mla	r1, r3, r1, r7
 8022df4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8022df8:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8022dfc:	fb0e 1e08 	mla	lr, lr, r8, r1
 8022e00:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8022e04:	fb00 e101 	mla	r1, r0, r1, lr
 8022e08:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 8022e0c:	9a00      	ldr	r2, [sp, #0]
 8022e0e:	b287      	uxth	r7, r0
 8022e10:	437a      	muls	r2, r7
 8022e12:	0a09      	lsrs	r1, r1, #8
 8022e14:	1c53      	adds	r3, r2, #1
 8022e16:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8022e1a:	4321      	orrs	r1, r4
 8022e1c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022e20:	1235      	asrs	r5, r6, #8
 8022e22:	0c0a      	lsrs	r2, r1, #16
 8022e24:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8022e28:	b2db      	uxtb	r3, r3
 8022e2a:	fb12 f207 	smulbb	r2, r2, r7
 8022e2e:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8022e32:	fb05 2503 	mla	r5, r5, r3, r2
 8022e36:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8022e3a:	10f2      	asrs	r2, r6, #3
 8022e3c:	b2c8      	uxtb	r0, r1
 8022e3e:	00f6      	lsls	r6, r6, #3
 8022e40:	fb14 f407 	smulbb	r4, r4, r7
 8022e44:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8022e48:	b2f6      	uxtb	r6, r6
 8022e4a:	fb10 f007 	smulbb	r0, r0, r7
 8022e4e:	fb02 4203 	mla	r2, r2, r3, r4
 8022e52:	b2ad      	uxth	r5, r5
 8022e54:	fb06 0303 	mla	r3, r6, r3, r0
 8022e58:	b299      	uxth	r1, r3
 8022e5a:	b294      	uxth	r4, r2
 8022e5c:	1c6b      	adds	r3, r5, #1
 8022e5e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8022e62:	1c62      	adds	r2, r4, #1
 8022e64:	1c4b      	adds	r3, r1, #1
 8022e66:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8022e6a:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8022e6e:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8022e72:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022e76:	0952      	lsrs	r2, r2, #5
 8022e78:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022e7c:	432b      	orrs	r3, r5
 8022e7e:	4313      	orrs	r3, r2
 8022e80:	9a02      	ldr	r2, [sp, #8]
 8022e82:	8013      	strh	r3, [r2, #0]
 8022e84:	b005      	add	sp, #20
 8022e86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022e8a:	2500      	movs	r5, #0
 8022e8c:	e6ef      	b.n	8022c6e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 8022e8e:	2100      	movs	r1, #0
 8022e90:	460d      	mov	r5, r1
 8022e92:	e6f7      	b.n	8022c84 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8022e94:	2100      	movs	r1, #0
 8022e96:	e6f5      	b.n	8022c84 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8022e98:	4631      	mov	r1, r6
 8022e9a:	e6f3      	b.n	8022c84 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8022e9c:	2400      	movs	r4, #0
 8022e9e:	e702      	b.n	8022ca6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 8022ea0:	2200      	movs	r2, #0
 8022ea2:	4614      	mov	r4, r2
 8022ea4:	e70b      	b.n	8022cbe <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8022ea6:	4602      	mov	r2, r0
 8022ea8:	4604      	mov	r4, r0
 8022eaa:	e708      	b.n	8022cbe <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8022eac:	2200      	movs	r2, #0
 8022eae:	e706      	b.n	8022cbe <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8022eb0:	4632      	mov	r2, r6
 8022eb2:	e704      	b.n	8022cbe <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

08022eb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022eb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022eb8:	b09d      	sub	sp, #116	; 0x74
 8022eba:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 8022ebe:	9219      	str	r2, [sp, #100]	; 0x64
 8022ec0:	9307      	str	r3, [sp, #28]
 8022ec2:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8022ec4:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 8022ec8:	931a      	str	r3, [sp, #104]	; 0x68
 8022eca:	9117      	str	r1, [sp, #92]	; 0x5c
 8022ecc:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8022ed0:	901b      	str	r0, [sp, #108]	; 0x6c
 8022ed2:	6850      	ldr	r0, [r2, #4]
 8022ed4:	6812      	ldr	r2, [r2, #0]
 8022ed6:	fb00 1303 	mla	r3, r0, r3, r1
 8022eda:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8022ede:	930a      	str	r3, [sp, #40]	; 0x28
 8022ee0:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8022ee2:	681b      	ldr	r3, [r3, #0]
 8022ee4:	9310      	str	r3, [sp, #64]	; 0x40
 8022ee6:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 8022eea:	930b      	str	r3, [sp, #44]	; 0x2c
 8022eec:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8022eee:	2b00      	cmp	r3, #0
 8022ef0:	dc03      	bgt.n	8022efa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8022ef2:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8022ef4:	2b00      	cmp	r3, #0
 8022ef6:	f340 8375 	ble.w	80235e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8022efa:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8022efc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022f00:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022f04:	1e48      	subs	r0, r1, #1
 8022f06:	1e57      	subs	r7, r2, #1
 8022f08:	9b07      	ldr	r3, [sp, #28]
 8022f0a:	2b00      	cmp	r3, #0
 8022f0c:	f340 818e 	ble.w	802322c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8022f10:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8022f14:	ea4f 4326 	mov.w	r3, r6, asr #16
 8022f18:	d406      	bmi.n	8022f28 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8022f1a:	4584      	cmp	ip, r0
 8022f1c:	da04      	bge.n	8022f28 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8022f1e:	2b00      	cmp	r3, #0
 8022f20:	db02      	blt.n	8022f28 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8022f22:	42bb      	cmp	r3, r7
 8022f24:	f2c0 8183 	blt.w	802322e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 8022f28:	f11c 0c01 	adds.w	ip, ip, #1
 8022f2c:	f100 8173 	bmi.w	8023216 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8022f30:	4561      	cmp	r1, ip
 8022f32:	f2c0 8170 	blt.w	8023216 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8022f36:	3301      	adds	r3, #1
 8022f38:	f100 816d 	bmi.w	8023216 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8022f3c:	429a      	cmp	r2, r3
 8022f3e:	f2c0 816a 	blt.w	8023216 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8022f42:	9b07      	ldr	r3, [sp, #28]
 8022f44:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8022f46:	9318      	str	r3, [sp, #96]	; 0x60
 8022f48:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8022f4a:	2b00      	cmp	r3, #0
 8022f4c:	f340 818c 	ble.w	8023268 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 8022f50:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8022f52:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8022f54:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8022f58:	689b      	ldr	r3, [r3, #8]
 8022f5a:	1422      	asrs	r2, r4, #16
 8022f5c:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8022f60:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8022f64:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8022f68:	f100 81cd 	bmi.w	8023306 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8022f6c:	f103 38ff 	add.w	r8, r3, #4294967295
 8022f70:	4542      	cmp	r2, r8
 8022f72:	f280 81c8 	bge.w	8023306 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8022f76:	f1bc 0f00 	cmp.w	ip, #0
 8022f7a:	f2c0 81c4 	blt.w	8023306 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8022f7e:	f10e 38ff 	add.w	r8, lr, #4294967295
 8022f82:	45c4      	cmp	ip, r8
 8022f84:	f280 81bf 	bge.w	8023306 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8022f88:	b21b      	sxth	r3, r3
 8022f8a:	fb0c 2203 	mla	r2, ip, r3, r2
 8022f8e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8022f90:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8022f94:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8022f98:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8022f9c:	2800      	cmp	r0, #0
 8022f9e:	f000 81a9 	beq.w	80232f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 8022fa2:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8022fa6:	950c      	str	r5, [sp, #48]	; 0x30
 8022fa8:	0e2d      	lsrs	r5, r5, #24
 8022faa:	9513      	str	r5, [sp, #76]	; 0x4c
 8022fac:	b181      	cbz	r1, 8022fd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8022fae:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8022fb2:	3b01      	subs	r3, #1
 8022fb4:	009b      	lsls	r3, r3, #2
 8022fb6:	3304      	adds	r3, #4
 8022fb8:	eb08 0c03 	add.w	ip, r8, r3
 8022fbc:	f858 3003 	ldr.w	r3, [r8, r3]
 8022fc0:	9308      	str	r3, [sp, #32]
 8022fc2:	0e1b      	lsrs	r3, r3, #24
 8022fc4:	9311      	str	r3, [sp, #68]	; 0x44
 8022fc6:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8022fca:	930d      	str	r3, [sp, #52]	; 0x34
 8022fcc:	0e1b      	lsrs	r3, r3, #24
 8022fce:	9314      	str	r3, [sp, #80]	; 0x50
 8022fd0:	b280      	uxth	r0, r0
 8022fd2:	b289      	uxth	r1, r1
 8022fd4:	fb00 f901 	mul.w	r9, r0, r1
 8022fd8:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8022fdc:	0100      	lsls	r0, r0, #4
 8022fde:	eba0 0809 	sub.w	r8, r0, r9
 8022fe2:	b289      	uxth	r1, r1
 8022fe4:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8022fe8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8022fea:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8022fec:	fa1f f888 	uxth.w	r8, r8
 8022ff0:	1a5b      	subs	r3, r3, r1
 8022ff2:	b29b      	uxth	r3, r3
 8022ff4:	fb08 f000 	mul.w	r0, r8, r0
 8022ff8:	fb03 000e 	mla	r0, r3, lr, r0
 8022ffc:	fb01 0005 	mla	r0, r1, r5, r0
 8023000:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8023002:	fb09 0005 	mla	r0, r9, r5, r0
 8023006:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802300a:	2800      	cmp	r0, #0
 802300c:	f000 80fa 	beq.w	8023204 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023010:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8023014:	d01b      	beq.n	802304e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8023016:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 802301a:	fb0e fa0a 	mul.w	sl, lr, sl
 802301e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023022:	fb0e fe02 	mul.w	lr, lr, r2
 8023026:	ea4f 221a 	mov.w	r2, sl, lsr #8
 802302a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802302e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8023032:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8023036:	4452      	add	r2, sl
 8023038:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 802303c:	0a12      	lsrs	r2, r2, #8
 802303e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023042:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8023046:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802304a:	ea42 020c 	orr.w	r2, r2, ip
 802304e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8023050:	2dff      	cmp	r5, #255	; 0xff
 8023052:	d021      	beq.n	8023098 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8023054:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023056:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 802305a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 802305c:	fb05 fb0b 	mul.w	fp, r5, fp
 8023060:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023062:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023066:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8023068:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802306c:	fb05 fa0a 	mul.w	sl, r5, sl
 8023070:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023074:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023078:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802307c:	44de      	add	lr, fp
 802307e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023082:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023086:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802308a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802308e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023092:	ea4e 050a 	orr.w	r5, lr, sl
 8023096:	950c      	str	r5, [sp, #48]	; 0x30
 8023098:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802309a:	2dff      	cmp	r5, #255	; 0xff
 802309c:	d021      	beq.n	80230e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 802309e:	9d08      	ldr	r5, [sp, #32]
 80230a0:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80230a4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80230a6:	fb05 fb0b 	mul.w	fp, r5, fp
 80230aa:	9d08      	ldr	r5, [sp, #32]
 80230ac:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80230b0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80230b2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80230b6:	fb05 fa0a 	mul.w	sl, r5, sl
 80230ba:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80230be:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80230c2:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80230c6:	44de      	add	lr, fp
 80230c8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80230cc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80230d0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80230d4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80230d8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80230dc:	ea4e 050a 	orr.w	r5, lr, sl
 80230e0:	9508      	str	r5, [sp, #32]
 80230e2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80230e4:	2dff      	cmp	r5, #255	; 0xff
 80230e6:	d021      	beq.n	802312c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 80230e8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80230ea:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80230ee:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80230f0:	fb05 fb0b 	mul.w	fp, r5, fp
 80230f4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80230f6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80230fa:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80230fc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023100:	fb05 fa0a 	mul.w	sl, r5, sl
 8023104:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023108:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802310c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8023110:	44de      	add	lr, fp
 8023112:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023116:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802311a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802311e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023122:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023126:	ea4e 050a 	orr.w	r5, lr, sl
 802312a:	950d      	str	r5, [sp, #52]	; 0x34
 802312c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802312e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023132:	9d08      	ldr	r5, [sp, #32]
 8023134:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8023138:	fb08 fc0c 	mul.w	ip, r8, ip
 802313c:	fb03 cc0e 	mla	ip, r3, lr, ip
 8023140:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8023144:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8023146:	fb01 cc0e 	mla	ip, r1, lr, ip
 802314a:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 802314e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023150:	fb09 cc0e 	mla	ip, r9, lr, ip
 8023154:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8023158:	fb08 f80e 	mul.w	r8, r8, lr
 802315c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023160:	fb03 8202 	mla	r2, r3, r2, r8
 8023164:	9b08      	ldr	r3, [sp, #32]
 8023166:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8023168:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 802316c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802316e:	fb01 220a 	mla	r2, r1, sl, r2
 8023172:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 8023176:	fb09 2901 	mla	r9, r9, r1, r2
 802317a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802317c:	883b      	ldrh	r3, [r7, #0]
 802317e:	4342      	muls	r2, r0
 8023180:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023184:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023188:	1c50      	adds	r0, r2, #1
 802318a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802318e:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8023192:	ea4c 0c09 	orr.w	ip, ip, r9
 8023196:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 802319a:	1219      	asrs	r1, r3, #8
 802319c:	ea4f 421c 	mov.w	r2, ip, lsr #16
 80231a0:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80231a4:	b2c0      	uxtb	r0, r0
 80231a6:	fb12 f205 	smulbb	r2, r2, r5
 80231aa:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80231ae:	fb01 2100 	mla	r1, r1, r0, r2
 80231b2:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 80231b6:	10da      	asrs	r2, r3, #3
 80231b8:	fa5f fc8c 	uxtb.w	ip, ip
 80231bc:	00db      	lsls	r3, r3, #3
 80231be:	fb1c fc05 	smulbb	ip, ip, r5
 80231c2:	b2db      	uxtb	r3, r3
 80231c4:	b289      	uxth	r1, r1
 80231c6:	fb03 c300 	mla	r3, r3, r0, ip
 80231ca:	fa1f fc83 	uxth.w	ip, r3
 80231ce:	1c4b      	adds	r3, r1, #1
 80231d0:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80231d4:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80231d8:	fb1e fe05 	smulbb	lr, lr, r5
 80231dc:	f10c 0301 	add.w	r3, ip, #1
 80231e0:	fb02 e200 	mla	r2, r2, r0, lr
 80231e4:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 80231e8:	b292      	uxth	r2, r2
 80231ea:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80231ee:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80231f2:	430b      	orrs	r3, r1
 80231f4:	1c51      	adds	r1, r2, #1
 80231f6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80231fa:	0952      	lsrs	r2, r2, #5
 80231fc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023200:	4313      	orrs	r3, r2
 8023202:	803b      	strh	r3, [r7, #0]
 8023204:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8023206:	441c      	add	r4, r3
 8023208:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802320a:	441e      	add	r6, r3
 802320c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802320e:	3b01      	subs	r3, #1
 8023210:	3702      	adds	r7, #2
 8023212:	9318      	str	r3, [sp, #96]	; 0x60
 8023214:	e698      	b.n	8022f48 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8023216:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8023218:	441c      	add	r4, r3
 802321a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802321c:	441e      	add	r6, r3
 802321e:	9b07      	ldr	r3, [sp, #28]
 8023220:	3b01      	subs	r3, #1
 8023222:	9307      	str	r3, [sp, #28]
 8023224:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023226:	3302      	adds	r3, #2
 8023228:	930a      	str	r3, [sp, #40]	; 0x28
 802322a:	e66d      	b.n	8022f08 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 802322c:	d023      	beq.n	8023276 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 802322e:	9b07      	ldr	r3, [sp, #28]
 8023230:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8023232:	3b01      	subs	r3, #1
 8023234:	fb00 4003 	mla	r0, r0, r3, r4
 8023238:	1400      	asrs	r0, r0, #16
 802323a:	f53f ae82 	bmi.w	8022f42 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802323e:	3901      	subs	r1, #1
 8023240:	4288      	cmp	r0, r1
 8023242:	f6bf ae7e 	bge.w	8022f42 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023246:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8023248:	fb01 6303 	mla	r3, r1, r3, r6
 802324c:	141b      	asrs	r3, r3, #16
 802324e:	f53f ae78 	bmi.w	8022f42 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023252:	3a01      	subs	r2, #1
 8023254:	4293      	cmp	r3, r2
 8023256:	f6bf ae74 	bge.w	8022f42 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802325a:	f8dd b01c 	ldr.w	fp, [sp, #28]
 802325e:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8023262:	f1bb 0f00 	cmp.w	fp, #0
 8023266:	dc6c      	bgt.n	8023342 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8023268:	9b07      	ldr	r3, [sp, #28]
 802326a:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 802326e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023270:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8023274:	930a      	str	r3, [sp, #40]	; 0x28
 8023276:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8023278:	2b00      	cmp	r3, #0
 802327a:	f340 81b3 	ble.w	80235e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 802327e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023282:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8023286:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802328a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 802328c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023290:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023294:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023298:	eef0 6a62 	vmov.f32	s13, s5
 802329c:	ee61 7a27 	vmul.f32	s15, s2, s15
 80232a0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80232a4:	ee77 2a62 	vsub.f32	s5, s14, s5
 80232a8:	ee16 4a90 	vmov	r4, s13
 80232ac:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80232b0:	eef0 6a43 	vmov.f32	s13, s6
 80232b4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80232b8:	ee12 2a90 	vmov	r2, s5
 80232bc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80232c0:	fb92 f3f3 	sdiv	r3, r2, r3
 80232c4:	ee13 2a10 	vmov	r2, s6
 80232c8:	9329      	str	r3, [sp, #164]	; 0xa4
 80232ca:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80232cc:	fb92 f3f3 	sdiv	r3, r2, r3
 80232d0:	932a      	str	r3, [sp, #168]	; 0xa8
 80232d2:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80232d4:	9a19      	ldr	r2, [sp, #100]	; 0x64
 80232d6:	3b01      	subs	r3, #1
 80232d8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80232dc:	9317      	str	r3, [sp, #92]	; 0x5c
 80232de:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80232e0:	bf08      	it	eq
 80232e2:	4613      	moveq	r3, r2
 80232e4:	ee16 6a90 	vmov	r6, s13
 80232e8:	9307      	str	r3, [sp, #28]
 80232ea:	eeb0 3a67 	vmov.f32	s6, s15
 80232ee:	eef0 2a47 	vmov.f32	s5, s14
 80232f2:	e5fb      	b.n	8022eec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80232f4:	2900      	cmp	r1, #0
 80232f6:	f43f ae6b 	beq.w	8022fd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80232fa:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 80232fe:	9308      	str	r3, [sp, #32]
 8023300:	0e1b      	lsrs	r3, r3, #24
 8023302:	9311      	str	r3, [sp, #68]	; 0x44
 8023304:	e664      	b.n	8022fd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8023306:	f112 0801 	adds.w	r8, r2, #1
 802330a:	f53f af7b 	bmi.w	8023204 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802330e:	4543      	cmp	r3, r8
 8023310:	f6ff af78 	blt.w	8023204 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023314:	f11c 0801 	adds.w	r8, ip, #1
 8023318:	f53f af74 	bmi.w	8023204 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802331c:	45c6      	cmp	lr, r8
 802331e:	f6ff af71 	blt.w	8023204 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023322:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8023324:	9201      	str	r2, [sp, #4]
 8023326:	fa0f f28e 	sxth.w	r2, lr
 802332a:	e9cd 1504 	strd	r1, r5, [sp, #16]
 802332e:	e9cd c002 	strd	ip, r0, [sp, #8]
 8023332:	9200      	str	r2, [sp, #0]
 8023334:	b21b      	sxth	r3, r3
 8023336:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8023338:	981b      	ldr	r0, [sp, #108]	; 0x6c
 802333a:	4639      	mov	r1, r7
 802333c:	f7ff fc79 	bl	8022c32 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8023340:	e760      	b.n	8023204 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023342:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8023344:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8023346:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802334a:	1427      	asrs	r7, r4, #16
 802334c:	1433      	asrs	r3, r6, #16
 802334e:	fb01 7303 	mla	r3, r1, r3, r7
 8023352:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 8023356:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 802335a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802335e:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8023362:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8023366:	2a00      	cmp	r2, #0
 8023368:	f000 8133 	beq.w	80235d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 802336c:	687d      	ldr	r5, [r7, #4]
 802336e:	950e      	str	r5, [sp, #56]	; 0x38
 8023370:	0e2d      	lsrs	r5, r5, #24
 8023372:	9515      	str	r5, [sp, #84]	; 0x54
 8023374:	b178      	cbz	r0, 8023396 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8023376:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 802337a:	3901      	subs	r1, #1
 802337c:	0089      	lsls	r1, r1, #2
 802337e:	3104      	adds	r1, #4
 8023380:	eb07 0e01 	add.w	lr, r7, r1
 8023384:	5879      	ldr	r1, [r7, r1]
 8023386:	9109      	str	r1, [sp, #36]	; 0x24
 8023388:	0e09      	lsrs	r1, r1, #24
 802338a:	9112      	str	r1, [sp, #72]	; 0x48
 802338c:	f8de 1004 	ldr.w	r1, [lr, #4]
 8023390:	910f      	str	r1, [sp, #60]	; 0x3c
 8023392:	0e09      	lsrs	r1, r1, #24
 8023394:	9116      	str	r1, [sp, #88]	; 0x58
 8023396:	b292      	uxth	r2, r2
 8023398:	b280      	uxth	r0, r0
 802339a:	fb02 f800 	mul.w	r8, r2, r0
 802339e:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80233a2:	0112      	lsls	r2, r2, #4
 80233a4:	eba2 0e08 	sub.w	lr, r2, r8
 80233a8:	b280      	uxth	r0, r0
 80233aa:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80233ae:	9915      	ldr	r1, [sp, #84]	; 0x54
 80233b0:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80233b2:	fa1f fe8e 	uxth.w	lr, lr
 80233b6:	1a12      	subs	r2, r2, r0
 80233b8:	b292      	uxth	r2, r2
 80233ba:	fb0e f101 	mul.w	r1, lr, r1
 80233be:	fb02 110c 	mla	r1, r2, ip, r1
 80233c2:	fb00 1105 	mla	r1, r0, r5, r1
 80233c6:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80233c8:	fb08 1105 	mla	r1, r8, r5, r1
 80233cc:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80233d0:	2900      	cmp	r1, #0
 80233d2:	f000 80f5 	beq.w	80235c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 80233d6:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80233da:	d019      	beq.n	8023410 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 80233dc:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80233e0:	fb0c fa0a 	mul.w	sl, ip, sl
 80233e4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80233e8:	fb0c fc03 	mul.w	ip, ip, r3
 80233ec:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80233f0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80233f4:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80233f8:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80233fc:	4453      	add	r3, sl
 80233fe:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8023402:	0a1b      	lsrs	r3, r3, #8
 8023404:	0a3f      	lsrs	r7, r7, #8
 8023406:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802340a:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 802340e:	433b      	orrs	r3, r7
 8023410:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8023412:	2dff      	cmp	r5, #255	; 0xff
 8023414:	d020      	beq.n	8023458 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 8023416:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8023418:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802341c:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802341e:	436f      	muls	r7, r5
 8023420:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8023422:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023426:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8023428:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802342c:	fb05 fa0a 	mul.w	sl, r5, sl
 8023430:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8023434:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023438:	44bc      	add	ip, r7
 802343a:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802343e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023442:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023446:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802344a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802344e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023452:	ea4c 050a 	orr.w	r5, ip, sl
 8023456:	950e      	str	r5, [sp, #56]	; 0x38
 8023458:	9d12      	ldr	r5, [sp, #72]	; 0x48
 802345a:	2dff      	cmp	r5, #255	; 0xff
 802345c:	d020      	beq.n	80234a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 802345e:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8023460:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8023464:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8023466:	436f      	muls	r7, r5
 8023468:	9d09      	ldr	r5, [sp, #36]	; 0x24
 802346a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802346e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8023470:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023474:	fb05 fa0a 	mul.w	sl, r5, sl
 8023478:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802347c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023480:	44bc      	add	ip, r7
 8023482:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8023486:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802348a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802348e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023492:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023496:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802349a:	ea4c 050a 	orr.w	r5, ip, sl
 802349e:	9509      	str	r5, [sp, #36]	; 0x24
 80234a0:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80234a2:	2dff      	cmp	r5, #255	; 0xff
 80234a4:	d020      	beq.n	80234e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 80234a6:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80234a8:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80234ac:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80234ae:	436f      	muls	r7, r5
 80234b0:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80234b2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80234b6:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80234b8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80234bc:	fb05 fa0a 	mul.w	sl, r5, sl
 80234c0:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80234c4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80234c8:	44bc      	add	ip, r7
 80234ca:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80234ce:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80234d2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80234d6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80234da:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80234de:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80234e2:	ea4c 050a 	orr.w	r5, ip, sl
 80234e6:	950f      	str	r5, [sp, #60]	; 0x3c
 80234e8:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80234ea:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80234ee:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80234f0:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80234f4:	fb0e f707 	mul.w	r7, lr, r7
 80234f8:	fb02 770c 	mla	r7, r2, ip, r7
 80234fc:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023500:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8023502:	fb00 770c 	mla	r7, r0, ip, r7
 8023506:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802350a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802350c:	fb08 770c 	mla	r7, r8, ip, r7
 8023510:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8023514:	fb0e fe0c 	mul.w	lr, lr, ip
 8023518:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802351c:	fb02 e303 	mla	r3, r2, r3, lr
 8023520:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8023522:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8023524:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8023528:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802352a:	fb00 330a 	mla	r3, r0, sl, r3
 802352e:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8023532:	fb08 3c0c 	mla	ip, r8, ip, r3
 8023536:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8023538:	f8b9 0000 	ldrh.w	r0, [r9]
 802353c:	4359      	muls	r1, r3
 802353e:	0a3f      	lsrs	r7, r7, #8
 8023540:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023544:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8023548:	1c4b      	adds	r3, r1, #1
 802354a:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 802354e:	ea47 070c 	orr.w	r7, r7, ip
 8023552:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8023556:	1202      	asrs	r2, r0, #8
 8023558:	0c3b      	lsrs	r3, r7, #16
 802355a:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 802355e:	b2c9      	uxtb	r1, r1
 8023560:	fb13 f305 	smulbb	r3, r3, r5
 8023564:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8023568:	fb02 3201 	mla	r2, r2, r1, r3
 802356c:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8023570:	10c3      	asrs	r3, r0, #3
 8023572:	b2ff      	uxtb	r7, r7
 8023574:	00c0      	lsls	r0, r0, #3
 8023576:	b2c0      	uxtb	r0, r0
 8023578:	fb17 f705 	smulbb	r7, r7, r5
 802357c:	fb00 7001 	mla	r0, r0, r1, r7
 8023580:	b292      	uxth	r2, r2
 8023582:	fb1c fc05 	smulbb	ip, ip, r5
 8023586:	b280      	uxth	r0, r0
 8023588:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 802358c:	fb03 c301 	mla	r3, r3, r1, ip
 8023590:	1c51      	adds	r1, r2, #1
 8023592:	f100 0c01 	add.w	ip, r0, #1
 8023596:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802359a:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 802359e:	b29b      	uxth	r3, r3
 80235a0:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80235a4:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 80235a8:	ea4c 0202 	orr.w	r2, ip, r2
 80235ac:	f103 0c01 	add.w	ip, r3, #1
 80235b0:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 80235b4:	095b      	lsrs	r3, r3, #5
 80235b6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80235ba:	431a      	orrs	r2, r3
 80235bc:	f8a9 2000 	strh.w	r2, [r9]
 80235c0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80235c2:	441c      	add	r4, r3
 80235c4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80235c6:	f109 0902 	add.w	r9, r9, #2
 80235ca:	441e      	add	r6, r3
 80235cc:	f10b 3bff 	add.w	fp, fp, #4294967295
 80235d0:	e647      	b.n	8023262 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 80235d2:	2800      	cmp	r0, #0
 80235d4:	f43f aedf 	beq.w	8023396 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 80235d8:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 80235dc:	9109      	str	r1, [sp, #36]	; 0x24
 80235de:	0e09      	lsrs	r1, r1, #24
 80235e0:	9112      	str	r1, [sp, #72]	; 0x48
 80235e2:	e6d8      	b.n	8023396 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 80235e4:	b01d      	add	sp, #116	; 0x74
 80235e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080235ea <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 80235ea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80235ee:	b085      	sub	sp, #20
 80235f0:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 80235f4:	9102      	str	r1, [sp, #8]
 80235f6:	2c00      	cmp	r4, #0
 80235f8:	fb04 7103 	mla	r1, r4, r3, r7
 80235fc:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8023600:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8023604:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8023608:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 802360c:	f2c0 810c 	blt.w	8023828 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8023610:	45a6      	cmp	lr, r4
 8023612:	f340 8109 	ble.w	8023828 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8023616:	2f00      	cmp	r7, #0
 8023618:	f2c0 8104 	blt.w	8023824 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 802361c:	42bb      	cmp	r3, r7
 802361e:	f340 8101 	ble.w	8023824 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8023622:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8023626:	1c7a      	adds	r2, r7, #1
 8023628:	f100 8101 	bmi.w	802382e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 802362c:	4293      	cmp	r3, r2
 802362e:	f340 80fe 	ble.w	802382e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8023632:	2e00      	cmp	r6, #0
 8023634:	f000 80fd 	beq.w	8023832 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 8023638:	f8dc 1004 	ldr.w	r1, [ip, #4]
 802363c:	3401      	adds	r4, #1
 802363e:	f100 80fc 	bmi.w	802383a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8023642:	45a6      	cmp	lr, r4
 8023644:	f340 80f9 	ble.w	802383a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8023648:	2800      	cmp	r0, #0
 802364a:	f000 80f9 	beq.w	8023840 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 802364e:	2f00      	cmp	r7, #0
 8023650:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 8023654:	f2c0 80ef 	blt.w	8023836 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8023658:	42bb      	cmp	r3, r7
 802365a:	f340 80ec 	ble.w	8023836 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 802365e:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8023662:	3701      	adds	r7, #1
 8023664:	f100 80ef 	bmi.w	8023846 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8023668:	42bb      	cmp	r3, r7
 802366a:	f340 80ec 	ble.w	8023846 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 802366e:	2e00      	cmp	r6, #0
 8023670:	f000 80eb 	beq.w	802384a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 8023674:	6852      	ldr	r2, [r2, #4]
 8023676:	b2b6      	uxth	r6, r6
 8023678:	b280      	uxth	r0, r0
 802367a:	fb00 fe06 	mul.w	lr, r0, r6
 802367e:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8023682:	0136      	lsls	r6, r6, #4
 8023684:	eba6 070e 	sub.w	r7, r6, lr
 8023688:	b280      	uxth	r0, r0
 802368a:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 802368e:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8023692:	b2bf      	uxth	r7, r7
 8023694:	1a1b      	subs	r3, r3, r0
 8023696:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 802369a:	b29b      	uxth	r3, r3
 802369c:	fb07 f60a 	mul.w	r6, r7, sl
 80236a0:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80236a4:	fb0b 6603 	mla	r6, fp, r3, r6
 80236a8:	ea4f 6812 	mov.w	r8, r2, lsr #24
 80236ac:	fb00 6609 	mla	r6, r0, r9, r6
 80236b0:	fb0e 6608 	mla	r6, lr, r8, r6
 80236b4:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80236b8:	9600      	str	r6, [sp, #0]
 80236ba:	2e00      	cmp	r6, #0
 80236bc:	f000 80af 	beq.w	802381e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 80236c0:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80236c4:	fb0b fc0c 	mul.w	ip, fp, ip
 80236c8:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 80236cc:	fb0b f505 	mul.w	r5, fp, r5
 80236d0:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 80236d4:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 80236d8:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80236dc:	44dc      	add	ip, fp
 80236de:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80236e2:	9501      	str	r5, [sp, #4]
 80236e4:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 80236e8:	9503      	str	r5, [sp, #12]
 80236ea:	9d01      	ldr	r5, [sp, #4]
 80236ec:	9e02      	ldr	r6, [sp, #8]
 80236ee:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 80236f2:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80236f6:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 80236fa:	fb0a fc0c 	mul.w	ip, sl, ip
 80236fe:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8023702:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8023706:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 802370a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802370e:	4465      	add	r5, ip
 8023710:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8023714:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8023718:	fb09 fc0c 	mul.w	ip, r9, ip
 802371c:	fb09 f904 	mul.w	r9, r9, r4
 8023720:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8023724:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8023728:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 802372c:	fb08 f404 	mul.w	r4, r8, r4
 8023730:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8023734:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023738:	fb08 f802 	mul.w	r8, r8, r2
 802373c:	fb0a fa01 	mul.w	sl, sl, r1
 8023740:	0a22      	lsrs	r2, r4, #8
 8023742:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8023746:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802374a:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 802374e:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8023752:	4414      	add	r4, r2
 8023754:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8023758:	f508 7280 	add.w	r2, r8, #256	; 0x100
 802375c:	0a2d      	lsrs	r5, r5, #8
 802375e:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8023762:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8023766:	9a03      	ldr	r2, [sp, #12]
 8023768:	8836      	ldrh	r6, [r6, #0]
 802376a:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 802376e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023772:	437d      	muls	r5, r7
 8023774:	4461      	add	r1, ip
 8023776:	0a24      	lsrs	r4, r4, #8
 8023778:	fb02 5503 	mla	r5, r2, r3, r5
 802377c:	0a09      	lsrs	r1, r1, #8
 802377e:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8023782:	fb04 540e 	mla	r4, r4, lr, r5
 8023786:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 802378a:	fb01 4100 	mla	r1, r1, r0, r4
 802378e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023792:	0a09      	lsrs	r1, r1, #8
 8023794:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023798:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 802379c:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80237a0:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 80237a4:	fb07 f70a 	mul.w	r7, r7, sl
 80237a8:	fb03 7101 	mla	r1, r3, r1, r7
 80237ac:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80237b0:	9b00      	ldr	r3, [sp, #0]
 80237b2:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 80237b6:	fb0e 1e08 	mla	lr, lr, r8, r1
 80237ba:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 80237be:	fb00 e101 	mla	r1, r0, r1, lr
 80237c2:	43da      	mvns	r2, r3
 80237c4:	1233      	asrs	r3, r6, #8
 80237c6:	b2d2      	uxtb	r2, r2
 80237c8:	10f0      	asrs	r0, r6, #3
 80237ca:	0a09      	lsrs	r1, r1, #8
 80237cc:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80237d0:	00f6      	lsls	r6, r6, #3
 80237d2:	4353      	muls	r3, r2
 80237d4:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80237d8:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80237dc:	b2f6      	uxtb	r6, r6
 80237de:	4321      	orrs	r1, r4
 80237e0:	4350      	muls	r0, r2
 80237e2:	4356      	muls	r6, r2
 80237e4:	1c5a      	adds	r2, r3, #1
 80237e6:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80237ea:	0c0b      	lsrs	r3, r1, #16
 80237ec:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80237f0:	1c42      	adds	r2, r0, #1
 80237f2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80237f6:	0a0a      	lsrs	r2, r1, #8
 80237f8:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80237fc:	021b      	lsls	r3, r3, #8
 80237fe:	00d2      	lsls	r2, r2, #3
 8023800:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023804:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8023808:	4313      	orrs	r3, r2
 802380a:	1c72      	adds	r2, r6, #1
 802380c:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8023810:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 8023814:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8023818:	4319      	orrs	r1, r3
 802381a:	9b02      	ldr	r3, [sp, #8]
 802381c:	8019      	strh	r1, [r3, #0]
 802381e:	b005      	add	sp, #20
 8023820:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023824:	2500      	movs	r5, #0
 8023826:	e6fe      	b.n	8023626 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 8023828:	2100      	movs	r1, #0
 802382a:	460d      	mov	r5, r1
 802382c:	e706      	b.n	802363c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 802382e:	2100      	movs	r1, #0
 8023830:	e704      	b.n	802363c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8023832:	4631      	mov	r1, r6
 8023834:	e702      	b.n	802363c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8023836:	2400      	movs	r4, #0
 8023838:	e713      	b.n	8023662 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 802383a:	2200      	movs	r2, #0
 802383c:	4614      	mov	r4, r2
 802383e:	e71a      	b.n	8023676 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8023840:	4602      	mov	r2, r0
 8023842:	4604      	mov	r4, r0
 8023844:	e717      	b.n	8023676 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8023846:	2200      	movs	r2, #0
 8023848:	e715      	b.n	8023676 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 802384a:	4632      	mov	r2, r6
 802384c:	e713      	b.n	8023676 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

08023850 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023850:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023854:	b09b      	sub	sp, #108	; 0x6c
 8023856:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 802385a:	9218      	str	r2, [sp, #96]	; 0x60
 802385c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 802385e:	9116      	str	r1, [sp, #88]	; 0x58
 8023860:	9307      	str	r3, [sp, #28]
 8023862:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8023866:	9019      	str	r0, [sp, #100]	; 0x64
 8023868:	6850      	ldr	r0, [r2, #4]
 802386a:	6812      	ldr	r2, [r2, #0]
 802386c:	fb00 1303 	mla	r3, r0, r3, r1
 8023870:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023874:	930a      	str	r3, [sp, #40]	; 0x28
 8023876:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8023878:	681b      	ldr	r3, [r3, #0]
 802387a:	930f      	str	r3, [sp, #60]	; 0x3c
 802387c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802387e:	2b00      	cmp	r3, #0
 8023880:	dc03      	bgt.n	802388a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8023882:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023884:	2b00      	cmp	r3, #0
 8023886:	f340 8386 	ble.w	8023f96 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 802388a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802388c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023890:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023894:	1e48      	subs	r0, r1, #1
 8023896:	1e57      	subs	r7, r2, #1
 8023898:	9b07      	ldr	r3, [sp, #28]
 802389a:	2b00      	cmp	r3, #0
 802389c:	f340 8166 	ble.w	8023b6c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 80238a0:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80238a4:	ea4f 4326 	mov.w	r3, r6, asr #16
 80238a8:	d406      	bmi.n	80238b8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80238aa:	4584      	cmp	ip, r0
 80238ac:	da04      	bge.n	80238b8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80238ae:	2b00      	cmp	r3, #0
 80238b0:	db02      	blt.n	80238b8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80238b2:	42bb      	cmp	r3, r7
 80238b4:	f2c0 815b 	blt.w	8023b6e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 80238b8:	f11c 0c01 	adds.w	ip, ip, #1
 80238bc:	f100 814b 	bmi.w	8023b56 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 80238c0:	4561      	cmp	r1, ip
 80238c2:	f2c0 8148 	blt.w	8023b56 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 80238c6:	3301      	adds	r3, #1
 80238c8:	f100 8145 	bmi.w	8023b56 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 80238cc:	429a      	cmp	r2, r3
 80238ce:	f2c0 8142 	blt.w	8023b56 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 80238d2:	9b07      	ldr	r3, [sp, #28]
 80238d4:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80238d6:	9317      	str	r3, [sp, #92]	; 0x5c
 80238d8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80238da:	2b00      	cmp	r3, #0
 80238dc:	f340 8165 	ble.w	8023baa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80238e0:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 80238e2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80238e4:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80238e8:	689b      	ldr	r3, [r3, #8]
 80238ea:	1422      	asrs	r2, r4, #16
 80238ec:	ea4f 4c26 	mov.w	ip, r6, asr #16
 80238f0:	f3c4 3103 	ubfx	r1, r4, #12, #4
 80238f4:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80238f8:	f100 81d5 	bmi.w	8023ca6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 80238fc:	f103 38ff 	add.w	r8, r3, #4294967295
 8023900:	4542      	cmp	r2, r8
 8023902:	f280 81d0 	bge.w	8023ca6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8023906:	f1bc 0f00 	cmp.w	ip, #0
 802390a:	f2c0 81cc 	blt.w	8023ca6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 802390e:	f10e 38ff 	add.w	r8, lr, #4294967295
 8023912:	45c4      	cmp	ip, r8
 8023914:	f280 81c7 	bge.w	8023ca6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8023918:	b21b      	sxth	r3, r3
 802391a:	fb0c 2203 	mla	r2, ip, r3, r2
 802391e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8023920:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8023924:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8023928:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 802392c:	2900      	cmp	r1, #0
 802392e:	f000 8182 	beq.w	8023c36 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8023932:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8023936:	950b      	str	r5, [sp, #44]	; 0x2c
 8023938:	0e2d      	lsrs	r5, r5, #24
 802393a:	9512      	str	r5, [sp, #72]	; 0x48
 802393c:	b180      	cbz	r0, 8023960 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 802393e:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8023942:	3b01      	subs	r3, #1
 8023944:	009b      	lsls	r3, r3, #2
 8023946:	3304      	adds	r3, #4
 8023948:	eb08 0c03 	add.w	ip, r8, r3
 802394c:	f858 3003 	ldr.w	r3, [r8, r3]
 8023950:	9308      	str	r3, [sp, #32]
 8023952:	0e1b      	lsrs	r3, r3, #24
 8023954:	9310      	str	r3, [sp, #64]	; 0x40
 8023956:	f8dc 3004 	ldr.w	r3, [ip, #4]
 802395a:	930c      	str	r3, [sp, #48]	; 0x30
 802395c:	0e1b      	lsrs	r3, r3, #24
 802395e:	9313      	str	r3, [sp, #76]	; 0x4c
 8023960:	b289      	uxth	r1, r1
 8023962:	b280      	uxth	r0, r0
 8023964:	fb01 f900 	mul.w	r9, r1, r0
 8023968:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 802396c:	0109      	lsls	r1, r1, #4
 802396e:	eba1 0809 	sub.w	r8, r1, r9
 8023972:	b280      	uxth	r0, r0
 8023974:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 8023978:	9b12      	ldr	r3, [sp, #72]	; 0x48
 802397a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802397c:	fa1f f888 	uxth.w	r8, r8
 8023980:	1a09      	subs	r1, r1, r0
 8023982:	b289      	uxth	r1, r1
 8023984:	fb08 f303 	mul.w	r3, r8, r3
 8023988:	fb01 330e 	mla	r3, r1, lr, r3
 802398c:	fb00 3305 	mla	r3, r0, r5, r3
 8023990:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8023992:	fb09 3305 	mla	r3, r9, r5, r3
 8023996:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802399a:	2b00      	cmp	r3, #0
 802399c:	f000 80d2 	beq.w	8023b44 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80239a0:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80239a4:	d01b      	beq.n	80239de <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 80239a6:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 80239aa:	fb0e fa0a 	mul.w	sl, lr, sl
 80239ae:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80239b2:	fb0e fe02 	mul.w	lr, lr, r2
 80239b6:	ea4f 221a 	mov.w	r2, sl, lsr #8
 80239ba:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80239be:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80239c2:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 80239c6:	4452      	add	r2, sl
 80239c8:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80239cc:	0a12      	lsrs	r2, r2, #8
 80239ce:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80239d2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80239d6:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80239da:	ea42 020c 	orr.w	r2, r2, ip
 80239de:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80239e0:	2dff      	cmp	r5, #255	; 0xff
 80239e2:	d021      	beq.n	8023a28 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 80239e4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80239e6:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80239ea:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80239ec:	fb05 fb0b 	mul.w	fp, r5, fp
 80239f0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80239f2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80239f6:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80239f8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80239fc:	fb05 fa0a 	mul.w	sl, r5, sl
 8023a00:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023a04:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023a08:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8023a0c:	44de      	add	lr, fp
 8023a0e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023a12:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023a16:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023a1a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023a1e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023a22:	ea4e 050a 	orr.w	r5, lr, sl
 8023a26:	950b      	str	r5, [sp, #44]	; 0x2c
 8023a28:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8023a2a:	2dff      	cmp	r5, #255	; 0xff
 8023a2c:	d021      	beq.n	8023a72 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8023a2e:	9d08      	ldr	r5, [sp, #32]
 8023a30:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8023a34:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8023a36:	fb05 fb0b 	mul.w	fp, r5, fp
 8023a3a:	9d08      	ldr	r5, [sp, #32]
 8023a3c:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8023a40:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8023a42:	fb05 fa0e 	mul.w	sl, r5, lr
 8023a46:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023a4a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023a4e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023a52:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8023a56:	44de      	add	lr, fp
 8023a58:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023a5c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023a60:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023a64:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023a68:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023a6c:	ea4e 050a 	orr.w	r5, lr, sl
 8023a70:	9508      	str	r5, [sp, #32]
 8023a72:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8023a74:	2dff      	cmp	r5, #255	; 0xff
 8023a76:	d021      	beq.n	8023abc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8023a78:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023a7a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8023a7e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8023a80:	fb05 fb0b 	mul.w	fp, r5, fp
 8023a84:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023a86:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023a8a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8023a8c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023a90:	fb05 fa0a 	mul.w	sl, r5, sl
 8023a94:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023a98:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023a9c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8023aa0:	44de      	add	lr, fp
 8023aa2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023aa6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023aaa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023aae:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023ab2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023ab6:	ea4e 050a 	orr.w	r5, lr, sl
 8023aba:	950c      	str	r5, [sp, #48]	; 0x30
 8023abc:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8023abe:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023ac2:	9d08      	ldr	r5, [sp, #32]
 8023ac4:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8023ac8:	fb08 fc0c 	mul.w	ip, r8, ip
 8023acc:	fb01 cc0e 	mla	ip, r1, lr, ip
 8023ad0:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8023ad4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023ad6:	fb00 cc0e 	mla	ip, r0, lr, ip
 8023ada:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8023ade:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8023ae0:	fb09 cc0e 	mla	ip, r9, lr, ip
 8023ae4:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8023ae8:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023aec:	fb08 f80e 	mul.w	r8, r8, lr
 8023af0:	fb01 8202 	mla	r2, r1, r2, r8
 8023af4:	9908      	ldr	r1, [sp, #32]
 8023af6:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8023afa:	990c      	ldr	r1, [sp, #48]	; 0x30
 8023afc:	fb00 220a 	mla	r2, r0, sl, r2
 8023b00:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 8023b04:	fb09 2900 	mla	r9, r9, r0, r2
 8023b08:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023b0c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023b10:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023b14:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8023b18:	ea4c 0c09 	orr.w	ip, ip, r9
 8023b1c:	2bff      	cmp	r3, #255	; 0xff
 8023b1e:	ea4f 221c 	mov.w	r2, ip, lsr #8
 8023b22:	f040 8091 	bne.w	8023c48 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8023b26:	ea4f 135c 	mov.w	r3, ip, lsr #5
 8023b2a:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 8023b2e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023b32:	f022 0207 	bic.w	r2, r2, #7
 8023b36:	431a      	orrs	r2, r3
 8023b38:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8023b3c:	ea4c 0c02 	orr.w	ip, ip, r2
 8023b40:	f8a7 c000 	strh.w	ip, [r7]
 8023b44:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8023b46:	441c      	add	r4, r3
 8023b48:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8023b4a:	441e      	add	r6, r3
 8023b4c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8023b4e:	3b01      	subs	r3, #1
 8023b50:	3702      	adds	r7, #2
 8023b52:	9317      	str	r3, [sp, #92]	; 0x5c
 8023b54:	e6c0      	b.n	80238d8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8023b56:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8023b58:	441c      	add	r4, r3
 8023b5a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8023b5c:	441e      	add	r6, r3
 8023b5e:	9b07      	ldr	r3, [sp, #28]
 8023b60:	3b01      	subs	r3, #1
 8023b62:	9307      	str	r3, [sp, #28]
 8023b64:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023b66:	3302      	adds	r3, #2
 8023b68:	930a      	str	r3, [sp, #40]	; 0x28
 8023b6a:	e695      	b.n	8023898 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8023b6c:	d024      	beq.n	8023bb8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8023b6e:	9b07      	ldr	r3, [sp, #28]
 8023b70:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8023b72:	3b01      	subs	r3, #1
 8023b74:	fb00 4003 	mla	r0, r0, r3, r4
 8023b78:	1400      	asrs	r0, r0, #16
 8023b7a:	f53f aeaa 	bmi.w	80238d2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8023b7e:	3901      	subs	r1, #1
 8023b80:	4288      	cmp	r0, r1
 8023b82:	f6bf aea6 	bge.w	80238d2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8023b86:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8023b88:	fb01 6303 	mla	r3, r1, r3, r6
 8023b8c:	141b      	asrs	r3, r3, #16
 8023b8e:	f53f aea0 	bmi.w	80238d2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8023b92:	3a01      	subs	r2, #1
 8023b94:	4293      	cmp	r3, r2
 8023b96:	f6bf ae9c 	bge.w	80238d2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8023b9a:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8023b9e:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 8023ba2:	f1bb 0f00 	cmp.w	fp, #0
 8023ba6:	f300 809a 	bgt.w	8023cde <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8023baa:	9b07      	ldr	r3, [sp, #28]
 8023bac:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8023bb0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023bb2:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8023bb6:	930a      	str	r3, [sp, #40]	; 0x28
 8023bb8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8023bba:	2b00      	cmp	r3, #0
 8023bbc:	f340 81eb 	ble.w	8023f96 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8023bc0:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023bc4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8023bc8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023bcc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023bce:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023bd2:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023bd6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023bda:	eef0 6a62 	vmov.f32	s13, s5
 8023bde:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023be2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023be6:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023bea:	ee16 4a90 	vmov	r4, s13
 8023bee:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023bf2:	eef0 6a43 	vmov.f32	s13, s6
 8023bf6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023bfa:	ee12 2a90 	vmov	r2, s5
 8023bfe:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023c02:	fb92 f3f3 	sdiv	r3, r2, r3
 8023c06:	ee13 2a10 	vmov	r2, s6
 8023c0a:	9327      	str	r3, [sp, #156]	; 0x9c
 8023c0c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023c0e:	fb92 f3f3 	sdiv	r3, r2, r3
 8023c12:	9328      	str	r3, [sp, #160]	; 0xa0
 8023c14:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8023c16:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8023c18:	3b01      	subs	r3, #1
 8023c1a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023c1e:	9316      	str	r3, [sp, #88]	; 0x58
 8023c20:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023c22:	bf08      	it	eq
 8023c24:	4613      	moveq	r3, r2
 8023c26:	ee16 6a90 	vmov	r6, s13
 8023c2a:	9307      	str	r3, [sp, #28]
 8023c2c:	eeb0 3a67 	vmov.f32	s6, s15
 8023c30:	eef0 2a47 	vmov.f32	s5, s14
 8023c34:	e622      	b.n	802387c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 8023c36:	2800      	cmp	r0, #0
 8023c38:	f43f ae92 	beq.w	8023960 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8023c3c:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8023c40:	9308      	str	r3, [sp, #32]
 8023c42:	0e1b      	lsrs	r3, r3, #24
 8023c44:	9310      	str	r3, [sp, #64]	; 0x40
 8023c46:	e68b      	b.n	8023960 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8023c48:	8839      	ldrh	r1, [r7, #0]
 8023c4a:	4dd4      	ldr	r5, [pc, #848]	; (8023f9c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8023c4c:	43db      	mvns	r3, r3
 8023c4e:	ea4f 2e21 	mov.w	lr, r1, asr #8
 8023c52:	fa5f f883 	uxtb.w	r8, r3
 8023c56:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8023c5a:	fb0e fe08 	mul.w	lr, lr, r8
 8023c5e:	10c8      	asrs	r0, r1, #3
 8023c60:	00cb      	lsls	r3, r1, #3
 8023c62:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8023c66:	f10e 0101 	add.w	r1, lr, #1
 8023c6a:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 8023c6e:	fb00 f008 	mul.w	r0, r0, r8
 8023c72:	ea4f 411c 	mov.w	r1, ip, lsr #16
 8023c76:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 8023c7a:	f100 0e01 	add.w	lr, r0, #1
 8023c7e:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 8023c82:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8023c86:	b2db      	uxtb	r3, r3
 8023c88:	b2c9      	uxtb	r1, r1
 8023c8a:	00d2      	lsls	r2, r2, #3
 8023c8c:	fb03 f308 	mul.w	r3, r3, r8
 8023c90:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 8023c94:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023c98:	430a      	orrs	r2, r1
 8023c9a:	1c59      	adds	r1, r3, #1
 8023c9c:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8023ca0:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8023ca4:	e748      	b.n	8023b38 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 8023ca6:	f112 0801 	adds.w	r8, r2, #1
 8023caa:	f53f af4b 	bmi.w	8023b44 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8023cae:	4543      	cmp	r3, r8
 8023cb0:	f6ff af48 	blt.w	8023b44 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8023cb4:	f11c 0801 	adds.w	r8, ip, #1
 8023cb8:	f53f af44 	bmi.w	8023b44 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8023cbc:	45c6      	cmp	lr, r8
 8023cbe:	f6ff af41 	blt.w	8023b44 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8023cc2:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 8023cc6:	fa0f f28e 	sxth.w	r2, lr
 8023cca:	e9cd 1003 	strd	r1, r0, [sp, #12]
 8023cce:	9200      	str	r2, [sp, #0]
 8023cd0:	b21b      	sxth	r3, r3
 8023cd2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8023cd4:	9819      	ldr	r0, [sp, #100]	; 0x64
 8023cd6:	4639      	mov	r1, r7
 8023cd8:	f7ff fc87 	bl	80235ea <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 8023cdc:	e732      	b.n	8023b44 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8023cde:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8023ce0:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8023ce2:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 8023ce6:	1421      	asrs	r1, r4, #16
 8023ce8:	1433      	asrs	r3, r6, #16
 8023cea:	fb07 1303 	mla	r3, r7, r3, r1
 8023cee:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8023cf0:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8023cf4:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8023cf8:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8023cfc:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8023d00:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8023d04:	2a00      	cmp	r2, #0
 8023d06:	f000 8107 	beq.w	8023f18 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 8023d0a:	684d      	ldr	r5, [r1, #4]
 8023d0c:	950d      	str	r5, [sp, #52]	; 0x34
 8023d0e:	0e2d      	lsrs	r5, r5, #24
 8023d10:	9514      	str	r5, [sp, #80]	; 0x50
 8023d12:	b178      	cbz	r0, 8023d34 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8023d14:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 8023d18:	3f01      	subs	r7, #1
 8023d1a:	00bf      	lsls	r7, r7, #2
 8023d1c:	3704      	adds	r7, #4
 8023d1e:	eb01 0e07 	add.w	lr, r1, r7
 8023d22:	59c9      	ldr	r1, [r1, r7]
 8023d24:	9109      	str	r1, [sp, #36]	; 0x24
 8023d26:	0e09      	lsrs	r1, r1, #24
 8023d28:	9111      	str	r1, [sp, #68]	; 0x44
 8023d2a:	f8de 1004 	ldr.w	r1, [lr, #4]
 8023d2e:	910e      	str	r1, [sp, #56]	; 0x38
 8023d30:	0e09      	lsrs	r1, r1, #24
 8023d32:	9115      	str	r1, [sp, #84]	; 0x54
 8023d34:	b292      	uxth	r2, r2
 8023d36:	b280      	uxth	r0, r0
 8023d38:	fb02 f900 	mul.w	r9, r2, r0
 8023d3c:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8023d40:	0112      	lsls	r2, r2, #4
 8023d42:	eba2 0e09 	sub.w	lr, r2, r9
 8023d46:	b280      	uxth	r0, r0
 8023d48:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8023d4c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8023d4e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8023d50:	fa1f fe8e 	uxth.w	lr, lr
 8023d54:	1a09      	subs	r1, r1, r0
 8023d56:	b289      	uxth	r1, r1
 8023d58:	fb0e f202 	mul.w	r2, lr, r2
 8023d5c:	fb01 220c 	mla	r2, r1, ip, r2
 8023d60:	fb00 2205 	mla	r2, r0, r5, r2
 8023d64:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8023d66:	fb09 2205 	mla	r2, r9, r5, r2
 8023d6a:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8023d6e:	2a00      	cmp	r2, #0
 8023d70:	f000 80c9 	beq.w	8023f06 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 8023d74:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8023d78:	d019      	beq.n	8023dae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 8023d7a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8023d7e:	fb0c fa0a 	mul.w	sl, ip, sl
 8023d82:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8023d86:	fb0c fc03 	mul.w	ip, ip, r3
 8023d8a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8023d8e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8023d92:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8023d96:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8023d9a:	4453      	add	r3, sl
 8023d9c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8023da0:	0a1b      	lsrs	r3, r3, #8
 8023da2:	0a3f      	lsrs	r7, r7, #8
 8023da4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8023da8:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8023dac:	433b      	orrs	r3, r7
 8023dae:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8023db0:	2dff      	cmp	r5, #255	; 0xff
 8023db2:	d020      	beq.n	8023df6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 8023db4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8023db6:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8023dba:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8023dbc:	436f      	muls	r7, r5
 8023dbe:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8023dc0:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023dc4:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8023dc6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023dca:	fb05 fa0a 	mul.w	sl, r5, sl
 8023dce:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8023dd2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023dd6:	44bc      	add	ip, r7
 8023dd8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8023ddc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023de0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023de4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023de8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023dec:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023df0:	ea4c 050a 	orr.w	r5, ip, sl
 8023df4:	950d      	str	r5, [sp, #52]	; 0x34
 8023df6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8023df8:	2dff      	cmp	r5, #255	; 0xff
 8023dfa:	d020      	beq.n	8023e3e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 8023dfc:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8023dfe:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8023e02:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8023e04:	436f      	muls	r7, r5
 8023e06:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8023e08:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8023e0c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8023e0e:	fb05 fa0c 	mul.w	sl, r5, ip
 8023e12:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023e16:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023e1a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8023e1e:	44bc      	add	ip, r7
 8023e20:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8023e24:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023e28:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023e2c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023e30:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023e34:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023e38:	ea4c 050a 	orr.w	r5, ip, sl
 8023e3c:	9509      	str	r5, [sp, #36]	; 0x24
 8023e3e:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8023e40:	2dff      	cmp	r5, #255	; 0xff
 8023e42:	d020      	beq.n	8023e86 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 8023e44:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8023e46:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8023e4a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8023e4c:	436f      	muls	r7, r5
 8023e4e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8023e50:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023e54:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8023e56:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023e5a:	fb05 fa0a 	mul.w	sl, r5, sl
 8023e5e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8023e62:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023e66:	44bc      	add	ip, r7
 8023e68:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8023e6c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023e70:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023e74:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023e78:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023e7c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023e80:	ea4c 050a 	orr.w	r5, ip, sl
 8023e84:	950e      	str	r5, [sp, #56]	; 0x38
 8023e86:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8023e88:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8023e8c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8023e8e:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8023e92:	fb0e f707 	mul.w	r7, lr, r7
 8023e96:	fb01 770c 	mla	r7, r1, ip, r7
 8023e9a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023e9e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8023ea0:	fb00 770c 	mla	r7, r0, ip, r7
 8023ea4:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023ea8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8023eaa:	fb09 770c 	mla	r7, r9, ip, r7
 8023eae:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8023eb2:	fb0e fe0c 	mul.w	lr, lr, ip
 8023eb6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8023eba:	fb01 e303 	mla	r3, r1, r3, lr
 8023ebe:	9909      	ldr	r1, [sp, #36]	; 0x24
 8023ec0:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8023ec4:	990e      	ldr	r1, [sp, #56]	; 0x38
 8023ec6:	fb00 330a 	mla	r3, r0, sl, r3
 8023eca:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8023ece:	fb09 3c0c 	mla	ip, r9, ip, r3
 8023ed2:	0a3f      	lsrs	r7, r7, #8
 8023ed4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023ed8:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8023edc:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8023ee0:	ea47 070c 	orr.w	r7, r7, ip
 8023ee4:	2aff      	cmp	r2, #255	; 0xff
 8023ee6:	ea4f 2317 	mov.w	r3, r7, lsr #8
 8023eea:	d11e      	bne.n	8023f2a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 8023eec:	097a      	lsrs	r2, r7, #5
 8023eee:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 8023ef2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023ef6:	f023 0307 	bic.w	r3, r3, #7
 8023efa:	4313      	orrs	r3, r2
 8023efc:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8023f00:	431f      	orrs	r7, r3
 8023f02:	f8a8 7000 	strh.w	r7, [r8]
 8023f06:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8023f08:	441c      	add	r4, r3
 8023f0a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8023f0c:	f108 0802 	add.w	r8, r8, #2
 8023f10:	441e      	add	r6, r3
 8023f12:	f10b 3bff 	add.w	fp, fp, #4294967295
 8023f16:	e644      	b.n	8023ba2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 8023f18:	2800      	cmp	r0, #0
 8023f1a:	f43f af0b 	beq.w	8023d34 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8023f1e:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 8023f22:	9109      	str	r1, [sp, #36]	; 0x24
 8023f24:	0e09      	lsrs	r1, r1, #24
 8023f26:	9111      	str	r1, [sp, #68]	; 0x44
 8023f28:	e704      	b.n	8023d34 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8023f2a:	f8b8 1000 	ldrh.w	r1, [r8]
 8023f2e:	43d2      	mvns	r2, r2
 8023f30:	ea4f 2c21 	mov.w	ip, r1, asr #8
 8023f34:	fa5f fe82 	uxtb.w	lr, r2
 8023f38:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8023f3c:	fb0c fc0e 	mul.w	ip, ip, lr
 8023f40:	10c8      	asrs	r0, r1, #3
 8023f42:	00ca      	lsls	r2, r1, #3
 8023f44:	f10c 0101 	add.w	r1, ip, #1
 8023f48:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8023f4c:	0c39      	lsrs	r1, r7, #16
 8023f4e:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8023f52:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8023f56:	4911      	ldr	r1, [pc, #68]	; (8023f9c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8023f58:	fb00 f00e 	mul.w	r0, r0, lr
 8023f5c:	fa5f fc8c 	uxtb.w	ip, ip
 8023f60:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 8023f64:	b2d2      	uxtb	r2, r2
 8023f66:	1c41      	adds	r1, r0, #1
 8023f68:	fb02 f20e 	mul.w	r2, r2, lr
 8023f6c:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8023f70:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8023f74:	1c51      	adds	r1, r2, #1
 8023f76:	00c0      	lsls	r0, r0, #3
 8023f78:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8023f7c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023f80:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8023f84:	ea4c 0c00 	orr.w	ip, ip, r0
 8023f88:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8023f8c:	ea47 0c0c 	orr.w	ip, r7, ip
 8023f90:	f8a8 c000 	strh.w	ip, [r8]
 8023f94:	e7b7      	b.n	8023f06 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 8023f96:	b01b      	add	sp, #108	; 0x6c
 8023f98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023f9c:	fffff800 	.word	0xfffff800

08023fa0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 8023fa0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8023fa4:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8023fa8:	2d00      	cmp	r5, #0
 8023faa:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8023fae:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8023fb2:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8023fb6:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8023fba:	fb05 0e03 	mla	lr, r5, r3, r0
 8023fbe:	f2c0 808c 	blt.w	80240da <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8023fc2:	45a9      	cmp	r9, r5
 8023fc4:	f340 8089 	ble.w	80240da <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8023fc8:	2800      	cmp	r0, #0
 8023fca:	f2c0 8084 	blt.w	80240d6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8023fce:	4580      	cmp	r8, r0
 8023fd0:	f340 8081 	ble.w	80240d6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8023fd4:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8023fd8:	f01e 0f01 	tst.w	lr, #1
 8023fdc:	5d16      	ldrb	r6, [r2, r4]
 8023fde:	bf0c      	ite	eq
 8023fe0:	f006 060f 	andeq.w	r6, r6, #15
 8023fe4:	1136      	asrne	r6, r6, #4
 8023fe6:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8023fea:	b2f6      	uxtb	r6, r6
 8023fec:	1c44      	adds	r4, r0, #1
 8023fee:	d477      	bmi.n	80240e0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8023ff0:	45a0      	cmp	r8, r4
 8023ff2:	dd75      	ble.n	80240e0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8023ff4:	2f00      	cmp	r7, #0
 8023ff6:	d075      	beq.n	80240e4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 8023ff8:	f10e 0a01 	add.w	sl, lr, #1
 8023ffc:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8024000:	f01a 0f01 	tst.w	sl, #1
 8024004:	5d14      	ldrb	r4, [r2, r4]
 8024006:	bf0c      	ite	eq
 8024008:	f004 040f 	andeq.w	r4, r4, #15
 802400c:	1124      	asrne	r4, r4, #4
 802400e:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8024012:	b2e4      	uxtb	r4, r4
 8024014:	3501      	adds	r5, #1
 8024016:	d469      	bmi.n	80240ec <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8024018:	45a9      	cmp	r9, r5
 802401a:	dd67      	ble.n	80240ec <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 802401c:	f1bc 0f00 	cmp.w	ip, #0
 8024020:	d067      	beq.n	80240f2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 8024022:	2800      	cmp	r0, #0
 8024024:	db60      	blt.n	80240e8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 8024026:	4580      	cmp	r8, r0
 8024028:	dd5e      	ble.n	80240e8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 802402a:	eb03 090e 	add.w	r9, r3, lr
 802402e:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8024032:	f019 0f01 	tst.w	r9, #1
 8024036:	5d55      	ldrb	r5, [r2, r5]
 8024038:	bf0c      	ite	eq
 802403a:	f005 050f 	andeq.w	r5, r5, #15
 802403e:	112d      	asrne	r5, r5, #4
 8024040:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8024044:	b2ed      	uxtb	r5, r5
 8024046:	3001      	adds	r0, #1
 8024048:	d456      	bmi.n	80240f8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 802404a:	4580      	cmp	r8, r0
 802404c:	dd54      	ble.n	80240f8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 802404e:	2f00      	cmp	r7, #0
 8024050:	d054      	beq.n	80240fc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 8024052:	3301      	adds	r3, #1
 8024054:	449e      	add	lr, r3
 8024056:	ea4f 035e 	mov.w	r3, lr, lsr #1
 802405a:	f01e 0f01 	tst.w	lr, #1
 802405e:	5cd0      	ldrb	r0, [r2, r3]
 8024060:	bf0c      	ite	eq
 8024062:	f000 000f 	andeq.w	r0, r0, #15
 8024066:	1100      	asrne	r0, r0, #4
 8024068:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 802406c:	b2c3      	uxtb	r3, r0
 802406e:	b2ba      	uxth	r2, r7
 8024070:	fa1f fc8c 	uxth.w	ip, ip
 8024074:	fb02 f00c 	mul.w	r0, r2, ip
 8024078:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 802407c:	0112      	lsls	r2, r2, #4
 802407e:	fa1f fc8c 	uxth.w	ip, ip
 8024082:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8024086:	1a12      	subs	r2, r2, r0
 8024088:	eba7 070c 	sub.w	r7, r7, ip
 802408c:	b292      	uxth	r2, r2
 802408e:	b2bf      	uxth	r7, r7
 8024090:	4362      	muls	r2, r4
 8024092:	fb06 2207 	mla	r2, r6, r7, r2
 8024096:	fb0c 2505 	mla	r5, ip, r5, r2
 802409a:	fb00 5303 	mla	r3, r0, r3, r5
 802409e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80240a2:	b1b3      	cbz	r3, 80240d2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 80240a4:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 80240a8:	435a      	muls	r2, r3
 80240aa:	1c53      	adds	r3, r2, #1
 80240ac:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80240b0:	4a2d      	ldr	r2, [pc, #180]	; (8024168 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 80240b2:	121b      	asrs	r3, r3, #8
 80240b4:	6812      	ldr	r2, [r2, #0]
 80240b6:	2bff      	cmp	r3, #255	; 0xff
 80240b8:	ea4f 2612 	mov.w	r6, r2, lsr #8
 80240bc:	d120      	bne.n	8024100 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 80240be:	4b2b      	ldr	r3, [pc, #172]	; (802416c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 80240c0:	0950      	lsrs	r0, r2, #5
 80240c2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80240c6:	4033      	ands	r3, r6
 80240c8:	4318      	orrs	r0, r3
 80240ca:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80240ce:	4302      	orrs	r2, r0
 80240d0:	800a      	strh	r2, [r1, #0]
 80240d2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80240d6:	2600      	movs	r6, #0
 80240d8:	e788      	b.n	8023fec <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 80240da:	2400      	movs	r4, #0
 80240dc:	4626      	mov	r6, r4
 80240de:	e799      	b.n	8024014 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80240e0:	2400      	movs	r4, #0
 80240e2:	e797      	b.n	8024014 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80240e4:	463c      	mov	r4, r7
 80240e6:	e795      	b.n	8024014 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80240e8:	2500      	movs	r5, #0
 80240ea:	e7ac      	b.n	8024046 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 80240ec:	2300      	movs	r3, #0
 80240ee:	461d      	mov	r5, r3
 80240f0:	e7bd      	b.n	802406e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80240f2:	4663      	mov	r3, ip
 80240f4:	4665      	mov	r5, ip
 80240f6:	e7ba      	b.n	802406e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80240f8:	2300      	movs	r3, #0
 80240fa:	e7b8      	b.n	802406e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80240fc:	463b      	mov	r3, r7
 80240fe:	e7b6      	b.n	802406e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8024100:	880d      	ldrh	r5, [r1, #0]
 8024102:	b29f      	uxth	r7, r3
 8024104:	122c      	asrs	r4, r5, #8
 8024106:	f3c2 4007 	ubfx	r0, r2, #16, #8
 802410a:	43db      	mvns	r3, r3
 802410c:	b2db      	uxtb	r3, r3
 802410e:	fb10 f007 	smulbb	r0, r0, r7
 8024112:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8024116:	fb04 0403 	mla	r4, r4, r3, r0
 802411a:	b2f6      	uxtb	r6, r6
 802411c:	10e8      	asrs	r0, r5, #3
 802411e:	b2d2      	uxtb	r2, r2
 8024120:	00ed      	lsls	r5, r5, #3
 8024122:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024126:	fb12 f207 	smulbb	r2, r2, r7
 802412a:	fb16 f607 	smulbb	r6, r6, r7
 802412e:	b2ed      	uxtb	r5, r5
 8024130:	b2a4      	uxth	r4, r4
 8024132:	fb00 6603 	mla	r6, r0, r3, r6
 8024136:	fb05 2303 	mla	r3, r5, r3, r2
 802413a:	b29a      	uxth	r2, r3
 802413c:	1c63      	adds	r3, r4, #1
 802413e:	b2b0      	uxth	r0, r6
 8024140:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8024144:	1c53      	adds	r3, r2, #1
 8024146:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802414a:	1c42      	adds	r2, r0, #1
 802414c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024150:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8024154:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8024158:	0940      	lsrs	r0, r0, #5
 802415a:	4323      	orrs	r3, r4
 802415c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024160:	4303      	orrs	r3, r0
 8024162:	800b      	strh	r3, [r1, #0]
 8024164:	e7b5      	b.n	80240d2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8024166:	bf00      	nop
 8024168:	200137cc 	.word	0x200137cc
 802416c:	00fff800 	.word	0x00fff800

08024170 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024170:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024174:	b097      	sub	sp, #92	; 0x5c
 8024176:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 802417a:	9214      	str	r2, [sp, #80]	; 0x50
 802417c:	9309      	str	r3, [sp, #36]	; 0x24
 802417e:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8024180:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8024184:	910d      	str	r1, [sp, #52]	; 0x34
 8024186:	930f      	str	r3, [sp, #60]	; 0x3c
 8024188:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 802418c:	9015      	str	r0, [sp, #84]	; 0x54
 802418e:	6850      	ldr	r0, [r2, #4]
 8024190:	6812      	ldr	r2, [r2, #0]
 8024192:	fb00 1303 	mla	r3, r0, r3, r1
 8024196:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 802419a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802419c:	689b      	ldr	r3, [r3, #8]
 802419e:	3301      	adds	r3, #1
 80241a0:	f023 0301 	bic.w	r3, r3, #1
 80241a4:	930a      	str	r3, [sp, #40]	; 0x28
 80241a6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80241a8:	681f      	ldr	r7, [r3, #0]
 80241aa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80241ac:	2b00      	cmp	r3, #0
 80241ae:	dc03      	bgt.n	80241b8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80241b0:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80241b2:	2b00      	cmp	r3, #0
 80241b4:	f340 8287 	ble.w	80246c6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 80241b8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80241ba:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80241be:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80241c2:	1e48      	subs	r0, r1, #1
 80241c4:	f102 3cff 	add.w	ip, r2, #4294967295
 80241c8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80241ca:	2b00      	cmp	r3, #0
 80241cc:	f340 80c4 	ble.w	8024358 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80241d0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80241d4:	ea4f 4326 	mov.w	r3, r6, asr #16
 80241d8:	d406      	bmi.n	80241e8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80241da:	4586      	cmp	lr, r0
 80241dc:	da04      	bge.n	80241e8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80241de:	2b00      	cmp	r3, #0
 80241e0:	db02      	blt.n	80241e8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80241e2:	4563      	cmp	r3, ip
 80241e4:	f2c0 80b9 	blt.w	802435a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 80241e8:	f11e 0e01 	adds.w	lr, lr, #1
 80241ec:	f100 80aa 	bmi.w	8024344 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80241f0:	4571      	cmp	r1, lr
 80241f2:	f2c0 80a7 	blt.w	8024344 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80241f6:	3301      	adds	r3, #1
 80241f8:	f100 80a4 	bmi.w	8024344 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80241fc:	429a      	cmp	r2, r3
 80241fe:	f2c0 80a1 	blt.w	8024344 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8024202:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024204:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 8024208:	930e      	str	r3, [sp, #56]	; 0x38
 802420a:	46c8      	mov	r8, r9
 802420c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802420e:	2b00      	cmp	r3, #0
 8024210:	f340 80c3 	ble.w	802439a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8024214:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024216:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 802421a:	1423      	asrs	r3, r4, #16
 802421c:	ea4f 4026 	mov.w	r0, r6, asr #16
 8024220:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8024224:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8024228:	f100 814d 	bmi.w	80244c6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802422c:	f10c 3bff 	add.w	fp, ip, #4294967295
 8024230:	455b      	cmp	r3, fp
 8024232:	f280 8148 	bge.w	80244c6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8024236:	2800      	cmp	r0, #0
 8024238:	f2c0 8145 	blt.w	80244c6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802423c:	f10e 3bff 	add.w	fp, lr, #4294967295
 8024240:	4558      	cmp	r0, fp
 8024242:	f280 8140 	bge.w	80244c6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8024246:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8024248:	fb00 3305 	mla	r3, r0, r5, r3
 802424c:	0858      	lsrs	r0, r3, #1
 802424e:	07dd      	lsls	r5, r3, #31
 8024250:	f817 c000 	ldrb.w	ip, [r7, r0]
 8024254:	bf54      	ite	pl
 8024256:	f00c 0c0f 	andpl.w	ip, ip, #15
 802425a:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 802425e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024262:	fa5f fc8c 	uxtb.w	ip, ip
 8024266:	2a00      	cmp	r2, #0
 8024268:	f000 80db 	beq.w	8024422 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 802426c:	1c58      	adds	r0, r3, #1
 802426e:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8024272:	07c0      	lsls	r0, r0, #31
 8024274:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8024278:	bf54      	ite	pl
 802427a:	f00e 0e0f 	andpl.w	lr, lr, #15
 802427e:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8024282:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8024286:	fa5f f08e 	uxtb.w	r0, lr
 802428a:	9010      	str	r0, [sp, #64]	; 0x40
 802428c:	b1c9      	cbz	r1, 80242c2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 802428e:	4453      	add	r3, sl
 8024290:	0858      	lsrs	r0, r3, #1
 8024292:	07dd      	lsls	r5, r3, #31
 8024294:	5c38      	ldrb	r0, [r7, r0]
 8024296:	bf54      	ite	pl
 8024298:	f000 000f 	andpl.w	r0, r0, #15
 802429c:	1100      	asrmi	r0, r0, #4
 802429e:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80242a2:	3301      	adds	r3, #1
 80242a4:	b2c0      	uxtb	r0, r0
 80242a6:	900b      	str	r0, [sp, #44]	; 0x2c
 80242a8:	0858      	lsrs	r0, r3, #1
 80242aa:	07dd      	lsls	r5, r3, #31
 80242ac:	f817 e000 	ldrb.w	lr, [r7, r0]
 80242b0:	bf54      	ite	pl
 80242b2:	f00e 030f 	andpl.w	r3, lr, #15
 80242b6:	ea4f 132e 	movmi.w	r3, lr, asr #4
 80242ba:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80242be:	b2db      	uxtb	r3, r3
 80242c0:	9311      	str	r3, [sp, #68]	; 0x44
 80242c2:	b292      	uxth	r2, r2
 80242c4:	b289      	uxth	r1, r1
 80242c6:	fb02 f301 	mul.w	r3, r2, r1
 80242ca:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 80242ce:	0112      	lsls	r2, r2, #4
 80242d0:	b289      	uxth	r1, r1
 80242d2:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 80242d6:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80242d8:	1ad2      	subs	r2, r2, r3
 80242da:	1a40      	subs	r0, r0, r1
 80242dc:	b292      	uxth	r2, r2
 80242de:	436a      	muls	r2, r5
 80242e0:	b280      	uxth	r0, r0
 80242e2:	fb0c 2c00 	mla	ip, ip, r0, r2
 80242e6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80242e8:	fb01 c102 	mla	r1, r1, r2, ip
 80242ec:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80242ee:	fb03 1302 	mla	r3, r3, r2, r1
 80242f2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80242f6:	b1db      	cbz	r3, 8024330 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80242f8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80242fa:	4353      	muls	r3, r2
 80242fc:	1c5a      	adds	r2, r3, #1
 80242fe:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8024302:	4ac6      	ldr	r2, [pc, #792]	; (802461c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8024304:	121b      	asrs	r3, r3, #8
 8024306:	6812      	ldr	r2, [r2, #0]
 8024308:	2bff      	cmp	r3, #255	; 0xff
 802430a:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 802430e:	f040 8099 	bne.w	8024444 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 8024312:	0953      	lsrs	r3, r2, #5
 8024314:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8024318:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802431c:	f02c 0c07 	bic.w	ip, ip, #7
 8024320:	ea43 0c0c 	orr.w	ip, r3, ip
 8024324:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024328:	ea4c 0202 	orr.w	r2, ip, r2
 802432c:	f8a8 2000 	strh.w	r2, [r8]
 8024330:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8024332:	441c      	add	r4, r3
 8024334:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024336:	441e      	add	r6, r3
 8024338:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802433a:	3b01      	subs	r3, #1
 802433c:	f108 0802 	add.w	r8, r8, #2
 8024340:	930e      	str	r3, [sp, #56]	; 0x38
 8024342:	e763      	b.n	802420c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8024344:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8024346:	441c      	add	r4, r3
 8024348:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802434a:	441e      	add	r6, r3
 802434c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802434e:	3b01      	subs	r3, #1
 8024350:	9309      	str	r3, [sp, #36]	; 0x24
 8024352:	f109 0902 	add.w	r9, r9, #2
 8024356:	e737      	b.n	80241c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8024358:	d024      	beq.n	80243a4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 802435a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802435c:	9823      	ldr	r0, [sp, #140]	; 0x8c
 802435e:	3b01      	subs	r3, #1
 8024360:	fb00 4003 	mla	r0, r0, r3, r4
 8024364:	1400      	asrs	r0, r0, #16
 8024366:	f53f af4c 	bmi.w	8024202 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802436a:	3901      	subs	r1, #1
 802436c:	4288      	cmp	r0, r1
 802436e:	f6bf af48 	bge.w	8024202 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8024372:	9924      	ldr	r1, [sp, #144]	; 0x90
 8024374:	fb01 6303 	mla	r3, r1, r3, r6
 8024378:	141b      	asrs	r3, r3, #16
 802437a:	f53f af42 	bmi.w	8024202 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802437e:	3a01      	subs	r2, #1
 8024380:	4293      	cmp	r3, r2
 8024382:	f6bf af3e 	bge.w	8024202 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8024386:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 802438a:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 802438e:	930e      	str	r3, [sp, #56]	; 0x38
 8024390:	46c8      	mov	r8, r9
 8024392:	f1bb 0f00 	cmp.w	fp, #0
 8024396:	f300 80b7 	bgt.w	8024508 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 802439a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802439c:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80243a0:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80243a4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80243a6:	2b00      	cmp	r3, #0
 80243a8:	f340 818d 	ble.w	80246c6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 80243ac:	ee30 0a04 	vadd.f32	s0, s0, s8
 80243b0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80243b4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80243b8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80243ba:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80243be:	ee31 1a05 	vadd.f32	s2, s2, s10
 80243c2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80243c6:	eef0 6a62 	vmov.f32	s13, s5
 80243ca:	ee61 7a27 	vmul.f32	s15, s2, s15
 80243ce:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80243d2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80243d6:	ee16 4a90 	vmov	r4, s13
 80243da:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80243de:	eef0 6a43 	vmov.f32	s13, s6
 80243e2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80243e6:	ee12 2a90 	vmov	r2, s5
 80243ea:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80243ee:	fb92 f3f3 	sdiv	r3, r2, r3
 80243f2:	ee13 2a10 	vmov	r2, s6
 80243f6:	9323      	str	r3, [sp, #140]	; 0x8c
 80243f8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80243fa:	fb92 f3f3 	sdiv	r3, r2, r3
 80243fe:	9324      	str	r3, [sp, #144]	; 0x90
 8024400:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8024402:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8024404:	3b01      	subs	r3, #1
 8024406:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802440a:	930d      	str	r3, [sp, #52]	; 0x34
 802440c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802440e:	bf08      	it	eq
 8024410:	4613      	moveq	r3, r2
 8024412:	ee16 6a90 	vmov	r6, s13
 8024416:	9309      	str	r3, [sp, #36]	; 0x24
 8024418:	eeb0 3a67 	vmov.f32	s6, s15
 802441c:	eef0 2a47 	vmov.f32	s5, s14
 8024420:	e6c3      	b.n	80241aa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8024422:	2900      	cmp	r1, #0
 8024424:	f43f af4d 	beq.w	80242c2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8024428:	eb0a 0003 	add.w	r0, sl, r3
 802442c:	0843      	lsrs	r3, r0, #1
 802442e:	07c0      	lsls	r0, r0, #31
 8024430:	5cfb      	ldrb	r3, [r7, r3]
 8024432:	bf54      	ite	pl
 8024434:	f003 030f 	andpl.w	r3, r3, #15
 8024438:	111b      	asrmi	r3, r3, #4
 802443a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 802443e:	b2db      	uxtb	r3, r3
 8024440:	930b      	str	r3, [sp, #44]	; 0x2c
 8024442:	e73e      	b.n	80242c2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8024444:	f8b8 e000 	ldrh.w	lr, [r8]
 8024448:	fa1f fb83 	uxth.w	fp, r3
 802444c:	ea4f 202e 	mov.w	r0, lr, asr #8
 8024450:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8024454:	43db      	mvns	r3, r3
 8024456:	b2db      	uxtb	r3, r3
 8024458:	fb11 f10b 	smulbb	r1, r1, fp
 802445c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8024460:	fb00 1003 	mla	r0, r0, r3, r1
 8024464:	fa5f fc8c 	uxtb.w	ip, ip
 8024468:	ea4f 01ee 	mov.w	r1, lr, asr #3
 802446c:	b2d2      	uxtb	r2, r2
 802446e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8024472:	b280      	uxth	r0, r0
 8024474:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8024478:	fb1c fc0b 	smulbb	ip, ip, fp
 802447c:	fa5f fe8e 	uxtb.w	lr, lr
 8024480:	fb12 fb0b 	smulbb	fp, r2, fp
 8024484:	fb01 cc03 	mla	ip, r1, r3, ip
 8024488:	fb0e bb03 	mla	fp, lr, r3, fp
 802448c:	1c43      	adds	r3, r0, #1
 802448e:	fa1f fc8c 	uxth.w	ip, ip
 8024492:	fa1f fb8b 	uxth.w	fp, fp
 8024496:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802449a:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 802449e:	f10c 0101 	add.w	r1, ip, #1
 80244a2:	f10b 0001 	add.w	r0, fp, #1
 80244a6:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 80244aa:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80244ae:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80244b2:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80244b6:	4318      	orrs	r0, r3
 80244b8:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80244bc:	ea40 000c 	orr.w	r0, r0, ip
 80244c0:	f8a8 0000 	strh.w	r0, [r8]
 80244c4:	e734      	b.n	8024330 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80244c6:	f113 0b01 	adds.w	fp, r3, #1
 80244ca:	f53f af31 	bmi.w	8024330 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80244ce:	45dc      	cmp	ip, fp
 80244d0:	f6ff af2e 	blt.w	8024330 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80244d4:	f110 0b01 	adds.w	fp, r0, #1
 80244d8:	f53f af2a 	bmi.w	8024330 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80244dc:	45de      	cmp	lr, fp
 80244de:	f6ff af27 	blt.w	8024330 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80244e2:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80244e4:	9302      	str	r3, [sp, #8]
 80244e6:	fa0f f38e 	sxth.w	r3, lr
 80244ea:	9301      	str	r3, [sp, #4]
 80244ec:	fa0f f38c 	sxth.w	r3, ip
 80244f0:	e9cd 0203 	strd	r0, r2, [sp, #12]
 80244f4:	e9cd 1505 	strd	r1, r5, [sp, #20]
 80244f8:	9300      	str	r3, [sp, #0]
 80244fa:	463a      	mov	r2, r7
 80244fc:	4653      	mov	r3, sl
 80244fe:	4641      	mov	r1, r8
 8024500:	9815      	ldr	r0, [sp, #84]	; 0x54
 8024502:	f7ff fd4d 	bl	8023fa0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 8024506:	e713      	b.n	8024330 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8024508:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 802450a:	1422      	asrs	r2, r4, #16
 802450c:	1433      	asrs	r3, r6, #16
 802450e:	fb05 2303 	mla	r3, r5, r3, r2
 8024512:	085a      	lsrs	r2, r3, #1
 8024514:	07dd      	lsls	r5, r3, #31
 8024516:	5cba      	ldrb	r2, [r7, r2]
 8024518:	bf54      	ite	pl
 802451a:	f002 020f 	andpl.w	r2, r2, #15
 802451e:	1112      	asrmi	r2, r2, #4
 8024520:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8024524:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8024528:	f3c6 3003 	ubfx	r0, r6, #12, #4
 802452c:	b2d2      	uxtb	r2, r2
 802452e:	2900      	cmp	r1, #0
 8024530:	d076      	beq.n	8024620 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8024532:	f103 0e01 	add.w	lr, r3, #1
 8024536:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 802453a:	f01e 0f01 	tst.w	lr, #1
 802453e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8024542:	bf0c      	ite	eq
 8024544:	f00c 0c0f 	andeq.w	ip, ip, #15
 8024548:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 802454c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024550:	fa5f f58c 	uxtb.w	r5, ip
 8024554:	9512      	str	r5, [sp, #72]	; 0x48
 8024556:	b300      	cbz	r0, 802459a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8024558:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802455a:	442b      	add	r3, r5
 802455c:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8024560:	07dd      	lsls	r5, r3, #31
 8024562:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8024566:	bf54      	ite	pl
 8024568:	f00c 0c0f 	andpl.w	ip, ip, #15
 802456c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8024570:	3301      	adds	r3, #1
 8024572:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024576:	fa5f f58c 	uxtb.w	r5, ip
 802457a:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 802457e:	950c      	str	r5, [sp, #48]	; 0x30
 8024580:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8024584:	07dd      	lsls	r5, r3, #31
 8024586:	bf54      	ite	pl
 8024588:	f00c 0c0f 	andpl.w	ip, ip, #15
 802458c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8024590:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024594:	fa5f f38c 	uxtb.w	r3, ip
 8024598:	9313      	str	r3, [sp, #76]	; 0x4c
 802459a:	b289      	uxth	r1, r1
 802459c:	b280      	uxth	r0, r0
 802459e:	fb01 f300 	mul.w	r3, r1, r0
 80245a2:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 80245a6:	0109      	lsls	r1, r1, #4
 80245a8:	b280      	uxth	r0, r0
 80245aa:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 80245ae:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80245b0:	1ac9      	subs	r1, r1, r3
 80245b2:	ebac 0c00 	sub.w	ip, ip, r0
 80245b6:	b289      	uxth	r1, r1
 80245b8:	4369      	muls	r1, r5
 80245ba:	fa1f fc8c 	uxth.w	ip, ip
 80245be:	fb02 120c 	mla	r2, r2, ip, r1
 80245c2:	990c      	ldr	r1, [sp, #48]	; 0x30
 80245c4:	fb00 2001 	mla	r0, r0, r1, r2
 80245c8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80245ca:	fb03 0302 	mla	r3, r3, r2, r0
 80245ce:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80245d2:	b1d3      	cbz	r3, 802460a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 80245d4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80245d6:	4353      	muls	r3, r2
 80245d8:	1c5a      	adds	r2, r3, #1
 80245da:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80245de:	4a0f      	ldr	r2, [pc, #60]	; (802461c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 80245e0:	121b      	asrs	r3, r3, #8
 80245e2:	6812      	ldr	r2, [r2, #0]
 80245e4:	2bff      	cmp	r3, #255	; 0xff
 80245e6:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 80245ea:	d12d      	bne.n	8024648 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 80245ec:	0953      	lsrs	r3, r2, #5
 80245ee:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 80245f2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80245f6:	f02c 0c07 	bic.w	ip, ip, #7
 80245fa:	ea43 0c0c 	orr.w	ip, r3, ip
 80245fe:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024602:	ea4c 0202 	orr.w	r2, ip, r2
 8024606:	f8a8 2000 	strh.w	r2, [r8]
 802460a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 802460c:	441c      	add	r4, r3
 802460e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024610:	f108 0802 	add.w	r8, r8, #2
 8024614:	441e      	add	r6, r3
 8024616:	f10b 3bff 	add.w	fp, fp, #4294967295
 802461a:	e6ba      	b.n	8024392 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 802461c:	200137cc 	.word	0x200137cc
 8024620:	2800      	cmp	r0, #0
 8024622:	d0ba      	beq.n	802459a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8024624:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024626:	442b      	add	r3, r5
 8024628:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 802462c:	07db      	lsls	r3, r3, #31
 802462e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8024632:	bf54      	ite	pl
 8024634:	f00c 0c0f 	andpl.w	ip, ip, #15
 8024638:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 802463c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024640:	fa5f f38c 	uxtb.w	r3, ip
 8024644:	930c      	str	r3, [sp, #48]	; 0x30
 8024646:	e7a8      	b.n	802459a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8024648:	f8b8 e000 	ldrh.w	lr, [r8]
 802464c:	fa1f fa83 	uxth.w	sl, r3
 8024650:	ea4f 202e 	mov.w	r0, lr, asr #8
 8024654:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8024658:	43db      	mvns	r3, r3
 802465a:	b2db      	uxtb	r3, r3
 802465c:	fb11 f10a 	smulbb	r1, r1, sl
 8024660:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8024664:	fb00 1003 	mla	r0, r0, r3, r1
 8024668:	b2d2      	uxtb	r2, r2
 802466a:	ea4f 01ee 	mov.w	r1, lr, asr #3
 802466e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8024672:	fa5f fe8e 	uxtb.w	lr, lr
 8024676:	fb12 f20a 	smulbb	r2, r2, sl
 802467a:	fb0e 2203 	mla	r2, lr, r3, r2
 802467e:	fa5f fc8c 	uxtb.w	ip, ip
 8024682:	b280      	uxth	r0, r0
 8024684:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8024688:	b292      	uxth	r2, r2
 802468a:	fb1c fc0a 	smulbb	ip, ip, sl
 802468e:	fb01 cc03 	mla	ip, r1, r3, ip
 8024692:	1c43      	adds	r3, r0, #1
 8024694:	1c51      	adds	r1, r2, #1
 8024696:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802469a:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 802469e:	fa1f fc8c 	uxth.w	ip, ip
 80246a2:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 80246a6:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80246aa:	4308      	orrs	r0, r1
 80246ac:	f10c 0101 	add.w	r1, ip, #1
 80246b0:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80246b4:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80246b8:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80246bc:	ea40 000c 	orr.w	r0, r0, ip
 80246c0:	f8a8 0000 	strh.w	r0, [r8]
 80246c4:	e7a1      	b.n	802460a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 80246c6:	b017      	add	sp, #92	; 0x5c
 80246c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080246cc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 80246cc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80246d0:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 80246d4:	2d00      	cmp	r5, #0
 80246d6:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 80246da:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 80246de:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 80246e2:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 80246e6:	fb05 0e03 	mla	lr, r5, r3, r0
 80246ea:	f2c0 80b0 	blt.w	802484e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 80246ee:	45a9      	cmp	r9, r5
 80246f0:	f340 80ad 	ble.w	802484e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 80246f4:	2800      	cmp	r0, #0
 80246f6:	f2c0 80a8 	blt.w	802484a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 80246fa:	4580      	cmp	r8, r0
 80246fc:	f340 80a5 	ble.w	802484a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8024700:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8024704:	f01e 0f01 	tst.w	lr, #1
 8024708:	5d16      	ldrb	r6, [r2, r4]
 802470a:	bf0c      	ite	eq
 802470c:	f006 060f 	andeq.w	r6, r6, #15
 8024710:	1136      	asrne	r6, r6, #4
 8024712:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8024716:	b2f6      	uxtb	r6, r6
 8024718:	1c44      	adds	r4, r0, #1
 802471a:	f100 809b 	bmi.w	8024854 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 802471e:	45a0      	cmp	r8, r4
 8024720:	f340 8098 	ble.w	8024854 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8024724:	2f00      	cmp	r7, #0
 8024726:	f000 8097 	beq.w	8024858 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 802472a:	f10e 0a01 	add.w	sl, lr, #1
 802472e:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8024732:	f01a 0f01 	tst.w	sl, #1
 8024736:	5d14      	ldrb	r4, [r2, r4]
 8024738:	bf0c      	ite	eq
 802473a:	f004 040f 	andeq.w	r4, r4, #15
 802473e:	1124      	asrne	r4, r4, #4
 8024740:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8024744:	b2e4      	uxtb	r4, r4
 8024746:	3501      	adds	r5, #1
 8024748:	f100 808a 	bmi.w	8024860 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 802474c:	45a9      	cmp	r9, r5
 802474e:	f340 8087 	ble.w	8024860 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8024752:	f1bc 0f00 	cmp.w	ip, #0
 8024756:	f000 8086 	beq.w	8024866 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 802475a:	2800      	cmp	r0, #0
 802475c:	db7e      	blt.n	802485c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 802475e:	4580      	cmp	r8, r0
 8024760:	dd7c      	ble.n	802485c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8024762:	eb03 090e 	add.w	r9, r3, lr
 8024766:	ea4f 0559 	mov.w	r5, r9, lsr #1
 802476a:	f019 0f01 	tst.w	r9, #1
 802476e:	5d55      	ldrb	r5, [r2, r5]
 8024770:	bf0c      	ite	eq
 8024772:	f005 050f 	andeq.w	r5, r5, #15
 8024776:	112d      	asrne	r5, r5, #4
 8024778:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 802477c:	b2ed      	uxtb	r5, r5
 802477e:	3001      	adds	r0, #1
 8024780:	d474      	bmi.n	802486c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8024782:	4580      	cmp	r8, r0
 8024784:	dd72      	ble.n	802486c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8024786:	2f00      	cmp	r7, #0
 8024788:	d072      	beq.n	8024870 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 802478a:	3301      	adds	r3, #1
 802478c:	449e      	add	lr, r3
 802478e:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8024792:	f01e 0f01 	tst.w	lr, #1
 8024796:	5cd0      	ldrb	r0, [r2, r3]
 8024798:	bf0c      	ite	eq
 802479a:	f000 000f 	andeq.w	r0, r0, #15
 802479e:	1100      	asrne	r0, r0, #4
 80247a0:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80247a4:	b2c3      	uxtb	r3, r0
 80247a6:	b2ba      	uxth	r2, r7
 80247a8:	fa1f fc8c 	uxth.w	ip, ip
 80247ac:	fb02 f00c 	mul.w	r0, r2, ip
 80247b0:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 80247b4:	0112      	lsls	r2, r2, #4
 80247b6:	fa1f fc8c 	uxth.w	ip, ip
 80247ba:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 80247be:	1a12      	subs	r2, r2, r0
 80247c0:	eba7 070c 	sub.w	r7, r7, ip
 80247c4:	b292      	uxth	r2, r2
 80247c6:	b2bf      	uxth	r7, r7
 80247c8:	4362      	muls	r2, r4
 80247ca:	fb06 2207 	mla	r2, r6, r7, r2
 80247ce:	fb0c 2505 	mla	r5, ip, r5, r2
 80247d2:	fb00 5303 	mla	r3, r0, r3, r5
 80247d6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80247da:	b3a3      	cbz	r3, 8024846 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 80247dc:	4a25      	ldr	r2, [pc, #148]	; (8024874 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 80247de:	880e      	ldrh	r6, [r1, #0]
 80247e0:	6815      	ldr	r5, [r2, #0]
 80247e2:	1234      	asrs	r4, r6, #8
 80247e4:	b29a      	uxth	r2, r3
 80247e6:	f3c5 4007 	ubfx	r0, r5, #16, #8
 80247ea:	43db      	mvns	r3, r3
 80247ec:	b2db      	uxtb	r3, r3
 80247ee:	fb10 f002 	smulbb	r0, r0, r2
 80247f2:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80247f6:	fb04 0403 	mla	r4, r4, r3, r0
 80247fa:	f3c5 2707 	ubfx	r7, r5, #8, #8
 80247fe:	10f0      	asrs	r0, r6, #3
 8024800:	b2ed      	uxtb	r5, r5
 8024802:	00f6      	lsls	r6, r6, #3
 8024804:	fb17 f702 	smulbb	r7, r7, r2
 8024808:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802480c:	fb15 f202 	smulbb	r2, r5, r2
 8024810:	b2f6      	uxtb	r6, r6
 8024812:	b2a4      	uxth	r4, r4
 8024814:	fb00 7003 	mla	r0, r0, r3, r7
 8024818:	fb06 2303 	mla	r3, r6, r3, r2
 802481c:	b29a      	uxth	r2, r3
 802481e:	1c63      	adds	r3, r4, #1
 8024820:	b280      	uxth	r0, r0
 8024822:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8024826:	1c53      	adds	r3, r2, #1
 8024828:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802482c:	1c42      	adds	r2, r0, #1
 802482e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024832:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8024836:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802483a:	0940      	lsrs	r0, r0, #5
 802483c:	4323      	orrs	r3, r4
 802483e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024842:	4303      	orrs	r3, r0
 8024844:	800b      	strh	r3, [r1, #0]
 8024846:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802484a:	2600      	movs	r6, #0
 802484c:	e764      	b.n	8024718 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 802484e:	2400      	movs	r4, #0
 8024850:	4626      	mov	r6, r4
 8024852:	e778      	b.n	8024746 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8024854:	2400      	movs	r4, #0
 8024856:	e776      	b.n	8024746 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8024858:	463c      	mov	r4, r7
 802485a:	e774      	b.n	8024746 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 802485c:	2500      	movs	r5, #0
 802485e:	e78e      	b.n	802477e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 8024860:	2300      	movs	r3, #0
 8024862:	461d      	mov	r5, r3
 8024864:	e79f      	b.n	80247a6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8024866:	4663      	mov	r3, ip
 8024868:	4665      	mov	r5, ip
 802486a:	e79c      	b.n	80247a6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 802486c:	2300      	movs	r3, #0
 802486e:	e79a      	b.n	80247a6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8024870:	463b      	mov	r3, r7
 8024872:	e798      	b.n	80247a6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8024874:	200137cc 	.word	0x200137cc

08024878 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024878:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802487c:	b093      	sub	sp, #76	; 0x4c
 802487e:	461d      	mov	r5, r3
 8024880:	920c      	str	r2, [sp, #48]	; 0x30
 8024882:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8024884:	9107      	str	r1, [sp, #28]
 8024886:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 802488a:	9011      	str	r0, [sp, #68]	; 0x44
 802488c:	6850      	ldr	r0, [r2, #4]
 802488e:	6812      	ldr	r2, [r2, #0]
 8024890:	fb00 1303 	mla	r3, r0, r3, r1
 8024894:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8024898:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802489a:	689b      	ldr	r3, [r3, #8]
 802489c:	3301      	adds	r3, #1
 802489e:	f023 0301 	bic.w	r3, r3, #1
 80248a2:	9306      	str	r3, [sp, #24]
 80248a4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80248a6:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 80248aa:	681f      	ldr	r7, [r3, #0]
 80248ac:	9b07      	ldr	r3, [sp, #28]
 80248ae:	2b00      	cmp	r3, #0
 80248b0:	dc03      	bgt.n	80248ba <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 80248b2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80248b4:	2b00      	cmp	r3, #0
 80248b6:	f340 8267 	ble.w	8024d88 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 80248ba:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80248bc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80248c0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80248c4:	1e48      	subs	r0, r1, #1
 80248c6:	f102 3cff 	add.w	ip, r2, #4294967295
 80248ca:	2d00      	cmp	r5, #0
 80248cc:	f340 80b8 	ble.w	8024a40 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80248d0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80248d4:	ea4f 4326 	mov.w	r3, r6, asr #16
 80248d8:	d406      	bmi.n	80248e8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80248da:	4586      	cmp	lr, r0
 80248dc:	da04      	bge.n	80248e8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80248de:	2b00      	cmp	r3, #0
 80248e0:	db02      	blt.n	80248e8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80248e2:	4563      	cmp	r3, ip
 80248e4:	f2c0 80ad 	blt.w	8024a42 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 80248e8:	f11e 0e01 	adds.w	lr, lr, #1
 80248ec:	f100 80a0 	bmi.w	8024a30 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 80248f0:	4571      	cmp	r1, lr
 80248f2:	f2c0 809d 	blt.w	8024a30 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 80248f6:	3301      	adds	r3, #1
 80248f8:	f100 809a 	bmi.w	8024a30 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 80248fc:	429a      	cmp	r2, r3
 80248fe:	f2c0 8097 	blt.w	8024a30 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8024902:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 8024906:	9509      	str	r5, [sp, #36]	; 0x24
 8024908:	46c8      	mov	r8, r9
 802490a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802490c:	2b00      	cmp	r3, #0
 802490e:	f340 80b6 	ble.w	8024a7e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8024912:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8024916:	9308      	str	r3, [sp, #32]
 8024918:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802491a:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 802491e:	1423      	asrs	r3, r4, #16
 8024920:	ea4f 4026 	mov.w	r0, r6, asr #16
 8024924:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8024928:	f100 813e 	bmi.w	8024ba8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 802492c:	f10c 3bff 	add.w	fp, ip, #4294967295
 8024930:	455b      	cmp	r3, fp
 8024932:	f280 8139 	bge.w	8024ba8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8024936:	2800      	cmp	r0, #0
 8024938:	f2c0 8136 	blt.w	8024ba8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 802493c:	f10e 3bff 	add.w	fp, lr, #4294967295
 8024940:	4558      	cmp	r0, fp
 8024942:	f280 8131 	bge.w	8024ba8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8024946:	9a06      	ldr	r2, [sp, #24]
 8024948:	fb00 3302 	mla	r3, r0, r2, r3
 802494c:	0858      	lsrs	r0, r3, #1
 802494e:	07da      	lsls	r2, r3, #31
 8024950:	f817 c000 	ldrb.w	ip, [r7, r0]
 8024954:	9a08      	ldr	r2, [sp, #32]
 8024956:	bf54      	ite	pl
 8024958:	f00c 0c0f 	andpl.w	ip, ip, #15
 802495c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8024960:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024964:	fa5f fc8c 	uxtb.w	ip, ip
 8024968:	2a00      	cmp	r2, #0
 802496a:	f000 80cb 	beq.w	8024b04 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 802496e:	1c58      	adds	r0, r3, #1
 8024970:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8024974:	07c0      	lsls	r0, r0, #31
 8024976:	f817 e00e 	ldrb.w	lr, [r7, lr]
 802497a:	bf54      	ite	pl
 802497c:	f00e 0e0f 	andpl.w	lr, lr, #15
 8024980:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8024984:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8024988:	fa5f fe8e 	uxtb.w	lr, lr
 802498c:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 8024990:	b1b9      	cbz	r1, 80249c2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8024992:	4453      	add	r3, sl
 8024994:	0858      	lsrs	r0, r3, #1
 8024996:	07da      	lsls	r2, r3, #31
 8024998:	5c38      	ldrb	r0, [r7, r0]
 802499a:	bf54      	ite	pl
 802499c:	f000 000f 	andpl.w	r0, r0, #15
 80249a0:	1100      	asrmi	r0, r0, #4
 80249a2:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80249a6:	b2c0      	uxtb	r0, r0
 80249a8:	900a      	str	r0, [sp, #40]	; 0x28
 80249aa:	1c58      	adds	r0, r3, #1
 80249ac:	0843      	lsrs	r3, r0, #1
 80249ae:	07c2      	lsls	r2, r0, #31
 80249b0:	5cfb      	ldrb	r3, [r7, r3]
 80249b2:	bf54      	ite	pl
 80249b4:	f003 030f 	andpl.w	r3, r3, #15
 80249b8:	111b      	asrmi	r3, r3, #4
 80249ba:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80249be:	b2db      	uxtb	r3, r3
 80249c0:	930e      	str	r3, [sp, #56]	; 0x38
 80249c2:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 80249c6:	b289      	uxth	r1, r1
 80249c8:	fb02 f301 	mul.w	r3, r2, r1
 80249cc:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 80249d0:	0112      	lsls	r2, r2, #4
 80249d2:	b289      	uxth	r1, r1
 80249d4:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 80249d8:	1a40      	subs	r0, r0, r1
 80249da:	fa1f fe80 	uxth.w	lr, r0
 80249de:	1ad2      	subs	r2, r2, r3
 80249e0:	980d      	ldr	r0, [sp, #52]	; 0x34
 80249e2:	b292      	uxth	r2, r2
 80249e4:	4342      	muls	r2, r0
 80249e6:	fb0c 2c0e 	mla	ip, ip, lr, r2
 80249ea:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80249ec:	fb01 c102 	mla	r1, r1, r2, ip
 80249f0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80249f2:	fb03 1302 	mla	r3, r3, r2, r1
 80249f6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80249fa:	2bff      	cmp	r3, #255	; 0xff
 80249fc:	f040 8093 	bne.w	8024b26 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8024a00:	4bbe      	ldr	r3, [pc, #760]	; (8024cfc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8024a02:	681a      	ldr	r2, [r3, #0]
 8024a04:	4bbe      	ldr	r3, [pc, #760]	; (8024d00 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8024a06:	0951      	lsrs	r1, r2, #5
 8024a08:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8024a0c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8024a10:	430b      	orrs	r3, r1
 8024a12:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024a16:	4313      	orrs	r3, r2
 8024a18:	f8a8 3000 	strh.w	r3, [r8]
 8024a1c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8024a1e:	441c      	add	r4, r3
 8024a20:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024a22:	441e      	add	r6, r3
 8024a24:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024a26:	3b01      	subs	r3, #1
 8024a28:	f108 0802 	add.w	r8, r8, #2
 8024a2c:	9309      	str	r3, [sp, #36]	; 0x24
 8024a2e:	e76c      	b.n	802490a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8024a30:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8024a32:	441c      	add	r4, r3
 8024a34:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024a36:	3d01      	subs	r5, #1
 8024a38:	441e      	add	r6, r3
 8024a3a:	f109 0902 	add.w	r9, r9, #2
 8024a3e:	e744      	b.n	80248ca <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8024a40:	d021      	beq.n	8024a86 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8024a42:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8024a44:	1e6b      	subs	r3, r5, #1
 8024a46:	fb00 4003 	mla	r0, r0, r3, r4
 8024a4a:	1400      	asrs	r0, r0, #16
 8024a4c:	f53f af59 	bmi.w	8024902 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8024a50:	3901      	subs	r1, #1
 8024a52:	4288      	cmp	r0, r1
 8024a54:	f6bf af55 	bge.w	8024902 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8024a58:	9920      	ldr	r1, [sp, #128]	; 0x80
 8024a5a:	fb01 6303 	mla	r3, r1, r3, r6
 8024a5e:	141b      	asrs	r3, r3, #16
 8024a60:	f53f af4f 	bmi.w	8024902 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8024a64:	3a01      	subs	r2, #1
 8024a66:	4293      	cmp	r3, r2
 8024a68:	f6bf af4b 	bge.w	8024902 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8024a6c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8024a70:	9308      	str	r3, [sp, #32]
 8024a72:	46a8      	mov	r8, r5
 8024a74:	46ce      	mov	lr, r9
 8024a76:	f1b8 0f00 	cmp.w	r8, #0
 8024a7a:	f300 80b5 	bgt.w	8024be8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8024a7e:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8024a82:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8024a86:	9b07      	ldr	r3, [sp, #28]
 8024a88:	2b00      	cmp	r3, #0
 8024a8a:	f340 817d 	ble.w	8024d88 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8024a8e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024a92:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024a96:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024a9a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8024a9c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8024aa0:	ee31 1a05 	vadd.f32	s2, s2, s10
 8024aa4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8024aa8:	eef0 6a62 	vmov.f32	s13, s5
 8024aac:	ee61 7a27 	vmul.f32	s15, s2, s15
 8024ab0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024ab4:	ee77 2a62 	vsub.f32	s5, s14, s5
 8024ab8:	ee16 4a90 	vmov	r4, s13
 8024abc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8024ac0:	eef0 6a43 	vmov.f32	s13, s6
 8024ac4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8024ac8:	ee12 2a90 	vmov	r2, s5
 8024acc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8024ad0:	fb92 f3f3 	sdiv	r3, r2, r3
 8024ad4:	ee13 2a10 	vmov	r2, s6
 8024ad8:	931f      	str	r3, [sp, #124]	; 0x7c
 8024ada:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8024adc:	fb92 f3f3 	sdiv	r3, r2, r3
 8024ae0:	9320      	str	r3, [sp, #128]	; 0x80
 8024ae2:	9b07      	ldr	r3, [sp, #28]
 8024ae4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8024ae6:	3b01      	subs	r3, #1
 8024ae8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024aec:	9307      	str	r3, [sp, #28]
 8024aee:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8024af0:	ee16 6a90 	vmov	r6, s13
 8024af4:	bf14      	ite	ne
 8024af6:	461d      	movne	r5, r3
 8024af8:	4615      	moveq	r5, r2
 8024afa:	eeb0 3a67 	vmov.f32	s6, s15
 8024afe:	eef0 2a47 	vmov.f32	s5, s14
 8024b02:	e6d3      	b.n	80248ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8024b04:	2900      	cmp	r1, #0
 8024b06:	f43f af5c 	beq.w	80249c2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8024b0a:	eb0a 0003 	add.w	r0, sl, r3
 8024b0e:	0843      	lsrs	r3, r0, #1
 8024b10:	07c0      	lsls	r0, r0, #31
 8024b12:	5cfb      	ldrb	r3, [r7, r3]
 8024b14:	bf54      	ite	pl
 8024b16:	f003 030f 	andpl.w	r3, r3, #15
 8024b1a:	111b      	asrmi	r3, r3, #4
 8024b1c:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8024b20:	b2db      	uxtb	r3, r3
 8024b22:	930a      	str	r3, [sp, #40]	; 0x28
 8024b24:	e74d      	b.n	80249c2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8024b26:	2b00      	cmp	r3, #0
 8024b28:	f43f af78 	beq.w	8024a1c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8024b2c:	4a73      	ldr	r2, [pc, #460]	; (8024cfc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8024b2e:	f8b8 c000 	ldrh.w	ip, [r8]
 8024b32:	6810      	ldr	r0, [r2, #0]
 8024b34:	fa1f fe83 	uxth.w	lr, r3
 8024b38:	ea4f 212c 	mov.w	r1, ip, asr #8
 8024b3c:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8024b40:	43db      	mvns	r3, r3
 8024b42:	b2db      	uxtb	r3, r3
 8024b44:	fb12 f20e 	smulbb	r2, r2, lr
 8024b48:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8024b4c:	fb01 2103 	mla	r1, r1, r3, r2
 8024b50:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8024b54:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8024b58:	b2c0      	uxtb	r0, r0
 8024b5a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8024b5e:	fb1b fb0e 	smulbb	fp, fp, lr
 8024b62:	b289      	uxth	r1, r1
 8024b64:	fb10 fe0e 	smulbb	lr, r0, lr
 8024b68:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8024b6c:	fa5f fc8c 	uxtb.w	ip, ip
 8024b70:	fb02 b203 	mla	r2, r2, r3, fp
 8024b74:	1c48      	adds	r0, r1, #1
 8024b76:	fb0c e303 	mla	r3, ip, r3, lr
 8024b7a:	b292      	uxth	r2, r2
 8024b7c:	b29b      	uxth	r3, r3
 8024b7e:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 8024b82:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 8024b86:	f102 0b01 	add.w	fp, r2, #1
 8024b8a:	1c59      	adds	r1, r3, #1
 8024b8c:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8024b90:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8024b94:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8024b98:	0952      	lsrs	r2, r2, #5
 8024b9a:	4301      	orrs	r1, r0
 8024b9c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024ba0:	4311      	orrs	r1, r2
 8024ba2:	f8a8 1000 	strh.w	r1, [r8]
 8024ba6:	e739      	b.n	8024a1c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8024ba8:	f113 0b01 	adds.w	fp, r3, #1
 8024bac:	f53f af36 	bmi.w	8024a1c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8024bb0:	45dc      	cmp	ip, fp
 8024bb2:	f6ff af33 	blt.w	8024a1c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8024bb6:	f110 0b01 	adds.w	fp, r0, #1
 8024bba:	f53f af2f 	bmi.w	8024a1c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8024bbe:	45de      	cmp	lr, fp
 8024bc0:	f6ff af2c 	blt.w	8024a1c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8024bc4:	9a08      	ldr	r2, [sp, #32]
 8024bc6:	9302      	str	r3, [sp, #8]
 8024bc8:	fa0f f38e 	sxth.w	r3, lr
 8024bcc:	9301      	str	r3, [sp, #4]
 8024bce:	fa0f f38c 	sxth.w	r3, ip
 8024bd2:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8024bd6:	9105      	str	r1, [sp, #20]
 8024bd8:	9300      	str	r3, [sp, #0]
 8024bda:	463a      	mov	r2, r7
 8024bdc:	4653      	mov	r3, sl
 8024bde:	4641      	mov	r1, r8
 8024be0:	9811      	ldr	r0, [sp, #68]	; 0x44
 8024be2:	f7ff fd73 	bl	80246cc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 8024be6:	e719      	b.n	8024a1c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8024be8:	9906      	ldr	r1, [sp, #24]
 8024bea:	1422      	asrs	r2, r4, #16
 8024bec:	1433      	asrs	r3, r6, #16
 8024bee:	fb01 2303 	mla	r3, r1, r3, r2
 8024bf2:	085a      	lsrs	r2, r3, #1
 8024bf4:	07d9      	lsls	r1, r3, #31
 8024bf6:	5cba      	ldrb	r2, [r7, r2]
 8024bf8:	bf54      	ite	pl
 8024bfa:	f002 020f 	andpl.w	r2, r2, #15
 8024bfe:	1112      	asrmi	r2, r2, #4
 8024c00:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8024c04:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8024c08:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8024c0c:	b2d2      	uxtb	r2, r2
 8024c0e:	2800      	cmp	r0, #0
 8024c10:	d062      	beq.n	8024cd8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 8024c12:	f103 0a01 	add.w	sl, r3, #1
 8024c16:	ea4f 015a 	mov.w	r1, sl, lsr #1
 8024c1a:	f01a 0f01 	tst.w	sl, #1
 8024c1e:	5c79      	ldrb	r1, [r7, r1]
 8024c20:	bf0c      	ite	eq
 8024c22:	f001 010f 	andeq.w	r1, r1, #15
 8024c26:	1109      	asrne	r1, r1, #4
 8024c28:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8024c2c:	b2c9      	uxtb	r1, r1
 8024c2e:	910f      	str	r1, [sp, #60]	; 0x3c
 8024c30:	f1bc 0f00 	cmp.w	ip, #0
 8024c34:	d019      	beq.n	8024c6a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8024c36:	9908      	ldr	r1, [sp, #32]
 8024c38:	440b      	add	r3, r1
 8024c3a:	0859      	lsrs	r1, r3, #1
 8024c3c:	f013 0f01 	tst.w	r3, #1
 8024c40:	5c79      	ldrb	r1, [r7, r1]
 8024c42:	bf0c      	ite	eq
 8024c44:	f001 010f 	andeq.w	r1, r1, #15
 8024c48:	1109      	asrne	r1, r1, #4
 8024c4a:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8024c4e:	b2c9      	uxtb	r1, r1
 8024c50:	3301      	adds	r3, #1
 8024c52:	910b      	str	r1, [sp, #44]	; 0x2c
 8024c54:	0859      	lsrs	r1, r3, #1
 8024c56:	07db      	lsls	r3, r3, #31
 8024c58:	5c79      	ldrb	r1, [r7, r1]
 8024c5a:	bf54      	ite	pl
 8024c5c:	f001 010f 	andpl.w	r1, r1, #15
 8024c60:	1109      	asrmi	r1, r1, #4
 8024c62:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8024c66:	b2c9      	uxtb	r1, r1
 8024c68:	9110      	str	r1, [sp, #64]	; 0x40
 8024c6a:	b280      	uxth	r0, r0
 8024c6c:	fa1f fc8c 	uxth.w	ip, ip
 8024c70:	fb00 f30c 	mul.w	r3, r0, ip
 8024c74:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 8024c78:	0100      	lsls	r0, r0, #4
 8024c7a:	fa1f fc8c 	uxth.w	ip, ip
 8024c7e:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 8024c82:	eba1 010c 	sub.w	r1, r1, ip
 8024c86:	fa1f fa81 	uxth.w	sl, r1
 8024c8a:	1ac0      	subs	r0, r0, r3
 8024c8c:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8024c8e:	b280      	uxth	r0, r0
 8024c90:	4348      	muls	r0, r1
 8024c92:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8024c94:	fb02 020a 	mla	r2, r2, sl, r0
 8024c98:	fb0c 2c01 	mla	ip, ip, r1, r2
 8024c9c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8024c9e:	fb03 c302 	mla	r3, r3, r2, ip
 8024ca2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024ca6:	2bff      	cmp	r3, #255	; 0xff
 8024ca8:	d12c      	bne.n	8024d04 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 8024caa:	4b14      	ldr	r3, [pc, #80]	; (8024cfc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8024cac:	681a      	ldr	r2, [r3, #0]
 8024cae:	4b14      	ldr	r3, [pc, #80]	; (8024d00 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8024cb0:	0951      	lsrs	r1, r2, #5
 8024cb2:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8024cb6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8024cba:	430b      	orrs	r3, r1
 8024cbc:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024cc0:	4313      	orrs	r3, r2
 8024cc2:	f8ae 3000 	strh.w	r3, [lr]
 8024cc6:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8024cc8:	441c      	add	r4, r3
 8024cca:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024ccc:	f10e 0e02 	add.w	lr, lr, #2
 8024cd0:	441e      	add	r6, r3
 8024cd2:	f108 38ff 	add.w	r8, r8, #4294967295
 8024cd6:	e6ce      	b.n	8024a76 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8024cd8:	f1bc 0f00 	cmp.w	ip, #0
 8024cdc:	d0c5      	beq.n	8024c6a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8024cde:	9908      	ldr	r1, [sp, #32]
 8024ce0:	440b      	add	r3, r1
 8024ce2:	0859      	lsrs	r1, r3, #1
 8024ce4:	07db      	lsls	r3, r3, #31
 8024ce6:	5c79      	ldrb	r1, [r7, r1]
 8024ce8:	bf54      	ite	pl
 8024cea:	f001 010f 	andpl.w	r1, r1, #15
 8024cee:	1109      	asrmi	r1, r1, #4
 8024cf0:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8024cf4:	b2c9      	uxtb	r1, r1
 8024cf6:	910b      	str	r1, [sp, #44]	; 0x2c
 8024cf8:	e7b7      	b.n	8024c6a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8024cfa:	bf00      	nop
 8024cfc:	200137cc 	.word	0x200137cc
 8024d00:	fffff800 	.word	0xfffff800
 8024d04:	2b00      	cmp	r3, #0
 8024d06:	d0de      	beq.n	8024cc6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8024d08:	4a21      	ldr	r2, [pc, #132]	; (8024d90 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 8024d0a:	f8be c000 	ldrh.w	ip, [lr]
 8024d0e:	6810      	ldr	r0, [r2, #0]
 8024d10:	fa1f fa83 	uxth.w	sl, r3
 8024d14:	ea4f 212c 	mov.w	r1, ip, asr #8
 8024d18:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8024d1c:	43db      	mvns	r3, r3
 8024d1e:	b2db      	uxtb	r3, r3
 8024d20:	fb12 f20a 	smulbb	r2, r2, sl
 8024d24:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8024d28:	fb01 2103 	mla	r1, r1, r3, r2
 8024d2c:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8024d30:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8024d34:	b2c0      	uxtb	r0, r0
 8024d36:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8024d3a:	fa5f fc8c 	uxtb.w	ip, ip
 8024d3e:	fb10 f00a 	smulbb	r0, r0, sl
 8024d42:	fb0c 0003 	mla	r0, ip, r3, r0
 8024d46:	b289      	uxth	r1, r1
 8024d48:	fb1b fb0a 	smulbb	fp, fp, sl
 8024d4c:	b280      	uxth	r0, r0
 8024d4e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8024d52:	fb02 b203 	mla	r2, r2, r3, fp
 8024d56:	1c4b      	adds	r3, r1, #1
 8024d58:	f100 0b01 	add.w	fp, r0, #1
 8024d5c:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8024d60:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8024d64:	b292      	uxth	r2, r2
 8024d66:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 8024d6a:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8024d6e:	ea4b 0101 	orr.w	r1, fp, r1
 8024d72:	f102 0b01 	add.w	fp, r2, #1
 8024d76:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8024d7a:	0952      	lsrs	r2, r2, #5
 8024d7c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024d80:	4311      	orrs	r1, r2
 8024d82:	f8ae 1000 	strh.w	r1, [lr]
 8024d86:	e79e      	b.n	8024cc6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8024d88:	b013      	add	sp, #76	; 0x4c
 8024d8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024d8e:	bf00      	nop
 8024d90:	200137cc 	.word	0x200137cc

08024d94 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 8024d94:	b570      	push	{r4, r5, r6, lr}
 8024d96:	1208      	asrs	r0, r1, #8
 8024d98:	b29e      	uxth	r6, r3
 8024d9a:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8024d9e:	1213      	asrs	r3, r2, #8
 8024da0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8024da4:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8024da8:	fb13 f305 	smulbb	r3, r3, r5
 8024dac:	fb10 f006 	smulbb	r0, r0, r6
 8024db0:	4418      	add	r0, r3
 8024db2:	10cc      	asrs	r4, r1, #3
 8024db4:	10d3      	asrs	r3, r2, #3
 8024db6:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8024dba:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8024dbe:	fb13 f305 	smulbb	r3, r3, r5
 8024dc2:	fb14 f406 	smulbb	r4, r4, r6
 8024dc6:	00c9      	lsls	r1, r1, #3
 8024dc8:	00d2      	lsls	r2, r2, #3
 8024dca:	441c      	add	r4, r3
 8024dcc:	b2d2      	uxtb	r2, r2
 8024dce:	b2cb      	uxtb	r3, r1
 8024dd0:	fb12 f205 	smulbb	r2, r2, r5
 8024dd4:	b280      	uxth	r0, r0
 8024dd6:	fb13 f306 	smulbb	r3, r3, r6
 8024dda:	4413      	add	r3, r2
 8024ddc:	1c42      	adds	r2, r0, #1
 8024dde:	b29b      	uxth	r3, r3
 8024de0:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024de4:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
 8024de8:	1c58      	adds	r0, r3, #1
 8024dea:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8024dee:	b2a4      	uxth	r4, r4
 8024df0:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8024df4:	4310      	orrs	r0, r2
 8024df6:	1c62      	adds	r2, r4, #1
 8024df8:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8024dfc:	0964      	lsrs	r4, r4, #5
 8024dfe:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8024e02:	4320      	orrs	r0, r4
 8024e04:	bd70      	pop	{r4, r5, r6, pc}
	...

08024e08 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8024e08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024e0c:	b08f      	sub	sp, #60	; 0x3c
 8024e0e:	461c      	mov	r4, r3
 8024e10:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 8024e14:	9004      	str	r0, [sp, #16]
 8024e16:	460d      	mov	r5, r1
 8024e18:	4616      	mov	r6, r2
 8024e1a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8024e1c:	2f00      	cmp	r7, #0
 8024e1e:	f000 80f6 	beq.w	802500e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 8024e22:	6820      	ldr	r0, [r4, #0]
 8024e24:	6861      	ldr	r1, [r4, #4]
 8024e26:	aa0a      	add	r2, sp, #40	; 0x28
 8024e28:	c203      	stmia	r2!, {r0, r1}
 8024e2a:	6818      	ldr	r0, [r3, #0]
 8024e2c:	6859      	ldr	r1, [r3, #4]
 8024e2e:	aa0c      	add	r2, sp, #48	; 0x30
 8024e30:	c203      	stmia	r2!, {r0, r1}
 8024e32:	a80a      	add	r0, sp, #40	; 0x28
 8024e34:	f7ef fc90 	bl	8014758 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8024e38:	4621      	mov	r1, r4
 8024e3a:	a80c      	add	r0, sp, #48	; 0x30
 8024e3c:	f7ef fcd0 	bl	80147e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8024e40:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8024e44:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 8024e48:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 8024e4c:	f002 0301 	and.w	r3, r2, #1
 8024e50:	9306      	str	r3, [sp, #24]
 8024e52:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8024e56:	f003 0101 	and.w	r1, r3, #1
 8024e5a:	9105      	str	r1, [sp, #20]
 8024e5c:	9805      	ldr	r0, [sp, #20]
 8024e5e:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8024e62:	4403      	add	r3, r0
 8024e64:	fb01 2303 	mla	r3, r1, r3, r2
 8024e68:	f04f 0802 	mov.w	r8, #2
 8024e6c:	fb93 f3f8 	sdiv	r3, r3, r8
 8024e70:	441d      	add	r5, r3
 8024e72:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8024e76:	441a      	add	r2, r3
 8024e78:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8024e7c:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8024e80:	4419      	add	r1, r3
 8024e82:	4b64      	ldr	r3, [pc, #400]	; (8025014 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8024e84:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 8024e88:	6818      	ldr	r0, [r3, #0]
 8024e8a:	6803      	ldr	r3, [r0, #0]
 8024e8c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8024e8e:	4798      	blx	r3
 8024e90:	4a61      	ldr	r2, [pc, #388]	; (8025018 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 8024e92:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 8024e96:	8813      	ldrh	r3, [r2, #0]
 8024e98:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
 8024e9c:	2fff      	cmp	r7, #255	; 0xff
 8024e9e:	fb03 a404 	mla	r4, r3, r4, sl
 8024ea2:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8024ea6:	f106 0604 	add.w	r6, r6, #4
 8024eaa:	4611      	mov	r1, r2
 8024eac:	fb03 fb0b 	mul.w	fp, r3, fp
 8024eb0:	d06b      	beq.n	8024f8a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 8024eb2:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
 8024eb6:	9303      	str	r3, [sp, #12]
 8024eb8:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 8024ebc:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8024ec0:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8024ec4:	9b07      	ldr	r3, [sp, #28]
 8024ec6:	42a3      	cmp	r3, r4
 8024ec8:	f240 809c 	bls.w	8025004 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8024ecc:	9b06      	ldr	r3, [sp, #24]
 8024ece:	2b00      	cmp	r3, #0
 8024ed0:	d039      	beq.n	8024f46 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 8024ed2:	782b      	ldrb	r3, [r5, #0]
 8024ed4:	8822      	ldrh	r2, [r4, #0]
 8024ed6:	9804      	ldr	r0, [sp, #16]
 8024ed8:	f003 030f 	and.w	r3, r3, #15
 8024edc:	f105 0801 	add.w	r8, r5, #1
 8024ee0:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8024ee4:	9b03      	ldr	r3, [sp, #12]
 8024ee6:	9300      	str	r3, [sp, #0]
 8024ee8:	463b      	mov	r3, r7
 8024eea:	f7ff ff53 	bl	8024d94 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8024eee:	f824 0b02 	strh.w	r0, [r4], #2
 8024ef2:	f109 3bff 	add.w	fp, r9, #4294967295
 8024ef6:	f1bb 0f01 	cmp.w	fp, #1
 8024efa:	46a2      	mov	sl, r4
 8024efc:	f104 0404 	add.w	r4, r4, #4
 8024f00:	dd24      	ble.n	8024f4c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 8024f02:	f898 3000 	ldrb.w	r3, [r8]
 8024f06:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8024f0a:	9804      	ldr	r0, [sp, #16]
 8024f0c:	091b      	lsrs	r3, r3, #4
 8024f0e:	f1ab 0b02 	sub.w	fp, fp, #2
 8024f12:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8024f16:	9b03      	ldr	r3, [sp, #12]
 8024f18:	9300      	str	r3, [sp, #0]
 8024f1a:	463b      	mov	r3, r7
 8024f1c:	f7ff ff3a 	bl	8024d94 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8024f20:	f824 0c04 	strh.w	r0, [r4, #-4]
 8024f24:	f818 3b01 	ldrb.w	r3, [r8], #1
 8024f28:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8024f2c:	9804      	ldr	r0, [sp, #16]
 8024f2e:	f003 030f 	and.w	r3, r3, #15
 8024f32:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8024f36:	9b03      	ldr	r3, [sp, #12]
 8024f38:	9300      	str	r3, [sp, #0]
 8024f3a:	463b      	mov	r3, r7
 8024f3c:	f7ff ff2a 	bl	8024d94 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8024f40:	f824 0c02 	strh.w	r0, [r4, #-2]
 8024f44:	e7d7      	b.n	8024ef6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8024f46:	46a8      	mov	r8, r5
 8024f48:	46cb      	mov	fp, r9
 8024f4a:	e7d4      	b.n	8024ef6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8024f4c:	d10e      	bne.n	8024f6c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 8024f4e:	f898 3000 	ldrb.w	r3, [r8]
 8024f52:	f8ba 2000 	ldrh.w	r2, [sl]
 8024f56:	9804      	ldr	r0, [sp, #16]
 8024f58:	091b      	lsrs	r3, r3, #4
 8024f5a:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8024f5e:	9b03      	ldr	r3, [sp, #12]
 8024f60:	9300      	str	r3, [sp, #0]
 8024f62:	463b      	mov	r3, r7
 8024f64:	f7ff ff16 	bl	8024d94 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8024f68:	f82a 0b02 	strh.w	r0, [sl], #2
 8024f6c:	9b08      	ldr	r3, [sp, #32]
 8024f6e:	9a05      	ldr	r2, [sp, #20]
 8024f70:	881c      	ldrh	r4, [r3, #0]
 8024f72:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8024f76:	eba4 0409 	sub.w	r4, r4, r9
 8024f7a:	4413      	add	r3, r2
 8024f7c:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 8024f80:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8024f82:	fb93 f3f2 	sdiv	r3, r3, r2
 8024f86:	441d      	add	r5, r3
 8024f88:	e79c      	b.n	8024ec4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 8024f8a:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 8024f8e:	45a3      	cmp	fp, r4
 8024f90:	d938      	bls.n	8025004 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8024f92:	9b06      	ldr	r3, [sp, #24]
 8024f94:	b1f3      	cbz	r3, 8024fd4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 8024f96:	782b      	ldrb	r3, [r5, #0]
 8024f98:	f003 030f 	and.w	r3, r3, #15
 8024f9c:	1c6a      	adds	r2, r5, #1
 8024f9e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8024fa2:	8023      	strh	r3, [r4, #0]
 8024fa4:	f109 30ff 	add.w	r0, r9, #4294967295
 8024fa8:	3402      	adds	r4, #2
 8024faa:	2801      	cmp	r0, #1
 8024fac:	4623      	mov	r3, r4
 8024fae:	f104 0404 	add.w	r4, r4, #4
 8024fb2:	dd12      	ble.n	8024fda <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 8024fb4:	7813      	ldrb	r3, [r2, #0]
 8024fb6:	091b      	lsrs	r3, r3, #4
 8024fb8:	3802      	subs	r0, #2
 8024fba:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8024fbe:	f824 3c04 	strh.w	r3, [r4, #-4]
 8024fc2:	f812 3b01 	ldrb.w	r3, [r2], #1
 8024fc6:	f003 030f 	and.w	r3, r3, #15
 8024fca:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8024fce:	f824 3c02 	strh.w	r3, [r4, #-2]
 8024fd2:	e7ea      	b.n	8024faa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8024fd4:	462a      	mov	r2, r5
 8024fd6:	4648      	mov	r0, r9
 8024fd8:	e7e7      	b.n	8024faa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8024fda:	d106      	bne.n	8024fea <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 8024fdc:	7812      	ldrb	r2, [r2, #0]
 8024fde:	0912      	lsrs	r2, r2, #4
 8024fe0:	3302      	adds	r3, #2
 8024fe2:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8024fe6:	f823 2c02 	strh.w	r2, [r3, #-2]
 8024fea:	880c      	ldrh	r4, [r1, #0]
 8024fec:	9a05      	ldr	r2, [sp, #20]
 8024fee:	eba4 0409 	sub.w	r4, r4, r9
 8024ff2:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 8024ff6:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8024ffa:	4413      	add	r3, r2
 8024ffc:	fb93 f3f8 	sdiv	r3, r3, r8
 8025000:	441d      	add	r5, r3
 8025002:	e7c4      	b.n	8024f8e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 8025004:	4b03      	ldr	r3, [pc, #12]	; (8025014 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8025006:	6818      	ldr	r0, [r3, #0]
 8025008:	6803      	ldr	r3, [r0, #0]
 802500a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802500c:	4798      	blx	r3
 802500e:	b00f      	add	sp, #60	; 0x3c
 8025010:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025014:	200137bc 	.word	0x200137bc
 8025018:	200137b6 	.word	0x200137b6

0802501c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 802501c:	b5f0      	push	{r4, r5, r6, r7, lr}
 802501e:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8025022:	2dff      	cmp	r5, #255	; 0xff
 8025024:	ea4f 2711 	mov.w	r7, r1, lsr #8
 8025028:	d10c      	bne.n	8025044 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 802502a:	2bff      	cmp	r3, #255	; 0xff
 802502c:	d10a      	bne.n	8025044 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 802502e:	4b25      	ldr	r3, [pc, #148]	; (80250c4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 8025030:	0948      	lsrs	r0, r1, #5
 8025032:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025036:	403b      	ands	r3, r7
 8025038:	4318      	orrs	r0, r3
 802503a:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 802503e:	4308      	orrs	r0, r1
 8025040:	b280      	uxth	r0, r0
 8025042:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8025044:	fb15 f503 	smulbb	r5, r5, r3
 8025048:	b2ab      	uxth	r3, r5
 802504a:	1c5d      	adds	r5, r3, #1
 802504c:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 8025050:	1214      	asrs	r4, r2, #8
 8025052:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8025056:	fa1f fc85 	uxth.w	ip, r5
 802505a:	10d6      	asrs	r6, r2, #3
 802505c:	00d0      	lsls	r0, r2, #3
 802505e:	43ed      	mvns	r5, r5
 8025060:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8025064:	f3c1 4207 	ubfx	r2, r1, #16, #8
 8025068:	b2eb      	uxtb	r3, r5
 802506a:	b2c0      	uxtb	r0, r0
 802506c:	fb12 f20c 	smulbb	r2, r2, ip
 8025070:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8025074:	fb04 2403 	mla	r4, r4, r3, r2
 8025078:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 802507c:	b2c8      	uxtb	r0, r1
 802507e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8025082:	b2fd      	uxtb	r5, r7
 8025084:	fb10 f00c 	smulbb	r0, r0, ip
 8025088:	b2a4      	uxth	r4, r4
 802508a:	fb02 0003 	mla	r0, r2, r3, r0
 802508e:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8025092:	fb15 f50c 	smulbb	r5, r5, ip
 8025096:	fb06 5503 	mla	r5, r6, r3, r5
 802509a:	b283      	uxth	r3, r0
 802509c:	1c60      	adds	r0, r4, #1
 802509e:	b2ad      	uxth	r5, r5
 80250a0:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 80250a4:	1c58      	adds	r0, r3, #1
 80250a6:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80250aa:	1c6b      	adds	r3, r5, #1
 80250ac:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80250b0:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 80250b4:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80250b8:	096d      	lsrs	r5, r5, #5
 80250ba:	4320      	orrs	r0, r4
 80250bc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80250c0:	4328      	orrs	r0, r5
 80250c2:	e7be      	b.n	8025042 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 80250c4:	00fff800 	.word	0x00fff800

080250c8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 80250c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80250cc:	461c      	mov	r4, r3
 80250ce:	b08d      	sub	sp, #52	; 0x34
 80250d0:	460d      	mov	r5, r1
 80250d2:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80250d4:	6861      	ldr	r1, [r4, #4]
 80250d6:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
 80250da:	4680      	mov	r8, r0
 80250dc:	6820      	ldr	r0, [r4, #0]
 80250de:	4616      	mov	r6, r2
 80250e0:	aa08      	add	r2, sp, #32
 80250e2:	c203      	stmia	r2!, {r0, r1}
 80250e4:	6818      	ldr	r0, [r3, #0]
 80250e6:	6859      	ldr	r1, [r3, #4]
 80250e8:	aa0a      	add	r2, sp, #40	; 0x28
 80250ea:	c203      	stmia	r2!, {r0, r1}
 80250ec:	a808      	add	r0, sp, #32
 80250ee:	f7ef fb33 	bl	8014758 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80250f2:	4621      	mov	r1, r4
 80250f4:	a80a      	add	r0, sp, #40	; 0x28
 80250f6:	f7ef fb73 	bl	80147e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80250fa:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 80250fe:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 8025102:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 8025106:	f002 0301 	and.w	r3, r2, #1
 802510a:	9303      	str	r3, [sp, #12]
 802510c:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8025110:	f003 0101 	and.w	r1, r3, #1
 8025114:	9102      	str	r1, [sp, #8]
 8025116:	9802      	ldr	r0, [sp, #8]
 8025118:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 802511c:	4403      	add	r3, r0
 802511e:	fb01 2303 	mla	r3, r1, r3, r2
 8025122:	f04f 0a02 	mov.w	sl, #2
 8025126:	fb93 f3fa 	sdiv	r3, r3, sl
 802512a:	441d      	add	r5, r3
 802512c:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8025130:	441a      	add	r2, r3
 8025132:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8025136:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 802513a:	4a3f      	ldr	r2, [pc, #252]	; (8025238 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 802513c:	9205      	str	r2, [sp, #20]
 802513e:	4419      	add	r1, r3
 8025140:	6810      	ldr	r0, [r2, #0]
 8025142:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 8025146:	6803      	ldr	r3, [r0, #0]
 8025148:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 802514a:	4798      	blx	r3
 802514c:	4b3b      	ldr	r3, [pc, #236]	; (802523c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 802514e:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 8025152:	8819      	ldrh	r1, [r3, #0]
 8025154:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
 8025158:	fb01 c404 	mla	r4, r1, r4, ip
 802515c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8025160:	434f      	muls	r7, r1
 8025162:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 8025166:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 802516a:	3604      	adds	r6, #4
 802516c:	9204      	str	r2, [sp, #16]
 802516e:	9b04      	ldr	r3, [sp, #16]
 8025170:	429c      	cmp	r4, r3
 8025172:	d258      	bcs.n	8025226 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 8025174:	9b03      	ldr	r3, [sp, #12]
 8025176:	2b00      	cmp	r3, #0
 8025178:	d034      	beq.n	80251e4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 802517a:	782b      	ldrb	r3, [r5, #0]
 802517c:	f003 030f 	and.w	r3, r3, #15
 8025180:	1c6f      	adds	r7, r5, #1
 8025182:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8025186:	0e0b      	lsrs	r3, r1, #24
 8025188:	d006      	beq.n	8025198 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 802518a:	8822      	ldrh	r2, [r4, #0]
 802518c:	9300      	str	r3, [sp, #0]
 802518e:	4640      	mov	r0, r8
 8025190:	464b      	mov	r3, r9
 8025192:	f7ff ff43 	bl	802501c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8025196:	8020      	strh	r0, [r4, #0]
 8025198:	3402      	adds	r4, #2
 802519a:	f10b 3aff 	add.w	sl, fp, #4294967295
 802519e:	f1ba 0f01 	cmp.w	sl, #1
 80251a2:	dd22      	ble.n	80251ea <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 80251a4:	783b      	ldrb	r3, [r7, #0]
 80251a6:	091b      	lsrs	r3, r3, #4
 80251a8:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80251ac:	0e0b      	lsrs	r3, r1, #24
 80251ae:	d006      	beq.n	80251be <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 80251b0:	8822      	ldrh	r2, [r4, #0]
 80251b2:	9300      	str	r3, [sp, #0]
 80251b4:	4640      	mov	r0, r8
 80251b6:	464b      	mov	r3, r9
 80251b8:	f7ff ff30 	bl	802501c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80251bc:	8020      	strh	r0, [r4, #0]
 80251be:	f817 3b01 	ldrb.w	r3, [r7], #1
 80251c2:	f003 030f 	and.w	r3, r3, #15
 80251c6:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80251ca:	0e0b      	lsrs	r3, r1, #24
 80251cc:	d006      	beq.n	80251dc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 80251ce:	8862      	ldrh	r2, [r4, #2]
 80251d0:	9300      	str	r3, [sp, #0]
 80251d2:	4640      	mov	r0, r8
 80251d4:	464b      	mov	r3, r9
 80251d6:	f7ff ff21 	bl	802501c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80251da:	8060      	strh	r0, [r4, #2]
 80251dc:	3404      	adds	r4, #4
 80251de:	f1aa 0a02 	sub.w	sl, sl, #2
 80251e2:	e7dc      	b.n	802519e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 80251e4:	462f      	mov	r7, r5
 80251e6:	46da      	mov	sl, fp
 80251e8:	e7d9      	b.n	802519e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 80251ea:	d10d      	bne.n	8025208 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 80251ec:	783b      	ldrb	r3, [r7, #0]
 80251ee:	091b      	lsrs	r3, r3, #4
 80251f0:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80251f4:	0e0b      	lsrs	r3, r1, #24
 80251f6:	d006      	beq.n	8025206 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 80251f8:	8822      	ldrh	r2, [r4, #0]
 80251fa:	9300      	str	r3, [sp, #0]
 80251fc:	4640      	mov	r0, r8
 80251fe:	464b      	mov	r3, r9
 8025200:	f7ff ff0c 	bl	802501c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8025204:	8020      	strh	r0, [r4, #0]
 8025206:	3402      	adds	r4, #2
 8025208:	9b06      	ldr	r3, [sp, #24]
 802520a:	9a02      	ldr	r2, [sp, #8]
 802520c:	881b      	ldrh	r3, [r3, #0]
 802520e:	eba3 030b 	sub.w	r3, r3, fp
 8025212:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8025216:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 802521a:	4413      	add	r3, r2
 802521c:	9a07      	ldr	r2, [sp, #28]
 802521e:	fb93 f3f2 	sdiv	r3, r3, r2
 8025222:	441d      	add	r5, r3
 8025224:	e7a3      	b.n	802516e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 8025226:	9b05      	ldr	r3, [sp, #20]
 8025228:	6818      	ldr	r0, [r3, #0]
 802522a:	6803      	ldr	r3, [r0, #0]
 802522c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802522e:	4798      	blx	r3
 8025230:	b00d      	add	sp, #52	; 0x34
 8025232:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025236:	bf00      	nop
 8025238:	200137bc 	.word	0x200137bc
 802523c:	200137b6 	.word	0x200137b6

08025240 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 8025240:	b570      	push	{r4, r5, r6, lr}
 8025242:	1214      	asrs	r4, r2, #8
 8025244:	788d      	ldrb	r5, [r1, #2]
 8025246:	f89d 6010 	ldrb.w	r6, [sp, #16]
 802524a:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 802524e:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8025252:	fb15 f503 	smulbb	r5, r5, r3
 8025256:	fb04 5506 	mla	r5, r4, r6, r5
 802525a:	10d0      	asrs	r0, r2, #3
 802525c:	784c      	ldrb	r4, [r1, #1]
 802525e:	7809      	ldrb	r1, [r1, #0]
 8025260:	00d2      	lsls	r2, r2, #3
 8025262:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8025266:	b2d2      	uxtb	r2, r2
 8025268:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 802526c:	fb14 f403 	smulbb	r4, r4, r3
 8025270:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8025274:	fb11 f303 	smulbb	r3, r1, r3
 8025278:	fb00 4406 	mla	r4, r0, r6, r4
 802527c:	fb02 3306 	mla	r3, r2, r6, r3
 8025280:	b2ad      	uxth	r5, r5
 8025282:	b29b      	uxth	r3, r3
 8025284:	b2a4      	uxth	r4, r4
 8025286:	1c68      	adds	r0, r5, #1
 8025288:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 802528c:	1c62      	adds	r2, r4, #1
 802528e:	1c58      	adds	r0, r3, #1
 8025290:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8025294:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8025298:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 802529c:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80252a0:	0964      	lsrs	r4, r4, #5
 80252a2:	4328      	orrs	r0, r5
 80252a4:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80252a8:	4320      	orrs	r0, r4
 80252aa:	bd70      	pop	{r4, r5, r6, pc}

080252ac <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 80252ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80252b0:	b08f      	sub	sp, #60	; 0x3c
 80252b2:	461c      	mov	r4, r3
 80252b4:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 80252b8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80252ba:	4682      	mov	sl, r0
 80252bc:	460e      	mov	r6, r1
 80252be:	4615      	mov	r5, r2
 80252c0:	2f00      	cmp	r7, #0
 80252c2:	f000 8142 	beq.w	802554a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 80252c6:	6820      	ldr	r0, [r4, #0]
 80252c8:	6861      	ldr	r1, [r4, #4]
 80252ca:	aa0a      	add	r2, sp, #40	; 0x28
 80252cc:	c203      	stmia	r2!, {r0, r1}
 80252ce:	6818      	ldr	r0, [r3, #0]
 80252d0:	6859      	ldr	r1, [r3, #4]
 80252d2:	aa0c      	add	r2, sp, #48	; 0x30
 80252d4:	c203      	stmia	r2!, {r0, r1}
 80252d6:	a80a      	add	r0, sp, #40	; 0x28
 80252d8:	f7ef fa3e 	bl	8014758 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80252dc:	4621      	mov	r1, r4
 80252de:	a80c      	add	r0, sp, #48	; 0x30
 80252e0:	f7ef fa7e 	bl	80147e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80252e4:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 80252e8:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 80252ec:	f002 0301 	and.w	r3, r2, #1
 80252f0:	9306      	str	r3, [sp, #24]
 80252f2:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80252f6:	f003 0101 	and.w	r1, r3, #1
 80252fa:	9105      	str	r1, [sp, #20]
 80252fc:	9805      	ldr	r0, [sp, #20]
 80252fe:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8025302:	4403      	add	r3, r0
 8025304:	fb01 2303 	mla	r3, r1, r3, r2
 8025308:	f04f 0802 	mov.w	r8, #2
 802530c:	fb93 f3f8 	sdiv	r3, r3, r8
 8025310:	441e      	add	r6, r3
 8025312:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8025316:	441a      	add	r2, r3
 8025318:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 802531c:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8025320:	4419      	add	r1, r3
 8025322:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8025326:	9303      	str	r3, [sp, #12]
 8025328:	4b89      	ldr	r3, [pc, #548]	; (8025550 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 802532a:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 802532e:	6818      	ldr	r0, [r3, #0]
 8025330:	6803      	ldr	r3, [r0, #0]
 8025332:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8025334:	4798      	blx	r3
 8025336:	4a87      	ldr	r2, [pc, #540]	; (8025554 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 8025338:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 802533c:	8813      	ldrh	r3, [r2, #0]
 802533e:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
 8025342:	2fff      	cmp	r7, #255	; 0xff
 8025344:	fb03 9404 	mla	r4, r3, r4, r9
 8025348:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802534c:	f105 0504 	add.w	r5, r5, #4
 8025350:	4694      	mov	ip, r2
 8025352:	fb03 f30b 	mul.w	r3, r3, fp
 8025356:	d071      	beq.n	802543c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 8025358:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 802535c:	43f9      	mvns	r1, r7
 802535e:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8025362:	b2c9      	uxtb	r1, r1
 8025364:	9104      	str	r1, [sp, #16]
 8025366:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 802536a:	9b07      	ldr	r3, [sp, #28]
 802536c:	42a3      	cmp	r3, r4
 802536e:	f240 80e7 	bls.w	8025540 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8025372:	9b06      	ldr	r3, [sp, #24]
 8025374:	2b00      	cmp	r3, #0
 8025376:	d03d      	beq.n	80253f4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 8025378:	7831      	ldrb	r1, [r6, #0]
 802537a:	9b04      	ldr	r3, [sp, #16]
 802537c:	8822      	ldrh	r2, [r4, #0]
 802537e:	9300      	str	r3, [sp, #0]
 8025380:	f001 010f 	and.w	r1, r1, #15
 8025384:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8025388:	463b      	mov	r3, r7
 802538a:	4429      	add	r1, r5
 802538c:	4650      	mov	r0, sl
 802538e:	f7ff ff57 	bl	8025240 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8025392:	9b03      	ldr	r3, [sp, #12]
 8025394:	f824 0b02 	strh.w	r0, [r4], #2
 8025398:	f106 0801 	add.w	r8, r6, #1
 802539c:	f103 3bff 	add.w	fp, r3, #4294967295
 80253a0:	f1bb 0f01 	cmp.w	fp, #1
 80253a4:	46a1      	mov	r9, r4
 80253a6:	f104 0404 	add.w	r4, r4, #4
 80253aa:	dd27      	ble.n	80253fc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 80253ac:	f898 1000 	ldrb.w	r1, [r8]
 80253b0:	9b04      	ldr	r3, [sp, #16]
 80253b2:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 80253b6:	9300      	str	r3, [sp, #0]
 80253b8:	0909      	lsrs	r1, r1, #4
 80253ba:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80253be:	463b      	mov	r3, r7
 80253c0:	4429      	add	r1, r5
 80253c2:	4650      	mov	r0, sl
 80253c4:	f7ff ff3c 	bl	8025240 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80253c8:	f824 0c04 	strh.w	r0, [r4, #-4]
 80253cc:	f818 1b01 	ldrb.w	r1, [r8], #1
 80253d0:	9b04      	ldr	r3, [sp, #16]
 80253d2:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 80253d6:	9300      	str	r3, [sp, #0]
 80253d8:	f001 010f 	and.w	r1, r1, #15
 80253dc:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80253e0:	463b      	mov	r3, r7
 80253e2:	4429      	add	r1, r5
 80253e4:	4650      	mov	r0, sl
 80253e6:	f7ff ff2b 	bl	8025240 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80253ea:	f1ab 0b02 	sub.w	fp, fp, #2
 80253ee:	f824 0c02 	strh.w	r0, [r4, #-2]
 80253f2:	e7d5      	b.n	80253a0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 80253f4:	46b0      	mov	r8, r6
 80253f6:	f8dd b00c 	ldr.w	fp, [sp, #12]
 80253fa:	e7d1      	b.n	80253a0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 80253fc:	d10f      	bne.n	802541e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 80253fe:	f898 1000 	ldrb.w	r1, [r8]
 8025402:	9b04      	ldr	r3, [sp, #16]
 8025404:	f8b9 2000 	ldrh.w	r2, [r9]
 8025408:	9300      	str	r3, [sp, #0]
 802540a:	0909      	lsrs	r1, r1, #4
 802540c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8025410:	463b      	mov	r3, r7
 8025412:	4429      	add	r1, r5
 8025414:	4650      	mov	r0, sl
 8025416:	f7ff ff13 	bl	8025240 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802541a:	f829 0b02 	strh.w	r0, [r9], #2
 802541e:	9b08      	ldr	r3, [sp, #32]
 8025420:	9a05      	ldr	r2, [sp, #20]
 8025422:	881c      	ldrh	r4, [r3, #0]
 8025424:	9b03      	ldr	r3, [sp, #12]
 8025426:	1ae4      	subs	r4, r4, r3
 8025428:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802542c:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8025430:	4413      	add	r3, r2
 8025432:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8025434:	fb93 f3f2 	sdiv	r3, r3, r2
 8025438:	441e      	add	r6, r3
 802543a:	e796      	b.n	802536a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 802543c:	4f46      	ldr	r7, [pc, #280]	; (8025558 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 802543e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8025442:	42a3      	cmp	r3, r4
 8025444:	d97c      	bls.n	8025540 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8025446:	9a06      	ldr	r2, [sp, #24]
 8025448:	2a00      	cmp	r2, #0
 802544a:	d054      	beq.n	80254f6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 802544c:	7830      	ldrb	r0, [r6, #0]
 802544e:	f000 000f 	and.w	r0, r0, #15
 8025452:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8025456:	eb05 0e00 	add.w	lr, r5, r0
 802545a:	5c28      	ldrb	r0, [r5, r0]
 802545c:	f89e 2002 	ldrb.w	r2, [lr, #2]
 8025460:	f89e e001 	ldrb.w	lr, [lr, #1]
 8025464:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8025468:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 802546c:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8025470:	ea42 020e 	orr.w	r2, r2, lr
 8025474:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 8025478:	f824 2b02 	strh.w	r2, [r4], #2
 802547c:	9a03      	ldr	r2, [sp, #12]
 802547e:	1c71      	adds	r1, r6, #1
 8025480:	f102 3eff 	add.w	lr, r2, #4294967295
 8025484:	f1be 0f01 	cmp.w	lr, #1
 8025488:	4620      	mov	r0, r4
 802548a:	f104 0404 	add.w	r4, r4, #4
 802548e:	dd36      	ble.n	80254fe <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 8025490:	7808      	ldrb	r0, [r1, #0]
 8025492:	0900      	lsrs	r0, r0, #4
 8025494:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8025498:	eb05 0a00 	add.w	sl, r5, r0
 802549c:	f1ae 0e02 	sub.w	lr, lr, #2
 80254a0:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80254a4:	f89a 9002 	ldrb.w	r9, [sl, #2]
 80254a8:	00d2      	lsls	r2, r2, #3
 80254aa:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 80254ae:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80254b2:	ea49 0202 	orr.w	r2, r9, r2
 80254b6:	f815 9000 	ldrb.w	r9, [r5, r0]
 80254ba:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 80254be:	f824 2c04 	strh.w	r2, [r4, #-4]
 80254c2:	f811 0b01 	ldrb.w	r0, [r1], #1
 80254c6:	f000 000f 	and.w	r0, r0, #15
 80254ca:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80254ce:	eb05 0a00 	add.w	sl, r5, r0
 80254d2:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80254d6:	f89a 9002 	ldrb.w	r9, [sl, #2]
 80254da:	00d2      	lsls	r2, r2, #3
 80254dc:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 80254e0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80254e4:	ea49 0202 	orr.w	r2, r9, r2
 80254e8:	f815 9000 	ldrb.w	r9, [r5, r0]
 80254ec:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 80254f0:	f824 2c02 	strh.w	r2, [r4, #-2]
 80254f4:	e7c6      	b.n	8025484 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 80254f6:	4631      	mov	r1, r6
 80254f8:	f8dd e00c 	ldr.w	lr, [sp, #12]
 80254fc:	e7c2      	b.n	8025484 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 80254fe:	d111      	bne.n	8025524 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 8025500:	7809      	ldrb	r1, [r1, #0]
 8025502:	0909      	lsrs	r1, r1, #4
 8025504:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8025508:	186c      	adds	r4, r5, r1
 802550a:	5c69      	ldrb	r1, [r5, r1]
 802550c:	78a2      	ldrb	r2, [r4, #2]
 802550e:	7864      	ldrb	r4, [r4, #1]
 8025510:	00e4      	lsls	r4, r4, #3
 8025512:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8025516:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 802551a:	4322      	orrs	r2, r4
 802551c:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 8025520:	f820 2b02 	strh.w	r2, [r0], #2
 8025524:	9a03      	ldr	r2, [sp, #12]
 8025526:	f8bc 4000 	ldrh.w	r4, [ip]
 802552a:	9905      	ldr	r1, [sp, #20]
 802552c:	1aa4      	subs	r4, r4, r2
 802552e:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8025532:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8025536:	440a      	add	r2, r1
 8025538:	fb92 f2f8 	sdiv	r2, r2, r8
 802553c:	4416      	add	r6, r2
 802553e:	e780      	b.n	8025442 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 8025540:	4b03      	ldr	r3, [pc, #12]	; (8025550 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8025542:	6818      	ldr	r0, [r3, #0]
 8025544:	6803      	ldr	r3, [r0, #0]
 8025546:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8025548:	4798      	blx	r3
 802554a:	b00f      	add	sp, #60	; 0x3c
 802554c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025550:	200137bc 	.word	0x200137bc
 8025554:	200137b6 	.word	0x200137b6
 8025558:	fffff800 	.word	0xfffff800

0802555c <CRC_Lock>:
 802555c:	b530      	push	{r4, r5, lr}
 802555e:	4a20      	ldr	r2, [pc, #128]	; (80255e0 <CRC_Lock+0x84>)
 8025560:	6813      	ldr	r3, [r2, #0]
 8025562:	f023 0301 	bic.w	r3, r3, #1
 8025566:	6013      	str	r3, [r2, #0]
 8025568:	4b1e      	ldr	r3, [pc, #120]	; (80255e4 <CRC_Lock+0x88>)
 802556a:	681a      	ldr	r2, [r3, #0]
 802556c:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 8025570:	4022      	ands	r2, r4
 8025572:	f24c 2540 	movw	r5, #49728	; 0xc240
 8025576:	42aa      	cmp	r2, r5
 8025578:	d005      	beq.n	8025586 <CRC_Lock+0x2a>
 802557a:	681b      	ldr	r3, [r3, #0]
 802557c:	f24c 2270 	movw	r2, #49776	; 0xc270
 8025580:	4023      	ands	r3, r4
 8025582:	4293      	cmp	r3, r2
 8025584:	d124      	bne.n	80255d0 <CRC_Lock+0x74>
 8025586:	4b18      	ldr	r3, [pc, #96]	; (80255e8 <CRC_Lock+0x8c>)
 8025588:	681b      	ldr	r3, [r3, #0]
 802558a:	bb0b      	cbnz	r3, 80255d0 <CRC_Lock+0x74>
 802558c:	4b17      	ldr	r3, [pc, #92]	; (80255ec <CRC_Lock+0x90>)
 802558e:	681a      	ldr	r2, [r3, #0]
 8025590:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8025594:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 8025598:	d00d      	beq.n	80255b6 <CRC_Lock+0x5a>
 802559a:	681a      	ldr	r2, [r3, #0]
 802559c:	f240 4483 	movw	r4, #1155	; 0x483
 80255a0:	f3c2 020b 	ubfx	r2, r2, #0, #12
 80255a4:	42a2      	cmp	r2, r4
 80255a6:	d006      	beq.n	80255b6 <CRC_Lock+0x5a>
 80255a8:	681b      	ldr	r3, [r3, #0]
 80255aa:	f240 4285 	movw	r2, #1157	; 0x485
 80255ae:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80255b2:	4293      	cmp	r3, r2
 80255b4:	d10c      	bne.n	80255d0 <CRC_Lock+0x74>
 80255b6:	4b0e      	ldr	r3, [pc, #56]	; (80255f0 <CRC_Lock+0x94>)
 80255b8:	2201      	movs	r2, #1
 80255ba:	601a      	str	r2, [r3, #0]
 80255bc:	681a      	ldr	r2, [r3, #0]
 80255be:	2a00      	cmp	r2, #0
 80255c0:	d1fc      	bne.n	80255bc <CRC_Lock+0x60>
 80255c2:	4b0c      	ldr	r3, [pc, #48]	; (80255f4 <CRC_Lock+0x98>)
 80255c4:	6018      	str	r0, [r3, #0]
 80255c6:	6818      	ldr	r0, [r3, #0]
 80255c8:	1a43      	subs	r3, r0, r1
 80255ca:	4258      	negs	r0, r3
 80255cc:	4158      	adcs	r0, r3
 80255ce:	bd30      	pop	{r4, r5, pc}
 80255d0:	4b09      	ldr	r3, [pc, #36]	; (80255f8 <CRC_Lock+0x9c>)
 80255d2:	2201      	movs	r2, #1
 80255d4:	601a      	str	r2, [r3, #0]
 80255d6:	681a      	ldr	r2, [r3, #0]
 80255d8:	2a00      	cmp	r2, #0
 80255da:	d1fc      	bne.n	80255d6 <CRC_Lock+0x7a>
 80255dc:	4b07      	ldr	r3, [pc, #28]	; (80255fc <CRC_Lock+0xa0>)
 80255de:	e7f1      	b.n	80255c4 <CRC_Lock+0x68>
 80255e0:	e0002000 	.word	0xe0002000
 80255e4:	e000ed00 	.word	0xe000ed00
 80255e8:	e0042000 	.word	0xe0042000
 80255ec:	5c001000 	.word	0x5c001000
 80255f0:	58024c08 	.word	0x58024c08
 80255f4:	58024c00 	.word	0x58024c00
 80255f8:	40023008 	.word	0x40023008
 80255fc:	40023000 	.word	0x40023000

08025600 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8025600:	6101      	str	r1, [r0, #16]
 8025602:	4770      	bx	lr

08025604 <_ZN8touchgfx8Gestures4tickEv>:
 8025604:	7b83      	ldrb	r3, [r0, #14]
 8025606:	b14b      	cbz	r3, 802561c <_ZN8touchgfx8Gestures4tickEv+0x18>
 8025608:	8903      	ldrh	r3, [r0, #8]
 802560a:	3301      	adds	r3, #1
 802560c:	b29b      	uxth	r3, r3
 802560e:	2b07      	cmp	r3, #7
 8025610:	8103      	strh	r3, [r0, #8]
 8025612:	bf81      	itttt	hi
 8025614:	2300      	movhi	r3, #0
 8025616:	8143      	strhhi	r3, [r0, #10]
 8025618:	8183      	strhhi	r3, [r0, #12]
 802561a:	7383      	strbhi	r3, [r0, #14]
 802561c:	4770      	bx	lr
	...

08025620 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8025620:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8025624:	4698      	mov	r8, r3
 8025626:	8883      	ldrh	r3, [r0, #4]
 8025628:	f8ad 3006 	strh.w	r3, [sp, #6]
 802562c:	eba8 0303 	sub.w	r3, r8, r3
 8025630:	b21b      	sxth	r3, r3
 8025632:	4604      	mov	r4, r0
 8025634:	2b00      	cmp	r3, #0
 8025636:	4617      	mov	r7, r2
 8025638:	4a18      	ldr	r2, [pc, #96]	; (802569c <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 802563a:	9200      	str	r2, [sp, #0]
 802563c:	bfb8      	it	lt
 802563e:	425b      	neglt	r3, r3
 8025640:	8aa2      	ldrh	r2, [r4, #20]
 8025642:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 8025646:	f8ad 800a 	strh.w	r8, [sp, #10]
 802564a:	b21b      	sxth	r3, r3
 802564c:	460e      	mov	r6, r1
 802564e:	4293      	cmp	r3, r2
 8025650:	88c1      	ldrh	r1, [r0, #6]
 8025652:	f8ad 1008 	strh.w	r1, [sp, #8]
 8025656:	f04f 0000 	mov.w	r0, #0
 802565a:	f88d 0004 	strb.w	r0, [sp, #4]
 802565e:	f8ad 500c 	strh.w	r5, [sp, #12]
 8025662:	dc07      	bgt.n	8025674 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 8025664:	1a69      	subs	r1, r5, r1
 8025666:	b209      	sxth	r1, r1
 8025668:	2900      	cmp	r1, #0
 802566a:	bfb8      	it	lt
 802566c:	4249      	neglt	r1, r1
 802566e:	b209      	sxth	r1, r1
 8025670:	428a      	cmp	r2, r1
 8025672:	da10      	bge.n	8025696 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 8025674:	6920      	ldr	r0, [r4, #16]
 8025676:	6803      	ldr	r3, [r0, #0]
 8025678:	4669      	mov	r1, sp
 802567a:	685b      	ldr	r3, [r3, #4]
 802567c:	4798      	blx	r3
 802567e:	eba8 0606 	sub.w	r6, r8, r6
 8025682:	2300      	movs	r3, #0
 8025684:	1bef      	subs	r7, r5, r7
 8025686:	2001      	movs	r0, #1
 8025688:	8123      	strh	r3, [r4, #8]
 802568a:	8166      	strh	r6, [r4, #10]
 802568c:	81a7      	strh	r7, [r4, #12]
 802568e:	f8a4 8004 	strh.w	r8, [r4, #4]
 8025692:	80e5      	strh	r5, [r4, #6]
 8025694:	73a0      	strb	r0, [r4, #14]
 8025696:	b004      	add	sp, #16
 8025698:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802569c:	0802cab8 	.word	0x0802cab8

080256a0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 80256a0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80256a2:	461e      	mov	r6, r3
 80256a4:	1e4b      	subs	r3, r1, #1
 80256a6:	2b01      	cmp	r3, #1
 80256a8:	b085      	sub	sp, #20
 80256aa:	4604      	mov	r4, r0
 80256ac:	460d      	mov	r5, r1
 80256ae:	4617      	mov	r7, r2
 80256b0:	d84b      	bhi.n	802574a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 80256b2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80256b6:	1cd3      	adds	r3, r2, #3
 80256b8:	b29b      	uxth	r3, r3
 80256ba:	2b06      	cmp	r3, #6
 80256bc:	d916      	bls.n	80256ec <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 80256be:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 8025760 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 80256c2:	f8cd c004 	str.w	ip, [sp, #4]
 80256c6:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80256ca:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80256ce:	6900      	ldr	r0, [r0, #16]
 80256d0:	f8ad 100c 	strh.w	r1, [sp, #12]
 80256d4:	f04f 0c00 	mov.w	ip, #0
 80256d8:	f88d c008 	strb.w	ip, [sp, #8]
 80256dc:	f8ad 200a 	strh.w	r2, [sp, #10]
 80256e0:	f8ad 300e 	strh.w	r3, [sp, #14]
 80256e4:	6803      	ldr	r3, [r0, #0]
 80256e6:	a901      	add	r1, sp, #4
 80256e8:	689b      	ldr	r3, [r3, #8]
 80256ea:	4798      	blx	r3
 80256ec:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80256f0:	1cd3      	adds	r3, r2, #3
 80256f2:	b29b      	uxth	r3, r3
 80256f4:	2b06      	cmp	r3, #6
 80256f6:	d916      	bls.n	8025726 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80256f8:	f8df c064 	ldr.w	ip, [pc, #100]	; 8025760 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 80256fc:	f8cd c004 	str.w	ip, [sp, #4]
 8025700:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8025704:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8025708:	6920      	ldr	r0, [r4, #16]
 802570a:	f8ad 100c 	strh.w	r1, [sp, #12]
 802570e:	f04f 0c01 	mov.w	ip, #1
 8025712:	f88d c008 	strb.w	ip, [sp, #8]
 8025716:	f8ad 200a 	strh.w	r2, [sp, #10]
 802571a:	f8ad 300e 	strh.w	r3, [sp, #14]
 802571e:	6803      	ldr	r3, [r0, #0]
 8025720:	a901      	add	r1, sp, #4
 8025722:	689b      	ldr	r3, [r3, #8]
 8025724:	4798      	blx	r3
 8025726:	4b0d      	ldr	r3, [pc, #52]	; (802575c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8025728:	9301      	str	r3, [sp, #4]
 802572a:	6920      	ldr	r0, [r4, #16]
 802572c:	f88d 5008 	strb.w	r5, [sp, #8]
 8025730:	2300      	movs	r3, #0
 8025732:	f8ad 700a 	strh.w	r7, [sp, #10]
 8025736:	f8ad 600c 	strh.w	r6, [sp, #12]
 802573a:	f8ad 300e 	strh.w	r3, [sp, #14]
 802573e:	6803      	ldr	r3, [r0, #0]
 8025740:	a901      	add	r1, sp, #4
 8025742:	681b      	ldr	r3, [r3, #0]
 8025744:	4798      	blx	r3
 8025746:	b005      	add	sp, #20
 8025748:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802574a:	2900      	cmp	r1, #0
 802574c:	d1eb      	bne.n	8025726 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802574e:	80a2      	strh	r2, [r4, #4]
 8025750:	80c6      	strh	r6, [r0, #6]
 8025752:	60a1      	str	r1, [r4, #8]
 8025754:	81a1      	strh	r1, [r4, #12]
 8025756:	73a1      	strb	r1, [r4, #14]
 8025758:	e7e5      	b.n	8025726 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802575a:	bf00      	nop
 802575c:	0802caa4 	.word	0x0802caa4
 8025760:	0802cacc 	.word	0x0802cacc

08025764 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
 8025764:	10c9      	asrs	r1, r1, #3
 8025766:	2900      	cmp	r1, #0
 8025768:	bfb8      	it	lt
 802576a:	4249      	neglt	r1, r1
 802576c:	2801      	cmp	r0, #1
 802576e:	d108      	bne.n	8025782 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8025770:	f3c1 0008 	ubfx	r0, r1, #0, #9
 8025774:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 8025778:	4601      	mov	r1, r0
 802577a:	dd02      	ble.n	8025782 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 802577c:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 8025780:	4770      	bx	lr
 8025782:	29ff      	cmp	r1, #255	; 0xff
 8025784:	bfa8      	it	ge
 8025786:	21ff      	movge	r1, #255	; 0xff
 8025788:	4608      	mov	r0, r1
 802578a:	4770      	bx	lr

0802578c <_ZN8touchgfx10Rasterizer6lineToEii>:
 802578c:	b410      	push	{r4}
 802578e:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8025792:	429c      	cmp	r4, r3
 8025794:	d803      	bhi.n	802579e <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 8025796:	f85d 4b04 	ldr.w	r4, [sp], #4
 802579a:	f7ed bae3 	b.w	8012d64 <_ZN8touchgfx7Outline6lineToEii>
 802579e:	f85d 4b04 	ldr.w	r4, [sp], #4
 80257a2:	4770      	bx	lr

080257a4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 80257a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80257a8:	b08b      	sub	sp, #44	; 0x2c
 80257aa:	e9cd 2306 	strd	r2, r3, [sp, #24]
 80257ae:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 80257b2:	9308      	str	r3, [sp, #32]
 80257b4:	4606      	mov	r6, r0
 80257b6:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 80257ba:	9309      	str	r3, [sp, #36]	; 0x24
 80257bc:	468a      	mov	sl, r1
 80257be:	f7ed fc3e 	bl	801303e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 80257c2:	68b5      	ldr	r5, [r6, #8]
 80257c4:	4604      	mov	r4, r0
 80257c6:	2d00      	cmp	r5, #0
 80257c8:	d044      	beq.n	8025854 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 80257ca:	6873      	ldr	r3, [r6, #4]
 80257cc:	42ab      	cmp	r3, r5
 80257ce:	d33d      	bcc.n	802584c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 80257d0:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 80257d4:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
 80257d8:	eb02 0b03 	add.w	fp, r2, r3
 80257dc:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 80257e0:	fb02 1203 	mla	r2, r2, r3, r1
 80257e4:	9205      	str	r2, [sp, #20]
 80257e6:	1e6a      	subs	r2, r5, #1
 80257e8:	9204      	str	r2, [sp, #16]
 80257ea:	f04f 0800 	mov.w	r8, #0
 80257ee:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 80257f2:	f9b4 7000 	ldrsh.w	r7, [r4]
 80257f6:	454b      	cmp	r3, r9
 80257f8:	463a      	mov	r2, r7
 80257fa:	d008      	beq.n	802580e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 80257fc:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
 8025800:	eb03 0b09 	add.w	fp, r3, r9
 8025804:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 8025808:	fb03 1309 	mla	r3, r3, r9, r1
 802580c:	9305      	str	r3, [sp, #20]
 802580e:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8025812:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8025816:	4498      	add	r8, r3
 8025818:	9b04      	ldr	r3, [sp, #16]
 802581a:	3b01      	subs	r3, #1
 802581c:	9304      	str	r3, [sp, #16]
 802581e:	9b04      	ldr	r3, [sp, #16]
 8025820:	3301      	adds	r3, #1
 8025822:	d015      	beq.n	8025850 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 8025824:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 8025828:	42bb      	cmp	r3, r7
 802582a:	d117      	bne.n	802585c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 802582c:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 8025830:	9b04      	ldr	r3, [sp, #16]
 8025832:	4548      	cmp	r0, r9
 8025834:	f103 33ff 	add.w	r3, r3, #4294967295
 8025838:	d17f      	bne.n	802593a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 802583a:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 802583e:	4401      	add	r1, r0
 8025840:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8025844:	4480      	add	r8, r0
 8025846:	e7e9      	b.n	802581c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 8025848:	461f      	mov	r7, r3
 802584a:	e044      	b.n	80258d6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 802584c:	2000      	movs	r0, #0
 802584e:	e002      	b.n	8025856 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 8025850:	2900      	cmp	r1, #0
 8025852:	d16f      	bne.n	8025934 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 8025854:	2001      	movs	r0, #1
 8025856:	b00b      	add	sp, #44	; 0x2c
 8025858:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802585c:	2900      	cmp	r1, #0
 802585e:	d030      	beq.n	80258c2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 8025860:	2f00      	cmp	r7, #0
 8025862:	db29      	blt.n	80258b8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8025864:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8025868:	42bb      	cmp	r3, r7
 802586a:	dd25      	ble.n	80258b8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 802586c:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 8025870:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8025874:	f7ff ff76 	bl	8025764 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8025878:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802587a:	fb10 f003 	smulbb	r0, r0, r3
 802587e:	b280      	uxth	r0, r0
 8025880:	1c41      	adds	r1, r0, #1
 8025882:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8025886:	1209      	asrs	r1, r1, #8
 8025888:	f011 0fff 	tst.w	r1, #255	; 0xff
 802588c:	d014      	beq.n	80258b8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 802588e:	9808      	ldr	r0, [sp, #32]
 8025890:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8025892:	b2c9      	uxtb	r1, r1
 8025894:	b2ba      	uxth	r2, r7
 8025896:	9102      	str	r1, [sp, #8]
 8025898:	2101      	movs	r1, #1
 802589a:	4413      	add	r3, r2
 802589c:	9101      	str	r1, [sp, #4]
 802589e:	4402      	add	r2, r0
 80258a0:	fa0f f18b 	sxth.w	r1, fp
 80258a4:	f8da 0000 	ldr.w	r0, [sl]
 80258a8:	9100      	str	r1, [sp, #0]
 80258aa:	6941      	ldr	r1, [r0, #20]
 80258ac:	b21b      	sxth	r3, r3
 80258ae:	460d      	mov	r5, r1
 80258b0:	b212      	sxth	r2, r2
 80258b2:	9905      	ldr	r1, [sp, #20]
 80258b4:	4650      	mov	r0, sl
 80258b6:	47a8      	blx	r5
 80258b8:	9b04      	ldr	r3, [sp, #16]
 80258ba:	3301      	adds	r3, #1
 80258bc:	f107 0201 	add.w	r2, r7, #1
 80258c0:	d0c8      	beq.n	8025854 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 80258c2:	f9b4 7000 	ldrsh.w	r7, [r4]
 80258c6:	1abb      	subs	r3, r7, r2
 80258c8:	2b00      	cmp	r3, #0
 80258ca:	dd31      	ble.n	8025930 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80258cc:	2a00      	cmp	r2, #0
 80258ce:	dabb      	bge.n	8025848 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 80258d0:	2f00      	cmp	r7, #0
 80258d2:	dd2d      	ble.n	8025930 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80258d4:	2200      	movs	r2, #0
 80258d6:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 80258da:	19d1      	adds	r1, r2, r7
 80258dc:	4299      	cmp	r1, r3
 80258de:	db02      	blt.n	80258e6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 80258e0:	1a9f      	subs	r7, r3, r2
 80258e2:	2f00      	cmp	r7, #0
 80258e4:	dd24      	ble.n	8025930 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80258e6:	ea4f 1188 	mov.w	r1, r8, lsl #6
 80258ea:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 80258ee:	f7ff ff39 	bl	8025764 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 80258f2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80258f4:	fb10 f003 	smulbb	r0, r0, r3
 80258f8:	b280      	uxth	r0, r0
 80258fa:	1c41      	adds	r1, r0, #1
 80258fc:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8025900:	1209      	asrs	r1, r1, #8
 8025902:	f011 0fff 	tst.w	r1, #255	; 0xff
 8025906:	d013      	beq.n	8025930 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8025908:	9808      	ldr	r0, [sp, #32]
 802590a:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 802590c:	b292      	uxth	r2, r2
 802590e:	b2c9      	uxtb	r1, r1
 8025910:	4413      	add	r3, r2
 8025912:	9102      	str	r1, [sp, #8]
 8025914:	4402      	add	r2, r0
 8025916:	b23f      	sxth	r7, r7
 8025918:	f8da 0000 	ldr.w	r0, [sl]
 802591c:	9701      	str	r7, [sp, #4]
 802591e:	fa0f f18b 	sxth.w	r1, fp
 8025922:	9100      	str	r1, [sp, #0]
 8025924:	6947      	ldr	r7, [r0, #20]
 8025926:	9905      	ldr	r1, [sp, #20]
 8025928:	b21b      	sxth	r3, r3
 802592a:	b212      	sxth	r2, r2
 802592c:	4650      	mov	r0, sl
 802592e:	47b8      	blx	r7
 8025930:	464b      	mov	r3, r9
 8025932:	e75c      	b.n	80257ee <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 8025934:	2f00      	cmp	r7, #0
 8025936:	da95      	bge.n	8025864 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 8025938:	e78c      	b.n	8025854 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 802593a:	2900      	cmp	r1, #0
 802593c:	d0f8      	beq.n	8025930 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802593e:	e78f      	b.n	8025860 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

08025940 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 8025940:	4b4b      	ldr	r3, [pc, #300]	; (8025a70 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x130>)
 8025942:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8025946:	2500      	movs	r5, #0
 8025948:	f100 0620 	add.w	r6, r0, #32
 802594c:	4604      	mov	r4, r0
 802594e:	e9c0 3100 	strd	r3, r1, [r0]
 8025952:	e9c0 5502 	strd	r5, r5, [r0, #8]
 8025956:	e9c0 5504 	strd	r5, r5, [r0, #16]
 802595a:	e9c0 5506 	strd	r5, r5, [r0, #24]
 802595e:	f100 0718 	add.w	r7, r0, #24
 8025962:	4630      	mov	r0, r6
 8025964:	4690      	mov	r8, r2
 8025966:	f7ec fd35 	bl	80123d4 <_ZN8touchgfx7OutlineC1Ev>
 802596a:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 802596e:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8025972:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
 8025976:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 802597a:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 802597e:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 8025982:	f884 5058 	strb.w	r5, [r4, #88]	; 0x58
 8025986:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 802598a:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 802598e:	f9b8 2000 	ldrsh.w	r2, [r8]
 8025992:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 8025996:	f8d4 c004 	ldr.w	ip, [r4, #4]
 802599a:	9500      	str	r5, [sp, #0]
 802599c:	4410      	add	r0, r2
 802599e:	b280      	uxth	r0, r0
 80259a0:	fa0f fa80 	sxth.w	sl, r0
 80259a4:	45aa      	cmp	sl, r5
 80259a6:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 80259aa:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 80259ae:	dd5c      	ble.n	8025a6a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 80259b0:	4591      	cmp	r9, r2
 80259b2:	dd5a      	ble.n	8025a6a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 80259b4:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 80259b8:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 80259bc:	440b      	add	r3, r1
 80259be:	b29b      	uxth	r3, r3
 80259c0:	b21d      	sxth	r5, r3
 80259c2:	2d00      	cmp	r5, #0
 80259c4:	dd51      	ble.n	8025a6a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 80259c6:	458e      	cmp	lr, r1
 80259c8:	dd4f      	ble.n	8025a6a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 80259ca:	45d1      	cmp	r9, sl
 80259cc:	bfb8      	it	lt
 80259ce:	fa1f f089 	uxthlt.w	r0, r9
 80259d2:	45ae      	cmp	lr, r5
 80259d4:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 80259d8:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 80259dc:	bfb8      	it	lt
 80259de:	fa1f f38e 	uxthlt.w	r3, lr
 80259e2:	1a80      	subs	r0, r0, r2
 80259e4:	1a5b      	subs	r3, r3, r1
 80259e6:	f8ad 0004 	strh.w	r0, [sp, #4]
 80259ea:	f8ad 3006 	strh.w	r3, [sp, #6]
 80259ee:	f8ad 2000 	strh.w	r2, [sp]
 80259f2:	f8ad 1002 	strh.w	r1, [sp, #2]
 80259f6:	466d      	mov	r5, sp
 80259f8:	e895 0003 	ldmia.w	r5, {r0, r1}
 80259fc:	e887 0003 	stmia.w	r7, {r0, r1}
 8025a00:	f8dc 3000 	ldr.w	r3, [ip]
 8025a04:	4660      	mov	r0, ip
 8025a06:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8025a08:	4639      	mov	r1, r7
 8025a0a:	4798      	blx	r3
 8025a0c:	6861      	ldr	r1, [r4, #4]
 8025a0e:	4628      	mov	r0, r5
 8025a10:	3104      	adds	r1, #4
 8025a12:	f7ee fee5 	bl	80147e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8025a16:	4638      	mov	r0, r7
 8025a18:	f7ee fe9e 	bl	8014758 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8025a1c:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8025a20:	f8bd 2000 	ldrh.w	r2, [sp]
 8025a24:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 8025a28:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 8025a2c:	4630      	mov	r0, r6
 8025a2e:	f7ec fcb5 	bl	801239c <_ZN8touchgfx7Outline5resetEv>
 8025a32:	f9bd 3000 	ldrsh.w	r3, [sp]
 8025a36:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
 8025a3a:	015b      	lsls	r3, r3, #5
 8025a3c:	60a3      	str	r3, [r4, #8]
 8025a3e:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8025a42:	015b      	lsls	r3, r3, #5
 8025a44:	60e3      	str	r3, [r4, #12]
 8025a46:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8025a4a:	015b      	lsls	r3, r3, #5
 8025a4c:	6123      	str	r3, [r4, #16]
 8025a4e:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8025a52:	015b      	lsls	r3, r3, #5
 8025a54:	6163      	str	r3, [r4, #20]
 8025a56:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
 8025a5a:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 8025a5e:	4620      	mov	r0, r4
 8025a60:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
 8025a64:	b002      	add	sp, #8
 8025a66:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8025a6a:	2300      	movs	r3, #0
 8025a6c:	9301      	str	r3, [sp, #4]
 8025a6e:	e7c2      	b.n	80259f6 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb6>
 8025a70:	0802cdf0 	.word	0x0802cdf0

08025a74 <_ZN8touchgfx6Canvas5closeEv>:
 8025a74:	b538      	push	{r3, r4, r5, lr}
 8025a76:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8025a7a:	4604      	mov	r4, r0
 8025a7c:	b193      	cbz	r3, 8025aa4 <_ZN8touchgfx6Canvas5closeEv+0x30>
 8025a7e:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 8025a82:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
 8025a86:	4213      	tst	r3, r2
 8025a88:	d10c      	bne.n	8025aa4 <_ZN8touchgfx6Canvas5closeEv+0x30>
 8025a8a:	f100 0520 	add.w	r5, r0, #32
 8025a8e:	b123      	cbz	r3, 8025a9a <_ZN8touchgfx6Canvas5closeEv+0x26>
 8025a90:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
 8025a94:	4628      	mov	r0, r5
 8025a96:	f7ff fe79 	bl	802578c <_ZN8touchgfx10Rasterizer6lineToEii>
 8025a9a:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
 8025a9e:	4628      	mov	r0, r5
 8025aa0:	f7ff fe74 	bl	802578c <_ZN8touchgfx10Rasterizer6lineToEii>
 8025aa4:	2300      	movs	r3, #0
 8025aa6:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8025aaa:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
 8025aae:	4298      	cmp	r0, r3
 8025ab0:	bf34      	ite	cc
 8025ab2:	2000      	movcc	r0, #0
 8025ab4:	2001      	movcs	r0, #1
 8025ab6:	bd38      	pop	{r3, r4, r5, pc}

08025ab8 <_ZN8touchgfx6Canvas6renderEh>:
 8025ab8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8025abc:	4604      	mov	r4, r0
 8025abe:	6840      	ldr	r0, [r0, #4]
 8025ac0:	6803      	ldr	r3, [r0, #0]
 8025ac2:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8025ac4:	460d      	mov	r5, r1
 8025ac6:	4798      	blx	r3
 8025ac8:	fb10 f105 	smulbb	r1, r0, r5
 8025acc:	b289      	uxth	r1, r1
 8025ace:	1c4d      	adds	r5, r1, #1
 8025ad0:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8025ad4:	122d      	asrs	r5, r5, #8
 8025ad6:	f000 809d 	beq.w	8025c14 <_ZN8touchgfx6Canvas6renderEh+0x15c>
 8025ada:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 8025ade:	2b00      	cmp	r3, #0
 8025ae0:	f000 8098 	beq.w	8025c14 <_ZN8touchgfx6Canvas6renderEh+0x15c>
 8025ae4:	4620      	mov	r0, r4
 8025ae6:	f7ff ffc5 	bl	8025a74 <_ZN8touchgfx6Canvas5closeEv>
 8025aea:	4607      	mov	r7, r0
 8025aec:	2800      	cmp	r0, #0
 8025aee:	d048      	beq.n	8025b82 <_ZN8touchgfx6Canvas6renderEh+0xca>
 8025af0:	6863      	ldr	r3, [r4, #4]
 8025af2:	4e49      	ldr	r6, [pc, #292]	; (8025c18 <_ZN8touchgfx6Canvas6renderEh+0x160>)
 8025af4:	6a98      	ldr	r0, [r3, #40]	; 0x28
 8025af6:	6837      	ldr	r7, [r6, #0]
 8025af8:	6803      	ldr	r3, [r0, #0]
 8025afa:	689b      	ldr	r3, [r3, #8]
 8025afc:	4798      	blx	r3
 8025afe:	4601      	mov	r1, r0
 8025b00:	4638      	mov	r0, r7
 8025b02:	f7ea fdb9 	bl	8010678 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 8025b06:	4607      	mov	r7, r0
 8025b08:	f7dd fd8c 	bl	8003624 <_ZN8touchgfx3HAL3lcdEv>
 8025b0c:	6803      	ldr	r3, [r0, #0]
 8025b0e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8025b10:	4798      	blx	r3
 8025b12:	4680      	mov	r8, r0
 8025b14:	f7dd fd86 	bl	8003624 <_ZN8touchgfx3HAL3lcdEv>
 8025b18:	6803      	ldr	r3, [r0, #0]
 8025b1a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8025b1c:	4798      	blx	r3
 8025b1e:	280b      	cmp	r0, #11
 8025b20:	d85d      	bhi.n	8025bde <_ZN8touchgfx6Canvas6renderEh+0x126>
 8025b22:	e8df f000 	tbb	[pc, r0]
 8025b26:	5e53      	.short	0x5e53
 8025b28:	325c066e 	.word	0x325c066e
 8025b2c:	67676742 	.word	0x67676742
 8025b30:	6767      	.short	0x6767
 8025b32:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8025b36:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8025b3a:	2208      	movs	r2, #8
 8025b3c:	fb91 f2f2 	sdiv	r2, r1, r2
 8025b40:	fb08 2303 	mla	r3, r8, r3, r2
 8025b44:	441f      	add	r7, r3
 8025b46:	424b      	negs	r3, r1
 8025b48:	f003 0307 	and.w	r3, r3, #7
 8025b4c:	f001 0107 	and.w	r1, r1, #7
 8025b50:	bf58      	it	pl
 8025b52:	4259      	negpl	r1, r3
 8025b54:	b2c9      	uxtb	r1, r1
 8025b56:	b2ed      	uxtb	r5, r5
 8025b58:	e9cd 1500 	strd	r1, r5, [sp]
 8025b5c:	6860      	ldr	r0, [r4, #4]
 8025b5e:	463a      	mov	r2, r7
 8025b60:	6a81      	ldr	r1, [r0, #40]	; 0x28
 8025b62:	fa0f f388 	sxth.w	r3, r8
 8025b66:	f104 0020 	add.w	r0, r4, #32
 8025b6a:	f7ff fe1b 	bl	80257a4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 8025b6e:	6863      	ldr	r3, [r4, #4]
 8025b70:	4607      	mov	r7, r0
 8025b72:	6a98      	ldr	r0, [r3, #40]	; 0x28
 8025b74:	6803      	ldr	r3, [r0, #0]
 8025b76:	691b      	ldr	r3, [r3, #16]
 8025b78:	4798      	blx	r3
 8025b7a:	6830      	ldr	r0, [r6, #0]
 8025b7c:	6803      	ldr	r3, [r0, #0]
 8025b7e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8025b80:	4798      	blx	r3
 8025b82:	4638      	mov	r0, r7
 8025b84:	b002      	add	sp, #8
 8025b86:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8025b8a:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8025b8e:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8025b92:	2204      	movs	r2, #4
 8025b94:	fb91 f2f2 	sdiv	r2, r1, r2
 8025b98:	fb08 2303 	mla	r3, r8, r3, r2
 8025b9c:	441f      	add	r7, r3
 8025b9e:	424b      	negs	r3, r1
 8025ba0:	f003 0303 	and.w	r3, r3, #3
 8025ba4:	f001 0103 	and.w	r1, r1, #3
 8025ba8:	e7d2      	b.n	8025b50 <_ZN8touchgfx6Canvas6renderEh+0x98>
 8025baa:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8025bae:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8025bb2:	2900      	cmp	r1, #0
 8025bb4:	f04f 0202 	mov.w	r2, #2
 8025bb8:	fb91 f2f2 	sdiv	r2, r1, r2
 8025bbc:	f001 0101 	and.w	r1, r1, #1
 8025bc0:	fb08 2303 	mla	r3, r8, r3, r2
 8025bc4:	441f      	add	r7, r3
 8025bc6:	bfb8      	it	lt
 8025bc8:	4249      	neglt	r1, r1
 8025bca:	e7c3      	b.n	8025b54 <_ZN8touchgfx6Canvas6renderEh+0x9c>
 8025bcc:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8025bd0:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8025bd4:	fb08 f303 	mul.w	r3, r8, r3
 8025bd8:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8025bdc:	441f      	add	r7, r3
 8025bde:	2100      	movs	r1, #0
 8025be0:	e7b9      	b.n	8025b56 <_ZN8touchgfx6Canvas6renderEh+0x9e>
 8025be2:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8025be6:	fb08 f203 	mul.w	r2, r8, r3
 8025bea:	8b23      	ldrh	r3, [r4, #24]
 8025bec:	2103      	movs	r1, #3
 8025bee:	fb13 2301 	smlabb	r3, r3, r1, r2
 8025bf2:	e7f3      	b.n	8025bdc <_ZN8touchgfx6Canvas6renderEh+0x124>
 8025bf4:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8025bf8:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8025bfc:	fb08 2303 	mla	r3, r8, r3, r2
 8025c00:	e7ec      	b.n	8025bdc <_ZN8touchgfx6Canvas6renderEh+0x124>
 8025c02:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8025c06:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8025c0a:	fb08 f303 	mul.w	r3, r8, r3
 8025c0e:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8025c12:	e7e3      	b.n	8025bdc <_ZN8touchgfx6Canvas6renderEh+0x124>
 8025c14:	2701      	movs	r7, #1
 8025c16:	e7b4      	b.n	8025b82 <_ZN8touchgfx6Canvas6renderEh+0xca>
 8025c18:	200137bc 	.word	0x200137bc

08025c1c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 8025c1c:	b510      	push	{r4, lr}
 8025c1e:	4b07      	ldr	r3, [pc, #28]	; (8025c3c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 8025c20:	781b      	ldrb	r3, [r3, #0]
 8025c22:	2b01      	cmp	r3, #1
 8025c24:	d108      	bne.n	8025c38 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 8025c26:	6843      	ldr	r3, [r0, #4]
 8025c28:	6814      	ldr	r4, [r2, #0]
 8025c2a:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8025c2e:	680b      	ldr	r3, [r1, #0]
 8025c30:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 8025c34:	6013      	str	r3, [r2, #0]
 8025c36:	600c      	str	r4, [r1, #0]
 8025c38:	bd10      	pop	{r4, pc}
 8025c3a:	bf00      	nop
 8025c3c:	200137b4 	.word	0x200137b4

08025c40 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 8025c40:	b513      	push	{r0, r1, r4, lr}
 8025c42:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8025c46:	4604      	mov	r4, r0
 8025c48:	e9cd 2100 	strd	r2, r1, [sp]
 8025c4c:	b9a3      	cbnz	r3, 8025c78 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 8025c4e:	466a      	mov	r2, sp
 8025c50:	a901      	add	r1, sp, #4
 8025c52:	4620      	mov	r0, r4
 8025c54:	f7ff ffe2 	bl	8025c1c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8025c58:	68a3      	ldr	r3, [r4, #8]
 8025c5a:	9901      	ldr	r1, [sp, #4]
 8025c5c:	9a00      	ldr	r2, [sp, #0]
 8025c5e:	1ac9      	subs	r1, r1, r3
 8025c60:	68e3      	ldr	r3, [r4, #12]
 8025c62:	9101      	str	r1, [sp, #4]
 8025c64:	1ad2      	subs	r2, r2, r3
 8025c66:	2a00      	cmp	r2, #0
 8025c68:	9200      	str	r2, [sp, #0]
 8025c6a:	da0b      	bge.n	8025c84 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 8025c6c:	2301      	movs	r3, #1
 8025c6e:	2900      	cmp	r1, #0
 8025c70:	da0e      	bge.n	8025c90 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 8025c72:	f043 0304 	orr.w	r3, r3, #4
 8025c76:	e013      	b.n	8025ca0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 8025c78:	f7ff fefc 	bl	8025a74 <_ZN8touchgfx6Canvas5closeEv>
 8025c7c:	2800      	cmp	r0, #0
 8025c7e:	d1e6      	bne.n	8025c4e <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 8025c80:	b002      	add	sp, #8
 8025c82:	bd10      	pop	{r4, pc}
 8025c84:	6963      	ldr	r3, [r4, #20]
 8025c86:	429a      	cmp	r2, r3
 8025c88:	bfac      	ite	ge
 8025c8a:	2302      	movge	r3, #2
 8025c8c:	2300      	movlt	r3, #0
 8025c8e:	e7ee      	b.n	8025c6e <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 8025c90:	6920      	ldr	r0, [r4, #16]
 8025c92:	4281      	cmp	r1, r0
 8025c94:	bfac      	ite	ge
 8025c96:	2008      	movge	r0, #8
 8025c98:	2000      	movlt	r0, #0
 8025c9a:	4318      	orrs	r0, r3
 8025c9c:	b2c3      	uxtb	r3, r0
 8025c9e:	b158      	cbz	r0, 8025cb8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 8025ca0:	2200      	movs	r2, #0
 8025ca2:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
 8025ca6:	9901      	ldr	r1, [sp, #4]
 8025ca8:	9a00      	ldr	r2, [sp, #0]
 8025caa:	66a1      	str	r1, [r4, #104]	; 0x68
 8025cac:	66e2      	str	r2, [r4, #108]	; 0x6c
 8025cae:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
 8025cb2:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 8025cb6:	e7e3      	b.n	8025c80 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 8025cb8:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 8025cbc:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8025cc0:	4298      	cmp	r0, r3
 8025cc2:	d803      	bhi.n	8025ccc <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 8025cc4:	f104 0020 	add.w	r0, r4, #32
 8025cc8:	f7ed f866 	bl	8012d98 <_ZN8touchgfx7Outline6moveToEii>
 8025ccc:	2301      	movs	r3, #1
 8025cce:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8025cd2:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8025cd6:	2300      	movs	r3, #0
 8025cd8:	e7e5      	b.n	8025ca6 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

08025cda <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 8025cda:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8025cdc:	ab02      	add	r3, sp, #8
 8025cde:	4604      	mov	r4, r0
 8025ce0:	f843 2d08 	str.w	r2, [r3, #-8]!
 8025ce4:	9101      	str	r1, [sp, #4]
 8025ce6:	461a      	mov	r2, r3
 8025ce8:	a901      	add	r1, sp, #4
 8025cea:	f7ff ff97 	bl	8025c1c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8025cee:	68a3      	ldr	r3, [r4, #8]
 8025cf0:	9901      	ldr	r1, [sp, #4]
 8025cf2:	9a00      	ldr	r2, [sp, #0]
 8025cf4:	1ac9      	subs	r1, r1, r3
 8025cf6:	68e3      	ldr	r3, [r4, #12]
 8025cf8:	9101      	str	r1, [sp, #4]
 8025cfa:	1ad2      	subs	r2, r2, r3
 8025cfc:	2a00      	cmp	r2, #0
 8025cfe:	9200      	str	r2, [sp, #0]
 8025d00:	db1c      	blt.n	8025d3c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 8025d02:	6963      	ldr	r3, [r4, #20]
 8025d04:	429a      	cmp	r2, r3
 8025d06:	bfac      	ite	ge
 8025d08:	2002      	movge	r0, #2
 8025d0a:	2000      	movlt	r0, #0
 8025d0c:	2900      	cmp	r1, #0
 8025d0e:	db17      	blt.n	8025d40 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 8025d10:	6923      	ldr	r3, [r4, #16]
 8025d12:	4299      	cmp	r1, r3
 8025d14:	bfac      	ite	ge
 8025d16:	2308      	movge	r3, #8
 8025d18:	2300      	movlt	r3, #0
 8025d1a:	4303      	orrs	r3, r0
 8025d1c:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
 8025d20:	b2dd      	uxtb	r5, r3
 8025d22:	b978      	cbnz	r0, 8025d44 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 8025d24:	f104 0020 	add.w	r0, r4, #32
 8025d28:	f7ff fd30 	bl	802578c <_ZN8touchgfx10Rasterizer6lineToEii>
 8025d2c:	9b01      	ldr	r3, [sp, #4]
 8025d2e:	65e3      	str	r3, [r4, #92]	; 0x5c
 8025d30:	9b00      	ldr	r3, [sp, #0]
 8025d32:	6623      	str	r3, [r4, #96]	; 0x60
 8025d34:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 8025d38:	b002      	add	sp, #8
 8025d3a:	bd70      	pop	{r4, r5, r6, pc}
 8025d3c:	2001      	movs	r0, #1
 8025d3e:	e7e5      	b.n	8025d0c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 8025d40:	2304      	movs	r3, #4
 8025d42:	e7ea      	b.n	8025d1a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 8025d44:	b113      	cbz	r3, 8025d4c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 8025d46:	ea10 0305 	ands.w	r3, r0, r5
 8025d4a:	d11c      	bne.n	8025d86 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 8025d4c:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
 8025d50:	f104 0620 	add.w	r6, r4, #32
 8025d54:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
 8025d58:	b98b      	cbnz	r3, 8025d7e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 8025d5a:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 8025d5e:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8025d62:	4298      	cmp	r0, r3
 8025d64:	d802      	bhi.n	8025d6c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 8025d66:	4630      	mov	r0, r6
 8025d68:	f7ed f816 	bl	8012d98 <_ZN8touchgfx7Outline6moveToEii>
 8025d6c:	2301      	movs	r3, #1
 8025d6e:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8025d72:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8025d76:	e9dd 2100 	ldrd	r2, r1, [sp]
 8025d7a:	4630      	mov	r0, r6
 8025d7c:	e7d4      	b.n	8025d28 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 8025d7e:	4630      	mov	r0, r6
 8025d80:	f7ff fd04 	bl	802578c <_ZN8touchgfx10Rasterizer6lineToEii>
 8025d84:	e7f7      	b.n	8025d76 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 8025d86:	461d      	mov	r5, r3
 8025d88:	e7d0      	b.n	8025d2c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

08025d8c <_ZN8touchgfx6CanvasD1Ev>:
 8025d8c:	b510      	push	{r4, lr}
 8025d8e:	4b04      	ldr	r3, [pc, #16]	; (8025da0 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 8025d90:	4604      	mov	r4, r0
 8025d92:	f840 3b20 	str.w	r3, [r0], #32
 8025d96:	f7ec faf9 	bl	801238c <_ZN8touchgfx7OutlineD1Ev>
 8025d9a:	4620      	mov	r0, r4
 8025d9c:	bd10      	pop	{r4, pc}
 8025d9e:	bf00      	nop
 8025da0:	0802cdf0 	.word	0x0802cdf0

08025da4 <_ZN8touchgfx6CanvasD0Ev>:
 8025da4:	b510      	push	{r4, lr}
 8025da6:	4604      	mov	r4, r0
 8025da8:	f7ff fff0 	bl	8025d8c <_ZN8touchgfx6CanvasD1Ev>
 8025dac:	4620      	mov	r0, r4
 8025dae:	2170      	movs	r1, #112	; 0x70
 8025db0:	f001 fbe5 	bl	802757e <_ZdlPvj>
 8025db4:	4620      	mov	r0, r4
 8025db6:	bd10      	pop	{r4, pc}

08025db8 <_ZN8touchgfx6CircleD1Ev>:
 8025db8:	4770      	bx	lr

08025dba <_ZN8touchgfx6CircleD0Ev>:
 8025dba:	b510      	push	{r4, lr}
 8025dbc:	2148      	movs	r1, #72	; 0x48
 8025dbe:	4604      	mov	r4, r0
 8025dc0:	f001 fbdd 	bl	802757e <_ZdlPvj>
 8025dc4:	4620      	mov	r0, r4
 8025dc6:	bd10      	pop	{r4, pc}

08025dc8 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
 8025dc8:	b508      	push	{r3, lr}
 8025dca:	f5c0 6034 	rsb	r0, r0, #2880	; 0xb40
 8025dce:	f7ea ffa9 	bl	8010d24 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8025dd2:	bd08      	pop	{r3, pc}

08025dd4 <_ZN8touchgfx6CircleC1Ev>:
 8025dd4:	b510      	push	{r4, lr}
 8025dd6:	4604      	mov	r4, r0
 8025dd8:	f7ea fe40 	bl	8010a5c <_ZN8touchgfx12CanvasWidgetC1Ev>
 8025ddc:	4b08      	ldr	r3, [pc, #32]	; (8025e00 <_ZN8touchgfx6CircleC1Ev+0x2c>)
 8025dde:	6023      	str	r3, [r4, #0]
 8025de0:	f44f 5234 	mov.w	r2, #11520	; 0x2d00
 8025de4:	2300      	movs	r3, #0
 8025de6:	e9c4 230f 	strd	r2, r3, [r4, #60]	; 0x3c
 8025dea:	f24b 4205 	movw	r2, #46085	; 0xb405
 8025dee:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 8025df2:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 8025df6:	f8a4 2044 	strh.w	r2, [r4, #68]	; 0x44
 8025dfa:	60a3      	str	r3, [r4, #8]
 8025dfc:	4620      	mov	r0, r4
 8025dfe:	bd10      	pop	{r4, pc}
 8025e00:	0802ce04 	.word	0x0802ce04

08025e04 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
 8025e04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025e08:	428a      	cmp	r2, r1
 8025e0a:	4680      	mov	r8, r0
 8025e0c:	4610      	mov	r0, r2
 8025e0e:	4699      	mov	r9, r3
 8025e10:	bfa6      	itte	ge
 8025e12:	460a      	movge	r2, r1
 8025e14:	4603      	movge	r3, r0
 8025e16:	460b      	movlt	r3, r1
 8025e18:	1a99      	subs	r1, r3, r2
 8025e1a:	b085      	sub	sp, #20
 8025e1c:	f5b1 5f34 	cmp.w	r1, #11520	; 0x2d00
 8025e20:	f8d8 4040 	ldr.w	r4, [r8, #64]	; 0x40
 8025e24:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8025e26:	bfa4      	itt	ge
 8025e28:	f44f 5334 	movge.w	r3, #11520	; 0x2d00
 8025e2c:	2200      	movge	r2, #0
 8025e2e:	e9dd 760e 	ldrd	r7, r6, [sp, #56]	; 0x38
 8025e32:	9300      	str	r3, [sp, #0]
 8025e34:	f108 0a34 	add.w	sl, r8, #52	; 0x34
 8025e38:	f102 0b01 	add.w	fp, r2, #1
 8025e3c:	2c00      	cmp	r4, #0
 8025e3e:	f040 80af 	bne.w	8025fa0 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x19c>
 8025e42:	4610      	mov	r0, r2
 8025e44:	9201      	str	r2, [sp, #4]
 8025e46:	f7ea ff6d 	bl	8010d24 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8025e4a:	a903      	add	r1, sp, #12
 8025e4c:	9003      	str	r0, [sp, #12]
 8025e4e:	4650      	mov	r0, sl
 8025e50:	f7ea fe30 	bl	8010ab4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8025e54:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 8025e58:	9a01      	ldr	r2, [sp, #4]
 8025e5a:	4408      	add	r0, r1
 8025e5c:	f8d9 1000 	ldr.w	r1, [r9]
 8025e60:	4281      	cmp	r1, r0
 8025e62:	bfc8      	it	gt
 8025e64:	f8c9 0000 	strgt.w	r0, [r9]
 8025e68:	6839      	ldr	r1, [r7, #0]
 8025e6a:	4288      	cmp	r0, r1
 8025e6c:	bfc8      	it	gt
 8025e6e:	6038      	strgt	r0, [r7, #0]
 8025e70:	4610      	mov	r0, r2
 8025e72:	f7ff ffa9 	bl	8025dc8 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8025e76:	a903      	add	r1, sp, #12
 8025e78:	9003      	str	r0, [sp, #12]
 8025e7a:	4650      	mov	r0, sl
 8025e7c:	f7ea fe1a 	bl	8010ab4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8025e80:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8025e84:	1a10      	subs	r0, r2, r0
 8025e86:	6832      	ldr	r2, [r6, #0]
 8025e88:	4282      	cmp	r2, r0
 8025e8a:	bfc8      	it	gt
 8025e8c:	6030      	strgt	r0, [r6, #0]
 8025e8e:	682a      	ldr	r2, [r5, #0]
 8025e90:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 8025e94:	4290      	cmp	r0, r2
 8025e96:	fb9b f2f1 	sdiv	r2, fp, r1
 8025e9a:	fb01 b212 	mls	r2, r1, r2, fp
 8025e9e:	eba1 0202 	sub.w	r2, r1, r2
 8025ea2:	bfc8      	it	gt
 8025ea4:	6028      	strgt	r0, [r5, #0]
 8025ea6:	fb92 f0f1 	sdiv	r0, r2, r1
 8025eaa:	fb01 2210 	mls	r2, r1, r0, r2
 8025eae:	4493      	add	fp, r2
 8025eb0:	9b00      	ldr	r3, [sp, #0]
 8025eb2:	455b      	cmp	r3, fp
 8025eb4:	db2a      	blt.n	8025f0c <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x108>
 8025eb6:	4658      	mov	r0, fp
 8025eb8:	f7ea ff34 	bl	8010d24 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8025ebc:	a903      	add	r1, sp, #12
 8025ebe:	9003      	str	r0, [sp, #12]
 8025ec0:	4650      	mov	r0, sl
 8025ec2:	f7ea fdf7 	bl	8010ab4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8025ec6:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8025eca:	4410      	add	r0, r2
 8025ecc:	f8d9 2000 	ldr.w	r2, [r9]
 8025ed0:	4282      	cmp	r2, r0
 8025ed2:	bfc8      	it	gt
 8025ed4:	f8c9 0000 	strgt.w	r0, [r9]
 8025ed8:	683a      	ldr	r2, [r7, #0]
 8025eda:	4290      	cmp	r0, r2
 8025edc:	bfc8      	it	gt
 8025ede:	6038      	strgt	r0, [r7, #0]
 8025ee0:	4658      	mov	r0, fp
 8025ee2:	f7ff ff71 	bl	8025dc8 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8025ee6:	a903      	add	r1, sp, #12
 8025ee8:	9003      	str	r0, [sp, #12]
 8025eea:	4650      	mov	r0, sl
 8025eec:	f7ea fde2 	bl	8010ab4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8025ef0:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8025ef4:	1a10      	subs	r0, r2, r0
 8025ef6:	6832      	ldr	r2, [r6, #0]
 8025ef8:	4282      	cmp	r2, r0
 8025efa:	bfc8      	it	gt
 8025efc:	6030      	strgt	r0, [r6, #0]
 8025efe:	682a      	ldr	r2, [r5, #0]
 8025f00:	4290      	cmp	r0, r2
 8025f02:	bfc8      	it	gt
 8025f04:	6028      	strgt	r0, [r5, #0]
 8025f06:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 8025f0a:	e7d1      	b.n	8025eb0 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xac>
 8025f0c:	9b00      	ldr	r3, [sp, #0]
 8025f0e:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 8025f12:	455b      	cmp	r3, fp
 8025f14:	dd27      	ble.n	8025f66 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x162>
 8025f16:	4618      	mov	r0, r3
 8025f18:	f7ea ff04 	bl	8010d24 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8025f1c:	a903      	add	r1, sp, #12
 8025f1e:	9003      	str	r0, [sp, #12]
 8025f20:	4650      	mov	r0, sl
 8025f22:	f7ea fdc7 	bl	8010ab4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8025f26:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8025f2a:	4410      	add	r0, r2
 8025f2c:	f8d9 2000 	ldr.w	r2, [r9]
 8025f30:	4282      	cmp	r2, r0
 8025f32:	bfc8      	it	gt
 8025f34:	f8c9 0000 	strgt.w	r0, [r9]
 8025f38:	683a      	ldr	r2, [r7, #0]
 8025f3a:	4290      	cmp	r0, r2
 8025f3c:	bfc8      	it	gt
 8025f3e:	6038      	strgt	r0, [r7, #0]
 8025f40:	9800      	ldr	r0, [sp, #0]
 8025f42:	f7ff ff41 	bl	8025dc8 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8025f46:	a903      	add	r1, sp, #12
 8025f48:	9003      	str	r0, [sp, #12]
 8025f4a:	4650      	mov	r0, sl
 8025f4c:	f7ea fdb2 	bl	8010ab4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8025f50:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8025f54:	1a10      	subs	r0, r2, r0
 8025f56:	6832      	ldr	r2, [r6, #0]
 8025f58:	4282      	cmp	r2, r0
 8025f5a:	bfc8      	it	gt
 8025f5c:	6030      	strgt	r0, [r6, #0]
 8025f5e:	682a      	ldr	r2, [r5, #0]
 8025f60:	4290      	cmp	r0, r2
 8025f62:	bfc8      	it	gt
 8025f64:	6028      	strgt	r0, [r5, #0]
 8025f66:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8025f6a:	f8d9 1000 	ldr.w	r1, [r9]
 8025f6e:	4291      	cmp	r1, r2
 8025f70:	bfc8      	it	gt
 8025f72:	f8c9 2000 	strgt.w	r2, [r9]
 8025f76:	683a      	ldr	r2, [r7, #0]
 8025f78:	f8d8 302c 	ldr.w	r3, [r8, #44]	; 0x2c
 8025f7c:	429a      	cmp	r2, r3
 8025f7e:	bfb8      	it	lt
 8025f80:	603b      	strlt	r3, [r7, #0]
 8025f82:	6832      	ldr	r2, [r6, #0]
 8025f84:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 8025f88:	429a      	cmp	r2, r3
 8025f8a:	bfc8      	it	gt
 8025f8c:	6033      	strgt	r3, [r6, #0]
 8025f8e:	682a      	ldr	r2, [r5, #0]
 8025f90:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 8025f94:	429a      	cmp	r2, r3
 8025f96:	da00      	bge.n	8025f9a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 8025f98:	602b      	str	r3, [r5, #0]
 8025f9a:	b005      	add	sp, #20
 8025f9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025fa0:	2002      	movs	r0, #2
 8025fa2:	3401      	adds	r4, #1
 8025fa4:	fb94 f4f0 	sdiv	r4, r4, r0
 8025fa8:	4610      	mov	r0, r2
 8025faa:	9201      	str	r2, [sp, #4]
 8025fac:	f7ea feba 	bl	8010d24 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8025fb0:	a903      	add	r1, sp, #12
 8025fb2:	9003      	str	r0, [sp, #12]
 8025fb4:	4650      	mov	r0, sl
 8025fb6:	f7ea fd7d 	bl	8010ab4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8025fba:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 8025fbe:	9a01      	ldr	r2, [sp, #4]
 8025fc0:	4408      	add	r0, r1
 8025fc2:	f8d9 1000 	ldr.w	r1, [r9]
 8025fc6:	1b03      	subs	r3, r0, r4
 8025fc8:	4299      	cmp	r1, r3
 8025fca:	bfc8      	it	gt
 8025fcc:	f8c9 3000 	strgt.w	r3, [r9]
 8025fd0:	6839      	ldr	r1, [r7, #0]
 8025fd2:	428b      	cmp	r3, r1
 8025fd4:	bfc8      	it	gt
 8025fd6:	603b      	strgt	r3, [r7, #0]
 8025fd8:	f8d9 1000 	ldr.w	r1, [r9]
 8025fdc:	4420      	add	r0, r4
 8025fde:	4281      	cmp	r1, r0
 8025fe0:	bfc8      	it	gt
 8025fe2:	f8c9 0000 	strgt.w	r0, [r9]
 8025fe6:	6839      	ldr	r1, [r7, #0]
 8025fe8:	4288      	cmp	r0, r1
 8025fea:	bfc8      	it	gt
 8025fec:	6038      	strgt	r0, [r7, #0]
 8025fee:	4610      	mov	r0, r2
 8025ff0:	f7ff feea 	bl	8025dc8 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8025ff4:	a903      	add	r1, sp, #12
 8025ff6:	9003      	str	r0, [sp, #12]
 8025ff8:	4650      	mov	r0, sl
 8025ffa:	f7ea fd5b 	bl	8010ab4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8025ffe:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8026002:	1a10      	subs	r0, r2, r0
 8026004:	6832      	ldr	r2, [r6, #0]
 8026006:	1b01      	subs	r1, r0, r4
 8026008:	428a      	cmp	r2, r1
 802600a:	bfc8      	it	gt
 802600c:	6031      	strgt	r1, [r6, #0]
 802600e:	682a      	ldr	r2, [r5, #0]
 8026010:	4291      	cmp	r1, r2
 8026012:	bfc8      	it	gt
 8026014:	6029      	strgt	r1, [r5, #0]
 8026016:	6832      	ldr	r2, [r6, #0]
 8026018:	4420      	add	r0, r4
 802601a:	4282      	cmp	r2, r0
 802601c:	bfc8      	it	gt
 802601e:	6030      	strgt	r0, [r6, #0]
 8026020:	682a      	ldr	r2, [r5, #0]
 8026022:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 8026026:	4290      	cmp	r0, r2
 8026028:	fb9b f2f1 	sdiv	r2, fp, r1
 802602c:	fb01 b212 	mls	r2, r1, r2, fp
 8026030:	eba1 0202 	sub.w	r2, r1, r2
 8026034:	bfc8      	it	gt
 8026036:	6028      	strgt	r0, [r5, #0]
 8026038:	fb92 f0f1 	sdiv	r0, r2, r1
 802603c:	fb01 2210 	mls	r2, r1, r0, r2
 8026040:	4493      	add	fp, r2
 8026042:	9b00      	ldr	r3, [sp, #0]
 8026044:	455b      	cmp	r3, fp
 8026046:	db40      	blt.n	80260ca <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x2c6>
 8026048:	4658      	mov	r0, fp
 802604a:	f7ea fe6b 	bl	8010d24 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802604e:	a903      	add	r1, sp, #12
 8026050:	9003      	str	r0, [sp, #12]
 8026052:	4650      	mov	r0, sl
 8026054:	f7ea fd2e 	bl	8010ab4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026058:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802605c:	4410      	add	r0, r2
 802605e:	f8d9 2000 	ldr.w	r2, [r9]
 8026062:	1b01      	subs	r1, r0, r4
 8026064:	428a      	cmp	r2, r1
 8026066:	bfc8      	it	gt
 8026068:	f8c9 1000 	strgt.w	r1, [r9]
 802606c:	683a      	ldr	r2, [r7, #0]
 802606e:	4291      	cmp	r1, r2
 8026070:	bfc8      	it	gt
 8026072:	6039      	strgt	r1, [r7, #0]
 8026074:	f8d9 2000 	ldr.w	r2, [r9]
 8026078:	4420      	add	r0, r4
 802607a:	4282      	cmp	r2, r0
 802607c:	bfc8      	it	gt
 802607e:	f8c9 0000 	strgt.w	r0, [r9]
 8026082:	683a      	ldr	r2, [r7, #0]
 8026084:	4290      	cmp	r0, r2
 8026086:	bfc8      	it	gt
 8026088:	6038      	strgt	r0, [r7, #0]
 802608a:	4658      	mov	r0, fp
 802608c:	f7ff fe9c 	bl	8025dc8 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026090:	a903      	add	r1, sp, #12
 8026092:	9003      	str	r0, [sp, #12]
 8026094:	4650      	mov	r0, sl
 8026096:	f7ea fd0d 	bl	8010ab4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802609a:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 802609e:	1a10      	subs	r0, r2, r0
 80260a0:	6832      	ldr	r2, [r6, #0]
 80260a2:	1b01      	subs	r1, r0, r4
 80260a4:	428a      	cmp	r2, r1
 80260a6:	bfc8      	it	gt
 80260a8:	6031      	strgt	r1, [r6, #0]
 80260aa:	682a      	ldr	r2, [r5, #0]
 80260ac:	4291      	cmp	r1, r2
 80260ae:	bfc8      	it	gt
 80260b0:	6029      	strgt	r1, [r5, #0]
 80260b2:	6832      	ldr	r2, [r6, #0]
 80260b4:	4420      	add	r0, r4
 80260b6:	4282      	cmp	r2, r0
 80260b8:	bfc8      	it	gt
 80260ba:	6030      	strgt	r0, [r6, #0]
 80260bc:	682a      	ldr	r2, [r5, #0]
 80260be:	4290      	cmp	r0, r2
 80260c0:	bfc8      	it	gt
 80260c2:	6028      	strgt	r0, [r5, #0]
 80260c4:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 80260c8:	e7bb      	b.n	8026042 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x23e>
 80260ca:	9b00      	ldr	r3, [sp, #0]
 80260cc:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 80260d0:	455b      	cmp	r3, fp
 80260d2:	f77f af62 	ble.w	8025f9a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 80260d6:	4618      	mov	r0, r3
 80260d8:	f7ea fe24 	bl	8010d24 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80260dc:	a903      	add	r1, sp, #12
 80260de:	9003      	str	r0, [sp, #12]
 80260e0:	4650      	mov	r0, sl
 80260e2:	f7ea fce7 	bl	8010ab4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80260e6:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 80260ea:	4410      	add	r0, r2
 80260ec:	f8d9 2000 	ldr.w	r2, [r9]
 80260f0:	1b01      	subs	r1, r0, r4
 80260f2:	428a      	cmp	r2, r1
 80260f4:	bfc8      	it	gt
 80260f6:	f8c9 1000 	strgt.w	r1, [r9]
 80260fa:	683a      	ldr	r2, [r7, #0]
 80260fc:	4291      	cmp	r1, r2
 80260fe:	bfc8      	it	gt
 8026100:	6039      	strgt	r1, [r7, #0]
 8026102:	f8d9 2000 	ldr.w	r2, [r9]
 8026106:	4420      	add	r0, r4
 8026108:	4282      	cmp	r2, r0
 802610a:	bfc8      	it	gt
 802610c:	f8c9 0000 	strgt.w	r0, [r9]
 8026110:	683b      	ldr	r3, [r7, #0]
 8026112:	4298      	cmp	r0, r3
 8026114:	bfc8      	it	gt
 8026116:	6038      	strgt	r0, [r7, #0]
 8026118:	9800      	ldr	r0, [sp, #0]
 802611a:	f7ff fe55 	bl	8025dc8 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802611e:	a903      	add	r1, sp, #12
 8026120:	9003      	str	r0, [sp, #12]
 8026122:	4650      	mov	r0, sl
 8026124:	f7ea fcc6 	bl	8010ab4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026128:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 802612c:	6832      	ldr	r2, [r6, #0]
 802612e:	1a18      	subs	r0, r3, r0
 8026130:	1b03      	subs	r3, r0, r4
 8026132:	429a      	cmp	r2, r3
 8026134:	bfc8      	it	gt
 8026136:	6033      	strgt	r3, [r6, #0]
 8026138:	682a      	ldr	r2, [r5, #0]
 802613a:	4293      	cmp	r3, r2
 802613c:	bfc8      	it	gt
 802613e:	602b      	strgt	r3, [r5, #0]
 8026140:	6833      	ldr	r3, [r6, #0]
 8026142:	4404      	add	r4, r0
 8026144:	42a3      	cmp	r3, r4
 8026146:	bfc8      	it	gt
 8026148:	6034      	strgt	r4, [r6, #0]
 802614a:	682b      	ldr	r3, [r5, #0]
 802614c:	429c      	cmp	r4, r3
 802614e:	bfc8      	it	gt
 8026150:	602c      	strgt	r4, [r5, #0]
 8026152:	e722      	b.n	8025f9a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>

08026154 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
 8026154:	b530      	push	{r4, r5, lr}
 8026156:	4604      	mov	r4, r0
 8026158:	4608      	mov	r0, r1
 802615a:	4611      	mov	r1, r2
 802615c:	461a      	mov	r2, r3
 802615e:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8026162:	b089      	sub	sp, #36	; 0x24
 8026164:	015b      	lsls	r3, r3, #5
 8026166:	9304      	str	r3, [sp, #16]
 8026168:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 802616c:	2500      	movs	r5, #0
 802616e:	015b      	lsls	r3, r3, #5
 8026170:	e9cd 3506 	strd	r3, r5, [sp, #24]
 8026174:	ab07      	add	r3, sp, #28
 8026176:	9302      	str	r3, [sp, #8]
 8026178:	ab06      	add	r3, sp, #24
 802617a:	9301      	str	r3, [sp, #4]
 802617c:	ab05      	add	r3, sp, #20
 802617e:	9300      	str	r3, [sp, #0]
 8026180:	ab04      	add	r3, sp, #16
 8026182:	9505      	str	r5, [sp, #20]
 8026184:	f7ff fe3e 	bl	8025e04 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
 8026188:	2520      	movs	r5, #32
 802618a:	9a04      	ldr	r2, [sp, #16]
 802618c:	9805      	ldr	r0, [sp, #20]
 802618e:	fb92 f2f5 	sdiv	r2, r2, r5
 8026192:	fb90 f0f5 	sdiv	r0, r0, r5
 8026196:	b292      	uxth	r2, r2
 8026198:	3002      	adds	r0, #2
 802619a:	1a80      	subs	r0, r0, r2
 802619c:	9b06      	ldr	r3, [sp, #24]
 802619e:	9907      	ldr	r1, [sp, #28]
 80261a0:	fb93 f3f5 	sdiv	r3, r3, r5
 80261a4:	fb91 f1f5 	sdiv	r1, r1, r5
 80261a8:	b29b      	uxth	r3, r3
 80261aa:	3102      	adds	r1, #2
 80261ac:	1ac9      	subs	r1, r1, r3
 80261ae:	3a01      	subs	r2, #1
 80261b0:	3b01      	subs	r3, #1
 80261b2:	80a0      	strh	r0, [r4, #4]
 80261b4:	4620      	mov	r0, r4
 80261b6:	8022      	strh	r2, [r4, #0]
 80261b8:	8063      	strh	r3, [r4, #2]
 80261ba:	80e1      	strh	r1, [r4, #6]
 80261bc:	b009      	add	sp, #36	; 0x24
 80261be:	bd30      	pop	{r4, r5, pc}

080261c0 <_ZNK8touchgfx6Circle14getMinimalRectEv>:
 80261c0:	b510      	push	{r4, lr}
 80261c2:	e9d1 230e 	ldrd	r2, r3, [r1, #56]	; 0x38
 80261c6:	4604      	mov	r4, r0
 80261c8:	f7ff ffc4 	bl	8026154 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 80261cc:	4620      	mov	r0, r4
 80261ce:	bd10      	pop	{r4, pc}

080261d0 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>:
 80261d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80261d2:	e9d1 540e 	ldrd	r5, r4, [r1, #56]	; 0x38
 80261d6:	4606      	mov	r6, r0
 80261d8:	f891 0044 	ldrb.w	r0, [r1, #68]	; 0x44
 80261dc:	6813      	ldr	r3, [r2, #0]
 80261de:	42a5      	cmp	r5, r4
 80261e0:	ea4f 1040 	mov.w	r0, r0, lsl #5
 80261e4:	da2b      	bge.n	802623e <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x6e>
 80261e6:	42a3      	cmp	r3, r4
 80261e8:	dd14      	ble.n	8026214 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x44>
 80261ea:	b168      	cbz	r0, 8026208 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 80261ec:	4267      	negs	r7, r4
 80261ee:	fb97 f2f0 	sdiv	r2, r7, r0
 80261f2:	fb00 7212 	mls	r2, r0, r2, r7
 80261f6:	1a82      	subs	r2, r0, r2
 80261f8:	fb92 f7f0 	sdiv	r7, r2, r0
 80261fc:	fb00 2017 	mls	r0, r0, r7, r2
 8026200:	1a24      	subs	r4, r4, r0
 8026202:	42ac      	cmp	r4, r5
 8026204:	bfb8      	it	lt
 8026206:	462c      	movlt	r4, r5
 8026208:	4630      	mov	r0, r6
 802620a:	4622      	mov	r2, r4
 802620c:	f7ff ffa2 	bl	8026154 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 8026210:	4630      	mov	r0, r6
 8026212:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8026214:	42ab      	cmp	r3, r5
 8026216:	dd0e      	ble.n	8026236 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 8026218:	b168      	cbz	r0, 8026236 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 802621a:	425f      	negs	r7, r3
 802621c:	fb97 f2f0 	sdiv	r2, r7, r0
 8026220:	fb00 7212 	mls	r2, r0, r2, r7
 8026224:	1a82      	subs	r2, r0, r2
 8026226:	fb92 f7f0 	sdiv	r7, r2, r0
 802622a:	fb00 2017 	mls	r0, r0, r7, r2
 802622e:	1a1b      	subs	r3, r3, r0
 8026230:	42ab      	cmp	r3, r5
 8026232:	bfb8      	it	lt
 8026234:	462b      	movlt	r3, r5
 8026236:	4622      	mov	r2, r4
 8026238:	461c      	mov	r4, r3
 802623a:	4613      	mov	r3, r2
 802623c:	e7e4      	b.n	8026208 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 802623e:	42a3      	cmp	r3, r4
 8026240:	da10      	bge.n	8026264 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x94>
 8026242:	b148      	cbz	r0, 8026258 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x88>
 8026244:	fb94 f2f0 	sdiv	r2, r4, r0
 8026248:	fb00 4212 	mls	r2, r0, r2, r4
 802624c:	1a82      	subs	r2, r0, r2
 802624e:	fb92 f7f0 	sdiv	r7, r2, r0
 8026252:	fb00 2017 	mls	r0, r0, r7, r2
 8026256:	4404      	add	r4, r0
 8026258:	42a5      	cmp	r5, r4
 802625a:	bfa8      	it	ge
 802625c:	4625      	movge	r5, r4
 802625e:	461c      	mov	r4, r3
 8026260:	462b      	mov	r3, r5
 8026262:	e7d1      	b.n	8026208 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8026264:	42ab      	cmp	r3, r5
 8026266:	dacf      	bge.n	8026208 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8026268:	2800      	cmp	r0, #0
 802626a:	d0cd      	beq.n	8026208 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 802626c:	fb93 f2f0 	sdiv	r2, r3, r0
 8026270:	fb00 3212 	mls	r2, r0, r2, r3
 8026274:	1a82      	subs	r2, r0, r2
 8026276:	fb92 f7f0 	sdiv	r7, r2, r0
 802627a:	fb00 2017 	mls	r0, r0, r7, r2
 802627e:	4403      	add	r3, r0
 8026280:	42ab      	cmp	r3, r5
 8026282:	bfa8      	it	ge
 8026284:	462b      	movge	r3, r5
 8026286:	e7bf      	b.n	8026208 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>

08026288 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
 8026288:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802628c:	e9d0 560e 	ldrd	r5, r6, [r0, #56]	; 0x38
 8026290:	42ae      	cmp	r6, r5
 8026292:	bfa2      	ittt	ge
 8026294:	4633      	movge	r3, r6
 8026296:	462e      	movge	r6, r5
 8026298:	461d      	movge	r5, r3
 802629a:	1bab      	subs	r3, r5, r6
 802629c:	468b      	mov	fp, r1
 802629e:	6c01      	ldr	r1, [r0, #64]	; 0x40
 80262a0:	f9b0 902c 	ldrsh.w	r9, [r0, #44]	; 0x2c
 80262a4:	f9b0 a030 	ldrsh.w	sl, [r0, #48]	; 0x30
 80262a8:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 80262ac:	f04f 0220 	mov.w	r2, #32
 80262b0:	b0ab      	sub	sp, #172	; 0xac
 80262b2:	4604      	mov	r4, r0
 80262b4:	bfa4      	itt	ge
 80262b6:	f44f 5534 	movge.w	r5, #11520	; 0x2d00
 80262ba:	2600      	movge	r6, #0
 80262bc:	fb99 f9f2 	sdiv	r9, r9, r2
 80262c0:	fb9a faf2 	sdiv	sl, sl, r2
 80262c4:	6b43      	ldr	r3, [r0, #52]	; 0x34
 80262c6:	2900      	cmp	r1, #0
 80262c8:	f000 80f5 	beq.w	80264b6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x22e>
 80262cc:	f9bb 0000 	ldrsh.w	r0, [fp]
 80262d0:	f9bb 2002 	ldrsh.w	r2, [fp, #2]
 80262d4:	eba9 0700 	sub.w	r7, r9, r0
 80262d8:	ea87 7ce7 	eor.w	ip, r7, r7, asr #31
 80262dc:	ebac 7ce7 	sub.w	ip, ip, r7, asr #31
 80262e0:	f8bb 7004 	ldrh.w	r7, [fp, #4]
 80262e4:	ebaa 0802 	sub.w	r8, sl, r2
 80262e8:	4407      	add	r7, r0
 80262ea:	ea88 70e8 	eor.w	r0, r8, r8, asr #31
 80262ee:	eba0 70e8 	sub.w	r0, r0, r8, asr #31
 80262f2:	f8bb 8006 	ldrh.w	r8, [fp, #6]
 80262f6:	b23f      	sxth	r7, r7
 80262f8:	4490      	add	r8, r2
 80262fa:	eba9 0707 	sub.w	r7, r9, r7
 80262fe:	fa0f f888 	sxth.w	r8, r8
 8026302:	ebaa 0808 	sub.w	r8, sl, r8
 8026306:	2f00      	cmp	r7, #0
 8026308:	bfb8      	it	lt
 802630a:	427f      	neglt	r7, r7
 802630c:	f1b8 0f00 	cmp.w	r8, #0
 8026310:	bfb8      	it	lt
 8026312:	f1c8 0800 	rsblt	r8, r8, #0
 8026316:	45bc      	cmp	ip, r7
 8026318:	bfcc      	ite	gt
 802631a:	f10c 0701 	addgt.w	r7, ip, #1
 802631e:	3701      	addle	r7, #1
 8026320:	4540      	cmp	r0, r8
 8026322:	bfc8      	it	gt
 8026324:	f100 0801 	addgt.w	r8, r0, #1
 8026328:	f894 0044 	ldrb.w	r0, [r4, #68]	; 0x44
 802632c:	f100 0001 	add.w	r0, r0, #1
 8026330:	ea4f 0060 	mov.w	r0, r0, asr #1
 8026334:	f04f 0202 	mov.w	r2, #2
 8026338:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 802633c:	fb91 f1f2 	sdiv	r1, r1, r2
 8026340:	eba3 0301 	sub.w	r3, r3, r1
 8026344:	bfd8      	it	le
 8026346:	f108 0801 	addle.w	r8, r8, #1
 802634a:	9201      	str	r2, [sp, #4]
 802634c:	930d      	str	r3, [sp, #52]	; 0x34
 802634e:	f7ea fcc9 	bl	8010ce4 <_ZN8touchgfx7CWRUtil4sineEi>
 8026352:	a92a      	add	r1, sp, #168	; 0xa8
 8026354:	fb08 f808 	mul.w	r8, r8, r8
 8026358:	f841 0d70 	str.w	r0, [r1, #-112]!
 802635c:	a80d      	add	r0, sp, #52	; 0x34
 802635e:	f7ea fba9 	bl	8010ab4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026362:	fb07 8707 	mla	r7, r7, r7, r8
 8026366:	f04f 0c20 	mov.w	ip, #32
 802636a:	fb90 f0fc 	sdiv	r0, r0, ip
 802636e:	4340      	muls	r0, r0
 8026370:	4287      	cmp	r7, r0
 8026372:	9a01      	ldr	r2, [sp, #4]
 8026374:	da04      	bge.n	8026380 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf8>
 8026376:	2401      	movs	r4, #1
 8026378:	4620      	mov	r0, r4
 802637a:	b02b      	add	sp, #172	; 0xac
 802637c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026380:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8026382:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8026384:	fb91 f3f2 	sdiv	r3, r1, r2
 8026388:	4403      	add	r3, r0
 802638a:	fb93 f3fc 	sdiv	r3, r3, ip
 802638e:	f9bb 1000 	ldrsh.w	r1, [fp]
 8026392:	f8bb 2004 	ldrh.w	r2, [fp, #4]
 8026396:	440a      	add	r2, r1
 8026398:	b212      	sxth	r2, r2
 802639a:	454a      	cmp	r2, r9
 802639c:	bfa8      	it	ge
 802639e:	464a      	movge	r2, r9
 80263a0:	428a      	cmp	r2, r1
 80263a2:	bfac      	ite	ge
 80263a4:	eba9 0902 	subge.w	r9, r9, r2
 80263a8:	eba9 0901 	sublt.w	r9, r9, r1
 80263ac:	f8bb 2006 	ldrh.w	r2, [fp, #6]
 80263b0:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 80263b4:	440a      	add	r2, r1
 80263b6:	b212      	sxth	r2, r2
 80263b8:	4552      	cmp	r2, sl
 80263ba:	bfa8      	it	ge
 80263bc:	4652      	movge	r2, sl
 80263be:	428a      	cmp	r2, r1
 80263c0:	bfac      	ite	ge
 80263c2:	ebaa 0a02 	subge.w	sl, sl, r2
 80263c6:	ebaa 0a01 	sublt.w	sl, sl, r1
 80263ca:	3301      	adds	r3, #1
 80263cc:	fb0a fa0a 	mul.w	sl, sl, sl
 80263d0:	fb09 a909 	mla	r9, r9, r9, sl
 80263d4:	435b      	muls	r3, r3
 80263d6:	4599      	cmp	r9, r3
 80263d8:	dccd      	bgt.n	8026376 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xee>
 80263da:	465a      	mov	r2, fp
 80263dc:	4621      	mov	r1, r4
 80263de:	a80e      	add	r0, sp, #56	; 0x38
 80263e0:	f7ff faae 	bl	8025940 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 80263e4:	6b62      	ldr	r2, [r4, #52]	; 0x34
 80263e6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80263e8:	9209      	str	r2, [sp, #36]	; 0x24
 80263ea:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 80263ee:	930a      	str	r3, [sp, #40]	; 0x28
 80263f0:	dd07      	ble.n	8026402 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x17a>
 80263f2:	2102      	movs	r1, #2
 80263f4:	fb93 f3f1 	sdiv	r3, r3, r1
 80263f8:	4413      	add	r3, r2
 80263fa:	930a      	str	r3, [sp, #40]	; 0x28
 80263fc:	fb93 f3f1 	sdiv	r3, r3, r1
 8026400:	9309      	str	r3, [sp, #36]	; 0x24
 8026402:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8026406:	4630      	mov	r0, r6
 8026408:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 802640c:	930b      	str	r3, [sp, #44]	; 0x2c
 802640e:	f894 7044 	ldrb.w	r7, [r4, #68]	; 0x44
 8026412:	f7ea fc87 	bl	8010d24 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026416:	f10d 09a8 	add.w	r9, sp, #168	; 0xa8
 802641a:	f04f 0a02 	mov.w	sl, #2
 802641e:	f849 0d74 	str.w	r0, [r9, #-116]!
 8026422:	a80b      	add	r0, sp, #44	; 0x2c
 8026424:	4649      	mov	r1, r9
 8026426:	f7ea fb45 	bl	8010ab4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802642a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 802642c:	fb90 f0fa 	sdiv	r0, r0, sl
 8026430:	eb00 0b03 	add.w	fp, r0, r3
 8026434:	4630      	mov	r0, r6
 8026436:	f7ff fcc7 	bl	8025dc8 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802643a:	f10d 08a8 	add.w	r8, sp, #168	; 0xa8
 802643e:	017f      	lsls	r7, r7, #5
 8026440:	f848 0d78 	str.w	r0, [r8, #-120]!
 8026444:	a80b      	add	r0, sp, #44	; 0x2c
 8026446:	4641      	mov	r1, r8
 8026448:	f7ea fb34 	bl	8010ab4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802644c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 802644e:	fb90 f0fa 	sdiv	r0, r0, sl
 8026452:	4659      	mov	r1, fp
 8026454:	1a12      	subs	r2, r2, r0
 8026456:	a80e      	add	r0, sp, #56	; 0x38
 8026458:	f7ff fbf2 	bl	8025c40 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 802645c:	f106 0a20 	add.w	sl, r6, #32
 8026460:	bb67      	cbnz	r7, 80264bc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x234>
 8026462:	46b3      	mov	fp, r6
 8026464:	45aa      	cmp	sl, r5
 8026466:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8026468:	dc33      	bgt.n	80264d2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x24a>
 802646a:	9909      	ldr	r1, [sp, #36]	; 0x24
 802646c:	4650      	mov	r0, sl
 802646e:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 8026472:	920b      	str	r2, [sp, #44]	; 0x2c
 8026474:	f7ea fc56 	bl	8010d24 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026478:	4641      	mov	r1, r8
 802647a:	900c      	str	r0, [sp, #48]	; 0x30
 802647c:	a80b      	add	r0, sp, #44	; 0x2c
 802647e:	f7ea fb19 	bl	8010ab4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026482:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8026484:	2302      	movs	r3, #2
 8026486:	fb90 f0f3 	sdiv	r0, r0, r3
 802648a:	eb00 0b02 	add.w	fp, r0, r2
 802648e:	4650      	mov	r0, sl
 8026490:	f7ff fc9a 	bl	8025dc8 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026494:	4649      	mov	r1, r9
 8026496:	900d      	str	r0, [sp, #52]	; 0x34
 8026498:	a80b      	add	r0, sp, #44	; 0x2c
 802649a:	f7ea fb0b 	bl	8010ab4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802649e:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80264a0:	2302      	movs	r3, #2
 80264a2:	4659      	mov	r1, fp
 80264a4:	fb90 f0f3 	sdiv	r0, r0, r3
 80264a8:	1a12      	subs	r2, r2, r0
 80264aa:	a80e      	add	r0, sp, #56	; 0x38
 80264ac:	46d3      	mov	fp, sl
 80264ae:	f7ff fc14 	bl	8025cda <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80264b2:	44ba      	add	sl, r7
 80264b4:	e7d6      	b.n	8026464 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1dc>
 80264b6:	fb93 f3f2 	sdiv	r3, r3, r2
 80264ba:	e768      	b.n	802638e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x106>
 80264bc:	fb9a f2f7 	sdiv	r2, sl, r7
 80264c0:	fb07 a212 	mls	r2, r7, r2, sl
 80264c4:	1aba      	subs	r2, r7, r2
 80264c6:	fb92 f1f7 	sdiv	r1, r2, r7
 80264ca:	fb07 2211 	mls	r2, r7, r1, r2
 80264ce:	4492      	add	sl, r2
 80264d0:	e7c7      	b.n	8026462 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1da>
 80264d2:	45ab      	cmp	fp, r5
 80264d4:	da23      	bge.n	802651e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x296>
 80264d6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80264d8:	4628      	mov	r0, r5
 80264da:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 80264de:	920b      	str	r2, [sp, #44]	; 0x2c
 80264e0:	f7ea fc20 	bl	8010d24 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80264e4:	4641      	mov	r1, r8
 80264e6:	900c      	str	r0, [sp, #48]	; 0x30
 80264e8:	a80b      	add	r0, sp, #44	; 0x2c
 80264ea:	f7ea fae3 	bl	8010ab4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80264ee:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80264f0:	f04f 0a02 	mov.w	sl, #2
 80264f4:	fb90 f0fa 	sdiv	r0, r0, sl
 80264f8:	4403      	add	r3, r0
 80264fa:	4628      	mov	r0, r5
 80264fc:	9301      	str	r3, [sp, #4]
 80264fe:	f7ff fc63 	bl	8025dc8 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026502:	4649      	mov	r1, r9
 8026504:	900d      	str	r0, [sp, #52]	; 0x34
 8026506:	a80b      	add	r0, sp, #44	; 0x2c
 8026508:	f7ea fad4 	bl	8010ab4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802650c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 802650e:	9b01      	ldr	r3, [sp, #4]
 8026510:	fb90 f0fa 	sdiv	r0, r0, sl
 8026514:	4619      	mov	r1, r3
 8026516:	1a12      	subs	r2, r2, r0
 8026518:	a80e      	add	r0, sp, #56	; 0x38
 802651a:	f7ff fbde 	bl	8025cda <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802651e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8026520:	b99b      	cbnz	r3, 802654a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c2>
 8026522:	1bad      	subs	r5, r5, r6
 8026524:	f5b5 5f34 	cmp.w	r5, #11520	; 0x2d00
 8026528:	da04      	bge.n	8026534 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 802652a:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	; 0x2c
 802652e:	a80e      	add	r0, sp, #56	; 0x38
 8026530:	f7ff fbd3 	bl	8025cda <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8026534:	21ff      	movs	r1, #255	; 0xff
 8026536:	a80e      	add	r0, sp, #56	; 0x38
 8026538:	f7ff fabe 	bl	8025ab8 <_ZN8touchgfx6Canvas6renderEh>
 802653c:	4604      	mov	r4, r0
 802653e:	4b8a      	ldr	r3, [pc, #552]	; (8026768 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4e0>)
 8026540:	930e      	str	r3, [sp, #56]	; 0x38
 8026542:	a816      	add	r0, sp, #88	; 0x58
 8026544:	f7eb ff22 	bl	801238c <_ZN8touchgfx7OutlineD1Ev>
 8026548:	e716      	b.n	8026378 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf0>
 802654a:	e9dd 2317 	ldrd	r2, r3, [sp, #92]	; 0x5c
 802654e:	429a      	cmp	r2, r3
 8026550:	f0c0 8107 	bcc.w	8026762 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4da>
 8026554:	1bab      	subs	r3, r5, r6
 8026556:	f894 a045 	ldrb.w	sl, [r4, #69]	; 0x45
 802655a:	9301      	str	r3, [sp, #4]
 802655c:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8026560:	ea4f 1a4a 	mov.w	sl, sl, lsl #5
 8026564:	da43      	bge.n	80265ee <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 8026566:	4628      	mov	r0, r5
 8026568:	f7ea fbdc 	bl	8010d24 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802656c:	4649      	mov	r1, r9
 802656e:	900d      	str	r0, [sp, #52]	; 0x34
 8026570:	a809      	add	r0, sp, #36	; 0x24
 8026572:	f7ea fa9f 	bl	8010ab4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026576:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8026578:	18c3      	adds	r3, r0, r3
 802657a:	4628      	mov	r0, r5
 802657c:	9303      	str	r3, [sp, #12]
 802657e:	f7ff fc23 	bl	8025dc8 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026582:	4649      	mov	r1, r9
 8026584:	900d      	str	r0, [sp, #52]	; 0x34
 8026586:	a809      	add	r0, sp, #36	; 0x24
 8026588:	f7ea fa94 	bl	8010ab4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802658c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 802658e:	f505 52b4 	add.w	r2, r5, #5760	; 0x1680
 8026592:	1a1b      	subs	r3, r3, r0
 8026594:	9302      	str	r3, [sp, #8]
 8026596:	9204      	str	r2, [sp, #16]
 8026598:	eb0a 0305 	add.w	r3, sl, r5
 802659c:	9a04      	ldr	r2, [sp, #16]
 802659e:	4293      	cmp	r3, r2
 80265a0:	da25      	bge.n	80265ee <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 80265a2:	4618      	mov	r0, r3
 80265a4:	9306      	str	r3, [sp, #24]
 80265a6:	f7ea fbbd 	bl	8010d24 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80265aa:	4649      	mov	r1, r9
 80265ac:	900d      	str	r0, [sp, #52]	; 0x34
 80265ae:	a80a      	add	r0, sp, #40	; 0x28
 80265b0:	f7ea fa80 	bl	8010ab4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80265b4:	9b03      	ldr	r3, [sp, #12]
 80265b6:	2202      	movs	r2, #2
 80265b8:	fb90 f0f2 	sdiv	r0, r0, r2
 80265bc:	18c3      	adds	r3, r0, r3
 80265be:	9305      	str	r3, [sp, #20]
 80265c0:	9b06      	ldr	r3, [sp, #24]
 80265c2:	9207      	str	r2, [sp, #28]
 80265c4:	4618      	mov	r0, r3
 80265c6:	f7ff fbff 	bl	8025dc8 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80265ca:	a92a      	add	r1, sp, #168	; 0xa8
 80265cc:	f841 0d78 	str.w	r0, [r1, #-120]!
 80265d0:	a80a      	add	r0, sp, #40	; 0x28
 80265d2:	f7ea fa6f 	bl	8010ab4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80265d6:	9b02      	ldr	r3, [sp, #8]
 80265d8:	9a07      	ldr	r2, [sp, #28]
 80265da:	9905      	ldr	r1, [sp, #20]
 80265dc:	fb90 f2f2 	sdiv	r2, r0, r2
 80265e0:	a80e      	add	r0, sp, #56	; 0x38
 80265e2:	1a9a      	subs	r2, r3, r2
 80265e4:	f7ff fb79 	bl	8025cda <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80265e8:	9b06      	ldr	r3, [sp, #24]
 80265ea:	4453      	add	r3, sl
 80265ec:	e7d6      	b.n	802659c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x314>
 80265ee:	45ab      	cmp	fp, r5
 80265f0:	da25      	bge.n	802663e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3b6>
 80265f2:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80265f6:	4628      	mov	r0, r5
 80265f8:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 80265fc:	930b      	str	r3, [sp, #44]	; 0x2c
 80265fe:	f7ea fb91 	bl	8010d24 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026602:	4641      	mov	r1, r8
 8026604:	900c      	str	r0, [sp, #48]	; 0x30
 8026606:	a80b      	add	r0, sp, #44	; 0x2c
 8026608:	f7ea fa54 	bl	8010ab4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802660c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 802660e:	2202      	movs	r2, #2
 8026610:	fb90 f0f2 	sdiv	r0, r0, r2
 8026614:	eb00 0903 	add.w	r9, r0, r3
 8026618:	4628      	mov	r0, r5
 802661a:	9202      	str	r2, [sp, #8]
 802661c:	f7ff fbd4 	bl	8025dc8 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026620:	a92a      	add	r1, sp, #168	; 0xa8
 8026622:	f841 0d74 	str.w	r0, [r1, #-116]!
 8026626:	a80b      	add	r0, sp, #44	; 0x2c
 8026628:	f7ea fa44 	bl	8010ab4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802662c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 802662e:	9a02      	ldr	r2, [sp, #8]
 8026630:	fb90 f2f2 	sdiv	r2, r0, r2
 8026634:	4649      	mov	r1, r9
 8026636:	1a9a      	subs	r2, r3, r2
 8026638:	a80e      	add	r0, sp, #56	; 0x38
 802663a:	f7ff fb4e 	bl	8025cda <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802663e:	46d9      	mov	r9, fp
 8026640:	2502      	movs	r5, #2
 8026642:	45b1      	cmp	r9, r6
 8026644:	db25      	blt.n	8026692 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x40a>
 8026646:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 802664a:	4648      	mov	r0, r9
 802664c:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8026650:	930b      	str	r3, [sp, #44]	; 0x2c
 8026652:	f7ea fb67 	bl	8010d24 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026656:	4641      	mov	r1, r8
 8026658:	900c      	str	r0, [sp, #48]	; 0x30
 802665a:	a80b      	add	r0, sp, #44	; 0x2c
 802665c:	f7ea fa2a 	bl	8010ab4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026660:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8026662:	fb90 f0f5 	sdiv	r0, r0, r5
 8026666:	eb00 0b03 	add.w	fp, r0, r3
 802666a:	4648      	mov	r0, r9
 802666c:	f7ff fbac 	bl	8025dc8 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026670:	a90d      	add	r1, sp, #52	; 0x34
 8026672:	900d      	str	r0, [sp, #52]	; 0x34
 8026674:	a80b      	add	r0, sp, #44	; 0x2c
 8026676:	f7ea fa1d 	bl	8010ab4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802667a:	6b22      	ldr	r2, [r4, #48]	; 0x30
 802667c:	fb90 f0f5 	sdiv	r0, r0, r5
 8026680:	4659      	mov	r1, fp
 8026682:	1a12      	subs	r2, r2, r0
 8026684:	a80e      	add	r0, sp, #56	; 0x38
 8026686:	46cb      	mov	fp, r9
 8026688:	f7ff fb27 	bl	8025cda <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802668c:	eba9 0907 	sub.w	r9, r9, r7
 8026690:	e7d7      	b.n	8026642 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3ba>
 8026692:	455e      	cmp	r6, fp
 8026694:	da22      	bge.n	80266dc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x454>
 8026696:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 802669a:	4630      	mov	r0, r6
 802669c:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 80266a0:	930b      	str	r3, [sp, #44]	; 0x2c
 80266a2:	f7ea fb3f 	bl	8010d24 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80266a6:	4641      	mov	r1, r8
 80266a8:	900c      	str	r0, [sp, #48]	; 0x30
 80266aa:	a80b      	add	r0, sp, #44	; 0x2c
 80266ac:	f7ea fa02 	bl	8010ab4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80266b0:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 80266b2:	2502      	movs	r5, #2
 80266b4:	fb90 f0f5 	sdiv	r0, r0, r5
 80266b8:	4407      	add	r7, r0
 80266ba:	4630      	mov	r0, r6
 80266bc:	f7ff fb84 	bl	8025dc8 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80266c0:	a92a      	add	r1, sp, #168	; 0xa8
 80266c2:	f841 0d74 	str.w	r0, [r1, #-116]!
 80266c6:	a80b      	add	r0, sp, #44	; 0x2c
 80266c8:	f7ea f9f4 	bl	8010ab4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80266cc:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80266ce:	fb90 f0f5 	sdiv	r0, r0, r5
 80266d2:	4639      	mov	r1, r7
 80266d4:	1a12      	subs	r2, r2, r0
 80266d6:	a80e      	add	r0, sp, #56	; 0x38
 80266d8:	f7ff faff 	bl	8025cda <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80266dc:	9b01      	ldr	r3, [sp, #4]
 80266de:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 80266e2:	f6bf af27 	bge.w	8026534 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 80266e6:	4630      	mov	r0, r6
 80266e8:	f7ea fb1c 	bl	8010d24 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80266ec:	ad2a      	add	r5, sp, #168	; 0xa8
 80266ee:	f04f 0b02 	mov.w	fp, #2
 80266f2:	f845 0d74 	str.w	r0, [r5, #-116]!
 80266f6:	a809      	add	r0, sp, #36	; 0x24
 80266f8:	4629      	mov	r1, r5
 80266fa:	f7ea f9db 	bl	8010ab4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80266fe:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8026700:	eb00 0903 	add.w	r9, r0, r3
 8026704:	4630      	mov	r0, r6
 8026706:	f7ff fb5f 	bl	8025dc8 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802670a:	4629      	mov	r1, r5
 802670c:	900d      	str	r0, [sp, #52]	; 0x34
 802670e:	a809      	add	r0, sp, #36	; 0x24
 8026710:	f7ea f9d0 	bl	8010ab4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026714:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8026716:	f5a6 54b4 	sub.w	r4, r6, #5760	; 0x1680
 802671a:	eba3 0800 	sub.w	r8, r3, r0
 802671e:	4454      	add	r4, sl
 8026720:	42a6      	cmp	r6, r4
 8026722:	f77f af07 	ble.w	8026534 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8026726:	4620      	mov	r0, r4
 8026728:	f7ea fafc 	bl	8010d24 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802672c:	4629      	mov	r1, r5
 802672e:	900d      	str	r0, [sp, #52]	; 0x34
 8026730:	a80a      	add	r0, sp, #40	; 0x28
 8026732:	f7ea f9bf 	bl	8010ab4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026736:	fb90 f0fb 	sdiv	r0, r0, fp
 802673a:	eb00 0709 	add.w	r7, r0, r9
 802673e:	4620      	mov	r0, r4
 8026740:	f7ff fb42 	bl	8025dc8 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026744:	a90c      	add	r1, sp, #48	; 0x30
 8026746:	900c      	str	r0, [sp, #48]	; 0x30
 8026748:	a80a      	add	r0, sp, #40	; 0x28
 802674a:	f7ea f9b3 	bl	8010ab4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802674e:	4639      	mov	r1, r7
 8026750:	fb90 f2fb 	sdiv	r2, r0, fp
 8026754:	a80e      	add	r0, sp, #56	; 0x38
 8026756:	eba8 0202 	sub.w	r2, r8, r2
 802675a:	f7ff fabe 	bl	8025cda <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802675e:	4454      	add	r4, sl
 8026760:	e7de      	b.n	8026720 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x498>
 8026762:	2400      	movs	r4, #0
 8026764:	e6eb      	b.n	802653e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2b6>
 8026766:	bf00      	nop
 8026768:	0802cdf0 	.word	0x0802cdf0

0802676c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 802676c:	b570      	push	{r4, r5, r6, lr}
 802676e:	790b      	ldrb	r3, [r1, #4]
 8026770:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 8026774:	2b00      	cmp	r3, #0
 8026776:	bf0c      	ite	eq
 8026778:	2301      	moveq	r3, #1
 802677a:	2300      	movne	r3, #0
 802677c:	4604      	mov	r4, r0
 802677e:	460e      	mov	r6, r1
 8026780:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8026784:	d109      	bne.n	802679a <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 8026786:	b14d      	cbz	r5, 802679c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 8026788:	7933      	ldrb	r3, [r6, #4]
 802678a:	2b01      	cmp	r3, #1
 802678c:	d10c      	bne.n	80267a8 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 802678e:	6823      	ldr	r3, [r4, #0]
 8026790:	4620      	mov	r0, r4
 8026792:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8026794:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8026798:	4718      	bx	r3
 802679a:	b12d      	cbz	r5, 80267a8 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 802679c:	6823      	ldr	r3, [r4, #0]
 802679e:	4620      	mov	r0, r4
 80267a0:	695b      	ldr	r3, [r3, #20]
 80267a2:	4798      	blx	r3
 80267a4:	2d00      	cmp	r5, #0
 80267a6:	d1ef      	bne.n	8026788 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 80267a8:	bd70      	pop	{r4, r5, r6, pc}

080267aa <_ZN8touchgfx13TextureMapper21setRenderingAlgorithmENS0_18RenderingAlgorithmE>:
 80267aa:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 80267ae:	4770      	bx	lr

080267b0 <_ZNK8touchgfx13TextureMapper21getRenderingAlgorithmEv>:
 80267b0:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
 80267b4:	4770      	bx	lr

080267b6 <_ZN8touchgfx13TextureMapper9setXAngleEf>:
 80267b6:	6802      	ldr	r2, [r0, #0]
 80267b8:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 80267bc:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 80267be:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 80267c2:	4710      	bx	r2

080267c4 <_ZN8touchgfx13TextureMapper9setYAngleEf>:
 80267c4:	6802      	ldr	r2, [r0, #0]
 80267c6:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 80267ca:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 80267cc:	eef0 0a40 	vmov.f32	s1, s0
 80267d0:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 80267d4:	4710      	bx	r2

080267d6 <_ZN8touchgfx13TextureMapper9setZAngleEf>:
 80267d6:	6802      	ldr	r2, [r0, #0]
 80267d8:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 80267dc:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 80267de:	eeb0 1a40 	vmov.f32	s2, s0
 80267e2:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 80267e6:	4710      	bx	r2

080267e8 <_ZN8touchgfx13TextureMapper12updateXAngleEf>:
 80267e8:	6802      	ldr	r2, [r0, #0]
 80267ea:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 80267ee:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 80267f0:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 80267f4:	4710      	bx	r2

080267f6 <_ZN8touchgfx13TextureMapper12updateYAngleEf>:
 80267f6:	6802      	ldr	r2, [r0, #0]
 80267f8:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 80267fc:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 80267fe:	eef0 0a40 	vmov.f32	s1, s0
 8026802:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8026806:	4710      	bx	r2

08026808 <_ZN8touchgfx13TextureMapper12updateZAngleEf>:
 8026808:	6802      	ldr	r2, [r0, #0]
 802680a:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 802680e:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8026810:	eeb0 1a40 	vmov.f32	s2, s0
 8026814:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8026818:	4710      	bx	r2

0802681a <_ZNK8touchgfx13TextureMapper9getXAngleEv>:
 802681a:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 802681e:	4770      	bx	lr

08026820 <_ZNK8touchgfx13TextureMapper9getYAngleEv>:
 8026820:	ed90 0a0e 	vldr	s0, [r0, #56]	; 0x38
 8026824:	4770      	bx	lr

08026826 <_ZNK8touchgfx13TextureMapper9getZAngleEv>:
 8026826:	ed90 0a0f 	vldr	s0, [r0, #60]	; 0x3c
 802682a:	4770      	bx	lr

0802682c <_ZNK8touchgfx13TextureMapper8getScaleEv>:
 802682c:	ed90 0a10 	vldr	s0, [r0, #64]	; 0x40
 8026830:	4770      	bx	lr

08026832 <_ZNK8touchgfx13TextureMapper9getOrigoXEv>:
 8026832:	ed90 0a11 	vldr	s0, [r0, #68]	; 0x44
 8026836:	4770      	bx	lr

08026838 <_ZNK8touchgfx13TextureMapper9getOrigoYEv>:
 8026838:	ed90 0a12 	vldr	s0, [r0, #72]	; 0x48
 802683c:	4770      	bx	lr

0802683e <_ZNK8touchgfx13TextureMapper9getOrigoZEv>:
 802683e:	ed90 0a13 	vldr	s0, [r0, #76]	; 0x4c
 8026842:	4770      	bx	lr

08026844 <_ZNK8touchgfx13TextureMapper10getCameraXEv>:
 8026844:	ed90 0a14 	vldr	s0, [r0, #80]	; 0x50
 8026848:	4770      	bx	lr

0802684a <_ZNK8touchgfx13TextureMapper10getCameraYEv>:
 802684a:	ed90 0a15 	vldr	s0, [r0, #84]	; 0x54
 802684e:	4770      	bx	lr

08026850 <_ZNK8touchgfx13TextureMapper17getCameraDistanceEv>:
 8026850:	ed90 0a16 	vldr	s0, [r0, #88]	; 0x58
 8026854:	4770      	bx	lr

08026856 <_ZN8touchgfx13TextureMapper17setBitmapPositionEii>:
 8026856:	ee07 2a90 	vmov	s15, r2
 802685a:	6803      	ldr	r3, [r0, #0]
 802685c:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 8026860:	ee07 1a90 	vmov	s15, r1
 8026864:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8026868:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 802686c:	4718      	bx	r3

0802686e <_ZNK8touchgfx13TextureMapper18getBitmapPositionXEv>:
 802686e:	ed90 0a0b 	vldr	s0, [r0, #44]	; 0x2c
 8026872:	4770      	bx	lr

08026874 <_ZNK8touchgfx13TextureMapper18getBitmapPositionYEv>:
 8026874:	ed90 0a0c 	vldr	s0, [r0, #48]	; 0x30
 8026878:	4770      	bx	lr

0802687a <_ZNK8touchgfx13TextureMapper5getX0Ev>:
 802687a:	ed90 0a17 	vldr	s0, [r0, #92]	; 0x5c
 802687e:	4770      	bx	lr

08026880 <_ZNK8touchgfx13TextureMapper5getX1Ev>:
 8026880:	ed90 0a1a 	vldr	s0, [r0, #104]	; 0x68
 8026884:	4770      	bx	lr

08026886 <_ZNK8touchgfx13TextureMapper5getX2Ev>:
 8026886:	ed90 0a1d 	vldr	s0, [r0, #116]	; 0x74
 802688a:	4770      	bx	lr

0802688c <_ZNK8touchgfx13TextureMapper5getX3Ev>:
 802688c:	ed90 0a20 	vldr	s0, [r0, #128]	; 0x80
 8026890:	4770      	bx	lr

08026892 <_ZNK8touchgfx13TextureMapper5getY0Ev>:
 8026892:	ed90 0a18 	vldr	s0, [r0, #96]	; 0x60
 8026896:	4770      	bx	lr

08026898 <_ZNK8touchgfx13TextureMapper5getY1Ev>:
 8026898:	ed90 0a1b 	vldr	s0, [r0, #108]	; 0x6c
 802689c:	4770      	bx	lr

0802689e <_ZNK8touchgfx13TextureMapper5getY2Ev>:
 802689e:	ed90 0a1e 	vldr	s0, [r0, #120]	; 0x78
 80268a2:	4770      	bx	lr

080268a4 <_ZNK8touchgfx13TextureMapper5getY3Ev>:
 80268a4:	ed90 0a21 	vldr	s0, [r0, #132]	; 0x84
 80268a8:	4770      	bx	lr

080268aa <_ZNK8touchgfx13TextureMapper5getZ0Ev>:
 80268aa:	ed90 0a19 	vldr	s0, [r0, #100]	; 0x64
 80268ae:	4770      	bx	lr

080268b0 <_ZNK8touchgfx13TextureMapper5getZ1Ev>:
 80268b0:	ed90 0a1c 	vldr	s0, [r0, #112]	; 0x70
 80268b4:	4770      	bx	lr

080268b6 <_ZNK8touchgfx13TextureMapper5getZ2Ev>:
 80268b6:	ed90 0a1f 	vldr	s0, [r0, #124]	; 0x7c
 80268ba:	4770      	bx	lr

080268bc <_ZNK8touchgfx13TextureMapper5getZ3Ev>:
 80268bc:	ed90 0a22 	vldr	s0, [r0, #136]	; 0x88
 80268c0:	4770      	bx	lr

080268c2 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>:
 80268c2:	b510      	push	{r4, lr}
 80268c4:	ed2d 8b04 	vpush	{d8-d9}
 80268c8:	6803      	ldr	r3, [r0, #0]
 80268ca:	4604      	mov	r4, r0
 80268cc:	699b      	ldr	r3, [r3, #24]
 80268ce:	eeb0 8a40 	vmov.f32	s16, s0
 80268d2:	eef0 8a60 	vmov.f32	s17, s1
 80268d6:	eeb0 9a41 	vmov.f32	s18, s2
 80268da:	4798      	blx	r3
 80268dc:	6823      	ldr	r3, [r4, #0]
 80268de:	4620      	mov	r0, r4
 80268e0:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80268e2:	eeb0 1a49 	vmov.f32	s2, s18
 80268e6:	eef0 0a68 	vmov.f32	s1, s17
 80268ea:	eeb0 0a48 	vmov.f32	s0, s16
 80268ee:	4798      	blx	r3
 80268f0:	ecbd 8b04 	vpop	{d8-d9}
 80268f4:	6823      	ldr	r3, [r4, #0]
 80268f6:	4620      	mov	r0, r4
 80268f8:	699b      	ldr	r3, [r3, #24]
 80268fa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80268fe:	4718      	bx	r3

08026900 <_ZN8touchgfx13TextureMapper11updateScaleEf>:
 8026900:	b510      	push	{r4, lr}
 8026902:	ed2d 8b02 	vpush	{d8}
 8026906:	6803      	ldr	r3, [r0, #0]
 8026908:	4604      	mov	r4, r0
 802690a:	699b      	ldr	r3, [r3, #24]
 802690c:	eeb0 8a40 	vmov.f32	s16, s0
 8026910:	4798      	blx	r3
 8026912:	6823      	ldr	r3, [r4, #0]
 8026914:	4620      	mov	r0, r4
 8026916:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 802691a:	eeb0 0a48 	vmov.f32	s0, s16
 802691e:	4798      	blx	r3
 8026920:	ecbd 8b02 	vpop	{d8}
 8026924:	6823      	ldr	r3, [r4, #0]
 8026926:	4620      	mov	r0, r4
 8026928:	699b      	ldr	r3, [r3, #24]
 802692a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802692e:	4718      	bx	r3

08026930 <_ZNK8touchgfx13TextureMapper12getSolidRectEv>:
 8026930:	2200      	movs	r2, #0
 8026932:	8002      	strh	r2, [r0, #0]
 8026934:	8042      	strh	r2, [r0, #2]
 8026936:	8082      	strh	r2, [r0, #4]
 8026938:	80c2      	strh	r2, [r0, #6]
 802693a:	4770      	bx	lr

0802693c <_ZN8touchgfx13TextureMapperD1Ev>:
 802693c:	4770      	bx	lr

0802693e <_ZN8touchgfx13TextureMapperD0Ev>:
 802693e:	b510      	push	{r4, lr}
 8026940:	2190      	movs	r1, #144	; 0x90
 8026942:	4604      	mov	r4, r0
 8026944:	f000 fe1b 	bl	802757e <_ZdlPvj>
 8026948:	4620      	mov	r0, r4
 802694a:	bd10      	pop	{r4, pc}

0802694c <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>:
 802694c:	b538      	push	{r3, r4, r5, lr}
 802694e:	2500      	movs	r5, #0
 8026950:	e9c0 5505 	strd	r5, r5, [r0, #20]
 8026954:	2301      	movs	r3, #1
 8026956:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
 802695a:	4b1f      	ldr	r3, [pc, #124]	; (80269d8 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x8c>)
 802695c:	8085      	strh	r5, [r0, #4]
 802695e:	80c5      	strh	r5, [r0, #6]
 8026960:	8105      	strh	r5, [r0, #8]
 8026962:	8145      	strh	r5, [r0, #10]
 8026964:	8185      	strh	r5, [r0, #12]
 8026966:	81c5      	strh	r5, [r0, #14]
 8026968:	8205      	strh	r5, [r0, #16]
 802696a:	8245      	strh	r5, [r0, #18]
 802696c:	61c5      	str	r5, [r0, #28]
 802696e:	8405      	strh	r5, [r0, #32]
 8026970:	8445      	strh	r5, [r0, #34]	; 0x22
 8026972:	f880 5024 	strb.w	r5, [r0, #36]	; 0x24
 8026976:	6003      	str	r3, [r0, #0]
 8026978:	880b      	ldrh	r3, [r1, #0]
 802697a:	84c3      	strh	r3, [r0, #38]	; 0x26
 802697c:	23ff      	movs	r3, #255	; 0xff
 802697e:	4604      	mov	r4, r0
 8026980:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8026984:	f7eb fb93 	bl	80120ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8026988:	4b14      	ldr	r3, [pc, #80]	; (80269dc <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x90>)
 802698a:	6023      	str	r3, [r4, #0]
 802698c:	2300      	movs	r3, #0
 802698e:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 8026992:	4913      	ldr	r1, [pc, #76]	; (80269e0 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x94>)
 8026994:	62e3      	str	r3, [r4, #44]	; 0x2c
 8026996:	6323      	str	r3, [r4, #48]	; 0x30
 8026998:	6363      	str	r3, [r4, #52]	; 0x34
 802699a:	63a3      	str	r3, [r4, #56]	; 0x38
 802699c:	63e3      	str	r3, [r4, #60]	; 0x3c
 802699e:	6463      	str	r3, [r4, #68]	; 0x44
 80269a0:	64a3      	str	r3, [r4, #72]	; 0x48
 80269a2:	6523      	str	r3, [r4, #80]	; 0x50
 80269a4:	6563      	str	r3, [r4, #84]	; 0x54
 80269a6:	65e3      	str	r3, [r4, #92]	; 0x5c
 80269a8:	6623      	str	r3, [r4, #96]	; 0x60
 80269aa:	66a3      	str	r3, [r4, #104]	; 0x68
 80269ac:	66e3      	str	r3, [r4, #108]	; 0x6c
 80269ae:	6763      	str	r3, [r4, #116]	; 0x74
 80269b0:	67a3      	str	r3, [r4, #120]	; 0x78
 80269b2:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
 80269b6:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 80269ba:	230c      	movs	r3, #12
 80269bc:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 80269c0:	6422      	str	r2, [r4, #64]	; 0x40
 80269c2:	64e1      	str	r1, [r4, #76]	; 0x4c
 80269c4:	65a1      	str	r1, [r4, #88]	; 0x58
 80269c6:	6662      	str	r2, [r4, #100]	; 0x64
 80269c8:	6722      	str	r2, [r4, #112]	; 0x70
 80269ca:	67e2      	str	r2, [r4, #124]	; 0x7c
 80269cc:	f8c4 2088 	str.w	r2, [r4, #136]	; 0x88
 80269d0:	f8a4 308c 	strh.w	r3, [r4, #140]	; 0x8c
 80269d4:	4620      	mov	r0, r4
 80269d6:	bd38      	pop	{r3, r4, r5, pc}
 80269d8:	0802c898 	.word	0x0802c898
 80269dc:	0802ce7c 	.word	0x0802ce7c
 80269e0:	447a0000 	.word	0x447a0000

080269e4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>:
 80269e4:	b570      	push	{r4, r5, r6, lr}
 80269e6:	ed2d 8b04 	vpush	{d8-d9}
 80269ea:	f5ad 7d50 	sub.w	sp, sp, #832	; 0x340
 80269ee:	add0      	add	r5, sp, #832	; 0x340
 80269f0:	8cc3      	ldrh	r3, [r0, #38]	; 0x26
 80269f2:	f825 3d40 	strh.w	r3, [r5, #-64]!
 80269f6:	4604      	mov	r4, r0
 80269f8:	4628      	mov	r0, r5
 80269fa:	f7f1 fa7f 	bl	8017efc <_ZNK8touchgfx6Bitmap8getWidthEv>
 80269fe:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 8026a00:	f8ad 3300 	strh.w	r3, [sp, #768]	; 0x300
 8026a04:	4606      	mov	r6, r0
 8026a06:	4628      	mov	r0, r5
 8026a08:	f7f1 faac 	bl	8017f64 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8026a0c:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8026a10:	ed94 6a0b 	vldr	s12, [r4, #44]	; 0x2c
 8026a14:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8026a16:	ed94 9a11 	vldr	s18, [r4, #68]	; 0x44
 8026a1a:	9312      	str	r3, [sp, #72]	; 0x48
 8026a1c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8026a20:	1c72      	adds	r2, r6, #1
 8026a22:	3001      	adds	r0, #1
 8026a24:	ee76 5ac7 	vsub.f32	s11, s13, s14
 8026a28:	ee07 2a90 	vmov	s15, r2
 8026a2c:	ee06 0a90 	vmov	s13, r0
 8026a30:	ee36 6a47 	vsub.f32	s12, s12, s14
 8026a34:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8026a38:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8026a3c:	ee77 7a86 	vadd.f32	s15, s15, s12
 8026a40:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8026a44:	9316      	str	r3, [sp, #88]	; 0x58
 8026a46:	931a      	str	r3, [sp, #104]	; 0x68
 8026a48:	931e      	str	r3, [sp, #120]	; 0x78
 8026a4a:	2300      	movs	r3, #0
 8026a4c:	9320      	str	r3, [sp, #128]	; 0x80
 8026a4e:	9321      	str	r3, [sp, #132]	; 0x84
 8026a50:	9322      	str	r3, [sp, #136]	; 0x88
 8026a52:	9324      	str	r3, [sp, #144]	; 0x90
 8026a54:	9325      	str	r3, [sp, #148]	; 0x94
 8026a56:	9326      	str	r3, [sp, #152]	; 0x98
 8026a58:	9328      	str	r3, [sp, #160]	; 0xa0
 8026a5a:	9329      	str	r3, [sp, #164]	; 0xa4
 8026a5c:	932a      	str	r3, [sp, #168]	; 0xa8
 8026a5e:	932c      	str	r3, [sp, #176]	; 0xb0
 8026a60:	932d      	str	r3, [sp, #180]	; 0xb4
 8026a62:	932e      	str	r3, [sp, #184]	; 0xb8
 8026a64:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8026a68:	edcd 5a11 	vstr	s11, [sp, #68]	; 0x44
 8026a6c:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 8026a70:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 8026a74:	edcd 5a15 	vstr	s11, [sp, #84]	; 0x54
 8026a78:	ed8d 7a17 	vstr	s14, [sp, #92]	; 0x5c
 8026a7c:	edcd 7a18 	vstr	s15, [sp, #96]	; 0x60
 8026a80:	edcd 6a19 	vstr	s13, [sp, #100]	; 0x64
 8026a84:	ed8d 7a1b 	vstr	s14, [sp, #108]	; 0x6c
 8026a88:	ed8d 6a1c 	vstr	s12, [sp, #112]	; 0x70
 8026a8c:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 8026a90:	ed8d 7a1f 	vstr	s14, [sp, #124]	; 0x7c
 8026a94:	a830      	add	r0, sp, #192	; 0xc0
 8026a96:	edd4 8a12 	vldr	s17, [r4, #72]	; 0x48
 8026a9a:	ed94 8a13 	vldr	s16, [r4, #76]	; 0x4c
 8026a9e:	f000 fc43 	bl	8027328 <_ZN8touchgfx9Matrix4x4C1Ev>
 8026aa2:	eeb1 0a49 	vneg.f32	s0, s18
 8026aa6:	a830      	add	r0, sp, #192	; 0xc0
 8026aa8:	f000 fd12 	bl	80274d0 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8026aac:	eeb1 0a68 	vneg.f32	s0, s17
 8026ab0:	f000 fd1c 	bl	80274ec <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8026ab4:	eeb1 0a48 	vneg.f32	s0, s16
 8026ab8:	f000 fd27 	bl	802750a <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 8026abc:	a840      	add	r0, sp, #256	; 0x100
 8026abe:	f000 fc33 	bl	8027328 <_ZN8touchgfx9Matrix4x4C1Ev>
 8026ac2:	ed94 0a0d 	vldr	s0, [r4, #52]	; 0x34
 8026ac6:	a840      	add	r0, sp, #256	; 0x100
 8026ac8:	f000 fc86 	bl	80273d8 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>
 8026acc:	ed94 0a0e 	vldr	s0, [r4, #56]	; 0x38
 8026ad0:	f000 fcac 	bl	802742c <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>
 8026ad4:	ed94 0a0f 	vldr	s0, [r4, #60]	; 0x3c
 8026ad8:	f000 fcd1 	bl	802747e <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>
 8026adc:	a850      	add	r0, sp, #320	; 0x140
 8026ade:	f000 fc23 	bl	8027328 <_ZN8touchgfx9Matrix4x4C1Ev>
 8026ae2:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8026ae6:	a850      	add	r0, sp, #320	; 0x140
 8026ae8:	f000 fd1e 	bl	8027528 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>
 8026aec:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8026af0:	f000 fd26 	bl	8027540 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>
 8026af4:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8026af8:	f000 fd2f 	bl	802755a <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>
 8026afc:	a860      	add	r0, sp, #384	; 0x180
 8026afe:	f000 fc13 	bl	8027328 <_ZN8touchgfx9Matrix4x4C1Ev>
 8026b02:	eeb0 0a49 	vmov.f32	s0, s18
 8026b06:	a860      	add	r0, sp, #384	; 0x180
 8026b08:	f000 fce2 	bl	80274d0 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8026b0c:	eeb0 0a68 	vmov.f32	s0, s17
 8026b10:	f000 fcec 	bl	80274ec <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8026b14:	eeb0 0a48 	vmov.f32	s0, s16
 8026b18:	f000 fcf7 	bl	802750a <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 8026b1c:	aa50      	add	r2, sp, #320	; 0x140
 8026b1e:	a960      	add	r1, sp, #384	; 0x180
 8026b20:	a8b0      	add	r0, sp, #704	; 0x2c0
 8026b22:	f000 fc1b 	bl	802735c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8026b26:	4628      	mov	r0, r5
 8026b28:	aa40      	add	r2, sp, #256	; 0x100
 8026b2a:	a9b0      	add	r1, sp, #704	; 0x2c0
 8026b2c:	f000 fc16 	bl	802735c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8026b30:	4629      	mov	r1, r5
 8026b32:	aa30      	add	r2, sp, #192	; 0xc0
 8026b34:	a870      	add	r0, sp, #448	; 0x1c0
 8026b36:	f000 fc11 	bl	802735c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8026b3a:	a880      	add	r0, sp, #512	; 0x200
 8026b3c:	f000 fbf4 	bl	8027328 <_ZN8touchgfx9Matrix4x4C1Ev>
 8026b40:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 8026b44:	a880      	add	r0, sp, #512	; 0x200
 8026b46:	eeb1 0a40 	vneg.f32	s0, s0
 8026b4a:	f000 fcc1 	bl	80274d0 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8026b4e:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 8026b52:	a880      	add	r0, sp, #512	; 0x200
 8026b54:	eeb1 0a40 	vneg.f32	s0, s0
 8026b58:	f000 fcc8 	bl	80274ec <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8026b5c:	a890      	add	r0, sp, #576	; 0x240
 8026b5e:	f000 fbe3 	bl	8027328 <_ZN8touchgfx9Matrix4x4C1Ev>
 8026b62:	ed94 0a16 	vldr	s0, [r4, #88]	; 0x58
 8026b66:	a890      	add	r0, sp, #576	; 0x240
 8026b68:	f000 fc26 	bl	80273b8 <_ZN8touchgfx9Matrix4x415setViewDistanceEf>
 8026b6c:	a8a0      	add	r0, sp, #640	; 0x280
 8026b6e:	f000 fbdb 	bl	8027328 <_ZN8touchgfx9Matrix4x4C1Ev>
 8026b72:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 8026b76:	a8a0      	add	r0, sp, #640	; 0x280
 8026b78:	f000 fcaa 	bl	80274d0 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8026b7c:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 8026b80:	f000 fcb4 	bl	80274ec <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8026b84:	aa90      	add	r2, sp, #576	; 0x240
 8026b86:	a9a0      	add	r1, sp, #640	; 0x280
 8026b88:	a8b0      	add	r0, sp, #704	; 0x2c0
 8026b8a:	f000 fbe7 	bl	802735c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8026b8e:	4628      	mov	r0, r5
 8026b90:	aa80      	add	r2, sp, #512	; 0x200
 8026b92:	a9b0      	add	r1, sp, #704	; 0x2c0
 8026b94:	f000 fbe2 	bl	802735c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8026b98:	4629      	mov	r1, r5
 8026b9a:	aa70      	add	r2, sp, #448	; 0x1c0
 8026b9c:	4668      	mov	r0, sp
 8026b9e:	466d      	mov	r5, sp
 8026ba0:	f000 fbdc 	bl	802735c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8026ba4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8026ba6:	ae70      	add	r6, sp, #448	; 0x1c0
 8026ba8:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8026baa:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8026bac:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8026bae:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8026bb0:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8026bb2:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8026bb6:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 8026bba:	2500      	movs	r5, #0
 8026bbc:	0129      	lsls	r1, r5, #4
 8026bbe:	ab20      	add	r3, sp, #128	; 0x80
 8026bc0:	185e      	adds	r6, r3, r1
 8026bc2:	ab10      	add	r3, sp, #64	; 0x40
 8026bc4:	4419      	add	r1, r3
 8026bc6:	a870      	add	r0, sp, #448	; 0x1c0
 8026bc8:	f000 fb7e 	bl	80272c8 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>
 8026bcc:	3501      	adds	r5, #1
 8026bce:	2d04      	cmp	r5, #4
 8026bd0:	ed86 0a00 	vstr	s0, [r6]
 8026bd4:	edc6 0a01 	vstr	s1, [r6, #4]
 8026bd8:	ed86 1a02 	vstr	s2, [r6, #8]
 8026bdc:	edc6 1a03 	vstr	s3, [r6, #12]
 8026be0:	d1ec      	bne.n	8026bbc <_ZN8touchgfx13TextureMapper19applyTransformationEv+0x1d8>
 8026be2:	edd4 7a16 	vldr	s15, [r4, #88]	; 0x58
 8026be6:	eddd 6a20 	vldr	s13, [sp, #128]	; 0x80
 8026bea:	ed9d 7a22 	vldr	s14, [sp, #136]	; 0x88
 8026bee:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8026bf2:	ed84 7a19 	vstr	s14, [r4, #100]	; 0x64
 8026bf6:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8026bfa:	eddd 6a21 	vldr	s13, [sp, #132]	; 0x84
 8026bfe:	ed84 6a17 	vstr	s12, [r4, #92]	; 0x5c
 8026c02:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8026c06:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8026c0a:	eddd 6a24 	vldr	s13, [sp, #144]	; 0x90
 8026c0e:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8026c12:	ed84 6a18 	vstr	s12, [r4, #96]	; 0x60
 8026c16:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8026c1a:	ed84 7a1c 	vstr	s14, [r4, #112]	; 0x70
 8026c1e:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8026c22:	eddd 6a25 	vldr	s13, [sp, #148]	; 0x94
 8026c26:	ed84 6a1a 	vstr	s12, [r4, #104]	; 0x68
 8026c2a:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8026c2e:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8026c32:	eddd 6a28 	vldr	s13, [sp, #160]	; 0xa0
 8026c36:	ed9d 7a2a 	vldr	s14, [sp, #168]	; 0xa8
 8026c3a:	ed84 6a1b 	vstr	s12, [r4, #108]	; 0x6c
 8026c3e:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8026c42:	ed84 7a1f 	vstr	s14, [r4, #124]	; 0x7c
 8026c46:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8026c4a:	eddd 6a29 	vldr	s13, [sp, #164]	; 0xa4
 8026c4e:	ed84 6a1d 	vstr	s12, [r4, #116]	; 0x74
 8026c52:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8026c56:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8026c5a:	eddd 6a2c 	vldr	s13, [sp, #176]	; 0xb0
 8026c5e:	ed9d 7a2e 	vldr	s14, [sp, #184]	; 0xb8
 8026c62:	ed84 6a1e 	vstr	s12, [r4, #120]	; 0x78
 8026c66:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8026c6a:	ed84 7a22 	vstr	s14, [r4, #136]	; 0x88
 8026c6e:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8026c72:	eddd 6a2d 	vldr	s13, [sp, #180]	; 0xb4
 8026c76:	ed84 6a20 	vstr	s12, [r4, #128]	; 0x80
 8026c7a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8026c7e:	eec7 6a87 	vdiv.f32	s13, s15, s14
 8026c82:	edc4 6a21 	vstr	s13, [r4, #132]	; 0x84
 8026c86:	f50d 7d50 	add.w	sp, sp, #832	; 0x340
 8026c8a:	ecbd 8b04 	vpop	{d8-d9}
 8026c8e:	bd70      	pop	{r4, r5, r6, pc}

08026c90 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>:
 8026c90:	b510      	push	{r4, lr}
 8026c92:	4604      	mov	r4, r0
 8026c94:	f7eb fa0b 	bl	80120ae <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8026c98:	4620      	mov	r0, r4
 8026c9a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8026c9e:	f7ff bea1 	b.w	80269e4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08026ca2 <_ZN8touchgfx13TextureMapper9setAnglesEfff>:
 8026ca2:	ed80 0a0d 	vstr	s0, [r0, #52]	; 0x34
 8026ca6:	edc0 0a0e 	vstr	s1, [r0, #56]	; 0x38
 8026caa:	ed80 1a0f 	vstr	s2, [r0, #60]	; 0x3c
 8026cae:	f7ff be99 	b.w	80269e4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08026cb2 <_ZN8touchgfx13TextureMapper8setScaleEf>:
 8026cb2:	ed80 0a10 	vstr	s0, [r0, #64]	; 0x40
 8026cb6:	f7ff be95 	b.w	80269e4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08026cba <_ZN8touchgfx13TextureMapper17setBitmapPositionEff>:
 8026cba:	ed80 0a0b 	vstr	s0, [r0, #44]	; 0x2c
 8026cbe:	edc0 0a0c 	vstr	s1, [r0, #48]	; 0x30
 8026cc2:	f7ff be8f 	b.w	80269e4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08026cc6 <_ZN8touchgfx13TextureMapper17setCameraDistanceEf>:
 8026cc6:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8026cca:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8026cce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026cd2:	bfd8      	it	le
 8026cd4:	eeb0 0a67 	vmovle.f32	s0, s15
 8026cd8:	ed80 0a16 	vstr	s0, [r0, #88]	; 0x58
 8026cdc:	f7ff be82 	b.w	80269e4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08026ce0 <_ZN8touchgfx13TextureMapper9setCameraEff>:
 8026ce0:	ed80 0a14 	vstr	s0, [r0, #80]	; 0x50
 8026ce4:	edc0 0a15 	vstr	s1, [r0, #84]	; 0x54
 8026ce8:	f7ff be7c 	b.w	80269e4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08026cec <_ZN8touchgfx13TextureMapper8setOrigoEff>:
 8026cec:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 8026cf0:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 8026cf4:	f7ff be76 	b.w	80269e4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08026cf8 <_ZN8touchgfx13TextureMapper8setOrigoEfff>:
 8026cf8:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 8026cfc:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 8026d00:	ed80 1a13 	vstr	s2, [r0, #76]	; 0x4c
 8026d04:	f7ff be6e 	b.w	80269e4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08026d08 <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>:
 8026d08:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8026d0c:	ed2d 8b04 	vpush	{d8-d9}
 8026d10:	edd1 9a1a 	vldr	s19, [r1, #104]	; 0x68
 8026d14:	ed91 8a17 	vldr	s16, [r1, #92]	; 0x5c
 8026d18:	ed91 9a1d 	vldr	s18, [r1, #116]	; 0x74
 8026d1c:	edd1 8a20 	vldr	s17, [r1, #128]	; 0x80
 8026d20:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8026d24:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026d28:	bf54      	ite	pl
 8026d2a:	eeb0 0a69 	vmovpl.f32	s0, s19
 8026d2e:	eeb0 0a48 	vmovmi.f32	s0, s16
 8026d32:	eeb4 9ac0 	vcmpe.f32	s18, s0
 8026d36:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026d3a:	bfd8      	it	le
 8026d3c:	eeb0 0a49 	vmovle.f32	s0, s18
 8026d40:	eef4 8ac0 	vcmpe.f32	s17, s0
 8026d44:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026d48:	bfd8      	it	le
 8026d4a:	eeb0 0a68 	vmovle.f32	s0, s17
 8026d4e:	460c      	mov	r4, r1
 8026d50:	4607      	mov	r7, r0
 8026d52:	f000 fd09 	bl	8027768 <floorf>
 8026d56:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8026d5a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026d5e:	bf58      	it	pl
 8026d60:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 8026d64:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8026d68:	bf56      	itet	pl
 8026d6a:	ee10 3a10 	vmovpl	r3, s0
 8026d6e:	2600      	movmi	r6, #0
 8026d70:	b21e      	sxthpl	r6, r3
 8026d72:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026d76:	bfd8      	it	le
 8026d78:	eeb0 8a69 	vmovle.f32	s16, s19
 8026d7c:	eeb4 9ac8 	vcmpe.f32	s18, s16
 8026d80:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026d84:	bf58      	it	pl
 8026d86:	eeb0 8a49 	vmovpl.f32	s16, s18
 8026d8a:	eef4 8ac8 	vcmpe.f32	s17, s16
 8026d8e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026d92:	bf54      	ite	pl
 8026d94:	eeb0 0a68 	vmovpl.f32	s0, s17
 8026d98:	eeb0 0a48 	vmovmi.f32	s0, s16
 8026d9c:	f000 fca2 	bl	80276e4 <ceilf>
 8026da0:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 8026da4:	edd4 9a1b 	vldr	s19, [r4, #108]	; 0x6c
 8026da8:	ed94 8a18 	vldr	s16, [r4, #96]	; 0x60
 8026dac:	ed94 9a1e 	vldr	s18, [r4, #120]	; 0x78
 8026db0:	edd4 8a21 	vldr	s17, [r4, #132]	; 0x84
 8026db4:	ee07 8a90 	vmov	s15, r8
 8026db8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8026dbc:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8026dc0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026dc4:	bfd8      	it	le
 8026dc6:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 8026dca:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8026dce:	bfdc      	itt	le
 8026dd0:	ee10 3a10 	vmovle	r3, s0
 8026dd4:	fa0f f883 	sxthle.w	r8, r3
 8026dd8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026ddc:	bf54      	ite	pl
 8026dde:	eeb0 0a69 	vmovpl.f32	s0, s19
 8026de2:	eeb0 0a48 	vmovmi.f32	s0, s16
 8026de6:	eeb4 9ac0 	vcmpe.f32	s18, s0
 8026dea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026dee:	bfd8      	it	le
 8026df0:	eeb0 0a49 	vmovle.f32	s0, s18
 8026df4:	eef4 8ac0 	vcmpe.f32	s17, s0
 8026df8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026dfc:	bfd8      	it	le
 8026dfe:	eeb0 0a68 	vmovle.f32	s0, s17
 8026e02:	f000 fcb1 	bl	8027768 <floorf>
 8026e06:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8026e0a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026e0e:	bf58      	it	pl
 8026e10:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 8026e14:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8026e18:	bf56      	itet	pl
 8026e1a:	ee10 3a10 	vmovpl	r3, s0
 8026e1e:	2500      	movmi	r5, #0
 8026e20:	b21d      	sxthpl	r5, r3
 8026e22:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026e26:	bfd8      	it	le
 8026e28:	eeb0 8a69 	vmovle.f32	s16, s19
 8026e2c:	eeb4 9ac8 	vcmpe.f32	s18, s16
 8026e30:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026e34:	bf58      	it	pl
 8026e36:	eeb0 8a49 	vmovpl.f32	s16, s18
 8026e3a:	eef4 8ac8 	vcmpe.f32	s17, s16
 8026e3e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026e42:	bf54      	ite	pl
 8026e44:	eeb0 0a68 	vmovpl.f32	s0, s17
 8026e48:	eeb0 0a48 	vmovmi.f32	s0, s16
 8026e4c:	f000 fc4a 	bl	80276e4 <ceilf>
 8026e50:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8026e54:	803e      	strh	r6, [r7, #0]
 8026e56:	ee07 3a90 	vmov	s15, r3
 8026e5a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8026e5e:	807d      	strh	r5, [r7, #2]
 8026e60:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8026e64:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026e68:	bfd8      	it	le
 8026e6a:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 8026e6e:	eba8 0606 	sub.w	r6, r8, r6
 8026e72:	bfdc      	itt	le
 8026e74:	ee10 3a10 	vmovle	r3, s0
 8026e78:	b21b      	sxthle	r3, r3
 8026e7a:	1b5d      	subs	r5, r3, r5
 8026e7c:	80be      	strh	r6, [r7, #4]
 8026e7e:	80fd      	strh	r5, [r7, #6]
 8026e80:	ecbd 8b04 	vpop	{d8-d9}
 8026e84:	4638      	mov	r0, r7
 8026e86:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08026e8a <_ZNK8touchgfx13TextureMapper17invalidateContentEv>:
 8026e8a:	b513      	push	{r0, r1, r4, lr}
 8026e8c:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 8026e90:	4604      	mov	r4, r0
 8026e92:	b143      	cbz	r3, 8026ea6 <_ZNK8touchgfx13TextureMapper17invalidateContentEv+0x1c>
 8026e94:	4601      	mov	r1, r0
 8026e96:	4668      	mov	r0, sp
 8026e98:	f7ff ff36 	bl	8026d08 <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>
 8026e9c:	6823      	ldr	r3, [r4, #0]
 8026e9e:	4669      	mov	r1, sp
 8026ea0:	691b      	ldr	r3, [r3, #16]
 8026ea2:	4620      	mov	r0, r4
 8026ea4:	4798      	blx	r3
 8026ea6:	b002      	add	sp, #8
 8026ea8:	bd10      	pop	{r4, pc}

08026eaa <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>:
 8026eaa:	4603      	mov	r3, r0
 8026eac:	3026      	adds	r0, #38	; 0x26
 8026eae:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 8026eb2:	b90b      	cbnz	r3, 8026eb8 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv+0xe>
 8026eb4:	f7ef b82c 	b.w	8015f10 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 8026eb8:	f7ef b83a 	b.w	8015f30 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>

08026ebc <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 8026ebc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026ec0:	ed2d 8b04 	vpush	{d8-d9}
 8026ec4:	4604      	mov	r4, r0
 8026ec6:	469b      	mov	fp, r3
 8026ec8:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 8026ecc:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8026ed0:	f9b1 6000 	ldrsh.w	r6, [r1]
 8026ed4:	8888      	ldrh	r0, [r1, #4]
 8026ed6:	b0b3      	sub	sp, #204	; 0xcc
 8026ed8:	4430      	add	r0, r6
 8026eda:	b280      	uxth	r0, r0
 8026edc:	9206      	str	r2, [sp, #24]
 8026ede:	fa0f fe80 	sxth.w	lr, r0
 8026ee2:	2200      	movs	r2, #0
 8026ee4:	4596      	cmp	lr, r2
 8026ee6:	f8dd a100 	ldr.w	sl, [sp, #256]	; 0x100
 8026eea:	f8dd 9104 	ldr.w	r9, [sp, #260]	; 0x104
 8026eee:	f8dd 8108 	ldr.w	r8, [sp, #264]	; 0x108
 8026ef2:	9f43      	ldr	r7, [sp, #268]	; 0x10c
 8026ef4:	9211      	str	r2, [sp, #68]	; 0x44
 8026ef6:	f340 8129 	ble.w	802714c <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8026efa:	45b4      	cmp	ip, r6
 8026efc:	f340 8126 	ble.w	802714c <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8026f00:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8026f04:	88ca      	ldrh	r2, [r1, #6]
 8026f06:	442a      	add	r2, r5
 8026f08:	b292      	uxth	r2, r2
 8026f0a:	b211      	sxth	r1, r2
 8026f0c:	2900      	cmp	r1, #0
 8026f0e:	f340 811d 	ble.w	802714c <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8026f12:	42ab      	cmp	r3, r5
 8026f14:	f340 811a 	ble.w	802714c <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8026f18:	45f4      	cmp	ip, lr
 8026f1a:	bfb8      	it	lt
 8026f1c:	fa1f f08c 	uxthlt.w	r0, ip
 8026f20:	428b      	cmp	r3, r1
 8026f22:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 8026f26:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8026f2a:	bfb8      	it	lt
 8026f2c:	b29a      	uxthlt	r2, r3
 8026f2e:	1b80      	subs	r0, r0, r6
 8026f30:	1b52      	subs	r2, r2, r5
 8026f32:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
 8026f36:	f8ad 204a 	strh.w	r2, [sp, #74]	; 0x4a
 8026f3a:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8026f3e:	f8ad 5046 	strh.w	r5, [sp, #70]	; 0x46
 8026f42:	ab11      	add	r3, sp, #68	; 0x44
 8026f44:	e893 0003 	ldmia.w	r3, {r0, r1}
 8026f48:	6822      	ldr	r2, [r4, #0]
 8026f4a:	9307      	str	r3, [sp, #28]
 8026f4c:	ad13      	add	r5, sp, #76	; 0x4c
 8026f4e:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8026f50:	e885 0003 	stmia.w	r5, {r0, r1}
 8026f54:	4629      	mov	r1, r5
 8026f56:	4620      	mov	r0, r4
 8026f58:	4790      	blx	r2
 8026f5a:	4621      	mov	r1, r4
 8026f5c:	a815      	add	r0, sp, #84	; 0x54
 8026f5e:	f7ee ff33 	bl	8015dc8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8026f62:	a815      	add	r0, sp, #84	; 0x54
 8026f64:	f7ed fbf8 	bl	8014758 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8026f68:	9b07      	ldr	r3, [sp, #28]
 8026f6a:	1d26      	adds	r6, r4, #4
 8026f6c:	4618      	mov	r0, r3
 8026f6e:	4631      	mov	r1, r6
 8026f70:	f7ed fc36 	bl	80147e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8026f74:	4628      	mov	r0, r5
 8026f76:	f104 0526 	add.w	r5, r4, #38	; 0x26
 8026f7a:	f7ed fbed 	bl	8014758 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8026f7e:	4628      	mov	r0, r5
 8026f80:	f7f1 f8a8 	bl	80180d4 <_ZNK8touchgfx6Bitmap7getDataEv>
 8026f84:	9007      	str	r0, [sp, #28]
 8026f86:	2800      	cmp	r0, #0
 8026f88:	f000 80db 	beq.w	8027142 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x286>
 8026f8c:	f8db 2000 	ldr.w	r2, [fp]
 8026f90:	9209      	str	r2, [sp, #36]	; 0x24
 8026f92:	f8db 2004 	ldr.w	r2, [fp, #4]
 8026f96:	920a      	str	r2, [sp, #40]	; 0x28
 8026f98:	f8db 2008 	ldr.w	r2, [fp, #8]
 8026f9c:	920b      	str	r2, [sp, #44]	; 0x2c
 8026f9e:	f8db 200c 	ldr.w	r2, [fp, #12]
 8026fa2:	920c      	str	r2, [sp, #48]	; 0x30
 8026fa4:	f8da 2000 	ldr.w	r2, [sl]
 8026fa8:	920d      	str	r2, [sp, #52]	; 0x34
 8026faa:	f8da 2004 	ldr.w	r2, [sl, #4]
 8026fae:	920e      	str	r2, [sp, #56]	; 0x38
 8026fb0:	f8da 2008 	ldr.w	r2, [sl, #8]
 8026fb4:	920f      	str	r2, [sp, #60]	; 0x3c
 8026fb6:	f8da 200c 	ldr.w	r2, [sl, #12]
 8026fba:	9210      	str	r2, [sp, #64]	; 0x40
 8026fbc:	a90d      	add	r1, sp, #52	; 0x34
 8026fbe:	4632      	mov	r2, r6
 8026fc0:	a809      	add	r0, sp, #36	; 0x24
 8026fc2:	f7ed fbf1 	bl	80147a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8026fc6:	4632      	mov	r2, r6
 8026fc8:	a90e      	add	r1, sp, #56	; 0x38
 8026fca:	a80a      	add	r0, sp, #40	; 0x28
 8026fcc:	f7ed fbec 	bl	80147a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8026fd0:	4632      	mov	r2, r6
 8026fd2:	a90f      	add	r1, sp, #60	; 0x3c
 8026fd4:	a80b      	add	r0, sp, #44	; 0x2c
 8026fd6:	f7ed fbe7 	bl	80147a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8026fda:	4632      	mov	r2, r6
 8026fdc:	a910      	add	r1, sp, #64	; 0x40
 8026fde:	a80c      	add	r0, sp, #48	; 0x30
 8026fe0:	f7ed fbe2 	bl	80147a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8026fe4:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
 8026fe8:	edd7 4a00 	vldr	s9, [r7]
 8026fec:	edd7 5a01 	vldr	s11, [r7, #4]
 8026ff0:	ed98 4a00 	vldr	s8, [r8]
 8026ff4:	ed98 5a01 	vldr	s10, [r8, #4]
 8026ff8:	ed99 9a00 	vldr	s18, [r9]
 8026ffc:	ed99 8a01 	vldr	s16, [r9, #4]
 8027000:	edd9 8a02 	vldr	s17, [r9, #8]
 8027004:	f8d9 e00c 	ldr.w	lr, [r9, #12]
 8027008:	f8d8 c00c 	ldr.w	ip, [r8, #12]
 802700c:	ed8d 4a21 	vstr	s8, [sp, #132]	; 0x84
 8027010:	eef0 6a67 	vmov.f32	s13, s15
 8027014:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 8027018:	edcd 4a22 	vstr	s9, [sp, #136]	; 0x88
 802701c:	eeb0 7a67 	vmov.f32	s14, s15
 8027020:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
 8027024:	ed8d 5a26 	vstr	s10, [sp, #152]	; 0x98
 8027028:	eeb0 6a67 	vmov.f32	s12, s15
 802702c:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8027030:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
 8027034:	edcd 5a27 	vstr	s11, [sp, #156]	; 0x9c
 8027038:	ee16 6a10 	vmov	r6, s12
 802703c:	eeb0 6a67 	vmov.f32	s12, s15
 8027040:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8027044:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
 8027048:	f8d7 a008 	ldr.w	sl, [r7, #8]
 802704c:	f8d8 b008 	ldr.w	fp, [r8, #8]
 8027050:	68ff      	ldr	r7, [r7, #12]
 8027052:	9624      	str	r6, [sp, #144]	; 0x90
 8027054:	ee16 0a10 	vmov	r0, s12
 8027058:	eeb0 6a67 	vmov.f32	s12, s15
 802705c:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8027060:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
 8027064:	ed8d 9a20 	vstr	s18, [sp, #128]	; 0x80
 8027068:	ee16 1a10 	vmov	r1, s12
 802706c:	eeb0 6a67 	vmov.f32	s12, s15
 8027070:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8027074:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
 8027078:	ee16 2a10 	vmov	r2, s12
 802707c:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
 8027080:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
 8027084:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 8027088:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 802708c:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8027090:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
 8027094:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
 8027098:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
 802709c:	ed8d 8a25 	vstr	s16, [sp, #148]	; 0x94
 80270a0:	edcd 8a2a 	vstr	s17, [sp, #168]	; 0xa8
 80270a4:	922d      	str	r2, [sp, #180]	; 0xb4
 80270a6:	4a2b      	ldr	r2, [pc, #172]	; (8027154 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x298>)
 80270a8:	9b06      	ldr	r3, [sp, #24]
 80270aa:	8812      	ldrh	r2, [r2, #0]
 80270ac:	9317      	str	r3, [sp, #92]	; 0x5c
 80270ae:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 80270b2:	9b07      	ldr	r3, [sp, #28]
 80270b4:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
 80270b8:	4628      	mov	r0, r5
 80270ba:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
 80270be:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
 80270c2:	9218      	str	r2, [sp, #96]	; 0x60
 80270c4:	9319      	str	r3, [sp, #100]	; 0x64
 80270c6:	f8cd b0ac 	str.w	fp, [sp, #172]	; 0xac
 80270ca:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
 80270ce:	9731      	str	r7, [sp, #196]	; 0xc4
 80270d0:	f7f1 f830 	bl	8018134 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 80270d4:	901a      	str	r0, [sp, #104]	; 0x68
 80270d6:	4628      	mov	r0, r5
 80270d8:	f7f0 ff10 	bl	8017efc <_ZNK8touchgfx6Bitmap8getWidthEv>
 80270dc:	901b      	str	r0, [sp, #108]	; 0x6c
 80270de:	4628      	mov	r0, r5
 80270e0:	f7f0 ff40 	bl	8017f64 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80270e4:	901c      	str	r0, [sp, #112]	; 0x70
 80270e6:	4628      	mov	r0, r5
 80270e8:	f7f0 ff08 	bl	8017efc <_ZNK8touchgfx6Bitmap8getWidthEv>
 80270ec:	eeb4 9a48 	vcmp.f32	s18, s16
 80270f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80270f4:	901d      	str	r0, [sp, #116]	; 0x74
 80270f6:	f8b4 608c 	ldrh.w	r6, [r4, #140]	; 0x8c
 80270fa:	d107      	bne.n	802710c <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x250>
 80270fc:	eeb4 8a68 	vcmp.f32	s16, s17
 8027100:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027104:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8027108:	bf08      	it	eq
 802710a:	461e      	moveq	r6, r3
 802710c:	4b12      	ldr	r3, [pc, #72]	; (8027158 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x29c>)
 802710e:	681b      	ldr	r3, [r3, #0]
 8027110:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8027114:	b10a      	cbz	r2, 802711a <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x25e>
 8027116:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 8027118:	b905      	cbnz	r5, 802711c <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x260>
 802711a:	689d      	ldr	r5, [r3, #8]
 802711c:	682b      	ldr	r3, [r5, #0]
 802711e:	4620      	mov	r0, r4
 8027120:	6c1f      	ldr	r7, [r3, #64]	; 0x40
 8027122:	f7ff fec2 	bl	8026eaa <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>
 8027126:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 802712a:	9604      	str	r6, [sp, #16]
 802712c:	e9cd 0302 	strd	r0, r3, [sp, #8]
 8027130:	ab13      	add	r3, sp, #76	; 0x4c
 8027132:	9301      	str	r3, [sp, #4]
 8027134:	ab15      	add	r3, sp, #84	; 0x54
 8027136:	9300      	str	r3, [sp, #0]
 8027138:	aa1e      	add	r2, sp, #120	; 0x78
 802713a:	ab19      	add	r3, sp, #100	; 0x64
 802713c:	a917      	add	r1, sp, #92	; 0x5c
 802713e:	4628      	mov	r0, r5
 8027140:	47b8      	blx	r7
 8027142:	b033      	add	sp, #204	; 0xcc
 8027144:	ecbd 8b04 	vpop	{d8-d9}
 8027148:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802714c:	2300      	movs	r3, #0
 802714e:	9312      	str	r3, [sp, #72]	; 0x48
 8027150:	e6f7      	b.n	8026f42 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x86>
 8027152:	bf00      	nop
 8027154:	200137b6 	.word	0x200137b6
 8027158:	200137bc 	.word	0x200137bc

0802715c <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE>:
 802715c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8027160:	ed2d 8b02 	vpush	{d8}
 8027164:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 8027168:	b098      	sub	sp, #96	; 0x60
 802716a:	4604      	mov	r4, r0
 802716c:	4688      	mov	r8, r1
 802716e:	2b00      	cmp	r3, #0
 8027170:	d077      	beq.n	8027262 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x106>
 8027172:	f100 0526 	add.w	r5, r0, #38	; 0x26
 8027176:	4628      	mov	r0, r5
 8027178:	f7f0 fec0 	bl	8017efc <_ZNK8touchgfx6Bitmap8getWidthEv>
 802717c:	ee07 0a90 	vmov	s15, r0
 8027180:	4628      	mov	r0, r5
 8027182:	eeb8 8ae7 	vcvt.f32.s32	s16, s15
 8027186:	f7f0 feed 	bl	8017f64 <_ZNK8touchgfx6Bitmap9getHeightEv>
 802718a:	4b4e      	ldr	r3, [pc, #312]	; (80272c4 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x168>)
 802718c:	781b      	ldrb	r3, [r3, #0]
 802718e:	ee07 0a90 	vmov	s15, r0
 8027192:	2b01      	cmp	r3, #1
 8027194:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8027198:	eeff 7a00 	vmov.f32	s15, #240	; 0xbf800000 -1.0
 802719c:	d066      	beq.n	802726c <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x110>
 802719e:	eeb0 6a47 	vmov.f32	s12, s14
 80271a2:	ee17 3a10 	vmov	r3, s14
 80271a6:	eeb0 4a48 	vmov.f32	s8, s16
 80271aa:	eeb0 7a48 	vmov.f32	s14, s16
 80271ae:	eef0 4a67 	vmov.f32	s9, s15
 80271b2:	eeb0 8a67 	vmov.f32	s16, s15
 80271b6:	ed94 5a17 	vldr	s10, [r4, #92]	; 0x5c
 80271ba:	edd4 5a18 	vldr	s11, [r4, #96]	; 0x60
 80271be:	ed94 3a1b 	vldr	s6, [r4, #108]	; 0x6c
 80271c2:	edd4 2a1d 	vldr	s5, [r4, #116]	; 0x74
 80271c6:	ed94 2a1a 	vldr	s4, [r4, #104]	; 0x68
 80271ca:	edd4 3a1e 	vldr	s7, [r4, #120]	; 0x78
 80271ce:	6f25      	ldr	r5, [r4, #112]	; 0x70
 80271d0:	6e66      	ldr	r6, [r4, #100]	; 0x64
 80271d2:	6fe2      	ldr	r2, [r4, #124]	; 0x7c
 80271d4:	f8d4 c080 	ldr.w	ip, [r4, #128]	; 0x80
 80271d8:	f8d4 7084 	ldr.w	r7, [r4, #132]	; 0x84
 80271dc:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 80271e0:	ee73 1a65 	vsub.f32	s3, s6, s11
 80271e4:	ee72 6ac5 	vsub.f32	s13, s5, s10
 80271e8:	ee32 1a45 	vsub.f32	s2, s4, s10
 80271ec:	ee66 6ae1 	vnmul.f32	s13, s13, s3
 80271f0:	ee73 1ae5 	vsub.f32	s3, s7, s11
 80271f4:	eee1 6a21 	vfma.f32	s13, s2, s3
 80271f8:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 80271fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027200:	dd3d      	ble.n	802727e <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x122>
 8027202:	ed8d 5a04 	vstr	s10, [sp, #16]
 8027206:	ed8d 2a05 	vstr	s4, [sp, #20]
 802720a:	edcd 2a06 	vstr	s5, [sp, #24]
 802720e:	f8cd c01c 	str.w	ip, [sp, #28]
 8027212:	edcd 5a08 	vstr	s11, [sp, #32]
 8027216:	ed8d 3a09 	vstr	s6, [sp, #36]	; 0x24
 802721a:	edcd 3a0a 	vstr	s7, [sp, #40]	; 0x28
 802721e:	970b      	str	r7, [sp, #44]	; 0x2c
 8027220:	960c      	str	r6, [sp, #48]	; 0x30
 8027222:	950d      	str	r5, [sp, #52]	; 0x34
 8027224:	920e      	str	r2, [sp, #56]	; 0x38
 8027226:	900f      	str	r0, [sp, #60]	; 0x3c
 8027228:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
 802722c:	ed8d 4a11 	vstr	s8, [sp, #68]	; 0x44
 8027230:	ed8d 7a12 	vstr	s14, [sp, #72]	; 0x48
 8027234:	edcd 4a13 	vstr	s9, [sp, #76]	; 0x4c
 8027238:	ed8d 8a14 	vstr	s16, [sp, #80]	; 0x50
 802723c:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
 8027240:	9316      	str	r3, [sp, #88]	; 0x58
 8027242:	ed8d 6a17 	vstr	s12, [sp, #92]	; 0x5c
 8027246:	ab14      	add	r3, sp, #80	; 0x50
 8027248:	9303      	str	r3, [sp, #12]
 802724a:	ab10      	add	r3, sp, #64	; 0x40
 802724c:	9302      	str	r3, [sp, #8]
 802724e:	ab0c      	add	r3, sp, #48	; 0x30
 8027250:	9301      	str	r3, [sp, #4]
 8027252:	ab08      	add	r3, sp, #32
 8027254:	9300      	str	r3, [sp, #0]
 8027256:	2200      	movs	r2, #0
 8027258:	ab04      	add	r3, sp, #16
 802725a:	4641      	mov	r1, r8
 802725c:	4620      	mov	r0, r4
 802725e:	f7ff fe2d 	bl	8026ebc <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
 8027262:	b018      	add	sp, #96	; 0x60
 8027264:	ecbd 8b02 	vpop	{d8}
 8027268:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802726c:	eeb0 6a48 	vmov.f32	s12, s16
 8027270:	eef0 4a47 	vmov.f32	s9, s14
 8027274:	ee17 3a90 	vmov	r3, s15
 8027278:	eeb0 4a67 	vmov.f32	s8, s15
 802727c:	e79b      	b.n	80271b6 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x5a>
 802727e:	ed8d 5a05 	vstr	s10, [sp, #20]
 8027282:	ed8d 2a04 	vstr	s4, [sp, #16]
 8027286:	f8cd c018 	str.w	ip, [sp, #24]
 802728a:	edcd 2a07 	vstr	s5, [sp, #28]
 802728e:	edcd 5a09 	vstr	s11, [sp, #36]	; 0x24
 8027292:	ed8d 3a08 	vstr	s6, [sp, #32]
 8027296:	970a      	str	r7, [sp, #40]	; 0x28
 8027298:	edcd 3a0b 	vstr	s7, [sp, #44]	; 0x2c
 802729c:	960d      	str	r6, [sp, #52]	; 0x34
 802729e:	950c      	str	r5, [sp, #48]	; 0x30
 80272a0:	900e      	str	r0, [sp, #56]	; 0x38
 80272a2:	920f      	str	r2, [sp, #60]	; 0x3c
 80272a4:	edcd 7a11 	vstr	s15, [sp, #68]	; 0x44
 80272a8:	ed8d 4a10 	vstr	s8, [sp, #64]	; 0x40
 80272ac:	edcd 4a12 	vstr	s9, [sp, #72]	; 0x48
 80272b0:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 80272b4:	ed8d 8a15 	vstr	s16, [sp, #84]	; 0x54
 80272b8:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 80272bc:	ed8d 6a16 	vstr	s12, [sp, #88]	; 0x58
 80272c0:	9317      	str	r3, [sp, #92]	; 0x5c
 80272c2:	e7c0      	b.n	8027246 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0xea>
 80272c4:	200137b4 	.word	0x200137b4

080272c8 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>:
 80272c8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80272ca:	b08d      	sub	sp, #52	; 0x34
 80272cc:	2300      	movs	r3, #0
 80272ce:	9304      	str	r3, [sp, #16]
 80272d0:	9305      	str	r3, [sp, #20]
 80272d2:	9306      	str	r3, [sp, #24]
 80272d4:	aa04      	add	r2, sp, #16
 80272d6:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 80272da:	9307      	str	r3, [sp, #28]
 80272dc:	f100 0640 	add.w	r6, r0, #64	; 0x40
 80272e0:	4613      	mov	r3, r2
 80272e2:	f101 0710 	add.w	r7, r1, #16
 80272e6:	eddf 7a0f 	vldr	s15, [pc, #60]	; 8027324 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x5c>
 80272ea:	460c      	mov	r4, r1
 80272ec:	4605      	mov	r5, r0
 80272ee:	ecb4 7a01 	vldmia	r4!, {s14}
 80272f2:	ecf5 6a01 	vldmia	r5!, {s13}
 80272f6:	42bc      	cmp	r4, r7
 80272f8:	eee6 7a87 	vfma.f32	s15, s13, s14
 80272fc:	d1f7      	bne.n	80272ee <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x26>
 80272fe:	3010      	adds	r0, #16
 8027300:	42b0      	cmp	r0, r6
 8027302:	ece2 7a01 	vstmia	r2!, {s15}
 8027306:	d1ee      	bne.n	80272e6 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x1e>
 8027308:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 802730a:	ac0c      	add	r4, sp, #48	; 0x30
 802730c:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 8027310:	ed9d 0a08 	vldr	s0, [sp, #32]
 8027314:	eddd 0a09 	vldr	s1, [sp, #36]	; 0x24
 8027318:	ed9d 1a0a 	vldr	s2, [sp, #40]	; 0x28
 802731c:	eddd 1a0b 	vldr	s3, [sp, #44]	; 0x2c
 8027320:	b00d      	add	sp, #52	; 0x34
 8027322:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8027324:	00000000 	.word	0x00000000

08027328 <_ZN8touchgfx9Matrix4x4C1Ev>:
 8027328:	ed9f 7a0b 	vldr	s14, [pc, #44]	; 8027358 <_ZN8touchgfx9Matrix4x4C1Ev+0x30>
 802732c:	2300      	movs	r3, #0
 802732e:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8027332:	eb00 1103 	add.w	r1, r0, r3, lsl #4
 8027336:	2200      	movs	r2, #0
 8027338:	4293      	cmp	r3, r2
 802733a:	f102 0201 	add.w	r2, r2, #1
 802733e:	bf14      	ite	ne
 8027340:	eef0 6a47 	vmovne.f32	s13, s14
 8027344:	eef0 6a67 	vmoveq.f32	s13, s15
 8027348:	2a04      	cmp	r2, #4
 802734a:	ece1 6a01 	vstmia	r1!, {s13}
 802734e:	d1f3      	bne.n	8027338 <_ZN8touchgfx9Matrix4x4C1Ev+0x10>
 8027350:	3301      	adds	r3, #1
 8027352:	2b04      	cmp	r3, #4
 8027354:	d1ed      	bne.n	8027332 <_ZN8touchgfx9Matrix4x4C1Ev+0xa>
 8027356:	4770      	bx	lr
 8027358:	00000000 	.word	0x00000000

0802735c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>:
 802735c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8027360:	460c      	mov	r4, r1
 8027362:	4605      	mov	r5, r0
 8027364:	4690      	mov	r8, r2
 8027366:	f7ff ffdf 	bl	8027328 <_ZN8touchgfx9Matrix4x4C1Ev>
 802736a:	4628      	mov	r0, r5
 802736c:	4621      	mov	r1, r4
 802736e:	f104 0c40 	add.w	ip, r4, #64	; 0x40
 8027372:	2300      	movs	r3, #0
 8027374:	eddf 7a0f 	vldr	s15, [pc, #60]	; 80273b4 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x58>
 8027378:	eb08 0603 	add.w	r6, r8, r3
 802737c:	460f      	mov	r7, r1
 802737e:	2400      	movs	r4, #0
 8027380:	4632      	mov	r2, r6
 8027382:	ecf7 6a01 	vldmia	r7!, {s13}
 8027386:	ed92 7a00 	vldr	s14, [r2]
 802738a:	3401      	adds	r4, #1
 802738c:	2c04      	cmp	r4, #4
 802738e:	f106 0610 	add.w	r6, r6, #16
 8027392:	eee6 7a87 	vfma.f32	s15, s13, s14
 8027396:	d1f3      	bne.n	8027380 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x24>
 8027398:	18c2      	adds	r2, r0, r3
 802739a:	3304      	adds	r3, #4
 802739c:	2b10      	cmp	r3, #16
 802739e:	edc2 7a00 	vstr	s15, [r2]
 80273a2:	d1e7      	bne.n	8027374 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x18>
 80273a4:	3110      	adds	r1, #16
 80273a6:	4561      	cmp	r1, ip
 80273a8:	f100 0010 	add.w	r0, r0, #16
 80273ac:	d1e1      	bne.n	8027372 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x16>
 80273ae:	4628      	mov	r0, r5
 80273b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80273b4:	00000000 	.word	0x00000000

080273b8 <_ZN8touchgfx9Matrix4x415setViewDistanceEf>:
 80273b8:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 80273bc:	ee87 0a80 	vdiv.f32	s0, s15, s0
 80273c0:	f100 0320 	add.w	r3, r0, #32
 80273c4:	3030      	adds	r0, #48	; 0x30
 80273c6:	ecf3 7a01 	vldmia	r3!, {s15}
 80273ca:	ee60 7a27 	vmul.f32	s15, s0, s15
 80273ce:	4283      	cmp	r3, r0
 80273d0:	edc3 7a03 	vstr	s15, [r3, #12]
 80273d4:	d1f7      	bne.n	80273c6 <_ZN8touchgfx9Matrix4x415setViewDistanceEf+0xe>
 80273d6:	4770      	bx	lr

080273d8 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>:
 80273d8:	b510      	push	{r4, lr}
 80273da:	ed2d 8b02 	vpush	{d8}
 80273de:	4604      	mov	r4, r0
 80273e0:	eef0 8a40 	vmov.f32	s17, s0
 80273e4:	f000 f938 	bl	8027658 <sinf>
 80273e8:	eeb0 8a40 	vmov.f32	s16, s0
 80273ec:	eeb0 0a68 	vmov.f32	s0, s17
 80273f0:	f000 f8ee 	bl	80275d0 <cosf>
 80273f4:	f104 0310 	add.w	r3, r4, #16
 80273f8:	f104 0220 	add.w	r2, r4, #32
 80273fc:	eeb1 6a48 	vneg.f32	s12, s16
 8027400:	edd3 7a04 	vldr	s15, [r3, #16]
 8027404:	edd3 6a00 	vldr	s13, [r3]
 8027408:	ee26 7a27 	vmul.f32	s14, s12, s15
 802740c:	ee67 7a80 	vmul.f32	s15, s15, s0
 8027410:	eea6 7a80 	vfma.f32	s14, s13, s0
 8027414:	eee6 7a88 	vfma.f32	s15, s13, s16
 8027418:	eca3 7a01 	vstmia	r3!, {s14}
 802741c:	429a      	cmp	r2, r3
 802741e:	edc3 7a03 	vstr	s15, [r3, #12]
 8027422:	d1ed      	bne.n	8027400 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf+0x28>
 8027424:	ecbd 8b02 	vpop	{d8}
 8027428:	4620      	mov	r0, r4
 802742a:	bd10      	pop	{r4, pc}

0802742c <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>:
 802742c:	b510      	push	{r4, lr}
 802742e:	ed2d 8b02 	vpush	{d8}
 8027432:	4604      	mov	r4, r0
 8027434:	eef0 8a40 	vmov.f32	s17, s0
 8027438:	f000 f90e 	bl	8027658 <sinf>
 802743c:	eeb0 8a40 	vmov.f32	s16, s0
 8027440:	eeb0 0a68 	vmov.f32	s0, s17
 8027444:	f000 f8c4 	bl	80275d0 <cosf>
 8027448:	4623      	mov	r3, r4
 802744a:	f104 0210 	add.w	r2, r4, #16
 802744e:	eeb1 6a48 	vneg.f32	s12, s16
 8027452:	edd3 7a08 	vldr	s15, [r3, #32]
 8027456:	edd3 6a00 	vldr	s13, [r3]
 802745a:	ee27 7a88 	vmul.f32	s14, s15, s16
 802745e:	ee67 7a80 	vmul.f32	s15, s15, s0
 8027462:	eea6 7a80 	vfma.f32	s14, s13, s0
 8027466:	eee6 7a26 	vfma.f32	s15, s12, s13
 802746a:	eca3 7a01 	vstmia	r3!, {s14}
 802746e:	429a      	cmp	r2, r3
 8027470:	edc3 7a07 	vstr	s15, [r3, #28]
 8027474:	d1ed      	bne.n	8027452 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf+0x26>
 8027476:	ecbd 8b02 	vpop	{d8}
 802747a:	4620      	mov	r0, r4
 802747c:	bd10      	pop	{r4, pc}

0802747e <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>:
 802747e:	b510      	push	{r4, lr}
 8027480:	ed2d 8b02 	vpush	{d8}
 8027484:	4604      	mov	r4, r0
 8027486:	eef0 8a40 	vmov.f32	s17, s0
 802748a:	f000 f8e5 	bl	8027658 <sinf>
 802748e:	eeb0 8a40 	vmov.f32	s16, s0
 8027492:	eeb0 0a68 	vmov.f32	s0, s17
 8027496:	f000 f89b 	bl	80275d0 <cosf>
 802749a:	4623      	mov	r3, r4
 802749c:	f104 0210 	add.w	r2, r4, #16
 80274a0:	eeb1 6a48 	vneg.f32	s12, s16
 80274a4:	edd3 7a04 	vldr	s15, [r3, #16]
 80274a8:	edd3 6a00 	vldr	s13, [r3]
 80274ac:	ee26 7a27 	vmul.f32	s14, s12, s15
 80274b0:	ee67 7a80 	vmul.f32	s15, s15, s0
 80274b4:	eea6 7a80 	vfma.f32	s14, s13, s0
 80274b8:	eee6 7a88 	vfma.f32	s15, s13, s16
 80274bc:	eca3 7a01 	vstmia	r3!, {s14}
 80274c0:	429a      	cmp	r2, r3
 80274c2:	edc3 7a03 	vstr	s15, [r3, #12]
 80274c6:	d1ed      	bne.n	80274a4 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf+0x26>
 80274c8:	ecbd 8b02 	vpop	{d8}
 80274cc:	4620      	mov	r0, r4
 80274ce:	bd10      	pop	{r4, pc}

080274d0 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>:
 80274d0:	4603      	mov	r3, r0
 80274d2:	f100 0210 	add.w	r2, r0, #16
 80274d6:	ed93 7a0c 	vldr	s14, [r3, #48]	; 0x30
 80274da:	edd3 7a00 	vldr	s15, [r3]
 80274de:	eee7 7a00 	vfma.f32	s15, s14, s0
 80274e2:	ece3 7a01 	vstmia	r3!, {s15}
 80274e6:	4293      	cmp	r3, r2
 80274e8:	d1f5      	bne.n	80274d6 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf+0x6>
 80274ea:	4770      	bx	lr

080274ec <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>:
 80274ec:	f100 0310 	add.w	r3, r0, #16
 80274f0:	f100 0220 	add.w	r2, r0, #32
 80274f4:	ed93 7a08 	vldr	s14, [r3, #32]
 80274f8:	edd3 7a00 	vldr	s15, [r3]
 80274fc:	eee7 7a00 	vfma.f32	s15, s14, s0
 8027500:	ece3 7a01 	vstmia	r3!, {s15}
 8027504:	4293      	cmp	r3, r2
 8027506:	d1f5      	bne.n	80274f4 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf+0x8>
 8027508:	4770      	bx	lr

0802750a <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>:
 802750a:	f100 0320 	add.w	r3, r0, #32
 802750e:	f100 0230 	add.w	r2, r0, #48	; 0x30
 8027512:	ed93 7a04 	vldr	s14, [r3, #16]
 8027516:	edd3 7a00 	vldr	s15, [r3]
 802751a:	eee7 7a00 	vfma.f32	s15, s14, s0
 802751e:	ece3 7a01 	vstmia	r3!, {s15}
 8027522:	4293      	cmp	r3, r2
 8027524:	d1f5      	bne.n	8027512 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf+0x8>
 8027526:	4770      	bx	lr

08027528 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>:
 8027528:	4603      	mov	r3, r0
 802752a:	f100 0210 	add.w	r2, r0, #16
 802752e:	edd3 7a00 	vldr	s15, [r3]
 8027532:	ee67 7a80 	vmul.f32	s15, s15, s0
 8027536:	ece3 7a01 	vstmia	r3!, {s15}
 802753a:	4293      	cmp	r3, r2
 802753c:	d1f7      	bne.n	802752e <_ZN8touchgfx9Matrix4x417concatenateXScaleEf+0x6>
 802753e:	4770      	bx	lr

08027540 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>:
 8027540:	f100 0310 	add.w	r3, r0, #16
 8027544:	f100 0220 	add.w	r2, r0, #32
 8027548:	edd3 7a00 	vldr	s15, [r3]
 802754c:	ee67 7a80 	vmul.f32	s15, s15, s0
 8027550:	ece3 7a01 	vstmia	r3!, {s15}
 8027554:	4293      	cmp	r3, r2
 8027556:	d1f7      	bne.n	8027548 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf+0x8>
 8027558:	4770      	bx	lr

0802755a <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>:
 802755a:	f100 0320 	add.w	r3, r0, #32
 802755e:	f100 0230 	add.w	r2, r0, #48	; 0x30
 8027562:	edd3 7a00 	vldr	s15, [r3]
 8027566:	ee67 7a80 	vmul.f32	s15, s15, s0
 802756a:	ece3 7a01 	vstmia	r3!, {s15}
 802756e:	4293      	cmp	r3, r2
 8027570:	d1f7      	bne.n	8027562 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf+0x8>
 8027572:	4770      	bx	lr

08027574 <__aeabi_atexit>:
 8027574:	460b      	mov	r3, r1
 8027576:	4601      	mov	r1, r0
 8027578:	4618      	mov	r0, r3
 802757a:	f000 bed1 	b.w	8028320 <__cxa_atexit>

0802757e <_ZdlPvj>:
 802757e:	f000 b812 	b.w	80275a6 <_ZdlPv>

08027582 <__cxa_guard_acquire>:
 8027582:	6803      	ldr	r3, [r0, #0]
 8027584:	07db      	lsls	r3, r3, #31
 8027586:	d406      	bmi.n	8027596 <__cxa_guard_acquire+0x14>
 8027588:	7843      	ldrb	r3, [r0, #1]
 802758a:	b103      	cbz	r3, 802758e <__cxa_guard_acquire+0xc>
 802758c:	deff      	udf	#255	; 0xff
 802758e:	2301      	movs	r3, #1
 8027590:	7043      	strb	r3, [r0, #1]
 8027592:	4618      	mov	r0, r3
 8027594:	4770      	bx	lr
 8027596:	2000      	movs	r0, #0
 8027598:	4770      	bx	lr

0802759a <__cxa_guard_release>:
 802759a:	2301      	movs	r3, #1
 802759c:	6003      	str	r3, [r0, #0]
 802759e:	4770      	bx	lr

080275a0 <__cxa_pure_virtual>:
 80275a0:	b508      	push	{r3, lr}
 80275a2:	f000 f80f 	bl	80275c4 <_ZSt9terminatev>

080275a6 <_ZdlPv>:
 80275a6:	f000 be07 	b.w	80281b8 <free>

080275aa <_ZN10__cxxabiv111__terminateEPFvvE>:
 80275aa:	b508      	push	{r3, lr}
 80275ac:	4780      	blx	r0
 80275ae:	f000 fdcf 	bl	8028150 <abort>
	...

080275b4 <_ZSt13get_terminatev>:
 80275b4:	4b02      	ldr	r3, [pc, #8]	; (80275c0 <_ZSt13get_terminatev+0xc>)
 80275b6:	6818      	ldr	r0, [r3, #0]
 80275b8:	f3bf 8f5b 	dmb	ish
 80275bc:	4770      	bx	lr
 80275be:	bf00      	nop
 80275c0:	20000104 	.word	0x20000104

080275c4 <_ZSt9terminatev>:
 80275c4:	b508      	push	{r3, lr}
 80275c6:	f7ff fff5 	bl	80275b4 <_ZSt13get_terminatev>
 80275ca:	f7ff ffee 	bl	80275aa <_ZN10__cxxabiv111__terminateEPFvvE>
	...

080275d0 <cosf>:
 80275d0:	ee10 3a10 	vmov	r3, s0
 80275d4:	b507      	push	{r0, r1, r2, lr}
 80275d6:	4a1e      	ldr	r2, [pc, #120]	; (8027650 <cosf+0x80>)
 80275d8:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80275dc:	4293      	cmp	r3, r2
 80275de:	dc06      	bgt.n	80275ee <cosf+0x1e>
 80275e0:	eddf 0a1c 	vldr	s1, [pc, #112]	; 8027654 <cosf+0x84>
 80275e4:	b003      	add	sp, #12
 80275e6:	f85d eb04 	ldr.w	lr, [sp], #4
 80275ea:	f000 b8ff 	b.w	80277ec <__kernel_cosf>
 80275ee:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 80275f2:	db04      	blt.n	80275fe <cosf+0x2e>
 80275f4:	ee30 0a40 	vsub.f32	s0, s0, s0
 80275f8:	b003      	add	sp, #12
 80275fa:	f85d fb04 	ldr.w	pc, [sp], #4
 80275fe:	4668      	mov	r0, sp
 8027600:	f000 f99a 	bl	8027938 <__ieee754_rem_pio2f>
 8027604:	f000 0003 	and.w	r0, r0, #3
 8027608:	2801      	cmp	r0, #1
 802760a:	d009      	beq.n	8027620 <cosf+0x50>
 802760c:	2802      	cmp	r0, #2
 802760e:	d010      	beq.n	8027632 <cosf+0x62>
 8027610:	b9b0      	cbnz	r0, 8027640 <cosf+0x70>
 8027612:	eddd 0a01 	vldr	s1, [sp, #4]
 8027616:	ed9d 0a00 	vldr	s0, [sp]
 802761a:	f000 f8e7 	bl	80277ec <__kernel_cosf>
 802761e:	e7eb      	b.n	80275f8 <cosf+0x28>
 8027620:	eddd 0a01 	vldr	s1, [sp, #4]
 8027624:	ed9d 0a00 	vldr	s0, [sp]
 8027628:	f000 f93e 	bl	80278a8 <__kernel_sinf>
 802762c:	eeb1 0a40 	vneg.f32	s0, s0
 8027630:	e7e2      	b.n	80275f8 <cosf+0x28>
 8027632:	eddd 0a01 	vldr	s1, [sp, #4]
 8027636:	ed9d 0a00 	vldr	s0, [sp]
 802763a:	f000 f8d7 	bl	80277ec <__kernel_cosf>
 802763e:	e7f5      	b.n	802762c <cosf+0x5c>
 8027640:	eddd 0a01 	vldr	s1, [sp, #4]
 8027644:	ed9d 0a00 	vldr	s0, [sp]
 8027648:	2001      	movs	r0, #1
 802764a:	f000 f92d 	bl	80278a8 <__kernel_sinf>
 802764e:	e7d3      	b.n	80275f8 <cosf+0x28>
 8027650:	3f490fd8 	.word	0x3f490fd8
 8027654:	00000000 	.word	0x00000000

08027658 <sinf>:
 8027658:	ee10 3a10 	vmov	r3, s0
 802765c:	b507      	push	{r0, r1, r2, lr}
 802765e:	4a1f      	ldr	r2, [pc, #124]	; (80276dc <sinf+0x84>)
 8027660:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8027664:	4293      	cmp	r3, r2
 8027666:	dc07      	bgt.n	8027678 <sinf+0x20>
 8027668:	eddf 0a1d 	vldr	s1, [pc, #116]	; 80276e0 <sinf+0x88>
 802766c:	2000      	movs	r0, #0
 802766e:	b003      	add	sp, #12
 8027670:	f85d eb04 	ldr.w	lr, [sp], #4
 8027674:	f000 b918 	b.w	80278a8 <__kernel_sinf>
 8027678:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 802767c:	db04      	blt.n	8027688 <sinf+0x30>
 802767e:	ee30 0a40 	vsub.f32	s0, s0, s0
 8027682:	b003      	add	sp, #12
 8027684:	f85d fb04 	ldr.w	pc, [sp], #4
 8027688:	4668      	mov	r0, sp
 802768a:	f000 f955 	bl	8027938 <__ieee754_rem_pio2f>
 802768e:	f000 0003 	and.w	r0, r0, #3
 8027692:	2801      	cmp	r0, #1
 8027694:	d00a      	beq.n	80276ac <sinf+0x54>
 8027696:	2802      	cmp	r0, #2
 8027698:	d00f      	beq.n	80276ba <sinf+0x62>
 802769a:	b9c0      	cbnz	r0, 80276ce <sinf+0x76>
 802769c:	eddd 0a01 	vldr	s1, [sp, #4]
 80276a0:	ed9d 0a00 	vldr	s0, [sp]
 80276a4:	2001      	movs	r0, #1
 80276a6:	f000 f8ff 	bl	80278a8 <__kernel_sinf>
 80276aa:	e7ea      	b.n	8027682 <sinf+0x2a>
 80276ac:	eddd 0a01 	vldr	s1, [sp, #4]
 80276b0:	ed9d 0a00 	vldr	s0, [sp]
 80276b4:	f000 f89a 	bl	80277ec <__kernel_cosf>
 80276b8:	e7e3      	b.n	8027682 <sinf+0x2a>
 80276ba:	eddd 0a01 	vldr	s1, [sp, #4]
 80276be:	ed9d 0a00 	vldr	s0, [sp]
 80276c2:	2001      	movs	r0, #1
 80276c4:	f000 f8f0 	bl	80278a8 <__kernel_sinf>
 80276c8:	eeb1 0a40 	vneg.f32	s0, s0
 80276cc:	e7d9      	b.n	8027682 <sinf+0x2a>
 80276ce:	eddd 0a01 	vldr	s1, [sp, #4]
 80276d2:	ed9d 0a00 	vldr	s0, [sp]
 80276d6:	f000 f889 	bl	80277ec <__kernel_cosf>
 80276da:	e7f5      	b.n	80276c8 <sinf+0x70>
 80276dc:	3f490fd8 	.word	0x3f490fd8
 80276e0:	00000000 	.word	0x00000000

080276e4 <ceilf>:
 80276e4:	ee10 3a10 	vmov	r3, s0
 80276e8:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 80276ec:	3a7f      	subs	r2, #127	; 0x7f
 80276ee:	2a16      	cmp	r2, #22
 80276f0:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 80276f4:	dc2a      	bgt.n	802774c <ceilf+0x68>
 80276f6:	2a00      	cmp	r2, #0
 80276f8:	da11      	bge.n	802771e <ceilf+0x3a>
 80276fa:	eddf 7a19 	vldr	s15, [pc, #100]	; 8027760 <ceilf+0x7c>
 80276fe:	ee30 0a27 	vadd.f32	s0, s0, s15
 8027702:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8027706:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802770a:	dd05      	ble.n	8027718 <ceilf+0x34>
 802770c:	2b00      	cmp	r3, #0
 802770e:	db23      	blt.n	8027758 <ceilf+0x74>
 8027710:	2900      	cmp	r1, #0
 8027712:	bf18      	it	ne
 8027714:	f04f 537e 	movne.w	r3, #1065353216	; 0x3f800000
 8027718:	ee00 3a10 	vmov	s0, r3
 802771c:	4770      	bx	lr
 802771e:	4911      	ldr	r1, [pc, #68]	; (8027764 <ceilf+0x80>)
 8027720:	4111      	asrs	r1, r2
 8027722:	420b      	tst	r3, r1
 8027724:	d0fa      	beq.n	802771c <ceilf+0x38>
 8027726:	eddf 7a0e 	vldr	s15, [pc, #56]	; 8027760 <ceilf+0x7c>
 802772a:	ee30 0a27 	vadd.f32	s0, s0, s15
 802772e:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8027732:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027736:	ddef      	ble.n	8027718 <ceilf+0x34>
 8027738:	2b00      	cmp	r3, #0
 802773a:	bfc2      	ittt	gt
 802773c:	f44f 0000 	movgt.w	r0, #8388608	; 0x800000
 8027740:	fa40 f202 	asrgt.w	r2, r0, r2
 8027744:	189b      	addgt	r3, r3, r2
 8027746:	ea23 0301 	bic.w	r3, r3, r1
 802774a:	e7e5      	b.n	8027718 <ceilf+0x34>
 802774c:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 8027750:	d3e4      	bcc.n	802771c <ceilf+0x38>
 8027752:	ee30 0a00 	vadd.f32	s0, s0, s0
 8027756:	4770      	bx	lr
 8027758:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 802775c:	e7dc      	b.n	8027718 <ceilf+0x34>
 802775e:	bf00      	nop
 8027760:	7149f2ca 	.word	0x7149f2ca
 8027764:	007fffff 	.word	0x007fffff

08027768 <floorf>:
 8027768:	ee10 3a10 	vmov	r3, s0
 802776c:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8027770:	3a7f      	subs	r2, #127	; 0x7f
 8027772:	2a16      	cmp	r2, #22
 8027774:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 8027778:	dc2a      	bgt.n	80277d0 <floorf+0x68>
 802777a:	2a00      	cmp	r2, #0
 802777c:	da11      	bge.n	80277a2 <floorf+0x3a>
 802777e:	eddf 7a18 	vldr	s15, [pc, #96]	; 80277e0 <floorf+0x78>
 8027782:	ee30 0a27 	vadd.f32	s0, s0, s15
 8027786:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802778a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802778e:	dd05      	ble.n	802779c <floorf+0x34>
 8027790:	2b00      	cmp	r3, #0
 8027792:	da23      	bge.n	80277dc <floorf+0x74>
 8027794:	4a13      	ldr	r2, [pc, #76]	; (80277e4 <floorf+0x7c>)
 8027796:	2900      	cmp	r1, #0
 8027798:	bf18      	it	ne
 802779a:	4613      	movne	r3, r2
 802779c:	ee00 3a10 	vmov	s0, r3
 80277a0:	4770      	bx	lr
 80277a2:	4911      	ldr	r1, [pc, #68]	; (80277e8 <floorf+0x80>)
 80277a4:	4111      	asrs	r1, r2
 80277a6:	420b      	tst	r3, r1
 80277a8:	d0fa      	beq.n	80277a0 <floorf+0x38>
 80277aa:	eddf 7a0d 	vldr	s15, [pc, #52]	; 80277e0 <floorf+0x78>
 80277ae:	ee30 0a27 	vadd.f32	s0, s0, s15
 80277b2:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80277b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80277ba:	ddef      	ble.n	802779c <floorf+0x34>
 80277bc:	2b00      	cmp	r3, #0
 80277be:	bfbe      	ittt	lt
 80277c0:	f44f 0000 	movlt.w	r0, #8388608	; 0x800000
 80277c4:	fa40 f202 	asrlt.w	r2, r0, r2
 80277c8:	189b      	addlt	r3, r3, r2
 80277ca:	ea23 0301 	bic.w	r3, r3, r1
 80277ce:	e7e5      	b.n	802779c <floorf+0x34>
 80277d0:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 80277d4:	d3e4      	bcc.n	80277a0 <floorf+0x38>
 80277d6:	ee30 0a00 	vadd.f32	s0, s0, s0
 80277da:	4770      	bx	lr
 80277dc:	2300      	movs	r3, #0
 80277de:	e7dd      	b.n	802779c <floorf+0x34>
 80277e0:	7149f2ca 	.word	0x7149f2ca
 80277e4:	bf800000 	.word	0xbf800000
 80277e8:	007fffff 	.word	0x007fffff

080277ec <__kernel_cosf>:
 80277ec:	ee10 3a10 	vmov	r3, s0
 80277f0:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80277f4:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 80277f8:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80277fc:	da05      	bge.n	802780a <__kernel_cosf+0x1e>
 80277fe:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8027802:	ee17 2a90 	vmov	r2, s15
 8027806:	2a00      	cmp	r2, #0
 8027808:	d03b      	beq.n	8027882 <__kernel_cosf+0x96>
 802780a:	ee20 7a00 	vmul.f32	s14, s0, s0
 802780e:	eddf 7a1e 	vldr	s15, [pc, #120]	; 8027888 <__kernel_cosf+0x9c>
 8027812:	ed9f 6a1e 	vldr	s12, [pc, #120]	; 802788c <__kernel_cosf+0xa0>
 8027816:	4a1e      	ldr	r2, [pc, #120]	; (8027890 <__kernel_cosf+0xa4>)
 8027818:	eea7 6a27 	vfma.f32	s12, s14, s15
 802781c:	4293      	cmp	r3, r2
 802781e:	eddf 7a1d 	vldr	s15, [pc, #116]	; 8027894 <__kernel_cosf+0xa8>
 8027822:	eee6 7a07 	vfma.f32	s15, s12, s14
 8027826:	ed9f 6a1c 	vldr	s12, [pc, #112]	; 8027898 <__kernel_cosf+0xac>
 802782a:	eea7 6a87 	vfma.f32	s12, s15, s14
 802782e:	eddf 7a1b 	vldr	s15, [pc, #108]	; 802789c <__kernel_cosf+0xb0>
 8027832:	eee6 7a07 	vfma.f32	s15, s12, s14
 8027836:	ed9f 6a1a 	vldr	s12, [pc, #104]	; 80278a0 <__kernel_cosf+0xb4>
 802783a:	eea7 6a87 	vfma.f32	s12, s15, s14
 802783e:	ee60 0ac0 	vnmul.f32	s1, s1, s0
 8027842:	ee26 6a07 	vmul.f32	s12, s12, s14
 8027846:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802784a:	eee7 0a06 	vfma.f32	s1, s14, s12
 802784e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8027852:	dc04      	bgt.n	802785e <__kernel_cosf+0x72>
 8027854:	ee77 7ae0 	vsub.f32	s15, s15, s1
 8027858:	ee36 0ae7 	vsub.f32	s0, s13, s15
 802785c:	4770      	bx	lr
 802785e:	4a11      	ldr	r2, [pc, #68]	; (80278a4 <__kernel_cosf+0xb8>)
 8027860:	4293      	cmp	r3, r2
 8027862:	bfda      	itte	le
 8027864:	f103 437f 	addle.w	r3, r3, #4278190080	; 0xff000000
 8027868:	ee07 3a10 	vmovle	s14, r3
 802786c:	eeb5 7a02 	vmovgt.f32	s14, #82	; 0x3e900000  0.2812500
 8027870:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8027874:	ee36 0ac7 	vsub.f32	s0, s13, s14
 8027878:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802787c:	ee30 0a67 	vsub.f32	s0, s0, s15
 8027880:	4770      	bx	lr
 8027882:	eeb0 0a66 	vmov.f32	s0, s13
 8027886:	4770      	bx	lr
 8027888:	ad47d74e 	.word	0xad47d74e
 802788c:	310f74f6 	.word	0x310f74f6
 8027890:	3e999999 	.word	0x3e999999
 8027894:	b493f27c 	.word	0xb493f27c
 8027898:	37d00d01 	.word	0x37d00d01
 802789c:	bab60b61 	.word	0xbab60b61
 80278a0:	3d2aaaab 	.word	0x3d2aaaab
 80278a4:	3f480000 	.word	0x3f480000

080278a8 <__kernel_sinf>:
 80278a8:	ee10 3a10 	vmov	r3, s0
 80278ac:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80278b0:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 80278b4:	da04      	bge.n	80278c0 <__kernel_sinf+0x18>
 80278b6:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80278ba:	ee17 3a90 	vmov	r3, s15
 80278be:	b35b      	cbz	r3, 8027918 <__kernel_sinf+0x70>
 80278c0:	ee20 7a00 	vmul.f32	s14, s0, s0
 80278c4:	eddf 7a15 	vldr	s15, [pc, #84]	; 802791c <__kernel_sinf+0x74>
 80278c8:	ed9f 6a15 	vldr	s12, [pc, #84]	; 8027920 <__kernel_sinf+0x78>
 80278cc:	eea7 6a27 	vfma.f32	s12, s14, s15
 80278d0:	eddf 7a14 	vldr	s15, [pc, #80]	; 8027924 <__kernel_sinf+0x7c>
 80278d4:	eee6 7a07 	vfma.f32	s15, s12, s14
 80278d8:	ed9f 6a13 	vldr	s12, [pc, #76]	; 8027928 <__kernel_sinf+0x80>
 80278dc:	eea7 6a87 	vfma.f32	s12, s15, s14
 80278e0:	eddf 7a12 	vldr	s15, [pc, #72]	; 802792c <__kernel_sinf+0x84>
 80278e4:	ee60 6a07 	vmul.f32	s13, s0, s14
 80278e8:	eee6 7a07 	vfma.f32	s15, s12, s14
 80278ec:	b930      	cbnz	r0, 80278fc <__kernel_sinf+0x54>
 80278ee:	ed9f 6a10 	vldr	s12, [pc, #64]	; 8027930 <__kernel_sinf+0x88>
 80278f2:	eea7 6a27 	vfma.f32	s12, s14, s15
 80278f6:	eea6 0a26 	vfma.f32	s0, s12, s13
 80278fa:	4770      	bx	lr
 80278fc:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 8027900:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 8027904:	eee0 7a86 	vfma.f32	s15, s1, s12
 8027908:	eed7 0a87 	vfnms.f32	s1, s15, s14
 802790c:	eddf 7a09 	vldr	s15, [pc, #36]	; 8027934 <__kernel_sinf+0x8c>
 8027910:	eee6 0aa7 	vfma.f32	s1, s13, s15
 8027914:	ee30 0a60 	vsub.f32	s0, s0, s1
 8027918:	4770      	bx	lr
 802791a:	bf00      	nop
 802791c:	2f2ec9d3 	.word	0x2f2ec9d3
 8027920:	b2d72f34 	.word	0xb2d72f34
 8027924:	3638ef1b 	.word	0x3638ef1b
 8027928:	b9500d01 	.word	0xb9500d01
 802792c:	3c088889 	.word	0x3c088889
 8027930:	be2aaaab 	.word	0xbe2aaaab
 8027934:	3e2aaaab 	.word	0x3e2aaaab

08027938 <__ieee754_rem_pio2f>:
 8027938:	b5f0      	push	{r4, r5, r6, r7, lr}
 802793a:	ee10 6a10 	vmov	r6, s0
 802793e:	4b86      	ldr	r3, [pc, #536]	; (8027b58 <__ieee754_rem_pio2f+0x220>)
 8027940:	f026 4500 	bic.w	r5, r6, #2147483648	; 0x80000000
 8027944:	429d      	cmp	r5, r3
 8027946:	b087      	sub	sp, #28
 8027948:	4604      	mov	r4, r0
 802794a:	dc05      	bgt.n	8027958 <__ieee754_rem_pio2f+0x20>
 802794c:	2300      	movs	r3, #0
 802794e:	ed80 0a00 	vstr	s0, [r0]
 8027952:	6043      	str	r3, [r0, #4]
 8027954:	2000      	movs	r0, #0
 8027956:	e020      	b.n	802799a <__ieee754_rem_pio2f+0x62>
 8027958:	4b80      	ldr	r3, [pc, #512]	; (8027b5c <__ieee754_rem_pio2f+0x224>)
 802795a:	429d      	cmp	r5, r3
 802795c:	dc38      	bgt.n	80279d0 <__ieee754_rem_pio2f+0x98>
 802795e:	2e00      	cmp	r6, #0
 8027960:	ed9f 7a7f 	vldr	s14, [pc, #508]	; 8027b60 <__ieee754_rem_pio2f+0x228>
 8027964:	4b7f      	ldr	r3, [pc, #508]	; (8027b64 <__ieee754_rem_pio2f+0x22c>)
 8027966:	f025 050f 	bic.w	r5, r5, #15
 802796a:	dd18      	ble.n	802799e <__ieee754_rem_pio2f+0x66>
 802796c:	429d      	cmp	r5, r3
 802796e:	ee70 7a47 	vsub.f32	s15, s0, s14
 8027972:	bf09      	itett	eq
 8027974:	ed9f 7a7c 	vldreq	s14, [pc, #496]	; 8027b68 <__ieee754_rem_pio2f+0x230>
 8027978:	ed9f 7a7c 	vldrne	s14, [pc, #496]	; 8027b6c <__ieee754_rem_pio2f+0x234>
 802797c:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 8027980:	ed9f 7a7b 	vldreq	s14, [pc, #492]	; 8027b70 <__ieee754_rem_pio2f+0x238>
 8027984:	ee77 6ac7 	vsub.f32	s13, s15, s14
 8027988:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802798c:	edc0 6a00 	vstr	s13, [r0]
 8027990:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8027994:	edc0 7a01 	vstr	s15, [r0, #4]
 8027998:	2001      	movs	r0, #1
 802799a:	b007      	add	sp, #28
 802799c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802799e:	429d      	cmp	r5, r3
 80279a0:	ee70 7a07 	vadd.f32	s15, s0, s14
 80279a4:	bf09      	itett	eq
 80279a6:	ed9f 7a70 	vldreq	s14, [pc, #448]	; 8027b68 <__ieee754_rem_pio2f+0x230>
 80279aa:	ed9f 7a70 	vldrne	s14, [pc, #448]	; 8027b6c <__ieee754_rem_pio2f+0x234>
 80279ae:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 80279b2:	ed9f 7a6f 	vldreq	s14, [pc, #444]	; 8027b70 <__ieee754_rem_pio2f+0x238>
 80279b6:	ee77 6a87 	vadd.f32	s13, s15, s14
 80279ba:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80279be:	edc0 6a00 	vstr	s13, [r0]
 80279c2:	ee77 7a87 	vadd.f32	s15, s15, s14
 80279c6:	edc0 7a01 	vstr	s15, [r0, #4]
 80279ca:	f04f 30ff 	mov.w	r0, #4294967295
 80279ce:	e7e4      	b.n	802799a <__ieee754_rem_pio2f+0x62>
 80279d0:	4b68      	ldr	r3, [pc, #416]	; (8027b74 <__ieee754_rem_pio2f+0x23c>)
 80279d2:	429d      	cmp	r5, r3
 80279d4:	dc71      	bgt.n	8027aba <__ieee754_rem_pio2f+0x182>
 80279d6:	f000 f8db 	bl	8027b90 <fabsf>
 80279da:	ed9f 7a67 	vldr	s14, [pc, #412]	; 8027b78 <__ieee754_rem_pio2f+0x240>
 80279de:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 80279e2:	eee0 7a07 	vfma.f32	s15, s0, s14
 80279e6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80279ea:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80279ee:	ee17 0a90 	vmov	r0, s15
 80279f2:	eddf 7a5b 	vldr	s15, [pc, #364]	; 8027b60 <__ieee754_rem_pio2f+0x228>
 80279f6:	eea7 0a67 	vfms.f32	s0, s14, s15
 80279fa:	281f      	cmp	r0, #31
 80279fc:	eddf 7a5b 	vldr	s15, [pc, #364]	; 8027b6c <__ieee754_rem_pio2f+0x234>
 8027a00:	ee67 7a27 	vmul.f32	s15, s14, s15
 8027a04:	eeb1 6a47 	vneg.f32	s12, s14
 8027a08:	ee70 6a67 	vsub.f32	s13, s0, s15
 8027a0c:	ee16 2a90 	vmov	r2, s13
 8027a10:	dc1c      	bgt.n	8027a4c <__ieee754_rem_pio2f+0x114>
 8027a12:	495a      	ldr	r1, [pc, #360]	; (8027b7c <__ieee754_rem_pio2f+0x244>)
 8027a14:	1e47      	subs	r7, r0, #1
 8027a16:	f025 03ff 	bic.w	r3, r5, #255	; 0xff
 8027a1a:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 8027a1e:	428b      	cmp	r3, r1
 8027a20:	d014      	beq.n	8027a4c <__ieee754_rem_pio2f+0x114>
 8027a22:	6022      	str	r2, [r4, #0]
 8027a24:	ed94 7a00 	vldr	s14, [r4]
 8027a28:	ee30 0a47 	vsub.f32	s0, s0, s14
 8027a2c:	2e00      	cmp	r6, #0
 8027a2e:	ee30 0a67 	vsub.f32	s0, s0, s15
 8027a32:	ed84 0a01 	vstr	s0, [r4, #4]
 8027a36:	dab0      	bge.n	802799a <__ieee754_rem_pio2f+0x62>
 8027a38:	eeb1 7a47 	vneg.f32	s14, s14
 8027a3c:	eeb1 0a40 	vneg.f32	s0, s0
 8027a40:	ed84 7a00 	vstr	s14, [r4]
 8027a44:	ed84 0a01 	vstr	s0, [r4, #4]
 8027a48:	4240      	negs	r0, r0
 8027a4a:	e7a6      	b.n	802799a <__ieee754_rem_pio2f+0x62>
 8027a4c:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 8027a50:	ebc1 51d5 	rsb	r1, r1, r5, lsr #23
 8027a54:	2908      	cmp	r1, #8
 8027a56:	ea4f 53e5 	mov.w	r3, r5, asr #23
 8027a5a:	dde2      	ble.n	8027a22 <__ieee754_rem_pio2f+0xea>
 8027a5c:	eddf 5a42 	vldr	s11, [pc, #264]	; 8027b68 <__ieee754_rem_pio2f+0x230>
 8027a60:	eef0 6a40 	vmov.f32	s13, s0
 8027a64:	eee6 6a25 	vfma.f32	s13, s12, s11
 8027a68:	ee70 7a66 	vsub.f32	s15, s0, s13
 8027a6c:	eee6 7a25 	vfma.f32	s15, s12, s11
 8027a70:	eddf 5a3f 	vldr	s11, [pc, #252]	; 8027b70 <__ieee754_rem_pio2f+0x238>
 8027a74:	eed7 7a25 	vfnms.f32	s15, s14, s11
 8027a78:	ee76 5ae7 	vsub.f32	s11, s13, s15
 8027a7c:	ee15 2a90 	vmov	r2, s11
 8027a80:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 8027a84:	1a5b      	subs	r3, r3, r1
 8027a86:	2b19      	cmp	r3, #25
 8027a88:	dc04      	bgt.n	8027a94 <__ieee754_rem_pio2f+0x15c>
 8027a8a:	edc4 5a00 	vstr	s11, [r4]
 8027a8e:	eeb0 0a66 	vmov.f32	s0, s13
 8027a92:	e7c7      	b.n	8027a24 <__ieee754_rem_pio2f+0xec>
 8027a94:	eddf 5a3a 	vldr	s11, [pc, #232]	; 8027b80 <__ieee754_rem_pio2f+0x248>
 8027a98:	eeb0 0a66 	vmov.f32	s0, s13
 8027a9c:	eea6 0a25 	vfma.f32	s0, s12, s11
 8027aa0:	ee76 7ac0 	vsub.f32	s15, s13, s0
 8027aa4:	eddf 6a37 	vldr	s13, [pc, #220]	; 8027b84 <__ieee754_rem_pio2f+0x24c>
 8027aa8:	eee6 7a25 	vfma.f32	s15, s12, s11
 8027aac:	eed7 7a26 	vfnms.f32	s15, s14, s13
 8027ab0:	ee30 7a67 	vsub.f32	s14, s0, s15
 8027ab4:	ed84 7a00 	vstr	s14, [r4]
 8027ab8:	e7b4      	b.n	8027a24 <__ieee754_rem_pio2f+0xec>
 8027aba:	f1b5 4fff 	cmp.w	r5, #2139095040	; 0x7f800000
 8027abe:	db06      	blt.n	8027ace <__ieee754_rem_pio2f+0x196>
 8027ac0:	ee70 7a40 	vsub.f32	s15, s0, s0
 8027ac4:	edc0 7a01 	vstr	s15, [r0, #4]
 8027ac8:	edc0 7a00 	vstr	s15, [r0]
 8027acc:	e742      	b.n	8027954 <__ieee754_rem_pio2f+0x1c>
 8027ace:	15ea      	asrs	r2, r5, #23
 8027ad0:	3a86      	subs	r2, #134	; 0x86
 8027ad2:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 8027ad6:	ee07 3a90 	vmov	s15, r3
 8027ada:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8027ade:	eddf 6a2a 	vldr	s13, [pc, #168]	; 8027b88 <__ieee754_rem_pio2f+0x250>
 8027ae2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8027ae6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8027aea:	ed8d 7a03 	vstr	s14, [sp, #12]
 8027aee:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8027af2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8027af6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8027afa:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8027afe:	ed8d 7a04 	vstr	s14, [sp, #16]
 8027b02:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8027b06:	eef5 7a40 	vcmp.f32	s15, #0.0
 8027b0a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027b0e:	edcd 7a05 	vstr	s15, [sp, #20]
 8027b12:	d11e      	bne.n	8027b52 <__ieee754_rem_pio2f+0x21a>
 8027b14:	eeb5 7a40 	vcmp.f32	s14, #0.0
 8027b18:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027b1c:	bf14      	ite	ne
 8027b1e:	2302      	movne	r3, #2
 8027b20:	2301      	moveq	r3, #1
 8027b22:	491a      	ldr	r1, [pc, #104]	; (8027b8c <__ieee754_rem_pio2f+0x254>)
 8027b24:	9101      	str	r1, [sp, #4]
 8027b26:	2102      	movs	r1, #2
 8027b28:	9100      	str	r1, [sp, #0]
 8027b2a:	a803      	add	r0, sp, #12
 8027b2c:	4621      	mov	r1, r4
 8027b2e:	f000 f89d 	bl	8027c6c <__kernel_rem_pio2f>
 8027b32:	2e00      	cmp	r6, #0
 8027b34:	f6bf af31 	bge.w	802799a <__ieee754_rem_pio2f+0x62>
 8027b38:	edd4 7a00 	vldr	s15, [r4]
 8027b3c:	eef1 7a67 	vneg.f32	s15, s15
 8027b40:	edc4 7a00 	vstr	s15, [r4]
 8027b44:	edd4 7a01 	vldr	s15, [r4, #4]
 8027b48:	eef1 7a67 	vneg.f32	s15, s15
 8027b4c:	edc4 7a01 	vstr	s15, [r4, #4]
 8027b50:	e77a      	b.n	8027a48 <__ieee754_rem_pio2f+0x110>
 8027b52:	2303      	movs	r3, #3
 8027b54:	e7e5      	b.n	8027b22 <__ieee754_rem_pio2f+0x1ea>
 8027b56:	bf00      	nop
 8027b58:	3f490fd8 	.word	0x3f490fd8
 8027b5c:	4016cbe3 	.word	0x4016cbe3
 8027b60:	3fc90f80 	.word	0x3fc90f80
 8027b64:	3fc90fd0 	.word	0x3fc90fd0
 8027b68:	37354400 	.word	0x37354400
 8027b6c:	37354443 	.word	0x37354443
 8027b70:	2e85a308 	.word	0x2e85a308
 8027b74:	43490f80 	.word	0x43490f80
 8027b78:	3f22f984 	.word	0x3f22f984
 8027b7c:	0802cf88 	.word	0x0802cf88
 8027b80:	2e85a300 	.word	0x2e85a300
 8027b84:	248d3132 	.word	0x248d3132
 8027b88:	43800000 	.word	0x43800000
 8027b8c:	0802d008 	.word	0x0802d008

08027b90 <fabsf>:
 8027b90:	ee10 3a10 	vmov	r3, s0
 8027b94:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8027b98:	ee00 3a10 	vmov	s0, r3
 8027b9c:	4770      	bx	lr
	...

08027ba0 <scalbnf>:
 8027ba0:	ee10 3a10 	vmov	r3, s0
 8027ba4:	f033 4200 	bics.w	r2, r3, #2147483648	; 0x80000000
 8027ba8:	d02b      	beq.n	8027c02 <scalbnf+0x62>
 8027baa:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 8027bae:	d302      	bcc.n	8027bb6 <scalbnf+0x16>
 8027bb0:	ee30 0a00 	vadd.f32	s0, s0, s0
 8027bb4:	4770      	bx	lr
 8027bb6:	f013 4fff 	tst.w	r3, #2139095040	; 0x7f800000
 8027bba:	d123      	bne.n	8027c04 <scalbnf+0x64>
 8027bbc:	4b24      	ldr	r3, [pc, #144]	; (8027c50 <scalbnf+0xb0>)
 8027bbe:	eddf 7a25 	vldr	s15, [pc, #148]	; 8027c54 <scalbnf+0xb4>
 8027bc2:	4298      	cmp	r0, r3
 8027bc4:	ee20 0a27 	vmul.f32	s0, s0, s15
 8027bc8:	db17      	blt.n	8027bfa <scalbnf+0x5a>
 8027bca:	ee10 3a10 	vmov	r3, s0
 8027bce:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8027bd2:	3a19      	subs	r2, #25
 8027bd4:	f24c 3150 	movw	r1, #50000	; 0xc350
 8027bd8:	4288      	cmp	r0, r1
 8027bda:	dd15      	ble.n	8027c08 <scalbnf+0x68>
 8027bdc:	eddf 7a1e 	vldr	s15, [pc, #120]	; 8027c58 <scalbnf+0xb8>
 8027be0:	eddf 6a1e 	vldr	s13, [pc, #120]	; 8027c5c <scalbnf+0xbc>
 8027be4:	ee10 3a10 	vmov	r3, s0
 8027be8:	eeb0 7a67 	vmov.f32	s14, s15
 8027bec:	2b00      	cmp	r3, #0
 8027bee:	bfb8      	it	lt
 8027bf0:	eef0 7a66 	vmovlt.f32	s15, s13
 8027bf4:	ee27 0a87 	vmul.f32	s0, s15, s14
 8027bf8:	4770      	bx	lr
 8027bfa:	eddf 7a19 	vldr	s15, [pc, #100]	; 8027c60 <scalbnf+0xc0>
 8027bfe:	ee27 0a80 	vmul.f32	s0, s15, s0
 8027c02:	4770      	bx	lr
 8027c04:	0dd2      	lsrs	r2, r2, #23
 8027c06:	e7e5      	b.n	8027bd4 <scalbnf+0x34>
 8027c08:	4410      	add	r0, r2
 8027c0a:	28fe      	cmp	r0, #254	; 0xfe
 8027c0c:	dce6      	bgt.n	8027bdc <scalbnf+0x3c>
 8027c0e:	2800      	cmp	r0, #0
 8027c10:	dd06      	ble.n	8027c20 <scalbnf+0x80>
 8027c12:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8027c16:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 8027c1a:	ee00 3a10 	vmov	s0, r3
 8027c1e:	4770      	bx	lr
 8027c20:	f110 0f16 	cmn.w	r0, #22
 8027c24:	da09      	bge.n	8027c3a <scalbnf+0x9a>
 8027c26:	eddf 7a0e 	vldr	s15, [pc, #56]	; 8027c60 <scalbnf+0xc0>
 8027c2a:	eddf 6a0e 	vldr	s13, [pc, #56]	; 8027c64 <scalbnf+0xc4>
 8027c2e:	ee10 3a10 	vmov	r3, s0
 8027c32:	eeb0 7a67 	vmov.f32	s14, s15
 8027c36:	2b00      	cmp	r3, #0
 8027c38:	e7d9      	b.n	8027bee <scalbnf+0x4e>
 8027c3a:	3019      	adds	r0, #25
 8027c3c:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8027c40:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 8027c44:	ed9f 0a08 	vldr	s0, [pc, #32]	; 8027c68 <scalbnf+0xc8>
 8027c48:	ee07 3a90 	vmov	s15, r3
 8027c4c:	e7d7      	b.n	8027bfe <scalbnf+0x5e>
 8027c4e:	bf00      	nop
 8027c50:	ffff3cb0 	.word	0xffff3cb0
 8027c54:	4c000000 	.word	0x4c000000
 8027c58:	7149f2ca 	.word	0x7149f2ca
 8027c5c:	f149f2ca 	.word	0xf149f2ca
 8027c60:	0da24260 	.word	0x0da24260
 8027c64:	8da24260 	.word	0x8da24260
 8027c68:	33000000 	.word	0x33000000

08027c6c <__kernel_rem_pio2f>:
 8027c6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027c70:	ed2d 8b04 	vpush	{d8-d9}
 8027c74:	b0d9      	sub	sp, #356	; 0x164
 8027c76:	4688      	mov	r8, r1
 8027c78:	9002      	str	r0, [sp, #8]
 8027c7a:	49b8      	ldr	r1, [pc, #736]	; (8027f5c <__kernel_rem_pio2f+0x2f0>)
 8027c7c:	9866      	ldr	r0, [sp, #408]	; 0x198
 8027c7e:	9301      	str	r3, [sp, #4]
 8027c80:	f851 a020 	ldr.w	sl, [r1, r0, lsl #2]
 8027c84:	9901      	ldr	r1, [sp, #4]
 8027c86:	9b67      	ldr	r3, [sp, #412]	; 0x19c
 8027c88:	f101 3bff 	add.w	fp, r1, #4294967295
 8027c8c:	1d11      	adds	r1, r2, #4
 8027c8e:	db25      	blt.n	8027cdc <__kernel_rem_pio2f+0x70>
 8027c90:	1ed0      	subs	r0, r2, #3
 8027c92:	bf48      	it	mi
 8027c94:	1d10      	addmi	r0, r2, #4
 8027c96:	10c0      	asrs	r0, r0, #3
 8027c98:	1c45      	adds	r5, r0, #1
 8027c9a:	00e9      	lsls	r1, r5, #3
 8027c9c:	eba0 070b 	sub.w	r7, r0, fp
 8027ca0:	ed9f 7ab2 	vldr	s14, [pc, #712]	; 8027f6c <__kernel_rem_pio2f+0x300>
 8027ca4:	9103      	str	r1, [sp, #12]
 8027ca6:	eba2 05c5 	sub.w	r5, r2, r5, lsl #3
 8027caa:	eb0a 0c0b 	add.w	ip, sl, fp
 8027cae:	ae1c      	add	r6, sp, #112	; 0x70
 8027cb0:	eb03 0e87 	add.w	lr, r3, r7, lsl #2
 8027cb4:	2400      	movs	r4, #0
 8027cb6:	4564      	cmp	r4, ip
 8027cb8:	dd12      	ble.n	8027ce0 <__kernel_rem_pio2f+0x74>
 8027cba:	9901      	ldr	r1, [sp, #4]
 8027cbc:	ac1c      	add	r4, sp, #112	; 0x70
 8027cbe:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8027cc2:	f50d 7988 	add.w	r9, sp, #272	; 0x110
 8027cc6:	f04f 0c00 	mov.w	ip, #0
 8027cca:	45d4      	cmp	ip, sl
 8027ccc:	dc27      	bgt.n	8027d1e <__kernel_rem_pio2f+0xb2>
 8027cce:	f8dd e008 	ldr.w	lr, [sp, #8]
 8027cd2:	eddf 7aa6 	vldr	s15, [pc, #664]	; 8027f6c <__kernel_rem_pio2f+0x300>
 8027cd6:	4627      	mov	r7, r4
 8027cd8:	2600      	movs	r6, #0
 8027cda:	e016      	b.n	8027d0a <__kernel_rem_pio2f+0x9e>
 8027cdc:	2000      	movs	r0, #0
 8027cde:	e7db      	b.n	8027c98 <__kernel_rem_pio2f+0x2c>
 8027ce0:	42e7      	cmn	r7, r4
 8027ce2:	bf5d      	ittte	pl
 8027ce4:	f85e 1024 	ldrpl.w	r1, [lr, r4, lsl #2]
 8027ce8:	ee07 1a90 	vmovpl	s15, r1
 8027cec:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 8027cf0:	eef0 7a47 	vmovmi.f32	s15, s14
 8027cf4:	ece6 7a01 	vstmia	r6!, {s15}
 8027cf8:	3401      	adds	r4, #1
 8027cfa:	e7dc      	b.n	8027cb6 <__kernel_rem_pio2f+0x4a>
 8027cfc:	ecfe 6a01 	vldmia	lr!, {s13}
 8027d00:	ed97 7a00 	vldr	s14, [r7]
 8027d04:	eee6 7a87 	vfma.f32	s15, s13, s14
 8027d08:	3601      	adds	r6, #1
 8027d0a:	455e      	cmp	r6, fp
 8027d0c:	f1a7 0704 	sub.w	r7, r7, #4
 8027d10:	ddf4      	ble.n	8027cfc <__kernel_rem_pio2f+0x90>
 8027d12:	ece9 7a01 	vstmia	r9!, {s15}
 8027d16:	f10c 0c01 	add.w	ip, ip, #1
 8027d1a:	3404      	adds	r4, #4
 8027d1c:	e7d5      	b.n	8027cca <__kernel_rem_pio2f+0x5e>
 8027d1e:	a908      	add	r1, sp, #32
 8027d20:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8027d24:	eb03 0380 	add.w	r3, r3, r0, lsl #2
 8027d28:	eddf 8a8f 	vldr	s17, [pc, #572]	; 8027f68 <__kernel_rem_pio2f+0x2fc>
 8027d2c:	ed9f 9a8d 	vldr	s18, [pc, #564]	; 8027f64 <__kernel_rem_pio2f+0x2f8>
 8027d30:	9105      	str	r1, [sp, #20]
 8027d32:	9304      	str	r3, [sp, #16]
 8027d34:	4656      	mov	r6, sl
 8027d36:	00b3      	lsls	r3, r6, #2
 8027d38:	9306      	str	r3, [sp, #24]
 8027d3a:	ab58      	add	r3, sp, #352	; 0x160
 8027d3c:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 8027d40:	ac08      	add	r4, sp, #32
 8027d42:	ab44      	add	r3, sp, #272	; 0x110
 8027d44:	ed10 0a14 	vldr	s0, [r0, #-80]	; 0xffffffb0
 8027d48:	46a4      	mov	ip, r4
 8027d4a:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 8027d4e:	4637      	mov	r7, r6
 8027d50:	2f00      	cmp	r7, #0
 8027d52:	f1a0 0004 	sub.w	r0, r0, #4
 8027d56:	dc4a      	bgt.n	8027dee <__kernel_rem_pio2f+0x182>
 8027d58:	4628      	mov	r0, r5
 8027d5a:	9207      	str	r2, [sp, #28]
 8027d5c:	f7ff ff20 	bl	8027ba0 <scalbnf>
 8027d60:	eeb0 8a40 	vmov.f32	s16, s0
 8027d64:	eeb4 0a00 	vmov.f32	s0, #64	; 0x3e000000  0.125
 8027d68:	ee28 0a00 	vmul.f32	s0, s16, s0
 8027d6c:	f7ff fcfc 	bl	8027768 <floorf>
 8027d70:	eef2 7a00 	vmov.f32	s15, #32	; 0x41000000  8.0
 8027d74:	eea0 8a67 	vfms.f32	s16, s0, s15
 8027d78:	2d00      	cmp	r5, #0
 8027d7a:	9a07      	ldr	r2, [sp, #28]
 8027d7c:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 8027d80:	ee17 9a90 	vmov	r9, s15
 8027d84:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8027d88:	ee38 8a67 	vsub.f32	s16, s16, s15
 8027d8c:	dd41      	ble.n	8027e12 <__kernel_rem_pio2f+0x1a6>
 8027d8e:	f106 3cff 	add.w	ip, r6, #4294967295
 8027d92:	ab08      	add	r3, sp, #32
 8027d94:	f1c5 0e08 	rsb	lr, r5, #8
 8027d98:	f853 702c 	ldr.w	r7, [r3, ip, lsl #2]
 8027d9c:	fa47 f00e 	asr.w	r0, r7, lr
 8027da0:	4481      	add	r9, r0
 8027da2:	fa00 f00e 	lsl.w	r0, r0, lr
 8027da6:	1a3f      	subs	r7, r7, r0
 8027da8:	f1c5 0007 	rsb	r0, r5, #7
 8027dac:	f843 702c 	str.w	r7, [r3, ip, lsl #2]
 8027db0:	4107      	asrs	r7, r0
 8027db2:	2f00      	cmp	r7, #0
 8027db4:	dd3c      	ble.n	8027e30 <__kernel_rem_pio2f+0x1c4>
 8027db6:	f04f 0e00 	mov.w	lr, #0
 8027dba:	f109 0901 	add.w	r9, r9, #1
 8027dbe:	4671      	mov	r1, lr
 8027dc0:	4576      	cmp	r6, lr
 8027dc2:	dc67      	bgt.n	8027e94 <__kernel_rem_pio2f+0x228>
 8027dc4:	2d00      	cmp	r5, #0
 8027dc6:	dd03      	ble.n	8027dd0 <__kernel_rem_pio2f+0x164>
 8027dc8:	2d01      	cmp	r5, #1
 8027dca:	d074      	beq.n	8027eb6 <__kernel_rem_pio2f+0x24a>
 8027dcc:	2d02      	cmp	r5, #2
 8027dce:	d07b      	beq.n	8027ec8 <__kernel_rem_pio2f+0x25c>
 8027dd0:	2f02      	cmp	r7, #2
 8027dd2:	d12d      	bne.n	8027e30 <__kernel_rem_pio2f+0x1c4>
 8027dd4:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 8027dd8:	ee30 8a48 	vsub.f32	s16, s0, s16
 8027ddc:	b341      	cbz	r1, 8027e30 <__kernel_rem_pio2f+0x1c4>
 8027dde:	4628      	mov	r0, r5
 8027de0:	9207      	str	r2, [sp, #28]
 8027de2:	f7ff fedd 	bl	8027ba0 <scalbnf>
 8027de6:	9a07      	ldr	r2, [sp, #28]
 8027de8:	ee38 8a40 	vsub.f32	s16, s16, s0
 8027dec:	e020      	b.n	8027e30 <__kernel_rem_pio2f+0x1c4>
 8027dee:	ee60 7a28 	vmul.f32	s15, s0, s17
 8027df2:	3f01      	subs	r7, #1
 8027df4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8027df8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8027dfc:	eea7 0ac9 	vfms.f32	s0, s15, s18
 8027e00:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8027e04:	ecac 0a01 	vstmia	ip!, {s0}
 8027e08:	ed90 0a00 	vldr	s0, [r0]
 8027e0c:	ee37 0a80 	vadd.f32	s0, s15, s0
 8027e10:	e79e      	b.n	8027d50 <__kernel_rem_pio2f+0xe4>
 8027e12:	d105      	bne.n	8027e20 <__kernel_rem_pio2f+0x1b4>
 8027e14:	1e70      	subs	r0, r6, #1
 8027e16:	ab08      	add	r3, sp, #32
 8027e18:	f853 7020 	ldr.w	r7, [r3, r0, lsl #2]
 8027e1c:	11ff      	asrs	r7, r7, #7
 8027e1e:	e7c8      	b.n	8027db2 <__kernel_rem_pio2f+0x146>
 8027e20:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8027e24:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8027e28:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027e2c:	da30      	bge.n	8027e90 <__kernel_rem_pio2f+0x224>
 8027e2e:	2700      	movs	r7, #0
 8027e30:	eeb5 8a40 	vcmp.f32	s16, #0.0
 8027e34:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027e38:	f040 809a 	bne.w	8027f70 <__kernel_rem_pio2f+0x304>
 8027e3c:	1e74      	subs	r4, r6, #1
 8027e3e:	46a4      	mov	ip, r4
 8027e40:	2100      	movs	r1, #0
 8027e42:	45d4      	cmp	ip, sl
 8027e44:	da47      	bge.n	8027ed6 <__kernel_rem_pio2f+0x26a>
 8027e46:	2900      	cmp	r1, #0
 8027e48:	d063      	beq.n	8027f12 <__kernel_rem_pio2f+0x2a6>
 8027e4a:	ab08      	add	r3, sp, #32
 8027e4c:	3d08      	subs	r5, #8
 8027e4e:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 8027e52:	2b00      	cmp	r3, #0
 8027e54:	d07f      	beq.n	8027f56 <__kernel_rem_pio2f+0x2ea>
 8027e56:	4628      	mov	r0, r5
 8027e58:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 8027e5c:	f7ff fea0 	bl	8027ba0 <scalbnf>
 8027e60:	1c63      	adds	r3, r4, #1
 8027e62:	aa44      	add	r2, sp, #272	; 0x110
 8027e64:	ed9f 7a40 	vldr	s14, [pc, #256]	; 8027f68 <__kernel_rem_pio2f+0x2fc>
 8027e68:	0099      	lsls	r1, r3, #2
 8027e6a:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 8027e6e:	4623      	mov	r3, r4
 8027e70:	2b00      	cmp	r3, #0
 8027e72:	f280 80ad 	bge.w	8027fd0 <__kernel_rem_pio2f+0x364>
 8027e76:	4623      	mov	r3, r4
 8027e78:	2b00      	cmp	r3, #0
 8027e7a:	f2c0 80cb 	blt.w	8028014 <__kernel_rem_pio2f+0x3a8>
 8027e7e:	aa44      	add	r2, sp, #272	; 0x110
 8027e80:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 8027e84:	4e36      	ldr	r6, [pc, #216]	; (8027f60 <__kernel_rem_pio2f+0x2f4>)
 8027e86:	eddf 7a39 	vldr	s15, [pc, #228]	; 8027f6c <__kernel_rem_pio2f+0x300>
 8027e8a:	2000      	movs	r0, #0
 8027e8c:	1ae2      	subs	r2, r4, r3
 8027e8e:	e0b6      	b.n	8027ffe <__kernel_rem_pio2f+0x392>
 8027e90:	2702      	movs	r7, #2
 8027e92:	e790      	b.n	8027db6 <__kernel_rem_pio2f+0x14a>
 8027e94:	6820      	ldr	r0, [r4, #0]
 8027e96:	b949      	cbnz	r1, 8027eac <__kernel_rem_pio2f+0x240>
 8027e98:	b118      	cbz	r0, 8027ea2 <__kernel_rem_pio2f+0x236>
 8027e9a:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8027e9e:	6020      	str	r0, [r4, #0]
 8027ea0:	2001      	movs	r0, #1
 8027ea2:	f10e 0e01 	add.w	lr, lr, #1
 8027ea6:	3404      	adds	r4, #4
 8027ea8:	4601      	mov	r1, r0
 8027eaa:	e789      	b.n	8027dc0 <__kernel_rem_pio2f+0x154>
 8027eac:	f1c0 00ff 	rsb	r0, r0, #255	; 0xff
 8027eb0:	6020      	str	r0, [r4, #0]
 8027eb2:	4608      	mov	r0, r1
 8027eb4:	e7f5      	b.n	8027ea2 <__kernel_rem_pio2f+0x236>
 8027eb6:	1e74      	subs	r4, r6, #1
 8027eb8:	ab08      	add	r3, sp, #32
 8027eba:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8027ebe:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8027ec2:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 8027ec6:	e783      	b.n	8027dd0 <__kernel_rem_pio2f+0x164>
 8027ec8:	1e74      	subs	r4, r6, #1
 8027eca:	ab08      	add	r3, sp, #32
 8027ecc:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8027ed0:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 8027ed4:	e7f5      	b.n	8027ec2 <__kernel_rem_pio2f+0x256>
 8027ed6:	ab08      	add	r3, sp, #32
 8027ed8:	f853 002c 	ldr.w	r0, [r3, ip, lsl #2]
 8027edc:	f10c 3cff 	add.w	ip, ip, #4294967295
 8027ee0:	4301      	orrs	r1, r0
 8027ee2:	e7ae      	b.n	8027e42 <__kernel_rem_pio2f+0x1d6>
 8027ee4:	3001      	adds	r0, #1
 8027ee6:	f854 7d04 	ldr.w	r7, [r4, #-4]!
 8027eea:	2f00      	cmp	r7, #0
 8027eec:	d0fa      	beq.n	8027ee4 <__kernel_rem_pio2f+0x278>
 8027eee:	9b06      	ldr	r3, [sp, #24]
 8027ef0:	f503 73b0 	add.w	r3, r3, #352	; 0x160
 8027ef4:	eb0d 0403 	add.w	r4, sp, r3
 8027ef8:	9b01      	ldr	r3, [sp, #4]
 8027efa:	18f7      	adds	r7, r6, r3
 8027efc:	ab1c      	add	r3, sp, #112	; 0x70
 8027efe:	f106 0c01 	add.w	ip, r6, #1
 8027f02:	3c4c      	subs	r4, #76	; 0x4c
 8027f04:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 8027f08:	4430      	add	r0, r6
 8027f0a:	4560      	cmp	r0, ip
 8027f0c:	da04      	bge.n	8027f18 <__kernel_rem_pio2f+0x2ac>
 8027f0e:	4606      	mov	r6, r0
 8027f10:	e711      	b.n	8027d36 <__kernel_rem_pio2f+0xca>
 8027f12:	9c05      	ldr	r4, [sp, #20]
 8027f14:	2001      	movs	r0, #1
 8027f16:	e7e6      	b.n	8027ee6 <__kernel_rem_pio2f+0x27a>
 8027f18:	9b04      	ldr	r3, [sp, #16]
 8027f1a:	f8dd e008 	ldr.w	lr, [sp, #8]
 8027f1e:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8027f22:	9306      	str	r3, [sp, #24]
 8027f24:	ee07 3a90 	vmov	s15, r3
 8027f28:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8027f2c:	2600      	movs	r6, #0
 8027f2e:	ece7 7a01 	vstmia	r7!, {s15}
 8027f32:	eddf 7a0e 	vldr	s15, [pc, #56]	; 8027f6c <__kernel_rem_pio2f+0x300>
 8027f36:	46b9      	mov	r9, r7
 8027f38:	455e      	cmp	r6, fp
 8027f3a:	dd04      	ble.n	8027f46 <__kernel_rem_pio2f+0x2da>
 8027f3c:	ece4 7a01 	vstmia	r4!, {s15}
 8027f40:	f10c 0c01 	add.w	ip, ip, #1
 8027f44:	e7e1      	b.n	8027f0a <__kernel_rem_pio2f+0x29e>
 8027f46:	ecfe 6a01 	vldmia	lr!, {s13}
 8027f4a:	ed39 7a01 	vldmdb	r9!, {s14}
 8027f4e:	3601      	adds	r6, #1
 8027f50:	eee6 7a87 	vfma.f32	s15, s13, s14
 8027f54:	e7f0      	b.n	8027f38 <__kernel_rem_pio2f+0x2cc>
 8027f56:	3c01      	subs	r4, #1
 8027f58:	e777      	b.n	8027e4a <__kernel_rem_pio2f+0x1de>
 8027f5a:	bf00      	nop
 8027f5c:	0802d34c 	.word	0x0802d34c
 8027f60:	0802d320 	.word	0x0802d320
 8027f64:	43800000 	.word	0x43800000
 8027f68:	3b800000 	.word	0x3b800000
 8027f6c:	00000000 	.word	0x00000000
 8027f70:	9b03      	ldr	r3, [sp, #12]
 8027f72:	eeb0 0a48 	vmov.f32	s0, s16
 8027f76:	1a98      	subs	r0, r3, r2
 8027f78:	f7ff fe12 	bl	8027ba0 <scalbnf>
 8027f7c:	ed1f 7a07 	vldr	s14, [pc, #-28]	; 8027f64 <__kernel_rem_pio2f+0x2f8>
 8027f80:	eeb4 0ac7 	vcmpe.f32	s0, s14
 8027f84:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027f88:	db19      	blt.n	8027fbe <__kernel_rem_pio2f+0x352>
 8027f8a:	ed5f 7a09 	vldr	s15, [pc, #-36]	; 8027f68 <__kernel_rem_pio2f+0x2fc>
 8027f8e:	ee60 7a27 	vmul.f32	s15, s0, s15
 8027f92:	aa08      	add	r2, sp, #32
 8027f94:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8027f98:	1c74      	adds	r4, r6, #1
 8027f9a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8027f9e:	3508      	adds	r5, #8
 8027fa0:	eea7 0ac7 	vfms.f32	s0, s15, s14
 8027fa4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8027fa8:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8027fac:	ee10 3a10 	vmov	r3, s0
 8027fb0:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 8027fb4:	ee17 3a90 	vmov	r3, s15
 8027fb8:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 8027fbc:	e74b      	b.n	8027e56 <__kernel_rem_pio2f+0x1ea>
 8027fbe:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8027fc2:	aa08      	add	r2, sp, #32
 8027fc4:	ee10 3a10 	vmov	r3, s0
 8027fc8:	4634      	mov	r4, r6
 8027fca:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 8027fce:	e742      	b.n	8027e56 <__kernel_rem_pio2f+0x1ea>
 8027fd0:	a808      	add	r0, sp, #32
 8027fd2:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 8027fd6:	9001      	str	r0, [sp, #4]
 8027fd8:	ee07 0a90 	vmov	s15, r0
 8027fdc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8027fe0:	3b01      	subs	r3, #1
 8027fe2:	ee67 7a80 	vmul.f32	s15, s15, s0
 8027fe6:	ee20 0a07 	vmul.f32	s0, s0, s14
 8027fea:	ed62 7a01 	vstmdb	r2!, {s15}
 8027fee:	e73f      	b.n	8027e70 <__kernel_rem_pio2f+0x204>
 8027ff0:	ecf6 6a01 	vldmia	r6!, {s13}
 8027ff4:	ecb5 7a01 	vldmia	r5!, {s14}
 8027ff8:	eee6 7a87 	vfma.f32	s15, s13, s14
 8027ffc:	3001      	adds	r0, #1
 8027ffe:	4550      	cmp	r0, sl
 8028000:	dc01      	bgt.n	8028006 <__kernel_rem_pio2f+0x39a>
 8028002:	4290      	cmp	r0, r2
 8028004:	ddf4      	ble.n	8027ff0 <__kernel_rem_pio2f+0x384>
 8028006:	a858      	add	r0, sp, #352	; 0x160
 8028008:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 802800c:	ed42 7a28 	vstr	s15, [r2, #-160]	; 0xffffff60
 8028010:	3b01      	subs	r3, #1
 8028012:	e731      	b.n	8027e78 <__kernel_rem_pio2f+0x20c>
 8028014:	9b66      	ldr	r3, [sp, #408]	; 0x198
 8028016:	2b02      	cmp	r3, #2
 8028018:	dc09      	bgt.n	802802e <__kernel_rem_pio2f+0x3c2>
 802801a:	2b00      	cmp	r3, #0
 802801c:	dc2b      	bgt.n	8028076 <__kernel_rem_pio2f+0x40a>
 802801e:	d044      	beq.n	80280aa <__kernel_rem_pio2f+0x43e>
 8028020:	f009 0007 	and.w	r0, r9, #7
 8028024:	b059      	add	sp, #356	; 0x164
 8028026:	ecbd 8b04 	vpop	{d8-d9}
 802802a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802802e:	9b66      	ldr	r3, [sp, #408]	; 0x198
 8028030:	2b03      	cmp	r3, #3
 8028032:	d1f5      	bne.n	8028020 <__kernel_rem_pio2f+0x3b4>
 8028034:	aa30      	add	r2, sp, #192	; 0xc0
 8028036:	1f0b      	subs	r3, r1, #4
 8028038:	4413      	add	r3, r2
 802803a:	461a      	mov	r2, r3
 802803c:	4620      	mov	r0, r4
 802803e:	2800      	cmp	r0, #0
 8028040:	f1a2 0204 	sub.w	r2, r2, #4
 8028044:	dc52      	bgt.n	80280ec <__kernel_rem_pio2f+0x480>
 8028046:	4622      	mov	r2, r4
 8028048:	2a01      	cmp	r2, #1
 802804a:	f1a3 0304 	sub.w	r3, r3, #4
 802804e:	dc5d      	bgt.n	802810c <__kernel_rem_pio2f+0x4a0>
 8028050:	ab30      	add	r3, sp, #192	; 0xc0
 8028052:	ed5f 7a3a 	vldr	s15, [pc, #-232]	; 8027f6c <__kernel_rem_pio2f+0x300>
 8028056:	440b      	add	r3, r1
 8028058:	2c01      	cmp	r4, #1
 802805a:	dc67      	bgt.n	802812c <__kernel_rem_pio2f+0x4c0>
 802805c:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 8028060:	ed9d 7a31 	vldr	s14, [sp, #196]	; 0xc4
 8028064:	2f00      	cmp	r7, #0
 8028066:	d167      	bne.n	8028138 <__kernel_rem_pio2f+0x4cc>
 8028068:	edc8 6a00 	vstr	s13, [r8]
 802806c:	ed88 7a01 	vstr	s14, [r8, #4]
 8028070:	edc8 7a02 	vstr	s15, [r8, #8]
 8028074:	e7d4      	b.n	8028020 <__kernel_rem_pio2f+0x3b4>
 8028076:	ab30      	add	r3, sp, #192	; 0xc0
 8028078:	ed1f 7a44 	vldr	s14, [pc, #-272]	; 8027f6c <__kernel_rem_pio2f+0x300>
 802807c:	440b      	add	r3, r1
 802807e:	4622      	mov	r2, r4
 8028080:	2a00      	cmp	r2, #0
 8028082:	da24      	bge.n	80280ce <__kernel_rem_pio2f+0x462>
 8028084:	b34f      	cbz	r7, 80280da <__kernel_rem_pio2f+0x46e>
 8028086:	eef1 7a47 	vneg.f32	s15, s14
 802808a:	edc8 7a00 	vstr	s15, [r8]
 802808e:	eddd 7a30 	vldr	s15, [sp, #192]	; 0xc0
 8028092:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8028096:	aa31      	add	r2, sp, #196	; 0xc4
 8028098:	2301      	movs	r3, #1
 802809a:	429c      	cmp	r4, r3
 802809c:	da20      	bge.n	80280e0 <__kernel_rem_pio2f+0x474>
 802809e:	b10f      	cbz	r7, 80280a4 <__kernel_rem_pio2f+0x438>
 80280a0:	eef1 7a67 	vneg.f32	s15, s15
 80280a4:	edc8 7a01 	vstr	s15, [r8, #4]
 80280a8:	e7ba      	b.n	8028020 <__kernel_rem_pio2f+0x3b4>
 80280aa:	ab30      	add	r3, sp, #192	; 0xc0
 80280ac:	ed5f 7a51 	vldr	s15, [pc, #-324]	; 8027f6c <__kernel_rem_pio2f+0x300>
 80280b0:	440b      	add	r3, r1
 80280b2:	2c00      	cmp	r4, #0
 80280b4:	da05      	bge.n	80280c2 <__kernel_rem_pio2f+0x456>
 80280b6:	b10f      	cbz	r7, 80280bc <__kernel_rem_pio2f+0x450>
 80280b8:	eef1 7a67 	vneg.f32	s15, s15
 80280bc:	edc8 7a00 	vstr	s15, [r8]
 80280c0:	e7ae      	b.n	8028020 <__kernel_rem_pio2f+0x3b4>
 80280c2:	ed33 7a01 	vldmdb	r3!, {s14}
 80280c6:	3c01      	subs	r4, #1
 80280c8:	ee77 7a87 	vadd.f32	s15, s15, s14
 80280cc:	e7f1      	b.n	80280b2 <__kernel_rem_pio2f+0x446>
 80280ce:	ed73 7a01 	vldmdb	r3!, {s15}
 80280d2:	3a01      	subs	r2, #1
 80280d4:	ee37 7a27 	vadd.f32	s14, s14, s15
 80280d8:	e7d2      	b.n	8028080 <__kernel_rem_pio2f+0x414>
 80280da:	eef0 7a47 	vmov.f32	s15, s14
 80280de:	e7d4      	b.n	802808a <__kernel_rem_pio2f+0x41e>
 80280e0:	ecb2 7a01 	vldmia	r2!, {s14}
 80280e4:	3301      	adds	r3, #1
 80280e6:	ee77 7a87 	vadd.f32	s15, s15, s14
 80280ea:	e7d6      	b.n	802809a <__kernel_rem_pio2f+0x42e>
 80280ec:	edd2 7a00 	vldr	s15, [r2]
 80280f0:	edd2 6a01 	vldr	s13, [r2, #4]
 80280f4:	ee37 7aa6 	vadd.f32	s14, s15, s13
 80280f8:	3801      	subs	r0, #1
 80280fa:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80280fe:	ed82 7a00 	vstr	s14, [r2]
 8028102:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8028106:	edc2 7a01 	vstr	s15, [r2, #4]
 802810a:	e798      	b.n	802803e <__kernel_rem_pio2f+0x3d2>
 802810c:	edd3 7a00 	vldr	s15, [r3]
 8028110:	edd3 6a01 	vldr	s13, [r3, #4]
 8028114:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8028118:	3a01      	subs	r2, #1
 802811a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802811e:	ed83 7a00 	vstr	s14, [r3]
 8028122:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8028126:	edc3 7a01 	vstr	s15, [r3, #4]
 802812a:	e78d      	b.n	8028048 <__kernel_rem_pio2f+0x3dc>
 802812c:	ed33 7a01 	vldmdb	r3!, {s14}
 8028130:	3c01      	subs	r4, #1
 8028132:	ee77 7a87 	vadd.f32	s15, s15, s14
 8028136:	e78f      	b.n	8028058 <__kernel_rem_pio2f+0x3ec>
 8028138:	eef1 6a66 	vneg.f32	s13, s13
 802813c:	eeb1 7a47 	vneg.f32	s14, s14
 8028140:	edc8 6a00 	vstr	s13, [r8]
 8028144:	ed88 7a01 	vstr	s14, [r8, #4]
 8028148:	eef1 7a67 	vneg.f32	s15, s15
 802814c:	e790      	b.n	8028070 <__kernel_rem_pio2f+0x404>
 802814e:	bf00      	nop

08028150 <abort>:
 8028150:	b508      	push	{r3, lr}
 8028152:	2006      	movs	r0, #6
 8028154:	f000 fa3a 	bl	80285cc <raise>
 8028158:	2001      	movs	r0, #1
 802815a:	f7da f823 	bl	80021a4 <_exit>
	...

08028160 <__assert_func>:
 8028160:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8028162:	4614      	mov	r4, r2
 8028164:	461a      	mov	r2, r3
 8028166:	4b09      	ldr	r3, [pc, #36]	; (802818c <__assert_func+0x2c>)
 8028168:	681b      	ldr	r3, [r3, #0]
 802816a:	4605      	mov	r5, r0
 802816c:	68d8      	ldr	r0, [r3, #12]
 802816e:	b14c      	cbz	r4, 8028184 <__assert_func+0x24>
 8028170:	4b07      	ldr	r3, [pc, #28]	; (8028190 <__assert_func+0x30>)
 8028172:	9100      	str	r1, [sp, #0]
 8028174:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8028178:	4906      	ldr	r1, [pc, #24]	; (8028194 <__assert_func+0x34>)
 802817a:	462b      	mov	r3, r5
 802817c:	f000 f982 	bl	8028484 <fiprintf>
 8028180:	f7ff ffe6 	bl	8028150 <abort>
 8028184:	4b04      	ldr	r3, [pc, #16]	; (8028198 <__assert_func+0x38>)
 8028186:	461c      	mov	r4, r3
 8028188:	e7f3      	b.n	8028172 <__assert_func+0x12>
 802818a:	bf00      	nop
 802818c:	20000160 	.word	0x20000160
 8028190:	0802d358 	.word	0x0802d358
 8028194:	0802d365 	.word	0x0802d365
 8028198:	0802d393 	.word	0x0802d393

0802819c <atexit>:
 802819c:	2300      	movs	r3, #0
 802819e:	4601      	mov	r1, r0
 80281a0:	461a      	mov	r2, r3
 80281a2:	4618      	mov	r0, r3
 80281a4:	f000 bb16 	b.w	80287d4 <__register_exitproc>

080281a8 <malloc>:
 80281a8:	4b02      	ldr	r3, [pc, #8]	; (80281b4 <malloc+0xc>)
 80281aa:	4601      	mov	r1, r0
 80281ac:	6818      	ldr	r0, [r3, #0]
 80281ae:	f000 b82b 	b.w	8028208 <_malloc_r>
 80281b2:	bf00      	nop
 80281b4:	20000160 	.word	0x20000160

080281b8 <free>:
 80281b8:	4b02      	ldr	r3, [pc, #8]	; (80281c4 <free+0xc>)
 80281ba:	4601      	mov	r1, r0
 80281bc:	6818      	ldr	r0, [r3, #0]
 80281be:	f000 bb67 	b.w	8028890 <_free_r>
 80281c2:	bf00      	nop
 80281c4:	20000160 	.word	0x20000160

080281c8 <sbrk_aligned>:
 80281c8:	b570      	push	{r4, r5, r6, lr}
 80281ca:	4e0e      	ldr	r6, [pc, #56]	; (8028204 <sbrk_aligned+0x3c>)
 80281cc:	460c      	mov	r4, r1
 80281ce:	6831      	ldr	r1, [r6, #0]
 80281d0:	4605      	mov	r5, r0
 80281d2:	b911      	cbnz	r1, 80281da <sbrk_aligned+0x12>
 80281d4:	f000 faa0 	bl	8028718 <_sbrk_r>
 80281d8:	6030      	str	r0, [r6, #0]
 80281da:	4621      	mov	r1, r4
 80281dc:	4628      	mov	r0, r5
 80281de:	f000 fa9b 	bl	8028718 <_sbrk_r>
 80281e2:	1c43      	adds	r3, r0, #1
 80281e4:	d00a      	beq.n	80281fc <sbrk_aligned+0x34>
 80281e6:	1cc4      	adds	r4, r0, #3
 80281e8:	f024 0403 	bic.w	r4, r4, #3
 80281ec:	42a0      	cmp	r0, r4
 80281ee:	d007      	beq.n	8028200 <sbrk_aligned+0x38>
 80281f0:	1a21      	subs	r1, r4, r0
 80281f2:	4628      	mov	r0, r5
 80281f4:	f000 fa90 	bl	8028718 <_sbrk_r>
 80281f8:	3001      	adds	r0, #1
 80281fa:	d101      	bne.n	8028200 <sbrk_aligned+0x38>
 80281fc:	f04f 34ff 	mov.w	r4, #4294967295
 8028200:	4620      	mov	r0, r4
 8028202:	bd70      	pop	{r4, r5, r6, pc}
 8028204:	20014114 	.word	0x20014114

08028208 <_malloc_r>:
 8028208:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802820c:	1ccd      	adds	r5, r1, #3
 802820e:	f025 0503 	bic.w	r5, r5, #3
 8028212:	3508      	adds	r5, #8
 8028214:	2d0c      	cmp	r5, #12
 8028216:	bf38      	it	cc
 8028218:	250c      	movcc	r5, #12
 802821a:	2d00      	cmp	r5, #0
 802821c:	4607      	mov	r7, r0
 802821e:	db01      	blt.n	8028224 <_malloc_r+0x1c>
 8028220:	42a9      	cmp	r1, r5
 8028222:	d905      	bls.n	8028230 <_malloc_r+0x28>
 8028224:	230c      	movs	r3, #12
 8028226:	603b      	str	r3, [r7, #0]
 8028228:	2600      	movs	r6, #0
 802822a:	4630      	mov	r0, r6
 802822c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8028230:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8028304 <_malloc_r+0xfc>
 8028234:	f000 f868 	bl	8028308 <__malloc_lock>
 8028238:	f8d8 3000 	ldr.w	r3, [r8]
 802823c:	461c      	mov	r4, r3
 802823e:	bb5c      	cbnz	r4, 8028298 <_malloc_r+0x90>
 8028240:	4629      	mov	r1, r5
 8028242:	4638      	mov	r0, r7
 8028244:	f7ff ffc0 	bl	80281c8 <sbrk_aligned>
 8028248:	1c43      	adds	r3, r0, #1
 802824a:	4604      	mov	r4, r0
 802824c:	d155      	bne.n	80282fa <_malloc_r+0xf2>
 802824e:	f8d8 4000 	ldr.w	r4, [r8]
 8028252:	4626      	mov	r6, r4
 8028254:	2e00      	cmp	r6, #0
 8028256:	d145      	bne.n	80282e4 <_malloc_r+0xdc>
 8028258:	2c00      	cmp	r4, #0
 802825a:	d048      	beq.n	80282ee <_malloc_r+0xe6>
 802825c:	6823      	ldr	r3, [r4, #0]
 802825e:	4631      	mov	r1, r6
 8028260:	4638      	mov	r0, r7
 8028262:	eb04 0903 	add.w	r9, r4, r3
 8028266:	f000 fa57 	bl	8028718 <_sbrk_r>
 802826a:	4581      	cmp	r9, r0
 802826c:	d13f      	bne.n	80282ee <_malloc_r+0xe6>
 802826e:	6821      	ldr	r1, [r4, #0]
 8028270:	1a6d      	subs	r5, r5, r1
 8028272:	4629      	mov	r1, r5
 8028274:	4638      	mov	r0, r7
 8028276:	f7ff ffa7 	bl	80281c8 <sbrk_aligned>
 802827a:	3001      	adds	r0, #1
 802827c:	d037      	beq.n	80282ee <_malloc_r+0xe6>
 802827e:	6823      	ldr	r3, [r4, #0]
 8028280:	442b      	add	r3, r5
 8028282:	6023      	str	r3, [r4, #0]
 8028284:	f8d8 3000 	ldr.w	r3, [r8]
 8028288:	2b00      	cmp	r3, #0
 802828a:	d038      	beq.n	80282fe <_malloc_r+0xf6>
 802828c:	685a      	ldr	r2, [r3, #4]
 802828e:	42a2      	cmp	r2, r4
 8028290:	d12b      	bne.n	80282ea <_malloc_r+0xe2>
 8028292:	2200      	movs	r2, #0
 8028294:	605a      	str	r2, [r3, #4]
 8028296:	e00f      	b.n	80282b8 <_malloc_r+0xb0>
 8028298:	6822      	ldr	r2, [r4, #0]
 802829a:	1b52      	subs	r2, r2, r5
 802829c:	d41f      	bmi.n	80282de <_malloc_r+0xd6>
 802829e:	2a0b      	cmp	r2, #11
 80282a0:	d917      	bls.n	80282d2 <_malloc_r+0xca>
 80282a2:	1961      	adds	r1, r4, r5
 80282a4:	42a3      	cmp	r3, r4
 80282a6:	6025      	str	r5, [r4, #0]
 80282a8:	bf18      	it	ne
 80282aa:	6059      	strne	r1, [r3, #4]
 80282ac:	6863      	ldr	r3, [r4, #4]
 80282ae:	bf08      	it	eq
 80282b0:	f8c8 1000 	streq.w	r1, [r8]
 80282b4:	5162      	str	r2, [r4, r5]
 80282b6:	604b      	str	r3, [r1, #4]
 80282b8:	4638      	mov	r0, r7
 80282ba:	f104 060b 	add.w	r6, r4, #11
 80282be:	f000 f829 	bl	8028314 <__malloc_unlock>
 80282c2:	f026 0607 	bic.w	r6, r6, #7
 80282c6:	1d23      	adds	r3, r4, #4
 80282c8:	1af2      	subs	r2, r6, r3
 80282ca:	d0ae      	beq.n	802822a <_malloc_r+0x22>
 80282cc:	1b9b      	subs	r3, r3, r6
 80282ce:	50a3      	str	r3, [r4, r2]
 80282d0:	e7ab      	b.n	802822a <_malloc_r+0x22>
 80282d2:	42a3      	cmp	r3, r4
 80282d4:	6862      	ldr	r2, [r4, #4]
 80282d6:	d1dd      	bne.n	8028294 <_malloc_r+0x8c>
 80282d8:	f8c8 2000 	str.w	r2, [r8]
 80282dc:	e7ec      	b.n	80282b8 <_malloc_r+0xb0>
 80282de:	4623      	mov	r3, r4
 80282e0:	6864      	ldr	r4, [r4, #4]
 80282e2:	e7ac      	b.n	802823e <_malloc_r+0x36>
 80282e4:	4634      	mov	r4, r6
 80282e6:	6876      	ldr	r6, [r6, #4]
 80282e8:	e7b4      	b.n	8028254 <_malloc_r+0x4c>
 80282ea:	4613      	mov	r3, r2
 80282ec:	e7cc      	b.n	8028288 <_malloc_r+0x80>
 80282ee:	230c      	movs	r3, #12
 80282f0:	603b      	str	r3, [r7, #0]
 80282f2:	4638      	mov	r0, r7
 80282f4:	f000 f80e 	bl	8028314 <__malloc_unlock>
 80282f8:	e797      	b.n	802822a <_malloc_r+0x22>
 80282fa:	6025      	str	r5, [r4, #0]
 80282fc:	e7dc      	b.n	80282b8 <_malloc_r+0xb0>
 80282fe:	605b      	str	r3, [r3, #4]
 8028300:	deff      	udf	#255	; 0xff
 8028302:	bf00      	nop
 8028304:	20014110 	.word	0x20014110

08028308 <__malloc_lock>:
 8028308:	4801      	ldr	r0, [pc, #4]	; (8028310 <__malloc_lock+0x8>)
 802830a:	f000 ba52 	b.w	80287b2 <__retarget_lock_acquire_recursive>
 802830e:	bf00      	nop
 8028310:	20014259 	.word	0x20014259

08028314 <__malloc_unlock>:
 8028314:	4801      	ldr	r0, [pc, #4]	; (802831c <__malloc_unlock+0x8>)
 8028316:	f000 ba4d 	b.w	80287b4 <__retarget_lock_release_recursive>
 802831a:	bf00      	nop
 802831c:	20014259 	.word	0x20014259

08028320 <__cxa_atexit>:
 8028320:	b510      	push	{r4, lr}
 8028322:	4c05      	ldr	r4, [pc, #20]	; (8028338 <__cxa_atexit+0x18>)
 8028324:	4613      	mov	r3, r2
 8028326:	b12c      	cbz	r4, 8028334 <__cxa_atexit+0x14>
 8028328:	460a      	mov	r2, r1
 802832a:	4601      	mov	r1, r0
 802832c:	2002      	movs	r0, #2
 802832e:	f000 fa51 	bl	80287d4 <__register_exitproc>
 8028332:	bd10      	pop	{r4, pc}
 8028334:	4620      	mov	r0, r4
 8028336:	e7fc      	b.n	8028332 <__cxa_atexit+0x12>
 8028338:	080287d5 	.word	0x080287d5

0802833c <std>:
 802833c:	2300      	movs	r3, #0
 802833e:	b510      	push	{r4, lr}
 8028340:	4604      	mov	r4, r0
 8028342:	e9c0 3300 	strd	r3, r3, [r0]
 8028346:	e9c0 3304 	strd	r3, r3, [r0, #16]
 802834a:	6083      	str	r3, [r0, #8]
 802834c:	8181      	strh	r1, [r0, #12]
 802834e:	6643      	str	r3, [r0, #100]	; 0x64
 8028350:	81c2      	strh	r2, [r0, #14]
 8028352:	6183      	str	r3, [r0, #24]
 8028354:	4619      	mov	r1, r3
 8028356:	2208      	movs	r2, #8
 8028358:	305c      	adds	r0, #92	; 0x5c
 802835a:	f000 f906 	bl	802856a <memset>
 802835e:	4b0d      	ldr	r3, [pc, #52]	; (8028394 <std+0x58>)
 8028360:	6263      	str	r3, [r4, #36]	; 0x24
 8028362:	4b0d      	ldr	r3, [pc, #52]	; (8028398 <std+0x5c>)
 8028364:	62a3      	str	r3, [r4, #40]	; 0x28
 8028366:	4b0d      	ldr	r3, [pc, #52]	; (802839c <std+0x60>)
 8028368:	62e3      	str	r3, [r4, #44]	; 0x2c
 802836a:	4b0d      	ldr	r3, [pc, #52]	; (80283a0 <std+0x64>)
 802836c:	6323      	str	r3, [r4, #48]	; 0x30
 802836e:	4b0d      	ldr	r3, [pc, #52]	; (80283a4 <std+0x68>)
 8028370:	6224      	str	r4, [r4, #32]
 8028372:	429c      	cmp	r4, r3
 8028374:	d006      	beq.n	8028384 <std+0x48>
 8028376:	f103 0268 	add.w	r2, r3, #104	; 0x68
 802837a:	4294      	cmp	r4, r2
 802837c:	d002      	beq.n	8028384 <std+0x48>
 802837e:	33d0      	adds	r3, #208	; 0xd0
 8028380:	429c      	cmp	r4, r3
 8028382:	d105      	bne.n	8028390 <std+0x54>
 8028384:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8028388:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802838c:	f000 ba10 	b.w	80287b0 <__retarget_lock_init_recursive>
 8028390:	bd10      	pop	{r4, pc}
 8028392:	bf00      	nop
 8028394:	080284e5 	.word	0x080284e5
 8028398:	08028507 	.word	0x08028507
 802839c:	0802853f 	.word	0x0802853f
 80283a0:	08028563 	.word	0x08028563
 80283a4:	20014118 	.word	0x20014118

080283a8 <stdio_exit_handler>:
 80283a8:	4a02      	ldr	r2, [pc, #8]	; (80283b4 <stdio_exit_handler+0xc>)
 80283aa:	4903      	ldr	r1, [pc, #12]	; (80283b8 <stdio_exit_handler+0x10>)
 80283ac:	4803      	ldr	r0, [pc, #12]	; (80283bc <stdio_exit_handler+0x14>)
 80283ae:	f000 b87b 	b.w	80284a8 <_fwalk_sglue>
 80283b2:	bf00      	nop
 80283b4:	20000108 	.word	0x20000108
 80283b8:	08028fdd 	.word	0x08028fdd
 80283bc:	20000114 	.word	0x20000114

080283c0 <cleanup_stdio>:
 80283c0:	6841      	ldr	r1, [r0, #4]
 80283c2:	4b0c      	ldr	r3, [pc, #48]	; (80283f4 <cleanup_stdio+0x34>)
 80283c4:	4299      	cmp	r1, r3
 80283c6:	b510      	push	{r4, lr}
 80283c8:	4604      	mov	r4, r0
 80283ca:	d001      	beq.n	80283d0 <cleanup_stdio+0x10>
 80283cc:	f000 fe06 	bl	8028fdc <_fflush_r>
 80283d0:	68a1      	ldr	r1, [r4, #8]
 80283d2:	4b09      	ldr	r3, [pc, #36]	; (80283f8 <cleanup_stdio+0x38>)
 80283d4:	4299      	cmp	r1, r3
 80283d6:	d002      	beq.n	80283de <cleanup_stdio+0x1e>
 80283d8:	4620      	mov	r0, r4
 80283da:	f000 fdff 	bl	8028fdc <_fflush_r>
 80283de:	68e1      	ldr	r1, [r4, #12]
 80283e0:	4b06      	ldr	r3, [pc, #24]	; (80283fc <cleanup_stdio+0x3c>)
 80283e2:	4299      	cmp	r1, r3
 80283e4:	d004      	beq.n	80283f0 <cleanup_stdio+0x30>
 80283e6:	4620      	mov	r0, r4
 80283e8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80283ec:	f000 bdf6 	b.w	8028fdc <_fflush_r>
 80283f0:	bd10      	pop	{r4, pc}
 80283f2:	bf00      	nop
 80283f4:	20014118 	.word	0x20014118
 80283f8:	20014180 	.word	0x20014180
 80283fc:	200141e8 	.word	0x200141e8

08028400 <global_stdio_init.part.0>:
 8028400:	b510      	push	{r4, lr}
 8028402:	4b0b      	ldr	r3, [pc, #44]	; (8028430 <global_stdio_init.part.0+0x30>)
 8028404:	4c0b      	ldr	r4, [pc, #44]	; (8028434 <global_stdio_init.part.0+0x34>)
 8028406:	4a0c      	ldr	r2, [pc, #48]	; (8028438 <global_stdio_init.part.0+0x38>)
 8028408:	601a      	str	r2, [r3, #0]
 802840a:	4620      	mov	r0, r4
 802840c:	2200      	movs	r2, #0
 802840e:	2104      	movs	r1, #4
 8028410:	f7ff ff94 	bl	802833c <std>
 8028414:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8028418:	2201      	movs	r2, #1
 802841a:	2109      	movs	r1, #9
 802841c:	f7ff ff8e 	bl	802833c <std>
 8028420:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8028424:	2202      	movs	r2, #2
 8028426:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802842a:	2112      	movs	r1, #18
 802842c:	f7ff bf86 	b.w	802833c <std>
 8028430:	20014250 	.word	0x20014250
 8028434:	20014118 	.word	0x20014118
 8028438:	080283a9 	.word	0x080283a9

0802843c <__sfp_lock_acquire>:
 802843c:	4801      	ldr	r0, [pc, #4]	; (8028444 <__sfp_lock_acquire+0x8>)
 802843e:	f000 b9b8 	b.w	80287b2 <__retarget_lock_acquire_recursive>
 8028442:	bf00      	nop
 8028444:	2001425a 	.word	0x2001425a

08028448 <__sfp_lock_release>:
 8028448:	4801      	ldr	r0, [pc, #4]	; (8028450 <__sfp_lock_release+0x8>)
 802844a:	f000 b9b3 	b.w	80287b4 <__retarget_lock_release_recursive>
 802844e:	bf00      	nop
 8028450:	2001425a 	.word	0x2001425a

08028454 <__sinit>:
 8028454:	b510      	push	{r4, lr}
 8028456:	4604      	mov	r4, r0
 8028458:	f7ff fff0 	bl	802843c <__sfp_lock_acquire>
 802845c:	6a23      	ldr	r3, [r4, #32]
 802845e:	b11b      	cbz	r3, 8028468 <__sinit+0x14>
 8028460:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8028464:	f7ff bff0 	b.w	8028448 <__sfp_lock_release>
 8028468:	4b04      	ldr	r3, [pc, #16]	; (802847c <__sinit+0x28>)
 802846a:	6223      	str	r3, [r4, #32]
 802846c:	4b04      	ldr	r3, [pc, #16]	; (8028480 <__sinit+0x2c>)
 802846e:	681b      	ldr	r3, [r3, #0]
 8028470:	2b00      	cmp	r3, #0
 8028472:	d1f5      	bne.n	8028460 <__sinit+0xc>
 8028474:	f7ff ffc4 	bl	8028400 <global_stdio_init.part.0>
 8028478:	e7f2      	b.n	8028460 <__sinit+0xc>
 802847a:	bf00      	nop
 802847c:	080283c1 	.word	0x080283c1
 8028480:	20014250 	.word	0x20014250

08028484 <fiprintf>:
 8028484:	b40e      	push	{r1, r2, r3}
 8028486:	b503      	push	{r0, r1, lr}
 8028488:	4601      	mov	r1, r0
 802848a:	ab03      	add	r3, sp, #12
 802848c:	4805      	ldr	r0, [pc, #20]	; (80284a4 <fiprintf+0x20>)
 802848e:	f853 2b04 	ldr.w	r2, [r3], #4
 8028492:	6800      	ldr	r0, [r0, #0]
 8028494:	9301      	str	r3, [sp, #4]
 8028496:	f000 fa71 	bl	802897c <_vfiprintf_r>
 802849a:	b002      	add	sp, #8
 802849c:	f85d eb04 	ldr.w	lr, [sp], #4
 80284a0:	b003      	add	sp, #12
 80284a2:	4770      	bx	lr
 80284a4:	20000160 	.word	0x20000160

080284a8 <_fwalk_sglue>:
 80284a8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80284ac:	4607      	mov	r7, r0
 80284ae:	4688      	mov	r8, r1
 80284b0:	4614      	mov	r4, r2
 80284b2:	2600      	movs	r6, #0
 80284b4:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80284b8:	f1b9 0901 	subs.w	r9, r9, #1
 80284bc:	d505      	bpl.n	80284ca <_fwalk_sglue+0x22>
 80284be:	6824      	ldr	r4, [r4, #0]
 80284c0:	2c00      	cmp	r4, #0
 80284c2:	d1f7      	bne.n	80284b4 <_fwalk_sglue+0xc>
 80284c4:	4630      	mov	r0, r6
 80284c6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80284ca:	89ab      	ldrh	r3, [r5, #12]
 80284cc:	2b01      	cmp	r3, #1
 80284ce:	d907      	bls.n	80284e0 <_fwalk_sglue+0x38>
 80284d0:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80284d4:	3301      	adds	r3, #1
 80284d6:	d003      	beq.n	80284e0 <_fwalk_sglue+0x38>
 80284d8:	4629      	mov	r1, r5
 80284da:	4638      	mov	r0, r7
 80284dc:	47c0      	blx	r8
 80284de:	4306      	orrs	r6, r0
 80284e0:	3568      	adds	r5, #104	; 0x68
 80284e2:	e7e9      	b.n	80284b8 <_fwalk_sglue+0x10>

080284e4 <__sread>:
 80284e4:	b510      	push	{r4, lr}
 80284e6:	460c      	mov	r4, r1
 80284e8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80284ec:	f000 f8ee 	bl	80286cc <_read_r>
 80284f0:	2800      	cmp	r0, #0
 80284f2:	bfab      	itete	ge
 80284f4:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80284f6:	89a3      	ldrhlt	r3, [r4, #12]
 80284f8:	181b      	addge	r3, r3, r0
 80284fa:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80284fe:	bfac      	ite	ge
 8028500:	6563      	strge	r3, [r4, #84]	; 0x54
 8028502:	81a3      	strhlt	r3, [r4, #12]
 8028504:	bd10      	pop	{r4, pc}

08028506 <__swrite>:
 8028506:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802850a:	461f      	mov	r7, r3
 802850c:	898b      	ldrh	r3, [r1, #12]
 802850e:	05db      	lsls	r3, r3, #23
 8028510:	4605      	mov	r5, r0
 8028512:	460c      	mov	r4, r1
 8028514:	4616      	mov	r6, r2
 8028516:	d505      	bpl.n	8028524 <__swrite+0x1e>
 8028518:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802851c:	2302      	movs	r3, #2
 802851e:	2200      	movs	r2, #0
 8028520:	f000 f8c2 	bl	80286a8 <_lseek_r>
 8028524:	89a3      	ldrh	r3, [r4, #12]
 8028526:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802852a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 802852e:	81a3      	strh	r3, [r4, #12]
 8028530:	4632      	mov	r2, r6
 8028532:	463b      	mov	r3, r7
 8028534:	4628      	mov	r0, r5
 8028536:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802853a:	f000 b8fd 	b.w	8028738 <_write_r>

0802853e <__sseek>:
 802853e:	b510      	push	{r4, lr}
 8028540:	460c      	mov	r4, r1
 8028542:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8028546:	f000 f8af 	bl	80286a8 <_lseek_r>
 802854a:	1c43      	adds	r3, r0, #1
 802854c:	89a3      	ldrh	r3, [r4, #12]
 802854e:	bf15      	itete	ne
 8028550:	6560      	strne	r0, [r4, #84]	; 0x54
 8028552:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8028556:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 802855a:	81a3      	strheq	r3, [r4, #12]
 802855c:	bf18      	it	ne
 802855e:	81a3      	strhne	r3, [r4, #12]
 8028560:	bd10      	pop	{r4, pc}

08028562 <__sclose>:
 8028562:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8028566:	f000 b839 	b.w	80285dc <_close_r>

0802856a <memset>:
 802856a:	4402      	add	r2, r0
 802856c:	4603      	mov	r3, r0
 802856e:	4293      	cmp	r3, r2
 8028570:	d100      	bne.n	8028574 <memset+0xa>
 8028572:	4770      	bx	lr
 8028574:	f803 1b01 	strb.w	r1, [r3], #1
 8028578:	e7f9      	b.n	802856e <memset+0x4>

0802857a <_raise_r>:
 802857a:	291f      	cmp	r1, #31
 802857c:	b538      	push	{r3, r4, r5, lr}
 802857e:	4604      	mov	r4, r0
 8028580:	460d      	mov	r5, r1
 8028582:	d904      	bls.n	802858e <_raise_r+0x14>
 8028584:	2316      	movs	r3, #22
 8028586:	6003      	str	r3, [r0, #0]
 8028588:	f04f 30ff 	mov.w	r0, #4294967295
 802858c:	bd38      	pop	{r3, r4, r5, pc}
 802858e:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8028590:	b112      	cbz	r2, 8028598 <_raise_r+0x1e>
 8028592:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8028596:	b94b      	cbnz	r3, 80285ac <_raise_r+0x32>
 8028598:	4620      	mov	r0, r4
 802859a:	f000 f8bb 	bl	8028714 <_getpid_r>
 802859e:	462a      	mov	r2, r5
 80285a0:	4601      	mov	r1, r0
 80285a2:	4620      	mov	r0, r4
 80285a4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80285a8:	f000 b8a2 	b.w	80286f0 <_kill_r>
 80285ac:	2b01      	cmp	r3, #1
 80285ae:	d00a      	beq.n	80285c6 <_raise_r+0x4c>
 80285b0:	1c59      	adds	r1, r3, #1
 80285b2:	d103      	bne.n	80285bc <_raise_r+0x42>
 80285b4:	2316      	movs	r3, #22
 80285b6:	6003      	str	r3, [r0, #0]
 80285b8:	2001      	movs	r0, #1
 80285ba:	e7e7      	b.n	802858c <_raise_r+0x12>
 80285bc:	2400      	movs	r4, #0
 80285be:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 80285c2:	4628      	mov	r0, r5
 80285c4:	4798      	blx	r3
 80285c6:	2000      	movs	r0, #0
 80285c8:	e7e0      	b.n	802858c <_raise_r+0x12>
	...

080285cc <raise>:
 80285cc:	4b02      	ldr	r3, [pc, #8]	; (80285d8 <raise+0xc>)
 80285ce:	4601      	mov	r1, r0
 80285d0:	6818      	ldr	r0, [r3, #0]
 80285d2:	f7ff bfd2 	b.w	802857a <_raise_r>
 80285d6:	bf00      	nop
 80285d8:	20000160 	.word	0x20000160

080285dc <_close_r>:
 80285dc:	b538      	push	{r3, r4, r5, lr}
 80285de:	4d06      	ldr	r5, [pc, #24]	; (80285f8 <_close_r+0x1c>)
 80285e0:	2300      	movs	r3, #0
 80285e2:	4604      	mov	r4, r0
 80285e4:	4608      	mov	r0, r1
 80285e6:	602b      	str	r3, [r5, #0]
 80285e8:	f7d9 fdfe 	bl	80021e8 <_close>
 80285ec:	1c43      	adds	r3, r0, #1
 80285ee:	d102      	bne.n	80285f6 <_close_r+0x1a>
 80285f0:	682b      	ldr	r3, [r5, #0]
 80285f2:	b103      	cbz	r3, 80285f6 <_close_r+0x1a>
 80285f4:	6023      	str	r3, [r4, #0]
 80285f6:	bd38      	pop	{r3, r4, r5, pc}
 80285f8:	20014254 	.word	0x20014254

080285fc <_reclaim_reent>:
 80285fc:	4b29      	ldr	r3, [pc, #164]	; (80286a4 <_reclaim_reent+0xa8>)
 80285fe:	681b      	ldr	r3, [r3, #0]
 8028600:	4283      	cmp	r3, r0
 8028602:	b570      	push	{r4, r5, r6, lr}
 8028604:	4604      	mov	r4, r0
 8028606:	d04b      	beq.n	80286a0 <_reclaim_reent+0xa4>
 8028608:	69c3      	ldr	r3, [r0, #28]
 802860a:	b143      	cbz	r3, 802861e <_reclaim_reent+0x22>
 802860c:	68db      	ldr	r3, [r3, #12]
 802860e:	2b00      	cmp	r3, #0
 8028610:	d144      	bne.n	802869c <_reclaim_reent+0xa0>
 8028612:	69e3      	ldr	r3, [r4, #28]
 8028614:	6819      	ldr	r1, [r3, #0]
 8028616:	b111      	cbz	r1, 802861e <_reclaim_reent+0x22>
 8028618:	4620      	mov	r0, r4
 802861a:	f000 f939 	bl	8028890 <_free_r>
 802861e:	6961      	ldr	r1, [r4, #20]
 8028620:	b111      	cbz	r1, 8028628 <_reclaim_reent+0x2c>
 8028622:	4620      	mov	r0, r4
 8028624:	f000 f934 	bl	8028890 <_free_r>
 8028628:	69e1      	ldr	r1, [r4, #28]
 802862a:	b111      	cbz	r1, 8028632 <_reclaim_reent+0x36>
 802862c:	4620      	mov	r0, r4
 802862e:	f000 f92f 	bl	8028890 <_free_r>
 8028632:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8028634:	b111      	cbz	r1, 802863c <_reclaim_reent+0x40>
 8028636:	4620      	mov	r0, r4
 8028638:	f000 f92a 	bl	8028890 <_free_r>
 802863c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802863e:	b111      	cbz	r1, 8028646 <_reclaim_reent+0x4a>
 8028640:	4620      	mov	r0, r4
 8028642:	f000 f925 	bl	8028890 <_free_r>
 8028646:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8028648:	b111      	cbz	r1, 8028650 <_reclaim_reent+0x54>
 802864a:	4620      	mov	r0, r4
 802864c:	f000 f920 	bl	8028890 <_free_r>
 8028650:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8028652:	b111      	cbz	r1, 802865a <_reclaim_reent+0x5e>
 8028654:	4620      	mov	r0, r4
 8028656:	f000 f91b 	bl	8028890 <_free_r>
 802865a:	6c61      	ldr	r1, [r4, #68]	; 0x44
 802865c:	b111      	cbz	r1, 8028664 <_reclaim_reent+0x68>
 802865e:	4620      	mov	r0, r4
 8028660:	f000 f916 	bl	8028890 <_free_r>
 8028664:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8028666:	b111      	cbz	r1, 802866e <_reclaim_reent+0x72>
 8028668:	4620      	mov	r0, r4
 802866a:	f000 f911 	bl	8028890 <_free_r>
 802866e:	6a23      	ldr	r3, [r4, #32]
 8028670:	b1b3      	cbz	r3, 80286a0 <_reclaim_reent+0xa4>
 8028672:	4620      	mov	r0, r4
 8028674:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8028678:	4718      	bx	r3
 802867a:	5949      	ldr	r1, [r1, r5]
 802867c:	b941      	cbnz	r1, 8028690 <_reclaim_reent+0x94>
 802867e:	3504      	adds	r5, #4
 8028680:	69e3      	ldr	r3, [r4, #28]
 8028682:	2d80      	cmp	r5, #128	; 0x80
 8028684:	68d9      	ldr	r1, [r3, #12]
 8028686:	d1f8      	bne.n	802867a <_reclaim_reent+0x7e>
 8028688:	4620      	mov	r0, r4
 802868a:	f000 f901 	bl	8028890 <_free_r>
 802868e:	e7c0      	b.n	8028612 <_reclaim_reent+0x16>
 8028690:	680e      	ldr	r6, [r1, #0]
 8028692:	4620      	mov	r0, r4
 8028694:	f000 f8fc 	bl	8028890 <_free_r>
 8028698:	4631      	mov	r1, r6
 802869a:	e7ef      	b.n	802867c <_reclaim_reent+0x80>
 802869c:	2500      	movs	r5, #0
 802869e:	e7ef      	b.n	8028680 <_reclaim_reent+0x84>
 80286a0:	bd70      	pop	{r4, r5, r6, pc}
 80286a2:	bf00      	nop
 80286a4:	20000160 	.word	0x20000160

080286a8 <_lseek_r>:
 80286a8:	b538      	push	{r3, r4, r5, lr}
 80286aa:	4d07      	ldr	r5, [pc, #28]	; (80286c8 <_lseek_r+0x20>)
 80286ac:	4604      	mov	r4, r0
 80286ae:	4608      	mov	r0, r1
 80286b0:	4611      	mov	r1, r2
 80286b2:	2200      	movs	r2, #0
 80286b4:	602a      	str	r2, [r5, #0]
 80286b6:	461a      	mov	r2, r3
 80286b8:	f7d9 fda2 	bl	8002200 <_lseek>
 80286bc:	1c43      	adds	r3, r0, #1
 80286be:	d102      	bne.n	80286c6 <_lseek_r+0x1e>
 80286c0:	682b      	ldr	r3, [r5, #0]
 80286c2:	b103      	cbz	r3, 80286c6 <_lseek_r+0x1e>
 80286c4:	6023      	str	r3, [r4, #0]
 80286c6:	bd38      	pop	{r3, r4, r5, pc}
 80286c8:	20014254 	.word	0x20014254

080286cc <_read_r>:
 80286cc:	b538      	push	{r3, r4, r5, lr}
 80286ce:	4d07      	ldr	r5, [pc, #28]	; (80286ec <_read_r+0x20>)
 80286d0:	4604      	mov	r4, r0
 80286d2:	4608      	mov	r0, r1
 80286d4:	4611      	mov	r1, r2
 80286d6:	2200      	movs	r2, #0
 80286d8:	602a      	str	r2, [r5, #0]
 80286da:	461a      	mov	r2, r3
 80286dc:	f7d9 fd68 	bl	80021b0 <_read>
 80286e0:	1c43      	adds	r3, r0, #1
 80286e2:	d102      	bne.n	80286ea <_read_r+0x1e>
 80286e4:	682b      	ldr	r3, [r5, #0]
 80286e6:	b103      	cbz	r3, 80286ea <_read_r+0x1e>
 80286e8:	6023      	str	r3, [r4, #0]
 80286ea:	bd38      	pop	{r3, r4, r5, pc}
 80286ec:	20014254 	.word	0x20014254

080286f0 <_kill_r>:
 80286f0:	b538      	push	{r3, r4, r5, lr}
 80286f2:	4d07      	ldr	r5, [pc, #28]	; (8028710 <_kill_r+0x20>)
 80286f4:	2300      	movs	r3, #0
 80286f6:	4604      	mov	r4, r0
 80286f8:	4608      	mov	r0, r1
 80286fa:	4611      	mov	r1, r2
 80286fc:	602b      	str	r3, [r5, #0]
 80286fe:	f7d9 fd49 	bl	8002194 <_kill>
 8028702:	1c43      	adds	r3, r0, #1
 8028704:	d102      	bne.n	802870c <_kill_r+0x1c>
 8028706:	682b      	ldr	r3, [r5, #0]
 8028708:	b103      	cbz	r3, 802870c <_kill_r+0x1c>
 802870a:	6023      	str	r3, [r4, #0]
 802870c:	bd38      	pop	{r3, r4, r5, pc}
 802870e:	bf00      	nop
 8028710:	20014254 	.word	0x20014254

08028714 <_getpid_r>:
 8028714:	f7d9 bd3c 	b.w	8002190 <_getpid>

08028718 <_sbrk_r>:
 8028718:	b538      	push	{r3, r4, r5, lr}
 802871a:	4d06      	ldr	r5, [pc, #24]	; (8028734 <_sbrk_r+0x1c>)
 802871c:	2300      	movs	r3, #0
 802871e:	4604      	mov	r4, r0
 8028720:	4608      	mov	r0, r1
 8028722:	602b      	str	r3, [r5, #0]
 8028724:	f7d9 fd6e 	bl	8002204 <_sbrk>
 8028728:	1c43      	adds	r3, r0, #1
 802872a:	d102      	bne.n	8028732 <_sbrk_r+0x1a>
 802872c:	682b      	ldr	r3, [r5, #0]
 802872e:	b103      	cbz	r3, 8028732 <_sbrk_r+0x1a>
 8028730:	6023      	str	r3, [r4, #0]
 8028732:	bd38      	pop	{r3, r4, r5, pc}
 8028734:	20014254 	.word	0x20014254

08028738 <_write_r>:
 8028738:	b538      	push	{r3, r4, r5, lr}
 802873a:	4d07      	ldr	r5, [pc, #28]	; (8028758 <_write_r+0x20>)
 802873c:	4604      	mov	r4, r0
 802873e:	4608      	mov	r0, r1
 8028740:	4611      	mov	r1, r2
 8028742:	2200      	movs	r2, #0
 8028744:	602a      	str	r2, [r5, #0]
 8028746:	461a      	mov	r2, r3
 8028748:	f7d9 fd40 	bl	80021cc <_write>
 802874c:	1c43      	adds	r3, r0, #1
 802874e:	d102      	bne.n	8028756 <_write_r+0x1e>
 8028750:	682b      	ldr	r3, [r5, #0]
 8028752:	b103      	cbz	r3, 8028756 <_write_r+0x1e>
 8028754:	6023      	str	r3, [r4, #0]
 8028756:	bd38      	pop	{r3, r4, r5, pc}
 8028758:	20014254 	.word	0x20014254

0802875c <__errno>:
 802875c:	4b01      	ldr	r3, [pc, #4]	; (8028764 <__errno+0x8>)
 802875e:	6818      	ldr	r0, [r3, #0]
 8028760:	4770      	bx	lr
 8028762:	bf00      	nop
 8028764:	20000160 	.word	0x20000160

08028768 <__libc_init_array>:
 8028768:	b570      	push	{r4, r5, r6, lr}
 802876a:	4d0d      	ldr	r5, [pc, #52]	; (80287a0 <__libc_init_array+0x38>)
 802876c:	4c0d      	ldr	r4, [pc, #52]	; (80287a4 <__libc_init_array+0x3c>)
 802876e:	1b64      	subs	r4, r4, r5
 8028770:	10a4      	asrs	r4, r4, #2
 8028772:	2600      	movs	r6, #0
 8028774:	42a6      	cmp	r6, r4
 8028776:	d109      	bne.n	802878c <__libc_init_array+0x24>
 8028778:	4d0b      	ldr	r5, [pc, #44]	; (80287a8 <__libc_init_array+0x40>)
 802877a:	4c0c      	ldr	r4, [pc, #48]	; (80287ac <__libc_init_array+0x44>)
 802877c:	f000 fd70 	bl	8029260 <_init>
 8028780:	1b64      	subs	r4, r4, r5
 8028782:	10a4      	asrs	r4, r4, #2
 8028784:	2600      	movs	r6, #0
 8028786:	42a6      	cmp	r6, r4
 8028788:	d105      	bne.n	8028796 <__libc_init_array+0x2e>
 802878a:	bd70      	pop	{r4, r5, r6, pc}
 802878c:	f855 3b04 	ldr.w	r3, [r5], #4
 8028790:	4798      	blx	r3
 8028792:	3601      	adds	r6, #1
 8028794:	e7ee      	b.n	8028774 <__libc_init_array+0xc>
 8028796:	f855 3b04 	ldr.w	r3, [r5], #4
 802879a:	4798      	blx	r3
 802879c:	3601      	adds	r6, #1
 802879e:	e7f2      	b.n	8028786 <__libc_init_array+0x1e>
 80287a0:	08148d6c 	.word	0x08148d6c
 80287a4:	08148d6c 	.word	0x08148d6c
 80287a8:	08148d6c 	.word	0x08148d6c
 80287ac:	08148d80 	.word	0x08148d80

080287b0 <__retarget_lock_init_recursive>:
 80287b0:	4770      	bx	lr

080287b2 <__retarget_lock_acquire_recursive>:
 80287b2:	4770      	bx	lr

080287b4 <__retarget_lock_release_recursive>:
 80287b4:	4770      	bx	lr

080287b6 <memcpy>:
 80287b6:	440a      	add	r2, r1
 80287b8:	4291      	cmp	r1, r2
 80287ba:	f100 33ff 	add.w	r3, r0, #4294967295
 80287be:	d100      	bne.n	80287c2 <memcpy+0xc>
 80287c0:	4770      	bx	lr
 80287c2:	b510      	push	{r4, lr}
 80287c4:	f811 4b01 	ldrb.w	r4, [r1], #1
 80287c8:	f803 4f01 	strb.w	r4, [r3, #1]!
 80287cc:	4291      	cmp	r1, r2
 80287ce:	d1f9      	bne.n	80287c4 <memcpy+0xe>
 80287d0:	bd10      	pop	{r4, pc}
	...

080287d4 <__register_exitproc>:
 80287d4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80287d8:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 802888c <__register_exitproc+0xb8>
 80287dc:	4606      	mov	r6, r0
 80287de:	f8d8 0000 	ldr.w	r0, [r8]
 80287e2:	461f      	mov	r7, r3
 80287e4:	460d      	mov	r5, r1
 80287e6:	4691      	mov	r9, r2
 80287e8:	f7ff ffe3 	bl	80287b2 <__retarget_lock_acquire_recursive>
 80287ec:	4b23      	ldr	r3, [pc, #140]	; (802887c <__register_exitproc+0xa8>)
 80287ee:	681c      	ldr	r4, [r3, #0]
 80287f0:	b934      	cbnz	r4, 8028800 <__register_exitproc+0x2c>
 80287f2:	4c23      	ldr	r4, [pc, #140]	; (8028880 <__register_exitproc+0xac>)
 80287f4:	601c      	str	r4, [r3, #0]
 80287f6:	4b23      	ldr	r3, [pc, #140]	; (8028884 <__register_exitproc+0xb0>)
 80287f8:	b113      	cbz	r3, 8028800 <__register_exitproc+0x2c>
 80287fa:	681b      	ldr	r3, [r3, #0]
 80287fc:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 8028800:	6863      	ldr	r3, [r4, #4]
 8028802:	2b1f      	cmp	r3, #31
 8028804:	dd07      	ble.n	8028816 <__register_exitproc+0x42>
 8028806:	f8d8 0000 	ldr.w	r0, [r8]
 802880a:	f7ff ffd3 	bl	80287b4 <__retarget_lock_release_recursive>
 802880e:	f04f 30ff 	mov.w	r0, #4294967295
 8028812:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8028816:	b32e      	cbz	r6, 8028864 <__register_exitproc+0x90>
 8028818:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 802881c:	b968      	cbnz	r0, 802883a <__register_exitproc+0x66>
 802881e:	4b1a      	ldr	r3, [pc, #104]	; (8028888 <__register_exitproc+0xb4>)
 8028820:	2b00      	cmp	r3, #0
 8028822:	d0f0      	beq.n	8028806 <__register_exitproc+0x32>
 8028824:	f44f 7084 	mov.w	r0, #264	; 0x108
 8028828:	f7ff fcbe 	bl	80281a8 <malloc>
 802882c:	2800      	cmp	r0, #0
 802882e:	d0ea      	beq.n	8028806 <__register_exitproc+0x32>
 8028830:	2300      	movs	r3, #0
 8028832:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 8028836:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 802883a:	6863      	ldr	r3, [r4, #4]
 802883c:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 8028840:	2201      	movs	r2, #1
 8028842:	409a      	lsls	r2, r3
 8028844:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 8028848:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 802884c:	4313      	orrs	r3, r2
 802884e:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 8028852:	2e02      	cmp	r6, #2
 8028854:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 8028858:	bf02      	ittt	eq
 802885a:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 802885e:	4313      	orreq	r3, r2
 8028860:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 8028864:	6863      	ldr	r3, [r4, #4]
 8028866:	f8d8 0000 	ldr.w	r0, [r8]
 802886a:	1c5a      	adds	r2, r3, #1
 802886c:	3302      	adds	r3, #2
 802886e:	6062      	str	r2, [r4, #4]
 8028870:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8028874:	f7ff ff9e 	bl	80287b4 <__retarget_lock_release_recursive>
 8028878:	2000      	movs	r0, #0
 802887a:	e7ca      	b.n	8028812 <__register_exitproc+0x3e>
 802887c:	200142e8 	.word	0x200142e8
 8028880:	2001425c 	.word	0x2001425c
 8028884:	0802d394 	.word	0x0802d394
 8028888:	080281a9 	.word	0x080281a9
 802888c:	20000164 	.word	0x20000164

08028890 <_free_r>:
 8028890:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8028892:	2900      	cmp	r1, #0
 8028894:	d044      	beq.n	8028920 <_free_r+0x90>
 8028896:	f851 3c04 	ldr.w	r3, [r1, #-4]
 802889a:	9001      	str	r0, [sp, #4]
 802889c:	2b00      	cmp	r3, #0
 802889e:	f1a1 0404 	sub.w	r4, r1, #4
 80288a2:	bfb8      	it	lt
 80288a4:	18e4      	addlt	r4, r4, r3
 80288a6:	f7ff fd2f 	bl	8028308 <__malloc_lock>
 80288aa:	4a1e      	ldr	r2, [pc, #120]	; (8028924 <_free_r+0x94>)
 80288ac:	9801      	ldr	r0, [sp, #4]
 80288ae:	6813      	ldr	r3, [r2, #0]
 80288b0:	b933      	cbnz	r3, 80288c0 <_free_r+0x30>
 80288b2:	6063      	str	r3, [r4, #4]
 80288b4:	6014      	str	r4, [r2, #0]
 80288b6:	b003      	add	sp, #12
 80288b8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80288bc:	f7ff bd2a 	b.w	8028314 <__malloc_unlock>
 80288c0:	42a3      	cmp	r3, r4
 80288c2:	d908      	bls.n	80288d6 <_free_r+0x46>
 80288c4:	6825      	ldr	r5, [r4, #0]
 80288c6:	1961      	adds	r1, r4, r5
 80288c8:	428b      	cmp	r3, r1
 80288ca:	bf01      	itttt	eq
 80288cc:	6819      	ldreq	r1, [r3, #0]
 80288ce:	685b      	ldreq	r3, [r3, #4]
 80288d0:	1949      	addeq	r1, r1, r5
 80288d2:	6021      	streq	r1, [r4, #0]
 80288d4:	e7ed      	b.n	80288b2 <_free_r+0x22>
 80288d6:	461a      	mov	r2, r3
 80288d8:	685b      	ldr	r3, [r3, #4]
 80288da:	b10b      	cbz	r3, 80288e0 <_free_r+0x50>
 80288dc:	42a3      	cmp	r3, r4
 80288de:	d9fa      	bls.n	80288d6 <_free_r+0x46>
 80288e0:	6811      	ldr	r1, [r2, #0]
 80288e2:	1855      	adds	r5, r2, r1
 80288e4:	42a5      	cmp	r5, r4
 80288e6:	d10b      	bne.n	8028900 <_free_r+0x70>
 80288e8:	6824      	ldr	r4, [r4, #0]
 80288ea:	4421      	add	r1, r4
 80288ec:	1854      	adds	r4, r2, r1
 80288ee:	42a3      	cmp	r3, r4
 80288f0:	6011      	str	r1, [r2, #0]
 80288f2:	d1e0      	bne.n	80288b6 <_free_r+0x26>
 80288f4:	681c      	ldr	r4, [r3, #0]
 80288f6:	685b      	ldr	r3, [r3, #4]
 80288f8:	6053      	str	r3, [r2, #4]
 80288fa:	440c      	add	r4, r1
 80288fc:	6014      	str	r4, [r2, #0]
 80288fe:	e7da      	b.n	80288b6 <_free_r+0x26>
 8028900:	d902      	bls.n	8028908 <_free_r+0x78>
 8028902:	230c      	movs	r3, #12
 8028904:	6003      	str	r3, [r0, #0]
 8028906:	e7d6      	b.n	80288b6 <_free_r+0x26>
 8028908:	6825      	ldr	r5, [r4, #0]
 802890a:	1961      	adds	r1, r4, r5
 802890c:	428b      	cmp	r3, r1
 802890e:	bf04      	itt	eq
 8028910:	6819      	ldreq	r1, [r3, #0]
 8028912:	685b      	ldreq	r3, [r3, #4]
 8028914:	6063      	str	r3, [r4, #4]
 8028916:	bf04      	itt	eq
 8028918:	1949      	addeq	r1, r1, r5
 802891a:	6021      	streq	r1, [r4, #0]
 802891c:	6054      	str	r4, [r2, #4]
 802891e:	e7ca      	b.n	80288b6 <_free_r+0x26>
 8028920:	b003      	add	sp, #12
 8028922:	bd30      	pop	{r4, r5, pc}
 8028924:	20014110 	.word	0x20014110

08028928 <__sfputc_r>:
 8028928:	6893      	ldr	r3, [r2, #8]
 802892a:	3b01      	subs	r3, #1
 802892c:	2b00      	cmp	r3, #0
 802892e:	b410      	push	{r4}
 8028930:	6093      	str	r3, [r2, #8]
 8028932:	da08      	bge.n	8028946 <__sfputc_r+0x1e>
 8028934:	6994      	ldr	r4, [r2, #24]
 8028936:	42a3      	cmp	r3, r4
 8028938:	db01      	blt.n	802893e <__sfputc_r+0x16>
 802893a:	290a      	cmp	r1, #10
 802893c:	d103      	bne.n	8028946 <__sfputc_r+0x1e>
 802893e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8028942:	f000 bb73 	b.w	802902c <__swbuf_r>
 8028946:	6813      	ldr	r3, [r2, #0]
 8028948:	1c58      	adds	r0, r3, #1
 802894a:	6010      	str	r0, [r2, #0]
 802894c:	7019      	strb	r1, [r3, #0]
 802894e:	4608      	mov	r0, r1
 8028950:	f85d 4b04 	ldr.w	r4, [sp], #4
 8028954:	4770      	bx	lr

08028956 <__sfputs_r>:
 8028956:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8028958:	4606      	mov	r6, r0
 802895a:	460f      	mov	r7, r1
 802895c:	4614      	mov	r4, r2
 802895e:	18d5      	adds	r5, r2, r3
 8028960:	42ac      	cmp	r4, r5
 8028962:	d101      	bne.n	8028968 <__sfputs_r+0x12>
 8028964:	2000      	movs	r0, #0
 8028966:	e007      	b.n	8028978 <__sfputs_r+0x22>
 8028968:	f814 1b01 	ldrb.w	r1, [r4], #1
 802896c:	463a      	mov	r2, r7
 802896e:	4630      	mov	r0, r6
 8028970:	f7ff ffda 	bl	8028928 <__sfputc_r>
 8028974:	1c43      	adds	r3, r0, #1
 8028976:	d1f3      	bne.n	8028960 <__sfputs_r+0xa>
 8028978:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0802897c <_vfiprintf_r>:
 802897c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028980:	460d      	mov	r5, r1
 8028982:	b09d      	sub	sp, #116	; 0x74
 8028984:	4614      	mov	r4, r2
 8028986:	4698      	mov	r8, r3
 8028988:	4606      	mov	r6, r0
 802898a:	b118      	cbz	r0, 8028994 <_vfiprintf_r+0x18>
 802898c:	6a03      	ldr	r3, [r0, #32]
 802898e:	b90b      	cbnz	r3, 8028994 <_vfiprintf_r+0x18>
 8028990:	f7ff fd60 	bl	8028454 <__sinit>
 8028994:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8028996:	07d9      	lsls	r1, r3, #31
 8028998:	d405      	bmi.n	80289a6 <_vfiprintf_r+0x2a>
 802899a:	89ab      	ldrh	r3, [r5, #12]
 802899c:	059a      	lsls	r2, r3, #22
 802899e:	d402      	bmi.n	80289a6 <_vfiprintf_r+0x2a>
 80289a0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80289a2:	f7ff ff06 	bl	80287b2 <__retarget_lock_acquire_recursive>
 80289a6:	89ab      	ldrh	r3, [r5, #12]
 80289a8:	071b      	lsls	r3, r3, #28
 80289aa:	d501      	bpl.n	80289b0 <_vfiprintf_r+0x34>
 80289ac:	692b      	ldr	r3, [r5, #16]
 80289ae:	b99b      	cbnz	r3, 80289d8 <_vfiprintf_r+0x5c>
 80289b0:	4629      	mov	r1, r5
 80289b2:	4630      	mov	r0, r6
 80289b4:	f000 fb78 	bl	80290a8 <__swsetup_r>
 80289b8:	b170      	cbz	r0, 80289d8 <_vfiprintf_r+0x5c>
 80289ba:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80289bc:	07dc      	lsls	r4, r3, #31
 80289be:	d504      	bpl.n	80289ca <_vfiprintf_r+0x4e>
 80289c0:	f04f 30ff 	mov.w	r0, #4294967295
 80289c4:	b01d      	add	sp, #116	; 0x74
 80289c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80289ca:	89ab      	ldrh	r3, [r5, #12]
 80289cc:	0598      	lsls	r0, r3, #22
 80289ce:	d4f7      	bmi.n	80289c0 <_vfiprintf_r+0x44>
 80289d0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80289d2:	f7ff feef 	bl	80287b4 <__retarget_lock_release_recursive>
 80289d6:	e7f3      	b.n	80289c0 <_vfiprintf_r+0x44>
 80289d8:	2300      	movs	r3, #0
 80289da:	9309      	str	r3, [sp, #36]	; 0x24
 80289dc:	2320      	movs	r3, #32
 80289de:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80289e2:	f8cd 800c 	str.w	r8, [sp, #12]
 80289e6:	2330      	movs	r3, #48	; 0x30
 80289e8:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 8028b9c <_vfiprintf_r+0x220>
 80289ec:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80289f0:	f04f 0901 	mov.w	r9, #1
 80289f4:	4623      	mov	r3, r4
 80289f6:	469a      	mov	sl, r3
 80289f8:	f813 2b01 	ldrb.w	r2, [r3], #1
 80289fc:	b10a      	cbz	r2, 8028a02 <_vfiprintf_r+0x86>
 80289fe:	2a25      	cmp	r2, #37	; 0x25
 8028a00:	d1f9      	bne.n	80289f6 <_vfiprintf_r+0x7a>
 8028a02:	ebba 0b04 	subs.w	fp, sl, r4
 8028a06:	d00b      	beq.n	8028a20 <_vfiprintf_r+0xa4>
 8028a08:	465b      	mov	r3, fp
 8028a0a:	4622      	mov	r2, r4
 8028a0c:	4629      	mov	r1, r5
 8028a0e:	4630      	mov	r0, r6
 8028a10:	f7ff ffa1 	bl	8028956 <__sfputs_r>
 8028a14:	3001      	adds	r0, #1
 8028a16:	f000 80a9 	beq.w	8028b6c <_vfiprintf_r+0x1f0>
 8028a1a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8028a1c:	445a      	add	r2, fp
 8028a1e:	9209      	str	r2, [sp, #36]	; 0x24
 8028a20:	f89a 3000 	ldrb.w	r3, [sl]
 8028a24:	2b00      	cmp	r3, #0
 8028a26:	f000 80a1 	beq.w	8028b6c <_vfiprintf_r+0x1f0>
 8028a2a:	2300      	movs	r3, #0
 8028a2c:	f04f 32ff 	mov.w	r2, #4294967295
 8028a30:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8028a34:	f10a 0a01 	add.w	sl, sl, #1
 8028a38:	9304      	str	r3, [sp, #16]
 8028a3a:	9307      	str	r3, [sp, #28]
 8028a3c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8028a40:	931a      	str	r3, [sp, #104]	; 0x68
 8028a42:	4654      	mov	r4, sl
 8028a44:	2205      	movs	r2, #5
 8028a46:	f814 1b01 	ldrb.w	r1, [r4], #1
 8028a4a:	4854      	ldr	r0, [pc, #336]	; (8028b9c <_vfiprintf_r+0x220>)
 8028a4c:	f7d7 fbd0 	bl	80001f0 <memchr>
 8028a50:	9a04      	ldr	r2, [sp, #16]
 8028a52:	b9d8      	cbnz	r0, 8028a8c <_vfiprintf_r+0x110>
 8028a54:	06d1      	lsls	r1, r2, #27
 8028a56:	bf44      	itt	mi
 8028a58:	2320      	movmi	r3, #32
 8028a5a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8028a5e:	0713      	lsls	r3, r2, #28
 8028a60:	bf44      	itt	mi
 8028a62:	232b      	movmi	r3, #43	; 0x2b
 8028a64:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8028a68:	f89a 3000 	ldrb.w	r3, [sl]
 8028a6c:	2b2a      	cmp	r3, #42	; 0x2a
 8028a6e:	d015      	beq.n	8028a9c <_vfiprintf_r+0x120>
 8028a70:	9a07      	ldr	r2, [sp, #28]
 8028a72:	4654      	mov	r4, sl
 8028a74:	2000      	movs	r0, #0
 8028a76:	f04f 0c0a 	mov.w	ip, #10
 8028a7a:	4621      	mov	r1, r4
 8028a7c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8028a80:	3b30      	subs	r3, #48	; 0x30
 8028a82:	2b09      	cmp	r3, #9
 8028a84:	d94d      	bls.n	8028b22 <_vfiprintf_r+0x1a6>
 8028a86:	b1b0      	cbz	r0, 8028ab6 <_vfiprintf_r+0x13a>
 8028a88:	9207      	str	r2, [sp, #28]
 8028a8a:	e014      	b.n	8028ab6 <_vfiprintf_r+0x13a>
 8028a8c:	eba0 0308 	sub.w	r3, r0, r8
 8028a90:	fa09 f303 	lsl.w	r3, r9, r3
 8028a94:	4313      	orrs	r3, r2
 8028a96:	9304      	str	r3, [sp, #16]
 8028a98:	46a2      	mov	sl, r4
 8028a9a:	e7d2      	b.n	8028a42 <_vfiprintf_r+0xc6>
 8028a9c:	9b03      	ldr	r3, [sp, #12]
 8028a9e:	1d19      	adds	r1, r3, #4
 8028aa0:	681b      	ldr	r3, [r3, #0]
 8028aa2:	9103      	str	r1, [sp, #12]
 8028aa4:	2b00      	cmp	r3, #0
 8028aa6:	bfbb      	ittet	lt
 8028aa8:	425b      	neglt	r3, r3
 8028aaa:	f042 0202 	orrlt.w	r2, r2, #2
 8028aae:	9307      	strge	r3, [sp, #28]
 8028ab0:	9307      	strlt	r3, [sp, #28]
 8028ab2:	bfb8      	it	lt
 8028ab4:	9204      	strlt	r2, [sp, #16]
 8028ab6:	7823      	ldrb	r3, [r4, #0]
 8028ab8:	2b2e      	cmp	r3, #46	; 0x2e
 8028aba:	d10c      	bne.n	8028ad6 <_vfiprintf_r+0x15a>
 8028abc:	7863      	ldrb	r3, [r4, #1]
 8028abe:	2b2a      	cmp	r3, #42	; 0x2a
 8028ac0:	d134      	bne.n	8028b2c <_vfiprintf_r+0x1b0>
 8028ac2:	9b03      	ldr	r3, [sp, #12]
 8028ac4:	1d1a      	adds	r2, r3, #4
 8028ac6:	681b      	ldr	r3, [r3, #0]
 8028ac8:	9203      	str	r2, [sp, #12]
 8028aca:	2b00      	cmp	r3, #0
 8028acc:	bfb8      	it	lt
 8028ace:	f04f 33ff 	movlt.w	r3, #4294967295
 8028ad2:	3402      	adds	r4, #2
 8028ad4:	9305      	str	r3, [sp, #20]
 8028ad6:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 8028bac <_vfiprintf_r+0x230>
 8028ada:	7821      	ldrb	r1, [r4, #0]
 8028adc:	2203      	movs	r2, #3
 8028ade:	4650      	mov	r0, sl
 8028ae0:	f7d7 fb86 	bl	80001f0 <memchr>
 8028ae4:	b138      	cbz	r0, 8028af6 <_vfiprintf_r+0x17a>
 8028ae6:	9b04      	ldr	r3, [sp, #16]
 8028ae8:	eba0 000a 	sub.w	r0, r0, sl
 8028aec:	2240      	movs	r2, #64	; 0x40
 8028aee:	4082      	lsls	r2, r0
 8028af0:	4313      	orrs	r3, r2
 8028af2:	3401      	adds	r4, #1
 8028af4:	9304      	str	r3, [sp, #16]
 8028af6:	f814 1b01 	ldrb.w	r1, [r4], #1
 8028afa:	4829      	ldr	r0, [pc, #164]	; (8028ba0 <_vfiprintf_r+0x224>)
 8028afc:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8028b00:	2206      	movs	r2, #6
 8028b02:	f7d7 fb75 	bl	80001f0 <memchr>
 8028b06:	2800      	cmp	r0, #0
 8028b08:	d03f      	beq.n	8028b8a <_vfiprintf_r+0x20e>
 8028b0a:	4b26      	ldr	r3, [pc, #152]	; (8028ba4 <_vfiprintf_r+0x228>)
 8028b0c:	bb1b      	cbnz	r3, 8028b56 <_vfiprintf_r+0x1da>
 8028b0e:	9b03      	ldr	r3, [sp, #12]
 8028b10:	3307      	adds	r3, #7
 8028b12:	f023 0307 	bic.w	r3, r3, #7
 8028b16:	3308      	adds	r3, #8
 8028b18:	9303      	str	r3, [sp, #12]
 8028b1a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8028b1c:	443b      	add	r3, r7
 8028b1e:	9309      	str	r3, [sp, #36]	; 0x24
 8028b20:	e768      	b.n	80289f4 <_vfiprintf_r+0x78>
 8028b22:	fb0c 3202 	mla	r2, ip, r2, r3
 8028b26:	460c      	mov	r4, r1
 8028b28:	2001      	movs	r0, #1
 8028b2a:	e7a6      	b.n	8028a7a <_vfiprintf_r+0xfe>
 8028b2c:	2300      	movs	r3, #0
 8028b2e:	3401      	adds	r4, #1
 8028b30:	9305      	str	r3, [sp, #20]
 8028b32:	4619      	mov	r1, r3
 8028b34:	f04f 0c0a 	mov.w	ip, #10
 8028b38:	4620      	mov	r0, r4
 8028b3a:	f810 2b01 	ldrb.w	r2, [r0], #1
 8028b3e:	3a30      	subs	r2, #48	; 0x30
 8028b40:	2a09      	cmp	r2, #9
 8028b42:	d903      	bls.n	8028b4c <_vfiprintf_r+0x1d0>
 8028b44:	2b00      	cmp	r3, #0
 8028b46:	d0c6      	beq.n	8028ad6 <_vfiprintf_r+0x15a>
 8028b48:	9105      	str	r1, [sp, #20]
 8028b4a:	e7c4      	b.n	8028ad6 <_vfiprintf_r+0x15a>
 8028b4c:	fb0c 2101 	mla	r1, ip, r1, r2
 8028b50:	4604      	mov	r4, r0
 8028b52:	2301      	movs	r3, #1
 8028b54:	e7f0      	b.n	8028b38 <_vfiprintf_r+0x1bc>
 8028b56:	ab03      	add	r3, sp, #12
 8028b58:	9300      	str	r3, [sp, #0]
 8028b5a:	462a      	mov	r2, r5
 8028b5c:	4b12      	ldr	r3, [pc, #72]	; (8028ba8 <_vfiprintf_r+0x22c>)
 8028b5e:	a904      	add	r1, sp, #16
 8028b60:	4630      	mov	r0, r6
 8028b62:	f3af 8000 	nop.w
 8028b66:	4607      	mov	r7, r0
 8028b68:	1c78      	adds	r0, r7, #1
 8028b6a:	d1d6      	bne.n	8028b1a <_vfiprintf_r+0x19e>
 8028b6c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8028b6e:	07d9      	lsls	r1, r3, #31
 8028b70:	d405      	bmi.n	8028b7e <_vfiprintf_r+0x202>
 8028b72:	89ab      	ldrh	r3, [r5, #12]
 8028b74:	059a      	lsls	r2, r3, #22
 8028b76:	d402      	bmi.n	8028b7e <_vfiprintf_r+0x202>
 8028b78:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8028b7a:	f7ff fe1b 	bl	80287b4 <__retarget_lock_release_recursive>
 8028b7e:	89ab      	ldrh	r3, [r5, #12]
 8028b80:	065b      	lsls	r3, r3, #25
 8028b82:	f53f af1d 	bmi.w	80289c0 <_vfiprintf_r+0x44>
 8028b86:	9809      	ldr	r0, [sp, #36]	; 0x24
 8028b88:	e71c      	b.n	80289c4 <_vfiprintf_r+0x48>
 8028b8a:	ab03      	add	r3, sp, #12
 8028b8c:	9300      	str	r3, [sp, #0]
 8028b8e:	462a      	mov	r2, r5
 8028b90:	4b05      	ldr	r3, [pc, #20]	; (8028ba8 <_vfiprintf_r+0x22c>)
 8028b92:	a904      	add	r1, sp, #16
 8028b94:	4630      	mov	r0, r6
 8028b96:	f000 f879 	bl	8028c8c <_printf_i>
 8028b9a:	e7e4      	b.n	8028b66 <_vfiprintf_r+0x1ea>
 8028b9c:	0802d398 	.word	0x0802d398
 8028ba0:	0802d3a2 	.word	0x0802d3a2
 8028ba4:	00000000 	.word	0x00000000
 8028ba8:	08028957 	.word	0x08028957
 8028bac:	0802d39e 	.word	0x0802d39e

08028bb0 <_printf_common>:
 8028bb0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8028bb4:	4616      	mov	r6, r2
 8028bb6:	4699      	mov	r9, r3
 8028bb8:	688a      	ldr	r2, [r1, #8]
 8028bba:	690b      	ldr	r3, [r1, #16]
 8028bbc:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8028bc0:	4293      	cmp	r3, r2
 8028bc2:	bfb8      	it	lt
 8028bc4:	4613      	movlt	r3, r2
 8028bc6:	6033      	str	r3, [r6, #0]
 8028bc8:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8028bcc:	4607      	mov	r7, r0
 8028bce:	460c      	mov	r4, r1
 8028bd0:	b10a      	cbz	r2, 8028bd6 <_printf_common+0x26>
 8028bd2:	3301      	adds	r3, #1
 8028bd4:	6033      	str	r3, [r6, #0]
 8028bd6:	6823      	ldr	r3, [r4, #0]
 8028bd8:	0699      	lsls	r1, r3, #26
 8028bda:	bf42      	ittt	mi
 8028bdc:	6833      	ldrmi	r3, [r6, #0]
 8028bde:	3302      	addmi	r3, #2
 8028be0:	6033      	strmi	r3, [r6, #0]
 8028be2:	6825      	ldr	r5, [r4, #0]
 8028be4:	f015 0506 	ands.w	r5, r5, #6
 8028be8:	d106      	bne.n	8028bf8 <_printf_common+0x48>
 8028bea:	f104 0a19 	add.w	sl, r4, #25
 8028bee:	68e3      	ldr	r3, [r4, #12]
 8028bf0:	6832      	ldr	r2, [r6, #0]
 8028bf2:	1a9b      	subs	r3, r3, r2
 8028bf4:	42ab      	cmp	r3, r5
 8028bf6:	dc26      	bgt.n	8028c46 <_printf_common+0x96>
 8028bf8:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8028bfc:	1e13      	subs	r3, r2, #0
 8028bfe:	6822      	ldr	r2, [r4, #0]
 8028c00:	bf18      	it	ne
 8028c02:	2301      	movne	r3, #1
 8028c04:	0692      	lsls	r2, r2, #26
 8028c06:	d42b      	bmi.n	8028c60 <_printf_common+0xb0>
 8028c08:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8028c0c:	4649      	mov	r1, r9
 8028c0e:	4638      	mov	r0, r7
 8028c10:	47c0      	blx	r8
 8028c12:	3001      	adds	r0, #1
 8028c14:	d01e      	beq.n	8028c54 <_printf_common+0xa4>
 8028c16:	6823      	ldr	r3, [r4, #0]
 8028c18:	6922      	ldr	r2, [r4, #16]
 8028c1a:	f003 0306 	and.w	r3, r3, #6
 8028c1e:	2b04      	cmp	r3, #4
 8028c20:	bf02      	ittt	eq
 8028c22:	68e5      	ldreq	r5, [r4, #12]
 8028c24:	6833      	ldreq	r3, [r6, #0]
 8028c26:	1aed      	subeq	r5, r5, r3
 8028c28:	68a3      	ldr	r3, [r4, #8]
 8028c2a:	bf0c      	ite	eq
 8028c2c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8028c30:	2500      	movne	r5, #0
 8028c32:	4293      	cmp	r3, r2
 8028c34:	bfc4      	itt	gt
 8028c36:	1a9b      	subgt	r3, r3, r2
 8028c38:	18ed      	addgt	r5, r5, r3
 8028c3a:	2600      	movs	r6, #0
 8028c3c:	341a      	adds	r4, #26
 8028c3e:	42b5      	cmp	r5, r6
 8028c40:	d11a      	bne.n	8028c78 <_printf_common+0xc8>
 8028c42:	2000      	movs	r0, #0
 8028c44:	e008      	b.n	8028c58 <_printf_common+0xa8>
 8028c46:	2301      	movs	r3, #1
 8028c48:	4652      	mov	r2, sl
 8028c4a:	4649      	mov	r1, r9
 8028c4c:	4638      	mov	r0, r7
 8028c4e:	47c0      	blx	r8
 8028c50:	3001      	adds	r0, #1
 8028c52:	d103      	bne.n	8028c5c <_printf_common+0xac>
 8028c54:	f04f 30ff 	mov.w	r0, #4294967295
 8028c58:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8028c5c:	3501      	adds	r5, #1
 8028c5e:	e7c6      	b.n	8028bee <_printf_common+0x3e>
 8028c60:	18e1      	adds	r1, r4, r3
 8028c62:	1c5a      	adds	r2, r3, #1
 8028c64:	2030      	movs	r0, #48	; 0x30
 8028c66:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8028c6a:	4422      	add	r2, r4
 8028c6c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8028c70:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8028c74:	3302      	adds	r3, #2
 8028c76:	e7c7      	b.n	8028c08 <_printf_common+0x58>
 8028c78:	2301      	movs	r3, #1
 8028c7a:	4622      	mov	r2, r4
 8028c7c:	4649      	mov	r1, r9
 8028c7e:	4638      	mov	r0, r7
 8028c80:	47c0      	blx	r8
 8028c82:	3001      	adds	r0, #1
 8028c84:	d0e6      	beq.n	8028c54 <_printf_common+0xa4>
 8028c86:	3601      	adds	r6, #1
 8028c88:	e7d9      	b.n	8028c3e <_printf_common+0x8e>
	...

08028c8c <_printf_i>:
 8028c8c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8028c90:	7e0f      	ldrb	r7, [r1, #24]
 8028c92:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8028c94:	2f78      	cmp	r7, #120	; 0x78
 8028c96:	4691      	mov	r9, r2
 8028c98:	4680      	mov	r8, r0
 8028c9a:	460c      	mov	r4, r1
 8028c9c:	469a      	mov	sl, r3
 8028c9e:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8028ca2:	d807      	bhi.n	8028cb4 <_printf_i+0x28>
 8028ca4:	2f62      	cmp	r7, #98	; 0x62
 8028ca6:	d80a      	bhi.n	8028cbe <_printf_i+0x32>
 8028ca8:	2f00      	cmp	r7, #0
 8028caa:	f000 80d4 	beq.w	8028e56 <_printf_i+0x1ca>
 8028cae:	2f58      	cmp	r7, #88	; 0x58
 8028cb0:	f000 80c0 	beq.w	8028e34 <_printf_i+0x1a8>
 8028cb4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8028cb8:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8028cbc:	e03a      	b.n	8028d34 <_printf_i+0xa8>
 8028cbe:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8028cc2:	2b15      	cmp	r3, #21
 8028cc4:	d8f6      	bhi.n	8028cb4 <_printf_i+0x28>
 8028cc6:	a101      	add	r1, pc, #4	; (adr r1, 8028ccc <_printf_i+0x40>)
 8028cc8:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8028ccc:	08028d25 	.word	0x08028d25
 8028cd0:	08028d39 	.word	0x08028d39
 8028cd4:	08028cb5 	.word	0x08028cb5
 8028cd8:	08028cb5 	.word	0x08028cb5
 8028cdc:	08028cb5 	.word	0x08028cb5
 8028ce0:	08028cb5 	.word	0x08028cb5
 8028ce4:	08028d39 	.word	0x08028d39
 8028ce8:	08028cb5 	.word	0x08028cb5
 8028cec:	08028cb5 	.word	0x08028cb5
 8028cf0:	08028cb5 	.word	0x08028cb5
 8028cf4:	08028cb5 	.word	0x08028cb5
 8028cf8:	08028e3d 	.word	0x08028e3d
 8028cfc:	08028d65 	.word	0x08028d65
 8028d00:	08028df7 	.word	0x08028df7
 8028d04:	08028cb5 	.word	0x08028cb5
 8028d08:	08028cb5 	.word	0x08028cb5
 8028d0c:	08028e5f 	.word	0x08028e5f
 8028d10:	08028cb5 	.word	0x08028cb5
 8028d14:	08028d65 	.word	0x08028d65
 8028d18:	08028cb5 	.word	0x08028cb5
 8028d1c:	08028cb5 	.word	0x08028cb5
 8028d20:	08028dff 	.word	0x08028dff
 8028d24:	682b      	ldr	r3, [r5, #0]
 8028d26:	1d1a      	adds	r2, r3, #4
 8028d28:	681b      	ldr	r3, [r3, #0]
 8028d2a:	602a      	str	r2, [r5, #0]
 8028d2c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8028d30:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8028d34:	2301      	movs	r3, #1
 8028d36:	e09f      	b.n	8028e78 <_printf_i+0x1ec>
 8028d38:	6820      	ldr	r0, [r4, #0]
 8028d3a:	682b      	ldr	r3, [r5, #0]
 8028d3c:	0607      	lsls	r7, r0, #24
 8028d3e:	f103 0104 	add.w	r1, r3, #4
 8028d42:	6029      	str	r1, [r5, #0]
 8028d44:	d501      	bpl.n	8028d4a <_printf_i+0xbe>
 8028d46:	681e      	ldr	r6, [r3, #0]
 8028d48:	e003      	b.n	8028d52 <_printf_i+0xc6>
 8028d4a:	0646      	lsls	r6, r0, #25
 8028d4c:	d5fb      	bpl.n	8028d46 <_printf_i+0xba>
 8028d4e:	f9b3 6000 	ldrsh.w	r6, [r3]
 8028d52:	2e00      	cmp	r6, #0
 8028d54:	da03      	bge.n	8028d5e <_printf_i+0xd2>
 8028d56:	232d      	movs	r3, #45	; 0x2d
 8028d58:	4276      	negs	r6, r6
 8028d5a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8028d5e:	485a      	ldr	r0, [pc, #360]	; (8028ec8 <_printf_i+0x23c>)
 8028d60:	230a      	movs	r3, #10
 8028d62:	e012      	b.n	8028d8a <_printf_i+0xfe>
 8028d64:	682b      	ldr	r3, [r5, #0]
 8028d66:	6820      	ldr	r0, [r4, #0]
 8028d68:	1d19      	adds	r1, r3, #4
 8028d6a:	6029      	str	r1, [r5, #0]
 8028d6c:	0605      	lsls	r5, r0, #24
 8028d6e:	d501      	bpl.n	8028d74 <_printf_i+0xe8>
 8028d70:	681e      	ldr	r6, [r3, #0]
 8028d72:	e002      	b.n	8028d7a <_printf_i+0xee>
 8028d74:	0641      	lsls	r1, r0, #25
 8028d76:	d5fb      	bpl.n	8028d70 <_printf_i+0xe4>
 8028d78:	881e      	ldrh	r6, [r3, #0]
 8028d7a:	4853      	ldr	r0, [pc, #332]	; (8028ec8 <_printf_i+0x23c>)
 8028d7c:	2f6f      	cmp	r7, #111	; 0x6f
 8028d7e:	bf0c      	ite	eq
 8028d80:	2308      	moveq	r3, #8
 8028d82:	230a      	movne	r3, #10
 8028d84:	2100      	movs	r1, #0
 8028d86:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8028d8a:	6865      	ldr	r5, [r4, #4]
 8028d8c:	60a5      	str	r5, [r4, #8]
 8028d8e:	2d00      	cmp	r5, #0
 8028d90:	bfa2      	ittt	ge
 8028d92:	6821      	ldrge	r1, [r4, #0]
 8028d94:	f021 0104 	bicge.w	r1, r1, #4
 8028d98:	6021      	strge	r1, [r4, #0]
 8028d9a:	b90e      	cbnz	r6, 8028da0 <_printf_i+0x114>
 8028d9c:	2d00      	cmp	r5, #0
 8028d9e:	d04b      	beq.n	8028e38 <_printf_i+0x1ac>
 8028da0:	4615      	mov	r5, r2
 8028da2:	fbb6 f1f3 	udiv	r1, r6, r3
 8028da6:	fb03 6711 	mls	r7, r3, r1, r6
 8028daa:	5dc7      	ldrb	r7, [r0, r7]
 8028dac:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8028db0:	4637      	mov	r7, r6
 8028db2:	42bb      	cmp	r3, r7
 8028db4:	460e      	mov	r6, r1
 8028db6:	d9f4      	bls.n	8028da2 <_printf_i+0x116>
 8028db8:	2b08      	cmp	r3, #8
 8028dba:	d10b      	bne.n	8028dd4 <_printf_i+0x148>
 8028dbc:	6823      	ldr	r3, [r4, #0]
 8028dbe:	07de      	lsls	r6, r3, #31
 8028dc0:	d508      	bpl.n	8028dd4 <_printf_i+0x148>
 8028dc2:	6923      	ldr	r3, [r4, #16]
 8028dc4:	6861      	ldr	r1, [r4, #4]
 8028dc6:	4299      	cmp	r1, r3
 8028dc8:	bfde      	ittt	le
 8028dca:	2330      	movle	r3, #48	; 0x30
 8028dcc:	f805 3c01 	strble.w	r3, [r5, #-1]
 8028dd0:	f105 35ff 	addle.w	r5, r5, #4294967295
 8028dd4:	1b52      	subs	r2, r2, r5
 8028dd6:	6122      	str	r2, [r4, #16]
 8028dd8:	f8cd a000 	str.w	sl, [sp]
 8028ddc:	464b      	mov	r3, r9
 8028dde:	aa03      	add	r2, sp, #12
 8028de0:	4621      	mov	r1, r4
 8028de2:	4640      	mov	r0, r8
 8028de4:	f7ff fee4 	bl	8028bb0 <_printf_common>
 8028de8:	3001      	adds	r0, #1
 8028dea:	d14a      	bne.n	8028e82 <_printf_i+0x1f6>
 8028dec:	f04f 30ff 	mov.w	r0, #4294967295
 8028df0:	b004      	add	sp, #16
 8028df2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8028df6:	6823      	ldr	r3, [r4, #0]
 8028df8:	f043 0320 	orr.w	r3, r3, #32
 8028dfc:	6023      	str	r3, [r4, #0]
 8028dfe:	4833      	ldr	r0, [pc, #204]	; (8028ecc <_printf_i+0x240>)
 8028e00:	2778      	movs	r7, #120	; 0x78
 8028e02:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8028e06:	6823      	ldr	r3, [r4, #0]
 8028e08:	6829      	ldr	r1, [r5, #0]
 8028e0a:	061f      	lsls	r7, r3, #24
 8028e0c:	f851 6b04 	ldr.w	r6, [r1], #4
 8028e10:	d402      	bmi.n	8028e18 <_printf_i+0x18c>
 8028e12:	065f      	lsls	r7, r3, #25
 8028e14:	bf48      	it	mi
 8028e16:	b2b6      	uxthmi	r6, r6
 8028e18:	07df      	lsls	r7, r3, #31
 8028e1a:	bf48      	it	mi
 8028e1c:	f043 0320 	orrmi.w	r3, r3, #32
 8028e20:	6029      	str	r1, [r5, #0]
 8028e22:	bf48      	it	mi
 8028e24:	6023      	strmi	r3, [r4, #0]
 8028e26:	b91e      	cbnz	r6, 8028e30 <_printf_i+0x1a4>
 8028e28:	6823      	ldr	r3, [r4, #0]
 8028e2a:	f023 0320 	bic.w	r3, r3, #32
 8028e2e:	6023      	str	r3, [r4, #0]
 8028e30:	2310      	movs	r3, #16
 8028e32:	e7a7      	b.n	8028d84 <_printf_i+0xf8>
 8028e34:	4824      	ldr	r0, [pc, #144]	; (8028ec8 <_printf_i+0x23c>)
 8028e36:	e7e4      	b.n	8028e02 <_printf_i+0x176>
 8028e38:	4615      	mov	r5, r2
 8028e3a:	e7bd      	b.n	8028db8 <_printf_i+0x12c>
 8028e3c:	682b      	ldr	r3, [r5, #0]
 8028e3e:	6826      	ldr	r6, [r4, #0]
 8028e40:	6961      	ldr	r1, [r4, #20]
 8028e42:	1d18      	adds	r0, r3, #4
 8028e44:	6028      	str	r0, [r5, #0]
 8028e46:	0635      	lsls	r5, r6, #24
 8028e48:	681b      	ldr	r3, [r3, #0]
 8028e4a:	d501      	bpl.n	8028e50 <_printf_i+0x1c4>
 8028e4c:	6019      	str	r1, [r3, #0]
 8028e4e:	e002      	b.n	8028e56 <_printf_i+0x1ca>
 8028e50:	0670      	lsls	r0, r6, #25
 8028e52:	d5fb      	bpl.n	8028e4c <_printf_i+0x1c0>
 8028e54:	8019      	strh	r1, [r3, #0]
 8028e56:	2300      	movs	r3, #0
 8028e58:	6123      	str	r3, [r4, #16]
 8028e5a:	4615      	mov	r5, r2
 8028e5c:	e7bc      	b.n	8028dd8 <_printf_i+0x14c>
 8028e5e:	682b      	ldr	r3, [r5, #0]
 8028e60:	1d1a      	adds	r2, r3, #4
 8028e62:	602a      	str	r2, [r5, #0]
 8028e64:	681d      	ldr	r5, [r3, #0]
 8028e66:	6862      	ldr	r2, [r4, #4]
 8028e68:	2100      	movs	r1, #0
 8028e6a:	4628      	mov	r0, r5
 8028e6c:	f7d7 f9c0 	bl	80001f0 <memchr>
 8028e70:	b108      	cbz	r0, 8028e76 <_printf_i+0x1ea>
 8028e72:	1b40      	subs	r0, r0, r5
 8028e74:	6060      	str	r0, [r4, #4]
 8028e76:	6863      	ldr	r3, [r4, #4]
 8028e78:	6123      	str	r3, [r4, #16]
 8028e7a:	2300      	movs	r3, #0
 8028e7c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8028e80:	e7aa      	b.n	8028dd8 <_printf_i+0x14c>
 8028e82:	6923      	ldr	r3, [r4, #16]
 8028e84:	462a      	mov	r2, r5
 8028e86:	4649      	mov	r1, r9
 8028e88:	4640      	mov	r0, r8
 8028e8a:	47d0      	blx	sl
 8028e8c:	3001      	adds	r0, #1
 8028e8e:	d0ad      	beq.n	8028dec <_printf_i+0x160>
 8028e90:	6823      	ldr	r3, [r4, #0]
 8028e92:	079b      	lsls	r3, r3, #30
 8028e94:	d413      	bmi.n	8028ebe <_printf_i+0x232>
 8028e96:	68e0      	ldr	r0, [r4, #12]
 8028e98:	9b03      	ldr	r3, [sp, #12]
 8028e9a:	4298      	cmp	r0, r3
 8028e9c:	bfb8      	it	lt
 8028e9e:	4618      	movlt	r0, r3
 8028ea0:	e7a6      	b.n	8028df0 <_printf_i+0x164>
 8028ea2:	2301      	movs	r3, #1
 8028ea4:	4632      	mov	r2, r6
 8028ea6:	4649      	mov	r1, r9
 8028ea8:	4640      	mov	r0, r8
 8028eaa:	47d0      	blx	sl
 8028eac:	3001      	adds	r0, #1
 8028eae:	d09d      	beq.n	8028dec <_printf_i+0x160>
 8028eb0:	3501      	adds	r5, #1
 8028eb2:	68e3      	ldr	r3, [r4, #12]
 8028eb4:	9903      	ldr	r1, [sp, #12]
 8028eb6:	1a5b      	subs	r3, r3, r1
 8028eb8:	42ab      	cmp	r3, r5
 8028eba:	dcf2      	bgt.n	8028ea2 <_printf_i+0x216>
 8028ebc:	e7eb      	b.n	8028e96 <_printf_i+0x20a>
 8028ebe:	2500      	movs	r5, #0
 8028ec0:	f104 0619 	add.w	r6, r4, #25
 8028ec4:	e7f5      	b.n	8028eb2 <_printf_i+0x226>
 8028ec6:	bf00      	nop
 8028ec8:	0802d3a9 	.word	0x0802d3a9
 8028ecc:	0802d3ba 	.word	0x0802d3ba

08028ed0 <__sflush_r>:
 8028ed0:	898a      	ldrh	r2, [r1, #12]
 8028ed2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028ed6:	4605      	mov	r5, r0
 8028ed8:	0710      	lsls	r0, r2, #28
 8028eda:	460c      	mov	r4, r1
 8028edc:	d458      	bmi.n	8028f90 <__sflush_r+0xc0>
 8028ede:	684b      	ldr	r3, [r1, #4]
 8028ee0:	2b00      	cmp	r3, #0
 8028ee2:	dc05      	bgt.n	8028ef0 <__sflush_r+0x20>
 8028ee4:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8028ee6:	2b00      	cmp	r3, #0
 8028ee8:	dc02      	bgt.n	8028ef0 <__sflush_r+0x20>
 8028eea:	2000      	movs	r0, #0
 8028eec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028ef0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8028ef2:	2e00      	cmp	r6, #0
 8028ef4:	d0f9      	beq.n	8028eea <__sflush_r+0x1a>
 8028ef6:	2300      	movs	r3, #0
 8028ef8:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8028efc:	682f      	ldr	r7, [r5, #0]
 8028efe:	6a21      	ldr	r1, [r4, #32]
 8028f00:	602b      	str	r3, [r5, #0]
 8028f02:	d032      	beq.n	8028f6a <__sflush_r+0x9a>
 8028f04:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8028f06:	89a3      	ldrh	r3, [r4, #12]
 8028f08:	075a      	lsls	r2, r3, #29
 8028f0a:	d505      	bpl.n	8028f18 <__sflush_r+0x48>
 8028f0c:	6863      	ldr	r3, [r4, #4]
 8028f0e:	1ac0      	subs	r0, r0, r3
 8028f10:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8028f12:	b10b      	cbz	r3, 8028f18 <__sflush_r+0x48>
 8028f14:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8028f16:	1ac0      	subs	r0, r0, r3
 8028f18:	2300      	movs	r3, #0
 8028f1a:	4602      	mov	r2, r0
 8028f1c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8028f1e:	6a21      	ldr	r1, [r4, #32]
 8028f20:	4628      	mov	r0, r5
 8028f22:	47b0      	blx	r6
 8028f24:	1c43      	adds	r3, r0, #1
 8028f26:	89a3      	ldrh	r3, [r4, #12]
 8028f28:	d106      	bne.n	8028f38 <__sflush_r+0x68>
 8028f2a:	6829      	ldr	r1, [r5, #0]
 8028f2c:	291d      	cmp	r1, #29
 8028f2e:	d82b      	bhi.n	8028f88 <__sflush_r+0xb8>
 8028f30:	4a29      	ldr	r2, [pc, #164]	; (8028fd8 <__sflush_r+0x108>)
 8028f32:	410a      	asrs	r2, r1
 8028f34:	07d6      	lsls	r6, r2, #31
 8028f36:	d427      	bmi.n	8028f88 <__sflush_r+0xb8>
 8028f38:	2200      	movs	r2, #0
 8028f3a:	6062      	str	r2, [r4, #4]
 8028f3c:	04d9      	lsls	r1, r3, #19
 8028f3e:	6922      	ldr	r2, [r4, #16]
 8028f40:	6022      	str	r2, [r4, #0]
 8028f42:	d504      	bpl.n	8028f4e <__sflush_r+0x7e>
 8028f44:	1c42      	adds	r2, r0, #1
 8028f46:	d101      	bne.n	8028f4c <__sflush_r+0x7c>
 8028f48:	682b      	ldr	r3, [r5, #0]
 8028f4a:	b903      	cbnz	r3, 8028f4e <__sflush_r+0x7e>
 8028f4c:	6560      	str	r0, [r4, #84]	; 0x54
 8028f4e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8028f50:	602f      	str	r7, [r5, #0]
 8028f52:	2900      	cmp	r1, #0
 8028f54:	d0c9      	beq.n	8028eea <__sflush_r+0x1a>
 8028f56:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8028f5a:	4299      	cmp	r1, r3
 8028f5c:	d002      	beq.n	8028f64 <__sflush_r+0x94>
 8028f5e:	4628      	mov	r0, r5
 8028f60:	f7ff fc96 	bl	8028890 <_free_r>
 8028f64:	2000      	movs	r0, #0
 8028f66:	6360      	str	r0, [r4, #52]	; 0x34
 8028f68:	e7c0      	b.n	8028eec <__sflush_r+0x1c>
 8028f6a:	2301      	movs	r3, #1
 8028f6c:	4628      	mov	r0, r5
 8028f6e:	47b0      	blx	r6
 8028f70:	1c41      	adds	r1, r0, #1
 8028f72:	d1c8      	bne.n	8028f06 <__sflush_r+0x36>
 8028f74:	682b      	ldr	r3, [r5, #0]
 8028f76:	2b00      	cmp	r3, #0
 8028f78:	d0c5      	beq.n	8028f06 <__sflush_r+0x36>
 8028f7a:	2b1d      	cmp	r3, #29
 8028f7c:	d001      	beq.n	8028f82 <__sflush_r+0xb2>
 8028f7e:	2b16      	cmp	r3, #22
 8028f80:	d101      	bne.n	8028f86 <__sflush_r+0xb6>
 8028f82:	602f      	str	r7, [r5, #0]
 8028f84:	e7b1      	b.n	8028eea <__sflush_r+0x1a>
 8028f86:	89a3      	ldrh	r3, [r4, #12]
 8028f88:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8028f8c:	81a3      	strh	r3, [r4, #12]
 8028f8e:	e7ad      	b.n	8028eec <__sflush_r+0x1c>
 8028f90:	690f      	ldr	r7, [r1, #16]
 8028f92:	2f00      	cmp	r7, #0
 8028f94:	d0a9      	beq.n	8028eea <__sflush_r+0x1a>
 8028f96:	0793      	lsls	r3, r2, #30
 8028f98:	680e      	ldr	r6, [r1, #0]
 8028f9a:	bf08      	it	eq
 8028f9c:	694b      	ldreq	r3, [r1, #20]
 8028f9e:	600f      	str	r7, [r1, #0]
 8028fa0:	bf18      	it	ne
 8028fa2:	2300      	movne	r3, #0
 8028fa4:	eba6 0807 	sub.w	r8, r6, r7
 8028fa8:	608b      	str	r3, [r1, #8]
 8028faa:	f1b8 0f00 	cmp.w	r8, #0
 8028fae:	dd9c      	ble.n	8028eea <__sflush_r+0x1a>
 8028fb0:	6a21      	ldr	r1, [r4, #32]
 8028fb2:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8028fb4:	4643      	mov	r3, r8
 8028fb6:	463a      	mov	r2, r7
 8028fb8:	4628      	mov	r0, r5
 8028fba:	47b0      	blx	r6
 8028fbc:	2800      	cmp	r0, #0
 8028fbe:	dc06      	bgt.n	8028fce <__sflush_r+0xfe>
 8028fc0:	89a3      	ldrh	r3, [r4, #12]
 8028fc2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8028fc6:	81a3      	strh	r3, [r4, #12]
 8028fc8:	f04f 30ff 	mov.w	r0, #4294967295
 8028fcc:	e78e      	b.n	8028eec <__sflush_r+0x1c>
 8028fce:	4407      	add	r7, r0
 8028fd0:	eba8 0800 	sub.w	r8, r8, r0
 8028fd4:	e7e9      	b.n	8028faa <__sflush_r+0xda>
 8028fd6:	bf00      	nop
 8028fd8:	dfbffffe 	.word	0xdfbffffe

08028fdc <_fflush_r>:
 8028fdc:	b538      	push	{r3, r4, r5, lr}
 8028fde:	690b      	ldr	r3, [r1, #16]
 8028fe0:	4605      	mov	r5, r0
 8028fe2:	460c      	mov	r4, r1
 8028fe4:	b913      	cbnz	r3, 8028fec <_fflush_r+0x10>
 8028fe6:	2500      	movs	r5, #0
 8028fe8:	4628      	mov	r0, r5
 8028fea:	bd38      	pop	{r3, r4, r5, pc}
 8028fec:	b118      	cbz	r0, 8028ff6 <_fflush_r+0x1a>
 8028fee:	6a03      	ldr	r3, [r0, #32]
 8028ff0:	b90b      	cbnz	r3, 8028ff6 <_fflush_r+0x1a>
 8028ff2:	f7ff fa2f 	bl	8028454 <__sinit>
 8028ff6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8028ffa:	2b00      	cmp	r3, #0
 8028ffc:	d0f3      	beq.n	8028fe6 <_fflush_r+0xa>
 8028ffe:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8029000:	07d0      	lsls	r0, r2, #31
 8029002:	d404      	bmi.n	802900e <_fflush_r+0x32>
 8029004:	0599      	lsls	r1, r3, #22
 8029006:	d402      	bmi.n	802900e <_fflush_r+0x32>
 8029008:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802900a:	f7ff fbd2 	bl	80287b2 <__retarget_lock_acquire_recursive>
 802900e:	4628      	mov	r0, r5
 8029010:	4621      	mov	r1, r4
 8029012:	f7ff ff5d 	bl	8028ed0 <__sflush_r>
 8029016:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8029018:	07da      	lsls	r2, r3, #31
 802901a:	4605      	mov	r5, r0
 802901c:	d4e4      	bmi.n	8028fe8 <_fflush_r+0xc>
 802901e:	89a3      	ldrh	r3, [r4, #12]
 8029020:	059b      	lsls	r3, r3, #22
 8029022:	d4e1      	bmi.n	8028fe8 <_fflush_r+0xc>
 8029024:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8029026:	f7ff fbc5 	bl	80287b4 <__retarget_lock_release_recursive>
 802902a:	e7dd      	b.n	8028fe8 <_fflush_r+0xc>

0802902c <__swbuf_r>:
 802902c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802902e:	460e      	mov	r6, r1
 8029030:	4614      	mov	r4, r2
 8029032:	4605      	mov	r5, r0
 8029034:	b118      	cbz	r0, 802903e <__swbuf_r+0x12>
 8029036:	6a03      	ldr	r3, [r0, #32]
 8029038:	b90b      	cbnz	r3, 802903e <__swbuf_r+0x12>
 802903a:	f7ff fa0b 	bl	8028454 <__sinit>
 802903e:	69a3      	ldr	r3, [r4, #24]
 8029040:	60a3      	str	r3, [r4, #8]
 8029042:	89a3      	ldrh	r3, [r4, #12]
 8029044:	071a      	lsls	r2, r3, #28
 8029046:	d525      	bpl.n	8029094 <__swbuf_r+0x68>
 8029048:	6923      	ldr	r3, [r4, #16]
 802904a:	b31b      	cbz	r3, 8029094 <__swbuf_r+0x68>
 802904c:	6823      	ldr	r3, [r4, #0]
 802904e:	6922      	ldr	r2, [r4, #16]
 8029050:	1a98      	subs	r0, r3, r2
 8029052:	6963      	ldr	r3, [r4, #20]
 8029054:	b2f6      	uxtb	r6, r6
 8029056:	4283      	cmp	r3, r0
 8029058:	4637      	mov	r7, r6
 802905a:	dc04      	bgt.n	8029066 <__swbuf_r+0x3a>
 802905c:	4621      	mov	r1, r4
 802905e:	4628      	mov	r0, r5
 8029060:	f7ff ffbc 	bl	8028fdc <_fflush_r>
 8029064:	b9e0      	cbnz	r0, 80290a0 <__swbuf_r+0x74>
 8029066:	68a3      	ldr	r3, [r4, #8]
 8029068:	3b01      	subs	r3, #1
 802906a:	60a3      	str	r3, [r4, #8]
 802906c:	6823      	ldr	r3, [r4, #0]
 802906e:	1c5a      	adds	r2, r3, #1
 8029070:	6022      	str	r2, [r4, #0]
 8029072:	701e      	strb	r6, [r3, #0]
 8029074:	6962      	ldr	r2, [r4, #20]
 8029076:	1c43      	adds	r3, r0, #1
 8029078:	429a      	cmp	r2, r3
 802907a:	d004      	beq.n	8029086 <__swbuf_r+0x5a>
 802907c:	89a3      	ldrh	r3, [r4, #12]
 802907e:	07db      	lsls	r3, r3, #31
 8029080:	d506      	bpl.n	8029090 <__swbuf_r+0x64>
 8029082:	2e0a      	cmp	r6, #10
 8029084:	d104      	bne.n	8029090 <__swbuf_r+0x64>
 8029086:	4621      	mov	r1, r4
 8029088:	4628      	mov	r0, r5
 802908a:	f7ff ffa7 	bl	8028fdc <_fflush_r>
 802908e:	b938      	cbnz	r0, 80290a0 <__swbuf_r+0x74>
 8029090:	4638      	mov	r0, r7
 8029092:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8029094:	4621      	mov	r1, r4
 8029096:	4628      	mov	r0, r5
 8029098:	f000 f806 	bl	80290a8 <__swsetup_r>
 802909c:	2800      	cmp	r0, #0
 802909e:	d0d5      	beq.n	802904c <__swbuf_r+0x20>
 80290a0:	f04f 37ff 	mov.w	r7, #4294967295
 80290a4:	e7f4      	b.n	8029090 <__swbuf_r+0x64>
	...

080290a8 <__swsetup_r>:
 80290a8:	b538      	push	{r3, r4, r5, lr}
 80290aa:	4b2a      	ldr	r3, [pc, #168]	; (8029154 <__swsetup_r+0xac>)
 80290ac:	4605      	mov	r5, r0
 80290ae:	6818      	ldr	r0, [r3, #0]
 80290b0:	460c      	mov	r4, r1
 80290b2:	b118      	cbz	r0, 80290bc <__swsetup_r+0x14>
 80290b4:	6a03      	ldr	r3, [r0, #32]
 80290b6:	b90b      	cbnz	r3, 80290bc <__swsetup_r+0x14>
 80290b8:	f7ff f9cc 	bl	8028454 <__sinit>
 80290bc:	89a3      	ldrh	r3, [r4, #12]
 80290be:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80290c2:	0718      	lsls	r0, r3, #28
 80290c4:	d422      	bmi.n	802910c <__swsetup_r+0x64>
 80290c6:	06d9      	lsls	r1, r3, #27
 80290c8:	d407      	bmi.n	80290da <__swsetup_r+0x32>
 80290ca:	2309      	movs	r3, #9
 80290cc:	602b      	str	r3, [r5, #0]
 80290ce:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80290d2:	81a3      	strh	r3, [r4, #12]
 80290d4:	f04f 30ff 	mov.w	r0, #4294967295
 80290d8:	e034      	b.n	8029144 <__swsetup_r+0x9c>
 80290da:	0758      	lsls	r0, r3, #29
 80290dc:	d512      	bpl.n	8029104 <__swsetup_r+0x5c>
 80290de:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80290e0:	b141      	cbz	r1, 80290f4 <__swsetup_r+0x4c>
 80290e2:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80290e6:	4299      	cmp	r1, r3
 80290e8:	d002      	beq.n	80290f0 <__swsetup_r+0x48>
 80290ea:	4628      	mov	r0, r5
 80290ec:	f7ff fbd0 	bl	8028890 <_free_r>
 80290f0:	2300      	movs	r3, #0
 80290f2:	6363      	str	r3, [r4, #52]	; 0x34
 80290f4:	89a3      	ldrh	r3, [r4, #12]
 80290f6:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80290fa:	81a3      	strh	r3, [r4, #12]
 80290fc:	2300      	movs	r3, #0
 80290fe:	6063      	str	r3, [r4, #4]
 8029100:	6923      	ldr	r3, [r4, #16]
 8029102:	6023      	str	r3, [r4, #0]
 8029104:	89a3      	ldrh	r3, [r4, #12]
 8029106:	f043 0308 	orr.w	r3, r3, #8
 802910a:	81a3      	strh	r3, [r4, #12]
 802910c:	6923      	ldr	r3, [r4, #16]
 802910e:	b94b      	cbnz	r3, 8029124 <__swsetup_r+0x7c>
 8029110:	89a3      	ldrh	r3, [r4, #12]
 8029112:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8029116:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 802911a:	d003      	beq.n	8029124 <__swsetup_r+0x7c>
 802911c:	4621      	mov	r1, r4
 802911e:	4628      	mov	r0, r5
 8029120:	f000 f840 	bl	80291a4 <__smakebuf_r>
 8029124:	89a0      	ldrh	r0, [r4, #12]
 8029126:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802912a:	f010 0301 	ands.w	r3, r0, #1
 802912e:	d00a      	beq.n	8029146 <__swsetup_r+0x9e>
 8029130:	2300      	movs	r3, #0
 8029132:	60a3      	str	r3, [r4, #8]
 8029134:	6963      	ldr	r3, [r4, #20]
 8029136:	425b      	negs	r3, r3
 8029138:	61a3      	str	r3, [r4, #24]
 802913a:	6923      	ldr	r3, [r4, #16]
 802913c:	b943      	cbnz	r3, 8029150 <__swsetup_r+0xa8>
 802913e:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8029142:	d1c4      	bne.n	80290ce <__swsetup_r+0x26>
 8029144:	bd38      	pop	{r3, r4, r5, pc}
 8029146:	0781      	lsls	r1, r0, #30
 8029148:	bf58      	it	pl
 802914a:	6963      	ldrpl	r3, [r4, #20]
 802914c:	60a3      	str	r3, [r4, #8]
 802914e:	e7f4      	b.n	802913a <__swsetup_r+0x92>
 8029150:	2000      	movs	r0, #0
 8029152:	e7f7      	b.n	8029144 <__swsetup_r+0x9c>
 8029154:	20000160 	.word	0x20000160

08029158 <__swhatbuf_r>:
 8029158:	b570      	push	{r4, r5, r6, lr}
 802915a:	460c      	mov	r4, r1
 802915c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8029160:	2900      	cmp	r1, #0
 8029162:	b096      	sub	sp, #88	; 0x58
 8029164:	4615      	mov	r5, r2
 8029166:	461e      	mov	r6, r3
 8029168:	da0d      	bge.n	8029186 <__swhatbuf_r+0x2e>
 802916a:	89a3      	ldrh	r3, [r4, #12]
 802916c:	f013 0f80 	tst.w	r3, #128	; 0x80
 8029170:	f04f 0100 	mov.w	r1, #0
 8029174:	bf0c      	ite	eq
 8029176:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 802917a:	2340      	movne	r3, #64	; 0x40
 802917c:	2000      	movs	r0, #0
 802917e:	6031      	str	r1, [r6, #0]
 8029180:	602b      	str	r3, [r5, #0]
 8029182:	b016      	add	sp, #88	; 0x58
 8029184:	bd70      	pop	{r4, r5, r6, pc}
 8029186:	466a      	mov	r2, sp
 8029188:	f000 f848 	bl	802921c <_fstat_r>
 802918c:	2800      	cmp	r0, #0
 802918e:	dbec      	blt.n	802916a <__swhatbuf_r+0x12>
 8029190:	9901      	ldr	r1, [sp, #4]
 8029192:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 8029196:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 802919a:	4259      	negs	r1, r3
 802919c:	4159      	adcs	r1, r3
 802919e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80291a2:	e7eb      	b.n	802917c <__swhatbuf_r+0x24>

080291a4 <__smakebuf_r>:
 80291a4:	898b      	ldrh	r3, [r1, #12]
 80291a6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80291a8:	079d      	lsls	r5, r3, #30
 80291aa:	4606      	mov	r6, r0
 80291ac:	460c      	mov	r4, r1
 80291ae:	d507      	bpl.n	80291c0 <__smakebuf_r+0x1c>
 80291b0:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80291b4:	6023      	str	r3, [r4, #0]
 80291b6:	6123      	str	r3, [r4, #16]
 80291b8:	2301      	movs	r3, #1
 80291ba:	6163      	str	r3, [r4, #20]
 80291bc:	b002      	add	sp, #8
 80291be:	bd70      	pop	{r4, r5, r6, pc}
 80291c0:	ab01      	add	r3, sp, #4
 80291c2:	466a      	mov	r2, sp
 80291c4:	f7ff ffc8 	bl	8029158 <__swhatbuf_r>
 80291c8:	9900      	ldr	r1, [sp, #0]
 80291ca:	4605      	mov	r5, r0
 80291cc:	4630      	mov	r0, r6
 80291ce:	f7ff f81b 	bl	8028208 <_malloc_r>
 80291d2:	b948      	cbnz	r0, 80291e8 <__smakebuf_r+0x44>
 80291d4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80291d8:	059a      	lsls	r2, r3, #22
 80291da:	d4ef      	bmi.n	80291bc <__smakebuf_r+0x18>
 80291dc:	f023 0303 	bic.w	r3, r3, #3
 80291e0:	f043 0302 	orr.w	r3, r3, #2
 80291e4:	81a3      	strh	r3, [r4, #12]
 80291e6:	e7e3      	b.n	80291b0 <__smakebuf_r+0xc>
 80291e8:	89a3      	ldrh	r3, [r4, #12]
 80291ea:	6020      	str	r0, [r4, #0]
 80291ec:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80291f0:	81a3      	strh	r3, [r4, #12]
 80291f2:	9b00      	ldr	r3, [sp, #0]
 80291f4:	6163      	str	r3, [r4, #20]
 80291f6:	9b01      	ldr	r3, [sp, #4]
 80291f8:	6120      	str	r0, [r4, #16]
 80291fa:	b15b      	cbz	r3, 8029214 <__smakebuf_r+0x70>
 80291fc:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8029200:	4630      	mov	r0, r6
 8029202:	f000 f81d 	bl	8029240 <_isatty_r>
 8029206:	b128      	cbz	r0, 8029214 <__smakebuf_r+0x70>
 8029208:	89a3      	ldrh	r3, [r4, #12]
 802920a:	f023 0303 	bic.w	r3, r3, #3
 802920e:	f043 0301 	orr.w	r3, r3, #1
 8029212:	81a3      	strh	r3, [r4, #12]
 8029214:	89a3      	ldrh	r3, [r4, #12]
 8029216:	431d      	orrs	r5, r3
 8029218:	81a5      	strh	r5, [r4, #12]
 802921a:	e7cf      	b.n	80291bc <__smakebuf_r+0x18>

0802921c <_fstat_r>:
 802921c:	b538      	push	{r3, r4, r5, lr}
 802921e:	4d07      	ldr	r5, [pc, #28]	; (802923c <_fstat_r+0x20>)
 8029220:	2300      	movs	r3, #0
 8029222:	4604      	mov	r4, r0
 8029224:	4608      	mov	r0, r1
 8029226:	4611      	mov	r1, r2
 8029228:	602b      	str	r3, [r5, #0]
 802922a:	f7d8 ffe1 	bl	80021f0 <_fstat>
 802922e:	1c43      	adds	r3, r0, #1
 8029230:	d102      	bne.n	8029238 <_fstat_r+0x1c>
 8029232:	682b      	ldr	r3, [r5, #0]
 8029234:	b103      	cbz	r3, 8029238 <_fstat_r+0x1c>
 8029236:	6023      	str	r3, [r4, #0]
 8029238:	bd38      	pop	{r3, r4, r5, pc}
 802923a:	bf00      	nop
 802923c:	20014254 	.word	0x20014254

08029240 <_isatty_r>:
 8029240:	b538      	push	{r3, r4, r5, lr}
 8029242:	4d06      	ldr	r5, [pc, #24]	; (802925c <_isatty_r+0x1c>)
 8029244:	2300      	movs	r3, #0
 8029246:	4604      	mov	r4, r0
 8029248:	4608      	mov	r0, r1
 802924a:	602b      	str	r3, [r5, #0]
 802924c:	f7d8 ffd6 	bl	80021fc <_isatty>
 8029250:	1c43      	adds	r3, r0, #1
 8029252:	d102      	bne.n	802925a <_isatty_r+0x1a>
 8029254:	682b      	ldr	r3, [r5, #0]
 8029256:	b103      	cbz	r3, 802925a <_isatty_r+0x1a>
 8029258:	6023      	str	r3, [r4, #0]
 802925a:	bd38      	pop	{r3, r4, r5, pc}
 802925c:	20014254 	.word	0x20014254

08029260 <_init>:
 8029260:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8029262:	bf00      	nop
 8029264:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8029266:	bc08      	pop	{r3}
 8029268:	469e      	mov	lr, r3
 802926a:	4770      	bx	lr

0802926c <_fini>:
 802926c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802926e:	bf00      	nop
 8029270:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8029272:	bc08      	pop	{r3}
 8029274:	469e      	mov	lr, r3
 8029276:	4770      	bx	lr
